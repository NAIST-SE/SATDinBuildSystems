{
  "Repository" : "92461",
  "Revision" : "HEAD",
  "ObjectId" : "04c6ff1f448589c32daa9c9a0fec2f92108f622b",
  "CommitTime" : "2018-12-20T15:16:28Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "c52d2330257bf2763cdc5f6fc77ba0cea8b01100",
      "LastModified" : "2018-10-31T11:16:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Request C++11 standard, using new CMake variables.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set symbol visibility defaults for all targets.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set up our version.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Before any plugins are defined, and before any add_subdirectory calls:\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# SKBUILD is set for binary wheel\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# After all add_subdirectory calls, so the list of plugins is complete:\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# SKBUILD is set for binary wheel\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "f0e725a577a41cb6b03d2383fcb245c4fe44db2c",
      "LastModified" : "2012-05-01T22:14:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/CMakeLists.txt" : {
      "ObjectId" : "b66fb2011b316dd085a286b2c3c878451aabc3b7",
      "LastModified" : "2018-10-31T11:16:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use the new AUTOMOC support for Qt libraries (CMake 2.8.6).\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Generate the necessary export headers.\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Now install everything.\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# SKBUILD is set for binary wheel\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# For MACOSX\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# SKBUILD is set for binary wheel\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "avogadro/command/CMakeLists.txt" : {
      "ObjectId" : "d6cd7e97037eb0cf04b848442ce0fed121a76a62",
      "LastModified" : "2014-07-25T14:30:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/core/CMakeLists.txt" : {
      "ObjectId" : "eb7f9963d385081ea5086fe70608bbeb2d8a32c3",
      "LastModified" : "2018-07-25T18:17:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add as \"system headers\" to avoid warnings generated by them with\n\n# compilers that support that notion.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# configure the version header\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "avogadro/io/CMakeLists.txt" : {
      "ObjectId" : "dec9b7b90e415c4596146ad813811127499d4192",
      "LastModified" : "2018-08-29T13:40:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# HDF5 is built in two ways (CMake or its default build system). If we are\n\n# using the CMake version it makes use of exported targets, hence this check.\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Add as \"system headers\" to avoid warnings generated by them with\n\n# compilers that support that notion.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The smart pointer classes just require headers.\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "avogadro/molequeue/CMakeLists.txt" : {
      "ObjectId" : "37431cd3004f1de96fd1bdeaa0182928d777b347",
      "LastModified" : "2018-04-17T18:20:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pull in MoleQueue\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add as \"system headers\" to avoid warnings generated by them with\n\n# compilers that support that notion.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "avogadro/protocall/CMakeLists.txt" : {
      "ObjectId" : "96888d8de6fc85a6a0d9597278ca21b4c8724b05",
      "LastModified" : "2013-07-02T22:16:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtgui/CMakeLists.txt" : {
      "ObjectId" : "7e0e2a823db4c53be5e7c9db8546ae7d5b8cb71d",
      "LastModified" : "2018-09-14T17:46:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add as \"system headers\" to avoid warnings generated by them with\n\n# compilers that support that notion.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Provide some simple API to find the plugins, scripts, etc.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# It is a special case, the app bundle logic breaks the relative pathing.\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Find python2 for input generator scripts:\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "avogadro/qtopengl/CMakeLists.txt" : {
      "ObjectId" : "e66dc41bf4262ef261ccb758d71c6ed0f6b44c45",
      "LastModified" : "2018-09-14T17:46:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add as \"system headers\" to avoid warnings generated by them with\n\n# compilers that support that notion.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "avogadro/qtplugins/3dmol/CMakeLists.txt" : {
      "ObjectId" : "3e27cf36340af7c248c8f3a3d6ac832db358dac5",
      "LastModified" : "2018-04-17T18:20:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/CMakeLists.txt" : {
      "ObjectId" : "812dd207c40d44410b1e8da395802119e067ff28",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Modify the output directory for the build tree.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Optionally build all plugins statically.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Allow GPL plugins to be disabled.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create a plugin for Avogadro.\n\n# name is the name of the plugin, this will be the name of the target created.\n\n# description Free text description of the plugin.\n\n# type The base class of the plugin.\n\n# header is the header(s) for the class to be instantiated for the plugin.\n\n# pluginClass is the class to be instantiated for the plugin.\n\n# sources is the list of source files for the plugin.\n\n# uis is the list of UI files that need to be compiled (optional).\n\n# rcs is the list of qrc files that need to be compiled (optional).\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Figure out which type of plugin is being added, and put it in the right list\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Need -fPIC for static plugins linked to shared libs on Unix.\n",
        "Line" : 80,
        "CharPositionInLine" : 13
      },
      "6" : {
        "Text" : "# Now to make the plugins.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The scene plugins\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# qtaimcurvature.h/cpp contains GPL licensed code:\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Add all of the static plugins to the initialization file.\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Configure the static plugin header, ensuring it only changes if the contents\n\n# are modified - otherwise the original timestamp will be maintained.\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Now to build the plugin library, which can also statically link plugins\n\n# and initialize them for the application. If Avogadro is built statically\n\n# then the static plugin header must be included by the application.\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "avogadro/qtplugins/apbs/CMakeLists.txt" : {
      "ObjectId" : "e6aad6bad0da8b601e6ca700a35f5f043fd4a7ad",
      "LastModified" : "2018-04-17T18:20:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pull in MoleQueue (needed for QtJson)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "avogadro/qtplugins/ballandstick/CMakeLists.txt" : {
      "ObjectId" : "c622fd415ec36bc33907cb710a37fccff4b783a3",
      "LastModified" : "2018-04-17T18:20:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/bondcentrictool/CMakeLists.txt" : {
      "ObjectId" : "e1308fef735cef94a89b69beb8ea1c693649c7ab",
      "LastModified" : "2018-04-17T18:20:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/bonding/CMakeLists.txt" : {
      "ObjectId" : "fcc067eb509dcef6b5bd020a9feca0c24b8a6582",
      "LastModified" : "2018-09-14T17:46:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/clientserver/CMakeLists.txt" : {
      "ObjectId" : "3042ff122eb6201b42424aae5ef3eb7d9b3bb618",
      "LastModified" : "2018-04-17T18:20:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build server\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build plugin\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "avogadro/qtplugins/commandscripts/CMakeLists.txt" : {
      "ObjectId" : "5120680855cbdc84e4cad52992a106d7c315f9c0",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Needed to find avogadroioexport.h:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Extension\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Bundled command scripts\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "avogadro/qtplugins/coordinateeditor/CMakeLists.txt" : {
      "ObjectId" : "12d87dd7940c16952a902504f10d69ab3c624911",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/copypaste/CMakeLists.txt" : {
      "ObjectId" : "d8dc2ee9c891d0caaad896cf3040a0f0eb20aaef",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/crystal/CMakeLists.txt" : {
      "ObjectId" : "848fffb9c084541a9464f6a13b379186cc0cc3eb",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/customelements/CMakeLists.txt" : {
      "ObjectId" : "c405001fd75a1a1db656c3122a3e8a590c75c5e4",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/editor/CMakeLists.txt" : {
      "ObjectId" : "246713b1d8c6b59678383a081befbbdc6cee9198",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/force/CMakeLists.txt" : {
      "ObjectId" : "d38c82201ad774ab11547a13b6d7d022ce5b38f5",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/gamessinput/CMakeLists.txt" : {
      "ObjectId" : "23697aad1d9ae433c99685ea2d8667e9acf7b969",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Extension\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "avogadro/qtplugins/hydrogens/CMakeLists.txt" : {
      "ObjectId" : "45bb999bd0cb2e3f41d95a1aebe205d4f847af11",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/importpqr/CMakeLists.txt" : {
      "ObjectId" : "5858bc51e2e40ecd4097bb3f8348ef3e7738b8bd",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Extension\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "avogadro/qtplugins/lammpsinput/CMakeLists.txt" : {
      "ObjectId" : "32dbdfda5d2d3385f58eee1c744d1dbd69ea81e0",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Extension\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "avogadro/qtplugins/licorice/CMakeLists.txt" : {
      "ObjectId" : "622202bdd410c57231dd43997d564a5b5fb21d18",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/lineformatinput/CMakeLists.txt" : {
      "ObjectId" : "a5e424b66dbf9545efe29faee9cabe8ca732baef",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/manipulator/CMakeLists.txt" : {
      "ObjectId" : "97c8e3e370ebf08f2b60c232afd2a1ed62ca9006",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/measuretool/CMakeLists.txt" : {
      "ObjectId" : "ce485d60ac94d19f4225e7106a0b9b684f64b49f",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/meshes/CMakeLists.txt" : {
      "ObjectId" : "9066a5482201dfb00262939c9d7b9c62b57efe36",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/molecularproperties/CMakeLists.txt" : {
      "ObjectId" : "816e29668b98503ce8f7a17b2b96a512813eec30",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/navigator/CMakeLists.txt" : {
      "ObjectId" : "568c79a9e9726d8d1e826b7268e57c1e6c04bc45",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/networkdatabases/CMakeLists.txt" : {
      "ObjectId" : "7a55173869ede2d90c0a1e733808a31a84ba8a47",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/openbabel/CMakeLists.txt" : {
      "ObjectId" : "c4aec239699a26b8413d853cdc319f6f8537d3e6",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/overlayaxes/CMakeLists.txt" : {
      "ObjectId" : "b648774702041475eb29c95cc4dffae766a81f71",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Temporarily copied from Avogadro::Rendering until we can fully encapsulate\n\n# OpenGL/GLEW calls:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "avogadro/qtplugins/playertool/CMakeLists.txt" : {
      "ObjectId" : "a7c256d19fb7e418a057e4d957fc8d0395d2cdad",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/plotpdf/CMakeLists.txt" : {
      "ObjectId" : "2531505138bc546822dda85e15f27a29636fd4e6",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/plotrmsd/CMakeLists.txt" : {
      "ObjectId" : "2f915d47814d011782b6c029d4ed00ed9c853003",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/plotxrd/CMakeLists.txt" : {
      "ObjectId" : "c95013c0ad8c6d94620f4daa666f52baec10a235",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Download the executable if we are not to use the system one\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "avogadro/qtplugins/plugindownloader/CMakeLists.txt" : {
      "ObjectId" : "ded1c2ed8b0960044704c36bca42b3384c303a54",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Extension\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "avogadro/qtplugins/povray/CMakeLists.txt" : {
      "ObjectId" : "3b59056492cc80f937a9af0c7e0a960e069a8cb1",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/qtaim/CMakeLists.txt" : {
      "ObjectId" : "1c0be0cd26ee8038cd28244cbaab72936dfff038",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The settings widget is not built -- its settings weren't actually used by the\n\n# engine in Avogadro 1. The sources are kept for later if we decide to use it.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "avogadro/qtplugins/quantuminput/CMakeLists.txt" : {
      "ObjectId" : "fb21cc1c62bcf274bcda395ed5541eec7b66451e",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pull in MoleQueue\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Needed to find avogadroioexport.h:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Extension\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look in parallel directory for the avogadrogenerators repository.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Bundled generator scripts,\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "avogadro/qtplugins/scriptfileformats/CMakeLists.txt" : {
      "ObjectId" : "5914f602830629f4120131e0a4f136676a709f03",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Bundled format scripts:\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "avogadro/qtplugins/select/CMakeLists.txt" : {
      "ObjectId" : "bea46dda23e5136bdbf730ea6d99844181f955cf",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/selectiontool/CMakeLists.txt" : {
      "ObjectId" : "8e478bfdcc2675a9651377f1628b62b6558e4cf7",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/spacegroup/CMakeLists.txt" : {
      "ObjectId" : "a5b05299120823f402c9fca30a45b224a1b49f57",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/spectra/CMakeLists.txt" : {
      "ObjectId" : "6de1349ff874a138c7384b209e12fc975377a70f",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/surfaces/CMakeLists.txt" : {
      "ObjectId" : "99b7cc877013b94813847c4195de89d4474cfb40",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/symmetry/CMakeLists.txt" : {
      "ObjectId" : "5c4b288a16d8f14fd89f184ada638ffaa0877533",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/vanderwaals/CMakeLists.txt" : {
      "ObjectId" : "828cad101f8971e7ca5ad63952b7ee163dea965f",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/vanderwaalsao/CMakeLists.txt" : {
      "ObjectId" : "73cc238e674e6c30acef4c1e68f9fe84475861fd",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/vrml/CMakeLists.txt" : {
      "ObjectId" : "ec99c00b33caa18da0297cb887ba432d9f0fe318",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/qtplugins/wireframe/CMakeLists.txt" : {
      "ObjectId" : "c292d3b81843ac3dac230d3a85dcac28e210d502",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "avogadro/quantumio/CMakeLists.txt" : {
      "ObjectId" : "886942f6edc54c4a85790e6e14ad42e3e06ef562",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add as \"system headers\" to avoid warnings generated by them with\n\n# compilers that support that notion.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Headers for our public API\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Source files for our data.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#gamessukout.cpp\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "avogadro/rendering/CMakeLists.txt" : {
      "ObjectId" : "516f4c7db60ad5616c11bf8e9f85d163db382014",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add as \"system headers\" to avoid warnings generated by them with\n\n# compilers that support that notion.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "avogadro/vtk/CMakeLists.txt" : {
      "ObjectId" : "c7f8e1c89465d727338abe46cc201d2ac6317669",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add as \"system headers\" to avoid warnings generated by them with\n\n# compilers that support that notion.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/BuildLocation.cmake" : {
      "ObjectId" : "3521c5459299f42b54b2aad1b67109bc612d6bb0",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set up our directory structure for output libraries and binaries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/BuildType.cmake" : {
      "ObjectId" : "0c720a2f85540dc80434db6ebe44793f64403070",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set a default build type if none was specified\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/CheckCXXSymbolExists.cmake" : {
      "ObjectId" : "1b012aefd34e1c8963fceeb1cd66d88e44463762",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if a symbol exists as a function, variable, or macro in C++\n\n# CHECK_CXX_SYMBOL_EXISTS(<symbol> <files> <variable>)\n\n#\n\n# Check that the <symbol> is available after including given header\n\n# <files> and store the result in a <variable>.  Specify the list\n\n# of files in one argument as a semicolon-separated list.\n\n# CHECK_CXX_SYMBOL_EXISTS() can be used to check in C++ files, as opposed\n\n# to CHECK_SYMBOL_EXISTS(), which works only for C.\n\n#\n\n# If the header files define the symbol as a macro it is considered\n\n# available and assumed to work.  If the header files declare the\n\n# symbol as a function or variable then the symbol must also be\n\n# available for linking.  If the symbol is a type or enum value\n\n# it will not be recognized (consider using CheckTypeSize or\n\n# CheckCSourceCompiles).\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#  CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2011 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/CheckSymbolExists.cmake" : {
      "ObjectId" : "183b2bbe6b63c12d18cb6d7d5edbc81b381ff1be",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if a symbol exists as a function, variable, or macro\n\n# CHECK_SYMBOL_EXISTS(<symbol> <files> <variable>)\n\n#\n\n# Check that the <symbol> is available after including given header\n\n# <files> and store the result in a <variable>.  Specify the list\n\n# of files in one argument as a semicolon-separated list.\n\n#\n\n# If the header files define the symbol as a macro it is considered\n\n# available and assumed to work.  If the header files declare the\n\n# symbol as a function or variable then the symbol must also be\n\n# available for linking.  If the symbol is a type or enum value\n\n# it will not be recognized (consider using CheckTypeSize or\n\n# CheckCSourceCompiles).\n\n# If the check needs to be done in C++, consider using CHECK_CXX_SYMBOL_EXISTS(),\n\n# which does the same as CHECK_SYMBOL_EXISTS(), but in C++.\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#  CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2011 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/CompilerFlags.cmake" : {
      "ObjectId" : "dafbe1b685b2c6347c0ad83ac07c8b6ac812d420",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Addtional warnings for GCC\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# This flag is useful as not returning from a non-void function is an error\n\n# with MSVC, but it is not supported on all GCC compiler versions\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# If we are compiling on Linux then set some extra linker flags too\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Set up the debug CXX_FLAGS for extra warnings\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/DetermineVersion.cmake" : {
      "ObjectId" : "b5a87206a33f6a372353a6dde3fa7f88b4069792",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Used to determine the version for OpenChemistry source using \"git describe\", if git\n\n# is found. On success sets following variables in caller's scope:\n\n#   ${var_prefix}_VERSION\n\n#   ${var_prefix}_VERSION_MAJOR\n\n#   ${var_prefix}_VERSION_MINOR\n\n#   ${var_prefix}_VERSION_PATCH\n\n#   ${var_prefix}_VERSION_PATCH_EXTRA\n\n#   ${var_prefix}_VERSION_IS_RELEASE is patch-extra is empty.\n\n#\n\n# If git is not found, or git describe cannot be run successfully, then these\n\n# variables are left unchanged and status message is printed.\n\n#\n\n# Arguments are:\n\n#   source_dir : Source directory\n\n#   git_command : git executable\n\n#   var_prefix : prefix for variables e.g. \"AvogadroApp\".\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/DownloadGenXrdPattern.cmake" : {
      "ObjectId" : "ab5c5f0c182dd6568f68c24db093cf8cbb61fd8e",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Written by Patrick S. Avery - 2018\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Downloads the executable if it doesn't already exist\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Let's set the name. Windows likes to add '.exe' at the end\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# If it already exists, don't download it again\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Linux\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Apple\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Windows\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Install to a temporary directory so we can copy and change file\n\n# permissions\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# We need to change the permissions\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Now remove the temporary directory\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "cmake/FindEigen3.cmake" : {
      "ObjectId" : "66ffe8e1e5b462e565582a0930291ae0f54cf00b",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindGLEW.cmake" : {
      "ObjectId" : "722da208c9d1df594d7676afe8c4416912bcc866",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the GLEW library\n\n#\n\n# Defines:\n\n#\n\n#  GLEW_FOUND        - system has GLEW\n\n#  GLEW_INCLUDE_DIRS - the GLEW include directories\n\n#  GLEW_LIBRARY      - The GLEW library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindLibArchive.cmake" : {
      "ObjectId" : "3541c76e9d8b04023903e43f9eb3dd551c870c24",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the LIBARCHIVE library\n\n#\n\n# Defines:\n\n#\n\n#  LIBARCHIVE_FOUND        - system has LIBARCHIVE\n\n#  LIBARCHIVE_INCLUDE_DIRS - the LIBARCHIVE include directories\n\n#  LIBARCHIVE_LIBRARIES    - The LIBARCHIVE library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libarchive/archive_entry.h)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindMMTF.cmake" : {
      "ObjectId" : "71030e6793eee163be428a132325b4a49d3772b0",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the MMTF library\n\n#\n\n# Defines:\n\n#\n\n#  MMTF_FOUND        - system has MMTF\n\n#  MMTF_INCLUDE_DIRS - the MMTF include directories\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindSpglib.cmake" : {
      "ObjectId" : "adbf94fa175e0933a39b106dec56153fbcdba11c",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the Spglib library\n\n#\n\n# Defines:\n\n#\n\n#  SPGLIB_FOUND        - system has Spglib\n\n#  SPGLIB_INCLUDE_DIRS - the Spglib include directories\n\n#  SPGLIB_LIBRARY      - The Spglib library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Findlibmsym.cmake" : {
      "ObjectId" : "5f566e6c437b6e53599d1d4e5918881f63f732a8",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the libmsym library\n\n#\n\n# Defines:\n\n#\n\n#  LIBMSYM_FOUND        - system has LIBMSYM\n\n#  LIBMSYM_INCLUDE_DIRS - the LIBMSYM include directories\n\n#  LIBMSYM_LIBRARIES    - The LIBMSYM library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/InstallLocation.cmake" : {
      "ObjectId" : "ca9e375a49bd12273352af83bec184bcec9f96f1",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Some default installation locations. These should be global, with any project\n\n# specific locations added to the end. These paths are all relative to the\n\n# install prefix.\n\n#\n\n# These paths attempt to adhere to the FHS, and are similar to those provided\n\n# by autotools and used in many Linux distributions.\n\n#\n\n# Use GNU install directories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set up RPATH for the project too.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "docs/CMakeLists.txt" : {
      "ObjectId" : "022b5d59fa045684ae802234c0bcb5ab15b3773a",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/CMakeLists.txt" : {
      "ObjectId" : "144d10dddef125f09015ab7b6acc9120de934356",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SKBUILD is set for binary wheel\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Core\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# IO\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the RPATH so the dependent libraries can be found in the wheel.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the output directory so the python modules can be used from the build\n\n# tree.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "9714a59b5b29323cc264b73262909498edefffaa",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find google test\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add both as \"system headers\" to avoid warnings generated by them with\n\n# compilers that support that notion.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the tests for each module.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/core/CMakeLists.txt" : {
      "ObjectId" : "210e5de771ad086313f987b6193def8af9cfe1f2",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Specify the name of each test (the Test will be appended where needed).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build up the source file names.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add a single executable for all of our tests.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Now add all of the tests, using the gtest_filter argument so that only those\n\n# cases are run in each test invocation.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/io/CMakeLists.txt" : {
      "ObjectId" : "d2648df280586e676217bbd8f1209cd9dea75e5e",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Specify the name of each test (the Test will be appended where needed).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build up the source file names.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add a single executable for all of our tests.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Now add all of the tests, using the gtest_filter argument so that only those\n\n# cases are run in each test invocation.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/protocall/CMakeLists.txt" : {
      "ObjectId" : "62c5db5d49e1ed868bd999c2398698942cf6447e",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build up the source file names.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add a single executable for all of our tests.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Now add all of the tests, using the gtest_filter argument so that only those\n\n# cases are run in each test invocation.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/qtgui/CMakeLists.txt" : {
      "ObjectId" : "6680ea2f86cbd0baba465475f74fe9c4316ff2f4",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pull in MoleQueue for QtJson\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find python 2.x interpreter for input generator\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Setup config file with data location\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Specify the name of each test (the Test will be appended where needed).\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# FIXME: These two tests are broken\n\n#    InputGenerator\n\n#    InputGeneratorWidget\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build up the source file names.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add a single executable for all of our tests.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Now add all of the tests, using the gtest_filter argument so that only those\n\n# cases are run in each test invocation.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "tests/qtopengl/CMakeLists.txt" : {
      "ObjectId" : "60fc5aec8e73ebe24bb2034adf86df27971540d1",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We want to find some parts of VTK in order to do image comparisons.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Setup config file with data location\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of tests to be added, the name will be changed to lower case with\n\n# test.cpp appended. The main function of each test is expected to be lower\n\n# cased version with test appended, e.g. GLWidget -> glwidgettest.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/rendering/CMakeLists.txt" : {
      "ObjectId" : "c2f805d2281f9ee263b648856790d47bf85421d8",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Specify the name of each test (the Test will be appended where needed).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build up the source file names.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add a single executable for all of our tests.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Now add all of the tests, using the gtest_filter argument so that only those\n\n# cases are run in each test invocation.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "thirdparty/CMakeLists.txt" : {
      "ObjectId" : "5fa5480f1390ed6d9fa4f99f53f9d6be506ced63",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Only used by Qt plugin\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "thirdparty/libgwavi/CMakeLists.txt" : {
      "ObjectId" : "7ed2531eaf7dda25f57170b52fb1d3dc4473973e",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "thirdparty/struct/CMakeLists.txt" : {
      "ObjectId" : "e2957d504804173345278bae9ecdfc18f1950ad7",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "utilities/CMakeLists.txt" : {
      "ObjectId" : "51a57176a35b78d15470dc4875badbba361e6b1b",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "utilities/bodr/CMakeLists.txt" : {
      "ObjectId" : "d1fc120805b2e77c5bcf1ba0c1dc8f7fab6645df",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add as \"system headers\" to avoid warnings generated by them with\n\n# compilers that support that notion.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "utilities/encodefile/CMakeLists.txt" : {
      "ObjectId" : "0b68824e815664298fd2316ee7361fea7189e27d",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "utilities/resdata/CMakeLists.txt" : {
      "ObjectId" : "389481a24c21be8c4d795ba77184dd3857d2509b",
      "LastModified" : "2018-12-01T22:29:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 90
  },
  "ElapsedTime" : 2319
}