{
  "Repository" : "12014295",
  "Revision" : "HEAD",
  "ObjectId" : "004c6b877114bdeae4baabe3804797a2f8c5a7dd",
  "CommitTime" : "2019-04-03T07:06:46Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "57299fef703865077c2d56bc57406bfd2447ca88",
      "LastModified" : "2018-05-28T12:14:18Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2013-2016 The Bitcoin Core developers\n\n# Distributed under the MIT software license, see the accompanying\n\n# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#not installed\n",
        "Line" : 29,
        "CharPositionInLine" : 46
      },
      "CommentCount" : 3
    },
    "depends/Makefile" : {
      "ObjectId" : "ce02925b1868a2141c1a91ab98a81cb07d039b2b",
      "LastModified" : "2018-05-28T12:14:18Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "gridcoinresearch.pro" : {
      "ObjectId" : "1a24209e6efb73a6e2f1d4227ac00921aee0ca8d",
      "LastModified" : "2018-05-28T12:14:18Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Fix for boost.asio build error. See\n\n# https://stackoverflow.com/questions/20957727/boostasio-unregisterwaitex-has-not-been-declared\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Qt charts not available\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# for boost 1.37, add -mt to the boost libraries\n\n# use: qmake BOOST_LIB_SUFFIX=-mt\n\n# for boost thread win32 with _win32 sufix\n\n# use: BOOST_THREAD_LIB_SUFFIX=_win32-...\n\n# or when linking against a specific BerkelyDB version: BDB_LIB_SUFFIX=-4.8\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# boost-1.55 has a bug where building with C++11 causes undefined references to\n\n# copy_file. This is fixed in boost-1.57 and backported to 1.56. This workaround\n\n# can be removed once boost is upgraded.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Dependency library locations can be customized with:\n\n#    BOOST_INCLUDE_PATH, BOOST_LIB_PATH, BDB_INCLUDE_PATH,\n\n#    BDB_LIB_PATH, OPENSSL_INCLUDE_PATH and OPENSSL_LIB_PATH\n\n#    CURL_INCLUDE_PATH, CURL_LIB_PATH, LIBZIP_INCLUDE_PATH\n\n#    and LIBZIP_LIB_PATH respectively\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# use: qmake \"RELEASE=1\"\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Mac: compile for maximum compatibility (10.5, 32-bit)\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Linux: static link\n",
        "Line" : 51,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# for extra security against potential buffer overflows: enable GCCs Stack Smashing Protection\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# We need to exclude this for Windows cross compile with MinGW 4.2.x, as it will result in a non-working executable!\n\n# This can be enabled for Windows, when we switch to MinGW >= 4.4.x.\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# for extra security on Windows: enable ASLR and DEP via GCC linker flags\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# on Windows: enable GCC large address aware linker flag\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# use: qmake \"USE_QRCODE=1\"\n\n# libqrencode (http://fukuchi.org/works/qrencode/index.en.html) must be installed for support\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Build without Upgrader\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# use: qmake \"USE_UPNP=1\" ( enabled by default; default)\n\n#  or: qmake \"USE_UPNP=0\" (disabled by default)\n\n#  or: qmake \"USE_UPNP=-\" (not supported)\n\n# miniupnpc (http://miniupnp.free.fr/files/) must be installed for support\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#DEFINES += USE_UPNP=$$USE_UPNP STATICLIB\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# use: qmake \"USE_DBUS=1\" or qmake \"USE_DBUS=0\"\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# use: qmake \"NO_UPGRADE=1\"\n\n# Do not provide an upgrade option, useful if the client is managed via package management\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# we use QMAKE_CXXFLAGS_RELEASE even without RELEASE=1 because we use RELEASE to indicate linking preferences not -O preferences\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# make an educated guess about what the ranlib command is called\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Gross ugly hack that depends on qmake internals, unfortunately there is no other way to do it.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# regenerate src/build.h\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Input\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##\n\n#RC_FILE  = qaxserver.rc\n\n#DEF_FILE = qaxserver.def\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# for lrelease/lupdate\n\n# also add new translations to src/qt/bitcoin.qrc under translations/\n",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# automatically build translations, so they can be included in resource file\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# \"Other files\" to show in Qt Creator\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# platform specific defaults, if not overridden on command line\n",
        "Line" : 412,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# At least qmake's win32-g++-cross profile is missing the -lmingwthrd\n\n# thread-safety flag. GCC has -mthreads to enable this, but it doesn't\n\n# work with static linking. -lmingwthrd must come BEFORE -lmingw, so\n\n# it is prepended to QMAKE_LIBS_QT_ENTRY.\n\n# It can be turned off with MINGW_THREAD_BUGFIX=0, just in case it causes\n\n# any problems on some untested qmake profile now or in the future.\n",
        "Line" : 448,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Set libraries and includes at end, to use platform-defined defaults if not overridden\n",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# -lgdi32 has to happen after -lcrypto (see  #681)\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Linux: turn dynamic linking back on for c/c++ runtime libraries\n",
        "Line" : 483,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 32
    },
    "src/Makefile.am" : {
      "ObjectId" : "b6c8539abdcc75d854fe51e700a1895d58ff5ef2",
      "LastModified" : "2018-10-19T04:21:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2013-2016 The Bitcoin Core developers\n\n# Distributed under the MIT software license, see the accompanying\n\n# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make is not made aware of per-object dependencies to avoid limiting building parallelization\n\n# But to build the less dependent modules first, we manually select their order here:\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gridcoin core #\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# util: shared between all executables.\n\n# This library *must* be included to make sure that the glibc\n\n# backward-compatibility objects and their sanity checks are linked.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# crypto primitives library\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# gridcoinresearchd binary #\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## FIXME: How to get the appropriate modulename_CPPFLAGS in here?\n",
        "Line" : 276,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "src/leveldb/Makefile" : {
      "ObjectId" : "f8903b69e4b4152c28f9c5ec614ec02f2b115593",
      "LastModified" : "2014-08-25T23:48:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n\n# Use of this source code is governed by a BSD-style license that can be\n\n# found in the LICENSE file. See the AUTHORS file for names of contributors.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------\n\n# Uncomment exactly one of the lines labelled (A), (B), and (C) below\n\n# to switch between compilation modes.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# (A) Production use (optimized mode)\n",
        "Line" : 9,
        "CharPositionInLine" : 26
      },
      "3" : {
        "Text" : "# OPT ?= -g2              # (B) Debug mode, w/ full line-level debugging symbols\n\n# OPT ?= -O2 -g2 -DNDEBUG # (C) Profiling mode: opt, but w/debugging symbols\n\n#-----------------------------------------------\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# detect what platform we're building on\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this file is generated by the previous line to set build flags and sources\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Should we build shared libraries?\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update db.h if you change these.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# PLATFORM_SHARED_EXT\n",
        "Line" : 89,
        "CharPositionInLine" : 7
      },
      "9" : {
        "Text" : "# For iOS, create universal object files to be used on both the simulator and\n\n# a device.\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "src/univalue/Makefile.am" : {
      "ObjectId" : "e283fc890e232dc5ce447678a294912ee222a93b",
      "LastModified" : "2018-05-28T12:14:18Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "QMAKE" : 1,
    "MAKEFILE" : 2,
    "AUTOMAKE" : 3
  },
  "ElapsedTime" : 8514
}