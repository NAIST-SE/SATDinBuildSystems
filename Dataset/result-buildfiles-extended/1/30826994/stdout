{
  "Repository" : "30826994",
  "Revision" : "HEAD",
  "ObjectId" : "12a288f21096b071946033af9fd3f4f30bf513ca",
  "CommitTime" : "2019-01-17T02:41:42Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "0feae8820afbf428c1adedf27c71009c526ed4a6",
      "LastModified" : "2018-10-16T18:14:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set up folder structure\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set build options\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#OPTION( SBOL_BUILD_COMBINED  \"Build libSBOL and Raptor RDF archives combined\" FALSE )\n\n#OPTION( SBOL_DEBUG_STATEMENTS \"Add some print statements for debugging\"   FALSE )\n\n#OPTION( SBOL_BUILD_EXAMPLES   \"Build the example programs\"                FALSE )\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -fPIC from boost Python\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# build json parser\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# target old OSX frameworks\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# build libSBOL\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# build examples\n\n#IF( SBOL_BUILD_EXAMPLES )\n\n#    ADD_SUBDIRECTORY( examples )\n\n#ENDIF()\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# build tests\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# generate documentation\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "example/CMakeLists.txt" : {
      "ObjectId" : "4025ab697afbf3cd5ac0c60176c65fb82f00d916",
      "LastModified" : "2016-06-28T01:20:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set policy for using relative paths\n",
        "Line" : 3,
        "CharPositionInLine" : 31
      },
      "1" : {
        "Text" : "# Windows library path\n",
        "Line" : 8,
        "CharPositionInLine" : 54
      },
      "2" : {
        "Text" : "# Windows header path\n",
        "Line" : 9,
        "CharPositionInLine" : 62
      },
      "3" : {
        "Text" : "# Mac library path\n\n# Mac header path\n",
        "Line" : 36,
        "CharPositionInLine" : 64
      },
      "4" : {
        "Text" : "# gather headers\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# gather source files\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# build test executable\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "manual/CMakeLists.txt" : {
      "ObjectId" : "929e4e670eeed66104c74bca682b324bca877f55",
      "LastModified" : "2016-06-28T01:20:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "manual/FindDoxygen.cmake" : {
      "ObjectId" : "6cc9efb1824f1b18f71aa642ced496bc1c6e3d01",
      "LastModified" : "2016-06-28T01:20:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - This module looks for Doxygen and the path to Graphviz's dot\n\n# Doxygen is a documentation generation tool.  Please see\n\n# http://www.doxygen.org\n\n#\n\n# This module accepts the following optional variables:\n\n#\n\n#   DOXYGEN_SKIP_DOT       = If true this module will skip trying to find Dot\n\n#                            (an optional component often used by Doxygen)\n\n#\n\n# This modules defines the following variables:\n\n#\n\n#   DOXYGEN_EXECUTABLE     = The path to the doxygen command.\n\n#   DOXYGEN_FOUND          = Was Doxygen found or not?\n\n#   DOXYGEN_VERSION        = The version reported by doxygen --version\n\n#\n\n#   DOXYGEN_DOT_EXECUTABLE = The path to the dot program used by doxygen.\n\n#   DOXYGEN_DOT_FOUND      = Was Dot found or not?\n\n#   DOXYGEN_DOT_PATH       = The path to dot not including the executable\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For backwards compatibility support\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ===== Rationale for OS X AppBundle mods below =====\n\n#     With the OS X GUI version, Doxygen likes to be installed to /Applications and\n\n#     it contains the doxygen executable in the bundle. In the versions I've \n\n#     seen, it is located in Resources, but in general, more often binaries are \n\n#     located in MacOS.\n\n#\n\n#     NOTE: The official Doxygen.app that is distributed for OS X uses non-standard \n\n#     conventions.  Instead of the command-line \"doxygen\" tool being placed in\n\n#     Doxygen.app/Contents/MacOS, \"Doxywizard\" is placed there instead and \n\n#     \"doxygen\" is placed in Contents/Resources.  This is most likely done\n\n#     so that something happens when people double-click on the Doxygen.app\n\n#     package.  Unfortunately, CMake gets confused by this as when it sees the\n\n#     bundle it uses \"Doxywizard\" as the executable to use instead of\n\n#     \"doxygen\".  Therefore to work-around this issue we temporarily disable\n\n#     the app-bundle feature, just for this CMake module:\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  Save the old setting\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Disable the App-bundle detection feature\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#     FYI:\n\n#     In the older versions of OS X Doxygen, dot was included with the \n\n#     Doxygen bundle. But the new versions require you to download\n\n#     Graphviz.app which contains \"dot\" in it's bundle.\n\n# ============== End OSX stuff ================\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Find Doxygen...\n\n#\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Find Dot...\n\n#\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The Doxyfile wants the path to Dot, not the entire path and executable\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#\n\n# Backwards compatibility...\n\n#\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Restore the old app-bundle setting setting\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Maintain the _FOUND variables as \"YES\" or \"NO\" for backwards compatibility\n\n# (allows people to stuff them directly into Doxyfile with configure_file())\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# For backwards compatibility support\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "manual/Makefile" : {
      "ObjectId" : "8164457873612883d6d19fdd89c35fe084ca236a",
      "LastModified" : "2016-06-28T01:20:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# CMAKE generated file: DO NOT EDIT!\n\n# Generated by \"Unix Makefiles\" Generator, CMake Version 3.4\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default target executed when no arguments are given to make.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Allow only one \"make -f Makefile2\" at a time, but pass parallelism.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=============================================================================\n\n# Special targets provided by cmake.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Disable implicit rules so canonical targets will work.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Remove some rules from gmake that .SUFFIXES does not remove.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Suppress display of executed commands.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# A target that is always out of date.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#=============================================================================\n\n# Set environment variables for the build.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The shell in which to execute make rules.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The CMake executable.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The command to remove a file.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Escaping for special characters.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The top-level source directory on which CMake was run.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# The top-level build directory on which CMake was run.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#=============================================================================\n\n# Targets provided globally by CMake.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Special rule for the target rebuild_cache\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Special rule for the target rebuild_cache\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Special rule for the target list_install_components\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Special rule for the target list_install_components\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Special rule for the target install\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Special rule for the target install\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Special rule for the target install/local\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Special rule for the target install/local\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Special rule for the target edit_cache\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Special rule for the target edit_cache\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# The main all target\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# The main clean target\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# The main clean target\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Prepare targets for installation.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Prepare targets for installation.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# clear depends\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Convenience name for target.\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Convenience name for target.\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# fast build rule for target.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Help Target\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#=============================================================================\n\n# Special targets to cleanup operation of make.\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Special rule to run CMake to check the build system integrity.\n\n# No rule that depends on this can have commands that come from listfiles\n\n# because they might be regenerated.\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "manual/cmake_install.cmake" : {
      "ObjectId" : "5bfb81f14673ac64093f9aaae7fa704284d604cc",
      "LastModified" : "2016-06-28T01:20:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install script for directory: /Users/bryan/Dev/libSBOL/manual\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the install prefix\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the install configuration name.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the component getting installed.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "source/CMakeLists.txt" : {
      "ObjectId" : "3e6e3d4dccba81f51100590d3c58185b05f3dbf4",
      "LastModified" : "2018-11-29T17:29:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# gather headers\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# gather source files\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ADD_EXECUTABLE(sbol ${SBOL_SOURCE_FILES})\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# build static library for release\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# by default, GCC exports everything;\n\n# this tells it to stick to SBOLAPIEXPORTS functions\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# link against raptor\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#message( \"COMPILE_DEFINITIONS = ${DirDefs}\" )\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Always build static\n",
        "Line" : 122,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Installs to C:\\Program Files (x86)\\SBOL\\bin            \n",
        "Line" : 141,
        "CharPositionInLine" : 61
      },
      "9" : {
        "Text" : "# Installs to C:\\Program Files (x86)\\SBOL\\lib\n",
        "Line" : 162,
        "CharPositionInLine" : 54
      },
      "10" : {
        "Text" : "#Always build static\n",
        "Line" : 169,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Installs to C:\\Program Files (x86)\\SBOL\\bin\n",
        "Line" : 188,
        "CharPositionInLine" : 61
      },
      "12" : {
        "Text" : "# Installs to C:\\Program Files (x86)\\SBOL\\lib\n",
        "Line" : 209,
        "CharPositionInLine" : 54
      },
      "13" : {
        "Text" : "# If Mac OSX or Linux\n",
        "Line" : 214,
        "CharPositionInLine" : 9
      },
      "14" : {
        "Text" : "# Installs to /usr/local/lib\n",
        "Line" : 234,
        "CharPositionInLine" : 60
      },
      "15" : {
        "Text" : "# linux only\n\n# linux only\n",
        "Line" : 246,
        "CharPositionInLine" : 22
      },
      "16" : {
        "Text" : "# Installs to /usr/local/lib\n",
        "Line" : 255,
        "CharPositionInLine" : 53
      },
      "17" : {
        "Text" : "# Installs to /usr/local/lib\n",
        "Line" : 280,
        "CharPositionInLine" : 60
      },
      "18" : {
        "Text" : "# linux only\n\n# linux only\n",
        "Line" : 292,
        "CharPositionInLine" : 22
      },
      "19" : {
        "Text" : "# Installs to /usr/local/lib\n",
        "Line" : 300,
        "CharPositionInLine" : 53
      },
      "20" : {
        "Text" : "# Print include directories\n\n#get_property(dirs DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY INCLUDE_DIRECTORIES)\n\n#foreach(dir ${dirs})\n\n#message(STATUS \"dir='${dir}'\")\n\n#endforeach()\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "source/libxml2/CMakeLists.txt" : {
      "ObjectId" : "d08e351e0872231d1fd3f80d27c48f1b38b973e0",
      "LastModified" : "2016-12-24T02:10:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# copy  libXML2 header files to release/library/include for out-of-source build\n\n# TODO: remove a couple of Makefiles contaminating the HEADER_OUTPUT_PATH\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/mergestaticlibs.cmake" : {
      "ObjectId" : "ddf04d029460de8e4d7d286613561d7e8108f2d6",
      "LastModified" : "2016-12-24T02:10:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    Copyright (C) 2012 Modelon AB\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    This program is free software: you can redistribute it and/or modify\n\n#    it under the terms of the BSD style license.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    This program is distributed in the hope that it will be useful,\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#    FMILIB_License.txt file for more details.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#    You should have received a copy of the FMILIB_License.txt file\n\n#    along with this program. If not, contact Modelon AB <http://www.modelon.com>.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Merge_static_libs(outlib lib1 lib2 ... libn) merges a number of static\n\n# libs into a single static library\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create a dummy file that the target will depend on\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# First get the file names of the libraries to be merged\t\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Just to be sure: cleanup from duplicates\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Now the easy part for MSVC and for MAC\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# lib.exe does the merging of libraries just need to conver the list into string\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Use OSX's libtool to merge archives\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# general UNIX - need to \"ar -x\" and then \"ar -ru\"\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# objlistfile will contain the list of object files for the library\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# we only need to extract files once \n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---------------------------------\t\t\t\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#---------------------------------\t\t\t\t\t\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# relative path is needed by ar under MSYS\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 17
    },
    "source/raptor/CMakeLists.txt" : {
      "ObjectId" : "6e20ef1ddcfdfdc1fb8c6716f5dd761c51b79f8d",
      "LastModified" : "2018-10-16T18:14:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get the binaries for the dependencies\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set( BUILD_SHARED_LIBS OFF )\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If Linux\n",
        "Line" : 79,
        "CharPositionInLine" : 48
      },
      "3" : {
        "Text" : "# Search for Raptor and JsonCpp as a static library\n",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Search for Raptor and JsonCpp as a dynamic dependency\n",
        "Line" : 94,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# If Mac OSX\n",
        "Line" : 108,
        "CharPositionInLine" : 9
      },
      "6" : {
        "Text" : "# Search for raptor library.  It is non-native on Mac OSX and must be downloaded from a package installer like Homebrew\n\n# Search for curl and libxslt dependencies.  These are native system libraries on Mac OSX and can be linked dynamically.\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Search for Raptor as a static library\n",
        "Line" : 113,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Search for Raptor as a dynamic dependency\n",
        "Line" : 120,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 9
    },
    "source/raptor/FindCURL.cmake" : {
      "ObjectId" : "0e7fa54c85a933b978355f7f77f51629ec26d0e6",
      "LastModified" : "2017-08-07T14:55:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindCURL\n\n# --------\n\n#\n\n# Find curl\n\n#\n\n# Find the native CURL headers and libraries.\n\n#\n\n# ::\n\n#\n\n#   CURL_INCLUDE_DIRS   - where to find curl/curl.h, etc.\n\n#   CURL_LIBRARIES      - List of libraries when using curl.\n\n#   CURL_FOUND          - True if curl found.\n\n#   CURL_VERSION_STRING - the version of curl found (since CMake 2.8.8)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2012 Rolf Eike Beer <eike@sf-mail.de>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the header file in Homebrew directory\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Homebrew\n",
        "Line" : 33,
        "CharPositionInLine" : 38
      },
      "4" : {
        "Text" : "# Linuxbrew\n",
        "Line" : 34,
        "CharPositionInLine" : 31
      },
      "5" : {
        "Text" : "# Linux\n",
        "Line" : 35,
        "CharPositionInLine" : 23
      },
      "6" : {
        "Text" : "# if(SBOL_BUILD_SHARED)\n\n# if(CURL_LIBRARY MATCHES \"(.*).(a|lib)\")\n\n# unset(CURL_LIBRARY CACHE)\n\n# endif()\n\n# else()\n\n# if(CURL_LIBRARY MATCHES \"(.*).(so|dylib|dll)\")\n\n# unset(CURL_LIBRARY CACHE)\n\n# endif()\n\n# endif()\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Look for the library (sorted from most current/relevant entry to least).\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Windows MSVC prebuilts:\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Windows older \"Win32 - MSVC\" prebuilts (libcurl.lib, e.g. libcurl-7.15.5-win32-msvc.zip):\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Homebrew path\n",
        "Line" : 62,
        "CharPositionInLine" : 28
      },
      "11" : {
        "Text" : "#Linux 32\n",
        "Line" : 64,
        "CharPositionInLine" : 29
      },
      "12" : {
        "Text" : "#Linux 64\n",
        "Line" : 65,
        "CharPositionInLine" : 30
      },
      "13" : {
        "Text" : "# Windows MSVC prebuilts:\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Windows older \"Win32 - MSVC\" prebuilts (libcurl.lib, e.g. libcurl-7.15.5-win32-msvc.zip):\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set CURL_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "source/raptor/FindJsonCpp.cmake" : {
      "ObjectId" : "1b3dd4856d4c082323c979f27b4fa18d3f1bc6f2",
      "LastModified" : "2018-03-19T19:13:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the JsonCpp include files and library.\n\n#\n\n# JsonCpp is a C++ library that can read/write JSON (JavaScript Object Notation)\n\n# documents. See http://jsoncpp.sourceforge.net/ for more details.\n\n#\n\n# This module defines:\n\n# JsonCpp_INCLUDE_DIRS - where to find json/json.h\n\n# JsonCpp_LIBRARIES - the libraries to link against to use JsonCpp\n\n# JsonCpp_FOUND - if false the library was not found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if we have cached results in case the last round was successful.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/raptor/FindLibXslt.cmake" : {
      "ObjectId" : "6ef6d5a7ad1bbd72fc04027bb2c5b326f5621347",
      "LastModified" : "2017-08-07T14:55:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindLibXslt\n\n# -----------\n\n#\n\n# Try to find the LibXslt library\n\n#\n\n# Once done this will define\n\n#\n\n# ::\n\n#\n\n#   LIBXSLT_FOUND - system has LibXslt\n\n#   LIBXSLT_INCLUDE_DIR - the LibXslt include directory\n\n#   LIBXSLT_LIBRARIES - Link these to LibXslt\n\n#   LIBXSLT_DEFINITIONS - Compiler switches required for using LibXslt\n\n#   LIBXSLT_VERSION_STRING - version of LibXslt found (since CMake 2.8.8)\n\n#\n\n# Additionally, the following two variables are set (but not required\n\n# for using xslt):\n\n#\n\n# ``LIBXSLT_EXSLT_LIBRARIES``\n\n#   Link to these if you need to link against the exslt library.\n\n# ``LIBXSLT_XSLTPROC_EXECUTABLE``\n\n#   Contains the full path to the xsltproc executable if found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# search Homebrew directories first\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linux\n",
        "Line" : 44,
        "CharPositionInLine" : 37
      },
      "4" : {
        "Text" : "#find_path(LIBXSLT_EXSLT_INCLUDE_DIR NAMES exslt.h HINTS /usr/local/opt/libxslt/include/libexslt)\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# if(SBOL_BUILD_SHARED)\n\n# if(LIBXSLT_LIBRARIES MATCHES \"(.*).(a|lib)\")\n\n# unset(LIBXSLT_LIBRARIES CACHE)\n\n# endif()\n\n# else()\n\n# if(LIBXSLT_LIBRARIES MATCHES \"(.*).(so|dylib|dll)\")\n\n# unset(LIBXSLT_LIBRARIES CACHE)\n\n# endif()\n\n# endif()\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#find_library(LIBXSLT_EXSLT_LIBRARY NAMES exslt libexslt\n\n#HINTS\n\n#${PC_LIBXSLT_LIBDIR}\n\n#${PC_LIBXSLT_LIBRARY_DIRS}\n\n#)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#set(LIBXSLT_EXSLT_LIBRARIES ${LIBXSLT_EXSLT_LIBRARY} )\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#find_program(LIBXSLT_XSLTPROC_EXECUTABLE xsltproc)\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the find_path() and find_library() calls\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#include(${CMAKE_CURRENT_LIST_DIR}/FindPackageHandleStandardArgs.cmake)\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "source/raptor/FindPythonLibs.cmake" : {
      "ObjectId" : "b13616b60175b8b7a2faee21b5d497142d733033",
      "LastModified" : "2016-12-24T02:10:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindPythonLibs\n\n# --------------\n\n#\n\n# Find python libraries\n\n#\n\n# This module finds if Python is installed and determines where the\n\n# include files and libraries are.  It also determines what the name of\n\n# the library is.  This code sets the following variables:\n\n#\n\n# ::\n\n#\n\n#   PYTHONLIBS_FOUND           - have the Python libs been found\n\n#   PYTHON_LIBRARIES           - path to the python library\n\n#   PYTHON_INCLUDE_PATH        - path to where Python.h is found (deprecated)\n\n#   PYTHON_INCLUDE_DIRS        - path to where Python.h is found\n\n#   PYTHON_DEBUG_LIBRARIES     - path to the debug library (deprecated)\n\n#   PYTHONLIBS_VERSION_STRING  - version of the Python libs found (since CMake 2.8.8)\n\n#\n\n#\n\n#\n\n# The Python_ADDITIONAL_VERSIONS variable can be used to specify a list\n\n# of version numbers that should be taken into account when searching\n\n# for Python.  You need to set this variable before calling\n\n# find_package(PythonLibs).\n\n#\n\n# If you'd like to specify the installation of Python to use, you should\n\n# modify the following cache variables:\n\n#\n\n# ::\n\n#\n\n#   PYTHON_LIBRARY             - path to the python library\n\n#   PYTHON_INCLUDE_DIR         - path to where Python.h is found\n\n#\n\n# If calling both ``find_package(PythonInterp)`` and\n\n# ``find_package(PythonLibs)``, call ``find_package(PythonInterp)`` first to\n\n# get the currently active Python version by default with a consistent version\n\n# of PYTHON_LIBRARIES.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use the executable's path as a hint\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for the python framework on Apple.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Save CMAKE_FIND_FRAMEWORK\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# To avoid picking up the system Python.h pre-maturely.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set up the versions we know about, in the order we will search. Always add\n\n# the user supplied additional versions to the front.\n\n# If FindPythonInterp has already found the major and minor version,\n\n# insert that version between the user supplied versions and the stock\n\n# version list.\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Avoid finding the .dll in the PATH.  We want the .lib.\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Look for the static library in the Python config directory\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Avoid finding the .dll in the PATH.  We want the .lib.\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This is where the static library is usually located\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Don't search for include dir until library location is known\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Use the library's install prefix as a hint\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Add framework directories to the search paths\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# For backward compatibility, set PYTHON_INCLUDE_PATH.\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# We use PYTHON_INCLUDE_DIR, PYTHON_LIBRARY and PYTHON_DEBUG_LIBRARY for the\n\n# cache entries because they are meant to specify the location of a single\n\n# library. We now set the variables listed by the documentation for this\n\n# module.\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# These variables have been historically named in this module different from\n\n# what SELECT_LIBRARY_CONFIGURATIONS() expects.\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# SELECT_LIBRARY_CONFIGURATIONS() sets ${PREFIX}_FOUND if it has a library.\n\n# Unset this, this prefix doesn't match the module prefix, they are different\n\n# for historical reasons.\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Restore CMAKE_FIND_FRAMEWORK\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# PYTHON_ADD_MODULE(<name> src1 src2 ... srcN) is used to build modules for python.\n\n# PYTHON_WRITE_MODULES_HEADER(<filename>) writes a header file you can include\n\n# in your sources to initialize the static python modules\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Mark these options as advanced\n",
        "Line" : 269,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "#    target_link_libraries(${_NAME} ${PYTHON_LIBRARIES})\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# with configure_file() cmake complains that you may not use a file created using file(WRITE) as input file for configure_file()\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "source/raptor/FindRAPTOR.cmake" : {
      "ObjectId" : "15aac96d1962552d6d9a89963a247b5056d34316",
      "LastModified" : "2017-07-06T00:41:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2012 - 2013 by Pedro Mendes, Virginia Tech Intellectual \n\n# Properties, Inc., University of Heidelberg, and The University \n\n# of Manchester. \n\n# All rights reserved. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find the Raptor RDF parsing library (http://librdf.org/raptor/)\n\n# Once done this will define\n\n#\n\n#  RAPTOR_FOUND       - system has Raptor\n\n#  RAPTOR_LIBRARIES   - Link these to use Raptor\n\n#  RAPTOR_INCLUDE_DIR - Include directory for using Raptor\n\n#  RAPTOR_DEFINITIONS - Compiler switches required for using Raptor\n\n#\n\n#  Capabilities\n\n#       RAPTOR_HAVE_TRIG   - Set if raptor has TRIG\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# (c) 2007-2011 Sebastian Trueg <trueg@kde.org>\n\n# (c) 2011 Artem Serebriyskiy <v.for.vandal@gmail.com>\n\n# (c) 2011 Michael Jansen <kde@michael-jansen.biz>\n\n#\n\n# Based on FindFontconfig Copyright (c) 2006,2007 Laurent Montel, <montel@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check if we have cached results in case the last round was successful.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Fink\n\n# MacPorts\n\n# Blastwave\n",
        "Line" : 41,
        "CharPositionInLine" : 33
      },
      "5" : {
        "Text" : "# Homebrew\n",
        "Line" : 46,
        "CharPositionInLine" : 44
      },
      "6" : {
        "Text" : "# linuxbrew\n",
        "Line" : 47,
        "CharPositionInLine" : 53
      },
      "7" : {
        "Text" : "# Fink\n\n# MacPorts\n\n# Blastwave\n",
        "Line" : 72,
        "CharPositionInLine" : 29
      },
      "8" : {
        "Text" : "# Homebrew\n",
        "Line" : 77,
        "CharPositionInLine" : 29
      },
      "9" : {
        "Text" : "# Homebrew\n\n# linuxbrew\n",
        "Line" : 78,
        "CharPositionInLine" : 40
      },
      "10" : {
        "Text" : "### Homebrew debugging output\n\n#message(\"Found Raptor at ${RAPTOR_LIBRARY}\")\n\n#message(\"home: $ENV{LINUXBREW}\")\n\n#message(\"user: $ENV{USER}\")\n\n#file(GLOB_RECURSE include_files LIST_DIRECTORIES true $ENV{LINUXBREW}/include/*)\n\n#message(\"${include_files}\")\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Check for cached values\n",
        "Line" : 112,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 12
    },
    "source/raptor/FindRASQAL.cmake" : {
      "ObjectId" : "bfa49a1f67e3c54b5a4de709ea8f0fd212b7bdff",
      "LastModified" : "2018-11-29T17:29:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2012 - 2013 by Pedro Mendes, Virginia Tech Intellectual\n\n# Properties, Inc., University of Heidelberg, and The University\n\n# of Manchester.\n\n# All rights reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find the Rasqal RDF query library (http://librdf.org/rasqal)\n\n# Once done this will define\n\n#\n\n#  RASQAL_FOUND       - system has Rasqal\n\n#  RASQAL_LIBRARIES   - Link these to use Rasqal\n\n#  RASQAL_INCLUDE_DIR - Include directory for using Rasqal\n\n#  RASQAL_DEFINITIONS - Compiler switches required for using Rasqal\n\n#\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# (c) 2007-2011 Sebastian Trueg <trueg@kde.org>\n\n# (c) 2011 Artem Serebriyskiy <v.for.vandal@gmail.com>\n\n# (c) 2011 Michael Jansen <kde@michael-jansen.biz>\n\n#\n\n# Based on FindFontconfig Copyright (c) 2006,2007 Laurent Montel, <montel@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check if we have cached results in case the last round was successful.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Fink\n",
        "Line" : 39,
        "CharPositionInLine" : 33
      },
      "5" : {
        "Text" : "# MacPorts\n",
        "Line" : 40,
        "CharPositionInLine" : 40
      },
      "6" : {
        "Text" : "# Blastwave\n",
        "Line" : 41,
        "CharPositionInLine" : 33
      },
      "7" : {
        "Text" : "# Homebrew\n",
        "Line" : 44,
        "CharPositionInLine" : 43
      },
      "8" : {
        "Text" : "# linuxbrew\n",
        "Line" : 45,
        "CharPositionInLine" : 52
      },
      "9" : {
        "Text" : "# Fink\n\n# MacPorts\n\n# Blastwave\n",
        "Line" : 70,
        "CharPositionInLine" : 29
      },
      "10" : {
        "Text" : "# Homebrew\n",
        "Line" : 75,
        "CharPositionInLine" : 29
      },
      "11" : {
        "Text" : "# Homebrew\n\n# linuxbrew\n",
        "Line" : 76,
        "CharPositionInLine" : 40
      },
      "12" : {
        "Text" : "### Homebrew debugging output\n\n#message(\"Found Rasqal at ${RASQAL_LIBRARY}\")\n\n#message(\"home: $ENV{LINUXBREW}\")\n\n#message(\"user: $ENV{USER}\")\n\n#file(GLOB_RECURSE include_files LIST_DIRECTORIES true $ENV{LINUXBREW}/include/*)\n\n#message(\"${include_files}\")\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Check for cached values\n",
        "Line" : 110,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 14
    },
    "source/raptor/lib/cmake/Raptor2Config-debug.cmake" : {
      "ObjectId" : "867c89a31c8754df275a09a58a0b7fa27d437cf2",
      "LastModified" : "2016-12-24T02:10:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------\n\n# Generated CMake target import file for configuration \"Debug\".\n\n#----------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Commands may need to know the format version.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Import target \"raptor2\" for configuration \"Debug\"\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Commands beyond this point should not need to know the version.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "source/raptor/lib/cmake/Raptor2Config-release.cmake" : {
      "ObjectId" : "6595546049c3038c138a8c32f779ad3615f409c3",
      "LastModified" : "2016-12-24T02:10:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------\n\n# Generated CMake target import file for configuration \"Release\".\n\n#----------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Commands may need to know the format version.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Import target \"raptor2\" for configuration \"Release\"\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Commands beyond this point should not need to know the version.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "source/raptor/lib/cmake/Raptor2Config.cmake" : {
      "ObjectId" : "5457d2b83133c9cbd6add1e78aadce36e490f327",
      "LastModified" : "2016-12-24T02:10:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generated by CMake 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------\n\n# Generated CMake target import file.\n\n#----------------------------------------------------------------\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Commands may need to know the format version.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Protect against multiple inclusion, which would fail when already imported targets are added once more.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compute the installation prefix relative to this file.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create imported target raptor2\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Load information for each installed configuration.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Cleanup temporary variables.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Loop over all imported files and verify that they actually exist\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This file does not depend on other imported targets which have\n\n# been exported from the same project but in a separate export set.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Commands beyond this point should not need to know the version.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "d796347bb7a51aeaf1822be9e64a45a7063a712b",
      "LastModified" : "2018-10-16T18:14:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set policy for using relative paths\n",
        "Line" : 3,
        "CharPositionInLine" : 31
      },
      "1" : {
        "Text" : "# gather source files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# pass definitions to compiler for conditional compilation\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# build test executable\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# dirent is not default system header on Windows\n",
        "Line" : 41,
        "CharPositionInLine" : 53
      },
      "5" : {
        "Text" : "#temporary fix\n",
        "Line" : 47,
        "CharPositionInLine" : 28
      },
      "6" : {
        "Text" : "# build test executable\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#${PYTHON_LIBRARIES} #temporary fix\n",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 8
    },
    "tutorial/pom.xml" : {
      "ObjectId" : "149a498d56eb637dad47a4788089880df12422f7",
      "LastModified" : "2017-02-03T05:41:33Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "wrapper/CMakeLists.txt" : {
      "ObjectId" : "46c1d710980483fdb363a0d0f8c393cfe212a486",
      "LastModified" : "2018-10-16T18:14:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# adjust paths\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# set up some SWIG stuff\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# pass definition to compiler for conditional compilation of code\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# ${LIBXSLT_INCLUDE_DIR}\n\n# ${LIBXML2_INCLUDE_DIR}\n\n# ${LIBZ_INCLUDE_DIR}\n\n# ${LIBXSLT_EXSLT_INCLUDE_DIR}\n\n# ${LIBICONV_INCLUDE_DIR}\n\n# ${LDAP_INCLUDE_DIR}\n",
        "Line" : 31,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "#get_property(dirs DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY INCLUDE_DIRECTORIES)\n\n#foreach(dir ${dirs})\n\n#message(STATUS \"dir='${dir}'\")\n\n#endforeach()\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# gather source files\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#get_directory_property( DirDefs COMPILE_DEFINITIONS )\n\n#message( \"COMPILE_DEFINITIONS = ${DirDefs}\" )\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###### Python 3 for Mac 32x ######\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# build the SWIG wrapper\n",
        "Line" : 68,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# Do not link in the Python libraries on MacOSX....\n",
        "Line" : 79,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# ...rather, resolve Python symbols dynamically due to differing runtime env\n",
        "Line" : 94,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "# Move target to a new directory and rename it, so the SWIG libraries can be directly copied into the pySBOL project\n",
        "Line" : 97,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "##### Python 3 for Mac 64x ######\n",
        "Line" : 119,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# build the SWIG wrapper\n",
        "Line" : 124,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "# Do not link in the Python libraries on MacOSX....\n",
        "Line" : 135,
        "CharPositionInLine" : 12
      },
      "15" : {
        "Text" : "# ...rather, resolve Python symbols dynamically due to differing runtime env\n",
        "Line" : 150,
        "CharPositionInLine" : 12
      },
      "16" : {
        "Text" : "# Move target to a new directory and rename it, so the SWIG libraries can be directly copied into the pySBOL project\n",
        "Line" : 153,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "##### Python 3 for Linux 32x #####\n",
        "Line" : 175,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# target directory is synced with target directory for setup.py script\n",
        "Line" : 177,
        "CharPositionInLine" : 54
      },
      "19" : {
        "Text" : "# build the SWIG wrapper\n",
        "Line" : 180,
        "CharPositionInLine" : 12
      },
      "20" : {
        "Text" : "# linux only\n\n# linux only\n",
        "Line" : 203,
        "CharPositionInLine" : 26
      },
      "21" : {
        "Text" : "# Move target to a new directory and rename it, so the SWIG libraries can be directly copied into the pySBOL project\n",
        "Line" : 209,
        "CharPositionInLine" : 12
      },
      "22" : {
        "Text" : "##### Python 3 for Linux 64x #####\n",
        "Line" : 232,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# target directory is synced with target directory for setup.py script\n",
        "Line" : 234,
        "CharPositionInLine" : 54
      },
      "24" : {
        "Text" : "# build the SWIG wrapper\n",
        "Line" : 237,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "# linux only\n\n# linux only\n",
        "Line" : 260,
        "CharPositionInLine" : 26
      },
      "26" : {
        "Text" : "##### Python 3 for Windows 32x #####\n",
        "Line" : 289,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "##### Python 3 for Windows 64x #####\n",
        "Line" : 342,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "#unset( PYTHON_LIBRARIES CACHE  )\n\n#unset( PYTHONLIBS_FOUND CACHE  )\n\n#unset(PYTHON_INCLUDE_DIRS CACHE  )\n\n#unset(PYTHON_INCLUDE_DIR CACHE  )\n\n#unset(PYTHONLIBS_VERSION_STRING CACHE )\n\n#unset(PYTHON_INCLUDE_PATH CACHE)\n\n#unset( PYTHON_LIBRARIES   )\n\n#unset( PYTHONLIBS_FOUND   )\n\n#unset(PYTHON_INCLUDE_DIRS   )\n\n#unset(PYTHON_INCLUDE_DIR   )\n\n#unset(PYTHONLIBS_VERSION_STRING  )\n\n#unset(PYTHON_INCLUDE_PATH )\n",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "##### Python 2 wrappers for Mac 32x #####\n",
        "Line" : 421,
        "CharPositionInLine" : 9
      },
      "30" : {
        "Text" : "# build the SWIG wrapper\n",
        "Line" : 426,
        "CharPositionInLine" : 12
      },
      "31" : {
        "Text" : "# Do not link in the Python libraries on MacOSX....\n",
        "Line" : 437,
        "CharPositionInLine" : 12
      },
      "32" : {
        "Text" : "### ...rather, resolve Python symbols dynamically due to differing runtime env\n",
        "Line" : 452,
        "CharPositionInLine" : 12
      },
      "33" : {
        "Text" : "### Move target to a new directory and rename it, so the SWIG libraries can be directly copied into the pySBOL project\n",
        "Line" : 455,
        "CharPositionInLine" : 12
      },
      "34" : {
        "Text" : "##### Python 2 for Mac 64x ######\n",
        "Line" : 477,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# build the SWIG wrapper\n",
        "Line" : 482,
        "CharPositionInLine" : 12
      },
      "36" : {
        "Text" : "# Do not link in the Python libraries on MacOSX....\n",
        "Line" : 493,
        "CharPositionInLine" : 12
      },
      "37" : {
        "Text" : "# ...rather, resolve Python symbols dynamically due to differing runtime env\n",
        "Line" : 508,
        "CharPositionInLine" : 12
      },
      "38" : {
        "Text" : "### Move target to a new directory and rename it, so the SWIG libraries can be directly copied into the pySBOL project\n",
        "Line" : 511,
        "CharPositionInLine" : 12
      },
      "39" : {
        "Text" : "##### Python 2 for Linux 32x ######\n",
        "Line" : 533,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# target directory is synced with target directory for setup.py script\n",
        "Line" : 535,
        "CharPositionInLine" : 54
      },
      "41" : {
        "Text" : "# linux only\n\n# linux only\n",
        "Line" : 560,
        "CharPositionInLine" : 26
      },
      "42" : {
        "Text" : "##### Python 2 for Linux 64x ######\n",
        "Line" : 588,
        "CharPositionInLine" : 8
      },
      "43" : {
        "Text" : "# linux only\n\n# linux only\n",
        "Line" : 615,
        "CharPositionInLine" : 26
      },
      "44" : {
        "Text" : "##### Python 2 for Win 32x ######\n",
        "Line" : 644,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "##### Python 2 for Win 64x ######\n",
        "Line" : 698,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 46
    },
    "wrapper/FindSWIG.cmake" : {
      "ObjectId" : "2e34eb1b459d76da6f30c827f40c8621f4bb2dce",
      "LastModified" : "2017-02-03T05:41:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find SWIG\n\n# This module finds an installed SWIG.  It sets the following variables:\n\n#  SWIG_FOUND - set to true if SWIG is found\n\n#  SWIG_DIR - the directory where swig is installed\n\n#  SWIG_EXECUTABLE - the path to the swig executable\n\n#  SWIG_VERSION   - the version number of the swig executable\n\n#\n\n# The minimum required version of SWIG can be specified using the\n\n# standard syntax, e.g. FIND_PACKAGE(SWIG 1.1)\n\n#\n\n# All information is collected from the SWIG_EXECUTABLE so the\n\n# version to be found can be changed from the command line by\n\n# means of setting SWIG_EXECUTABLE\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2004-2009 Kitware, Inc.\n\n# Copyright 2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# force the path to be computed each time in case SWIG_EXECUTABLE has changed.\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 21,
    "MAKEFILE" : 1,
    "MAVEN" : 1
  },
  "ElapsedTime" : 3303
}