{
  "Repository" : "30045161",
  "Revision" : "HEAD",
  "ObjectId" : "c11748dd444926afa2d8224984364e6b92240188",
  "CommitTime" : "2019-04-16T12:04:55Z",
  "Files" : {
    "pom.xml" : {
      "ObjectId" : "323acc14317d4b5f379ca962f2366b0a5944544b",
      "LastModified" : "2019-04-10T14:03:16Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Always use UTF-8 for source code: ",
        "Line" : 50,
        "CharPositionInLine" : 47
      },
      "1" : {
        "Text" : " The version of the metamodel used to specify the model and to generate\n         code from it: ",
        "Line" : 54,
        "CharPositionInLine" : 27
      },
      "2" : {
        "Text" : " The name of the product and the engine that will be used in the generated\n         documentation: ",
        "Line" : 58,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : " The separator used in the identifiers of the sections of the\n         generated AsciiDoc: ",
        "Line" : 64,
        "CharPositionInLine" : 33
      },
      "4" : {
        "Text" : " Flag indicating if the CSS of the generated HTML documentation\n         should be linked or embedded: ",
        "Line" : 68,
        "CharPositionInLine" : 43
      },
      "5" : {
        "Text" : " Do not generate Javadoc, as we explicitly generate a documentation\n         artifact containing the AsciiDoc and HTML generated from the\n         model: ",
        "Line" : 73,
        "CharPositionInLine" : 20
      },
      "6" : {
        "Text" : " Make sure we use Java 8: ",
        "Line" : 93,
        "CharPositionInLine" : 42
      },
      "7" : {
        "Text" : " Generate the AsciiDoc documentation: ",
        "Line" : 143,
        "CharPositionInLine" : 52
      },
      "8" : {
        "Text" : " Generate after compilation ('process-classes' phase) to ensure validity of analyzed files ",
        "Line" : 150,
        "CharPositionInLine" : 111
      },
      "9" : {
        "Text" : " Generate the HTML documentation: ",
        "Line" : 185,
        "CharPositionInLine" : 48
      },
      "10" : {
        "Text" : " Generate a .jar file containing the generared AsciiDoc\n           and HTML documentation, and attach it as the Javadoc\n           artifact: ",
        "Line" : 219,
        "CharPositionInLine" : 25
      },
      "11" : {
        "Text" : " This profile is used to sign the artifacts when performing\n         releases. ",
        "Line" : 277,
        "CharPositionInLine" : 23
      },
      "12" : {
        "Text" : " This profile is used to generate the DocBook documentation: ",
        "Line" : 300,
        "CharPositionInLine" : 73
      },
      "13" : {
        "Text" : " Publican doesn't accept slashes inside section identifiers, so\n           we need to use a dashes instead: ",
        "Line" : 305,
        "CharPositionInLine" : 48
      },
      "14" : {
        "Text" : " Generate the DockBook file: ",
        "Line" : 313,
        "CharPositionInLine" : 47
      },
      "15" : {
        "Text" : " Prepare the generated DocBook so that it can be processed\n               by Publican, and then run Publican: ",
        "Line" : 335,
        "CharPositionInLine" : 55
      },
      "16" : {
        "Text" : " This profile is used to generate the PDF documentation: ",
        "Line" : 369,
        "CharPositionInLine" : 69
      },
      "CommentCount" : 17
    }
  },
  "FileTypes" : {
    "MAVEN" : 1
  },
  "ElapsedTime" : 852
}