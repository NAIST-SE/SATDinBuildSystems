{
  "Repository" : "4084062",
  "Revision" : "HEAD",
  "ObjectId" : "91955227afd92c4a426254f98b6bb6c75b123f9c",
  "CommitTime" : "2019-04-18T19:13:00Z",
  "Files" : {
    "source/CMakeLists.txt" : {
      "ObjectId" : "133c0b2db2cd038be2da37660db93dafb13203a0",
      "LastModified" : "2019-01-04T21:26:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# You can override this var with commandline option -DQFUSION_GAME_DIR=name\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can override this var with commandline option -DQFUSION_CLIENT_NAME=name\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You can override this var with commandline option -DQFUSION_SERVER_NAME=name\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We build angelscript and libRocket from source\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Windows specific settings\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# OS X specific settings\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Compile only 64-bit version\n\n# Compile with latest available OS X sdk\n\n# Use 10.8 as deployment target\n\n# Use GNU99 standart for compiling C files\n\n# Use C++14 standart for compiling C++ files\n\n# Use modern libc++ instead of libstdc++\n",
        "Line" : 110,
        "CharPositionInLine" : 67
      },
      "7" : {
        "Text" : "# libjpeg.framework should be renamed to jpeg.framework to remove this hack\n",
        "Line" : 118,
        "CharPositionInLine" : 28
      },
      "8" : {
        "Text" : "# Linux or mingw specific settings\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If no build type was specified - use release build settings\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# -Wl,--as-needed\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# -s in release link flags\n",
        "Line" : 157,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Linux-only specific settings\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Remove compilating flags from link options\n\n# string(REPLACE \"<FLAGS>\" \"\" CMAKE_C_LINK_EXECUTABLE \"${CMAKE_C_LINK_EXECUTABLE}\")\n\n# string(REPLACE \"<LANGUAGE_COMPILE_FLAGS>\" \"\" CMAKE_C_CREATE_SHARED_LIBRARY \"${CMAKE_C_CREATE_SHARED_LIBRARY}\")\n\n# string(REPLACE \"<LANGUAGE_COMPILE_FLAGS>\" \"\" CMAKE_C_CREATE_SHARED_MODULE \"${CMAKE_C_CREATE_SHARED_MODULE}\")\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Remove soname link flags from library linking options\n",
        "Line" : 180,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Remove -rdynamic from link options\n",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# We need SDL only on non-Windows platforms or when with SDL2-backend\n",
        "Line" : 201,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Do not add 'OR MINGW' here - we need to use suffix-prefix settings from Windows\n",
        "Line" : 252,
        "CharPositionInLine" : 42
      },
      "CommentCount" : 18
    },
    "source/angelwrap/CMakeLists.txt" : {
      "ObjectId" : "f58c1391a56a0235a23f8b741621cd5cca8dc9ce",
      "LastModified" : "2016-09-21T20:22:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/cgame/CMakeLists.txt" : {
      "ObjectId" : "743d10332d8524d9ae9c9ea7d5accb444aa542dd",
      "LastModified" : "2015-02-22T21:28:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/cin/CMakeLists.txt" : {
      "ObjectId" : "5471db10177a3c95775174932ee8c0855d04286a",
      "LastModified" : "2015-08-04T21:08:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/client/CMakeLists.txt" : {
      "ObjectId" : "da8f5ea1e3961a46a2a801d26d2492d847c479a8",
      "LastModified" : "2019-01-04T21:26:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We have to include this for linking with shared MM facilities.\n\n# This also is required to run listen servers (do we allow ranked listen servers?)\n\n# Unused stuff should get stripped anyway.\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "source/cmake/FindOgg.cmake" : {
      "ObjectId" : "87ec627eead1e25cfac88ef32cb2364c7e5e7e0c",
      "LastModified" : "2014-05-09T18:20:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find ogg\n\n# Find the native ogg includes and libraries\n\n#\n\n#  OGG_INCLUDE_DIR - where to find ogg.h, etc.\n\n#  OGG_LIBRARIES   - List of libraries when using ogg.\n\n#  OGG_FOUND       - True if ogg found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# MSVC built ogg may be named ogg_static.\n\n# The provided project files name the library with the lib prefix.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set OGG_FOUND\n\n# to TRUE if all listed variables are TRUE.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "source/cmake/FindSDL2.cmake" : {
      "ObjectId" : "c3df78e3f32d3628589401030893e861ae3bf06f",
      "LastModified" : "2016-09-21T20:22:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL2 library\n\n# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 73,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 74,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 75,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For SDL2main\n",
        "Line" : 126,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 133,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 143,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# For MinGW library\n",
        "Line" : 150,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 155,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 157,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "source/cmake/FindTheora.cmake" : {
      "ObjectId" : "adb0bd6600c96da3de0ad850683b121598d6ea47",
      "LastModified" : "2014-05-09T18:20:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find theora\n\n# Find the native theora includes and libraries\n\n#\n\n#  THEORA_INCLUDE_DIR - where to find theora.h, etc.\n\n#  THEORA_LIBRARIES   - List of libraries when using theora.\n\n#  THEORA_FOUND       - True if theora found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# MSVC built theora may be named *_static\n\n# The provided project files name the library with the lib prefix.\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set THEORA_FOUND\n\n# to TRUE if all listed variables are TRUE.\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "source/cmake/FindVorbis.cmake" : {
      "ObjectId" : "a40745af98df84e13ef2794e8cc1e1aebc4762bd",
      "LastModified" : "2014-05-24T17:46:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find vorbis\n\n# Find the native vorbis includes and libraries\n\n#\n\n#  VORBIS_INCLUDE_DIR - where to find vorbis.h, etc.\n\n#  VORBIS_LIBRARIES   - List of libraries when using vorbis(file).\n\n#  VORBIS_FOUND       - True if vorbis found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# MSVC built vorbis may be named vorbis_static\n\n# The provided project files name the library with the lib prefix.\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set VORBIS_FOUND\n\n# to TRUE if all listed variables are TRUE.\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "source/cmake/QfusionUtils.cmake" : {
      "ObjectId" : "af3930a52c5c7920f62fcbf87444b357283d92e3",
      "LastModified" : "2018-10-12T18:19:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Different helper functions for cmake scripts\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# workaround cmake confusing debug and release libs for zlib and png\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "source/cmake/i386-linux-gnu.cmake" : {
      "ObjectId" : "f71188f1928ce404375c382b3788074df3b29c42",
      "LastModified" : "2014-09-02T11:25:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake -DCMAKE_TOOLCHAIN_FILE=cmake/i386-linux-gnu.cmake -DCMAKE_FIND_ROOT_PATH=~/deb/temp -DCMAKE_C_FLAGS=-m32 -DCMAKE_CXX_FLAGS=-m32 .\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/cmake/i686-mingw.cmake" : {
      "ObjectId" : "123d5d945a404085cd9f151aa24fd8246101ff72",
      "LastModified" : "2014-09-09T18:56:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake -DCMAKE_TOOLCHAIN_FILE=cmake/i686-mingw.cmake .\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SET(CMAKE_AR i686-w64-mingw32-ar)\n\n# SET(CMAKE_RANLIB i686-w64-mingw32-ranlib)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/cmake/x86_64-mingw.cmake" : {
      "ObjectId" : "518771201d680035d3785ec778752712daba0f34",
      "LastModified" : "2014-09-09T18:56:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake -DCMAKE_TOOLCHAIN_FILE=cmake/x86_64-mingw.cmake .\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SET(CMAKE_AR x86_64-w64-mingw32-ar)\n\n# SET(CMAKE_RANLIB x86_64-w64-mingw32-ranlib)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/ftlib/CMakeLists.txt" : {
      "ObjectId" : "e0f595ce5eccaa2ce4de0ee0b10c9dbd893bfb0e",
      "LastModified" : "2016-09-21T20:22:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/game/CMakeLists.txt" : {
      "ObjectId" : "72ec68500a389f65bf7e4b8c3aad4d49e873b7ae",
      "LastModified" : "2019-01-04T20:46:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# constants and types for address parsing\n",
        "Line" : 22,
        "CharPositionInLine" : 20
      },
      "1" : {
        "Text" : "# constants for the antihack system\n",
        "Line" : 23,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 2
    },
    "source/ref_gl/CMakeLists.txt" : {
      "ObjectId" : "bd58e267368dbc0c01433cf1356b3cfd006b045c",
      "LastModified" : "2019-01-31T16:48:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/server/CMakeLists.txt" : {
      "ObjectId" : "7507674deae7750a069d4fe284a52896aabdeea6",
      "LastModified" : "2019-01-31T16:48:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Link Ole32.lib for CoCreateGUID()\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Link libuuid\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "source/snd_openal/CMakeLists.txt" : {
      "ObjectId" : "a1c8e488fab513b9512bd534045b5e2891bfe2af",
      "LastModified" : "2019-01-31T16:48:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Force -O3 for GCC or Clang release builds\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMAKE_EXECUTABLE_SUFFIX breaks CheckTypeSize used by OpenAL-soft's\n\n# cmake file.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Breaks linking with ar used by OpenAL-soft\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "source/ui/CMakeLists.txt" : {
      "ObjectId" : "2558bedd76c56fcb66b6a249ff5a3beedb5a54c9",
      "LastModified" : "2016-09-21T20:22:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# for ui_precompiled.h\n",
        "Line" : 53,
        "CharPositionInLine" : 49
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 19
  },
  "ElapsedTime" : 3403
}