{
  "Repository" : "18414885",
  "Revision" : "HEAD",
  "ObjectId" : "9118f1a58610fc07fbdcca0f52169b701ba0ea11",
  "CommitTime" : "2019-01-08T06:38:01Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "3c3cbaa44e0d6b215e35f799f590aebb37943f3c",
      "LastModified" : "2018-11-02T11:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Prevent in source build, add this options before project keyword\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "bluetoe/bindings/nrf51/CMakeLists.txt" : {
      "ObjectId" : "242934f6707f8c019ea09ca3daf7df4140d0fbd4",
      "LastModified" : "2018-11-02T11:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "bluetoe/link_layer/CMakeLists.txt" : {
      "ObjectId" : "b40e40b28eb024a1661d7a0264af9be1de34217a",
      "LastModified" : "2018-11-02T11:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "bluetoe/services/CMakeLists.txt" : {
      "ObjectId" : "751ccd730cff16af93b81a438020d93995d04bdd",
      "LastModified" : "2018-11-02T11:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "bluetoe/sm/CMakeLists.txt" : {
      "ObjectId" : "b778d067406fef6dfa022dbcdab1370da1af356a",
      "LastModified" : "2018-11-02T11:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "bluetoe/utility/CMakeLists.txt" : {
      "ObjectId" : "0be4f4f109f16406fc67e44a157998ffaaece0da",
      "LastModified" : "2018-11-02T11:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "2f94bc20b59aedb30174f2d7e3f8dcc7b8ec5e53",
      "LastModified" : "2018-11-02T11:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Prevent in source build, add this options before project keyword\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include hardware specific compile options and definitions that must be apllied to the whole project\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set global compile options that are hardware independent, these will be used to build the applications (examples)\n\n#and will also be used to build bluetoe library\n\n# add global compile options\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#toolchain support targets, these are C and asm only, dont add cpp flags yet\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add global options to cpp targets\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#bluetoe library\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "examples/ble_flash/CMakeLists.txt" : {
      "ObjectId" : "f861b0fc2fd639549e09afd61570fac418525c65",
      "LastModified" : "2018-11-02T11:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/cmake/gcc-arm-none-eabi.cmake" : {
      "ObjectId" : "51b407f010bcc4fec9b4156eefd218a3efb51165",
      "LastModified" : "2018-11-02T11:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# for init check\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/doxygen/CMakeLists.txt" : {
      "ObjectId" : "faac492d8bce3a7e7e1697769bf385d29144df13",
      "LastModified" : "2018-11-02T11:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/nrf51/CMakeLists.txt" : {
      "ObjectId" : "209e1828b70008a7cc3f239236388a47abe5d388",
      "LastModified" : "2018-11-02T11:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Stop compilation after first error\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# debugging\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_definitions(-D_LITTLE_ENDIAN=1 -DNRF51 -D__HEAP_SIZE=0)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "examples/nrf51_toolchain_support/CMakeLists.txt" : {
      "ObjectId" : "bbd3155add81f9efb9686cfb2dab63861e48d020",
      "LastModified" : "2018-11-02T11:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# create an interface-only target to publish hardware specific options. Any target that\n\n# requires the hardware specific options need only to depend on this target\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "examples/nrf51_toolchain_support/platform.cmake" : {
      "ObjectId" : "fb7dd948dbe8af1a4c68f00c2fced2bf900ead85",
      "LastModified" : "2018-11-02T11:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set global compile options that depend on hardware and must apply to\n\n# all targets of the project\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# when cmake's 3.13 is released we'll replace this with add_linker_options()\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "examples/nrf52_toolchain_support/CMakeLists.txt" : {
      "ObjectId" : "c286f22e9c0411b89c809f028c0ed374d2e92aca",
      "LastModified" : "2018-11-02T11:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# create an interface-only target to publish hardware specific options. Any target that\n\n# requires the hardware specific options need only to depend on this target\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "examples/nrf52_toolchain_support/platform.cmake" : {
      "ObjectId" : "da5517796235f4659f12601258aaf33b79d63aac",
      "LastModified" : "2018-11-02T11:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set global compile options that depend on hardware and must apply to\n\n# all targets of the project\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# when cmake's 3.13 is released we'll replace this with add_linker_options()\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "7d26d8d990d18fef6a6e20c656de35f5db799aed",
      "LastModified" : "2018-12-22T13:09:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(Boost_DEBUG 1)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/att/CMakeLists.txt" : {
      "ObjectId" : "f21e0cbd5c03a4d7b4dbf8fbb6f7f8a5bb168b92",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/link_layer/CMakeLists.txt" : {
      "ObjectId" : "18e78d178a2c9bcfb1a9a2737af21087439993a6",
      "LastModified" : "2018-11-02T11:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/security_manager/CMakeLists.txt" : {
      "ObjectId" : "73aafcd22462f2612d3e3a437079a7bc05635f5a",
      "LastModified" : "2018-11-02T11:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/services/CMakeLists.txt" : {
      "ObjectId" : "4b276f5cf23947737404618312a12a7c488605fa",
      "LastModified" : "2018-11-02T11:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/test_tools/CMakeLists.txt" : {
      "ObjectId" : "9f81531b13b213ddb3f07a9bfe6f6871e1cb406b",
      "LastModified" : "2018-11-02T11:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 21
  },
  "ElapsedTime" : 802
}