{
  "Repository" : "5622166",
  "Revision" : "HEAD",
  "ObjectId" : "9bdf727ea26447f22b952db87bffd192b59dfda3",
  "CommitTime" : "2019-04-18T19:52:25Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "aff849ed4837b3eff51a35f655af2acabe75fcd1",
      "LastModified" : "2019-04-01T21:25:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "## Creates, provisions, tests, and destroys GCE host for testing staging environment.\n",
        "Line" : 9,
        "CharPositionInLine" : 7
      },
      "1" : {
        "Text" : "## Creates, provisions, tests, and destroys GCE host for testing staging environment under trusty.\n",
        "Line" : 13,
        "CharPositionInLine" : 14
      },
      "2" : {
        "Text" : "## Destroys GCE host for testing staging environment.\n",
        "Line" : 17,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "## Runs linting in linting container.\n",
        "Line" : 21,
        "CharPositionInLine" : 9
      },
      "4" : {
        "Text" : "## pip install mypy in a dedicated python3 virtualenv\n",
        "Line" : 25,
        "CharPositionInLine" : 14
      },
      "5" : {
        "Text" : "## Runs type linting\n",
        "Line" : 32,
        "CharPositionInLine" : 23
      },
      "6" : {
        "Text" : "## Runs custom Ansible env linting tasks.\n",
        "Line" : 36,
        "CharPositionInLine" : 21
      },
      "7" : {
        "Text" : "## Check documentation for common syntax errors.\n",
        "Line" : 40,
        "CharPositionInLine" : 11
      },
      "8" : {
        "Text" : "# The `-W` option converts warnings to errors.\n\n# The `-n` option enables \"nit-picky\" mode.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Build project documentation in live reload for editing\n",
        "Line" : 46,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Spins up livereload environment for editing; blocks.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Validates PEP8 compliance for Python source files.\n",
        "Line" : 51,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "## Tests pylint lint rule compliance.\n",
        "Line" : 55,
        "CharPositionInLine" : 10
      },
      "13" : {
        "Text" : "# The --disable=names is required to use the BEM syntax\n\n# # https://csswizardry.com/2013/01/mindbemding-getting-your-head-round-bem-syntax/\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Validates HTML in web application template files.\n",
        "Line" : 61,
        "CharPositionInLine" : 11
      },
      "15" : {
        "Text" : "## Lints YAML files (does not validate syntax!)\n",
        "Line" : 66,
        "CharPositionInLine" : 10
      },
      "16" : {
        "Text" : "## Lints Bash and sh scripts.\n",
        "Line" : 70,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "## Cleans up temporary container associated with shellcheck target.\n",
        "Line" : 74,
        "CharPositionInLine" : 17
      },
      "18" : {
        "Text" : "## Runs all linting tools (docs, pylint, flake8, HTML, YAML, shell, ansible-config).\n",
        "Line" : 78,
        "CharPositionInLine" : 82
      },
      "19" : {
        "Text" : "## Builds SD Ubuntu docker container\n",
        "Line" : 81,
        "CharPositionInLine" : 21
      },
      "20" : {
        "Text" : "## Builds and tests debian packages\n",
        "Line" : 85,
        "CharPositionInLine" : 12
      },
      "21" : {
        "Text" : "## Builds and tests debian packages (sans tests)\n",
        "Line" : 89,
        "CharPositionInLine" : 19
      },
      "22" : {
        "Text" : "## Builds and tests debian packages (for Trusty)\n",
        "Line" : 93,
        "CharPositionInLine" : 19
      },
      "23" : {
        "Text" : "## Builds and tests debian packages (for Trusty)\n",
        "Line" : 97,
        "CharPositionInLine" : 26
      },
      "24" : {
        "Text" : "## Build docker container for gcloud sdk\n",
        "Line" : 101,
        "CharPositionInLine" : 21
      },
      "25" : {
        "Text" : "## Runs `safety check` to check python dependencies for vulnerabilities\n",
        "Line" : 108,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# Bandit is a static code analysis tool to detect security vulnerabilities in Python applications\n\n# https://wiki.openstack.org/wiki/Security/Projects/Bandit\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Run bandit with medium level excluding test-related folders\n",
        "Line" : 119,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "## Updates all Python requirements files via pip-compile.\n",
        "Line" : 124,
        "CharPositionInLine" : 25
      },
      "29" : {
        "Text" : "## Configure ACLs to allow RWX for libvirt VM (e.g. Admin Workstation)\n",
        "Line" : 135,
        "CharPositionInLine" : 15
      },
      "30" : {
        "Text" : "## Generates self-signed certs for TESTING the HTTPS config\n",
        "Line" : 140,
        "CharPositionInLine" : 25
      },
      "31" : {
        "Text" : "## Package up a vagrant box of the last stable SD release\n",
        "Line" : 145,
        "CharPositionInLine" : 17
      },
      "32" : {
        "Text" : "## Creates local staging environment in VM, autodetecting platform\n",
        "Line" : 149,
        "CharPositionInLine" : 9
      },
      "33" : {
        "Text" : "## Creates local staging VMs based on Trusty, autodetecting platform\n",
        "Line" : 153,
        "CharPositionInLine" : 16
      },
      "34" : {
        "Text" : "## DANGER! Purges all site-specific info and developer files from project.\n",
        "Line" : 157,
        "CharPositionInLine" : 7
      },
      "35" : {
        "Text" : "# Xenial upgrade targets\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "## Boot up an upgrade test base environment using libvirt\n",
        "Line" : 162,
        "CharPositionInLine" : 15
      },
      "37" : {
        "Text" : "## Boot up an upgrade test base env using libvirt in remote apt mode\n",
        "Line" : 166,
        "CharPositionInLine" : 18
      },
      "38" : {
        "Text" : "## Destroy up an upgrade test base environment\n",
        "Line" : 170,
        "CharPositionInLine" : 17
      },
      "39" : {
        "Text" : "## Once an upgrade environment is running, force upgrade apt packages (local pkgs)\n",
        "Line" : 174,
        "CharPositionInLine" : 20
      },
      "40" : {
        "Text" : "## Once an upgrade environment is running, force upgrade apt packages (from qa server)\n",
        "Line" : 178,
        "CharPositionInLine" : 17
      },
      "41" : {
        "Text" : "# Trusty upgrade targets (deprecated)\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "## Boot up an upgrade test base environment (Trusty) using libvirt\n",
        "Line" : 184,
        "CharPositionInLine" : 22
      },
      "43" : {
        "Text" : "## Boot up an upgrade test base env (Trusty) using libvirt in remote apt mode\n",
        "Line" : 188,
        "CharPositionInLine" : 25
      },
      "44" : {
        "Text" : "## Destroy up an upgrade test base (Trusty) environment\n",
        "Line" : 192,
        "CharPositionInLine" : 24
      },
      "45" : {
        "Text" : "## Once an upgrade environment (Trusty) is running, force upgrade apt packages (local pkgs)\n",
        "Line" : 196,
        "CharPositionInLine" : 27
      },
      "46" : {
        "Text" : "## Once an upgrade environment (Trusty) is running, force upgrade apt packages (from qa server)\n",
        "Line" : 200,
        "CharPositionInLine" : 24
      },
      "47" : {
        "Text" : "## Retrieves the most recent Tor packages for Xenial, for apt repo\n",
        "Line" : 205,
        "CharPositionInLine" : 20
      },
      "48" : {
        "Text" : "# Explaination of the below shell command should it ever break.\n\n# 1. Set the field separator to \": ##\" and any make targets that might appear between : and ##\n\n# 2. Use sed-like syntax to remove the make targets\n\n# 3. Format the split fields into $$1) the target name (in blue) and $$2) the target descrption\n\n# 4. Pass this file as an arg to awk\n\n# 5. Sort it alphabetically\n\n# 6. Format columns with colon as delimiter.\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "## Print this message and exit.\n",
        "Line" : 216,
        "CharPositionInLine" : 6
      },
      "50" : {
        "Text" : "## / {printf \"\\033[36m%s\\033[0m : %s\\n\", $$1, $$2}' $(MAKEFILE_LIST) \\\n\t\t| sort \\\n\t\t| column -s ':' -t\n",
        "Line" : 219,
        "CharPositionInLine" : 50
      },
      "CommentCount" : 51
    },
    "admin/Makefile" : {
      "ObjectId" : "967480bb721bf93d0aed93fa2746263107a44bdc",
      "LastModified" : "2018-02-15T21:40:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "## Run tox\n",
        "Line" : 4,
        "CharPositionInLine" : 7
      },
      "1" : {
        "Text" : "## Updates all Python requirements files via pip-compile.\n",
        "Line" : 8,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# Explaination of the below shell command should it ever break.\n\n# 1. Set the field separator to \": ##\" and any make targets that might appear between : and ##\n\n# 2. Use sed-like syntax to remove the make targets\n\n# 3. Format the split fields into $$1) the target name (in blue) and $$2) the target descrption\n\n# 4. Pass this file as an arg to awk\n\n# 5. Sort it alphabetically\n\n# 6. Format columns with colon as delimiter.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Print this message and exit.\n",
        "Line" : 20,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "## / {printf \"\\033[36m%s\\033[0m : %s\\n\", $$1, $$2}' $(MAKEFILE_LIST) \\\n\t\t| sort \\\n\t\t| column -s ':' -t\n",
        "Line" : 23,
        "CharPositionInLine" : 50
      },
      "CommentCount" : 5
    },
    "docs/Makefile" : {
      "ObjectId" : "a27abbbea3c1dfdda863e1545b622db637af5e4b",
      "LastModified" : "2015-10-20T18:11:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "molecule/builder-trusty/Makefile" : {
      "ObjectId" : "3878b4fc40853871668f335de176a36f79c04930",
      "LastModified" : "2019-02-02T01:18:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "## Build container utilized for debian pkg building\n",
        "Line" : 4,
        "CharPositionInLine" : 17
      },
      "1" : {
        "Text" : "## Push todays labeled build image to quay\n",
        "Line" : 8,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "## Print this message and exit.\n",
        "Line" : 12,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "## / {printf \"\\033[36m%s\\033[0m : %s\\n\", $$1, $$2}' $(MAKEFILE_LIST) \\\n\t\t| sort \\\n\t\t| column -s ':' -t\n",
        "Line" : 15,
        "CharPositionInLine" : 50
      },
      "CommentCount" : 4
    },
    "molecule/builder-xenial/Makefile" : {
      "ObjectId" : "32645e84494e37827424d3214ef5fa25e724b419",
      "LastModified" : "2019-02-02T01:18:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "## Build container utilized for debian pkg building\n",
        "Line" : 4,
        "CharPositionInLine" : 17
      },
      "1" : {
        "Text" : "## Push todays labeled build image to quay\n",
        "Line" : 8,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "## Print this message and exit.\n",
        "Line" : 12,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "## / {printf \"\\033[36m%s\\033[0m : %s\\n\", $$1, $$2}' $(MAKEFILE_LIST) \\\n\t\t| sort \\\n\t\t| column -s ':' -t\n",
        "Line" : 15,
        "CharPositionInLine" : 50
      },
      "CommentCount" : 4
    },
    "securedrop/Makefile" : {
      "ObjectId" : "2e6b80cae2743a0f15b2a4436672b0d73c57dea0",
      "LastModified" : "2019-04-16T10:43:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "## Run the python linter with the project's default error settings\n",
        "Line" : 6,
        "CharPositionInLine" : 6
      },
      "1" : {
        "Text" : "## Run the python linter with nothing disabled\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "## Run the test suite in a Ubuntu 16.04 (Xenial) dockerized environment\n",
        "Line" : 20,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "## Run the test suite in a Ubuntu 14.04 (Trusty) dockerized environment (to be removed April 30, 2019)\n",
        "Line" : 24,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "## Run the Python 3 test suite in a Ubuntu 16.04 (Xenial) dockerized environment\n",
        "Line" : 28,
        "CharPositionInLine" : 14
      },
      "5" : {
        "Text" : "## Run all pages-layout tests in all supported languages\n",
        "Line" : 32,
        "CharPositionInLine" : 18
      },
      "6" : {
        "Text" : "## Run the dev server\n",
        "Line" : 36,
        "CharPositionInLine" : 5
      },
      "7" : {
        "Text" : "## Generate the test config\n",
        "Line" : 42,
        "CharPositionInLine" : 13
      },
      "8" : {
        "Text" : "## Runs the page layout tests to regenerate screenshots\n",
        "Line" : 56,
        "CharPositionInLine" : 20
      },
      "9" : {
        "Text" : "## Update POT translation files from sources\n",
        "Line" : 60,
        "CharPositionInLine" : 11
      },
      "10" : {
        "Text" : "## Open up a VNC connection to a running docker instance\n",
        "Line" : 65,
        "CharPositionInLine" : 10
      },
      "11" : {
        "Text" : "# For an explanation of this shell magic, see the Makefile in the root of the repository\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Print this message and exit.\n",
        "Line" : 70,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "## / {printf \"\\033[36m%s\\033[0m : %s\\n\", $$1, $$2}' $(MAKEFILE_LIST) \\\n\t\t| sort \\\n\t\t| column -s ':' -t\n",
        "Line" : 73,
        "CharPositionInLine" : 50
      },
      "CommentCount" : 14
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 6
  },
  "ElapsedTime" : 7408
}