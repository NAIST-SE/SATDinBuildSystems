{
  "Repository" : "48842857",
  "Revision" : "HEAD",
  "ObjectId" : "be0b1ce83e207c9deb8eac9808ebdc0d186c9b42",
  "CommitTime" : "2019-04-18T17:53:49Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "513839666f5b041cd8ad3ecfeae46b2425d70ac4",
      "LastModified" : "2019-03-11T08:00:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# We separate the OSX X and Linux virtualenvs so we can run in a Docker\n\n# container (st2devbox) while doing things on our host Mac machine\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# All components are prefixed by st2 and not .egg-info.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Components that implement a component-controlled test-runner. These components provide an\n\n# in-component Makefile. (Temporary fix until I can generalize the pecan unittest setup. -mar)\n\n# Note: We also want to ignore egg-info dir created during build\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# nasty hack to get a space into a variable\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# results\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Target for debugging Makefile variable assembly\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOTE: We pass --no-deps to the script so we don't install all the\n\n# package dependencies which are already installed as part of \"requirements\"\n\n# make targets. This speeds up the build\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update requirements and then make sure no files were changed\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Lint st2 components\n",
        "Line" : 190,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Lint runner modules and packages\n",
        "Line" : 197,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Lint Python pack management actions\n",
        "Line" : 204,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Lint other packs\n",
        "Line" : 207,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Lint Python scripts\n",
        "Line" : 210,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Make task which verifies st2client installs and works fine\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Setup PYTHONPATH in bash activate script...\n\n# Delete existing entries (if any)\n",
        "Line" : 271,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# Make sure we use latest version of pip which is < 10.0.0\n",
        "Line" : 390,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# Required for packs.install in dev envs.\n",
        "Line" : 393,
        "CharPositionInLine" : 66
      },
      "17" : {
        "Text" : "# Generate all requirements to support current CI pipeline.\n",
        "Line" : 395,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# Generate finall requirements.txt file for each component\n",
        "Line" : 398,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# Fix for Travis CI race\n",
        "Line" : 406,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# Fix for Travis CI caching issue\n",
        "Line" : 409,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# Install requirements\n\n#\n",
        "Line" : 414,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# Install st2common package to load drivers defined in st2common setup.py\n\n# NOTE: We pass --no-deps to the script so we don't install all the\n\n# package dependencies which are already installed as part of \"requirements\"\n\n# make targets. This speeds up the build\n",
        "Line" : 421,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# Note: We install prance here and not as part of any component\n\n# requirements.txt because it has a conflict with our dependency (requires\n\n# new version of requests) which we cant resolve at this moment\n",
        "Line" : 427,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# Install st2common to register metrics drivers\n\n# NOTE: We pass --no-deps to the script so we don't install all the\n\n# package dependencies which are already installed as part of \"requirements\"\n\n# make targets. This speeds up the build\n",
        "Line" : 432,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# Some of the tests rely on submodule so we need to make sure submodules are check out\n",
        "Line" : 438,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# Note: We always want to update virtualenv/bin/activate file to make sure\n\n# PYTHONPATH is up to date and to avoid caching issues on Travis\n",
        "Line" : 442,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# Note: We pass --no-download flag to make sure version of pip which we install (9.0.1) is used\n\n# instead of latest version being downloaded from PyPi\n",
        "Line" : 448,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# Setup PYTHONPATH in bash activate script...\n\n# Delete existing entries (if any)\n",
        "Line" : 452,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "#echo 'PYTHONPATH=$$_OLD_PYTHONPATH:$(COMPONENT_PYTHONPATH)' >> $(VIRTUALENV_DIR)/bin/activate\n",
        "Line" : 467,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "# Setup PYTHONPATH in fish activate script...\n\n#echo '' >> $(VIRTUALENV_DIR)/bin/activate.fish\n\n#echo 'set -gx _OLD_PYTHONPATH $$PYTHONPATH' >> $(VIRTUALENV_DIR)/bin/activate.fish\n\n#echo 'set -gx PYTHONPATH $$_OLD_PYTHONPATH $(COMPONENT_PYTHONPATH)' >> $(VIRTUALENV_DIR)/bin/activate.fish\n\n#echo 'functions -c deactivate old_deactivate' >> $(VIRTUALENV_DIR)/bin/activate.fish\n\n#echo 'function deactivate' >> $(VIRTUALENV_DIR)/bin/activate.fish\n\n#echo '  if test -n $$_OLD_PYTHONPATH' >> $(VIRTUALENV_DIR)/bin/activate.fish\n\n#echo '    set -gx PYTHONPATH $$_OLD_PYTHONPATH' >> $(VIRTUALENV_DIR)/bin/activate.fish\n\n#echo '    set -e _OLD_PYTHONPATH' >> $(VIRTUALENV_DIR)/bin/activate.fish\n\n#echo '  end' >> $(VIRTUALENV_DIR)/bin/activate.fish\n\n#echo '  old_deactivate' >> $(VIRTUALENV_DIR)/bin/activate.fish\n\n#echo '  functions -e old_deactivate' >> $(VIRTUALENV_DIR)/bin/activate.fish\n\n#echo 'end' >> $(VIRTUALENV_DIR)/bin/activate.fish\n\n#touch $(VIRTUALENV_DIR)/bin/activate.fish\n",
        "Line" : 472,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# This is a real target, but we need to do our own make trickery in case some\n\n# but not all of the prerequisites are available\n",
        "Line" : 699,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# @for coverage_result in $(COVERAGE_GLOBS); do \\\n# \t[ -e $${coverage_result} ] || echo \"$${coverage_result} does not exist.\" && continue; \\\n# \techo \"Combining data from $${coverage_result}\"; \\\n# \t. $(VIRTUALENV_DIR)/bin/activate; coverage combine $${coverage_result}; \\\n# done || \\\n# (echo \"Running .coverage-combine\"; make .coverage-combine)\n",
        "Line" : 716,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# >>>>\n",
        "Line" : 842,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Copy over shared dist utils module which is needed by setup.py\n",
        "Line" : 845,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# Copy over CHANGELOG.RST, CONTRIBUTING.RST and LICENSE file to each component directory\n\n#@for component in $(COMPONENTS_TEST); do\\\n\t#\ttest -s $$component/README.rst || cp -f README.rst $$component/; \\\n\t#\tcp -f CONTRIBUTING.rst $$component/; \\\n\t#\tcp -f LICENSE $$component/; \\\n\t#done\n",
        "Line" : 850,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# Verify that all the files which are automatically generated have indeed been re-generated and\n\n# committed\n",
        "Line" : 891,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# 1. Sample config - conf/st2.conf.sample\n",
        "Line" : 895,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# 2. OpenAPI definition file - st2common/st2common/openapi.yaml (generated from\n\n# st2common/st2common/openapi.yaml.j2)\n",
        "Line" : 899,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 39
    },
    "st2actions/Makefile" : {
      "ObjectId" : "3b7d7007f201fee80e0e69771a98d096ad2cc085",
      "LastModified" : "2016-02-16T14:03:38Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# <<<< TO DEPRICATE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# >>>>\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# post_install is triggered debian/rules file, don't call it from install target!\n\n# We don't want anything like below to be postinst\n",
        "Line" : 63,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3,
      "Errorlog" : "line 67:11 token recognition error at: '\"/args\\s'\nline 67:21 token recognition error at: '\\s'\nline 92:17 token recognition error at: '\" >> requirements.txt\\n\\ttouch $@\\n\\nbdist_wheel: .stamp-bdist_wheel\\n.stamp-bdist_wheel: populate_version\\n\\tpython setup.py bdist_wheel -d $(WHEELDIR)\\n\\ttouch $@\\n\u0000'\n"
    },
    "st2api/Makefile" : {
      "ObjectId" : "e748686f332a52cb8d46da120dcd58f0ad1f874a",
      "LastModified" : "2016-02-16T14:03:38Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# <<<< TO DEPRICATE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# >>>>\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# post_install is triggered debian/rules file, don't call it from install target!\n\n# We don't want anything like below to be postinst\n",
        "Line" : 63,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3,
      "Errorlog" : "line 67:11 token recognition error at: '\"/args\\s'\nline 67:21 token recognition error at: '\\s'\nline 92:17 token recognition error at: '\" >> requirements.txt\\n\\ttouch $@\\n\\nbdist_wheel: .stamp-bdist_wheel\\n.stamp-bdist_wheel: populate_version\\n\\tpython setup.py bdist_wheel -d $(WHEELDIR)\\n\\ttouch $@\\n\u0000'\n"
    },
    "st2auth/Makefile" : {
      "ObjectId" : "978551e5bb46cbde404f4a1d73a5d3232b15ebf3",
      "LastModified" : "2016-02-16T14:03:38Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# <<<< TO DEPRICATE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# >>>>\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# post_install is triggered debian/rules file, don't call it from install target!\n\n# We don't want anything like below to be postinst\n",
        "Line" : 63,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3,
      "Errorlog" : "line 67:11 token recognition error at: '\"/args\\s'\nline 67:21 token recognition error at: '\\s'\nline 92:17 token recognition error at: '\" >> requirements.txt\\n\\ttouch $@\\n\\nbdist_wheel: .stamp-bdist_wheel\\n.stamp-bdist_wheel: populate_version\\n\\tpython setup.py bdist_wheel -d $(WHEELDIR)\\n\\ttouch $@\\n\u0000'\n"
    },
    "st2client/Makefile" : {
      "ObjectId" : "726d37de59d58c69af9a75b29c69259d8b54fbe9",
      "LastModified" : "2015-10-23T12:39:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# <<<< TO DEPRICATE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1,
      "Errorlog" : "line 7:54 token recognition error at: '\"__version__ = '\\K'\nline 79:17 token recognition error at: '\" >> requirements.txt\\n\\ttouch $@\\n\\nbdist_wheel: .stamp-bdist_wheel\\n.stamp-bdist_wheel: populate_version\\n\\tpython setup.py bdist_wheel -d $(WHEELDIR)\\n\\ttouch $@\u0000'\n"
    },
    "st2common/Makefile" : {
      "ObjectId" : "e72dd06993d15bc3368b25c446e447bbc8dd1d60",
      "LastModified" : "2018-10-30T17:11:42Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Write temp files which will be processed by debhelpers\n",
        "Line" : 21,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# populate version should be run before any pip/setup.py works\n",
        "Line" : 27,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Install wheels into shared location\n",
        "Line" : 41,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "st2debug/Makefile" : {
      "ObjectId" : "5ab85b58817f06bc692915525e9f3a5bcd02d0bc",
      "LastModified" : "2016-02-16T14:03:38Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# <<<< TO DEPRICATE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# >>>>\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# populate version should be run before any pip/setup.py works\n",
        "Line" : 66,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Install wheels into shared location\n",
        "Line" : 80,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# We can modify requirements ONLY AFTER wheelhouse has been built\n",
        "Line" : 86,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "st2exporter/Makefile" : {
      "ObjectId" : "f28c4c4cf7f4486a17c3a92af231cc64685245e2",
      "LastModified" : "2015-10-23T12:39:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# post_install is triggered debian/rules file, don't call it from install target!\n\n# We don't want anything like below to be postinst\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1,
      "Errorlog" : "line 21:11 token recognition error at: '\"/args\\s'\nline 21:21 token recognition error at: '\\s'\nline 46:17 token recognition error at: '\" >> requirements.txt\\n\\ttouch $@\\n\\nbdist_wheel: .stamp-bdist_wheel\\n.stamp-bdist_wheel: populate_version\\n\\tpython setup.py bdist_wheel -d $(WHEELDIR)\\n\\ttouch $@\\n\u0000'\n"
    },
    "st2reactor/Makefile" : {
      "ObjectId" : "a29d21bbfe94ae87035af1c583eb531f368446e9",
      "LastModified" : "2015-10-23T12:39:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# <<<< TO DEPRICATE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# >>>>\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# post_install is triggered debian/rules file, don't call it from install target!\n\n# We don't want anything like below to be postinst\n",
        "Line" : 49,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3,
      "Errorlog" : "line 51:11 token recognition error at: '\"/args\\s'\nline 51:21 token recognition error at: '\\s'\nline 76:17 token recognition error at: '\" >> requirements.txt\\n\\ttouch $@\\n\\nbdist_wheel: .stamp-bdist_wheel\\n.stamp-bdist_wheel: populate_version\\n\\tpython setup.py bdist_wheel -d $(WHEELDIR)\\n\\ttouch $@\\n\u0000'\n"
    },
    "st2stream/Makefile" : {
      "ObjectId" : "8e1a434234082371021f0b44dda3f7a31aeceefa",
      "LastModified" : "2018-10-30T17:11:42Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# <<<< TO DEPRICATE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# >>>>\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# post_install is triggered debian/rules file, don't call it from install target!\n\n# We don't want anything like below to be postinst\n",
        "Line" : 63,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3,
      "Errorlog" : "line 67:11 token recognition error at: '\"/args\\s'\nline 67:21 token recognition error at: '\\s'\nline 92:17 token recognition error at: '\" >> requirements.txt\\n\\ttouch $@\\n\\nbdist_wheel: .stamp-bdist_wheel\\n.stamp-bdist_wheel: populate_version\\n\\tpython setup.py bdist_wheel -d $(WHEELDIR)\\n\\ttouch $@\\n\u0000'\n"
    },
    "st2tests/Makefile" : {
      "ObjectId" : "5ab85b58817f06bc692915525e9f3a5bcd02d0bc",
      "LastModified" : "2018-10-30T17:11:42Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# <<<< TO DEPRICATE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# >>>>\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# populate version should be run before any pip/setup.py works\n",
        "Line" : 66,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Install wheels into shared location\n",
        "Line" : 80,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# We can modify requirements ONLY AFTER wheelhouse has been built\n",
        "Line" : 86,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 11
  },
  "ElapsedTime" : 5345
}