{
  "Repository" : "10534193",
  "Revision" : "HEAD",
  "ObjectId" : "ec0ba4185a3b8dbd8dd5e8f3451243f831d9e9fc",
  "CommitTime" : "2019-04-16T03:28:43Z",
  "Files" : {
    "CMakeGraphVizOptions.cmake" : {
      "ObjectId" : "35748c28fc209d3c988179216d7b74c84b0d01cb",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake configuration to control the look and contents of generated graphviz files.\n\n#\n\n# Documentation: https://cmake.org/cmake/help/latest/module/CMakeGraphVizOptions.html\n\n#\n\n# To generate a dependency graph from the build directory:\n\n#\n\n#   cmake . --graphviz=wireshark.dot\n\n#   fdp wireshark.dot -Tpdf -o wireshark.pdf\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeLists.txt" : {
      "ObjectId" : "95822cd0a6543cc7cbf30e33f11a1b59e9bef5ed",
      "LastModified" : "2019-04-09T04:28:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Needed for GREATER_EQUAL operator\n",
        "Line" : 11,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Updated by tools/make-version.pl\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Where to find local cmake scripts\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If our target platform is enforced by our generator, set\n\n# WIRESHARK_TARGET_PLATFORM accordingly. Otherwise use\n\n# %WIRESHARK_TARGET_PLATFORM%.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Sanity check\n",
        "Line" : 70,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# x86\n",
        "Line" : 74,
        "CharPositionInLine" : 34
      },
      "7" : {
        "Text" : "# Determine where the 3rd party libraries will be\n",
        "Line" : 86,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# The buildbots set WIRESHARK_LIB_DIR but not WIRESHARK_BASE_DIR.\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Don't know what to do\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Download third-party libraries\n",
        "Line" : 98,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Is it possible to have a one-time, non-cached option in CMake? If\n\n# so, we could add a \"-DFORCE_WIN_SETUP\" which passes -Force to\n\n# win-setup.ps1.\n",
        "Line" : 102,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# XXX Add a dependency on ${_ws_lib_dir}/current_tag.txt?\n",
        "Line" : 115,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Prepopulate some ConfigureChecks values. Compilation checks\n\n# on Windows can be slow.\n",
        "Line" : 117,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# It looks like we call check_type_size somewhere, which checks\n\n# for these.\n",
        "Line" : 123,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# This cannot be implemented via option(...)\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Ensure that all executables and libraries end up in the same directory. Actual\n\n# files might end up in a configuration subdirectory, e.g. run/Debug or\n\n# run/Release. We try to set DATAFILE_DIR to actual location below.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n\n# The release mode (CMAKE_BUILD_TYPE=release) defines NDEBUG for\n\n# the Unix Makefile generator.\n\n#\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Defines CMAKE_INSTALL_BINDIR, CMAKE_INSTALL_DATADIR, etc ...\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Override some values on Windows, to match the existing\n\n# convention of installing everything to a single root folder.\n",
        "Line" : 164,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# By default INSTALL_DATADIR is set to INSTALL_DATAROOTDIR, set the\n\n# proper value here.\n",
        "Line" : 172,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# Make sure our executables can can load our libraries if we install into\n\n# a non-default directory on Unix-like systems other than macOS.\n\n# https://gitlab.kitware.com/cmake/community/wikis/doc/cmake/RPATH-handling\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Try to set a RPATH for installed binaries if the library directory is\n\n# not already included in the default search list.\n",
        "Line" : 189,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# Some systems support $ORIGIN in RPATH to enable relocatable\n\n# binaries. In other cases, only absolute paths can be used.\n\n# https://www.lekensteyn.nl/rpath.html\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Provide a knob to optionally force absolute rpaths,\n\n# to support old/buggy systems and as a user preference\n\n# for hardening.\n",
        "Line" : 197,
        "CharPositionInLine" : 3
      },
      "25" : {
        "Text" : "# dumpcap will most likely be installed with\n\n# capabilities or setuid. Relative RPATHs that\n\n# resolve to non-standard library directories\n\n# are ignored for such binaries and since we\n\n# cannot achieve relocatable builds, just\n\n# disable it by default.\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Include non-standard external libraries by default in RPATH.\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Ensure that executables in the build directory always have the same RPATH.\n\n# This ensures relocatable binaries and reproducible builds (invariant of the\n\n# build directory location). (Requires CMake 3.14)\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Linking with wsetargv.obj enables \"wildcard expansion\" of\n\n# command-line arguments.\n",
        "Line" : 238,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Banner shown at top right of Qt welcome screen.\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# These are required in .rc files and manifests\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# The following snippet has been taken from\n\n# https://github.com/USESystemEngineeringBV/cmake-eclipse-helper/wiki/HowToWorkaroundIndexer\n\n# The eclipse indexer otherwise assumes __cplusplus=199711L which will lead to broken\n\n# lookup tables for the epan libraries\n\n# Check if CXX flags have been set to c++11 -> Setup Eclipse Indexer correctly!\n\n# Also setup the project slightly different\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Combined project (C and CXX). This will confuse the indexer. For that reason\n\n# we unsert set the __cplusplus variable for the indexer\n",
        "Line" : 283,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "#add_definitions (-D__cplusplus=201103L)\n\n# CMAKE_EXTRA_GENERATOR_CXX_SYSTEM_DEFINED_MACROS\n",
        "Line" : 292,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# In oss-fuzz mode, the fuzzing engine can be afl or libFuzzer.\n",
        "Line" : 324,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Must not depend on external dependencies so statically link all libs.\n",
        "Line" : 327,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "#\n\n# Linking can consume a lot of memory, especially when built with ASAN and\n\n# static libraries (like oss-fuzz) or Debug mode. With Ninja, the number of\n\n# parallel linker processes is constrained by job parallelism (-j), but this can\n\n# be reduced further by setting \"job pools\" to a lower number.\n\n#\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Assume oss-fuzz linker jobs do not require more than 1.2G per task\n",
        "Line" : 338,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# Always enable position-independent code when compiling, even for\n\n# executables, so you can build position-independent executables.\n\n# -pie is added below for non-MSVC, but requires objects to be built with\n\n# -fPIC/-fPIE (so set CMAKE_POSITION_INDEPENDENT_CODE to enable that).\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Path to our generated executables (or wrapper scripts)\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# NOMINMAX keeps windows.h from defining \"min\" and \"max\" via windef.h.\n\n# This avoids conflicts with the C++ standard library.\n",
        "Line" : 371,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# -DPSAPI_VERSION=1                 Programs that must run on earlier versions of Windows as well as Windows 7 and later\n\n#                                   versions should always call this function as GetProcessMemoryInfo. To ensure correct\n\n#                                   resolution of symbols, add Psapi.lib to the TARGETLIBS macro and compile the program\n\n#                                   with -DPSAPI_VERSION=1.To use run-time dynamic linking, load Psapi.dll.\n\n#                                   http://msdn.microsoft.com/en-us/library/windows/desktop/ms683219(v=vs.85).aspx\n\n# -D_ALLOW_KEYWORD_MACROS           For VS2012 onwards the, C++ STL does not permit macro redefinitions of keywords\n\n#                                   (see http://msdn.microsoft.com/en-us/library/bb531344(v=vs.110).aspx)\n\n#                                   This definition prevents the complaint about the redefinition of inline by WinPCap\n\n#                                   in pcap-stdinc.h when compiling C++ files, e.g. the Qt UI\n",
        "Line" : 374,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# To do: Add /external:... See https://blogs.msdn.microsoft.com/vcblog/2017/12/13/broken-warnings-theory/\n\n#\n\n# /Zo                               Enhanced debugging of optimised code\n\n# /utf-8                            Set Source and Executable character sets to UTF-8\n\n#                                   VS2015(MSVC14): On by default when /Zi or /Z7 used.\n\n# /guard:cf                         Control Flow Guard (compile and link).\n\n#                                   See https://msdn.microsoft.com/en-us/library/windows/desktop/mt637065.aspx\n\n#                                   Note: This requires CMake 3.9.0 or newer.\n\n#                                   https://gitlab.kitware.com/cmake/cmake/commit/f973d49ab9d4c59b93f6dac812a94bb130200836\n\n# /Qspectre                         Speculative execution attack mitigation\n\n#                                   See https://blogs.msdn.microsoft.com/vcblog/2018/01/15/spectre-mitigations-in-msvc/\n",
        "Line" : 397,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "# /Qspectre is not available for VS2015 or older VS2017. Test for its availability.\n",
        "Line" : 410,
        "CharPositionInLine" : 1
      },
      "44" : {
        "Text" : "# Additional compiler warnings to be treated as \"Level 3\"\n\n# when compiling Wireshark sources. (Selected from \"level 4\" warnings).\n\n## 4295: array is too small to include a terminating null character\n\n## 4189: local variable is initialized but not referenced\n\n# Disable warnings about about use of flexible array members:\n\n## 4200: nonstandard extension used : zero-sized array in struct/union\n",
        "Line" : 417,
        "CharPositionInLine" : 1
      },
      "45" : {
        "Text" : "# We've matched these to specific compiler versions using the\n\n# checks above. There's no need to pass them to check_c_compiler_flag\n\n# or check_cxx_compiler_flag, which can be slow.\n",
        "Line" : 425,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "# ! MSVC\n",
        "Line" : 432,
        "CharPositionInLine" : 7
      },
      "47" : {
        "Text" : "# Arbitrary.\n",
        "Line" : 434,
        "CharPositionInLine" : 30
      },
      "48" : {
        "Text" : "#\n\n# Do whatever is necessary to enable as much C99 support as\n\n# possible in the C compiler.  Newer versions of compilers\n\n# might default to supporting C99, but older versions may\n\n# require a special flag.\n\n#\n\n# We do not want strict C99 support, as we may also want to\n\n# use compiler extensions.\n\n#\n\n# Prior to CMake 3.1, setting CMAKE_C_STANDARD will not have\n\n# any effect, so, unless and until we require CMake 3.1 or\n\n# later, we have to do it ourselves on pre-3.1 CMake, so we\n\n# just do it ourselves on all versions of CMake.\n\n#\n\n# Note: with CMake 3.1 through 3.5, the only compilers for\n\n# which CMake handles CMAKE_C_STANDARD are GCC and Clang.\n\n# 3.6 adds support only for Intel C; 3.9 adds support for\n\n# PGI C, Sun C, and IBM XL C, and 3.10 adds support for\n\n# Cray C and IAR C, but no version of CMake has support for\n\n# HP C.  Therefore, even if we use CMAKE_C_STANDARD with\n\n# compilers for which CMake supports it, we may still have\n\n# to do it ourselves on other compilers.\n\n#\n\n# In addition, CMake 3.5.2 seems to think that GCC versions\n\n# less than 4.4 don't support -std=gnu99, which we need in\n\n# order to get support for \"for (int i = 0; i < n; i++) ;\",\n\n# which is another reason not to rely on CMake's CMAKE_C_STANDARD\n\n# support.\n\n#\n\n# See the CMake documentation for the CMAKE_<LANG>_COMPILER_ID\n\n# variables for a list of compiler IDs.\n\n#\n\n# We don't worry about MSVC; it doesn't have such a flag -\n\n# either it doesn't support the C99 features we need at all,\n\n# or it supports them regardless of the compiler flag.\n\n#\n\n# XXX - we add the flag for a given compiler to CMAKE_C_FLAGS,\n\n# so we test whether it works and add it if we do.  We don't\n\n# test whether it's necessary in order to get the C99 features\n\n# that we use; if we ever have a user who tries to compile with\n\n# a compiler that can't be made to support those features, we\n\n# can add a test to make sure we actually *have* C99 support.\n\n#\n",
        "Line" : 446,
        "CharPositionInLine" : 1
      },
      "49" : {
        "Text" : "#\n\n# We use -std=gnu99 rather than -std=c99 because, for\n\n# some older compilers such as GCC 4.4.7, -std=gnu99\n\n# is required to avoid errors about C99 constructs\n\n# such as \"for (int i = 0; i < n; i++) ;\".\n\n#\n",
        "Line" : 491,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "#\n\n# We want support for extensions picked up for\n\n# GNU C compatibility, so we use -qlanglvl=extc99.\n\n#\n",
        "Line" : 499,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "#\n\n# We also need to add -Wp,-H200000 to handle some large\n\n# #defines we have; that flag is not necessary for the\n\n# C++ compiler unless the \"legacy\" C++ preprocessor is\n\n# being used (+legacy_cpp).  We don't want the legacy\n\n# preprocessor if it's not the default, so we just add\n\n# -Wp,-H200000 to the C flags.  (If there are older\n\n# versions of aC++ that only support the legacy\n\n# preprocessor, and require that we boost the table\n\n# size, we'd have to check whether -Wp,-H200000 is\n\n# supported by the C++ compiler and add it only if it is.)\n\n#\n",
        "Line" : 505,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "#\n\n# We also crank up the warning level.\n\n#\n",
        "Line" : 519,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# avoid \"argument unused during compilation\" warnings\n\n# (for example, when getting the -gsplit-dwarf option or\n\n# when combining -fwrapv with -fno-strict-overflow)\n",
        "Line" : 529,
        "CharPositionInLine" : 3
      },
      "54" : {
        "Text" : "# The following are for C and C++\n\n# -O<X> and -g get set by the CMAKE_BUILD_TYPE\n",
        "Line" : 541,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "#\n\n# Code that may be worth looking into (coding practices)\n\n#\n",
        "Line" : 563,
        "CharPositionInLine" : 1
      },
      "56" : {
        "Text" : "#\n\n# Only do this if none of ASan, TSan, and UBSan are\n\n# enabled; the instrumentation they add increases\n\n# the stack usage - we only care about stack\n\n# usage in normal operation.\n\n#\n",
        "Line" : 567,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# The following are C only, not C++\n",
        "Line" : 579,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "#\n\n# XXX - some versions of GCC, including the one in at\n\n# least some Xcode versions that come with Mac OS X\n\n# 10.5, complain about variables in function and\n\n# function pointer *declarations* shadowing other\n\n# variables.  The autoconf script checked for that; we\n\n# don't.\n",
        "Line" : 582,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "#\n\n# Some versions of GCC, such as 4.3.2 and 4.4.5,\n\n# generate logical-op warnings when strchr() is given a\n\n# constant string.  The autoconf script checked for that;\n\n# we don't.\n\n#\n",
        "Line" : 593,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "#\n\n# Implicit function declarations are an error in C++ and most\n\n# likely a programming error in C. Turn -Wimplicit-int and\n\n# -Wimplicit-function-declaration into an error by default.\n\n#\n",
        "Line" : 601,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "#\n\n# The universal zero initializer (in C: struct s x = { 0 };) for\n\n# structures with multiple members is perfectly legal, but some older\n\n# compilers warn about it. Silence those older compilers.\n\n#\n",
        "Line" : 609,
        "CharPositionInLine" : 1
      },
      "62" : {
        "Text" : "# Silence warnings for initialization of nested structs like\n\n# struct { struct { int a, b; } s; int c; } v = { 0 };\n",
        "Line" : 620,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "#\n\n# These are not enabled by default, because the warnings they\n\n# produce are very hard or impossible to eliminate.\n\n#\n",
        "Line" : 630,
        "CharPositionInLine" : 1
      },
      "64" : {
        "Text" : "# This overrides -Werror\n",
        "Line" : 634,
        "CharPositionInLine" : 38
      },
      "65" : {
        "Text" : "# The following are for C and C++\n",
        "Line" : 636,
        "CharPositionInLine" : 3
      },
      "66" : {
        "Text" : "#\n\n# As we use variadic macros, we don't want warnings\n\n# about them, even with -Wpedantic.\n\n#\n",
        "Line" : 638,
        "CharPositionInLine" : 3
      },
      "67" : {
        "Text" : "#\n\n# Various code blocks this one.\n\n#\n",
        "Line" : 643,
        "CharPositionInLine" : 3
      },
      "68" : {
        "Text" : "#\n\n# Due to various places where APIs we don't control\n\n# require us to cast away constness, we can probably\n\n# never enable this one with -Werror.\n\n#\n",
        "Line" : 648,
        "CharPositionInLine" : 3
      },
      "69" : {
        "Text" : "#\n\n# Some generated ASN.1 dissectors block this one;\n\n# multiple function declarations for the same\n\n# function are being generated.\n\n#\n",
        "Line" : 654,
        "CharPositionInLine" : 3
      },
      "70" : {
        "Text" : "#\n\n# Some loops are safe, but it's hard to convince the\n\n# compiler of that.\n\n#\n",
        "Line" : 660,
        "CharPositionInLine" : 3
      },
      "71" : {
        "Text" : "#\n\n# All the registration functions block these for now.\n\n#\n",
        "Line" : 665,
        "CharPositionInLine" : 3
      },
      "72" : {
        "Text" : "#\n\n# A bunch of \"that might not work on SPARC\" code blocks\n\n# this one for now; some of it is code that *will* work\n\n# on SPARC, such as casts of \"struct sockaddr *\" to\n\n# \"struct sockaddr_in *\", which are required by some\n\n# APIs such as getifaddrs().\n\n#\n",
        "Line" : 670,
        "CharPositionInLine" : 3
      },
      "73" : {
        "Text" : "#\n\n# Works only with Clang\n\n#\n",
        "Line" : 678,
        "CharPositionInLine" : 3
      },
      "74" : {
        "Text" : "#\n\n# Works only with Clang but generates a lot of warnings\n\n# (about glib library not using Doxygen)\n\n#\n",
        "Line" : 682,
        "CharPositionInLine" : 3
      },
      "75" : {
        "Text" : "#\n\n# Works only with GCC 7\n\n#\n",
        "Line" : 687,
        "CharPositionInLine" : 3
      },
      "76" : {
        "Text" : "#\n\n# No longer supported by El Capitan clang on C++\n\n# XXX - is this one of those where CMake's check\n\n# doesn't fail, so it won't reject this?\n\n#\n",
        "Line" : 691,
        "CharPositionInLine" : 3
      },
      "77" : {
        "Text" : "# The following are C only, not C++\n\n#\n\n# Due to various places where APIs we don't control\n\n# require us to cast away constness, we can probably\n\n# never enable this one with -Werror.\n\n#\n",
        "Line" : 700,
        "CharPositionInLine" : 3
      },
      "78" : {
        "Text" : "# See also CheckCLinkerFlag.cmake\n",
        "Line" : 719,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# -flto\n\n# -fwhopr\n\n# -fwhole-program\n",
        "Line" : 721,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "# ! MSVC\n",
        "Line" : 725,
        "CharPositionInLine" : 8
      },
      "81" : {
        "Text" : "# Counterhack to work around some cache magic in CHECK_C_SOURCE_COMPILES\n",
        "Line" : 727,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Strips the source and build directory prefix from the __FILE__ macro to ensure\n\n# reproducible builds. Supported since GCC 8, Clang support is pending.\n",
        "Line" : 762,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# If the build dir is within the source dir, CMake will use something\n\n# like ../epan/dfilter/semcheck.c. Map these relative paths in addition\n\n# to CMAKE_BINARY_DIR since compile_commands.json uses absolute paths.\n",
        "Line" : 765,
        "CharPositionInLine" : 1
      },
      "84" : {
        "Text" : "# Disable ASAN for build-time tools, e.g. lemon\n",
        "Line" : 798,
        "CharPositionInLine" : 1
      },
      "85" : {
        "Text" : "# Available since Clang >= 3.2 and GCC >= 4.8\n",
        "Line" : 807,
        "CharPositionInLine" : 1
      },
      "86" : {
        "Text" : "# Available since Clang >= 3.3 and GCC >= 4.9\n",
        "Line" : 822,
        "CharPositionInLine" : 1
      },
      "87" : {
        "Text" : "# Available since Clang >= 6\n\n# Will enable coverage flags which can be used by the fuzzshark target.\n",
        "Line" : 836,
        "CharPositionInLine" : 1
      },
      "88" : {
        "Text" : "#\n\n# If a warning has been enabled by -Wall or -W,\n\n# and have specified -Werror, there appears to be\n\n# no way, in Apple's llvm-gcc, to prevent that\n\n# particular warning from giving an error - not\n\n# with a pragma, not with -Wno-{warning}, and not\n\n# with -Wno-error={warning}.\n\n#\n\n# Therefore, with that compiler, we just disable\n\n# -Werror.\n\n#\n",
        "Line" : 855,
        "CharPositionInLine" : 2
      },
      "89" : {
        "Text" : "#\n\n# Try to have the compiler default to hiding symbols, so that only\n\n# symbols explicitly exported with WS_DLL_PUBLIC will be visible\n\n# outside (shared) libraries; that way, more UN*X builds will catch\n\n# failures to export symbols, rather than having that fail only on\n\n# Windows.\n\n#\n\n# We don't need that with MSVC, as that's the default.\n\n#\n",
        "Line" : 875,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "#\n\n# Try the GCC-and-compatible -fvisibility-hidden first.\n\n#\n",
        "Line" : 885,
        "CharPositionInLine" : 1
      },
      "91" : {
        "Text" : "#\n\n# OK, try the Sun^WOracle C -xldscope=hidden\n\n#\n",
        "Line" : 892,
        "CharPositionInLine" : 2
      },
      "92" : {
        "Text" : "#\n\n# Anything else?\n\n# If there is anything else, we might want to\n\n# make a list of options to try, and try them\n\n# in a loop.\n\n#\n",
        "Line" : 899,
        "CharPositionInLine" : 3
      },
      "93" : {
        "Text" : "#\n\n# The -pie linker option produces a position-independent executable.\n\n# Some Linux distributions have this enabled by default in the compiler,\n\n# so setting it here will be superfluous though.\n\n#\n\n# Note that linking with static libraries that are not position\n\n# independent may fail, the user can set CMAKE_EXE_LINKER_FLAGS=-no-pie\n\n# as a workaround.\n\n#\n",
        "Line" : 914,
        "CharPositionInLine" : 1
      },
      "94" : {
        "Text" : "# GLib on macOS requires libintl. Homebrew installs gettext (and\n\n# libintl) in /usr/local/opt/gettext\n",
        "Line" : 944,
        "CharPositionInLine" : 1
      },
      "95" : {
        "Text" : "# Resets cache variables if the <PackageName>_LIBRARY has become invalid.\n\n# Call it before a find_package(<PackageName> ...) invocation that uses\n\n# find_library(<PackageName>_LIBRARY ...).\n\n#\n\n# Usage: reset_find_package(<PackageName> [<extra variables to clear>])\n",
        "Line" : 950,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# find_library / find_package\n",
        "Line" : 957,
        "CharPositionInLine" : 2
      },
      "97" : {
        "Text" : "# mark_as_advanced\n",
        "Line" : 960,
        "CharPositionInLine" : 2
      },
      "98" : {
        "Text" : "# Others\n",
        "Line" : 963,
        "CharPositionInLine" : 2
      },
      "99" : {
        "Text" : "# Cache variable is already missing or cache entry is valid.\n",
        "Line" : 971,
        "CharPositionInLine" : 2
      },
      "100" : {
        "Text" : "# ws_find_package(<PackageName>\n\n#             <CMakeOptions.txt boolean variable>\n\n#             <cmakeconfig.h.in macro definition>\n\n#             [remaining find_package() arguments])\n",
        "Line" : 980,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# Clear outdated cache variables if not already.\n",
        "Line" : 986,
        "CharPositionInLine" : 2
      },
      "102" : {
        "Text" : "# The minimum package list\n",
        "Line" : 995,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# Locate the Python interpreter. Finds the wrong (Python 2) version if:\n\n# - PATH contains python3.6, but not python3 (3.4). Affects RHEL7+EPEL.\n\n# - Path contains C:\\Python27 but not C:\\Python37 (which is installed,\n\n#   but not present in PATH).\n",
        "Line" : 1012,
        "CharPositionInLine" : 1
      },
      "104" : {
        "Text" : "# Several files (including LocatePythonModule) still use the old name\n\n# from FindPythonInterp, let's stick to it for now.\n",
        "Line" : 1019,
        "CharPositionInLine" : 1
      },
      "105" : {
        "Text" : "# Build the Qt GUI?\n",
        "Line" : 1040,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# Untested, may not work if CMAKE_PREFIX_PATH gets overwritten\n\n# somewhere. The if WIN32 in this place is annoying as well.\n",
        "Line" : 1042,
        "CharPositionInLine" : 1
      },
      "107" : {
        "Text" : "# Homebrew installs Qt5 (up to at least 5.11.0) in\n\n# /usr/local/qt5. Ensure that it can be found by CMake\n\n# since it is not in the default /usr/local prefix.\n\n# Add it to PATHS so that it doesn't override the\n\n# CMAKE_PREFIX_PATH environment variable.\n\n# QT_FIND_PACKAGE_OPTIONS should be passed to find_package,\n\n# e.g. find_package(Qt5Core ${QT_FIND_PACKAGE_OPTIONS})\n",
        "Line" : 1049,
        "CharPositionInLine" : 2
      },
      "108" : {
        "Text" : "# MaxMind DB address resolution\n",
        "Line" : 1084,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "# SMI SNMP\n",
        "Line" : 1087,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "# Support for TLS decryption using RSA private keys.\n",
        "Line" : 1091,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "# Kerberos\n",
        "Line" : 1094,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "# C Asynchronous resolver\n",
        "Line" : 1097,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "# Zlib compression\n",
        "Line" : 1100,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "# LZ4 compression\n",
        "Line" : 1103,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "# Snappy compression\n",
        "Line" : 1106,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "# Enhanced HTTP/2 dissection\n",
        "Line" : 1109,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "# Embedded Lua interpreter\n",
        "Line" : 1112,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "# CMake 3.9 and below used 'LIBXML2_LIBRARIES' as the name of the cache entry\n\n# storing the find_library result. Transfer it to the new cache variable such\n\n# that reset_find_package can detect and clear outdated cache variables.\n",
        "Line" : 1123,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "# Call reset_find_package explicitly since variables are in upper case.\n",
        "Line" : 1129,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "# CMake 3.9 and below used LIBXML2_LIBRARIES as the name of\n\n# the cache entry storing the find_library result.\n\n# Current CMake (3.13) and below sets LIBXML2_LIBRARIES and LIBXML2_INCLUDE_DIRS\n\n# to a non-empty value, be sure to clear it when not found.\n",
        "Line" : 1133,
        "CharPositionInLine" : 1
      },
      "121" : {
        "Text" : "# Capabilities\n",
        "Line" : 1141,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "# Windows version updates\n",
        "Line" : 1147,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "# dist target that prepares source dir\n\n# XXX Duplicated in the RPM section below.\n",
        "Line" : 1154,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "# While all Linux and Windows builds have PKCS #11 support enabled,\n\n# macos-setup.sh explicitly disables it using --without-p11-kit.\n\n#\n\n# Require at least GnuTLS 3.4.0 such that public keys can be calculated\n\n# from PKCS #11 private keys.\n",
        "Line" : 1162,
        "CharPositionInLine" : 1
      },
      "125" : {
        "Text" : "# Qt 5.7 and later require C++ 11.\n",
        "Line" : 1184,
        "CharPositionInLine" : 2
      },
      "126" : {
        "Text" : "# Squelch moc verbose \"nothing to do\" output\n",
        "Line" : 1189,
        "CharPositionInLine" : 2
      },
      "127" : {
        "Text" : "# CMake uses qmake to find Qt4. It relies on Qt's CMake modules\n\n# to find Qt5. This means that we can't assume that the qmake\n\n# in our PATH is the correct one. We can fetch qmake's location\n\n# from Qt5::qmake, which is is defined in Qt5CoreConfigExtras.cmake.\n",
        "Line" : 1193,
        "CharPositionInLine" : 1
      },
      "128" : {
        "Text" : "# Use qmake to find windeployqt and macdeployqt. Ideally one of\n\n# the modules in ${QTDIR}/lib/cmake would do this for us.\n",
        "Line" : 1202,
        "CharPositionInLine" : 1
      },
      "129" : {
        "Text" : "# https://doc.qt.io/qt-5.11/supported-platforms-and-configurations.html\n\n# CMake < 3.7 doesn't support VERSION_GREATER_EQUAL.\n",
        "Line" : 1218,
        "CharPositionInLine" : 2
      },
      "130" : {
        "Text" : "#\n\n# Platform-specific additional libraries.\n\n#\n",
        "Line" : 1242,
        "CharPositionInLine" : 0
      },
      "131" : {
        "Text" : "#\n\n# We assume that APPLE means macOS so that we have the macOS\n\n# frameworks.\n\n#\n",
        "Line" : 1253,
        "CharPositionInLine" : 1
      },
      "132" : {
        "Text" : "# Global properties\n",
        "Line" : 1266,
        "CharPositionInLine" : 0
      },
      "133" : {
        "Text" : "# http://stackoverflow.com/a/24305849/82195\n",
        "Line" : 1270,
        "CharPositionInLine" : 1
      },
      "134" : {
        "Text" : "# The top level checkAPIs target, add before subdirectory calls so it's avaiable to all\n",
        "Line" : 1278,
        "CharPositionInLine" : 0
      },
      "135" : {
        "Text" : "# Target platform locations\n\n# UN*X in general, including macOS if not building an app bundle:\n\n# $DESTDIR/lib/wireshark/extcap\n\n# Windows: $DESTDIR/extcap\n\n# macOS app bundle: Wireshark.app/Contents/Resources/share/wireshark/extcap\n\n# If you change the nesting level be sure to check also the INSTALL_RPATH\n\n# target property.\n",
        "Line" : 1289,
        "CharPositionInLine" : 0
      },
      "136" : {
        "Text" : "#\n\n# As https://developer.apple.com/library/archive/technotes/tn2206/_index.html\n\n# says,\n\n#\n\n# \"Note that a location where code is expected to reside cannot generally\n\n# contain directories full of nested code, because those directories tend\n\n# to be interpreted as bundles. So this occasional practice is not\n\n# recommended and not officially supported. If you do do this, do not use\n\n# periods in the directory names. The code signing machinery interprets\n\n# directories with periods in their names as code bundles and will reject\n\n# them if they don't conform to the expected code bundle layout.\"\n\n#\n",
        "Line" : 1303,
        "CharPositionInLine" : 1
      },
      "137" : {
        "Text" : "# Directory where plugins and Lua dissectors can be found.\n",
        "Line" : 1320,
        "CharPositionInLine" : 0
      },
      "138" : {
        "Text" : "# Location of our data files. This should be set to a value that allows\n\n# running from the build directory on Windows, on macOS when building an\n\n# application bundle, and on UNIX in general if\n\n# WIRESHARK_RUN_FROM_BUILD_DIRECTORY is set.\n",
        "Line" : 1342,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "# Xcode\n",
        "Line" : 1350,
        "CharPositionInLine" : 2
      },
      "140" : {
        "Text" : "# Visual Studio, Xcode, etc.\n",
        "Line" : 1354,
        "CharPositionInLine" : 1
      },
      "141" : {
        "Text" : "# Makefile, Ninja, etc.\n",
        "Line" : 1357,
        "CharPositionInLine" : 1
      },
      "142" : {
        "Text" : "# wsutil must be added after DATAFILE_DIR is set such that filesystem.c can\n\n# learn about the directory location.\n",
        "Line" : 1363,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "# Location of our plugins. PLUGIN_DIR should allow running\n\n# from the build directory similar to DATAFILE_DIR above.\n",
        "Line" : 1375,
        "CharPositionInLine" : 0
      },
      "144" : {
        "Text" : "# Target platform locations\n\n# UN*X in general, including macOS if not building an app bundle:\n\n# $DESTDIR/lib/wireshark/plugins/$VERSION\n\n# Windows: $DESTDIR/wireshark/plugins/$VERSION\n\n# macOS app bundle: Wireshark.app/Contents/PlugIns/wireshark\n",
        "Line" : 1378,
        "CharPositionInLine" : 1
      },
      "145" : {
        "Text" : "# Build demo plugin, only if asked explicitly\n",
        "Line" : 1404,
        "CharPositionInLine" : 1
      },
      "146" : {
        "Text" : "# Xcode\n",
        "Line" : 1420,
        "CharPositionInLine" : 2
      },
      "147" : {
        "Text" : "# Large file support (e.g. make off_t 64 bit if supported)\n",
        "Line" : 1438,
        "CharPositionInLine" : 0
      },
      "148" : {
        "Text" : "# Doxygen variables\n",
        "Line" : 1462,
        "CharPositionInLine" : 0
      },
      "149" : {
        "Text" : "# XXX Can (and should) we iterate over these similar to the way\n\n# the top-level CMakeLists.txt iterates over the package list?\n",
        "Line" : 1693,
        "CharPositionInLine" : 1
      },
      "150" : {
        "Text" : "# Required DLLs and their corresponding PDBs.\n",
        "Line" : 1696,
        "CharPositionInLine" : 1
      },
      "151" : {
        "Text" : "# Optional DLLs and PDBs.\n",
        "Line" : 1705,
        "CharPositionInLine" : 1
      },
      "152" : {
        "Text" : "# Wireshark.nsi wants SMI_DIR which is the base SMI directory\n",
        "Line" : 1759,
        "CharPositionInLine" : 2
      },
      "153" : {
        "Text" : "#remove the extra directories copied (shallow copying the above would remove the need for this)\n",
        "Line" : 1787,
        "CharPositionInLine" : 3
      },
      "154" : {
        "Text" : "# With libs downloaded to c:/wireshark-win64-libs this currently\n\n# (early 2018) expands to about 1900 characters.\n",
        "Line" : 1809,
        "CharPositionInLine" : 1
      },
      "155" : {
        "Text" : "# We have a lot of choices for creating zip archives:\n\n# - 7z, WinZip, etc., which require a separate download+install.\n\n# - \"CMake -E tar cz\", which creates a tar file.\n\n# - CPack, which requires a CPack configuration.\n\n# - PowerShell via PSCX or System.IO.Compression.FileSystem.\n\n# - Python via zipfile.\n\n# For now, just look for 7z. It's installed on the Windows builders,\n\n# which might be the only systems that use this target.\n",
        "Line" : 1832,
        "CharPositionInLine" : 1
      },
      "156" : {
        "Text" : "# List of extra dependencies for the \"copy_data_files\" target\n",
        "Line" : 1861,
        "CharPositionInLine" : 0
      },
      "157" : {
        "Text" : "# Install LUA files in staging directory such that LUA can used when Wireshark\n\n# is ran from the build directory. For install targets, see\n\n# epan/wslua/CMakeLists.txt\n",
        "Line" : 1904,
        "CharPositionInLine" : 0
      },
      "158" : {
        "Text" : "# doc/*.html handled elsewhere.\n",
        "Line" : 1927,
        "CharPositionInLine" : 0
      },
      "159" : {
        "Text" : "# Glob patterns relative to the source directory that should be copied to\n\n# ${DATAFILE_DIR} (including directory prefixes)\n\n# TODO shouldn't this use full (relative) paths instead of glob patterns?\n",
        "Line" : 1929,
        "CharPositionInLine" : 0
      },
      "160" : {
        "Text" : "# Copy all paths from the source tree to the data directory. Directories are\n\n# automatically created if missing as the filename is given.\n",
        "Line" : 1938,
        "CharPositionInLine" : 0
      },
      "161" : {
        "Text" : "# Copy files including ${INSTALL_FILES} and ${INSTALL_DIRS} to ${DATAFILE_DIR}\n",
        "Line" : 2033,
        "CharPositionInLine" : 0
      },
      "162" : {
        "Text" : "# Shared code, build object files once for all users.\n",
        "Line" : 2038,
        "CharPositionInLine" : 0
      },
      "163" : {
        "Text" : "# sources common for wireshark, tshark, rawshark and sharkd\n",
        "Line" : 2042,
        "CharPositionInLine" : 0
      },
      "164" : {
        "Text" : "#\n\n# Add -Wl,-single_module to the LDFLAGS used with shared\n\n# libraries, to fix some error that show up in some cases;\n\n# some Apple documentation recommends it for most shared\n\n# libraries.\n\n#\n",
        "Line" : 2079,
        "CharPositionInLine" : 1
      },
      "165" : {
        "Text" : "#\n\n# Add -Wl,-headerpad_max_install_names to the LDFLAGS, as\n\n# code-signing issues is running out of padding space.\n\n#\n\n# Add -Wl,-search_paths_first to make sure that if we search\n\n# directories A and B, in that order, for a given library, a\n\n# non-shared version in directory A, rather than a shared\n\n# version in directory B, is chosen (so we can use\n\n# --with-pcap=/usr/local to force all programs to be linked\n\n# with a static version installed in /usr/local/lib rather than\n\n# the system version in /usr/lib).\n\n#\n",
        "Line" : 2086,
        "CharPositionInLine" : 1
      },
      "166" : {
        "Text" : "# Create our Frameworks directory\n",
        "Line" : 2103,
        "CharPositionInLine" : 1
      },
      "167" : {
        "Text" : "# Add files to the app bundle\n\n# Wireshark.app/Contents\n",
        "Line" : 2106,
        "CharPositionInLine" : 1
      },
      "168" : {
        "Text" : "# Wireshark.app/Contents/Resources\n",
        "Line" : 2116,
        "CharPositionInLine" : 1
      },
      "169" : {
        "Text" : "# Wireshark.app/Contents/Resources/share/man/man1\n",
        "Line" : 2125,
        "CharPositionInLine" : 1
      },
      "170" : {
        "Text" : "# Wireshark.app/Contents/Resources/share/man/man4\n",
        "Line" : 2131,
        "CharPositionInLine" : 1
      },
      "171" : {
        "Text" : "# INSTALL_FILES and INSTALL_DIRS are handled by copy_data_files\n",
        "Line" : 2137,
        "CharPositionInLine" : 1
      },
      "172" : {
        "Text" : "# Add a wrapper script which opens the bundle. This adds\n\n# convenience but makes debugging more difficult.\n\n# It is not created if using Xcode\n",
        "Line" : 2186,
        "CharPositionInLine" : 3
      },
      "173" : {
        "Text" : "# Will we ever need to use --debug? Windeployqt seems to\n\n# be smart enough to copy debug DLLs when needed.\n",
        "Line" : 2208,
        "CharPositionInLine" : 2
      },
      "174" : {
        "Text" : "# Common properties for CLI executables\n",
        "Line" : 2232,
        "CharPositionInLine" : 0
      },
      "175" : {
        "Text" : "# Xcode\n",
        "Line" : 2244,
        "CharPositionInLine" : 3
      },
      "176" : {
        "Text" : "# Add a wrapper script which runs each executable from the\n\n# correct location. This adds convenience but makes debugging\n\n# more difficult.\n",
        "Line" : 2252,
        "CharPositionInLine" : 3
      },
      "177" : {
        "Text" : "#\n\n# XXX - currently doesn't work on Windows if it uses\n\n# $<TARGET_OBJECTS:cli_main> and has real_main().\n\n#\n",
        "Line" : 2353,
        "CharPositionInLine" : 2
      },
      "178" : {
        "Text" : "# We have two idl2wrs utilities: this and the CORBA version in tools.\n\n# We probably shouldn't do that.\n",
        "Line" : 2589,
        "CharPositionInLine" : 0
      },
      "179" : {
        "Text" : "# Must come after executable targets are defined.\n",
        "Line" : 2610,
        "CharPositionInLine" : 1
      },
      "180" : {
        "Text" : "# Note: libmaxminddb is not GPL-2 compatible.\n",
        "Line" : 2635,
        "CharPositionInLine" : 2
      },
      "181" : {
        "Text" : "# Unlike nsis_package_prep + nsis_package, we can add a direct\n\n# dependency here.\n",
        "Line" : 2690,
        "CharPositionInLine" : 2
      },
      "182" : {
        "Text" : "# We create Wireshark.app in \"run\". Do our work there.\n",
        "Line" : 2693,
        "CharPositionInLine" : 2
      },
      "183" : {
        "Text" : "# Should we add appimaged's monitored directories\n\n# as HINTS?\n\n# https://github.com/AppImage/appimaged\n",
        "Line" : 2703,
        "CharPositionInLine" : 1
      },
      "184" : {
        "Text" : "# XXX Replace with the \"dist\" target?\n",
        "Line" : 2762,
        "CharPositionInLine" : 1
      },
      "185" : {
        "Text" : "# The documentation at https://github.com/probonopd/linuxdeployqt\n\n# says that you need to set CMAKE_BUILD_TYPE=Release and\n\n# CMAKE_INSTALL_PREFIX=/usr. I (gcc) also had to set\n\n# CMAKE_INSTALL_LIBDIR=/usr/lib.\n",
        "Line" : 2791,
        "CharPositionInLine" : 1
      },
      "186" : {
        "Text" : "# XXX Is this the correct path?\n",
        "Line" : 2813,
        "CharPositionInLine" : 2
      },
      "187" : {
        "Text" : "# linuxdeployqt currently clobbers AppRun:\n\n# https://github.com/probonopd/linuxdeployqt/issues/159\n\n# When that's fixed we will no longer need appimagetool. Until\n\n# then, we need to prep and package in two steps:\n\n# https://github.com/probonopd/linuxdeployqt/wiki/Custom-wrapper-script-instead-of-AppRun\n",
        "Line" : 2816,
        "CharPositionInLine" : 1
      },
      "188" : {
        "Text" : "# Make sure we don't pass /WX to rc.exe. Rc doesn't have a /WX flag,\n\n# but it does have /W (warn about invalid code pages) and /X (ignore\n\n# the INCLUDE environment variable).\n\n# This should apparently be handled for us via CMAKE_RC_FLAG_REGEX\n\n# in CMakeRCInformation.cmake but that doesn't appear to work.\n",
        "Line" : 2856,
        "CharPositionInLine" : 0
      },
      "189" : {
        "Text" : "# XXX This also contains object files ($<TARGET_OBJECTS:...>), is that an issue?\n",
        "Line" : 2865,
        "CharPositionInLine" : 0
      },
      "190" : {
        "Text" : "# Install icons and other desktop files for Freedesktop.org-compliant desktops.\n",
        "Line" : 2901,
        "CharPositionInLine" : 0
      },
      "191" : {
        "Text" : "# Note: CMake export mechanism misbehaves with a '.' in the\n\n# path (incorrect relative path computation).\n",
        "Line" : 2953,
        "CharPositionInLine" : 1
      },
      "192" : {
        "Text" : "# API reference\n\n# We don't have a good way of tracking dependencies, so we simply\n\n# recreate the whole thing from scratch each time.\n",
        "Line" : 3001,
        "CharPositionInLine" : 1
      },
      "193" : {
        "Text" : "# Test suites\n",
        "Line" : 3032,
        "CharPositionInLine" : 0
      },
      "194" : {
        "Text" : "# We could try to build this list dynamically, but given that we tend to\n\n# go years between adding suites just run\n\n#     test/test.py --list-groups | sort\n\n# and paste the output here.\n",
        "Line" : 3034,
        "CharPositionInLine" : 0
      },
      "195" : {
        "Text" : "# We don't currently handle spaces in arguments. On Windows this\n\n# means that you will probably have to pass in an interface index\n\n# instead of a name.\n",
        "Line" : 3073,
        "CharPositionInLine" : 0
      },
      "196" : {
        "Text" : "# Make it possible to run pytest without passing the full path as argument.\n",
        "Line" : 3092,
        "CharPositionInLine" : 0
      },
      "197" : {
        "Text" : "# Update AUTHORS file with entries from git shortlog\n",
        "Line" : 3102,
        "CharPositionInLine" : 1
      },
      "198" : {
        "Text" : "# --external-sources requires 0.4.0 or later.\n",
        "Line" : 3157,
        "CharPositionInLine" : 1
      },
      "199" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 3179,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 200
    },
    "ConfigureChecks.cmake" : {
      "ObjectId" : "d463330ad1d21fa64617825d7d61295eeec866c5",
      "LastModified" : "2019-03-10T12:34:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ConfigureChecks.cmake\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#check system for includes\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# This may require <sys/types.h> to be included\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# On Linux, check for some additional headers, which we need as a\n\n# workaround for a bonding driver bug and for libpcap's current lack\n\n# of its own workaround for that bug.\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Those header files require <sys/socket.h>.\n\n#\n",
        "Line" : 41,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#Functions\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Platform-specific functions used in platform-specific code.\n\n# We check for them only on the platform on which we use them.\n\n#\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# HP-UX\n\n#\n",
        "Line" : 73,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "#\n\n# Solaris\n\n#\n",
        "Line" : 81,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "#\n\n# Use check_symbol_exists just in case math.h does something magic\n\n# and there's not actually a function named floorl()\n\n#\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# The OS has getopt_long(), so it might have optreset.\n\n# Do we have it?\n\n#\n",
        "Line" : 99,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#\n\n# The OS doesn't have getopt_long(), so we're using the GNU libc\n\n# version that we have in wsutil.  It doesn't have optreset, so we\n\n# don't need to check for it.\n\n#\n\n# However, it uses alloca(), so we may need to include alloca.h;\n\n# check for it.\n\n#\n",
        "Line" : 109,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#Struct members\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#Symbols but NOT enums or types\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Check for stuff that isn't testable via the tests above\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# *If* we found libnl, check if we can use nl80211 stuff with it.\n\n#\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "capchild/CMakeLists.txt" : {
      "ObjectId" : "cfea58eb993c60bd661fdfc117e7ebb2754b4cc7",
      "LastModified" : "2019-03-10T12:34:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "caputils/CMakeLists.txt" : {
      "ObjectId" : "ee9a7302b7f49a6732e2c359f972130bf6a78ac3",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/CheckCLinkerFlag.cmake" : {
      "ObjectId" : "f21d573f701bd548d5d01d2beca4ee2ef1d7e14e",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the C linker supports a given flag.\n\n# CHECK_C_LINKER_FLAG(FLAG VARIABLE)\n\n#\n\n#  FLAG - the compiler flag\n\n#  VARIABLE - variable to store the result\n\n# \n\n#  This actually calls the check_c_source_compiles macro.\n\n#  See help for CheckCSourceCompiles for a listing of variables\n\n#  that can modify the build.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2010, Joerg Mayer (see AUTHORS file)\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# This is ugly.\n\n#\n\n# See CMake bug 0015934:\n\n#\n\n#    https://cmake.org/Bug/view.php?id=15934\n\n#\n\n# So we add the flags to CMAKE_REQUIRED_LIBRARIES, to sneak it into\n\n# the linker flags.\n\n#\n\n# This may or may not work with versions earlier than 2.8.11, although\n\n# 2.8.10's Xcode generator doesn't appear to work at all - it fails\n\n# with an internal CMake error.\n\n#\n\n# With 3.2 and later, we could also set policy CMP0056 to NEW and\n\n# set CMAKE_EXE_LINKER_FLAGS.\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "#\n\n# This means the linker is presumably the Microsoft linker;\n\n# we need to pass /WX in order to have the linker fail,\n\n# rather than just complaining and driving on, if it's\n\n# passed a flag it doesn't handle.\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#\n\n# We'll be running the linker through the compiler driver, so\n\n# we may need to pass -Werror=unused-command-line-argument to have it\n\n# fail, rather than just complaining and driving on, if it's\n\n# passed a flag it doesn't handle.\n",
        "Line" : 46,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "cmake/modules/FileInstall.cmake" : {
      "ObjectId" : "3358aa2a8016e9a3b7448f54d17f70e43228383a",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FileInstall - Install files and directories separately from the\n\n# \"install\" command.\n\n#\n\n# Usage:\n\n#   cmake -P /path/to/FileInstall.cmake [source ...] [destination]\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Params are\n\n#   cmake -P /path/to/hhc.cmake \"/path/to/hhc.exe\" project.hhp\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindAIRPCAP.cmake" : {
      "ObjectId" : "a606f96f756f7bb02d9d06b2ba46c0d3d1da5dc6",
      "LastModified" : "2019-03-10T12:34:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find airpcap\n\n# Find the native AIRPCAP includes and library\n\n#\n\n#  AIRPCAP_INCLUDE_DIRS - where to find pcap.h, etc.\n\n#  AIRPCAP_LIBRARIES    - List of libraries when using pcap.\n\n#  AIRPCAP_FOUND        - True if pcap found.\n\n#  AIRPCAP_DLL_DIR      - (Windows) Path to the AirPcap DLL.\n\n#  AIRPCAP_DLL          - (Windows) Name of the AirPcap DLL.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message( STATUS \"AIRPCAP TMP HINTS: ${AIRPCAP_TMP_HINTS}\" )\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message( STATUS \"AIRPCAP HINTS: ${AIRPCAP_HINTS}\" )\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We're storing filenames only. Should we use STRING instead?\n",
        "Line" : 49,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindAsciidoctor.cmake" : {
      "ObjectId" : "7ffa193590d9f76b8ccd9bc91c7dd39fca884209",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find Asciidoctor\n\n# Sets:\n\n#  ASCIIDOCTOR_EXECUTABLE\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The AsciidctorJ wrapper script sets -Xmx256m. This isn't enough\n\n# for the User's Guide.\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Currently single page only.\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# news: release-notes.txt\n\n#         ${CMAKE_COMMAND} -E copy_if_different release-notes.txt ../NEWS\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindBCG729.cmake" : {
      "ObjectId" : "2630194f680e1bcf42c96cd687159b6291e4def5",
      "LastModified" : "2019-03-10T12:34:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the system's bcg729 includes and library\n\n#\n\n#  BCG729_INCLUDE_DIRS - where to find bcg729/decoder.h\n\n#  BCG729_LIBRARIES    - List of libraries when using bcg729\n\n#  BCG729_FOUND        - True if bcg729 found\n\n#  BCG729_DLL_DIR      - (Windows) Path to the bcg729 DLL\n\n#  BCG729_DLL          - (Windows) Name of the bcg729 DLL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We're storing filenames only. Should we use STRING instead?\n",
        "Line" : 47,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindCAP.cmake" : {
      "ObjectId" : "0ed69f671fbc70b9de4d6e18ae5e003e0c277054",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find capabilities\n\n# Find the native CAP includes and library\n\n#\n\n#  CAP_INCLUDE_DIRS - where to find cap.h, etc.\n\n#  CAP_LIBRARIES    - List of libraries when using cap.\n\n#  CAP_FOUND        - True if cap found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set CAP_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindCARES.cmake" : {
      "ObjectId" : "e3794a9bb6a5da9d7de8f0ab06fbefb3a4155e53",
      "LastModified" : "2019-03-10T12:34:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find cares\n\n# Find the native CARES includes and library\n\n#\n\n#  CARES_INCLUDE_DIRS - where to find cares.h, etc.\n\n#  CARES_LIBRARIES    - List of libraries when using cares.\n\n#  CARES_FOUND        - True if cares found.\n\n#  CARES_DLL_DIR      - (Windows) Path to the c-ares DLL.\n\n#  CARES_DLL          - (Windows) Name of the c-ares DLL.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Try to retrieve version from header if found\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set CARES_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindChocolatey.cmake" : {
      "ObjectId" : "81510e1628e2c62f5e2ebfd0c3f904a602896311",
      "LastModified" : "2019-03-10T12:34:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindChocolatey\n\n# ----------\n\n#\n\n# This module looks for Chocolatey\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindDOXYGEN.cmake" : {
      "ObjectId" : "381048989b011df73b3c10476351e48d25269595",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find Doxygen\n\n# This module looks for a native (non-Cygwin) Doxygen.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We set various paths in doxygen.cfg via configure_file(). These are\n\n# native system paths which aren't compatible with Cygwin's Doxygen.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindGCRYPT.cmake" : {
      "ObjectId" : "eba5001b911084b4d25ec6154ca74c7ef709b4f9",
      "LastModified" : "2019-03-10T12:34:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find gcrypt\n\n# Find the native GCRYPT includes and library\n\n#\n\n#  GCRYPT_INCLUDE_DIRS - where to find gcrypt.h, etc.\n\n#  GCRYPT_LIBRARIES    - List of libraries when using gcrypt.\n\n#  GCRYPT_FOUND        - True if gcrypt found.\n\n#  GCRYPT_DLL_DIR      - (Windows) Path to the Libgcrypt DLLs.\n\n#  GCRYPT_DLLS         - (Windows) List of required Libgcrypt DLLs.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# libgpg-error6-0 is used in libgcrypt-1.7.6-win??ws (built from source).\n\n# libgpg-error-0 is used in libgcrypt-1.8.3-win??ws (from Debian).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Try to retrieve version from header if found (available since libgcrypt 1.3.0)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We're storing filenames only. Should we use STRING instead?\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindGLIB2.cmake" : {
      "ObjectId" : "2b55b742fed90a330b2e998efc9a7ab55aa33c7a",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Try to find the GLIB2 libraries\n\n# Once done this will define\n\n#\n\n#  GLIB2_FOUND        - system has glib2\n\n#  GLIB2_INCLUDE_DIRS - the glib2 include directory\n\n#  GLIB2_LIBRARIES    - glib2 library\n\n#  GLIB2_DLL_DIR      - (Windows) Path to required GLib2 DLLs.\n\n#  GLIB2_DLLS         - (Windows) List of required GLib2 DLLs.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2008 Laurent Montel, <montel@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 18,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# search the glibconfig.h include dir under the same root where the library is found\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include transitive dependencies for static linking.\n",
        "Line" : 96,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# GTK+ required GObject and GIO. We probably don't.\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# \"${GLIB2_DLL_DIR}/gio-2.dll\"\n",
        "Line" : 108,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# \"${GLIB2_DLL_DIR}/gobject-2.dll\"\n",
        "Line" : 111,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# gnutls-3.6.3-1-win64ws ships with libffi-6.dll\n\n# \"${GLIB2_DLL_DIR}/libffi.dll\"\n",
        "Line" : 114,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# \"${GLIB2_DLL_DIR}/pcre16.dll\"\n\n# \"${GLIB2_DLL_DIR}/pcre32.dll\"\n\n# \"${GLIB2_DLL_DIR}/pcrecpp.dll\"\n\n# \"${GLIB2_DLL_DIR}/pcreposix.dll\"\n",
        "Line" : 119,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# We're storing filenames only. Should we use STRING instead?\n",
        "Line" : 125,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 11
    },
    "cmake/modules/FindGMODULE2.cmake" : {
      "ObjectId" : "5bcfec7be3fd2835fa4193e5ced0d6294a86608b",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Try to find GModule2\n\n# Find GModule headers, libraries and the answer to all questions.\n\n#\n\n#  GMODULE2_FOUND               True if GMODULE2 was found\n\n#  GMODULE2_INCLUDE_DIRS        Location of GMODULE2 headers\n\n#  GMODULE2_LIBRARIES           List of libraries to use GMODULE2\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindGNUTLS.cmake" : {
      "ObjectId" : "9028529848a23ae319f9dd58fefa1892e5a98ff1",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find gnutls\n\n# Find the native GNUTLS includes and library\n\n#\n\n#  GNUTLS_INCLUDE_DIRS - where to find gnutls.h, etc.\n\n#  GNUTLS_LIBRARIES    - List of libraries when using gnutls.\n\n#  GNUTLS_FOUND        - True if gnutls found.\n\n#  GNUTLS_DLL_DIR      - (Windows) Path to the GnuTLS DLLs.\n\n#  GNUTLS_DLLS         - (Windows) List of required GnuTLS DLLs.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# sources include gnutls/gnutls.h, look for that location instead of gnutls.h.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On systems without pkg-config (e.g. Windows), search its header\n\n# (available since GnuTLS 0.1.3)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Note: 32-bit glib2-2.52.2-1.34-win32ws needs libgcc_s_sjlj-1.dll too.\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# We're storing filenames only. Should we use STRING instead?\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 6
    },
    "cmake/modules/FindGTHREAD2.cmake" : {
      "ObjectId" : "57f8640007d6944108a7b46253476c665cff45db",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Try to find GThread2\n\n# Find GThread headers, libraries and the answer to all questions.\n\n#\n\n#  GTHREAD2_FOUND               True if GTHREAD2 was found\n\n#  GTHREAD2_INCLUDE_DIRS        Location of GTHREAD2 headers\n\n#  GTHREAD2_LIBRARIES           List of libraries to use GTHREAD2\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindHTMLHelp.cmake" : {
      "ObjectId" : "c223d3ee9f909c37fbf707819ba8748be184a6e7",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindHTMLHelp\n\n# ------------\n\n#\n\n# This module looks for Microsoft HTML Help Compiler\n\n#\n\n# It defines:\n\n#\n\n# ::\n\n#\n\n#    HTML_HELP_COMPILER     : full path to the Compiler (hhc.exe)\n\n#    HTML_HELP_INCLUDE_PATH : include path to the API (htmlhelp.h)\n\n#    HTML_HELP_LIBRARY      : full path to the library (htmlhelp.lib)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set HTMLHelp_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindKERBEROS.cmake" : {
      "ObjectId" : "008aad442b048e3167eacf1c8dca26b36b8b7b2a",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find Kerberos\n\n# Find the native Kerberos includes and library\n\n#\n\n#  KERBEROS_INCLUDE_DIRS  - where to find krb5.h, etc.\n\n#  KERBEROS_DEFINITIONS   - -D and other compiler flags to use with krb5.\n\n#  KERBEROS_LIBRARIES     - List of libraries when using krb5.\n\n#  KERBEROS_LINK_FLAGS    - other linker flags to use with krb5.\n\n#  KERBEROS_FOUND         - True if krb5 found.\n\n#  KERBEROS_DLL_DIR       - (Windows) Path to the Kerberos DLLs.\n\n#  KERBEROS_DLLS          - (Windows) List of required Kerberos DLLs.\n\n#  HAVE_HEIMDAL_KERBEROS  - set if the Kerberos vendor is Heimdal\n\n#  HAVE_MIT_KERBEROS      - set if the Kerberos vendor is MIT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#\n\n# Turn KERBEROS_CFLAGS_OTHER into KERBEROS_DEFINITIONS;\n\n# <XPREFIX>_DEFINITIONS really means \"flags other than -I,\n\n# including both -D and other flags\".\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#\n\n# KERBEROS_LIBRARIES is a list of library names, not library\n\n# paths, and KERBEROS_LIBRARY_DIRS is a list of -L flag\n\n# arguments.  Turn KERBEROS_LIBRARIES into a list of absolute\n\n# paths for libraries, by searching for the libraries in\n\n# directories including KERBEROS_LIBRARY_DIRS.\n\n#\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#\n\n# Search for the library, using the library directories from\n\n# pkg_search_module as hints.\n\n#\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Fallback detection if pkg-config files are not installed.\n\n# Note, this fallback will not add k5crypto and com_err libraries on Linux,\n\n# ensure that pkg-config files are installed for full support.\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set KERBEROS_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Try to detect the installed Kerberos vendor, assume MIT if it was not Heimdal.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We're storing filenames only. Should we use STRING instead?\n",
        "Line" : 108,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 9
    },
    "cmake/modules/FindLEX.cmake" : {
      "ObjectId" : "0008bc43dd935cb608ef593a59ef265c6ebe760a",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find flex/lex executable\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# flex a .l file\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindLIBSSH.cmake" : {
      "ObjectId" : "46dbe0415f03b8543c1967b3f0a4440aaffb49bb",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibSSH\n\n# Once done this will define\n\n#\n\n#  LIBSSH_FOUND - system has LibSSH\n\n#  LIBSSH_INCLUDE_DIRS - the LibSSH include directory\n\n#  LIBSSH_LIBRARIES - Link these to use LibSSH\n\n#\n\n#  Copyright (c) 2009 Andreas Schneider <mail@cynapses.org>\n\n#  Modified by Peter Wu <peter@lekensteyn.nl> to use standard\n\n#  find_package(LIBSSH ...) without external module.\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Older versions of libssh like libssh-0.2 have LIBSSH_VERSION but not LIBSSH_VERSION_MAJOR\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBSSH_FOUND to TRUE if\n\n# all listed variables are TRUE and the requested version matches.\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# We're storing filenames only. Should we use STRING instead?\n",
        "Line" : 92,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# show the LIBSSH_INCLUDE_DIRS and LIBSSH_LIBRARIES variables only in the advanced view\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "cmake/modules/FindLUA.cmake" : {
      "ObjectId" : "26d4db653c937697e29f44797f8eab069eb6f16f",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Locate Lua library\n\n# This module defines\n\n#  LUA_FOUND        - If false, do not try to link to Lua\n\n#  LUA_LIBRARIES\n\n#  LUA_INCLUDE_DIRS - Where to find lua.h\n\n#  LUA_DLL_DIR      - (Windows) Path to the Lua DLL.\n\n#  LUA_DLL          - (Windows) Name of the Lua DLL.\n\n#\n\n# Note that the expected include convention is\n\n#  #include \"lua.h\"\n\n# and not\n\n#  #include <lua/lua.h>\n\n# This is because, the lua location is not standardized and may exist\n\n# in locations other than lua/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 39,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 40,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 41,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# Lua 5.3 is not supported, only 5.1/5.2 are (due to bitops problem)\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LUA_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# We're storing filenames only. Should we use STRING instead?\n",
        "Line" : 98,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 7
    },
    "cmake/modules/FindLZ4.cmake" : {
      "ObjectId" : "dcf727fe080f0e8c3a0cf2cdda4ebc26d0228c57",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find lz4\n\n# Find LZ4 includes and library\n\n#\n\n#  LZ4_INCLUDE_DIRS - where to find lz4.h, etc.\n\n#  LZ4_LIBRARIES    - List of libraries when using LZ4.\n\n#  LZ4_FOUND        - True if LZ4 found.\n\n#  LZ4_DLL_DIR      - (Windows) Path to the LZ4 DLL\n\n#  LZ4_DLL          - (Windows) Name of the LZ4 DLL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We're storing filenames only. Should we use STRING instead?\n",
        "Line" : 58,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindLibXml2.cmake" : {
      "ObjectId" : "99d70af57d4735929f4904d8b2ae6b78b8c529c1",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This code was copied from https://gitlab.kitware.com/cmake/cmake/raw/master/Modules/FindLibXml2.cmake\n\n# and modified to support Wireshark Windows 3rd party packages\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#[=======================================================================[.rst:\nFindLibXml2\n-----------\n\nFind the XML processing library (libxml2).\n\nIMPORTED Targets\n^^^^^^^^^^^^^^^^\n\nThis module defines :prop_tgt:`IMPORTED` target ``LibXml2::LibXml2``, if\nlibxml2 has been found.\n\nResult variables\n^^^^^^^^^^^^^^^^\n\nThis module will set the following variables in your project:\n\n``LIBXML2_FOUND``\n  true if libxml2 headers and libraries were found\n``LIBXML2_INCLUDE_DIR``\n  the directory containing LibXml2 headers\n``LIBXML2_INCLUDE_DIRS``\n  list of the include directories needed to use LibXml2\n``LIBXML2_LIBRARIES``\n  LibXml2 libraries to be linked\n``LIBXML2_DEFINITIONS``\n  the compiler switches required for using LibXml2\n``LIBXML2_XMLLINT_EXECUTABLE``\n  path to the XML checking tool xmllint coming with LibXml2\n``LIBXML2_VERSION_STRING``\n  the version of LibXml2 found (since CMake 2.8.8)\n\nCache variables\n^^^^^^^^^^^^^^^\n\nThe following cache variables may also be set:\n\n``LIBXML2_INCLUDE_DIR``\n  the directory containing LibXml2 headers\n``LIBXML2_LIBRARY``\n  path to the LibXml2 library\n#]=======================================================================]",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the find_path() and find_library() calls\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CMake 3.9 and below used 'LIBXML2_LIBRARIES' as the name of\n\n# the cache entry storing the find_library result.  Use the\n\n# value if it was set by the project or user.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# for backwards compat. with KDE 4.0.x:\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/modules/FindM.cmake" : {
      "ObjectId" : "402a8bce8a5df91ef2ef3ba1fcb14a8cf3f160b2",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find math\n\n# Find the native M includes and library\n\n#\n\n#  M_INCLUDE_DIRS - where to find math.h, etc.\n\n#  M_LIBRARIES    - List of libraries when using math.\n\n#  M_FOUND        - True if math found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#\n\n# On macOS, make sure we do *NOT* find math.h in the Kernel framework,\n\n# as that will convince CMake to cause the build to look there for\n\n# headers.\n\n#\n\n# For some unknown reason, on Yosemite, math.h is included in the Kernel\n\n# framework.  That framework exists to supply headers for building\n\n# *kernel* modules; it includes versions of C headers that are similar\n\n# to the standard userland headers, but not similar enough to be usable\n\n# when building userland code.\n\n#\n\n# Unless told not to look first in the framework paths, CMake will, on\n\n# Yosemite, or when using the Yosemite SDK, find math.h in the Kernel\n\n# framework, and add the header directory for the Kernel framework to\n\n# the list of places to look for headers, causing it to pick up other\n\n# headers from there as well.  This causes the build to fail.\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set M_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindMSVC_REDIST.cmake" : {
      "ObjectId" : "2d1237b37d240cd6843d72a96e2560c371dcbc90",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find the Microsoft Visual C++ library DLLs.\n\n# These are included with the full frontal (Professional, Enterprise) editions\n\n# of Visual Studio but not Express.\n\n#\n\n#  MSVCR_DLL - Path to the redistributable DLLs.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS will likely give us a list of DLL\n\n# paths containing spaces. We'll assume that they're all in the same\n\n# directory and use it to create something that's easier to pass to\n\n# NSIS.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindMaxMindDB.cmake" : {
      "ObjectId" : "3f1c5636c31fb8ef782f4c5624e6a92deabb3c39",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Try to find libmaxminddb.\n\n# Once done this will define\n\n#  MAXMINDDB_FOUND - System has libmaxminddb\n\n#  MAXMINDDB_INCLUDE_DIRS - The libmaxminddb include directories\n\n#  MAXMINDDB_LIBRARIES - The libraries needed to use libmaxminddb\n\n#  MAXMINDDB_DEFINITIONS - Compiler switches required for using libmaxminddb\n\n#  MAXMINDDB_DLL_DIR      - (Windows) Path to the MaxMindDB DLL.\n\n#  MAXMINDDB_DLL          - (Windows) Name of the MaxMindDB DLL.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set MAXMINDDB_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We're storing filenames only. Should we use STRING instead?\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindNGHTTP2.cmake" : {
      "ObjectId" : "fa9f947972adad68903e1d5d6c5071835226c5b0",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the system's Nghttp2 includes and library\n\n#\n\n#  NGHTTP2_INCLUDE_DIRS - where to find nghttp2.h\n\n#  NGHTTP2_LIBRARIES    - List of libraries when using nghttp2\n\n#  NGHTTP2_FOUND        - True if nghttp2 found\n\n#  NGHTTP2_DLL_DIR      - (Windows) Path to the Nghttp2 DLL\n\n#  NGHTTP2_DLL          - (Windows) Name of the Nghttp2 DLL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We're storing filenames only. Should we use STRING instead?\n",
        "Line" : 47,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindNL.cmake" : {
      "ObjectId" : "d4f003e886204ef75b830cecc36c92d05724a66c",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find the native netlink includes and library\n\n#\n\n# If they exist, differentiate between versions 1, 2 and 3.\n\n# Version 1 does not have netlink/version.h\n\n# Version 2 started separating libraries (libnl{,-genl,-route}).\n\n# Version 3 (>= 3.2) started appending the major version number as suffix to\n\n# library names (libnl-3)\n\n#\n\n#  NL_INCLUDE_DIRS - where to find libnl.h, etc.\n\n#  NL_LIBRARIES    - List of libraries when using libnl.\n\n#  NL_FOUND        - True if libnl found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Try to find NL 2.0, 3.0 or 3.1 (/usr/include/netlink/version.h) or\n\n# NL >= 3.2 (/usr/include/libnl3/netlink/version.h)\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# NL version >= 2\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#\n\n# If we don't have all of those libraries, we can't use libnl.\n\n#\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# NL2 and NL3 are similar and just affect how the version is reported in\n\n# the --version output. In cast of doubt, assume NL3 since a library\n\n# without version number could be any of 2.0, 3.0 or 3.1.\n",
        "Line" : 86,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# libnl-2 and libnl-3 not found, try NL version 1\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# MESSAGE(STATUS \"LIB Found: ${NL_LIBRARY}, Suffix: ${NLSUFFIX}\\n  1:${HAVE_LIBNL1}, 2:${HAVE_LIBNL2}, 3:${HAVE_LIBNL3}.\")\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set NL_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/modules/FindNSIS.cmake" : {
      "ObjectId" : "1b68cd31cde98422f44e3db5a53f7affae811382",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find NSIS\n\n# Find the makensis command\n\n#\n\n#  MAKENSIS_EXECUTABLE - path to the makensis utility.\n\n#  CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS - System runtime DLLs\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find makensis\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindPCAP.cmake" : {
      "ObjectId" : "dfd80415f684ec8253866cb131292a4469602139",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find pcap and winpcap\n\n# Find the native PCAP includes and library\n\n#\n\n#  PCAP_INCLUDE_DIRS - where to find pcap.h, etc.\n\n#  PCAP_LIBRARIES    - List of libraries when using pcap.\n\n#  PCAP_FOUND        - True if pcap found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The 64-bit wpcap.lib is under /x64\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Functions\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Prepopulate some values. WinPcap and Npcap always have these and\n\n# compilation checks on Windows can be slow.\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#\n\n# Note: for pcap_breakloop() and pcap_findalldevs(), the autoconf script\n\n# checked for more than just whether the function exists, it also checked\n\n# for whether pcap.h declares it; macOS software/security updates can\n\n# update libpcap without updating the headers.\n\n#\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\n\n# If we have pcap_create(), we have pcap_set_buffer_size(), and\n\n# can set the capture buffer size.\n\n#\n\n# Otherwise, if this is Windows, we have pcap_setbuff(), and can\n\n# set the capture buffer size.\n\n#\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Remote pcap checks\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#\n\n# XXX - this *should* be checked for independently of checking\n\n# for pcap_open(), as you might have pcap_setsampling() without\n\n# remote capture support.\n\n#\n\n# However, 1) the sampling options are treated as remote options\n\n# in the GUI and and 2) having pcap_setsampling() doesn't mean\n\n# you have sampling support.  libpcap needs a way to indicate\n\n# whether a given device supports sampling, and the GUI should\n\n# be changed to decouple them.\n\n#\n\n# (Actually, libpcap needs a general mechanism to offer options\n\n# for particular devices, and Wireshark needs to use that\n\n# mechanism.  The former is a work in progress.)\n\n#\n\n# (Note: another work in progress is support for remote\n\n# capturing using pcap_create()/pcap_activate(), which we\n\n# also need to support once it's available.)\n\n#\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/modules/FindPOD.cmake" : {
      "ObjectId" : "15ce12e748e8c7d39a5310ff82d3088aacad25b3",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find pod2man and pod2html.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set POD2HTML_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# run pod2man and pod2html\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindPortableApps.cmake" : {
      "ObjectId" : "17ee15ae2e3820c165c0728f741a289ac8f1650a",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find PortableApps\n\n# Find the PortableApps LauncherGenerator and Installer commands\n\n#\n\n#  PORTABLEAPPS_LAUNCHER_GENERATOR_EXECUTABLE - path to the PortableApps.comLauncherGenerator utility.\n\n#  PORTABLEAPPS_INSTALLER_EXECUTABLE - path to the PortableApps.comInstaller utility.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find PortableApps.comLauncherGenerator\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find PortableApps.comInstaller\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Assume that FindNSIS has taken care of this for us.\n\n# set(CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS_SKIP TRUE)\n\n# include(InstallRequiredSystemLibraries)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindPowerShell.cmake" : {
      "ObjectId" : "9e751545d7bf94a30073a4c401c4989c1fa83c33",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find PowerShell\n\n# This module looks for PowerShell and sets the following:\n\n# POWERSHELL_EXECUTABLE - Path to PowerShell.\n\n# POWERSHELL_COMMAND - Command suitable for running .ps1 scripts\n\n#\n\n# To do:\n\n# - Add a version check\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Calling a script using \"-File\" doesn't properly return exit codes.\n\n# Use dot sourcing instead\n\n# https://connect.microsoft.com/PowerShell/feedback/details/777375/powershell-exe-does-not-set-an-exit-code-when-file-is-used\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindSBC.cmake" : {
      "ObjectId" : "50a551c507489b4285733e78648688c5f1654df9",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the native Bluetooth SBC Codec includes and library\n\n#\n\n#  SBC_INCLUDE_DIRS - where to find sbc.h\n\n#  SBC_LIBRARIES    - List of libraries when using SBC\n\n#  SBC_FOUND        - True if SBC found\n\n#  SBC_DLL_DIR      - (Windows) Path to the SBC DLL\n\n#  SBC_DLL          - (Windows) Name of the SBC DLL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We're storing filenames only. Should we use STRING instead?\n",
        "Line" : 40,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindSETCAP.cmake" : {
      "ObjectId" : "1c468bd69366e5af8943eac8ce011f05c9eea27d",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Look for the Linux setcap command (capabilities)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindSMI.cmake" : {
      "ObjectId" : "e8ce5020bffb50c71bc58273d267a011b7e52a66",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find smi\n\n# Find the native SMI includes and library\n\n#\n\n#  SMI_INCLUDE_DIRS - where to find smi.h, etc.\n\n#  SMI_LIBRARIES    - List of libraries when using smi.\n\n#  SMI_FOUND        - True if smi found.\n\n#  SMI_DLL_DIR      - (Windows) Path to the SMI DLL.\n\n#  SMI_DLL          - (Windows) Name of the SMI DLL.\n\n#  SMI_SHARE_DIR    - (Windows) Path to the SMI MIBs.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set SMI_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We're storing filenames only. Should we use STRING instead?\n",
        "Line" : 45,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindSNAPPY.cmake" : {
      "ObjectId" : "7964c9d14587aa91a9eedbb20ea6d37b78f3e574",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find snappy\n\n# Find Snappy includes and library\n\n#\n\n#  SNAPPY_INCLUDE_DIRS - where to find snappy.h, etc.\n\n#  SNAPPY_LIBRARIES    - List of libraries when using Snappy.\n\n#  SNAPPY_FOUND        - True if Snappy found.\n\n#  SNAPPY_DLL_DIR      - (Windows) Path to the Snappy DLL\n\n#  SNAPPY_DLL          - (Windows) Name of the Snappy DLL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We're storing filenames only. Should we use STRING instead?\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindSPANDSP.cmake" : {
      "ObjectId" : "202271580c8d78b8745c0a3ea34b8f640f1d774a",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the system's SpanDSP includes and library\n\n#\n\n#  SPANDSP_INCLUDE_DIRS - where to find spandsp.h\n\n#  SPANDSP_LIBRARIES    - List of libraries when using SpanDSP\n\n#  SPANDSP_FOUND        - True if SpanDSP found\n\n#  SPANDSP_DLL_DIR      - (Windows) Path to the SpanDSP DLL\n\n#  SPANDSP_DLL          - (Windows) Name of the SpanDSP DLL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We're storing filenames only. Should we use STRING instead?\n",
        "Line" : 47,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindSystemd.cmake" : {
      "ObjectId" : "6162d0d6053ea7ce32579aecb1f9526a9d59ce55",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find systemd libraries\n\n#\n\n#  SYSTEMD_INCLUDE_DIRS - where to find systemd/sd-journal.h, etc.\n\n#  SYSTEMD_LIBRARIES    - List of libraries when using libsystemd.\n\n#  SYSTEMD_FOUND        - True if libsystemd is found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindWSWinLibs.cmake" : {
      "ObjectId" : "60f5a2ac8efd383d99a167eaf3fb510d2cac2e66",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find WSWin Libs\n\n#  Due to the layout of the Wireshark Win support libs,\n\n#  CMake needs some support to find them\n\n#\n\n#  The function is passed the directory name to search for and the variable\n\n#  to set in the callers scope.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The buildbots set WIRESHARK_LIB_DIR but not WIRESHARK_BASE_DIR.\n",
        "Line" : 15,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# We might be able to use $ENV{VSCMD_ARG_TGT_ARCH} here.\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Add a single DLL\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add a list of DLLs\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ...DLL globs\n",
        "Line" : 72,
        "CharPositionInLine" : 44
      },
      "CommentCount" : 6
    },
    "cmake/modules/FindWiX.cmake" : {
      "ObjectId" : "ddfa721d063c0b88232f85d2c62fdc11cc7ebd44",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find Wix executables\n\n# Find the candle and light command\n\n#\n\n#  MAKEWIX_EXECUTABLE - path to the candle utility.\n\n#  CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS - System runtime DLLs\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# According to\n\n# https://stackoverflow.com/questions/2375322/variable-for-wix-bin-directory-path\n\n# and\n\n# http://weblogs.sqlteam.com/mladenp/archive/2010/02/23/WiX-3-Tutorial-Generating-filedirectory-fragments-with-Heat.exe.aspx\n\n# WiX binaries are in $ENV{WIX}/bin.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find candle\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find light\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find heat\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindWinSparkle.cmake" : {
      "ObjectId" : "639510205510274c49733b452c1c701809779ab8",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find WinSparkle\n\n# Find the native WinSparkle includes and library\n\n#\n\n#  WINSPARKLE_INCLUDE_DIRS - where to find WinSparkle.h, etc.\n\n#  WINSPARKLE_LIBRARIES    - List of libraries when using WinSparkle.\n\n#  WINSPARKLE_FOUND        - True if WinSparkle found.\n\n#  WINSPARKLE_DLL_DIR      - (Windows) Path to the WinSparkle DLL.\n\n#  WINSPARKLE_DLL          - (Windows) Name of the WinSparkle DLL.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# The 64-bit wpcap.lib is under /x64/Release\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set WINSPARKLE_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We're storing filenames only. Should we use STRING instead?\n",
        "Line" : 46,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindXSLTPROC.cmake" : {
      "ObjectId" : "e2a5d3fd8d8a47206ea283fa3d7df472225b270f",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find XSLTPROC\n\n# This module looks for some usual Unix commands.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Strawberry Perl ships with xsltproc but no DocBook XML files, which\n\n# is detrimental to our interests. Search for the Chocolatey\n\n# versions first, and un-find xsltproc if needed.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set XSLTPROC_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Workaround for parallel build issue with msbuild.\n\n# https://gitlab.kitware.com/cmake/cmake/issues/16767\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# msbuild (as used by the Visual Studio generators) must not depend on the XML\n\n# file (otherwise the XML file will be generated multiple times, possibly in\n\n# parallel, breaking the build). Workaround: add one dependency to generate\n\n# the XML file when outdated, depend on the -stamp file to ensure that the\n\n# target is rebuilt when the XML file is regenerated.\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Unix Makefiles, Ninja, etc: first dependency enforces that the XML file is\n\n# rebuilt when outdated, the second dependency ensures that the target is\n\n# rebuilt when the XML file has changed.\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Translate XML to HTML\n\n#XML2HTML(\n\n#        wsug or wsdg\n\n#        single-page or chunked\n\n#        WSUG_FILES\n\n#        WSUG_GRAPHICS\n\n#)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We depend on the docbook target to avoid parallel builds.\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# We can pass chunker.xxx parameters to customize the chunked output.\n\n# We have to use a custom layer to customize the single-page output.\n\n# Set the output encoding for both to UTF-8. Indent the single-page\n\n# output because we sometimes need to copy and paste the release\n\n# note contents.\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# single-page\n",
        "Line" : 94,
        "CharPositionInLine" : 11
      },
      "10" : {
        "Text" : "# Translate XML to HHP\n\n#XML2HHP(\n\n#       wsug or wsdg\n\n#       user-guide.xml or developer-guide.xml\n\n#)\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# We depend on the docbook target to avoid parallel builds.\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Dumb down our title. HTML Help can render most of our content\n\n# correctly because we tell it to use the IE9 rendering engine in\n\n# custom_layer_chm.xsl. However, this doesn't apply to the window\n\n# title. Neither \"’\", \"'\", nor \"&#8217;\" will render correctly, so\n\n# just remove everything between \"Developer\", \"User\", and their\n\n# respective trailing \"s\"es.\n",
        "Line" : 174,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# AsciiDoc uses UTF-8 by default, which is unsupported by HTML\n\n# Help. We may want to render an ISO-8859-1 version, or get rid\n\n# of HTML Help.\n",
        "Line" : 197,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 14
    },
    "cmake/modules/FindYACC.cmake" : {
      "ObjectId" : "c96f87b389648f4255165a471954838e9f8c959a",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find bison/yacc executable\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindZLIB.cmake" : {
      "ObjectId" : "ceeea6d0d21433e000bcf0bdb2e447422c24b053",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find zlib\n\n#\n\n# Find the native ZLIB includes and library.\n\n# Once done this will define\n\n#\n\n#  ZLIB_INCLUDE_DIRS   - where to find zlib.h, etc.\n\n#  ZLIB_LIBRARIES      - List of libraries when using zlib.\n\n#  ZLIB_FOUND          - True if zlib found.\n\n#  ZLIB_DLL_DIR        - (Windows) Path to the zlib DLL.\n\n#  ZLIB_DLL            - (Windows) Name of the zlib DLL.\n\n#  ZLIB_PDB            - (Windows) Name of the zlib PDB.\n\n#\n\n#  ZLIB_VERSION_STRING - The version of zlib found (x.y.z)\n\n#  ZLIB_VERSION_MAJOR  - The major version of zlib\n\n#  ZLIB_VERSION_MINOR  - The minor version of zlib\n\n#  ZLIB_VERSION_PATCH  - The patch version of zlib\n\n#  ZLIB_VERSION_TWEAK  - The tweak version of zlib\n\n#\n\n# The following variable are provided for backward compatibility\n\n#\n\n#  ZLIB_MAJOR_VERSION  - The major version of zlib\n\n#  ZLIB_MINOR_VERSION  - The minor version of zlib\n\n#  ZLIB_PATCH_VERSION  - The patch version of zlib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Zlib is included with GLib2\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# only append a TWEAK version if it exists:\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#\n\n# inflatePrime was added in zlib 1.2.2.4 in 2005. We're guaranteed\n\n# to have it on Windows.\n\n#\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Check for inflate() in zlib, to make sure the zlib library is\n\n# usable.\n\n#\n\n# For example, on at least some versions of Fedora, if you have a\n\n# 64-bit machine, have both the 32-bit and 64-bit versions of the\n\n# run-time zlib package installed, and have only the *32-bit*\n\n# version of the zlib development package installed, it'll find the\n\n# header, and think it can use zlib, and will use it in subsequent\n\n# tests, but it'll try and link 64-bit test programs with the 32-bit\n\n# library, causing those tests to falsely fail.  Hilarity ensues.\n\n#\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# reset\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set ZLIB_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/modules/LocatePythonModule.cmake" : {
      "ObjectId" : "3fbe0c793de4e64834f5a3d257fc880b70b8d396",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#LOCATE_PYTHON_MODULE(<module> [PATHS <path1> ... <pathN>] [REQUIRED])\n\n#\n\n# This function tries to find the given python module.\n\n# If found the path is provided in <PY_<module> and <<module>_FOUND> is set to TRUE.\n\n#\n\n# After PATHS additional paths for python to search can be provided.\n\n# When REQUIRED is set, the function will abort the cmake execution is the module is not found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Parse (additional) arguments\n",
        "Line" : 13,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Append LPM_PATHS to PYTHONPATH to search at provided location (first)\n",
        "Line" : 22,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# Use the (native) python impl module to find the location of the requested module\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/modules/UseABICheck.cmake" : {
      "ObjectId" : "cd08c6a3e691a439f9e9a7b367acba9ee3b63a3d",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# ABI Check related macros\n\n#\n\n# ABI compliance checker can be obtained from\n\n# http://ispras.linux-foundation.org/index.php/ABI_compliance_checker\n\n# Checked using version 1.21.12\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# discover and substitute list of include directories for ABI compatibility\n\n# checks\n",
        "Line" : 17,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "cmake/modules/UseAsn2Wrs.cmake" : {
      "ObjectId" : "9d7cdfed0c9f553c4ae4ab64207a177f26f858fe",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Convert ASN.1 file into C source and header files that can be used to create a wireshark dissector\n\n#\n\n#  A2W_OUTPUT_DIR   - directory where the generated packet-${PROTOCOL_NAME}.c is\n\n#                     saved. The default location is meant for the Wireshark\n\n#                     source tree. For external dissectors, set it to the\n\n#                     absolute path (e.g. \"${CMAKE_CURRENT_SOURCE_DIR}\").\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Besides the file dependency (for timestamp comparison), add a target such\n\n# that other directories can request it to be built (ordering dependency).\n",
        "Line" : 26,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Creates a dissector in the source directory and store the timestamp.\n",
        "Line" : 38,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# This target enables other dissectors to trigger the -exp cnf build\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/modules/UseCheckAPI.cmake" : {
      "ObjectId" : "1518fb4fe872a058ac6c08fa7730adf910b0a303",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add a target to call checkAPIs.pl on the specified source files\n\n# The target is excluded from the ALL targte so must be manually\n\n# specified in a build command.\n\n# The target is added to the top-level checkAPIs target\n\n#\n\n# Parameters:\n\n#   NAME: \tThe name of the target, must be unique\n\n#   SWITCHES:\tSwitches to be supplied to the script\n\n#   SOURCES:\tThe sources to be checked\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/UseCustomIncludes.cmake" : {
      "ObjectId" : "be01303e14895595dbd65c7b87ca5afbb02a45ec",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Include a custom CMake file relative to the current source directory.\n\n# - If no filename is provided, CMakeListsCustom.txt is used.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/UseExecutableResources.cmake" : {
      "ObjectId" : "edb80d62e9112aa44b58066a53b22766fd6db6c1",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sets RC information on Windows.\n\n# UNIQUE_RC - Use if the program has its own .rc.in file. Otherwise cli_template.rc.in will be used.\n\n# EXE_NAME - The lowercase executable base name.\n\n# PROGRAM_NAME - The program's proper, capitalized name.\n\n# COPYRIGHT_INFO - Year followed by copyright holder names if different from default.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use the original Wireshark / TShark .rc copyright.\n",
        "Line" : 14,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "cmake/modules/UseLemon.cmake" : {
      "ObjectId" : "849ffc1c87acb77f55c493549a5b4dee6fb4a5eb",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These files are generated as side-effect\n",
        "Line" : 13,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 2
    },
    "cmake/modules/UseMakePluginReg.cmake" : {
      "ObjectId" : "19f0e9bf4037a0bdc1598104be826f69b651b5a7",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/UseMakeTaps.cmake" : {
      "ObjectId" : "aed93183ce14d15d993f7d4ac272d33eb6cab86e",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/WiresharkPlugin.cmake" : {
      "ObjectId" : "5e7f46e780f7a0f12c0aa84ed0319ecf13e8ddb8",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Plugin convenience macros.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set information\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create the Windows .rc file for the plugin.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Create the plugin.rc file from the template\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/modules/gmxTestLargeFiles.cmake" : {
      "ObjectId" : "4c131299bcb6bcffdc691221cbba67fd74569f7a",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This code was copied from http://www.gromacs.org/\n\n# and its toplevel COPYING file starts with:\n\n#\n\n# GROMACS is free software, distributed under the GNU General Public License\n\n# (GPL) Version 2.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Define macro to check large file support\n\n#\n\n#  GMX_TEST_LARGE_FILES(VARIABLE)\n\n#\n\n#  VARIABLE will be set to true if 64-bit file support is available.\n\n#  This macro will also set defines as necessary to enable large file\n\n# support, for instance:\n\n#  _LARGE_FILES\n\n#  _LARGEFILE_SOURCE\n\n#  _FILE_OFFSET_BITS=64\n\n#\n\n#  However, it is YOUR job to make sure these defines are set in a cmakedefine so they\n\n#  end up in a config.h file that is included in your source if necessary!\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# This is Visual Studio; Visual Studio has supported\n\n# _fseeki64 and _ftelli64 since Visual Studio 2005 / MSVCR80,\n\n# and we require newer versions, so we know we have them.\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "#\n\n# This is UN*X, or some other Windows compiler.\n\n#\n\n# For UN*X, we do the Large File Support tests, to see\n\n# whether it's present and, if so what we need to define\n\n# to enable it.\n\n#\n\n# XXX - what's the right thing to do on Windows with,\n\n# for example, MinGW?\n\n#\n\n# On most platforms it is probably overkill to first test\n\n# the flags for 64-bit off_t, and then separately fseeko.\n\n# However, in the future we might have 128-bit seek offsets\n\n# to support 128-bit filesystems that allow 128-bit offsets\n\n# (ZFS), so it might be dangerous to indiscriminately set\n\n# e.g. _FILE_OFFSET_BITS=64.\n\n#\n",
        "Line" : 31,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# First check without any special flags\n",
        "Line" : 50,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Test with _FILE_OFFSET_BITS=64\n",
        "Line" : 58,
        "CharPositionInLine" : 16
      },
      "6" : {
        "Text" : "# Test with _LARGE_FILES\n",
        "Line" : 69,
        "CharPositionInLine" : 16
      },
      "7" : {
        "Text" : "# Test with _LARGEFILE_SOURCE\n",
        "Line" : 80,
        "CharPositionInLine" : 16
      },
      "8" : {
        "Text" : "# Set the flags we might have determined to be required above\n",
        "Line" : 93,
        "CharPositionInLine" : 16
      },
      "9" : {
        "Text" : "#\n\n# If this is Windows, assume we have _fseeki64/_ftelli64\n\n# available.  If this is UN*X, check for fseeko/ftello.\n\n#\n",
        "Line" : 97,
        "CharPositionInLine" : 16
      },
      "10" : {
        "Text" : "# Test if ftello/fseeko are available\n",
        "Line" : 103,
        "CharPositionInLine" : 20
      },
      "11" : {
        "Text" : "# glibc 2.2 neds _LARGEFILE_SOURCE for fseeko (but not 64-bit off_t...)\n",
        "Line" : 111,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 12
    },
    "cmake/modules/hhc.cmake" : {
      "ObjectId" : "6855ee7789b83a992cd1dfe92f118cf690c73fc6",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# hhc.exe returns 1 on success - which cmake instprets as failure in case\n\n#  of add_custom_command.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Params are\n\n#   cmake -P /path/to/hhc.cmake \"/path/to/hhc.exe\" project.hhp\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "codecs/CMakeLists.txt" : {
      "ObjectId" : "f46cabc96e55b389b31835d46b4a2f5d9f8a5c46",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enables visibility in IDEs\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "fb5059529d46652558bf8eb4463fa50dba2c0bd1",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doc/plugins.example/CMakeLists.txt" : {
      "ObjectId" : "244c22bd4d4e8ae78b6717fbe16fa7dd639fa046",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "docbook/CMakeLists.txt" : {
      "ObjectId" : "ad17689850ec71d53a4d9f0e2a297b3e6dbb6810",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To do:\n\n# - Make the build targets top-level on Windows, similar to the NSIS,\n\n#   WiX, and PortableApps targets?\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We do not need the HTML Help headers and library, just the\n\n# compiler. To avoid confusion, report the package as found.\n\n# https://gitlab.kitware.com/cmake/cmake/issues/15886\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The number and order of arguments MUST match hhc.cmake.\n",
        "Line" : 38,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# Dummy.\n",
        "Line" : 49,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# This is automatically updated each week. You probably don't need to run it\n\n# or depend on it.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Ensure ws.css is available when the user tries to open generated .html files.\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Note: file order here MATTERS!\n\n# new WSLUA_MODULE files must come right before any WSLUA_CONTINUE_MODULE\n\n# files for the same module\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Empty file to trigger wsluarm generation.\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# XXX Add macros\n",
        "Line" : 363,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Generate the DocBook sources of user and developer guides\n",
        "Line" : 367,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Top-level guide targets.\n",
        "Line" : 377,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# User's Guide chain.\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Developer's Guide chain.\n",
        "Line" : 441,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# The installation location and DOC_DIR in ui/help_url.c must\n\n# match.\n",
        "Line" : 494,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# release_notes: release-notes.html release-notes.txt\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Force serial execution so that separate asciidoctor instances don't\n\n# trip on each other\n\n# add_dependencies ( release_notes_txt release_notes_html )\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# FAQ\n",
        "Line" : 537,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 550,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "epan/CMakeLists.txt" : {
      "ObjectId" : "bd135105914a53866447cec27e9fbc290f8bdd96",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#geoip_db.h\n",
        "Line" : 118,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#geoip_db.c\n",
        "Line" : 227,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#Included so that Visual Studio can properly put header files in solution\n",
        "Line" : 300,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#\tCOMMAND rm -rf ${CMAKE_CURRENT_BINARY_DIR}/abi_dumps ${ABICHECK_TMPDIR}/config.h\n\n#\t\t${ABICHECK_TMPDIR}/epan/* ${ABICHECK_TMPDIR}/crypt/*\n\n#\t\t${ABICHECK_TMPDIR}/dfilter/* ${ABICHECK_TMPDIR}/dissectors/*\n\n#\t\t${ABICHECK_TMPDIR}/ftypes/* ${ABICHECK_TMPDIR}/wmem/*\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# By default the name for a library with target name epan will be libepan,\n\n# but Ethereal is now named Wireshark\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 460,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "epan/crypt/CMakeLists.txt" : {
      "ObjectId" : "d534fa6a64daf62743528081e5d3218920c385d2",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Included so that Visual Studio can properly put header files in solution\n",
        "Line" : 45,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "epan/dfilter/CMakeLists.txt" : {
      "ObjectId" : "ef584e58e754b0b8c4c04e49260aaef62961336e",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# We don't enable -Werror on generated code to make the build a\n\n# little less fragile when configured warnings change.\n\n#\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Included so that Visual Studio can properly put header files in solution\n",
        "Line" : 80,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# LEX files commented out due to use of malloc, free etc.\n\n#\t  ${LEX_FILES}\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "epan/dissectors/CMakeLists.txt" : {
      "ObjectId" : "44c58efb8b5354dac198c4a5e3a995ac3cb08051",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CORBA IDL dissectors are triggering a MSVC 2013 x64 /O2 bug leading to a NULL pointer dereference (see bug 12495)\n",
        "Line" : 233,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#\n\n# We pass the arguments to make-dissectors in a file to avoid limitations\n\n# with the number of arguments handled by main().\n\n#\n",
        "Line" : 1950,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Included so that Visual Studio can properly put header files in solution\n",
        "Line" : 1982,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 2014,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "epan/dissectors/asn1/CMakeLists.txt" : {
      "ObjectId" : "5874ddfdccf7b4e55bee4bae4ac12f4ea12ab682",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# x721 does not build\n",
        "Line" : 136,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Target to regenerate all outdated ASN.1 dissectors\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "epan/dissectors/asn1/HI2Operations/CMakeLists.txt" : {
      "ObjectId" : "f93730a923ac0bdafb8aa72d7663171df111e152",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/acp133/CMakeLists.txt" : {
      "ObjectId" : "7f4dff3e84622d43f5886367d321bc425139789e",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/acse/CMakeLists.txt" : {
      "ObjectId" : "b532cf404a0f4ae493e7b6ffb963413a92d7f9b4",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/ain/CMakeLists.txt" : {
      "ObjectId" : "3ca2936638da2378992dd04485bdc186c2792375",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/ansi_map/CMakeLists.txt" : {
      "ObjectId" : "2a20d4ff763296a40de7bc3cd3898ec6f1ebe8bf",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/ansi_tcap/CMakeLists.txt" : {
      "ObjectId" : "1c1ae9fec7df7c72b81a75f74832faac506d63b9",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/atn-cm/CMakeLists.txt" : {
      "ObjectId" : "20c5c210815f1a35ede26d8db3b28f3039eca329",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/atn-cpdlc/CMakeLists.txt" : {
      "ObjectId" : "0a316b1bbef8ad4d7d990b920b995da5033b4a9c",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/atn-ulcs/CMakeLists.txt" : {
      "ObjectId" : "015ab8e097d16809ead8ea68eb1a8cf1630150ca",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/c1222/CMakeLists.txt" : {
      "ObjectId" : "96c3e46a5d5bf927682bc54c8b857217d6adc740",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/camel/CMakeLists.txt" : {
      "ObjectId" : "b713a98b090ae2bbba4c512e6d1faf7284020645",
      "LastModified" : "2018-11-11T00:15:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/cbrs-oids/CMakeLists.txt" : {
      "ObjectId" : "232cf9f37b4888c51b19f4bdf1c11d04ad7a87aa",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/cdt/CMakeLists.txt" : {
      "ObjectId" : "29ffd9a36c46aea3fc89a9310440ef871c02b468",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/charging_ase/CMakeLists.txt" : {
      "ObjectId" : "e99065b85460851cdc7b70a39520bf232de3521a",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/cmip/CMakeLists.txt" : {
      "ObjectId" : "740db2b0d09ab2498abd41d07a6a59daf28b110b",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/cmp/CMakeLists.txt" : {
      "ObjectId" : "a297143f49caf361d763727324b9c75a2480d058",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/cms/CMakeLists.txt" : {
      "ObjectId" : "6fc91bd2f09cb3a265c8fd427f3677c3e72d3ad2",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/credssp/CMakeLists.txt" : {
      "ObjectId" : "59c80321e71e6d1b423cab9c5de9366245932a05",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/crmf/CMakeLists.txt" : {
      "ObjectId" : "434fba7c115b75f7ea6dfeb53ecf5000a536fd92",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/dap/CMakeLists.txt" : {
      "ObjectId" : "c52b401431d6d98e21476c666cb9ea5ecf8570a9",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/disp/CMakeLists.txt" : {
      "ObjectId" : "57f2e6203d4ab6382f2240f123fae57647013231",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/dop/CMakeLists.txt" : {
      "ObjectId" : "a7223b3c1bd28975b89e0eb256e914bf2dabcb8d",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/dsp/CMakeLists.txt" : {
      "ObjectId" : "0129cd7cc915faa12d452e011f2c21c3f3a1b1d7",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/e1ap/CMakeLists.txt" : {
      "ObjectId" : "df3aafdec75c210f9a1f8220a58bdb20e2333e31",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/ess/CMakeLists.txt" : {
      "ObjectId" : "e70581ae71e1b7b689a7267360157ba992f23851",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/f1ap/CMakeLists.txt" : {
      "ObjectId" : "7f7500e4eb040e578c86ca892b16e393b6908bf1",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/ftam/CMakeLists.txt" : {
      "ObjectId" : "3c64148bb30ed75fb0eed99abe2b1e9fef826c4e",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/glow/CMakeLists.txt" : {
      "ObjectId" : "a120042c3eb4fb9978987f3ba7133209264afe1d",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/goose/CMakeLists.txt" : {
      "ObjectId" : "6dd70dc6abac3b63025ff31e39d3fbcee682d401",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/gprscdr/CMakeLists.txt" : {
      "ObjectId" : "84242ad3befeaad42eba01a851c7c4f807462b17",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/gsm_map/CMakeLists.txt" : {
      "ObjectId" : "c245b630b8a91a136507851efa90096baaeb7097",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/h225/CMakeLists.txt" : {
      "ObjectId" : "f1028240fb51321adbef9bb15d9f6a169eeb4f71",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/h235/CMakeLists.txt" : {
      "ObjectId" : "ec46769813159593780a79cd005e4331add4d9a4",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/h245/CMakeLists.txt" : {
      "ObjectId" : "ba97d92baa3e24500217a52142a38b0277bcbe7e",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/h248/CMakeLists.txt" : {
      "ObjectId" : "31fd389ca8467bcfaeb229c82fa19ff4c694c5e0",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/h282/CMakeLists.txt" : {
      "ObjectId" : "080e9ed0da71983562c0d67a057f921f93a76457",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/h283/CMakeLists.txt" : {
      "ObjectId" : "c30b770795305fd1e20f9c469b4204d2e0e69f09",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/h323/CMakeLists.txt" : {
      "ObjectId" : "84d1df8433e2159933847a435e1a0e7a99fde4b7",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/h450-ros/CMakeLists.txt" : {
      "ObjectId" : "fe0c67df7ac2edcb5db5f04b1354a1f03b298bba",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/h450/CMakeLists.txt" : {
      "ObjectId" : "93a60135b6022768a38c547a29aee7538a0b2a1e",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/h460/CMakeLists.txt" : {
      "ObjectId" : "7e214db6b6b9668e34ce904bc6148f193af6f9fc",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/h501/CMakeLists.txt" : {
      "ObjectId" : "d6ded656407208a15f36f5eb3c8c66819d85879d",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/hnbap/CMakeLists.txt" : {
      "ObjectId" : "54572bbb194d4ff5949dff2f671787aa284661f0",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/idmp/CMakeLists.txt" : {
      "ObjectId" : "aed8c0cef51c99bbf9489f3bdb285e602a30c648",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/ieee1609dot2/CMakeLists.txt" : {
      "ObjectId" : "728e03a34008c45f3d2b14c54cde39a4f54f41fe",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/ilp/CMakeLists.txt" : {
      "ObjectId" : "955fc1006d0e360da9215fdb3f719cd0603ba28e",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/inap/CMakeLists.txt" : {
      "ObjectId" : "1f94fc7c42cded4d69176c8323233b1843f0425d",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/isdn-sup/CMakeLists.txt" : {
      "ObjectId" : "0c13947afb718245af04a6b93c83df0e5c2e6b4f",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/its/CMakeLists.txt" : {
      "ObjectId" : "03a9842677ba40a4bf54d9edcf7cc620f816c859",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/kerberos/CMakeLists.txt" : {
      "ObjectId" : "1a1253d89ce7efe9d1cdf1661e450786cab87f07",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/lcsap/CMakeLists.txt" : {
      "ObjectId" : "9a633c3e3276fded590c0b87f6b95ad79d51cf20",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/ldap/CMakeLists.txt" : {
      "ObjectId" : "6e5bca6b7a4102761b5091b199c868b1eae8d9a2",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/lnpdqp/CMakeLists.txt" : {
      "ObjectId" : "06b067157cd2bc85135b73f957a33337b7892c5d",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/logotypecertextn/CMakeLists.txt" : {
      "ObjectId" : "c671859fdbc0c96ee7e048551cb260e92d40cce0",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/lpp/CMakeLists.txt" : {
      "ObjectId" : "ce09924222118e19127e37076bd97a0b0162be3f",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/lppa/CMakeLists.txt" : {
      "ObjectId" : "1bf05329d4e561e179e8b21f163fea2c1a57e4f8",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/lppe/CMakeLists.txt" : {
      "ObjectId" : "5212820a49c91af6874738f299b30af6057685ee",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/lte-rrc/CMakeLists.txt" : {
      "ObjectId" : "2d63accfa660a09c1409e08f9745bf8aa51ca5c8",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/m2ap/CMakeLists.txt" : {
      "ObjectId" : "55f8823f582e27c077ada14a3a5e6153653cccb7",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/m3ap/CMakeLists.txt" : {
      "ObjectId" : "5dbb2e886270d3b9cfcf2fa99cb8c9304912d5d8",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/mms/CMakeLists.txt" : {
      "ObjectId" : "54a77b81a9b300f953080aac279d16844a54da67",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/mpeg-audio/CMakeLists.txt" : {
      "ObjectId" : "da68fc2ed280de236ae0326d98b31244c13f4231",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/mpeg-pes/CMakeLists.txt" : {
      "ObjectId" : "b87ca641307ee144f7f919b81a407bc0d132b3da",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/mudurl/CMakeLists.txt" : {
      "ObjectId" : "7032ae31961f0aff712ca6fc1918296d8077a51c",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/nbap/CMakeLists.txt" : {
      "ObjectId" : "3b6e39c364b0b0f82f0162197dacb65c39170b51",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/ngap/CMakeLists.txt" : {
      "ObjectId" : "2c9b964a6bfe28fc72f9fdefa91cf39de477966c",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/nist-csor/CMakeLists.txt" : {
      "ObjectId" : "1d00ba64f52db4e7aec2f3789292ae5f2969d6c2",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/novell_pkis/CMakeLists.txt" : {
      "ObjectId" : "04d4a78461ba9ada36fbf1ed6b244d80b0aa70a4",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/nr-rrc/CMakeLists.txt" : {
      "ObjectId" : "1bdcb21070bb01349015d9a2119294c4a396be0e",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/ns_cert_exts/CMakeLists.txt" : {
      "ObjectId" : "3bd341126a24d7ca66e19df1641370ab4d5d1eae",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/ocsp/CMakeLists.txt" : {
      "ObjectId" : "6b648e0aa9acf7171abdcef25cbf7e837298ba2a",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/p1/CMakeLists.txt" : {
      "ObjectId" : "29f9a53a1c6b254ac81ec5597ff3c183e1006ed0",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/p22/CMakeLists.txt" : {
      "ObjectId" : "8f2b196ca9e811c9deb60bbc2d20467dcfdccfc6",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/p7/CMakeLists.txt" : {
      "ObjectId" : "1f6632cffda1f72197e5fa8de3412381c566e59e",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/p772/CMakeLists.txt" : {
      "ObjectId" : "d3b1842d4ffa4bfde1a6205917db9d6d3712c7c6",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/pcap/CMakeLists.txt" : {
      "ObjectId" : "9fb9c610c872566e9e8884f51bbd7d65e674e0ae",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/pkcs1/CMakeLists.txt" : {
      "ObjectId" : "31df28c86e82cfff81fe97dadd16955f1fae9da7",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/pkcs10/CMakeLists.txt" : {
      "ObjectId" : "b4dec715b12b1d84a5c694dbe3e4066c1e775c92",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/pkcs12/CMakeLists.txt" : {
      "ObjectId" : "a1dee6cf41e28143521c58a18c39c1020f91c37c",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/pkinit/CMakeLists.txt" : {
      "ObjectId" : "50209cb244d0534432b79728294e771f7f48e47e",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/pkix1explicit/CMakeLists.txt" : {
      "ObjectId" : "4f104f2166f35e6d274f6a2fc12ab780a2d96950",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/pkix1implicit/CMakeLists.txt" : {
      "ObjectId" : "eaf3daecf53df56ddb3e01c0d8a69d63357b9170",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/pkixac/CMakeLists.txt" : {
      "ObjectId" : "a6efdb018fb606140c9dfddff1af46d7f067fc9c",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/pkixproxy/CMakeLists.txt" : {
      "ObjectId" : "b5eb7c9f2a8e1b133e4656cd9c27063385c1f8b4",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/pkixqualified/CMakeLists.txt" : {
      "ObjectId" : "1d5d03e3ea4d98cc24fb4a4ad4621a2cec0f5bfd",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/pkixtsp/CMakeLists.txt" : {
      "ObjectId" : "a7899b25f2acf769892b5acddd2ce7b05e1f2b99",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/pres/CMakeLists.txt" : {
      "ObjectId" : "2fdf26fde7446756cac38371186894115243e4a0",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/q932-ros/CMakeLists.txt" : {
      "ObjectId" : "5fe60733ed5101b13b2a01167bd6a5fea59ed1bc",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/q932/CMakeLists.txt" : {
      "ObjectId" : "c2d7961c2016a7f678455ad2f9ded8f13409571b",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/qsig/CMakeLists.txt" : {
      "ObjectId" : "1056b89cb34bebb38ce1e75e70123bc8817c4535",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/ranap/CMakeLists.txt" : {
      "ObjectId" : "b37f5b75601e80ddb0b1389b9b2f2cab0953e199",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/rnsap/CMakeLists.txt" : {
      "ObjectId" : "5b909afc80ef9057c4292cd2dbeec9f7ccd4538d",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/ros/CMakeLists.txt" : {
      "ObjectId" : "0223f41e2498d0ea2481c4c029da0b0358627194",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/rrc/CMakeLists.txt" : {
      "ObjectId" : "fffc7f4d8b81ead8255a6615434862e5032b9b83",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/rrlp/CMakeLists.txt" : {
      "ObjectId" : "1253f69236fc26f82085e364fbc83a03e4bb6512",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/rtse/CMakeLists.txt" : {
      "ObjectId" : "8628426f9043d6baab53da6df079da58a270711f",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/rua/CMakeLists.txt" : {
      "ObjectId" : "6a0a4decd788808aa7fca812dbf102271d01389d",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/s1ap/CMakeLists.txt" : {
      "ObjectId" : "6ac8be13f397b27043f107a33c306064e477092d",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/sabp/CMakeLists.txt" : {
      "ObjectId" : "f7434fb925cbedfa3cdc8eb460af8a84db37bfd5",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/sbc-ap/CMakeLists.txt" : {
      "ObjectId" : "d7f39c086891ec8267066191f4df839cfbede3c5",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/smrse/CMakeLists.txt" : {
      "ObjectId" : "6d1209d792a27e9e8bcd6bba107d9237b41adb4b",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/snmp/CMakeLists.txt" : {
      "ObjectId" : "dc6a1c971d11b5802829bf71b599227d543f872d",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/spnego/CMakeLists.txt" : {
      "ObjectId" : "200417885799469bd77e0d98997c004cdc1e8dee",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/sv/CMakeLists.txt" : {
      "ObjectId" : "fc8a5412e6cd6363b1d574b96ad25a802479d84e",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/t124/CMakeLists.txt" : {
      "ObjectId" : "1e461b6c9a0642cf0a4fb0d33f4334d3edfe44ef",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/t125/CMakeLists.txt" : {
      "ObjectId" : "5db69d807870dfb19f6c60f00894d48e73080832",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/t38/CMakeLists.txt" : {
      "ObjectId" : "d216829c4b95c0fc40d6a10299199b932e490665",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/tcap/CMakeLists.txt" : {
      "ObjectId" : "742c303567dc434acb63090cda5a3bf5d8ecbb6b",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/tcg-cp-oids/CMakeLists.txt" : {
      "ObjectId" : "ce9e4db3249f491ef80242b8aa5fc6dd32ea635a",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/tetra/CMakeLists.txt" : {
      "ObjectId" : "cd602a47b47806ce8411c0c35a74f4fa54be2077",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/ulp/CMakeLists.txt" : {
      "ObjectId" : "f8dedd2c1b8620dab437e473c0f78c50c0b1f2b0",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/wlancertextn/CMakeLists.txt" : {
      "ObjectId" : "133762cfcc6a6880803b9ee4a08bb0fe19cde099",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/x2ap/CMakeLists.txt" : {
      "ObjectId" : "a858ff93aa753edbb71c8792e30a5b84d1a147a1",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/x509af/CMakeLists.txt" : {
      "ObjectId" : "213294c9da7fcf6d4e0f3f6a544ecde0d3f7fbac",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/x509ce/CMakeLists.txt" : {
      "ObjectId" : "2ca970811297eefe56155d82371a59344875f9c8",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/x509if/CMakeLists.txt" : {
      "ObjectId" : "c7c98257e0cf43ecc6b43ade4f859b4b26667902",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/x509sat/CMakeLists.txt" : {
      "ObjectId" : "66e5a8739135bd8d8a7067372a9695325b0830ce",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/x721/CMakeLists.txt" : {
      "ObjectId" : "69f90c2551baf2a60c07b17a926c73430141d11c",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/xnap/CMakeLists.txt" : {
      "ObjectId" : "e479d16ae0fc23cb04e0b0070bb930af06e313f5",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/asn1/z3950/CMakeLists.txt" : {
      "ObjectId" : "d2d5af9cbf810265e88ac7ad9df9874a6dfe6868",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "epan/dissectors/dcerpc/CMakeLists.txt" : {
      "ObjectId" : "e2762d3a03c34766588751216e187c054e2dde71",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use a stamp file instead of OUTPUT to packet-dcerpc-X.c to\n\n# avoid removing the .c file on clean.\n",
        "Line" : 17,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# TODO should probably just merge this into pidl-dissectors\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Editor modelines  -  https://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 4\n\n# tab-width: 4\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=4 tabstop=4 noexpandtab:\n\n# :indentSize=4:tabSize=4:noTabs=false:\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "epan/dissectors/pidl/CMakeLists.txt" : {
      "ObjectId" : "1006dd6c570c022f2c8862aeb0bf5ed331c5d4ab",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO fix srvsvc wkssvc\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#srvsvc\n",
        "Line" : 30,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#wkssvc\n",
        "Line" : 33,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#\n\n# Editor modelines  -  https://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 4\n\n# tab-width: 4\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=4 tabstop=4 noexpandtab:\n\n# :indentSize=4:tabSize=4:noTabs=false:\n\n#\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "epan/ftypes/CMakeLists.txt" : {
      "ObjectId" : "56c0efd8c626377d052cf77933652749361a00f5",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Included so that Visual Studio can properly put header files in solution\n",
        "Line" : 49,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "epan/wmem/CMakeLists.txt" : {
      "ObjectId" : "e66007e448357ca5d505e3052581d082b8ee7bff",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Included so that Visual Studio can properly put header files in solution\n",
        "Line" : 72,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "epan/wslua/CMakeLists.txt" : {
      "ObjectId" : "56d751d07d4f77a0ec16aafaeb4fd2da7868f381",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make-taps.pl depends on the current working directory\n\n# to find the dissector files (contents of taps file\n\n# depend on this actually, so just changing the paths\n\n# in these lists won't help).\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Used with untypical CWD\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Only here to add dependencies for the taps \"source\"files\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ${CMAKE_CURRENT_BINARY_DIR}/taps_wslua.c\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "extcap/CMakeLists.txt" : {
      "ObjectId" : "3e59e7df90a98a54ec620cc9495f5bd85b5a92b3",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ensure \"run/extcap\" exists\n\n# add_custom_command(OUTPUT \"${DATAFILE_DIR}/extcap\"\n\n# \tCOMMAND ${CMAKE_COMMAND} -E make_directory\n\n# \t\t\"${DATAFILE_DIR}/extcap\"\n\n# )\n\n# list(APPEND copy_data_files_depends \"${DATAFILE_DIR}/extcap\")\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Xcode\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Add a wrapper script which runs each executable from the\n\n# correct location. This adds convenience but makes debugging\n\n# more difficult.\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#message( WARNING \"Cannot find libssh, cannot build sshdump\" )\n",
        "Line" : 144,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#message( WARNING \"Cannot find libssh, cannot build ciscodump\" )\n",
        "Line" : 170,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message( WARNING \"Cannot find libnl3, cannot build dpauxmon\" )\n",
        "Line" : 194,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#\n\n# Editor modelines  -  https://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "fuzz/CMakeLists.txt" : {
      "ObjectId" : "fc9bb1d96579c874612e10ad365a14f2d44f4426",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# List of dissectors compiled below, which should be turned off.\n\n# This is done to avoid single fuzzer (like IP) to call UDP protocols, which can go back to IP, and so on..\n\n# While doing so might find some bugs, but it's likely to be the problem for too big corpus in oss-fuzzer\n\n# (see: https://github.com/google/oss-fuzz/issues/1087).\n\n# + udplite - it's sharing most of code with UDP.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# list(APPEND FUZZ_TCP_PORT_DISSECTORS bzr)     # disabled, cause of known problem.\n\n# list(APPEND FUZZ_TCP_PORT_DISSECTORS echo)    # disabled, too simple.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# list(FUZZ_UDP_PORT_DISSECTORS bfd)            # disabled, too simple.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# libFuzzingEngine.a is not position independent, so cannot use -pie.\n",
        "Line" : 50,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Convert the list of disabled dissectors from a;b;c -> \"a\", \"b\", \"c\"\n\n# for use in fuzzshark.c (macro)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Targets that are build via all-fuzzers:\n\n# - fuzzshark: a non-specific fuzz target, configurable through env vars (requires BUILD_fuzzshark)\n\n# - fuzzshark_<target>: fuzz target for a specific dissector target.\n\n# - fuzzshark_<table>-<target>: fuzz target for a specific dissector via a dissector table.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Sanitizers require a C++ runtime, so use a C++ linker.\n",
        "Line" : 66,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# libFuzzer includes a main routine that enables fuzzing. If\n\n# support for fuzzing was not enabled, add a small standalone\n\n# target that can be used to test-compile fuzzshark.c.\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Create a new dissector fuzzer target.\n\n# If <dissector_table> is empty, <name> will be called directly.\n\n# If <dissector_table> is non-empty, a dissector with filter name <name> will be\n\n# looked up in dissector table <dissector_table>.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \"ip.proto\" and \"udp\" -> \"ip_proto-udp\"\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Add fuzzer targets for every dissector in list FUZZ_<table-var>_DISSECTORS,\n\n# where <table-var> changes a <table> such as \"ip.proto\" into \"IP_PROTO\".\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "packaging/nsis/CMakeLists.txt" : {
      "ObjectId" : "204448d353d30daf32690755a9127a64a88557ce",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We should use CPack to generate the NSIS package. Even better,\n\n# we should use CPack to create a .msi using WIX.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Variables required for config.nsh\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# STAGING_DIR depends on the build configuration so we pass it\n\n# on the command line below.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Must match ${EXTRA_INSTALLER_DIR}/Npcap-X.Y.Z.exe\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# To do:\n\n# - Sync the various version names between CMake and NSIS.\n\n# - Set CMakeLists.txt version strings in tools/make-version.pl\n\n# - Add a VERSION_EXTRA cmake option\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#add_custom_target(build_nsis_package\n\n#\tDEPENDS\n\n#\t\twireshark-$(WIRESHARK_TARGET_PLATFORM)-$(VERSION).exe\n\n#)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Look for the Visual C++ Redistributable packages in the following locations:\n\n# - _PROJECT_LIB_DIR\n\n# - _PROJECT_LIB_DIR/vcredist_MSVCxx\n\n# - %VCINSTALLDIR%\n\n# - %VCINSTALLDIR%/redist/1033 (<= Visual Studio 2015)\n\n# - %VCINSTALLDIR%/Redist/MSVC/* (>= Visual Studio 2017)\n\n# MSVC_VERSION (_MSC_VER) = Visual Studio Version / MSVC Toolset Version\n\n# 1900 = VS2015 14.0        / 14.00\n\n# 1910 = VS2017 15.1, 15.2  / 14.10\n\n# 1911 = VS2017 15.3, 15.4  / 14.11\n\n# 1912 = VS2017 15.5        / 14.12\n\n# 1913 = VS2017 15.6        / 14.13\n\n# 1914 = VS2017 15.7        / 14.14\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Try to find the Redist folder in VCINSTALLDIR which is set by vcvarsall.bat.\n\n# If it is not set, query it within the registry. VS2015 looks for the \"VC7\" key\n\n# in two locations (four if you count HKCU instead of HKLM). However, VS2017\n\n# does not use \"VC7\" (it sets a directory relative to vsdevcmd_start.bat). As\n\n# both versions do set \"VS7\", use that instead.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Visual Studio Community 2017 version 15.7.5 uses VCRT 14.14.26405, but an\n\n# earlier version used 14.10.25008. Let's just glob for the right value.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Ideally we would generate this at compile time using a separate cmake\n\n# module, e.g. cmake/modules/configure_nsis_file.cmake. However we would\n\n# have to figure out a clean way to pass in the variables above.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# all-manifest.nsh. Can be created at configure time.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Needed for mmdbresolve\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Variables we can't set via config.nsh.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# We want to sign all of the executables that we ship in the official\n\n# installers. This means that uninstall.exe must be built separately AND\n\n# that building the installer itself won't overwrite uninstall.exe\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# XXX - if we're not building Wireshark, we can't build\n\n# anything, so there's nothing to uninstall.\n\n#\n",
        "Line" : 169,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#\n\n# XXX - if we're not building Wireshark, we can't build the\n\n# manifest below.  On the other hand, if we're not building\n\n# Wireshark, we have no need to include Qt in the installer,\n\n# so it's not clear we need this manifest.\n\n#\n\n# This should probably be fixed, so that people can produce\n\n# command-line-only installer packages.\n",
        "Line" : 192,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "#set (_nsis_package ${CMAKE_BINARY_DIR}/packaging/nsis/Wireshark-$(WIRESHARK_TARGET_PLATFORM)-$(VERSION).exe)\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# qt-dll-manifest.nsh. Created using Wireshark.exe.\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Build NSIS package dependencies. We build the package in\n\n# two stages so that nsis_package below doesn't trigger\n\n# any dependencies that might clobber any signed executables.\n",
        "Line" : 212,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Dump the installer into\n\n# ${CMAKE_CURRENT_SOURCE_DIR}/packaging/nsis\n\n# Note that executables and DLLs *must* be built separately\n",
        "Line" : 228,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "#NEWS.txt\n",
        "Line" : 246,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "#user-guide.chm\n",
        "Line" : 248,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 23
    },
    "packaging/portableapps/CMakeLists.txt" : {
      "ObjectId" : "9d0a84770b5b4bc6b07ee4ffb837da1fc8d9a361",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To do:\n\n# - Use CPack to generate the PortableApps package.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Copy our binaries, libraries, and data files to the PortableApps build directory.\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# We \"Deploy using XCopy,\" which is described at\n\n# https://msdn.microsoft.com/en-us/library/ms235291.aspx\n\n# We also assume that the project has been built at this point.\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Build the PortableApps package.\n\n# nsis_package_prep must be built prior to this.\n",
        "Line" : 67,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#set(CLEAN_FILES\n\n#\t${_launcher_dir}\n\n#\t${_portableapps_package}\n\n#)\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "packaging/wix/CMakeLists.txt" : {
      "ObjectId" : "ad3c5ae54ec3ffe4e7d28bb50ebce58174b40b75",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We should use CPack to help generate a .msi using WIX.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Variables required for Wireshark.wxs\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# STAGING_DIR depends on the build configuration so we pass it\n\n# on the command line below.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# To do:\n\n# - Sync the various version names between CMake and Wix.\n\n# - Set CMakeLists.txt version strings in tools/make-version.pl\n\n# - Add a VERSION_EXTRA cmake option\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use the merge module that comes with our version of Visual Studio\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\"$ENV{VCINSTALLDIR}/VC/Redist/MSVC/how-do-we-get-this-version/Merge Modules\"\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# DependentComponents.wxi. Can be created at configure time.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Required for mmdbresolve\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#ensure uniqueness of files\n",
        "Line" : 122,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# mmdbresolve\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#ensure uniqueness of files\n",
        "Line" : 150,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# The NSIS CMakeFile sets the program name + version slightly differently.\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# XXX - if we're not building Wireshark, we can't build\n\n# QtDependentComponents.wxs..  On the other hand, if we're\n\n# not building Wireshark, we have no need to include Qt\n\n# in the installer, so it's not clear we need that file.\n\n#\n\n# This should probably be fixed, so that people can produce\n\n# command-line-only installer packages.\n",
        "Line" : 220,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# QtDependentComponents.wxs. Created using Wireshark.exe.\n",
        "Line" : 232,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# SNMPMibs.wxs. Collects all MIBs in \"output\" snmp/mibs\n\n# directory. Generated with heat.exe\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# RadiusDict.wxs. Collects all Radius dictionary files in\n\n# \"output\" radius directory. Generated with heat.exe\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Diameter.wxs. Collects all Diameter XML dictionary files\n\n# in \"output\" diameter directory. Generated with heat.exe\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# QtTranslation.wxs. Collects all Qt translation files in\n\n# \"output\" translations directory. Generated with heat.exe\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Build WiX package dependencies. We build the package in\n\n# two stages so that wix_package below doesn't trigger any\n\n# dependencies that might clobber any signed executables.\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Dump the installer into\n\n# ${CMAKE_CURRENT_SOURCE_DIR}/packaging/wix\n\n# Note that executables and DLLs *must* be built separately\n",
        "Line" : 287,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "#NEWS.txt\n\n#user-guide.chm\n",
        "Line" : 313,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 22
    },
    "plugins/codecs/l16_mono/CMakeLists.txt" : {
      "ObjectId" : "51589c37daf7457f0bd1fdd9a8a584a9247c67a6",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Plugin name and version info (major minor micro extra)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/epan/ethercat/CMakeLists.txt" : {
      "ObjectId" : "0e2fd822ef93d1424fca6e0398ef48881b7d9026",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Plugin name and version info (major minor micro extra)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/epan/gryphon/CMakeLists.txt" : {
      "ObjectId" : "2750c2c1d40edbbd8ee3a5717b7b1ce0da60198b",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Plugin name and version info (major minor micro extra)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/epan/irda/CMakeLists.txt" : {
      "ObjectId" : "9900b0ff8bab736ea097d83e05b3e9464130b84e",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Plugin name and version info (major minor micro extra)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/epan/mate/CMakeLists.txt" : {
      "ObjectId" : "1b4417613269dd30336ff26d689bccfd28611b2c",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Plugin name and version info (major minor micro extra)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# LEX files commented out due to use of malloc, free etc.\n\n#\t  ${LEX_FILES}\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "plugins/epan/opcua/CMakeLists.txt" : {
      "ObjectId" : "9b51938c2e65a8575cc60d7acb9a2b05debd9e5f",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Plugin name and version info (major minor micro extra)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/epan/pluginifdemo/CMakeLists.txt" : {
      "ObjectId" : "23b74cfde70bacd9651dfb4bcc622122b2c560dd",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Plugin name and version info (major minor micro extra)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/epan/profinet/CMakeLists.txt" : {
      "ObjectId" : "00c0b7d32e1f4e10f986fa58b7334d1150a09f7a",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Plugin name and version info (major minor micro extra)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/epan/stats_tree/CMakeLists.txt" : {
      "ObjectId" : "882e9c7d0c5d561aeddf20d859d385d2a94ba742",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Plugin name and version info (major minor micro extra)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/epan/transum/CMakeLists.txt" : {
      "ObjectId" : "aec3a285d87ab5d38cac879d59a2e6f8a983408b",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Plugin name and version info (major minor micro extra)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/epan/unistim/CMakeLists.txt" : {
      "ObjectId" : "cac171a0a8cd6534e1d77edcc9007e72ecb49d6f",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Plugin name and version info (major minor micro extra)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/epan/wimax/CMakeLists.txt" : {
      "ObjectId" : "9b8ce4651827c60fa68ef545deacdfb68fb5c79b",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Plugin name and version info (major minor micro extra)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/epan/wimaxasncp/CMakeLists.txt" : {
      "ObjectId" : "3c93154b411235c56242cb85b32214b61a2919a2",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Plugin name and version info (major minor micro extra)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# LEX files commented out due to use of malloc, free etc.\n\n#\t  ${LEX_FILES}\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "plugins/epan/wimaxmacphy/CMakeLists.txt" : {
      "ObjectId" : "43081933d39891d0974cfd7b52d9830cd88bffce",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Plugin name and version info (major minor micro extra)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/wiretap/usbdump/CMakeLists.txt" : {
      "ObjectId" : "9aae128b10192bf334655c3a4d1e7e7b64ba87e5",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Plugin name and version info (major minor micro extra)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "randpkt_core/CMakeLists.txt" : {
      "ObjectId" : "2d30b63c794cbc95a8faf3cb5c7cc91c30e2695f",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/lemon/CMakeLists.txt" : {
      "ObjectId" : "af62d4596e9e442491d8d80188c5f28fe4b3933d",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To keep lemon.c as close to upstream as possible, deliberately ignore\n\n# some stylistic issues.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Normal MSVC has no warnings, but VS Code Analysis finds a bunch\n\n# (when ENABLE_CODE_ANALYSIS is set).\n",
        "Line" : 16,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Using uninitialized memory '*zBuf'.\n\n# Dereferencing NULL pointer 'cp'.\n\n# realloc may return NULL and leak original memory.\n\n# Buffer overrun (read) in Parse, related to 'cp'\n\n# Buffer overrun (write) in Parse, related to 'filebuf'\n\n# strlen(argv[0]) could receive a NULL pointer.\n\n# Dereferencing NULL pointer. 'ap2' contains the same NULL value as 'ap' did.\n\n# passing 0 (from realloc) to memcpy\n\n# Using possibly uninitialized memory\n",
        "Line" : 19,
        "CharPositionInLine" : 14
      },
      "4" : {
        "Text" : "# GCC 8.2.1 is not smart enough to recognize \"Fall thru ...\"\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# From WIRESHARK_C_ONLY_FLAGS\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Look for -Wfoo flags above in case it is cached, but\n\n# actually disable the warning here with -Wno-foo.\n",
        "Line" : 56,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "#\n\n# Editor modelines  -  https://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "ui/CMakeLists.txt" : {
      "ObjectId" : "48f08f26b357115df2fbe1fb05726cfb0e175274",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enables visibility in IDEs\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Flex files not included due to use of malloc, free etc.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Flex files not included due to use of malloc, free etc.\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ui/qt/CMakeLists.txt" : {
      "ObjectId" : "2af1eb4cb5c68b450dc40a42ba537ef2a6d0ff2d",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# All .h files which inherit from QObject aka which use the Q_OBJECT macro\n\n# need to go here.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# lupdate -pluralonly\n",
        "Line" : 562,
        "CharPositionInLine" : 17
      },
      "3" : {
        "Text" : "# Drop the file modification time of source files from generated files\n\n# to help with reproducible builds. We do not use QFileInfo.lastModified\n\n# so this has no unwanted side effects. This mtime started appearing in\n\n# Qt 5.8. The option to force the old file format without mtime was\n\n# added in Qt 5.9. See https://bugreports.qt.io/browse/QTBUG-58769\n",
        "Line" : 599,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#Included so that Visual Studio can properly put header files in solution\n",
        "Line" : 641,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# For AUTOUIC and AUTORCC.\n",
        "Line" : 654,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Ensure .qm files are generated before autogenerating i18n.qrc\n",
        "Line" : 678,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 682,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "wiretap/CMakeLists.txt" : {
      "ObjectId" : "b29e85a7d9cee7077bd2bbb3dc22a7c6955925ca",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# All files are warning-clean.  (Let's keep it that way.)\n\n#\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# LEX files commented out due to use of malloc, free etc.\n\n#\t  ${LEX_FILES}\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "writecap/CMakeLists.txt" : {
      "ObjectId" : "11fb7f6442ea654eedb9b099ca3106ea370cbcfc",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "wsutil/CMakeLists.txt" : {
      "ObjectId" : "030dc9e3ce1bd6b515274bbf9ea69a7283727d11",
      "LastModified" : "2019-04-15T20:15:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# XXX - we're assuming MSVC doesn't require a flag to enable SSE 4.2\n\n# support, and that, if the compiler supports a flag for SSE 4.2\n\n# support, the intrinsics are supported iff we can include the\n\n# <nmmintrin.h> flag.\n\n#\n\n# We only check for the GCC-style -msse4.2 flag and the Sun C\n\n# -xarch=sse4_2 flag.\n\n#\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Make sure we have the necessary headers for the SSE4.2 intrinsics\n\n# and that we can use them.\n\n#\n\n# First, check whether we have emmintrin.h and can use it\n\n# *without* the SSE 4.2 flag.\n\n#\n",
        "Line" : 170,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#\n\n# OK, if that works, see whether we have nmmintrin.h and\n\n# can use it *with* the SSE 4.2 flag.\n\n#\n",
        "Line" : 179,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#\n\n# Does this add the SSE4.2 flags to the beginning of\n\n# CFLAGS?\n\n#\n\n# Note that if there's a mix of \"enable SSE 4.2\" and\n\n# \"disable SSE 4.2\" flags, this may not indicate that\n\n# we can use the header.  That's not a bug, that's a\n\n# feature; the other flags may have been forced by\n\n# the build process, e.g. in Gentoo Linux, and we want\n\n# to check this with whatever flags will actually be\n\n# used when building (see bug 10792).\n\n#\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\n\n# We assume that APPLE means macOS so that we have the macOS\n\n# frameworks.\n\n#\n",
        "Line" : 215,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# TODO with CMake 2.8.12, we could use COMPILE_OPTIONS and just append\n\n# instead of this COMPILE_FLAGS duplication...\n",
        "Line" : 228,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#\n\n# Editor modelines  -  http://www.wireshark.org/tools/modelines.html\n\n#\n\n# Local variables:\n\n# c-basic-offset: 8\n\n# tab-width: 8\n\n# indent-tabs-mode: t\n\n# End:\n\n#\n\n# vi: set shiftwidth=8 tabstop=8 noexpandtab:\n\n# :indentSize=8:tabSize=8:noTabs=false:\n\n#\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    }
  },
  "FileTypes" : {
    "CMAKE" : 221
  },
  "ElapsedTime" : 19339
}