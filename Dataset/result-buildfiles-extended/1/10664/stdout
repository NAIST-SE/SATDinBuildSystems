{
  "Repository" : "10664",
  "Revision" : "HEAD",
  "ObjectId" : "116cf642f48187321f08198545b256bec5f0bb8a",
  "CommitTime" : "2018-10-14T03:13:01Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "3bae4e0825bd246f7ded5c1ae5dc24f6d4ddf556",
      "LastModified" : "2018-08-04T21:36:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Top-level cmake file. All settings are inherited by children cmake files.\n\n# Recursively includes all children cmake files using add_subdirectory(...)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_BUILD_TYPE Release)\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "## Compiler flags\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#add_definitions(\"-O1\")\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#add_definitions(-DNDEBUG -g)\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Enable tests\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -s SAFE_HEAP=1\")\n",
        "Line" : 82,
        "CharPositionInLine" : 230
      },
      "CommentCount" : 7
    },
    "dependencies/CMakeLists.txt" : {
      "ObjectId" : "f33e9839a340028c0e3dcf6d2d6ff4ae9c371268",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory( sdl2 )\n\n#add_subdirectory( sdl2-image )\n\n#add_subdirectory( sdl2-mixer )\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dependencies/UnitTest++/CMakeLists.txt" : {
      "ObjectId" : "55a6d90150931cfa6562f9733d6637f542c6fb69",
      "LastModified" : "2013-05-07T21:19:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# get the main sources\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# get platform specific sources\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# create the lib\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "dependencies/backward-cpp/BackwardMacros.cmake" : {
      "ObjectId" : "ec5aac37355f269bb8d979ce3d550e8dfa7d0ec6",
      "LastModified" : "2016-09-13T20:54:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# BackwardMacros.cmake\n\n# Copyright 2013 Google Inc. All Rights Reserved.\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# OPTIONS\n\n###############################################################################\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# CONFIGS\n\n###############################################################################\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# find libdw\n",
        "Line" : 48,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# find libbfd\n",
        "Line" : 57,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "dependencies/backward-cpp/CMakeLists.txt" : {
      "ObjectId" : "02d102786d3f010d19ca3520f4ae5ae9780bcc31",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CMakeLists.txt\n\n# Copyright 2013 Google Inc. All Rights Reserved.\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# COMPILER FLAGS\n\n###############################################################################\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# BACKWARD OBJECT\n\n###############################################################################\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#CHECK_INCLUDE_FILES (bfd.h HAVE_BFD_H)\n\n#if (NOT HAVE_BFD_H) \n\n#    add_definitions(-DBACKWARD_SYSTEM_UNKNOWN=1)\n\n#endif()\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "dependencies/enet/CMakeLists.txt" : {
      "ObjectId" : "ce6dc8ff429b27356af1cde5f3a36b80f2b7bacf",
      "LastModified" : "2017-01-20T04:49:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The \"configure\" step.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dependencies/freetype/CMakeLists.txt" : {
      "ObjectId" : "bf920ecb808ffa19454c7174d88a28b35ae945bb",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Copyright 2013-2017 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# Written originally by John Cary <cary@txcorp.com>\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n\n#\n\n#\n\n# As a preliminary, create a compilation directory and change into it, for\n\n# example\n\n#\n\n#   mkdir ~/freetype2.compiled\n\n#   cd ~/freetype2.compiled\n\n#\n\n# Now you can say\n\n#\n\n#   cmake <path-to-freetype2-src-dir>\n\n#\n\n# to create a Makefile that builds a static version of the library.\n\n#\n\n# For a dynamic library, use\n\n#\n\n#   cmake <path-to-freetype2-src-dir> -D BUILD_SHARED_LIBS:BOOL=true\n\n#\n\n# For a framework on OS X, use\n\n#\n\n#   cmake <path-to-freetype2-src-dir> -D BUILD_FRAMEWORK:BOOL=true -G Xcode\n\n#\n\n# instead.\n\n#\n\n# For an iOS static library, use\n\n#\n\n#   cmake -D IOS_PLATFORM=OS -G Xcode <path-to-freetype2-src-dir>\n\n#\n\n# or\n\n#\n\n#   cmake -D IOS_PLATFORM=SIMULATOR -G Xcode <path-to-freetype2-src-dir>\n\n#\n\n# Please refer to the cmake manual for further options, in particular, how\n\n# to modify compilation and linking parameters.\n\n#\n\n# Some notes.\n\n#\n\n# . `cmake' creates configuration files in\n\n#\n\n#     <build-directory>/include/freetype/config\n\n#\n\n#   which should be further modified if necessary.\n\n#\n\n# . You can use `cmake' directly on a freshly cloned FreeType git\n\n#   repository.\n\n#\n\n# . `CMakeLists.txt' is provided as-is since it is normally not used by the\n\n#   developer team.\n\n#\n\n# . If you want to disable the automatic generation of the distribution\n\n#   targets, add the `-D FREETYPE_NO_DIST=true' command line argument.\n\n#\n\n# . Set the `WITH_ZLIB', `WITH_BZip2', `WITH_PNG', and `WITH_HarfBuzz'\n\n#   CMake variables to `ON' or `OFF' to force or skip using a dependency.\n\n#   Leave a variable undefined (which is the default) to use the dependency\n\n#   only if it is available.  Example:\n\n#\n\n#     cmake ... -DWITH_ZLIB=ON -DWITH_HarfBuzz=OFF ...\n\n#\n\n# . Installation of FreeType can be controlled with the CMake variables\n\n#   `SKIP_INSTALL_HEADERS', `SKIP_INSTALL_LIBRARIES', and `SKIP_INSTALL_ALL'\n\n#   (this is compatible with the same CMake variables in zlib's CMake\n\n#   support).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMAKE_TOOLCHAIN_FILE must be set before `project' is called, which\n\n# configures the base build environment and references the toolchain file\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# iOS only uses static libraries\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Disallow in-source builds\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add local cmake modules\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Compiler definitions for building the library\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find dependencies\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create the configuration file\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create the options file\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Specify library include directories\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# not BZIP2_INCLUDE_DIRS\n",
        "Line" : 383,
        "CharPositionInLine" : 44
      },
      "CommentCount" : 11
    },
    "dependencies/freetype/builds/cmake/FindHarfBuzz.cmake" : {
      "ObjectId" : "f394b82bf975ced36ef8f5c5e9069de54c24f4a7",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012, Intel Corporation\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice, this\n\n#   list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the name of Intel Corporation nor the names of its contributors may\n\n#   be used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Try to find Harfbuzz include and library directories.\n\n#\n\n# After successful discovery, this will set for inclusion where needed:\n\n# HARFBUZZ_INCLUDE_DIRS - containg the HarfBuzz headers\n\n# HARFBUZZ_LIBRARIES - containg the HarfBuzz library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HarfBuzz 0.9.18 split ICU support into a separate harfbuzz-icu library.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/freetype/builds/cmake/iOS.cmake" : {
      "ObjectId" : "5717e6a7b89fc16154ac919fb643ca18a8fd7670",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# iOS.cmake\n\n#\n\n# Copyright 2014-2017 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# Written by David Wimsey <david@wimsey.us>\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n\n#\n\n#\n\n# This file is derived from the files `Platform/Darwin.cmake' and\n\n# `Platform/UnixPaths.cmake', which are part of CMake 2.8.4.  It has been\n\n# altered for iOS development.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options\n\n# -------\n\n#\n\n#   IOS_PLATFORM = OS | SIMULATOR\n\n#\n\n#     This decides whether SDKS are selected from the `iPhoneOS.platform' or\n\n#     `iPhoneSimulator.platform' folders.\n\n#\n\n#     OS - the default, used to build for iPhone and iPad physical devices,\n\n#       which have an ARM architecture.\n\n#     SIMULATOR - used to build for the Simulator platforms, which have an\n\n#       x86 architecture.\n\n#\n\n#   CMAKE_IOS_DEVELOPER_ROOT = /path/to/platform/Developer folder\n\n#\n\n#     By default, this location is automatically chosen based on the\n\n#     IOS_PLATFORM value above.  If you manually set this variable, it\n\n#     overrides the default location and forces the use of a particular\n\n#     Developer Platform.\n\n#\n\n#   CMAKE_IOS_SDK_ROOT = /path/to/platform/Developer/SDKs/SDK folder\n\n#\n\n#     By default, this location is automatically chosen based on the\n\n#     CMAKE_IOS_DEVELOPER_ROOT value.  In this case it is always the most\n\n#     up-to-date SDK found in the CMAKE_IOS_DEVELOPER_ROOT path.  If you\n\n#     manually set this variable, it forces the use of a specific SDK\n\n#     version.\n\n#\n\n#\n\n# Macros\n\n# ------\n\n#\n\n#   set_xcode_property (TARGET XCODE_PROPERTY XCODE_VALUE)\n\n#\n\n#     A convenience macro for setting Xcode specific properties on targets.\n\n#\n\n#     Example:\n\n#\n\n#       set_xcode_property(myioslib IPHONEOS_DEPLOYMENT_TARGET \"3.1\")\n\n#\n\n#   find_host_package (PROGRAM ARGS)\n\n#\n\n#     A macro to find executable programs on the host system, not within the\n\n#     iOS environment.  Thanks to the `android-cmake' project for providing\n\n#     the command.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# standard settings\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# required as of cmake 2.8.10\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# determine the cmake host system version so we know where to find the iOS\n\n# SDKs\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# skip the platform compiler checks for cross compiling\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# all iOS/Darwin specific settings - some may be redundant\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# hidden visibility is required for cxx on iOS\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# hack: If a new cmake (which uses CMAKE_INSTALL_NAME_TOOL) runs on an old\n\n#       build tree (where `install_name_tool' was hardcoded), and where\n\n#       CMAKE_INSTALL_NAME_TOOL isn't in the cache and still cmake didn't\n\n#       fail in `CMakeFindBinUtils.cmake' (because it isn't rerun), hardcode\n\n#       CMAKE_INSTALL_NAME_TOOL here to `install_name_tool' so it behaves as\n\n#       it did before.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# set up iOS platform unless specified manually with IOS_PLATFORM\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# check the platform selection and setup for developer root\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# this causes the installers to properly locate the output libraries\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# this causes the installers to properly locate the output libraries\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# set up iOS developer location unless specified manually with\n\n# CMAKE_IOS_DEVELOPER_ROOT --\n\n# note that Xcode 4.3 changed the installation location; choose the most\n\n# recent one available\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# find and use the most recent iOS SDK unless specified manually with\n\n# CMAKE_IOS_SDK_ROOT\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# set the sysroot default to the most recent SDK\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# set the architecture for iOS --\n\n# note that currently both ARCHS_STANDARD_32_BIT and\n\n# ARCHS_UNIVERSAL_IPHONE_OS set armv7 only, so set both manually\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# set the find root to the iOS developer roots and to user defined paths\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# default to searching for frameworks first\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# set up the default search directories for frameworks\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# only search the iOS SDKs, not the remainder of the host filesystem\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# this little macro lets you set any Xcode specific property\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# this macro lets you find executable programs on the host system\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# eof\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "dependencies/libxmi/CMakeLists.txt" : {
      "ObjectId" : "3b95313528c5af8e4a56fa482b8c17885d8a0bd5",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dependencies/lpeg/CMakeLists.txt" : {
      "ObjectId" : "60da109d985b6f2bef549b7d182377866d03f817",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2011-2012 LuaDist.\n\n# Created by Peter Kapec\n\n# Redistribution and use of this file is allowed according to the terms of the MIT license.\n\n# For details see the COPYRIGHT file distributed with LuaDist.\n\n# Please note that the package source code is licensed under its own license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for tests\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/lpeg/cmake/FindLua.cmake" : {
      "ObjectId" : "7fb7ca3f4f9de67e22efade7d6827f3ecdef6a51",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Lua library\n\n# This module defines\n\n#  LUA_EXECUTABLE, if found\n\n#  LUA_FOUND, if false, do not try to link to Lua \n\n#  LUA_LIBRARIES\n\n#  LUA_INCLUDE_DIR, where to find lua.h\n\n#  LUA_VERSION_STRING, the version of Lua found (since CMake 2.8.8)\n\n#\n\n# Note that the expected include convention is\n\n#  #include \"lua.h\"\n\n# and not\n\n#  #include <lua/lua.h>\n\n# This is because, the lua location is not standardized and may exist\n\n# in locations other than lua/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n# Modified to support Lua 5.2 by LuaDist 2012\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n\n#\n\n# The required version of Lua can be specified using the\n\n# standard syntax, e.g. FIND_PACKAGE(Lua 5.1)\n\n# Otherwise the module will search for any available Lua implementation\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Always search for non-versioned lua first (recommended)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Determine possible naming suffixes (there is no standard for this)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set up possible search names and locations\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find the lua executable\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find the lua header\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Fink\n",
        "Line" : 68,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 69,
        "CharPositionInLine" : 13
      },
      "9" : {
        "Text" : "# Blastwave\n",
        "Line" : 70,
        "CharPositionInLine" : 11
      },
      "10" : {
        "Text" : "# Find the lua library\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# include the math library for Unix\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# For Windows and Mac, don't need to explicitly include the math library\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Determine Lua version\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LUA_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "dependencies/lpeg/cmake/dist.cmake" : {
      "ObjectId" : "30873188a6bd153186aac810a9910d60b21e68e3",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# LuaDist CMake utility library.\n\n# Provides sane project defaults and macros common to LuaDist CMake builds.\n\n# \n\n# Copyright (C) 2007-2012 LuaDist.\n\n# by David Manura, Peter Drahoš\n\n# Redistribution and use of this file is allowed according to the terms of the MIT license.\n\n# For details see the COPYRIGHT file distributed with LuaDist.\n\n# Please note that the package source code is licensed under its own license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Extract information from dist.info\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Reads field `name` from dist.info string `DIST_INFO` into variable `var`.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# message ( \"DIST_NAME: ${DIST_NAME}\")\n\n# message ( \"DIST_VERSION: ${DIST_VERSION}\")\n\n# message ( \"DIST_LICENSE: ${DIST_LICENSE}\")\n\n# message ( \"DIST_AUTHOR: ${DIST_AUTHOR}\")\n\n# message ( \"DIST_MAINTAINER: ${DIST_MAINTAINER}\")\n\n# message ( \"DIST_URL: ${DIST_URL}\")\n\n# message ( \"DIST_DESC: ${DIST_DESC}\")\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# message ( \"DIST_DEPENDS: ${DIST_DEPENDS}\")\n\n## 2DO: Parse DIST_DEPENDS and try to install Dependencies with automatically using externalproject_add\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## INSTALL DEFAULTS (Relative to CMAKE_INSTALL_PREFIX)\n\n# Primary paths\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Secondary paths\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Tweaks and other defaults\n\n# Setting CMAKE to use loose block and search for find modules in source directory\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# In MSVC, prevent warnings that can occur when using standard libraries.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# RPath and relative linking\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## MACROS\n\n# Parser macro\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# install_executable ( executable_targets )\n\n# Installs any executables generated using \"add_executable\".\n\n# USE: install_executable ( lua )\n\n# NOTE: subdirectories are NOT supported\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# install_library ( library_targets )\n\n# Installs any libraries generated using \"add_library\" into apropriate places.\n\n# USE: install_library ( libexpat )\n\n# NOTE: subdirectories are NOT supported\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# helper function for various install_* functions, for PATTERN/REGEX args.\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# install_header ( files/directories [INTO destination] )\n\n# Install a directories or files into header destination.\n\n# USE: install_header ( lua.h luaconf.h ) or install_header ( GL )\n\n# USE: install_header ( mylib.h INTO mylib )\n\n# For directories, supports optional PATTERN/REGEX arguments like install().\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# install_data ( files/directories [INTO destination] )\n\n# This installs additional data files or directories.\n\n# USE: install_data ( extra data.dat )\n\n# USE: install_data ( image1.png image2.png INTO images )\n\n# For directories, supports optional PATTERN/REGEX arguments like install().\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# INSTALL_DOC ( files/directories [INTO destination] )\n\n# This installs documentation content\n\n# USE: install_doc ( doc/ doc.pdf )\n\n# USE: install_doc ( index.html INTO html )\n\n# For directories, supports optional PATTERN/REGEX arguments like install().\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# install_example ( files/directories [INTO destination]  )\n\n# This installs additional examples\n\n# USE: install_example ( examples/ exampleA )\n\n# USE: install_example ( super_example super_data INTO super)\n\n# For directories, supports optional PATTERN/REGEX argument like install().\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# install_test ( files/directories [INTO destination] )\n\n# This installs tests and test files, DOES NOT EXECUTE TESTS\n\n# USE: install_test ( my_test data.sql )\n\n# USE: install_test ( feature_x_test INTO x )\n\n# For directories, supports optional PATTERN/REGEX argument like install().\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# install_foo ( files/directories [INTO destination] )\n\n# This installs optional or otherwise unneeded content\n\n# USE: install_foo ( etc/ example.doc )\n\n# USE: install_foo ( icon.png logo.png INTO icons)\n\n# For directories, supports optional PATTERN/REGEX argument like install().\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## CTest defaults\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## CPack defaults\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "dependencies/lpeg/cmake/lua.cmake" : {
      "ObjectId" : "d3e0793bad4bdcd2bcba3230f59fad7bab293ec5",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# LuaDist CMake utility library for Lua.\n\n# \n\n# Copyright (C) 2007-2012 LuaDist.\n\n# by David Manura, Peter Drahos\n\n# Redistribution and use of this file is allowed according to the terms of the MIT license.\n\n# For details see the COPYRIGHT file distributed with LuaDist.\n\n# Please note that the package source code is licensed under its own license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# List of (Lua module name, file path) pairs.\n\n# Used internally by add_lua_test.  Built by add_lua_module.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# utility function: appends path `path` to path `basepath`, properly\n\n# handling cases when `path` may be relative or absolute.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# install_lua_executable ( target source )\n\n# Automatically generate a binary if srlua package is available\n\n# The application or its source will be placed into /bin \n\n# If the application source did not have .lua suffix then it will be added\n\n# USE: lua_executable ( sputnik src/sputnik.lua )\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find srlua and glue\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Executable output\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Generate binary gluing the lua code to srlua, this is a robuust approach for most systems\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Make sure we have a target associated with the binary\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Install with run permissions\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Also install source as optional resurce\n",
        "Line" : 59,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Install into bin as is but without the lua suffix, we assume the executable uses UNIX shebang/hash-bang magic\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# _target is CMake-compatible target name for module (e.g. socket_core).\n\n# _module is relative path of target (e.g. socket/core),\n\n#   without extension (e.g. .lua/.so/.dll).\n\n# _MODULE_SRC is list of module source files (e.g. .lua and .c files).\n\n# _MODULE_NAMES is list of module names (e.g. socket.core).\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Lua source module\n",
        "Line" : 95,
        "CharPositionInLine" : 31
      },
      "13" : {
        "Text" : "# Lua C binary module\n",
        "Line" : 114,
        "CharPositionInLine" : 11
      },
      "14" : {
        "Text" : "# Jiggling for Lanarts:\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#target_link_libraries ( ${_target} ${LUA_LIBRARY} ${_MODULE_LINK} )\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# add_lua_module\n\n# Builds a Lua source module into a destination locatable by Lua\n\n# require syntax.\n\n# Binary modules are also supported where this function takes sources and\n\n# libraries to compile separated by LINK keyword.\n\n# USE: add_lua_module ( socket.http src/http.lua )\n\n# USE2: add_lua_module ( mime.core src/mime.c )\n\n# USE3: add_lua_module ( socket.core ${SRC_SOCKET} LINK ${LIB_SOCKET} )\n\n# USE4: add_lua_module ( ssl.context ssl.core ALL_IN_ONE src/context.c src/ssl.c )\n\n#   This form builds an \"all-in-one\" module (e.g. ssl.so or ssl.dll containing\n\n#   both modules ssl.context and ssl.core).  The CMake target name will be\n\n#   ssl_all_in_one.\n\n# Also sets variable _module_path (relative path where module typically\n\n# would be installed).\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# install_lua_module\n\n# This is the same as `add_lua_module` but also installs the module.\n\n# USE: install_lua_module ( socket.http src/http.lua )\n\n# USE2: install_lua_module ( mime.core src/mime.c )\n\n# USE3: install_lua_module ( socket.core ${SRC_SOCKET} LINK ${LIB_SOCKET} )\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Builds string representing Lua table mapping Lua modules names to file\n\n# paths.  Used internally.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# avoids cmake complaint\n",
        "Line" : 172,
        "CharPositionInLine" : 25
      },
      "20" : {
        "Text" : "# add_lua_test ( _testfile [ WORKING_DIRECTORY _working_dir ] )\n\n# Runs Lua script `_testfile` under CTest tester.\n\n# Optional named argument `WORKING_DIRECTORY` is current working directory to\n\n# run test under (defaults to ${CMAKE_CURRENT_BINARY_DIR}).\n\n# Both paths, if relative, are relative to ${CMAKE_CURRENT_SOURCE_DIR}.\n\n# Any modules previously defined with install_lua_module are automatically\n\n# preloaded (via package.preload) prior to running the test script.\n\n# Under LuaDist, set test=true in config.lua to enable testing.\n\n# USE: add_lua_test ( test/test1.lua [args...] [WORKING_DIRECTORY dir])\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Write wrapper script.\n\n# Note: One simple way to allow the script to find modules is\n\n# to just put them in package.preload.\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# note: CMake 2.6 (unlike 2.8) lacks WORKING_DIRECTORY parameter.\n",
        "Line" : 232,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# see also http://gdcm.svn.sourceforge.net/viewvc/gdcm/Sandbox/CMakeModules/UsePythonTest.cmake\n\n# Note: ${CMAKE_CFG_INTDIR} is a command-line argument to allow proper\n\n# expansion by the native build tool.\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Converts Lua source file `_source` to binary string embedded in C source\n\n# file `_target`.  Optionally compiles Lua source to byte code (not available\n\n# under LuaJIT2, which doesn't have a bytecode loader).  Additionally, Lua\n\n# versions of bin2c [1] and luac [2] may be passed respectively as additional\n\n# arguments.\n\n#\n\n# [1] http://lua-users.org/wiki/BinToCee\n\n# [2] http://lua-users.org/wiki/LuaCompilerInLua\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "dependencies/lua-box2d/CMakeLists.txt" : {
      "ObjectId" : "846c77c714e47df251cff3e498eb3002310e30eb",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# AD: Hacked for lanarts\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --------------------------------------------------------------\n\n#  Box2D\n\n# --------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/lua-box2d/vendor/Box2D/Box2D/Box2DConfig.cmake" : {
      "ObjectId" : "b567c17d14df997bb1edfe29e50e7a28b998c51a",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dependencies/lua-box2d/vendor/Box2D/Box2D/CMakeLists.txt" : {
      "ObjectId" : "6ebd6d2fcfb604b3993b19aec4fde7739843de67",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# These are used to create visual studio folders.\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dependencies/lua-box2d/vendor/Box2D/CMakeLists.txt" : {
      "ObjectId" : "5e29d901d694aff4368906548e432f337f7660fc",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Box2D library.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HelloWorld console example.\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Testbed and dependencies.\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "dependencies/lua-box2d/vendor/Box2D/HelloWorld/CMakeLists.txt" : {
      "ObjectId" : "c6ae2b2fd45efd3e04f48e0f24b1c9926b6f85aa",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Hello World examples\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dependencies/lua-box2d/vendor/Box2D/Testbed/CMakeLists.txt" : {
      "ObjectId" : "b030a4840ea1f86ddcbceb8e92199c2cece86486",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Some flags for Freeglut and GLUI.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define the framework files.\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#define the test files.\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# These are used to create visual studio folders.\r\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We are not using the Apple's framework version, but X11's\r\n",
        "Line" : 72,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "dependencies/lua-box2d/vendor/Box2D/freeglut/CMakeLists.txt" : {
      "ObjectId" : "8c97446deb60bbb08eb945ad0305b4d498798912",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dependencies/lua-box2d/vendor/Box2D/glui/CMakeLists.txt" : {
      "ObjectId" : "1e502988013506141c9ede56f4bb7e640ea9aa6d",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dependencies/lua-box2d/vendor/Contributions/Platforms/iPhone/CMakeLists.txt" : {
      "ObjectId" : "1ab087d26b5fb7ae663bf5798d8d6336b31254b9",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dependencies/lua-enet/CMakeLists.txt" : {
      "ObjectId" : "c272d22d1952b14e04e94ac8ba995a4bc66265b7",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dependencies/lua-yaml/CMakeLists.txt" : {
      "ObjectId" : "a4efc69f1efaf1f8bef24abc6df8fd1975842fd2",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dependencies/lua/CMakeLists.txt" : {
      "ObjectId" : "8c8b25b758cc69efb4c825b75183a27eecd6e9c5",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dependencies/luafilesystem/CMakeLists.txt" : {
      "ObjectId" : "5e0229475dfb8d2999beada794ee2885a8f758c9",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dependencies/luajit/CMakeLists.txt" : {
      "ObjectId" : "1949d20bf3dabd654a90a2d537c50d2a1ff1f07a",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2013 LuaDist.\n\n# Created by Peter Drahoš\n\n# Redistribution and use of this file is allowed according to the terms of the MIT license.\n\n# For details see the COPYRIGHT file distributed with LuaDist.\n\n# Please note that the package source code is licensed under its own license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# NOTE: This build is currently only supporting x86 targets, for other targets use the original makefile. Please do not submit bugs to the LuaJIT author in case this build fails, instead use http://github.com/LuaDist/luajit\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_definitions(-fno-sanitize=address)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## CONFIGURATION\n\n# Default configuration (we assume POSIX by default)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Version\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Extra flags\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Tunable variables\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## SETUP\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This will set up relative paths to lib\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Direct path to installation\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Windows systems\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Paths (Double escapes needed)\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "## LIBRARY DETECTION\n\n# Optional libraries\n\n#find_package ( Readline )\n\n#if ( READLINE_FOUND )\n\n#  option ( LUA_USE_READLINE \"Use readline in the Lua CLI.\" ON )\n\n#endif ()\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#find_package ( Curses )\n\n#if ( CURSES_FOUND )\n\n#  option ( LUA_USE_CURSES \"Use curses in the Lua CLI.\" ON )\n\n#endif ()\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Setup needed variables and libraries\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# On POSIX Lua links to standard math library \"m\"\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Link to dynamic linker library \"dl\"\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Add readline\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Add curses\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "## SOURCES\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## GENERATE VM\n\n# Build minilua\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Dynasm\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# 2DO: Proper detection of flags\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Raspberry PI, ARM\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Windows is ... special\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# 32bit vs 64bit\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Generate buildvm arch header\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Buildvm\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## LuaJIT Library\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## LuaJIT Executable\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "dependencies/luajit/cmake/FindLua.cmake" : {
      "ObjectId" : "7fb7ca3f4f9de67e22efade7d6827f3ecdef6a51",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Lua library\n\n# This module defines\n\n#  LUA_EXECUTABLE, if found\n\n#  LUA_FOUND, if false, do not try to link to Lua \n\n#  LUA_LIBRARIES\n\n#  LUA_INCLUDE_DIR, where to find lua.h\n\n#  LUA_VERSION_STRING, the version of Lua found (since CMake 2.8.8)\n\n#\n\n# Note that the expected include convention is\n\n#  #include \"lua.h\"\n\n# and not\n\n#  #include <lua/lua.h>\n\n# This is because, the lua location is not standardized and may exist\n\n# in locations other than lua/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n# Modified to support Lua 5.2 by LuaDist 2012\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n\n#\n\n# The required version of Lua can be specified using the\n\n# standard syntax, e.g. FIND_PACKAGE(Lua 5.1)\n\n# Otherwise the module will search for any available Lua implementation\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Always search for non-versioned lua first (recommended)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Determine possible naming suffixes (there is no standard for this)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set up possible search names and locations\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find the lua executable\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find the lua header\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Fink\n",
        "Line" : 68,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 69,
        "CharPositionInLine" : 13
      },
      "9" : {
        "Text" : "# Blastwave\n",
        "Line" : 70,
        "CharPositionInLine" : 11
      },
      "10" : {
        "Text" : "# Find the lua library\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# include the math library for Unix\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# For Windows and Mac, don't need to explicitly include the math library\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Determine Lua version\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LUA_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "dependencies/luajit/cmake/FindReadline.cmake" : {
      "ObjectId" : "5401a9b4273fa11de9abcf5c94b3e78f2a73c303",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Readline\n\n# Once done this will define\n\n#  READLINE_FOUND - System has readline\n\n#  READLINE_INCLUDE_DIRS - The readline include directories\n\n#  READLINE_LIBRARIES - The libraries needed to use readline\n\n#  READLINE_DEFINITIONS - Compiler switches required for using readline\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set READLINE_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/luajit/cmake/dist.cmake" : {
      "ObjectId" : "50df7ca222c83a688e4d8927a408f7e5b9863fcd",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# LuaDist CMake utility library.\n\n# Provides sane project defaults and macros common to LuaDist CMake builds.\n\n# \n\n# Copyright (C) 2007-2012 LuaDist.\n\n# by David Manura, Peter Drahoš\n\n# Redistribution and use of this file is allowed according to the terms of the MIT license.\n\n# For details see the COPYRIGHT file distributed with LuaDist.\n\n# Please note that the package source code is licensed under its own license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Extract information from dist.info\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Reads field `name` from dist.info string `DIST_INFO` into variable `var`.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#message ( \"DIST_NAME: ${DIST_NAME}\")\n\n#message ( \"DIST_VERSION: ${DIST_VERSION}\")\n\n#message ( \"DIST_LICENSE: ${DIST_LICENSE}\")\n\n#message ( \"DIST_AUTHOR: ${DIST_AUTHOR}\")\n\n#message ( \"DIST_MAINTAINER: ${DIST_MAINTAINER}\")\n\n#message ( \"DIST_URL: ${DIST_URL}\")\n\n#message ( \"DIST_DESC: ${DIST_DESC}\")\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## 2DO: Parse DIST_DEPENDS and try to install Dependencies with automatically using externalproject_add\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## INSTALL DEFAULTS (Relative to CMAKE_INSTALL_PREFIX)\n\n# Primary paths\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Secondary paths\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Tweaks and other defaults\n\n# Setting CMAKE to use loose block and search for find modules in source directory\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# In MSVC, prevent warnings that can occur when using standard libraries.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# RPath and relative linking\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## MACROS\n\n# Parser macro\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# install_executable ( executable_targets )\n\n# Installs any executables generated using \"add_executable\".\n\n# USE: install_executable ( lua )\n\n# NOTE: subdirectories are NOT supported\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# install_library ( library_targets )\n\n# Installs any libraries generated using \"add_library\" into apropriate places.\n\n# USE: install_library ( libexpat )\n\n# NOTE: subdirectories are NOT supported\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# helper function for various install_* functions, for PATTERN/REGEX args.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# install_header ( files/directories [INTO destination] )\n\n# Install a directories or files into header destination.\n\n# USE: install_header ( lua.h luaconf.h ) or install_header ( GL )\n\n# USE: install_header ( mylib.h INTO mylib )\n\n# For directories, supports optional PATTERN/REGEX arguments like install().\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# install_data ( files/directories [INTO destination] )\n\n# This installs additional data files or directories.\n\n# USE: install_data ( extra data.dat )\n\n# USE: install_data ( image1.png image2.png INTO images )\n\n# For directories, supports optional PATTERN/REGEX arguments like install().\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# INSTALL_DOC ( files/directories [INTO destination] )\n\n# This installs documentation content\n\n# USE: install_doc ( doc/ doc.pdf )\n\n# USE: install_doc ( index.html INTO html )\n\n# For directories, supports optional PATTERN/REGEX arguments like install().\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# install_example ( files/directories [INTO destination]  )\n\n# This installs additional examples\n\n# USE: install_example ( examples/ exampleA )\n\n# USE: install_example ( super_example super_data INTO super)\n\n# For directories, supports optional PATTERN/REGEX argument like install().\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# install_test ( files/directories [INTO destination] )\n\n# This installs tests and test files, DOES NOT EXECUTE TESTS\n\n# USE: install_test ( my_test data.sql )\n\n# USE: install_test ( feature_x_test INTO x )\n\n# For directories, supports optional PATTERN/REGEX argument like install().\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# install_foo ( files/directories [INTO destination] )\n\n# This installs optional or otherwise unneeded content\n\n# USE: install_foo ( etc/ example.doc )\n\n# USE: install_foo ( icon.png logo.png INTO icons)\n\n# For directories, supports optional PATTERN/REGEX argument like install().\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## CTest defaults\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## CPack defaults\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "dependencies/luajit/cmake/lua.cmake" : {
      "ObjectId" : "5a884d1e4d26e0e12d9edb94d9de80f748b8ee89",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# LuaDist CMake utility library for Lua.\n\n# \n\n# Copyright (C) 2007-2012 LuaDist.\n\n# by David Manura, Peter Drahos\n\n# Redistribution and use of this file is allowed according to the terms of the MIT license.\n\n# For details see the COPYRIGHT file distributed with LuaDist.\n\n# Please note that the package source code is licensed under its own license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# List of (Lua module name, file path) pairs.\n\n# Used internally by add_lua_test.  Built by add_lua_module.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# utility function: appends path `path` to path `basepath`, properly\n\n# handling cases when `path` may be relative or absolute.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# install_lua_executable ( target source )\n\n# Automatically generate a binary if srlua package is available\n\n# The application or its source will be placed into /bin \n\n# If the application source did have .lua suffix then it will be removed\n\n# USE: lua_executable ( sputnik src/sputnik.lua )\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find srlua and glue\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Executable output\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Generate binary gluing the lua code to srlua, this is a robuust approach for most systems\n\n# Recommended, expecially for Windows systems\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Make sure we have a target associated with the binary\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Install with run permissions\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Also install the source as optional component\n",
        "Line" : 59,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# Install into bin as is, we assume the executable uses UNIX shebang\n\n# NOTE: This approach is unsuitable for non UNIX systems\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# _target is CMake-compatible target name for module (e.g. socket_core).\n\n# _module is relative path of target (e.g. socket/core),\n\n#   without extension (e.g. .lua/.so/.dll).\n\n# _MODULE_SRC is list of module source files (e.g. .lua and .c files).\n\n# _MODULE_NAMES is list of module names (e.g. socket.core).\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Lua source module\n",
        "Line" : 99,
        "CharPositionInLine" : 31
      },
      "13" : {
        "Text" : "# Lua C binary module\n",
        "Line" : 118,
        "CharPositionInLine" : 11
      },
      "14" : {
        "Text" : "# add_lua_module\n\n# Builds a Lua source module into a destination locatable by Lua\n\n# require syntax.\n\n# Binary modules are also supported where this function takes sources and\n\n# libraries to compile separated by LINK keyword.\n\n# USE: add_lua_module ( socket.http src/http.lua )\n\n# USE2: add_lua_module ( mime.core src/mime.c )\n\n# USE3: add_lua_module ( socket.core ${SRC_SOCKET} LINK ${LIB_SOCKET} )\n\n# USE4: add_lua_module ( ssl.context ssl.core ALL_IN_ONE src/context.c src/ssl.c )\n\n#   This form builds an \"all-in-one\" module (e.g. ssl.so or ssl.dll containing\n\n#   both modules ssl.context and ssl.core).  The CMake target name will be\n\n#   ssl_all_in_one.\n\n# Also sets variable _module_path (relative path where module typically\n\n# would be installed).\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# install_lua_module\n\n# This is the same as `add_lua_module` but also installs the module.\n\n# USE: install_lua_module ( socket.http src/http.lua )\n\n# USE2: install_lua_module ( mime.core src/mime.c )\n\n# USE3: install_lua_module ( socket.core ${SRC_SOCKET} LINK ${LIB_SOCKET} )\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Builds string representing Lua table mapping Lua modules names to file\n\n# paths.  Used internally.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# avoids cmake complaint\n",
        "Line" : 175,
        "CharPositionInLine" : 25
      },
      "18" : {
        "Text" : "# add_lua_test ( _testfile [ WORKING_DIRECTORY _working_dir ] )\n\n# Runs Lua script `_testfile` under CTest tester.\n\n# Optional named argument `WORKING_DIRECTORY` is current working directory to\n\n# run test under (defaults to ${CMAKE_CURRENT_BINARY_DIR}).\n\n# Both paths, if relative, are relative to ${CMAKE_CURRENT_SOURCE_DIR}.\n\n# Any modules previously defined with install_lua_module are automatically\n\n# preloaded (via package.preload) prior to running the test script.\n\n# Under LuaDist, set test=true in config.lua to enable testing.\n\n# USE: add_lua_test ( test/test1.lua [args...] [WORKING_DIRECTORY dir])\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Write wrapper script.\n\n# Note: One simple way to allow the script to find modules is\n\n# to just put them in package.preload.\n",
        "Line" : 206,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# note: CMake 2.6 (unlike 2.8) lacks WORKING_DIRECTORY parameter.\n",
        "Line" : 235,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# see also http://gdcm.svn.sourceforge.net/viewvc/gdcm/Sandbox/CMakeModules/UsePythonTest.cmake\n\n# Note: ${CMAKE_CFG_INTDIR} is a command-line argument to allow proper\n\n# expansion by the native build tool.\n",
        "Line" : 243,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Converts Lua source file `_source` to binary string embedded in C source\n\n# file `_target`.  Optionally compiles Lua source to byte code (not available\n\n# under LuaJIT2, which doesn't have a bytecode loader).  Additionally, Lua\n\n# versions of bin2c [1] and luac [2] may be passed respectively as additional\n\n# arguments.\n\n#\n\n# [1] http://lua-users.org/wiki/BinToCee\n\n# [2] http://lua-users.org/wiki/LuaCompilerInLua\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "dependencies/luasocket/CMakeLists.txt" : {
      "ObjectId" : "66577afc3fb1f3194e79ce7100fbe8d5b38f5eac",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dependencies/minilzo/CMakeLists.txt" : {
      "ObjectId" : "b6e4a4280e44b8ae4cd9e7ba80c9645f43fda71b",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dependencies/physfs/CMakeLists.txt" : {
      "ObjectId" : "6b263aa976e9cdf55514f7476fc802c4b7cfbec5",
      "LastModified" : "2018-03-11T05:13:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PhysicsFS; a portable, flexible file i/o abstraction.\n\n#\n\n# Please see the file LICENSE.txt in the source's root directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Increment this if/when we break backwards compatibility.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# I hate that they define \"WIN32\" ... we're about to move to Win64...I hope!\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Bleh, let's do it for \"APPLE\" too.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# For now, Haiku and BeOS are the same, as far as the build system cares.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Fallback to older OS X on PowerPC to support wider range of systems...\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Need these everywhere...\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Add some gcc-specific command lines.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Stupid BeOS generates warnings in the system headers.\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Not supported on several operating systems at this time.\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# VS.NET 8.0 got really really anal about strcpy, etc, which even if we\n\n#  cleaned up our code, zlib, etc still use...so disable the warning.\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Basic chunks of source code ...\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We add this explicitly, since we don't want CMake to think this\n\n#  is a C++ project unless we're on BeOS.\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Almost everything is \"compiled\" here, but things that don't apply to the\n\n#  build are #ifdef'd out. This is to make it easy to embed PhysicsFS into\n\n#  another project or bring up a new build system: just compile all the source\n\n#  code and #define the things you want.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# platform layers ...\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# !!! FIXME: Solaris fails this, because mnttab.h implicitly\n\n# !!! FIXME:  depends on other system headers.  :(\n\n#check_include_file(sys/mnttab.h HAVE_SYS_MNTTAB_H)\n",
        "Line" : 143,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Archivers ...\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#message(STATUS \"PhysicsFS will build with the following options:\")\n\n#message_bool_option(\"ZIP support\" PHYSFS_ARCHIVE_ZIP)\n\n#message_bool_option(\"7zip support\" PHYSFS_ARCHIVE_7Z)\n\n#message_bool_option(\"GRP support\" PHYSFS_ARCHIVE_GRP)\n\n#message_bool_option(\"WAD support\" PHYSFS_ARCHIVE_WAD)\n\n#message_bool_option(\"HOG support\" PHYSFS_ARCHIVE_HOG)\n\n#message_bool_option(\"MVL support\" PHYSFS_ARCHIVE_MVL)\n\n#message_bool_option(\"QPAK support\" PHYSFS_ARCHIVE_QPAK)\n\n#message_bool_option(\"SLB support\" PHYSFS_ARCHIVE_SLB)\n\n#message_bool_option(\"CD-ROM drive support\" PHYSFS_HAVE_CDROM_SUPPORT)\n\n#message_bool_option(\"Thread safety\" PHYSFS_HAVE_THREAD_SUPPORT)\n\n#message_bool_option(\"Build static library\" PHYSFS_BUILD_STATIC)\n\n#message_bool_option(\"Build shared library\" PHYSFS_BUILD_SHARED)\n\n#message_bool_option(\"Build stdio test program\" PHYSFS_BUILD_TEST)\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# end of CMakeLists.txt ...\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "dependencies/polypartition/CMakeLists.txt" : {
      "ObjectId" : "e792cb0cbea57cb77694b025c20bce344d9c8cac",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dependencies/rvo2/CMakeLists.txt" : {
      "ObjectId" : "26d832d15732ba73a95e9bf3a1f983fbc11fdd46",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dependencies/sdl2-image/CMakeLists.txt" : {
      "ObjectId" : "4ff2ce8d3d971e9edaea1c3cec3ed0b84641c3e9",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dependencies/sdl2-image/Makefile.am" : {
      "ObjectId" : "d4b6e6cce3d5d6fde340ab9b37904b502a8fe223",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am for the SDL sample image loading library and viewer\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Rule to build tar-gzipped distribution package\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Rule to build RPM distribution package\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "dependencies/sdl2-image/external/jpeg-9/Makefile.am" : {
      "ObjectId" : "86895a1e9e0e9c8c8bedf557ce532c8d30ed7e01",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n\n#\n\n#  Automake Makefile for the JPEG library\n\n#\n\n#  This file is written by Bob Friesenhahn, Guido Vollbeding\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sources to build library\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# System dependent sources\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Headers which are installed to support the library\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Headers which are not installed\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Manual pages (Automake uses 'MANS' for itself)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other documentation files\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Makefiles for various systems\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Configuration files\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Support scripts for configure\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Miscellaneous support files\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Test support files\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# libtool libraries to build\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Library sources for libjpeg.la\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# LDFLAGS for libjpeg.la\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Executables to build\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Executable sources & libs\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Manual pages to install\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Headers to install\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Other distributed headers\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Other distributed files\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Files to be cleaned\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Install jconfig.h\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Uninstall jconfig.h\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Run tests\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "dependencies/sdl2-image/external/libpng-1.6.2/CMakeLists.txt" : {
      "ObjectId" : "4104359123abd03630cc04cae2d30e84aa39af33",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 2007-2011 Glenn Randers-Pehrson\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This code is released under the libpng license.\n\n# For conditions of distribution and use, see the disclaimer\n\n# and license in png.h\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# workaround CMake 2.4.x bug\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# needed packages\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# not needed on windows\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# COMMAND LINE OPTIONS\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Many more configuration options could be added here\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# SET LIBNAME\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# to distinguish between debug and release lib\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Use the prebuilt pnglibconf.h file from the scripts folder\n\n# TODO: fix this by building with awk; without this no cmake build can be\n\n# configured directly (to do so indirectly use your local awk to build a\n\n# pnglibconf.h in the build directory.)\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# OUR SOURCES\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# SOME NEEDED DEFINITIONS\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# NOW BUILD OUR TARGET\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# does not work without changing name\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# does not work with msvc due to png_lib_ver issue\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Ensure the CMAKE_LIBRARY_OUTPUT_DIRECTORY is set\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Set a variable with CMake code which:\n\n# Creates a symlink from src to dest (if possible) or alternatively\n\n# copies if different.\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# libpng is a library so default to 'lib'\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# CREATE PKGCONFIG FILES\n\n# we use the same files like ./configure, so we have to set its vars\n\n# Only do this on Windows for Cygwin - the files don't make much sense outside\n\n# a UNIX look alike\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# SET UP LINKS\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#   VERSION 16.${PNGLIB_RELEASE}.1.6.2\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# MSVC doesn't use a different file extension for shared vs. static\n\n# libs.  We are able to change OUTPUT_NAME to remove the _static\n\n# for all other platforms.\n",
        "Line" : 280,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# If CMake > 2.4.x, we set a variable used below to export\n\n# targets to an export file.\n\n# TODO: Use VERSION_GREATER after our cmake_minimum_required >= 2.6.2\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# future proof\n",
        "Line" : 295,
        "CharPositionInLine" : 38
      },
      "28" : {
        "Text" : "# INSTALL\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Create a symlink for libpng.dll.a => libpng16.dll.a on Cygwin\n",
        "Line" : 308,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Install man pages\n",
        "Line" : 347,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Install pkg-config files\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# On versions of CMake that support it, create an export file CMake\n\n# users can include() to import our targets\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# what's with libpng-$VER%.txt and all the extra files?\n",
        "Line" : 372,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# UNINSTALL\n\n# do we need this?\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# DIST\n\n# do we need this?\n",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# to create msvc import lib for mingw compiled shared lib\n\n# pexports libpng.dll > libpng.def\n\n# lib /def:libpng.def /machine:x86\n",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37
    },
    "dependencies/sdl2-image/external/libpng-1.6.2/Makefile.am" : {
      "ObjectId" : "a2cd2c10bb33a7c100dbe69f28235512798c8723",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am:\n\n#   Source file for Makefile.in (and hence Makefile)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# test programs - run on make check, make distcheck\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generally these are single line shell scripts to run a test with a particular\n\n# set of parameters:\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# These tests are expected, and required, to fail:\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# man pages\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# generate the -config scripts if required\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# rules to build libpng, only build the old library on request\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# EXTRA_LTLIBRARIES= libpng.la\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#   Versioned symbols and restricted exports\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#   Only restricted exports when possible\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#distribute headers in /usr/include/libpng/*\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# pkg-config stuff, note that libpng.pc is always required in order\n\n# to get the correct library\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Extra source distribution files, '${srcdir}' is used below to stop build files\n\n# from those directories being included.  This only works if the configure is\n\n# not done in the source directory!\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# PNG_COPTS give extra options for the C compiler to be used on all compilation\n\n# steps (unless targe_CFLAGS is specified; that will take precedence over\n\n# AM_CFLAGS)\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# DFNCPP is normally just CPP - the C preprocessor - but on Solaris and maybe\n\n# other operating systems (NeXT?) the C preprocessor selected by configure\n\n# checks input tokens for validity - effectively it performs part of the ANSI-C\n\n# parsing - and therefore fails with the .df files.  configure.ac has special\n\n# checks for this and sets DFNCPP appropriately.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Rename functions in scripts/prefix.out with a PNG_PREFIX prefix.\n\n# Rename macros in scripts/macro.lst from PNG_PREFIXpng_ to PNG_ (the actual\n\n# implementation of the macro).\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# is empty\n",
        "Line" : 176,
        "CharPositionInLine" : 13
      },
      "17" : {
        "Text" : "# The following is necessary to ensure that the local pnglibconf.h is used, not\n\n# an installed one (this can happen immediately after on a clean system if\n\n# 'make test' is the first thing the user does.)\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# We must use -DPNG_NO_USE_READ_MACROS here even when the library may actually\n\n# be built with PNG_USE_READ_MACROS; this prevents the read macros from\n\n# interfering with the symbol file format.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# The .dfn file for pnglibconf.h is machine generated\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Symbol checks (.def and .out files should match)\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# used on demand to regenerate the standard header, CPPFLAGS should\n\n# be empty - no non-standard defines\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Extra checks\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Don't distribute the generated script files\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# install the .../include headers as links to the new ones\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# do evil things to libpng to cause libpng@PNGLIB_MAJOR@@PNGLIB_MINOR@ to be used\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "dependencies/sdl2-image/external/libwebp-0.3.0/Makefile.am" : {
      "ObjectId" : "ceee75d46cc11b23e6e292b0a1f936c3e085a5a4",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "dependencies/sdl2-image/external/libwebp-0.3.0/examples/Makefile.am" : {
      "ObjectId" : "20e925a11bb8805b902badc873e421f74b4bb04c",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "dependencies/sdl2-image/external/libwebp-0.3.0/man/Makefile.am" : {
      "ObjectId" : "4c5876f38b8b62021d527b748f5d6d4792f83c45",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "dependencies/sdl2-image/external/libwebp-0.3.0/src/Makefile.am" : {
      "ObjectId" : "db289da6de3ac240e6771cdcd8e44780e63506b4",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# The mux and demux libraries depend on libwebp, thus the '.' to force the\n\n# build order so it's available to them.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use '-no-undefined' to declare that libwebp does not depend on any libraries\n\n# other than the ones listed on the command line, i.e., after linking, it will\n\n# not have unresolved symbols. Some platforms (Windows among them) require all\n\n# symbols in shared libraries to be resolved at library creation.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-image/external/libwebp-0.3.0/src/dec/Makefile.am" : {
      "ObjectId" : "06142063f512cc0f3e52e3140eaf94f04d51b43f",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "dependencies/sdl2-image/external/libwebp-0.3.0/src/demux/Makefile.am" : {
      "ObjectId" : "d1f126e51dd7c0e0c7b928d58eeb25509e73cd2b",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "dependencies/sdl2-image/external/libwebp-0.3.0/src/dsp/Makefile.am" : {
      "ObjectId" : "42e99bf4666add7049f7b1998313c5b665d9427f",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "dependencies/sdl2-image/external/libwebp-0.3.0/src/enc/Makefile.am" : {
      "ObjectId" : "0f6c96e0cf13bdf4b1ab4b98920d738809a2ef99",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "dependencies/sdl2-image/external/libwebp-0.3.0/src/mux/Makefile.am" : {
      "ObjectId" : "19b033d30d29de89a6c2a88074d4f9ec8b063cab",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "dependencies/sdl2-image/external/libwebp-0.3.0/src/utils/Makefile.am" : {
      "ObjectId" : "5fb35a24aea26e3390e6e104595e86b4aaaa99bf",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "dependencies/sdl2-image/external/tiff-4.0.3/Makefile.am" : {
      "ObjectId" : "996297e921cb4dca88518300117e4d3542c47ffb",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Tag Image File Format (TIFF) Software\n\n#\n\n# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and \n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n\n# \n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process this file with automake to produce Makefile.in.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-image/external/tiff-4.0.3/contrib/Makefile.am" : {
      "ObjectId" : "b231ef91e37da76da10943322db484992bf24677",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Tag Image File Format (TIFF) Software\n\n#\n\n# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and \n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n\n# \n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process this file with automake to produce Makefile.in.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-image/external/tiff-4.0.3/contrib/addtiffo/Makefile.am" : {
      "ObjectId" : "d634a152d3d1d56638a31211c81bbe963149f522",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Tag Image File Format (TIFF) Software\n\n#\n\n# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and \n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n\n# \n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process this file with automake to produce Makefile.in.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-image/external/tiff-4.0.3/contrib/dbs/Makefile.am" : {
      "ObjectId" : "07873779135143e73c13d25cc9d6fc049a86e6e5",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Tag Image File Format (TIFF) Software\n\n#\n\n# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and \n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n\n# \n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process this file with automake to produce Makefile.in.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-image/external/tiff-4.0.3/contrib/dbs/xtiff/Makefile.am" : {
      "ObjectId" : "749f5ceb6894564230ad8f9b464814a8f07df603",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# Tag Image File Format (TIFF) Software\n\n#\n\n# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and \n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n\n# \n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process this file with automake to produce Makefile.in.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#LIBTIFF = $(top_builddir)/libtiff/libtiff.la\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#noinst_PROGRAMS =\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#if HAVE_XAW\n\n#noinst_PROGRAMS += xtiff\n\n#endif\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#xtiff_SOURCES = patchlevel.h xtiff.c xtifficon.h\n\n#xtiff_CFLAGS = $(CFLAGS) $(XAW_CFLAGS) $(AM_CFLAGS)\n\n#xtiff_LDADD = $(LIBTIFF) $(X_LIBS) $(XAW_LIBS)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#INCLUDES = -I$(top_srcdir)/libtiff\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "dependencies/sdl2-image/external/tiff-4.0.3/contrib/iptcutil/Makefile.am" : {
      "ObjectId" : "9caedf14727fab3876acdf7cf82e75211add1ed9",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Tag Image File Format (TIFF) Software\n\n#\n\n# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and \n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n\n# \n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process this file with automake to produce Makefile.in.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-image/external/tiff-4.0.3/contrib/mfs/Makefile.am" : {
      "ObjectId" : "fb8a07e23b2537a806369c62b74579083669762d",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Tag Image File Format (TIFF) Software\n\n#\n\n# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and \n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n\n# \n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process this file with automake to produce Makefile.in.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-image/external/tiff-4.0.3/contrib/pds/Makefile.am" : {
      "ObjectId" : "b3c145d5377ef2689d2aab2a96987b65ae39a355",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Tag Image File Format (TIFF) Software\n\n#\n\n# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and \n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n\n# \n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process this file with automake to produce Makefile.in.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-image/external/tiff-4.0.3/contrib/ras/Makefile.am" : {
      "ObjectId" : "9480944741fdfdd1a557721d01a3ab5d084ddcbe",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Tag Image File Format (TIFF) Software\n\n#\n\n# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and \n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n\n# \n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process this file with automake to produce Makefile.in.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-image/external/tiff-4.0.3/contrib/stream/Makefile.am" : {
      "ObjectId" : "1e7a8daba3897d35a068061d0704f980e8b88c0d",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Tag Image File Format (TIFF) Software\n\n#\n\n# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and \n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n\n# \n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process this file with automake to produce Makefile.in.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-image/external/tiff-4.0.3/contrib/tags/Makefile.am" : {
      "ObjectId" : "9d92444f2b21ca77f9ff9c6e7103f819a28eb197",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Tag Image File Format (TIFF) Software\n\n#\n\n# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and \n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n\n# \n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process this file with automake to produce Makefile.in.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-image/external/tiff-4.0.3/contrib/win_dib/Makefile.am" : {
      "ObjectId" : "2bdccd0f6a452a509cb5e2076024daa6e9b85ee2",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Tag Image File Format (TIFF) Software\n\n#\n\n# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and \n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n\n# \n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process this file with automake to produce Makefile.in.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-image/external/tiff-4.0.3/html/Makefile.am" : {
      "ObjectId" : "8cb6706cb592dce43d8195be4e589534d77bfcf4",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# Tag Image File Format (TIFF) Software\n\n#\n\n# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and \n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n\n# \n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process this file with automake to produce Makefile.in.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-image/external/tiff-4.0.3/html/images/Makefile.am" : {
      "ObjectId" : "840e1495ab72233f52ac6dc0457a58162dc9664f",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Tag Image File Format (TIFF) Software\n\n#\n\n# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and \n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n\n# \n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process this file with automake to produce Makefile.in.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-image/external/tiff-4.0.3/html/man/Makefile.am" : {
      "ObjectId" : "ca222deabb2c0c34cd118be8207b32cf29a94f28",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Tag Image File Format (TIFF) Software\n\n#\n\n# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and \n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n\n# \n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process this file with automake to produce Makefile.in.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-image/external/tiff-4.0.3/libtiff/Makefile.am" : {
      "ObjectId" : "82fa31dc8fcd661fd6870f0a99683ffbb7d790b5",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Tag Image File Format (TIFF) Software\n\n#\n\n# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and \n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n\n# \n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process this file with automake to produce Makefile.in.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# The finite state machine tables used by the G3/G4 decoders\n\n# are generated by the mkg3states program.  On systems without\n\n# make these rules have to be manually carried out.\n\n#\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "dependencies/sdl2-image/external/tiff-4.0.3/man/Makefile.am" : {
      "ObjectId" : "bcad9ba70596e3cc510255b43007f650655a05dd",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Tag Image File Format (TIFF) Software\n\n#\n\n# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and \n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n\n# \n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process this file with automake to produce Makefile.in.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-image/external/tiff-4.0.3/port/Makefile.am" : {
      "ObjectId" : "94504fd809ac2d5eecc6502cec051b1e8082d0b0",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Tag Image File Format (TIFF) Software\n\n#\n\n# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and \n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n\n# \n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process this file with automake to produce Makefile.in.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-image/external/tiff-4.0.3/test/Makefile.am" : {
      "ObjectId" : "4e115c95e1044e333b09cf1c223e6e174b5e0262",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Tag Image File Format (TIFF) Software\n\n#\n\n# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and \n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n\n# \n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process this file with automake to produce Makefile.in.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Environment parameters to be used during tests\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# All of the tests to execute via 'make check'\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tests which are expected to fail\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Extra files which should be cleaned by 'make clean'\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Executable programs which need to be built in order to support tests\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Test scripts to execute\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This list should contain all of the TIFF files in the 'images'\n\n# subdirectory which are intended to be used as input images for\n\n# tests.  All of these files should use the extension \".tiff\".\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This list should include all of the files in the 'images'\n\n# subdirectory which are intended to be distributed.  This may include\n\n# files which are not currently used by the tests.\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# memcheck: valgrind's memory access checker\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Test rotations\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Test flip (mirror)\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Test extracting a section 100 pixels wide and 100 pixels high\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Test extracting the first and fourth quarters from the left side.\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "dependencies/sdl2-image/external/tiff-4.0.3/tools/Makefile.am" : {
      "ObjectId" : "6497f2dca1d5d04f6d1205933acf4e5ebca2fbb2",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Tag Image File Format (TIFF) Software\n\n#\n\n# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and \n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n\n# \n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process this file with automake to produce Makefile.in.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-image/external/zlib-1.2.8/CMakeLists.txt" : {
      "ObjectId" : "0c0247cc516b4493bb9a9b66f743a6110139a2b5",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 47,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 128,
        "CharPositionInLine" : 23
      },
      "8" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n\n#\n\n# This has no effect with MSVC, on that platform the version info for\n\n# the DLL comes from the resource file win32/zlib1.rc\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Creates zlib1.dll when building shared library version\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#============================================================================\n\n# Example binaries\n\n#============================================================================\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "dependencies/sdl2-image/external/zlib-1.2.8/contrib/minizip/Makefile.am" : {
      "ObjectId" : "d343011ebc3b3fd78d2bc3a29801a083c038cf0c",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "dependencies/sdl2-mixer/CMakeLists.txt" : {
      "ObjectId" : "044d78b1905d8306923b7eda60bd3869d5104d38",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if (NOT TARGET OGG)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#endif()\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-mixer/cmake/AC_HEADER_STDC.cmake" : {
      "ObjectId" : "fb443209c13287a896b581ccdf138287a5dcf60b",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dependencies/sdl2-mixer/cmake/CheckDIRSymbolExists.cmake" : {
      "ObjectId" : "dde6c7f3af88eccf04a8974f9ceb469e124d2414",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2002 Kitware, Inc., Insight Consortium\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n# \n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n# \n\n#  * The names of Kitware, Inc., the Insight Consortium, or the names of\n\n#    any consortium members, or of any contributors, may not be used to\n\n#    endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Check if the DIR symbol exists like in AC_HEADER_DIRENT.\n\n# CHECK_DIRSYMBOL_EXISTS(FILES VARIABLE)\n\n#\n\n#  FILES    - include files to check\n\n#  VARIABLE - variable to return result\n\n#\n\n# This module is a small but important variation on CheckSymbolExists.cmake.\n\n# The symbol always searched for is DIR, and the test programme follows\n\n# the AC_HEADER_DIRENT test programme rather than the CheckSymbolExists.cmake\n\n# test programme which always fails since DIR tends to be typedef'd\n\n# rather than #define'd.\n\n# \n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#  CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-mixer/cmake/CheckPrototypeExists.cmake" : {
      "ObjectId" : "85a171758bcfc028236bd13a1ce8362a55218db7",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n# \n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n# \n\n#  * The names of Kitware, Inc., the Insight Consortium, or the names of\n\n#    any consortium members, or of any contributors, may not be used to\n\n#    endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# AWI, downloaded from KDE repository since has not yet been transferred\n\n# to cmake repository as of 2006-07-31.\n\n# http://websvn.kde.org/trunk/KDE/kdelibs/cmake/modules/CheckPrototypeExists.cmake?rev=505849&view=markup\n\n#\n\n# - Check if the prototype for a function exists.\n\n# CHECK_PROTOTYPE_EXISTS (FUNCTION HEADER VARIABLE)\n\n#\n\n#  FUNCTION - the name of the function you are looking for\n\n#  HEADER - the header(s) where the prototype should be declared\n\n#  VARIABLE - variable to store the result\n\n#\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-mixer/cmake/FindLibc.cmake" : {
      "ObjectId" : "848528bea1ad3a9bd22c8fd1732af47d0731b41c",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Once done, this will define\n\n#\n\n# LIBC_FOUND - system has libc \n\n# LIBC_LIBRARIES - link these to use libc\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBC_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-mixer/cmake/FindSDL2.cmake" : {
      "ObjectId" : "132c9780d0b335dd6c9ffc0b6e9791955ae8d161",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dependencies/sdl2-mixer/cmake/LibFindMacros.cmake" : {
      "ObjectId" : "3ef5844dd1e1805f0eeadd3b74b5abdd7e78195b",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version 2.2\n\n# Public Domain, originally written by Lasse Kärkkäinen <tronic>\n\n# Maintained at https://github.com/Tronic/cmake-modules\n\n# Please send your improvements as pull requests on Github.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find another package and make it a dependency of the current package.\n\n# This also automatically forwards the \"REQUIRED\" argument.\n\n# Usage: libfind_package(<prefix> <another package> [extra args to find_package])\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A simple wrapper to make pkg-config searches a bit easier.\n\n# Works the same as CMake's internal pkg_check_modules but is always quiet.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Avoid useless copy&pasta by doing what most simple libraries do anyway:\n\n# pkg-config, find headers, find library.\n\n# Usage: libfind_pkg_detect(<prefix> <pkg-config args> FIND_PATH <name> [other args] FIND_LIBRARY <name> [other args])\n\n# E.g. libfind_pkg_detect(SDL2 sdl2 FIND_PATH SDL.h PATH_SUFFIXES SDL2 FIND_LIBRARY SDL2)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Parse arguments\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Find library\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Extracts a version #define from a version.h file, output stored to <PREFIX>_VERSION.\n\n# Usage: libfind_version_header(Foobar foobar/version.h FOOBAR_VERSION_STR)\n\n# Fourth argument \"QUIET\" may be used for silently testing different define names.\n\n# This function does nothing if the version variable is already defined.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Skip processing if we already have a version or if the include dir was not found\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Process optional arguments\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Read the header and parse for version number\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# No regex match?\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Export the version string\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Skip processing if already processed during this configuration run\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Start with the assumption that the package was found\n",
        "Line" : 108,
        "CharPositionInLine" : 19
      },
      "15" : {
        "Text" : "# Did we find any files? Did we miss includes? These are for formatting better error messages.\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Shorthands for some variables that we need often\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Lists of config option names (all, includes, libs)\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Process deps to add to \n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# The package seems to export option lists that we can use, woohoo!\n",
        "Line" : 129,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# If plural forms don't exist or they equal singular forms\n",
        "Line" : 133,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Singular forms can be used\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Oh no, we don't know the option names\n",
        "Line" : 144,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# Include/library names separated by spaces (notice: not CMake lists)\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Process all includes and set found false if any are missing\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Process all libraries and set found false if any are missing\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Version checks\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# If all-OK, hide all config options, export variables, print status and exit\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Format messages for debug info and the type of error\n",
        "Line" : 221,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Fatal error out if REQUIRED\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Otherwise just print a nasty warning\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 31
    },
    "dependencies/sdl2-mixer/external/libogg-1.3.1/CMakeLists.txt" : {
      "ObjectId" : "f0e0ac2667586e2009050867345a32adf54cc9b1",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# enable_language(ASM-NASM)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dependencies/sdl2-mixer/external/libogg-1.3.1/Makefile.am" : {
      "ObjectId" : "f7c680b01686968b09dd30d05617434448c4a4e1",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#AUTOMAKE_OPTIONS = foreign 1.6 dist-zip\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-mixer/external/libogg-1.3.1/doc/Makefile.am" : {
      "ObjectId" : "3dd47b92c89ff6993566901c2b0ac98962cfadf6",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this with automake to create Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dependencies/sdl2-mixer/external/libogg-1.3.1/doc/libogg/Makefile.am" : {
      "ObjectId" : "4007907a9ccca7812da69d911cdf0c3f07617830",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dependencies/sdl2-mixer/external/libogg-1.3.1/include/Makefile.am" : {
      "ObjectId" : "0084e4d8298a2ec161888420af70ba0f1f3cc778",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dependencies/sdl2-mixer/external/libogg-1.3.1/include/ogg/Makefile.am" : {
      "ObjectId" : "142699d35608e1bbe175746ef0073f8f2e01fb61",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dependencies/sdl2-mixer/external/libogg-1.3.1/src/Makefile.am" : {
      "ObjectId" : "b207e7865bfce7ca6cece9b2747b128754d32198",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build and run the self tests on 'make check'\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-mixer/external/libvorbis-1.3.3/CMakeLists.txt" : {
      "ObjectId" : "eaa1ae8c3a4a11323e63f200efe7b567407a45be",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2014 Google Inc. All rights reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include libogg header files.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include libvorbis header files.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ${libvorbis_dir}/lib/tone.c\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "dependencies/sdl2-mixer/external/libvorbis-1.3.3/Makefile.am" : {
      "ObjectId" : "e05d521ae98e9accaa63d99ae20ce647150b966f",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#AUTOMAKE_OPTIONS = 1.7 foreign dist-zip dist-bzip2\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-mixer/external/libvorbis-1.3.3/cmake/libvorbis.cmake" : {
      "ObjectId" : "7b514950e2e6178f12cc69f5098ebbdeb9bfc486",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dependencies/sdl2-mixer/external/libvorbis-1.3.3/cmake/libvorbisfile.cmake" : {
      "ObjectId" : "af72315edc4d05305d237c4cb309f4bf704fe729",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dependencies/sdl2-mixer/external/libvorbis-1.3.3/doc/Makefile.am" : {
      "ObjectId" : "3adf6b3fbbeba5c09e6127da20424cab336bd359",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this with automake to create Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### all of the static docs, commited to SVN and included as is\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# bits needed by the spec\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FIXME: also needed here\n\n#\twhite-xifish.png \n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# conditionally make the generated documentation\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# these are expensive; only remove if we have to\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# explicit rules for generating docs\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "dependencies/sdl2-mixer/external/libvorbis-1.3.3/doc/libvorbis/Makefile.am" : {
      "ObjectId" : "0bcc135b75d8069ecea9180f9672f28a7323d611",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dependencies/sdl2-mixer/external/libvorbis-1.3.3/doc/vorbisenc/Makefile.am" : {
      "ObjectId" : "bbab3c5ba4b0586181badf250fef2ae1fa8b88e9",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dependencies/sdl2-mixer/external/libvorbis-1.3.3/doc/vorbisfile/Makefile.am" : {
      "ObjectId" : "fb27d44ae8a4fbfdc7df92de8e4f149b6521fe70",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dependencies/sdl2-mixer/external/libvorbis-1.3.3/examples/Makefile.am" : {
      "ObjectId" : "45189763e468b857c071d2c3bdd87f86e4cab771",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# uncomment to build static executables from the example code\n\n#LDFLAGS = -all-static \n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dependencies/sdl2-mixer/external/libvorbis-1.3.3/include/Makefile.am" : {
      "ObjectId" : "0f34fab4ca61c0ef3f650a643f53286d532ab09f",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dependencies/sdl2-mixer/external/libvorbis-1.3.3/include/vorbis/Makefile.am" : {
      "ObjectId" : "dbba34e55974a19203f0c094e91a3ed69298e150",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dependencies/sdl2-mixer/external/libvorbis-1.3.3/lib/Makefile.am" : {
      "ObjectId" : "50f7ea4f293e79bfab4a5f8bb307a8f24435686c",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build and run the self tests on 'make check'\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#vorbis_selftests = test_codebook test_sharedbook\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#test_codebook_SOURCES = codebook.c\n\n#test_codebook_CFLAGS = -D_V_SELFTEST\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# recurse for alternate targets\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "dependencies/sdl2-mixer/external/libvorbis-1.3.3/lib/books/Makefile.am" : {
      "ObjectId" : "3697a7177ec1c115ccd1ef4e9412ce8c6bf08f39",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dependencies/sdl2-mixer/external/libvorbis-1.3.3/lib/books/coupled/Makefile.am" : {
      "ObjectId" : "1115201dd09248cd89d8b7af0fbe89cef2236e3d",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dependencies/sdl2-mixer/external/libvorbis-1.3.3/lib/books/floor/Makefile.am" : {
      "ObjectId" : "272ab1a28c68d4f0393a7cd41ba6f1f50f4f85fc",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dependencies/sdl2-mixer/external/libvorbis-1.3.3/lib/books/uncoupled/Makefile.am" : {
      "ObjectId" : "93ff417c8f13e5a4eff7884acc146cc2f153ac92",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dependencies/sdl2-mixer/external/libvorbis-1.3.3/lib/modes/Makefile.am" : {
      "ObjectId" : "5c7ffefaa4a66ac02e8ab68a422e435887e87e9a",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dependencies/sdl2-mixer/external/libvorbis-1.3.3/m4/Makefile.am" : {
      "ObjectId" : "cd184850f71e5db41c307fbdfcedb3f86edb9056",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dependencies/sdl2-mixer/external/libvorbis-1.3.3/test/Makefile.am" : {
      "ObjectId" : "5f7e32af63ecdbb4bf37081e4d41743796dcdc8a",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dependencies/sdl2-mixer/external/libvorbis-1.3.3/vq/Makefile.am" : {
      "ObjectId" : "6fd105c5c0b157100d950f4f50392a6bb5f363ae",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dependencies/sdl2/CMakeLists.txt" : {
      "ObjectId" : "aea2cbc60f0ba45d5b361f0c2b508843371ed5ce",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# General settings\n\n# Edit include/SDL_version.h and change the version, then:\n\n#   SDL_MICRO_VERSION += 1;\n\n#   SDL_INTERFACE_AGE += 1;\n\n#   SDL_BINARY_AGE += 1;\n\n# if any functions have been added, set SDL_INTERFACE_AGE to 0.\n\n# if backwards compatibility has been broken,\n\n# set SDL_BINARY_AGE and SDL_INTERFACE_AGE to 0.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Calculate a libtool-like version number\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# General settings & flags\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check for 64 or 32 bit\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get the platform\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# TODO: iOS?\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Don't mistake osx for unix\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# JavaScript does not yet have threading support, so disable pthreads when building for Emscripten.\n",
        "Line" : 116,
        "CharPositionInLine" : 40
      },
      "8" : {
        "Text" : "# Default option knobs\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Compiler info\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# VisualStudio 8.0+\n",
        "Line" : 137,
        "CharPositionInLine" : 34
      },
      "11" : {
        "Text" : "#set(CMAKE_C_FLAGS \"/ZI /WX- /\n",
        "Line" : 139,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Default flags, if not set otherwise\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Hackish, but does the trick on Win32\n",
        "Line" : 153,
        "CharPositionInLine" : 37
      },
      "14" : {
        "Text" : "# Make sure /RTC1 is disabled, otherwise it will use functions from the CRT\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Those are used for pkg-config and friends, so that the SDL2.pc, sdl2-config,\n\n# etc. are created correctly.\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Emscripten toolchain has a nonempty default value for this, and the checks \n\n# in this file need to change that, so remember the original value, and \n\n# restore back to that afterwards. For check_function_exists() to work in\n\n# Emscripten, this value must be at its default value.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# We build SDL on cygwin without the UNIX emulation layer\n",
        "Line" : 189,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# General includes\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# All these ENABLED_BY_DEFAULT vars will default to ON if not specified, so\n\n#  you only need to have a platform override them if they are disabling.\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Set up default values for the currently supported set of subsystems:\n\n# Emscripten/Javascript does not have assembly support, a dynamic library \n\n# loading architecture, low-level CPU inspection or multithreading.\n",
        "Line" : 210,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "#set_option(DEPENDENCY_TRACKING \"Use gcc -MMD -MT dependency tracking\" ON)\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#${WINDOWS})\n",
        "Line" : 289,
        "CharPositionInLine" : 74
      },
      "23" : {
        "Text" : "#${WINDOWS})\n",
        "Line" : 290,
        "CharPositionInLine" : 72
      },
      "24" : {
        "Text" : "#${UNIX_SYS})\n",
        "Line" : 291,
        "CharPositionInLine" : 66
      },
      "25" : {
        "Text" : "# TODO: We should (should we?) respect cmake's ${BUILD_SHARED_LIBS} flag here\n\n# The options below are for compatibility to configure's default behaviour.\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#${SDL_SHARED_ENABLED_BY_DEFAULT} CACHE BOOL \"Build a shared version of the library\")\n",
        "Line" : 295,
        "CharPositionInLine" : 23
      },
      "27" : {
        "Text" : "# CACHE BOOL \"Build a static version of the library\")\n",
        "Line" : 296,
        "CharPositionInLine" : 22
      },
      "28" : {
        "Text" : "# General source files\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Do nada - use optimization settings to determine the assertion level\n",
        "Line" : 317,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Compiler option evaluation\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# TODO: Those all seem to be quite GCC specific - needs to be\n\n# reworked for better compiler support\n",
        "Line" : 397,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# if only HAVE_ALTIVEC_H_HDR is set\n",
        "Line" : 510,
        "CharPositionInLine" : 31
      },
      "33" : {
        "Text" : "# TODO: SDL_cpuinfo.h needs to support the user's configuration wish\n\n# for MSVC - right now it is always activated\n",
        "Line" : 519,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# TODO:\n\n#else()\n\n#  if(USE_GCC OR USE_CLANG)\n\n#    list(APPEND EXTRA_CFLAGS \"-mno-sse\" \"-mno-sse2\" \"-mno-mmx\")\n\n#  endif()\n",
        "Line" : 529,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# TODO: Can't deactivate on FreeBSD? w/o LIBC, SDL_stdinc.h can't define\n\n# anything.\n",
        "Line" : 536,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# needed for M_PI\n",
        "Line" : 560,
        "CharPositionInLine" : 41
      },
      "37" : {
        "Text" : "# TODO: refine the mprotect check\n",
        "Line" : 576,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Enable/disable various subsystems of the SDL library\n",
        "Line" : 632,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Haptic requires some private functions from the joystick subsystem.\n",
        "Line" : 645,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# TODO: in configure.in, the test for LOADSO and SDL_DLOPEN is a bit weird:\n\n# if LOADSO is not wanted, SDL_LOADSO_DISABLED is set\n\n# If however on Unix or APPLE dlopen() is detected via CheckDLOPEN(),\n\n# SDL_LOADSO_DISABLED will not be set, regardless of the LOADSO settings\n",
        "Line" : 655,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# General SDL subsystem options, valid for all platforms\n",
        "Line" : 660,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# CheckDummyAudio/CheckDiskAudio - valid for all platforms\n",
        "Line" : 662,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Relevant for Unix/Darwin only\n",
        "Line" : 678,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "#enable gles\n",
        "Line" : 729,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# Platform-specific options and settings\n",
        "Line" : 740,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Hide noisy warnings that intend to aid mostly during initial stages of porting a new\n\n# project. Uncomment at will for verbose cross-compiling -I/../ path info.\n",
        "Line" : 742,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "#enable gles\n",
        "Line" : 775,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# Need to check for Raspberry PI first and add platform specific compiler flags, otherwise the test for GLES fails!\n",
        "Line" : 812,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# !!! FIXME: this needs pkg-config to find the include path, I think.\n",
        "Line" : 862,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# seems to be BSD specific - limit the test to BSD only?\n",
        "Line" : 877,
        "CharPositionInLine" : 20
      },
      "51" : {
        "Text" : "# Prevent codegen that would use the VC runtime libraries.\n",
        "Line" : 951,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# Check for DirectX\n",
        "Line" : 958,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# xinput.h may need windows.h, but doesn't include it itself.\n",
        "Line" : 971,
        "CharPositionInLine" : 6
      },
      "54" : {
        "Text" : "# requires SDL_LOADSO on Windows (IME, DX, etc.)\n",
        "Line" : 1003,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# Libraries for Win32 native and MinGW\n",
        "Line" : 1046,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# TODO: in configure.in the check for timers is set on\n\n# cygwin | mingw32* - does this include mingw32CE?\n",
        "Line" : 1049,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# TODO: rework this for proper MacOS X, iOS and Darwin support\n",
        "Line" : 1131,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Requires the darwin file implementation\n",
        "Line" : 1133,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# Actually load the frameworks at the end so we don't duplicate include.\n",
        "Line" : 1199,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# iOS hack needed - http://code.google.com/p/ios-cmake/ ?\n",
        "Line" : 1229,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# TODO: Use FIND_PACKAGE(OpenGL) instead\n",
        "Line" : 1261,
        "CharPositionInLine" : 6
      },
      "62" : {
        "Text" : "# Dummies\n\n# configure.in does it differently:\n\n# if not have X\n\n#   if enable_X {  SDL_X_DISABLED = 1 }\n\n#   [add dummy sources]\n\n# so it always adds a dummy, without checking, if it was actually requested.\n\n# This leads to missing internal references on building, since the\n\n# src/X/*.c does not get included.\n",
        "Line" : 1273,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# results in unresolved symbols on OSX\n",
        "Line" : 1283,
        "CharPositionInLine" : 33
      },
      "64" : {
        "Text" : "# We always need to have threads and timers around\n",
        "Line" : 1305,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Append the -MMD -MT flags\n\n# if(DEPENDENCY_TRACKING)\n\n#   if(COMPILER_IS_GNUCC)\n\n#     set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -MMD -MT \\$@\")\n\n#   endif()\n\n# endif()\n",
        "Line" : 1321,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Prepare the flags and remove duplicates\n",
        "Line" : 1331,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Compat helpers for the configuration files\n",
        "Line" : 1344,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# TODO: we need a Windows script, too\n",
        "Line" : 1346,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# Clean up the different lists\n",
        "Line" : 1369,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# MESSAGE(STATUS \"SDL_LIBS: ${SDL_LIBS}\")\n\n# MESSAGE(STATUS \"SDL_STATIC_LIBS: ${SDL_STATIC_LIBS}\")\n",
        "Line" : 1378,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "##### Info output #####\n",
        "Line" : 1391,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Longest option is VIDEO_X11_XSCREENSAVER = 22 characters\n\n# Get the padding\n",
        "Line" : 1408,
        "CharPositionInLine" : 2
      },
      "73" : {
        "Text" : "# Ensure that the extra cflags are used at compile time\n",
        "Line" : 1431,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Always build SDLmain\n",
        "Line" : 1434,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Don't try to link with the default set of libraries.\n",
        "Line" : 1452,
        "CharPositionInLine" : 4
      },
      "76" : {
        "Text" : "# TODO: Win32 platforms keep the same suffix .lib for import and static\n\n# libraries - do we need to consider this?\n",
        "Line" : 1470,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "##### Installation targets #####\n",
        "Line" : 1476,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# FreeBSD uses ${PREFIX}/libdata/pkgconfig\n",
        "Line" : 1499,
        "CharPositionInLine" : 4
      },
      "79" : {
        "Text" : "# TODO: what about the .spec file? Is it only needed for RPM creation?\n",
        "Line" : 1506,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "##### Uninstall target #####\n",
        "Line" : 1510,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 81
    },
    "dependencies/sdl2/android-project/build.xml" : {
      "ObjectId" : "9f19a077b1b7a029013d33e3c3d602effdf53f14",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " This should be changed to the name of your project ",
        "Line" : 2,
        "CharPositionInLine" : 60
      },
      "1" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 7,
        "CharPositionInLine" : 38
      },
      "2" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 29,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 35,
        "CharPositionInLine" : 49
      },
      "4" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 49,
        "CharPositionInLine" : 77
      },
      "5" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 52,
        "CharPositionInLine" : 36
      },
      "6" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 89,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : " version-tag: 1 ",
        "Line" : 90,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 9
    },
    "dependencies/sdl2/cmake/macros.cmake" : {
      "ObjectId" : "96a7ce8b1406692acaf32a25d9c864da3f94cb45",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Message Output\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# prefix for each element\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Do not use string(REPLACE \";\" \" \") here to avoid messing up list\n\n# entries\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "dependencies/sdl2/cmake/sdlchecks.cmake" : {
      "ObjectId" : "7ff0985fdb0bc89a004fb1ddc3fc912156948318",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# reduce the library name for shared linking\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# resolves symlinks\n",
        "Line" : 9,
        "CharPositionInLine" : 69
      },
      "2" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - ALSA_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - PULSEAUDIO_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - ESD_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - ARTS_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TODO\n",
        "Line" : 211,
        "CharPositionInLine" : 10
      },
      "8" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - NAS_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# TODO: set include paths properly, so the NAS headers are found\n",
        "Line" : 231,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - SNDIO_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# TODO: set include paths properly, so the sndio headers are found\n",
        "Line" : 262,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - FUSIONSOUND_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - X11_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Check for multitouch\n",
        "Line" : 443,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - MIR_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 500,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - WAYLAND_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 540,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Requires:\n\n# - n/a\n\n#\n",
        "Line" : 589,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Apple always has Cocoa.\n",
        "Line" : 594,
        "CharPositionInLine" : 14
      },
      "19" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - DIRECTFB_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 607,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 638,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Requires:\n\n# - nada\n",
        "Line" : 668,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Requires:\n\n# - nada\n",
        "Line" : 687,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Requires:\n\n# - nada\n\n# Optional:\n\n# - THREADS opt\n\n# Sets:\n\n# PTHREAD_CFLAGS\n\n# PTHREAD_LIBS\n",
        "Line" : 720,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# causes Carbon.p complaints?\n\n# set(PTHREAD_CFLAGS \"-D_REENTRANT -D_THREAD_SAFE\")\n",
        "Line" : 737,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# Run some tests\n",
        "Line" : 769,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Can be faked, if necessary\n\n# Can be faked, if necessary\n",
        "Line" : 836,
        "CharPositionInLine" : 65
      },
      "27" : {
        "Text" : "# Requires\n\n# - nada\n\n# Optional:\n\n# Sets:\n\n# USB_LIBS\n\n# USB_CFLAGS\n",
        "Line" : 852,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 991,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "dependencies/sdl2/include/SDL_config.h.cmake" : {
      "ObjectId" : "44173a053374287bacca49ce21e5aefeb4d20fea",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n  Simple DirectMedia Layer\n  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n *  \\file SDL_config.h.in\n *\n *  This is a set of defines to configure the SDL features\n */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* General platform specific identifiers */",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* C language features */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* C datatypes */\n/* Define SIZEOF_VOIDP for 64/32 architectures */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Comment this if you want to build without any C library requirements */",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Useful headers */",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* C library functions */",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* We may need some replacement for stdarg.h here */",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* SDL internal assertion support */",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Allow disabling of core subsystems */",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Enable various audio drivers */",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Enable various input drivers */",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Enable various shared object loading systems */",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Enable various threading systems */",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Enable various timer systems */",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Enable various video drivers */",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Enable OpenGL support */",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Enable system power support */",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Enable system filesystem support */",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Enable assembly routines */",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Platform specific definitions */",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Older Visual C++ headers don't have the Win64-compatible typedefs... */",
        "Line" : 394,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "dependencies/yaml-cpp/CMakeLists.txt" : {
      "ObjectId" : "590d10c5dcc36fdd8ca0f1f8b9ed5932c4462b6b",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n### CMake settings\n\n###\n\n## Due to Mac OSX we need to keep compatibility with CMake 2.6\n\n# see http://www.cmake.org/Wiki/CMake_Policies\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# see http://www.cmake.org/cmake/help/cmake-2-8-docs.html#policy:CMP0012\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# see http://www.cmake.org/cmake/help/cmake-2-8-docs.html#policy:CMP0015\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n### Project settings\n\n###\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# enable_testing()\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###\n\n### Project options\n\n###\n\n## Project stuff\n\n# option(YAML_CPP_BUILD_TOOLS \"Enable testing and parse tools\" ON)\n\n# option(YAML_CPP_BUILD_CONTRIB \"Enable contrib stuff in library\" ON)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Build options\n\n# --> General\n\n# see http://www.cmake.org/cmake/help/cmake2.6docs.html#variable:BUILD_SHARED_LIBS\n\n#     http://www.cmake.org/cmake/help/cmake2.6docs.html#command:add_library\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --> Apple\n\n# option(APPLE_UNIVERSAL_BIN \"Apple: Build universal binary\" OFF)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --> Microsoft Visual C++\n\n# see http://msdn.microsoft.com/en-us/library/aa278396(v=VS.60).aspx\n\n#     http://msdn.microsoft.com/en-us/library/2kzt1wy3(v=VS.71).aspx\n\n# option(MSVC_SHARED_RT \"MSVC: Build with shared runtime libs (/MD)\" ON)\n\n# option(MSVC_STHREADED_RT \"MSVC: Build with single-threaded static runtime libs (/ML until VS .NET 2003)\" OFF)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###\n\n### Sources, headers, directories and libs\n\n###\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###\n\n### General compilation settings\n\n###\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# GCC specialities\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "### General stuff\n",
        "Line" : 108,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# DLLs do not have a \"lib\" prefix\n\n# same for DLL import libs\n",
        "Line" : 110,
        "CharPositionInLine" : 38
      },
      "14" : {
        "Text" : "# CMake workaround (2.8.3)\n",
        "Line" : 112,
        "CharPositionInLine" : 35
      },
      "15" : {
        "Text" : "### Project stuff\n",
        "Line" : 115,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#\n",
        "Line" : 119,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "#\n",
        "Line" : 124,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "#\n",
        "Line" : 126,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "#\n",
        "Line" : 132,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "#\n",
        "Line" : 134,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# Microsoft VisualC++ specialities\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "### General stuff\n\n# a) Change MSVC runtime library settings (/MD[d], /MT[d], /ML[d] (single-threaded until VS 2003))\n\n#    plus set lib suffix for later use and project label accordingly\n\n# see http://msdn.microsoft.com/en-us/library/aa278396(v=VS.60).aspx\n\n#     http://msdn.microsoft.com/en-us/library/2kzt1wy3(v=VS.71).aspx\n",
        "Line" : 147,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# CMake defaults to /MD for MSVC\n",
        "Line" : 152,
        "CharPositionInLine" : 25
      },
      "24" : {
        "Text" : "#\n",
        "Line" : 154,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# User wants to have static runtime libraries (/MT, /ML)\n\n# User wants to have old single-threaded static runtime libraries\n",
        "Line" : 155,
        "CharPositionInLine" : 24
      },
      "26" : {
        "Text" : "# correct linker options\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "#\n",
        "Line" : 178,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# b) Change prefix for static libraries\n",
        "Line" : 181,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# to distinguish static libraries from DLL import libs\n",
        "Line" : 182,
        "CharPositionInLine" : 40
      },
      "30" : {
        "Text" : "# c) Correct suffixes for static libraries\n",
        "Line" : 184,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "### General stuff\n",
        "Line" : 185,
        "CharPositionInLine" : 12
      },
      "32" : {
        "Text" : "### Project stuff\n\n# /W3 = set warning level; see http://msdn.microsoft.com/en-us/library/thxezb7y.aspx\n\n# /wd4127 = disable warning C4127 \"conditional expression is constant\"; see http://msdn.microsoft.com/en-us/library/6t66728h.aspx\n\n# /wd4355 = disable warning C4355 \"'this' : used in base member initializer list\"; http://msdn.microsoft.com/en-us/library/3c594ae3.aspx\n",
        "Line" : 188,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "###\n\n### General install settings\n\n###\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# .dll are in PATH, like executables\n",
        "Line" : 200,
        "CharPositionInLine" : 23
      },
      "35" : {
        "Text" : "###\n\n### Library\n\n###\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# correct library names\n",
        "Line" : 242,
        "CharPositionInLine" : 12
      },
      "37" : {
        "Text" : "###\n\n### Extras\n\n###\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "dependencies/yaml-cpp/yaml-cpp.pc.cmake" : {
      "ObjectId" : "04d343f65c0bb00949031597e30272cb3b412880",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/CMakeLists.txt" : {
      "ObjectId" : "6bf8547c12684cef8ea345e2f73c8e5efd6a8664",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/common-lib/CMakeLists.txt" : {
      "ObjectId" : "7d08aae1e67daa67d93c08399337fc6dbdcd438c",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_executable( lcommon_tests\r\n\n#             ${lcommon_tests}\r\n\n#              )\r\n\n#\r\n\n#target_link_libraries( \r\n\n#\t\t\tlcommon_tests\r\n\n#\t\t\tlcommon\r\n\n#\t\t\tUnitTest++\r\n\n#\t\t\tluawrap\r\n\n#\t\t\tlua\r\n\n#)\r\n\n#\r\n\n## Enable tests\r\n\n#enable_testing()\r\n\n#\r\n\n#add_test(NAME lcommon_tests COMMAND ${EXECUTABLE_OUTPUT_PATH}/lcommon_tests )\r\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/draw-lib-headless/CMakeLists.txt" : {
      "ObjectId" : "6c0cf7dc169c89f599678ec1513050fd54710aeb",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_executable( ldraw_ex ${ldraw_examples} )\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\r\n\n#enable_testing()\r\n\n#add_test(NAME ldraw_tests COMMAND ${EXECUTABLE_OUTPUT_PATH}/ldraw_tests )\r\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "libs/draw-lib/CMakeLists.txt" : {
      "ObjectId" : "f1777fe692a7dfa5bcb26479e9ffbef327dd9ccc",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ${FREETYPE_INCLUDE_DIRS} \r\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# ${FREETYPE_LIBRARIES}\r\n",
        "Line" : 83,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#add_executable( ldraw_tests ${ldraw_tests} )\r\n\n#\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#target_link_libraries( ldraw_tests ${LINKEDDEPS} UnitTest++ )\r\n\n#\r\n\n#enable_testing()\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_test(NAME ldraw_tests COMMAND ${EXECUTABLE_OUTPUT_PATH}/ldraw_tests )\r\n",
        "Line" : 94,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "libs/dungeon-generation-lib/CMakeLists.txt" : {
      "ObjectId" : "943d2ba826a68b86201b2e79f39586824d962245",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_executable( lanarts_dungeon_gen_tests\r\n\n#             ${lanarts_dungeon_gen_tests_src})\r\n\n#\r\n\n#target_link_libraries(\r\n\n#\tlanarts_dungeon_gen_tests\r\n\n#\tlanarts_dungeon_gen\r\n\n#\tlibxmi\r\n\n#\tlcommon\r\n\n#\tluawrap\r\n\n#\tlua\r\n\n#\tldraw\r\n\n#\tUnitTest++\r\n\n#)\r\n\n#\r\n\n#enable_testing()\r\n\n#add_test(NAME lanarts_dungeon_gen_tests COMMAND\r\n\n#    cd ${CMAKE_CURRENT_SOURCE_DIR} ;\r\n\n#    ${EXECUTABLE_OUTPUT_PATH}/lanarts_dungeon_gen_tests )\r\n\n#\r\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/luawrap-lib/CMakeLists.txt" : {
      "ObjectId" : "579ca4d09c00a28e6390e4ddc2be3f89d5e0db52",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Library target\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Find source files\r\n",
        "Line" : 14,
        "CharPositionInLine" : 41
      },
      "2" : {
        "Text" : "#Find source files\r\n",
        "Line" : 15,
        "CharPositionInLine" : 53
      },
      "3" : {
        "Text" : "# Test runner target\r\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_executable( luawrap_tests ${luawrap_testsrc} )\r\n\n#\r\n\n#target_link_libraries(luawrap_tests luawrap lua UnitTest++)\r\n\n#\r\n\n## Enable tests\r\n\n#enable_testing()\r\n\n#\r\n\n#add_test(NAME luawrap_tests COMMAND ${EXECUTABLE_OUTPUT_PATH}/luawrap_tests )\r\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "libs/net-lib/CMakeLists.txt" : {
      "ObjectId" : "27293391f465e63e059f5c59308b3a12b694d76c",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_executable( lanarts_net_tests\r\n\n#             ${lanarts_net_tests_src})\r\n\n#\r\n\n#target_link_libraries(\r\n\n#\tlanarts_net_tests\r\n\n#\tlanarts_net\r\n\n#\tpthread\r\n\n#\tenet\r\n\n#        SDL2-static\r\n\n#\tlcommon\r\n\n#\tUnitTest++\r\n\n#)\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/sound-lib/CMakeLists.txt" : {
      "ObjectId" : "e205024859f8dd047f50da17dba80594240196b0",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Library target\r\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Find source files\r\n",
        "Line" : 19,
        "CharPositionInLine" : 40
      },
      "2" : {
        "Text" : "#Find source files\r\n",
        "Line" : 20,
        "CharPositionInLine" : 47
      },
      "3" : {
        "Text" : "#Find source files\r\n",
        "Line" : 21,
        "CharPositionInLine" : 50
      },
      "4" : {
        "Text" : "# Test runner target\r\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#add_executable( lsound_tests main.cpp)\r\n\n#\r\n\n#target_link_libraries(lsound_tests ${LINKEDLIBS})\r\n\n#\r\n\n# Enable tests\r\n\n#enable_testing()\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#add_test(NAME lsound_tests COMMAND ${EXECUTABLE_OUTPUT_PATH}/lsound_tests )\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "mingw-toolchain.cmake" : {
      "ObjectId" : "1ae38efdc1bc523cd1efa2e8266a5ac6a122c177",
      "LastModified" : "2018-10-08T01:13:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sample toolchain file for building for Windows from an Ubuntu Linux system.\n\n#\n\n# Typical usage:\n\n#    *) install cross compiler: `sudo apt-get install mingw-w64 g++-mingw-w64`\n\n#    *) cd build\n\n#    *) cmake -DCMAKE_TOOLCHAIN_FILE=~/Toolchain-Ubuntu-mingw32.cmake ..\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cross compilers to use for C and C++\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# target environment on the build host system\n\n#   set 1st to dir with the cross compiler's C/C++ headers/libs\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# modify default behavior of FIND_XXX() commands to\n\n# search for headers/libs in the target environment and\n\n# search for programs in the build host environment\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "e199a912100b2daf4298078c965de854eac7f7bc",
      "LastModified" : "2018-10-10T03:15:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO(amitp): I don't know how to set this properly with add_compile_options\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#SDL2-image\n\n#SDL2-mixer\n\n#SDL2-static\n",
        "Line" : 27,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "#${SDL2_LIBRARIES}\n",
        "Line" : 31,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "#add_definitions( -DSTABLE_EXE)\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# for net\n",
        "Line" : 88,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# for rvo2 & luasocket\n",
        "Line" : 96,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "#physfs-static\n",
        "Line" : 170,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "#\t${FREETYPE_LIBRARIES}\n",
        "Line" : 173,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 8
    }
  },
  "FileTypes" : {
    "CMAKE" : 66,
    "CMAKESOURCE" : 1,
    "AUTOMAKE" : 57,
    "ANT" : 1
  },
  "ElapsedTime" : 4731
}