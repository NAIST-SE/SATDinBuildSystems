{
  "Repository" : "13601600",
  "Revision" : "HEAD",
  "ObjectId" : "311d36a5a5e5357b2f9e68867ee8310f10fda2c5",
  "CommitTime" : "2019-04-16T10:11:11Z",
  "Files" : {
    "cpp/CMakeLists.txt" : {
      "ObjectId" : "38ce1f500375c5c073c262d299d2870ba73934e3",
      "LastModified" : "2018-11-02T20:38:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2011 The Libphonenumber Authors\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Author: Philippe Liard\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Helper functions dealing with finding libraries and programs this library\n\n# depends on.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find a library. If it has not been found, stop CMake with a fatal error\n\n# message.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check the header.\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check the binary.\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Check the library version (if pkg-config available).\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find a program. If it has not been found, stop CMake with a fatal error\n\n# message.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Options that can be passed to CMake using 'cmake -DKEY=VALUE'.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Find all the required libraries and programs.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If ICU regexp engine is used or if the geocoder is built, use icui18n as well.\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add protoc (Protocol Buffers compiler) target.\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Geocoding data cpp file generation\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Generated by Protocol Buffers.\n",
        "Line" : 204,
        "CharPositionInLine" : 41
      },
      "14" : {
        "Text" : "# Generated by Protocol Buffers.\n",
        "Line" : 206,
        "CharPositionInLine" : 41
      },
      "15" : {
        "Text" : "# Forces proto buffer generation.\n",
        "Line" : 227,
        "CharPositionInLine" : 41
      },
      "16" : {
        "Text" : "# Add regexp engine-dependent sources. ICU is used by default.\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Add a flag to select the right regexp factory implementation used by\n\n# regexp_factory.h and regexp_adapter_test.cc.\n\n# When both ICU regexp and RE2 are defined, the regexp engine adapter defaults\n\n# to RE2 unless the ICU implementation is instantiated explictly obviously.\n",
        "Line" : 233,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# The phone number matcher needs ICU.\n",
        "Line" : 244,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Library sources excluding the metadata files, since special metadata is used\n\n# for unit-testing. Note that a single testing library is built for both\n\n# libphonenumber and geocoding.\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Add metadata code generation targets.\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# This function is invoked to create metadata, test metadata and lite metadata\n\n# code generation targets.\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Add the lite metadata generation target.\n",
        "Line" : 290,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Add the metadata generation target.\n",
        "Line" : 300,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Add the test metadata generation target.\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Add the short metadata generation target.\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# This is used both for the real library and for testing.\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Add alternate format metadata generation for the phone number matcher.\n",
        "Line" : 335,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Build a static library (without -fPIC).\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# The geocoder doesn't use RE2 so there is no reason not to build a shared\n\n# library for it.\n",
        "Line" : 370,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Build a shared library (with -fPIC).\n",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# RE2 is not always available as a shared library (e.g: package provided by\n\n# Ubuntu) therefore disable the shared library build in this case.\n",
        "Line" : 386,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Libraries used by both libphonenumber and libgeocoding.\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Note that the subset of base/ on which the geocoder relies is implemented\n\n# on top of Boost header-only libraries (e.g. scoped_ptr.hpp).\n",
        "Line" : 442,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Build a specific library for testing purposes.\n",
        "Line" : 448,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Test geocoding data cpp files generation.\n",
        "Line" : 456,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Add the phone number matcher tests.\n",
        "Line" : 502,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Build the testing binary.\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Unfortunately add_custom_target() can't accept a single command provided as a\n\n# list of commands.\n",
        "Line" : 518,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Install rules.\n",
        "Line" : 533,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Install the phone number matcher headers.\n",
        "Line" : 554,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Build an example program using geocoding, mainly to make sure that both\n\n# libraries are built properly.\n",
        "Line" : 607,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Build an RPM\n",
        "Line" : 617,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "java/build.xml" : {
      "ObjectId" : "aae3fa96941d8b05bf1d9f19eb5c0793e9e256cf",
      "LastModified" : "2018-02-14T09:55:23Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Lite metadata. ",
        "Line" : 168,
        "CharPositionInLine" : 50
      },
      "1" : {
        "Text" : " Lite metadata. ",
        "Line" : 176,
        "CharPositionInLine" : 51
      },
      "2" : {
        "Text" : " namespace to provide ",
        "Line" : 177,
        "CharPositionInLine" : 90
      },
      "CommentCount" : 3
    },
    "java/carrier/pom.xml" : {
      "ObjectId" : "e8e668361d2d6543ac1373ce15facf4bc3417536",
      "LastModified" : "2019-04-03T05:27:22Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "java/demo/build.xml" : {
      "ObjectId" : "b9ed0cb592ee3c792448858759f4c7bc9a6ba4d5",
      "LastModified" : "2014-12-03T12:21:27Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "java/demo/pom.xml" : {
      "ObjectId" : "551f1c27f6cb7832f29fc454686439dd26637193",
      "LastModified" : "2019-04-03T05:27:22Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "java/geocoder/pom.xml" : {
      "ObjectId" : "9bbfe6f9ef014acc74a2293e575184a5787efa35",
      "LastModified" : "2019-04-03T05:27:22Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "java/internal/prefixmapper/pom.xml" : {
      "ObjectId" : "80c3c22d414af0d37ac6f8f8aaea17a7be22b80d",
      "LastModified" : "2019-04-03T05:27:22Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "java/libphonenumber/pom.xml" : {
      "ObjectId" : "75c51556c82d1b8e1936b85f6f887a0e201e5045",
      "LastModified" : "2019-04-03T05:27:22Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "java/pom.xml" : {
      "ObjectId" : "ad183dd9344ab6de6a59ecaed3287b0755d9acfe",
      "LastModified" : "2019-04-03T05:27:22Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Until 08. Dec 2016, this pom worked with maven-release-plugin at 2.2.1\n       and default SCM dependencies. On 11. Jan, 2017 that was no longer the\n       case, presumably because the default SCM version changed (cannot find\n       references), and the 2.5.2, 1.9.4 versions ended up working. ",
        "Line" : 210,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 1
    },
    "javascript/build.xml" : {
      "ObjectId" : "a93149f67f734c8f7b6c8e49c2d30de977169bd3",
      "LastModified" : "2018-02-14T09:55:23Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "pom.xml" : {
      "ObjectId" : "d5aa0b376dd1e5304163fe4a15fe00b62aaa465d",
      "LastModified" : "2014-12-03T12:22:33Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "tools/cpp/CMakeLists.txt" : {
      "ObjectId" : "fafa846943210c6908431b18461a6565f8f676da",
      "LastModified" : "2014-12-03T12:22:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2012 The Libphonenumber Authors\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Author: Patrick Mezard\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Helper functions dealing with finding libraries and programs this library\n\n# depends on.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build the testing binary.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tools/cpp/gtest.cmake" : {
      "ObjectId" : "268329f6e1d1590ef7f8c047b86d785fdd9e2f38",
      "LastModified" : "2014-12-03T12:22:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2012 The Libphonenumber Authors\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Author: Fredrik Roubert\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# It used to be common to provide pre-compiled Google Test libraries, but this\n\n# practice is not recommended and is increasingly rare today:\n\n#\n\n# http://code.google.com/p/googletest/wiki/FAQ#Why_is_it_not_recommended_to_install_a_pre-compiled_copy_of_Goog\n\n#\n\n# This helper function will either find a pre-compiled library or else find the\n\n# source code and add a library target to build the library from source.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find header files.\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Check for a pre-compiled library.\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# No pre-compiled library found, attempt building it from source.\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "tools/java/common/pom.xml" : {
      "ObjectId" : "0273d6521279cecdec7913dbf417114b4a0ef1c2",
      "LastModified" : "2016-11-18T14:56:11Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Add ../../../java/libphonenumber/src/ to make Phonemetadata.java available to the source\n           directories. ",
        "Line" : 37,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 1
    },
    "tools/java/cpp-build/pom.xml" : {
      "ObjectId" : "2c43bd9437d7c22d1d7f2b5e5d574097fa56b263",
      "LastModified" : "2018-02-14T09:55:23Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Create a directory called 'generated'. ",
        "Line" : 34,
        "CharPositionInLine" : 54
      },
      "1" : {
        "Text" : " Make BuildMetadataFromXml.java available to the source directories. ",
        "Line" : 67,
        "CharPositionInLine" : 93
      },
      "2" : {
        "Text" : " Make Phonemetadata.java available to the source directories.\n                     BuildMetadataFromXml.java has to work with both\n                     tools/java/cpp-build/generated/com/google/i18n/phonenumbers/Phonemetadata.java\n                     and java/libphonenumber/src/com/google/i18n/phonenumbers/Phonemetadata.java.\n                     TODO: This Phonemetadata.java is generated via a protoc dependency that is not\n                     hermetic and may get out of sync with the other one. Make this file hermetic or\n                     find another way to enable Travis CI on this build. ",
        "Line" : 75,
        "CharPositionInLine" : 77
      },
      "3" : {
        "Text" : " Invoke Protocol Buffers compiler to generate Phonemetadata.java. ",
        "Line" : 82,
        "CharPositionInLine" : 80
      },
      "4" : {
        "Text" : " Build a JAR with its dependencies (protocol buffers and common library). This JAR\n           contains the C++ build tools invoked by CMake during the libphonenumber C++ build. ",
        "Line" : 118,
        "CharPositionInLine" : 98
      },
      "CommentCount" : 5
    },
    "tools/java/data/pom.xml" : {
      "ObjectId" : "77aeca15f56575dcee1477e8527770442ee0b8f8",
      "LastModified" : "2016-07-06T10:11:20Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "tools/java/java-build/pom.xml" : {
      "ObjectId" : "76615a296f0f47dca00964c1b9ab9ec54239f424",
      "LastModified" : "2018-02-14T09:55:23Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Include the PhoneNumberUtil metadata files. ",
        "Line" : 31,
        "CharPositionInLine" : 57
      },
      "1" : {
        "Text" : " Add ../../../java/libphonenumber/src/ to make Phonemetadata.java available to\n                     the source directories. ",
        "Line" : 70,
        "CharPositionInLine" : 49
      },
      "2" : {
        "Text" : " Add ../../../java/internal/phoneprefix/src/ to make PhonePrefixMap.java\n                     available to the source directories. ",
        "Line" : 73,
        "CharPositionInLine" : 62
      },
      "3" : {
        "Text" : " Add ../common/src/ which contains BuildMetadataFromXml.java ",
        "Line" : 75,
        "CharPositionInLine" : 85
      },
      "4" : {
        "Text" : " Build a JAR that contains the Java and JavaScript build tools. ",
        "Line" : 82,
        "CharPositionInLine" : 78
      },
      "CommentCount" : 5
    },
    "tools/java/pom.xml" : {
      "ObjectId" : "486962871fd9d9a136c6f76fdb7dfc95fc458087",
      "LastModified" : "2016-09-19T12:00:08Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " TODO: Add cpp-build once the protoc dependency or the generated Phonemetadata.java is\n             hermetic at tools/java/cpp-build/pom.xml. ",
        "Line" : 40,
        "CharPositionInLine" : 59
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 3,
    "ANT" : 3,
    "MAVEN" : 12
  },
  "ElapsedTime" : 11387
}