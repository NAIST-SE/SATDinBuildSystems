{
  "Repository" : "79983250",
  "Revision" : "HEAD",
  "ObjectId" : "dc5e2c6ae7948da662b5c75c4287d8110f0b9861",
  "CommitTime" : "2019-04-18T05:56:14Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "79d36719d4a89991e20bb7c9ffced75873803b84",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#####################################################################\n\n## CMakeLists.txt\n\n## This file is part of the G+Smo library.\n\n##\n\n## Author: Angelos Mantzaflaris\n\n## Copyright (C) 2012-2018 - RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake 3.0\n",
        "Line" : 11,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "# CMake 3.1\n",
        "Line" : 17,
        "CharPositionInLine" : 18
      },
      "3" : {
        "Text" : "# CMake 3.1.3\n",
        "Line" : 21,
        "CharPositionInLine" : 18
      },
      "4" : {
        "Text" : "# CMake 3.3\n",
        "Line" : 25,
        "CharPositionInLine" : 18
      },
      "5" : {
        "Text" : "# CMake 3.13\n",
        "Line" : 29,
        "CharPositionInLine" : 18
      },
      "6" : {
        "Text" : "# Set default build type to Release\n",
        "Line" : 36,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# CMake 3.0\n",
        "Line" : 51,
        "CharPositionInLine" : 18
      },
      "8" : {
        "Text" : "## #################################################################\n\n## Cmake Inclusions and configuration options\n\n## #################################################################\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Use solution folders for Visual Studio\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Remove NDEBUG flag from RelWithDebInfo builds\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## #################################################################\n\n## Project options\n\n## #################################################################\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Note: clean cache to reset to OFF\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## #################################################################\n\n## Preprocessor definitions\n\n## #################################################################\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Data directory\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## #################################################################\n\n## JIT compiler\n\n## #################################################################\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Configure\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## #################################################################\n\n## Collect headers and sources\n\n## #################################################################\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Clean previously set variables in the cache\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#first time\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Offer the user the choice of overriding the installation directories\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## #################################################################\n\n## Extensions\n\n## #################################################################\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Add externals directory\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#include_directories(${CODIPACK_INCLUDE_DIR})\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "#include_directories(${FDBB_INCLUDE_DIR})\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "#set (GISMO_INCLUDE_DIRS ${GISMO_INCLUDE_DIRS} ${IPOPT_INCLUDE_DIR}\n\n#CACHE INTERNAL \"${PROJECT_NAME} include directories\")\n\n#include_directories(${IPOPT_INCLUDE_DIR})\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "#if(GISMO_WITH_METIS)\n\n#include_directories(${METIS_INCLUDE_DIR})\n\n#set(gismo_LINKER ${gismo_LINKER} ${METIS_LIBRARIES}\n\n#    CACHE INTERNAL \"${PROJECT_NAME} extra linker objects\")\n\n#endif(GISMO_WITH_METIS)\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#include_directories(SYSTEM ${MPI_INCLUDE_PATH})\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "#include_directories(SYSTEM ${GMP_INCLUDE_DIR})\n",
        "Line" : 208,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "#include_directories(SYSTEM ${MPFR_INCLUDE_DIR})\n",
        "Line" : 214,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "#include_directories(${SPECTRA_INCLUDE_DIR})\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "#include_directories(SYSTEM ${SUPERLU_INCLUDES})\n",
        "Line" : 244,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "#include_directories(SYSTEM ${SUPERLU_INCLUDES})\n",
        "Line" : 253,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "#include_directories(SYSTEM ${UMFPACK_INCLUDES})\n",
        "Line" : 262,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "#include_directories(${UNUM_INCLUDE_DIR})\n",
        "Line" : 269,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "#include_directories(${TRILINOS_INCLUDE_DIR})\n",
        "Line" : 276,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "#include_directories(${OCC_INCLUDE_DIR})\n",
        "Line" : 283,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "#include_directories(${SMESH_INCLUDE_DIR})\n",
        "Line" : 290,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "## #################################################################\n\n## Build G+Smo library instantized for GISMO_COEFF_TYPE number type\n\n## #################################################################\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#second time\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# external inclusion paths\n\n#get_property(EXTERNAL_INCLUDE_DIRS GLOBAL PROPERTY EXTERNAL_INCLUDE_DIRS)\n\n#include_directories(SYSTEM ${PROJECT_SOURCE_DIR}/external)\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Add main sources directory\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "## #################################################################\n\n## Documentation\n\n## #################################################################\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "## #################################################################\n\n## Plugins\n\n## #################################################################\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "## #################################################################\n\n## Install\n\n## #################################################################\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "## #################################################################\n\n## Executables\n\n## #################################################################\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Note: if the shared libs are created, examples are linked against the\n\n#  shared lib, otherwise targets are not linked against anything, only\n\n#  templated code is used.\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "## #################################################################\n\n## Unittests\n\n## #################################################################\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "## #################################################################\n\n## Submodules\n\n## #################################################################\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 49
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "d11bc4c2e1167611d1de786264ab2bdce1acaac3",
      "LastModified" : "2018-09-28T10:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n## CTestConfig.txt\n\n## This file is part of the G+Smo library.\n\n##\n\n## Set test timeout (secs) by -DDART_TESTING_TIMEOUT=.. in cmake args\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CTEST_USE_LAUNCHERS 1)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Makefile" : {
      "ObjectId" : "5a6ab1b3539f486441624adaa2e730913e3014d3",
      "LastModified" : "2018-08-14T14:56:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "######################################################################\n\n## Makefile\n\n## This file is part of the G+Smo library.\n\n##\n\n## Configures and builds G+Smo in ./build\n\n##\n\n## Author: Angelos Mantzaflaris\n\n## Copyright (C) 2012-2018\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/AddCXXCompileOptions.cmake" : {
      "ObjectId" : "70f596c4bb252b96d9898568419bb757b105ec3e",
      "LastModified" : "2018-08-14T14:56:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\r\n\n## CMakeLists.txt ---\r\n\n## This file is part of the G+Smo library. \r\n\n##\r\n\n## Authors: M. Moeller and A. Mantzaflaris \r\n\n## Copyright (C) 2012 - 2017 RICAM-Linz.\r\n\n######################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake does not yet provide flags for the Portland Group compiler\r\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# The Portland Group\r\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#also: -stdlib=libc++ \r\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Apple Clang\r\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# AppleClang 5.0 knows this flag, but does not set a __cplusplus macro greater than 201103L\r\n",
        "Line" : 50,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# LLVM Clang\r\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#set(CMAKE_CXX_STANDARD_DEFAULT 11) # travis/gcc4.6\r\n",
        "Line" : 68,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "#set(CMAKE_CXX_STANDARD_DEFAULT 11)\r\n",
        "Line" : 72,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# .. additionally requires gnu libstdc++  greater than 4.6\r\n\n# set(CMAKE_CXX_STANDARD_DEFAULT 14)\r\n",
        "Line" : 82,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# GNU Compiler Collection\r\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Supported since 4.3\r\n",
        "Line" : 90,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# 4.3 supports 0x variants\r\n",
        "Line" : 101,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Intel compiler \r\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# todo: there is no gnu++14 value supported; figure out what to do\r\n",
        "Line" : 138,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# todo: there is no gnu++14 value supported; figure out what to do\r\n",
        "Line" : 145,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Oracle Solaris Studio\r\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# cmake 3.1\r\n",
        "Line" : 164,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Set C++ standard\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# B.C.\r\n",
        "Line" : 167,
        "CharPositionInLine" : 30
      },
      "20" : {
        "Text" : "# B.C.\r\n",
        "Line" : 168,
        "CharPositionInLine" : 27
      },
      "21" : {
        "Text" : "# Apply for Cmake less than 3.1\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#cmake<3.1\r\n",
        "Line" : 189,
        "CharPositionInLine" : 7
      },
      "23" : {
        "Text" : "# Bugfix for windows/msvc systems\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# if(NOT DEFINED CMAKE_CXX${CMAKE_CXX_STANDARD}_STANDARD_COMPILE_OPTION) \r\n\n#   if((CMAKE_SYSTEM_NAME STREQUAL \"Darwin\") AND (CMAKE_CXX_COMPILER_ID STREQUAL \"AppleClang\"))\r\n\n#     # set(CMAKE_CXX_FLAGS \"-stdlib=libc++\")\r\n\n#     set(CMAKE_CXX${CMAKE_CXX_STANDARD}_STANDARD_COMPILE_OPTION \"-std=c++${CMAKE_CXX_STANDARD}\")\r\n\n#     set(CMAKE_CXX${CMAKE_CXX_STANDARD}_EXTENSION_COMPILE_OPTION \"-std=gnu++${CMAKE_CXX_STANDARD}\")\r\n\n#   elseif((CMAKE_SYSTEM_NAME STREQUAL \"Windows\") AND MSVC)\r\n\n#     set(CMAKE_CXX${CMAKE_CXX_STANDARD}_STANDARD_COMPILE_OPTION \"\")\r\n\n#     set(CMAKE_CXX${CMAKE_CXX_STANDARD}_EXTENSION_COMPILE_OPTION \"\")\r\n\n#   endif()\r\n\n# endif()\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# if (CMAKE_VERSION VERSION_LESS \"3.1\" AND CMAKE_COMPILER_IS_GNUCC)\r\n\n#   if (CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6.1)\r\n\n#     CHECK_CXX_COMPILER_FLAG(\"-std=c++${CMAKE_CXX_STANDARD}\"\r\n\n#       COMPILER_SUPPORTS_CXX${CMAKE_CXX_STANDARD})\r\n\n#     if(COMPILER_SUPPORTS_CXX${CMAKE_CXX_STANDARD})\r\n\n#       if(${CMAKE_SYSTEM_NAME} MATCHES \"Darwin\")\r\n\n#         set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++${CMAKE_CXX_STANDARD} -stdlib=libc++\")\r\n\n#       else()\r\n\n#         set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++${CMAKE_CXX_STANDARD}\")\r\n\n#       endif()\r\n\n#     else()\r\n\n#       CHECK_CXX_COMPILER_FLAG(\"-std=c++0x\" COMPILER_SUPPORTS_CXX0X)\r\n\n#       if(COMPILER_SUPPORTS_CXX0X)\r\n\n#         if(${CMAKE_SYSTEM_NAME} MATCHES \"Darwin\")\r\n\n#           set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++0x -stdlib=libc++\")\r\n\n#         else()\r\n\n#           set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++0x\")\r\n\n#         endif()\r\n\n#       else()\r\n\n#         message(FATAL_ERROR \"The compiler ${CMAKE_CXX_COMPILER} has no C++${CMAKE_CXX_STANDARD}.\")\r\n\n#       endif()\r\n\n#     endif()\r\n\n#   else() #gcc 6.1\r\n\n#     if(CMAKE_CXX_STANDARD EQUAL \"98\")\r\n\n#       set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++98\")\r\n\n#     endif() \r\n\n#   endif() \r\n\n# endif()#cmake<3.1\r\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "cmake/AddCompilerFlag.cmake" : {
      "ObjectId" : "a2cf7b5c79e380e406ea26666e63e3de1494b5fd",
      "LastModified" : "2017-02-07T20:07:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Add a given compiler flag to flags variables.\n\n# AddCompilerFlag(<flag> [<var>])\n\n# or\n\n# AddCompilerFlag(<flag> [C_FLAGS <var>] [CXX_FLAGS <var>] [C_RESULT <var>]\n\n#                        [CXX_RESULT <var>])\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010-2015 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n#  * Neither the names of contributing organizations nor the\n\n#    names of its contributors may be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compiling with FMA3 support may fail only at the assembler level.\n\n# In that case we need to have such an instruction in the test code\n",
        "Line" : 122,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# Compiling with libc++ not only requires a compiler that understands it, but also\n\n# the libc++ headers itself\n",
        "Line" : 129,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 4
    },
    "cmake/CMakeCXXPCHInformation.cmake" : {
      "ObjectId" : "e357c813668850bebbabae829315fc3c04b0b4ef",
      "LastModified" : "2017-02-07T20:07:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Precompiled Header creation for C++\n\n#\n\n# Author: Adam Strzelecki <ono@java.pl>\n\n# Copyright (c) 2014-2015 Adam Strzelecki. All rights reserved.\n\n# This code is licensed under the MIT License, see README.md.\n\n#\n\n# Defines compiler command templates based on existing C++ compiler.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/CMakeDetermineCXXPCHCompiler.cmake" : {
      "ObjectId" : "14bbbd2db4f019de748002177255502721a8e188",
      "LastModified" : "2017-02-07T20:07:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Precompiled Header creation for C++\n\n#\n\n# Author: Adam Strzelecki <ono@java.pl>\n\n# Copyright (c) 2014-2015 Adam Strzelecki. All rights reserved.\n\n# This code is licensed under the MIT License, see README.md.\n\n#\n\n# Main entry point for new compiler. Here it just proxies to C++ compiler.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/CMakePCHCompiler.cmake" : {
      "ObjectId" : "8670a7f34bdf624e576efd4b83f6e9cc9f32ebbf",
      "LastModified" : "2018-08-14T14:56:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakePCH\n\n# --------\n\n#\n\n# Modified for G+Smo (Angelos Mantzaflaris)\n\n#\n\n# Author: Adam Strzelecki <ono@java.pl>\n\n# Copyright (c) 2014-2015 Adam Strzelecki. All rights reserved.\n\n# This code is licensed under the MIT License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create precompiled header\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Relocate file\n",
        "Line" : 14,
        "CharPositionInLine" : 7
      },
      "3" : {
        "Text" : "#!\n",
        "Line" : 18,
        "CharPositionInLine" : 48
      },
      "4" : {
        "Text" : "#COMPILE_DEFINITIONS ${preDefs} # exports\n",
        "Line" : 41,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# bug: no effect, need fPIC later\n",
        "Line" : 42,
        "CharPositionInLine" : 30
      },
      "6" : {
        "Text" : "# ensure pdb goes to the same location, otherwise we get C2859\n\n# file(TO_NATIVE_PATH \"${CMAKE_CURRENT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/${pch_target}.dir\" pdb_dir)\n\n# /Yc - create precompiled header\n\n# /Fd - specify directory for pdb output\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#  /Fd${pdb_dir}\\\\\n",
        "Line" : 51,
        "CharPositionInLine" : 19
      },
      "8" : {
        "Text" : "# Use precompiled header\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Note: modification in pch file will not trigger target\n\n# re-compilation without the next lines:\n\n#add_custom_target(${target}-pch DEPENDS ${target_hdr})\n\n#add_dependencies(${target} ${target}-pch)\n",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# /Yu - use the given .h as a precompiled header\n\n# /Fp - exact location for precompiled header .h.pch\n\n# /FI - force include of the .h\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#Note: ${target_dir}/${header_name} does not exist, so PCH is used\n\n# -H: \"!\" used OK, \"x\" not used\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "################################################################################\n\n# PRIVATE MACROS\n\n################################################################################\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# copy compiler settings from existing compiler\n",
        "Line" : 109,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# setup compiler & platform specific flags same way C/CXX does\n",
        "Line" : 122,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# just use all settings from C/CXX compiler\n",
        "Line" : 128,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# redirect object file to NUL and just create precompiled header\n\n# /FoNUL - do not write output object file file\n\n# /Fp - specify location for precompiled header\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# disable pdb, we point to later to different location\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# copy all initial settings for C/CXXPCH from C/CXX & watch them\n",
        "Line" : 147,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "#init?\n",
        "Line" : 148,
        "CharPositionInLine" : 58
      },
      "20" : {
        "Text" : "# copies all custom compiler settings to PCH compiler\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# because ${value} expands backslashes\n",
        "Line" : 178,
        "CharPositionInLine" : 36
      },
      "CommentCount" : 22
    },
    "cmake/CMakeTestCXXPCHCompiler.cmake" : {
      "ObjectId" : "79e27367b42d750c8bf8bbc6470c41e53caa3d23",
      "LastModified" : "2017-02-07T20:07:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Precompiled Header creation for C++\n\n#\n\n# Author: Adam Strzelecki <ono@java.pl>\n\n# Copyright (c) 2014-2015 Adam Strzelecki. All rights reserved.\n\n# This code is licensed under the MIT License, see README.md.\n\n#\n\n# Just set the compiler works.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/CheckCCompilerFlag.cmake" : {
      "ObjectId" : "07ec156e02e3853a0db1c2c8ee7393efafa36b02",
      "LastModified" : "2017-02-07T20:07:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the C compiler supports a given flag.\n\n# CHECK_C_COMPILER_FLAG(<flag> <var>)\n\n#  <flag> - the compiler flag\n\n#  <var>  - variable to store the result\n\n# This internally calls the check_c_source_compiles macro.\n\n# See help for CheckCSourceCompiles for a listing of variables\n\n# that can modify the build.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n# Copyright 2011-2013 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n#  * The names of Kitware, Inc., the Insight Consortium, or the names of\n\n#    any consortium members, or of any contributors, may not be used to\n\n#    endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some compilers do not fail with a bad flag\n",
        "Line" : 53,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# GNU\n\n# clang\n\n# GNU\n\n# GNU\n\n# GNU\n\n# MSVC\n\n# MSVC\n\n# HP\n\n# SunPro\n\n# XL\n\n# Open64\n\n# ICC\n\n# ICC\n\n# ICC: File not found\n\n# ICC\n\n# ICC: option '-mfma' ignored, suggest using '-march=core-avx2'\n",
        "Line" : 54,
        "CharPositionInLine" : 60
      },
      "CommentCount" : 4
    },
    "cmake/CheckCXXCompilerFlag.cmake" : {
      "ObjectId" : "e3b0188a44b7ebb9261d580e2bcf6999ca857a29",
      "LastModified" : "2017-02-07T20:07:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the CXX compiler supports a given flag.\n\n# CHECK_CXX_COMPILER_FLAG(<flag> <var>)\n\n#  <flag> - the compiler flag\n\n#  <var>  - variable to store the result\n\n# This internally calls the check_cxx_source_compiles macro.  See help\n\n# for CheckCXXSourceCompiles for a listing of variables that can\n\n# modify the build.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n# Copyright 2011-2013 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n#  * The names of Kitware, Inc., the Insight Consortium, or the names of\n\n#    any consortium members, or of any contributors, may not be used to\n\n#    endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some compilers do not fail with a bad flag\n",
        "Line" : 53,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# GNU\n\n# clang\n\n# GNU\n\n# GNU\n\n# GNU\n\n# MSVC\n\n# MSVC\n\n# HP\n\n# SunPro\n\n# XL\n\n# Open64\n\n# ICC\n\n# ICC\n\n# ICC: File not found\n\n# ICC\n\n# ICC: option '-mfma' ignored, suggest using '-march=core-avx2'\n",
        "Line" : 54,
        "CharPositionInLine" : 60
      },
      "CommentCount" : 4
    },
    "cmake/CheckMicCCompilerFlag.cmake" : {
      "ObjectId" : "c278aa995b42b689f9488aa1c836ccc67dd94d6f",
      "LastModified" : "2017-02-07T20:07:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the MIC C compiler supports a given flag.\r\n\n# CHECK_MIC_C_COMPILER_FLAG(<flag> <var>)\r\n\n#  <flag> - the compiler flag\r\n\n#  <var>  - variable to store the result\r\n\n# This internally calls the check_c_source_compiles macro.  See help\r\n\n# for CheckCSourceCompiles for a listing of variables that can\r\n\n# modify the build.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\r\n\n# Copyright 2006-2009 Kitware, Inc.\r\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\r\n\n# Copyright 2011-2013 Matthias Kretz <kretz@kde.org>\r\n\n#\r\n\n# Redistribution and use in source and binary forms, with or without\r\n\n# modification, are permitted provided that the following conditions are\r\n\n# met:\r\n\n#\r\n\n#  * Redistributions of source code must retain the above copyright notice,\r\n\n#    this list of conditions and the following disclaimer.\r\n\n#\r\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\r\n\n#    this list of conditions and the following disclaimer in the documentation\r\n\n#    and/or other materials provided with the distribution.\r\n\n#\r\n\n#  * The names of Kitware, Inc., the Insight Consortium, or the names of\r\n\n#    any consortium members, or of any contributors, may not be used to\r\n\n#    endorse or promote products derived from this software without\r\n\n#    specific prior written permission.\r\n\n#\r\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\r\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\r\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\r\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\n#=============================================================================\r\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GNU\r\n\n# clang\r\n\n# GNU\r\n\n# GNU\r\n\n# GNU\r\n\n# MSVC\r\n\n# HP\r\n\n# SunPro\r\n\n# XL\r\n\n# Open64\r\n\n# ICC\r\n\n# ICC\r\n\n# ICC: File not found\r\n",
        "Line" : 62,
        "CharPositionInLine" : 59
      },
      "CommentCount" : 3
    },
    "cmake/CheckMicCXXCompilerFlag.cmake" : {
      "ObjectId" : "8068d437f5d264a85134c0459158a30b662167cc",
      "LastModified" : "2017-02-07T20:07:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the MIC CXX compiler supports a given flag.\r\n\n# CHECK_MIC_CXX_COMPILER_FLAG(<flag> <var>)\r\n\n#  <flag> - the compiler flag\r\n\n#  <var>  - variable to store the result\r\n\n# This internally calls the check_cxx_source_compiles macro.  See help\r\n\n# for CheckCXXSourceCompiles for a listing of variables that can\r\n\n# modify the build.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\r\n\n# Copyright 2006-2009 Kitware, Inc.\r\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\r\n\n# Copyright 2011-2013 Matthias Kretz <kretz@kde.org>\r\n\n#\r\n\n# Redistribution and use in source and binary forms, with or without\r\n\n# modification, are permitted provided that the following conditions are\r\n\n# met:\r\n\n#\r\n\n#  * Redistributions of source code must retain the above copyright notice,\r\n\n#    this list of conditions and the following disclaimer.\r\n\n#\r\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\r\n\n#    this list of conditions and the following disclaimer in the documentation\r\n\n#    and/or other materials provided with the distribution.\r\n\n#\r\n\n#  * The names of Kitware, Inc., the Insight Consortium, or the names of\r\n\n#    any consortium members, or of any contributors, may not be used to\r\n\n#    endorse or promote products derived from this software without\r\n\n#    specific prior written permission.\r\n\n#\r\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\r\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\r\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\r\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\n#=============================================================================\r\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GNU\r\n\n# clang\r\n\n# GNU\r\n\n# GNU\r\n\n# GNU\r\n\n# MSVC\r\n\n# HP\r\n\n# SunPro\r\n\n# XL\r\n\n# Open64\r\n\n# ICC\r\n\n# ICC\r\n\n# ICC: File not found\r\n",
        "Line" : 62,
        "CharPositionInLine" : 59
      },
      "CommentCount" : 3
    },
    "cmake/CodeCoverage.cmake" : {
      "ObjectId" : "ac10775c2bc1adfe750afc8bd5254b6498318c22",
      "LastModified" : "2018-08-14T14:56:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012 - 2017, Lars Bilke\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without modification,\n\n# are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice, this\n\n#    list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its contributors\n\n#    may be used to endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# CHANGES:\n\n#\n\n# 2012-01-31, Lars Bilke\n\n# - Enable Code Coverage\n\n#\n\n# 2013-09-17, Joakim Söderberg\n\n# - Added support for Clang.\n\n# - Some additional usage instructions.\n\n#\n\n# 2016-02-03, Lars Bilke\n\n# - Refactored functions to use named parameters\n\n#\n\n# 2017-06-02, Lars Bilke\n\n# - Merged with modified version from github.com/ufz/ogs\n\n#\n\n#\n\n# USAGE:\n\n#\n\n# 1. Copy this file into your cmake modules path.\n\n#\n\n# 2. Add the following line to your CMakeLists.txt:\n\n#      include(CodeCoverage)\n\n#\n\n# 3. Append necessary compiler flags:\n\n#      APPEND_COVERAGE_COMPILER_FLAGS()\n\n#\n\n# 4. If you need to exclude additional directories from the report, specify them\n\n#    using the COVERAGE_EXCLUDES variable before calling SETUP_TARGET_FOR_COVERAGE.\n\n#    Example:\n\n#      set(COVERAGE_EXCLUDES 'dir1/*' 'dir2/*')\n\n#\n\n# 5. Use the functions described below to create a custom make target which\n\n#    runs your test executable and produces a code coverage report.\n\n#\n\n# 6. Build a Debug build:\n\n#      cmake -DCMAKE_BUILD_TYPE=Debug ..\n\n#      make\n\n#      make my_coverage_target\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check prereqs\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOT GCOV_PATH\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\"\n",
        "Line" : 117,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Defines a target for running and collection code coverage information\n\n# Builds dependencies, runs the given executable and outputs reports.\n\n# NOTE! The executable should always have a ZERO as exit code otherwise\n\n# the coverage generation will not complete.\n\n#\n\n# SETUP_TARGET_FOR_COVERAGE(\n\n#     NAME testrunner_coverage                    # New target name\n\n#     EXECUTABLE testrunner -j ${PROCESSOR_COUNT} # Executable in PROJECT_BINARY_DIR\n\n#     DEPENDENCIES testrunner                     # Dependencies to build first\n\n# )\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 144,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 148,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# Setup target\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 153,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Create baseline to make sure untouched files show up in the report\n",
        "Line" : 155,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Run tests\n",
        "Line" : 158,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 161,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# add baseline counters\n",
        "Line" : 163,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE\n",
        "Line" : 180,
        "CharPositionInLine" : 14
      },
      "15" : {
        "Text" : "# Defines a target for running and collection code coverage information\n\n# Builds dependencies, runs the given executable and outputs reports.\n\n# NOTE! The executable should always have a ZERO as exit code otherwise\n\n# the coverage generation will not complete.\n\n#\n\n# SETUP_TARGET_FOR_COVERAGE_COBERTURA(\n\n#     NAME ctest_coverage                    # New target name\n\n#     EXECUTABLE ctest -j ${PROCESSOR_COUNT} # Executable in PROJECT_BINARY_DIR\n\n#     DEPENDENCIES executable_target         # Dependencies to build first\n\n# )\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# NOT SIMPLE_PYTHON_EXECUTABLE\n",
        "Line" : 201,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# NOT GCOVR_PATH\n",
        "Line" : 205,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# Combine excludes to several -e arguments\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Run tests\n",
        "Line" : 215,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# Running gcovr\n",
        "Line" : 218,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 226,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE_COBERTURA\n",
        "Line" : 232,
        "CharPositionInLine" : 14
      },
      "23" : {
        "Text" : "# APPEND_COVERAGE_COMPILER_FLAGS\n",
        "Line" : 238,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 24
    },
    "cmake/FindDbgHelp.cmake" : {
      "ObjectId" : "98e9f1c8684bd78a0631cca6afe47e2e94f1b7ad",
      "LastModified" : "2018-08-14T14:56:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INCLUDE(HandleLibraryTypes)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Or else CMake 2.6.0 will find the dll in system32 on windows\n",
        "Line" : 11,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "# search again if the library wasn't found in the dependencies package\n",
        "Line" : 13,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : "#PATH_SUFFIXES lib Lib lib/x64 Lib/x64\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Handle the REQUIRED argument and set DBGHELP_FOUND\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindEigen3.cmake" : {
      "ObjectId" : "9c546a05d859b18c49554d7ee7221cc486b7760e",
      "LastModified" : "2017-02-07T20:07:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindGMP.cmake" : {
      "ObjectId" : "246f549c3087ef7587b6b9ee2e792575ebb1ae20",
      "LastModified" : "2018-08-14T14:56:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n## FindGMP.cmake\n\n## This file is part of the G+Smo library. \n\n##\n\n## Author: Angelos Mantzaflaris \n\n## Copyright (C) 2012 - 2015 RICAM-Linz.\n\n##\n\n##\n\n## GMP_FOUND       - system has GMP lib\n\n## GMP_INCLUDE_DIR - the GMP include directory\n\n## GMP_LIBRARY     - Libraries needed to use GMP\n\n## GMPXX_LIBRARY   - Libraries needed to use GMP C++\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#unset(GMP_LIBRARY CACHE)\n\n#unset(GMPXX_LIBRARY CACHE)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for static add first libgmp.a\n",
        "Line" : 23,
        "CharPositionInLine" : 45
      },
      "CommentCount" : 3
    },
    "cmake/FindIpOpt.cmake" : {
      "ObjectId" : "97481f8a430b3d9988ebc2d5ff6e3e1589bd7067",
      "LastModified" : "2018-08-14T14:56:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n## FindIpOpt.cmake\n\n## This file is part of the G+Smo library. \n\n##\n\n## Author: Angelos Mantzaflaris \n\n## Copyright (C) 2016 RICAM-Linz.\n\n##\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(\"IPOPT_INCLUDE_DIR: ${IPOPT_INCLUDE_DIR}\")\n\n#message(\"IPOPT_LIBRARY    : ${IPOPT_LIBRARY}\")\n",
        "Line" : 23,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "cmake/FindMKL.cmake" : {
      "ObjectId" : "5c407e9df1eb183a8b75ed1876df6360de2387b1",
      "LastModified" : "2018-08-14T14:56:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\r\n\n## FindMKL.cmake\r\n\n## This file is part of the G+Smo library. \r\n\n##\r\n\n## Author: Angelos Mantzaflaris \r\n\n## Copyright (C) 2018 RICAM-Linz.\r\n\n##\r\n\n##\r\n\n## Set INTEL_ROOT to the intel folder in your system\r\n\n##\r\n\n## Options:\r\n\n##\r\n\n##   MKL_SDL    :  Single Dynamic Library interface\r\n\n##                 When this option is enabled all the other options have no effect\r\n\n##   MKL_STATIC :  use static linking\r\n\n##   MKL_ILP64  :  Use 64bit integers\r\n\n##\r\n\n## This module defines the following variables:\r\n\n##\r\n\n##   MKL_FOUND            : True if MKL is found\r\n\n##   MKL_INCLUDE_DIR      : where to find mkl.h\r\n\n##   MKL_INCLUDE_DIRS     : set when MKL_INCLUDE_DIR found\r\n\n##   MKL_LIBRARIES        : the library to link against.\r\n\n##\r\n\n## Related info:\r\n\n##\r\n\n## https://software.intel.com/en-us/mkl-linux-developer-guide-selecting-libraries-to-link-with\r\n\n## https://software.intel.com/en-us/mkl-linux-developer-guide-dynamically-selecting-the-interface-and-threading-layer\r\n\n## https://software.intel.com/en-us/articles/intel-mkl-link-line-advisor\r\n\n##\r\n\n######################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(MKL_THREADING CACHE STRING \"MKL multithreading backend\")\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# beware of segfault\r\n",
        "Line" : 36,
        "CharPositionInLine" : 102
      },
      "3" : {
        "Text" : "# Find include dir\r\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find include directory\r\n\n#  There is no include folder under linux\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find libraries\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Handle suffix\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# intel64, ia32 # bad for MacOS\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# else: Intel MIC\r\n\n# set(MPL_ARCH mic) \r\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Using The Single Dynamic Library (SDL) \r\n",
        "Line" : 90,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# MKL is composed by four layers: Interface, Threading, Computational and RTL\r\n",
        "Line" : 93,
        "CharPositionInLine" : 7
      },
      "11" : {
        "Text" : "####################### Computational layer #####################\r\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# mkl_core links to pthreads\r\n",
        "Line" : 107,
        "CharPositionInLine" : 27
      },
      "13" : {
        "Text" : "######################### Interface layer #######################\r\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "######################## Threading layer ########################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "#find_library(MKL_THREADING_LIBRARY mkl_pgi_thread\r\n\n#find_library(MKL_THREADING_LIBRARY mkl_gnu_thread\r\n\n#find_library(MKL_THREADING_LIBRARY mkl_tbb_thread\r\n",
        "Line" : 116,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "############## Runtime-libraries Layer (RTL) ##################\r\n",
        "Line" : 120,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "####################### Cluster libraries #####################\r\n",
        "Line" : 128,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#elseif(\"x${MKL_BLACS_MPI}\" STREQUAL \"xMSMPI\")\r\n\n#elseif(\"x${MKL_BLACS_MPI}\" STREQUAL \"xMPICH2\")\r\n",
        "Line" : 136,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#Note: libmkl_blacs${ARCH_PREFIX} is deprecated!\r\n",
        "Line" : 139,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# VML: avx512_mic, mc2, mc, acx512, avx, mc3, cmpt, avx2, def\r\n\n#find_library(MKL_VML_LIBRARY NAMES mkl_vml_XXX PATHS ${MKL_ROOT}/lib/${MPL_ARCH})\r\n\n#find_library(MPI_LIBRARY mpi_mt PATHS /opt/intel/composer_xe_2013.0.079/mpirt/lib/${MPL_ARCH})\r\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#message(\"MKL_INCLUDE_DIR ${MKL_INCLUDE_DIR}\")\r\n\n#message(\"MKL_CORE_LIBRARY: ${MKL_CORE_LIBRARY}\")\r\n\n#message(\"MKL_INTERFACE_LIBRARY: ${MKL_INTERFACE_LIBRARY}\")\r\n\n#message(\"MKL_THREADING_LIBRARY: ${MKL_THREADING_LIBRARY}\")\r\n\n#message(\"MKL_RTL_LIBRARY: ${MKL_RTL_LIBRARY}\")\r\n\n#message(\"MKL_FFT_LIBRARY: ${MKL_FFT_LIBRARY}\")\r\n\n#message(\"MKL_SCALAPACK_LIBRARY: ${MKL_SCALAPACK_LIBRARY}\")\r\n\n#message(\"MKL_BLACS_LIBRARY: ${MKL_BLACS_LIBRARY}\")\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "cmake/FindMPFR.cmake" : {
      "ObjectId" : "13fd43c21cdfe273e7913b44ab762ed9abaef5aa",
      "LastModified" : "2017-02-07T20:07:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2008-2010 Kent State University\n\n# Copyright (c) 2011-2012 Texas A&M University\n\n#\n\n# This file is distributed under the MIT License. See the accompanying file\n\n# LICENSE.txt or http://www.opensource.org/licenses/mit-license.php for terms\n\n# and conditions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME: How do I find the version of MPFR that I want to use?\n\n# What versions are available?\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOTE: MPFR prefix is understood to be the path to the root of the MPFR\n\n# installation library.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindParasolid.cmake" : {
      "ObjectId" : "f087a7013083fc76d05827aa005b273bc38d2a9a",
      "LastModified" : "2017-02-07T20:07:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: How do I find the version of PARASOLID that I want to use?\n\n# What versions are available?\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# NOTE: Parasoid_DIR is understood to be the path to the root of the PARASOLID\n\n# installation library.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#parasolid_typedefs.h \n",
        "Line" : 8,
        "CharPositionInLine" : 51
      },
      "3" : {
        "Text" : "#   if(PARASOLID_FIND_REQUIRED) ## TO DO, fix\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#   endif()\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindPardiso.cmake" : {
      "ObjectId" : "0aa7341821c62a236b2ad06ecd23983444704fe4",
      "LastModified" : "2018-08-14T14:56:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n## FindPardiso.cmake ---\n\n## This file is part of the G+Smo library. \n\n##\n\n## Author: Angelos Mantzaflaris \n\n## Copyright (C) 2012 - 2015 RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# First try: Pardiso compiled with Intel fortran\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set_property(TARGET Pardiso PROPERTY IMPORTED_IMPLIB   ${PARDISO_LIBRARY.lib}) #ms windows\n\n#set_property(TARGET Pardiso PROPERTY IMPORTED_LINK_INTERFACE_LANGUAGES Fortran)\n",
        "Line" : 18,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "#find_library(IFCORE_LIB NAMES ifcore PATHS /opt/intel/mkl/lib/intel64)\n\n#message(\"IFCORE_LIB    : ${IFCORE_LIB}\")\n\n#set_target_properties(Pardiso PROPERTIES IMPORTED_LINK_INTERFACE_LIBRARIES ${IFCORE_LIB})\n\n#SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -lifcore\")\n",
        "Line" : 21,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# Note libmkl_intel.so or libmkl_intel_lp64.so contains \"pardiso/pardiso64\"\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Second try: Pardiso compiled with GNU GCC\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# pardiso500-MPI-GNU472-X86-64\n",
        "Line" : 43,
        "CharPositionInLine" : 260
      },
      "7" : {
        "Text" : "#set_property(TARGET Pardiso PROPERTY IMPORTED_IMPLIB   ${PARDISO_LIBRARY.lib}) #ms windows\n",
        "Line" : 48,
        "CharPositionInLine" : 5
      },
      "8" : {
        "Text" : "#find_package(OpenMP)\n\n#set_target_properties(Pardiso IMPORTED_LINK_INTERFACE_LIBRARIES ${OpenMP_CXX_FLAGS})\n",
        "Line" : 55,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "#   get_filename_component(PARDISO_LIBRARY_DIR ${PARDISO_LIBRARY} PATH)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#message(\"PARDISO_LIBRARY    : ${PARDISO_LIBRARY}\")\n",
        "Line" : 64,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 11
    },
    "cmake/FindSSE.cmake" : {
      "ObjectId" : "6ece876896810dd6823f40c84cfdf8ebe1206466",
      "LastModified" : "2017-02-07T20:07:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check if SSE instructions are available on the machine where \n\n# the project is compiled.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# /proc/cpuinfo apparently omits sse3 :(\n",
        "Line" : 15,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "# TODO\n",
        "Line" : 79,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 3
    },
    "cmake/FindSuperLU.cmake" : {
      "ObjectId" : "892c91fd3a5915e9fc56e3fa216966219a649674",
      "LastModified" : "2017-02-07T20:07:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Search in user-defined paths only\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Search in default paths\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Search in user-defined paths only\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Search in default paths\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/FindTR1.cmake" : {
      "ObjectId" : "50fef60f5bf7b553855e3cf910c4dee4cf7185a9",
      "LastModified" : "2017-02-07T20:07:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check availability of C++ TR1 contents.\n\n#\n\n# Sets the following variables:\n\n#\n\n# TR1_SHARED_PTR_FOUND          -- std::tr1::shared_ptr1<T> available\n\n# TR1_SHARED_PTR_USE_TR1_MEMORY -- #include <tr1/memory>\n\n# TR1_SHARED_PTR_USE_MEMORY     -- #include <memory>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# std::tr1::shared_ptr<T>\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#check_cxx_source_compiles(\n\n#    \"\n\n#        #include <memory>\n\n#        int main() {\n\n#            std::shared_ptr<int> ptr;\n\n#            return 0;\n\n#        }\n\n#    \"\n\n#    STD_SHARED_PTR_FOUND)\n\n#if (STD_SHARED_PTR_FOUND)\n\n#   mark_as_advanced (STD_SHARED_PTR_FOUND)\n\n#else()\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#endif(STD_SHARED_PTR_FOUND)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# std::unique_ptr<T>\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#check_cxx_source_compiles(\n\n#    \"\n\n#        #include <memory>\n\n#        int main() {\n\n#            std::unique_ptr<int> ptr;\n\n#            return 0;\n\n#        }\n\n#    \"\n\n#    STD_UNIQUE_PTR_FOUND)\n\n#if (STD_UNIQUE_PTR_FOUND)\n\n#   mark_as_advanced (STD_UNIQUE_PTR_FOUND)\n\n#else()\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# boost::movelib::unique_ptr requires boost libraries >= 1.57.0\n\n# see https://dieboostcppbibliotheken.de/boost.smartpointers (German)\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#endif(TR1_UNIQUE_PTR_USE_TR1_MEMORY)\n\n#endif(TR1_UNIQUE_PTR_FOUND)\n\n#endif(STD_UNIQUE_PTR_FOUND)\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# std::tr1::unordered_map<K, V>\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#check_cxx_source_compiles(\n\n#    \"\n\n#        #include <tr1/unordered_map>\n\n#        int main() {\n\n#            std::tr1::unordered_map<int, int> m;\n\n#            return 0;\n\n#        }\n\n#    \"\n\n#    TR1_UNORDERED_MAP_USE_TR1_UNORDERED_MAP)\n\n#check_cxx_source_compiles(\n\n#    \"\n\n#        #include <unordered_map>\n\n#        int main() {\n\n#            std::tr1::unordered_map<int, int> m;\n\n#            return 0;\n\n#        }\n\n#    \"\n\n#    TR1_UNORDERED_MAP_USE_UNORDERED_MAP)\n\n#\n\n#set (TR1_UNORDERED_MAP -NOTFOUND)\n\n#if (TR1_UNORDERED_MAP_USE_TR1_UNORDERED_MAP)\n\n#  set (TR1_UNORDERED_MAP_FOUND TRUE)\n\n#endif (TR1_UNORDERED_MAP_USE_TR1_UNORDERED_MAP)\n\n#if (TR1_UNORDERED_MAP_USE_UNORDERED_MAP)\n\n#  set (TR1_UNORDERED_MAP_FOUND TRUE)\n\n#endif (TR1_UNORDERED_MAP_USE_UNORDERED_MAP)\n\n#\n\n#mark_as_advanced (TR1_UNORDERED_MAP_FOUND)\n\n#mark_as_advanced (TR1_UNORDERED_MAP_USE_TR1_UNORDERED_MAP)\n\n#mark_as_advanced (TR1_UNORDERED_MAP_USE_UNORDERED_MAP)\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/FindTRILINOS.cmake" : {
      "ObjectId" : "f540eeb3a9010ed1d73625fba25d62a45ab53ce5",
      "LastModified" : "2017-02-07T20:07:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n## FindTRILINOS.cmake\n\n## This file is part of the G+Smo library. \n\n##\n\n## Author: Angelos Mantzaflaris \n\n## Copyright (C) 2016 RICAM-Linz.\n\n##\n\n## Required TRILINOS packages are:\n\n## - Epetra\n\n## - Teuchos\n\n##\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#unset(AZTECOO_FOUND CACHE)\n\n#unset(AZTECOO_LIBRARIES CACHE)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Experimental\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#SET(TRILINOS_INCLUDE_DIR ${TRILINOS_INCLUDE_DIR} ${KOKKOS_INCLUDE_PATH})\n",
        "Line" : 78,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#IF(NOT EPETRA_FOUND)\n\n#\tMESSAGE(STATUS \"Epetra not found.\")\n\n#ENDIF()\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#IF(KOMPLEX_FOUND)\n\n#ELSE(KOMPLEX_FOUND)\n\n#\tMESSAGE(STATUS \"Komplex not found.\")\n\n#\tSET(HAVE_KOMPLEX NO)\n\n#ENDIF()\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Experimental\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\tmessage(\"here is LIBS: ${TRILINOS_LIBRARIES}\")\n\n#\tmark_as_advanced (TRILINOS_LIBRARIES)\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/FindTaucs.cmake" : {
      "ObjectId" : "d6e1fdf686dba25ed5e3a92a5985441826939833",
      "LastModified" : "2017-02-07T20:07:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindTclap.cmake" : {
      "ObjectId" : "a45849e8da521cc3f095b5d0c1a34f1db40a7852",
      "LastModified" : "2017-02-07T20:07:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n## FindTclap.cmake ---\n\n## This file is part of the G+Smo library. \n\n##\n\n## Author: Harald Weiner\n\n## Copyright (C) 2015 RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindUmfpack.cmake" : {
      "ObjectId" : "2aae38cc8bb2f7fd35079ba4dec368e3c3802b89",
      "LastModified" : "2017-02-07T20:07:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if(CMAKE_Fortran_COMPILER_WORKS)\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#else (AMD_LIBRARY)\r\n\n#  set(UMFPACK_LIBRARIES FALSE)\r\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#else (COLAMD_LIBRARY)\r\n\n#  set(UMFPACK_LIBRARIES FALSE)\r\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#endif(CMAKE_Fortran_COMPILER_WORKS)\r\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/OptimizeForArchitecture.cmake" : {
      "ObjectId" : "6e643d1f2bcbe6a3f07f42852e4c1bdc1b2aaafd",
      "LastModified" : "2018-08-14T14:56:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determine the host CPU feature set and determine the best set of compiler\n\n# flags to enable all supported SIMD relevant features. Alternatively, the\n\n# target CPU can be explicitly selected (for generating more generic binaries\n\n# or for targeting a different system).\n\n# Compilers provide e.g. the -march=native flag to achieve a similar result.\n\n# This fails to address the need for building for a different microarchitecture\n\n# than the current host.\n\n# The script tries to deduce all settings from the model and family numbers of\n\n# the CPU instead of reading the CPUID flags from e.g. /proc/cpuinfo. This makes\n\n# the detection more independent from the CPUID code in the kernel (e.g. avx2 is\n\n# not listed on older kernels).\n\n#\n\n# Usage:\n\n# OptimizeForArchitecture()\n\n# If either of Vc_SSE_INTRINSICS_BROKEN, Vc_AVX_INTRINSICS_BROKEN,\n\n# Vc_AVX2_INTRINSICS_BROKEN is defined and set, the OptimizeForArchitecture\n\n# macro will consequently disable the relevant features via compiler flags.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010-2016 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#  * Neither the names of contributing organizations nor the\n\n#    names of its contributors may be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# taken from the Intel ORM\n\n# http://www.intel.com/content/www/us/en/processors/architectures-software-developer-manuals.html\n\n# CPUID Signature Values of Of Recent Intel Microarchitectures\n\n# 4E 5E       | Skylake microarchitecture\n\n# 3D 47 56    | Broadwell microarchitecture\n\n# 3C 45 46 3F | Haswell microarchitecture\n\n# 3A 3E       | Ivy Bridge microarchitecture\n\n# 2A 2D       | Sandy Bridge microarchitecture\n\n# 25 2C 2F    | Intel microarchitecture Westmere\n\n# 1A 1E 1F 2E | Intel microarchitecture Nehalem\n\n# 17 1D       | Enhanced Intel Core microarchitecture\n\n# 0F          | Intel Core microarchitecture\n\n#\n\n# Intel SDM Vol. 3C 35-1 / December 2016:\n\n# 57          | Xeon Phi 3200, 5200, 7200  [Knights Landing]\n\n# 85          | Future Xeon Phi\n\n# 8E 9E       | 7th gen. Core              [Kaby Lake]\n\n# 55          | Future Xeon                [Skylake w/ AVX512]\n\n# 4E 5E       | 6th gen. Core / E3 v5      [Skylake w/o AVX512]\n\n# 56          | Xeon D-1500                [Broadwell]\n\n# 4F          | Xeon E5 v4, E7 v4, i7-69xx [Broadwell]\n\n# 47          | 5th gen. Core / Xeon E3 v4 [Broadwell]\n\n# 3D          | M-5xxx / 5th gen.          [Broadwell]\n\n# 3F          | Xeon E5 v3, E7 v3, i7-59xx [Haswell-E]\n\n# 3C 45 46    | 4th gen. Core, Xeon E3 v3  [Haswell]\n\n# 3E          | Xeon E5 v2, E7 v2, i7-49xx [Ivy Bridge-E]\n\n# 3A          | 3rd gen. Core, Xeon E3 v2  [Ivy Bridge]\n\n# 2D          | Xeon E5, i7-39xx           [Sandy Bridge]\n\n# 2F          | Xeon E7\n\n# 2A          | Xeon E3, 2nd gen. Core     [Sandy Bridge]\n\n# 2E          | Xeon 7500, 6500 series\n\n# 25 2C       | Xeon 3600, 5600 series, Core i7, i5 and i3\n\n#\n\n# Values from the Intel SDE:\n\n# 5C | Goldmont\n\n# 5A | Silvermont\n\n# 57 | Knights Landing\n\n# 66 | Cannonlake\n\n# 55 | Skylake Server\n\n# 4E | Skylake Client\n\n# 3C | Broadwell (likely a bug in the SDE)\n\n# 3C | Haswell\n",
        "Line" : 89,
        "CharPositionInLine" : 9
      },
      "3" : {
        "Text" : "# 57\n",
        "Line" : 131,
        "CharPositionInLine" : 33
      },
      "4" : {
        "Text" : "# Knights Landing\n",
        "Line" : 132,
        "CharPositionInLine" : 44
      },
      "5" : {
        "Text" : "# 8E, 9E\n",
        "Line" : 139,
        "CharPositionInLine" : 62
      },
      "6" : {
        "Text" : "# 55\n",
        "Line" : 141,
        "CharPositionInLine" : 37
      },
      "7" : {
        "Text" : "# 4E, 5E\n",
        "Line" : 143,
        "CharPositionInLine" : 60
      },
      "8" : {
        "Text" : "# 3D, 47, 4F, 56\n",
        "Line" : 145,
        "CharPositionInLine" : 106
      },
      "9" : {
        "Text" : "# Itanium (not supported)\n",
        "Line" : 172,
        "CharPositionInLine" : 34
      },
      "10" : {
        "Text" : "# NetBurst\n",
        "Line" : 174,
        "CharPositionInLine" : 35
      },
      "11" : {
        "Text" : "# Not sure whether this must be 3 or even 4 instead\n",
        "Line" : 176,
        "CharPositionInLine" : 34
      },
      "12" : {
        "Text" : "# 16h\n",
        "Line" : 183,
        "CharPositionInLine" : 35
      },
      "13" : {
        "Text" : "# 15h\n",
        "Line" : 185,
        "CharPositionInLine" : 35
      },
      "14" : {
        "Text" : "# 14h\n",
        "Line" : 191,
        "CharPositionInLine" : 35
      },
      "15" : {
        "Text" : "# 12h\n\n# 10h\n",
        "Line" : 193,
        "CharPositionInLine" : 35
      },
      "16" : {
        "Text" : "# I don't know the right number to put here. This is just a guess from the hardware I have access to\n",
        "Line" : 198,
        "CharPositionInLine" : 35
      },
      "17" : {
        "Text" : "# add this clause to remove it from the else clause\n",
        "Line" : 385,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "#if(MSVC)\n",
        "Line" : 457,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# G+Smo: VS 11\n",
        "Line" : 458,
        "CharPositionInLine" : 45
      },
      "20" : {
        "Text" : "# MSVC on 32 bit can select /arch:SSE2 (since 2010 also /arch:AVX)\n\n# MSVC on 64 bit cannot select anything (should have changed with MSVC 2010)\n",
        "Line" : 459,
        "CharPositionInLine" : 9
      },
      "21" : {
        "Text" : "# ICC (on Linux)\n",
        "Line" : 482,
        "CharPositionInLine" : 56
      },
      "22" : {
        "Text" : "# This is the Intel compiler, so SSE2 is a very reasonable baseline.\n",
        "Line" : 506,
        "CharPositionInLine" : 12
      },
      "23" : {
        "Text" : "# not MSVC and not ICC => GCC, Clang, Open64\n",
        "Line" : 510,
        "CharPositionInLine" : 13
      },
      "24" : {
        "Text" : "#G+Smo\n",
        "Line" : 575,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 25
    },
    "cmake/ctest_script.cmake" : {
      "ObjectId" : "a367d02554f0027d4edc80a78651772ed48779c8",
      "LastModified" : "2019-04-03T11:18:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n## ctest_script.txt\n\n## This file is part of the G+Smo library.\n\n## https://raw.githubusercontent.com/gismo/gismo/stable/cmake/ctest_script.cmake\n\n##\n\n## Author: Angelos Mantzaflaris\n\n## Copyright (C) 2012-2018\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "######################################################################\n\n##\n\n## To execute:\n\n##\n\n##   ctest -S ctest_script.cmake\n\n##\n\n## The script creates sources and build folders in the same directory\n\n##\n\n## For more verbosity add the flag\n\n##\n\n##   ctest -S /path/to/ctest_script.cmake -V\n\n##\n\n## or even -VV.\n\n##\n\n## Options can be passed by arguments (default options are displayed here):\n\n## NOTE: Line wrap can be done under Linux/macOS with \\, under Windows with ^\n\n##\n\n## ctest -S ctest_script.cmake -D CTEST_TEST_MODEL=Experimental \\\n\n##   -D CTEST_CONFIGURATION_TYPE=Release -D CTEST_BUILD_JOBS=8 \\\n\n##   -D CTEST_CMAKE_GENERATOR=\"Unix Makefiles\" -D CNAME=gcc -D CXXNAME=g++ \\\n\n##   -D CTEST_TEST_TIMEOUT=100 -D CTEST_MEMORYCHECK_TYPE=Valgrind \\\n\n##   -D DO_COVERAGE=TRUE\n\n##\n\n## Different dashboard projects and subprojects are possible:\n\n##\n\n## ctest -S /path/to/ctest_script.cmake -D PROJECT_NAME=myGismo \\\n\n##   -D CTEST_BUILD_JOBS=2 -D CTEST_CMAKE_GENERATOR=\"Unix Makefiles\" \\\n\n##   -D CTEST_TEST_TIMEOUT=100 -D LABELS_FOR_SUBPROJECTS='gismo;examples;unittests' \\\n\n##   -D CTEST_SOURCE_DIRECTORY=./gismo_src -D CTEST_BINARY_DIRECTORY=./build\n\n##\n\n## On linux this script can be invoked in a cronjob. e.g.:\n\n##    $ crontab -e\n\n## Add the line:\n\n##    0 3 * * * ctest -S /path/toctest_script.cmake -D CTEST_TEST_MODEL=Nightly -Q\n\n## save and exit. Now with\n\n##    $ crontab -l\n\n## you can see the scheduled task. The script will\n\n## be executed every night at 03:00am.\n\n##\n\n######################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "######################################################################\n\n##\n\n## Complete Options List:\n\n##\n\n## ctest parameters: (ctest -D ...)\n\n##   CMAKE_ARGS\n\n##   CNAME\n\n##   CTEST_BINARY_DIRECTORY\n\n##   CTEST_BUILD_JOBS\n\n##   CTEST_BUILD_NAME\n\n##   CTEST_CMAKE_GENERATOR\n\n##   CTEST_CONFIGURATION_TYPE\n\n##   CTEST_COVERAGE_COMMAND\n\n##   CTEST_MEMORYCHECK_TYPE\n\n##   CTEST_SITE\n\n##   CTEST_SOURCE_DIRECTORY\n\n##   CTEST_TEST_JOBS\n\n##   CTEST_TEST_MODEL\n\n##   CTEST_TEST_TIMEOUT\n\n##   CXXNAME\n\n##   DO_COVERAGE\n\n##   DROP_LOCATION\n\n##   DROP_METHOD\n\n##   DROP_SITE\n\n##   EMPTY_BINARY_DIRECTORY\n\n##   GISMO_BRANCH\n\n##   GISMO_SUBMODULES\n\n##   LABELS_FOR_SUBPROJECTS\n\n##   PROJECT_NAME\n\n##   UPDATE_MODULES\n\n##   UPDATE_TYPE\n\n##\n\n## Environment\n\n##   CFLAGS\n\n##   CXXFLAGS\n\n##   LDFLAGS\n\n##\n\n######################################################################\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMake 3.0\n",
        "Line" : 92,
        "CharPositionInLine" : 19
      },
      "4" : {
        "Text" : "# CMake 3.1\n",
        "Line" : 98,
        "CharPositionInLine" : 19
      },
      "5" : {
        "Text" : "# CMake 3.1.3\n",
        "Line" : 102,
        "CharPositionInLine" : 19
      },
      "6" : {
        "Text" : "# CMake 3.3\n",
        "Line" : 106,
        "CharPositionInLine" : 19
      },
      "7" : {
        "Text" : "## #################################################################\n\n## Configuration\n\n## #################################################################\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Test model (Nightly, Continuous, Experimental)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Configuration type (Debug Release RelWithDebInfo MinSizeRel)\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Number of jobs for build/test (later on)\n\n#set(CTEST_BUILD_JOBS 8)\n\n#set(CTEST_TEST_JOBS 10)\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The Generator for CMake\n\n# (\"Unix Makefiles\", \"Ninja\", \"Xcode\", \"NMake Makefiles\", \"NMake Makefiles JOM\",\n\n#  \"MinGW Makefiles\", \"Visual Studio 12 2013\", \"Visual Studio 14 2015\",\n\n#  \"Visual Studio 14 2015 Win64\", and so on)\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Tip fot C/C++ compilers\n\n# e.g. \"cc/g++\", \"icc/icpc\", \"clang/clang++\", \"mpicc/mpic++\", cl.exe/cl.exe\n\n#set(CNAME cc)\n\n#set(CXXNAME g++)\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Test timeout in seconds\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Dynamic analysis\n\n#Valgrind, Purify, BoundsChecker. ThreadSanitizer, AddressSanitizer,\n\n#LeakSanitizer, MemorySanitizer, and UndefinedBehaviorSanitizer.\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Coverage analysis - only GCC\n\n# if GCC was changed with CNAME/CXXNAME, CTEST_COVERAGE_COMMAND needs\n\n# also to be changed\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# The above parameters can be reset by passing upto 9 arguments\n\n# e.g. as: ctest -S ctest_script.cmake,\"Experimental;Release;8;Ninja\"\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Other Environment variables and scripts\n\n#set(ENV{OMP_NUM_THREADS} 3)\n\n#set(ENV{CXXFLAGS} \"-Ofast\")\n\n#execute_process(COMMAND source \"/path/to/iccvars.sh intel64\")\n\n#set(ENV{LD_LIBRARY_PATH} /path/to/vendor/lib)\n\n#set(ENV{MAKEFLAGS} \"-j12\")\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Build options\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#-DCMAKE_CXX_STANDARD=11\n",
        "Line" : 216,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#-DGISMO_WITH_OPENMP=ON\n\n#-DGISMO_WITH_MPI=ON\n\n#-DGISMO_WITH_SPECTRA=ON\n\n#-DGISMO_WITH_IPOPT=ON -DIpOpt_DIR=/path/to/ipopt\n\n#-DGISMO_WITH_PSOLID=ON -DParasolid_DIR=/path/to/parasolid\n\n#-DGISMO_BUILD_AXL=ON -DAxel_DIR=/path/to/axel\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#-DGISMO_PLAINDOX=ON\n",
        "Line" : 230,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Source folder (defaults inside the script directory)\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Build folder (defaults inside the script directory)\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Empty previous directory before building (otherwise builds are incremental)\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Cleanup previous tests, settings and test data\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#--tool=memcheck --show-reachable=yes --num-callers=50 --track-origins=yes --trace-children=yes\n",
        "Line" : 267,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "#See https://github.com/google/sanitizers\n",
        "Line" : 271,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "#find_program(LLVMSYM NAMES llvm-symbolizer) #needed in path\n\n#set(ENV{ASAN_SYMBOLIZER_PATH}  \"${LLVMSYM}\")\n",
        "Line" : 275,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "#part of AddressSanitizer\n",
        "Line" : 278,
        "CharPositionInLine" : 58
      },
      "30" : {
        "Text" : "#set(ENV{LSAN_OPTIONS} \"suppressions=\"${CTEST_SOURCE_DIRECTORY}/cmake/asan_supp.txt\")\n",
        "Line" : 281,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Note: requires full code (including libc++) compiled with -fsanitize=memory\n",
        "Line" : 284,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "#find_program(LLVMSYM NAMES llvm-symbolizer) #needed in path\n\n#set(ENV{MSAN_SYMBOLIZER_PATH}  \"${LLVMSYM}\")\n",
        "Line" : 288,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "#set(ENV{TSAN_OPTIONS} \"report_bugs=1\")\n",
        "Line" : 294,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Update type (git, svn, wget or url)\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Update modules with fetch HEAD commits for all initialized submodules\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# For continuous builds, number of seconds to stay alive\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#12h by default\n",
        "Line" : 317,
        "CharPositionInLine" : 24
      },
      "38" : {
        "Text" : "# Computer ID shown on the dashboard (will be set automatically)\n\n# set(CTEST_SITE \"Server0407\")\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Ignore certain tests during test or memcheck\n\n#set(CTEST_CUSTOM_TESTS_IGNORE \"\")\n\n#set(CTEST_CUSTOM_MEMCHECK_IGNORE \"\")\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "## #################################################################\n\n## Test routines\n\n## #################################################################\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#message(STATUS \"Preserve full output (CTEST_FULL_OUTPUT)\")\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Initial checkout\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#ssh\n",
        "Line" : 339,
        "CharPositionInLine" : 11
      },
      "44" : {
        "Text" : "# stable\n",
        "Line" : 346,
        "CharPositionInLine" : 46
      },
      "45" : {
        "Text" : "# branch\n",
        "Line" : 348,
        "CharPositionInLine" : 11
      },
      "46" : {
        "Text" : "#string(TOUPPER ${submod} csubmod)\n\n#set(SUBM_ARGS ${SUBM_ARGS} -D${csubmod}=ON)\n",
        "Line" : 369,
        "CharPositionInLine" : 6
      },
      "47" : {
        "Text" : "#GSELASTICITY=ON\n",
        "Line" : 378,
        "CharPositionInLine" : 50
      },
      "48" : {
        "Text" : "# avoid non-ascii characters\n",
        "Line" : 414,
        "CharPositionInLine" : 18
      },
      "49" : {
        "Text" : "# Name of this build\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#message(\"Number of processors: ${NPROC}\")\n",
        "Line" : 440,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "#message(\"CTEST_BUILD_JOBS ${CTEST_BUILD_JOBS}\")\n",
        "Line" : 448,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "#message(\"Build flags: ${CTEST_BUILD_FLAGS}\")\n",
        "Line" : 459,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Reset CTestConfig variables\n",
        "Line" : 500,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "#set(CTEST_LABELS_FOR_SUBPROJECTS ${LABELS_FOR_SUBPROJECTS}) #!Dangerous!\n",
        "Line" : 516,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "#\"${CMAKE_VERSION}\" VERSION_LESS \"3.10\"\n",
        "Line" : 522,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "#message(\"Subproject ${subproject}\")\n",
        "Line" : 526,
        "CharPositionInLine" : 6
      },
      "57" : {
        "Text" : "#cdash subproject\n\n#test selection\n",
        "Line" : 527,
        "CharPositionInLine" : 61
      },
      "58" : {
        "Text" : "# No subprojects\n",
        "Line" : 550,
        "CharPositionInLine" : 9
      },
      "59" : {
        "Text" : "# for older versions of ninja\n",
        "Line" : 552,
        "CharPositionInLine" : 42
      },
      "60" : {
        "Text" : "#message(\"Running coverage..\")\n",
        "Line" : 562,
        "CharPositionInLine" : 6
      },
      "61" : {
        "Text" : "#message(\"Running memcheck..\")\n",
        "Line" : 568,
        "CharPositionInLine" : 6
      },
      "62" : {
        "Text" : "#continuous model\n",
        "Line" : 588,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 63
    },
    "cmake/gismoUse.cmake" : {
      "ObjectId" : "96c017f111c9e1161d8b9ad81d8645908628b825",
      "LastModified" : "2018-11-23T12:03:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n## CMakeLists.txt ---\n\n## This file is part of the G+Smo library.\n\n##\n\n## Author: Angelos Mantzaflaris\n\n## Copyright (C) 2012 - 2015 RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "######################################################################\n\n# Macros for adding executables linked to G+Smo\n\n######################################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add an executable\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#elseif ( GISMO_BUILD_STATIC_LIB )\n\n#    add_gismo_static_executable(${FILE})\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# add an executable compiled with pure template headers\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# name without extension\n",
        "Line" : 26,
        "CharPositionInLine" : 50
      },
      "6" : {
        "Text" : "#message(STATUS \"exec (pure template): ${FNAME}\")\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Allow CMake to follow dependencies on hpp files\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# add an executable compiled with the shared library\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# name without extension\n",
        "Line" : 42,
        "CharPositionInLine" : 50
      },
      "10" : {
        "Text" : "#message(STATUS \"exec (dynamically linked): ${FNAME}\")\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#set_property(TARGET ${FNAME} PROPERTY FOLDER \"tests-gismo\")\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# add an executable compiled statically with the library\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# name without extension\n",
        "Line" : 58,
        "CharPositionInLine" : 50
      },
      "14" : {
        "Text" : "#message(STATUS \"exec (statically linked): ${FNAME}\")\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# name without extension\n",
        "Line" : 69,
        "CharPositionInLine" : 50
      },
      "16" : {
        "Text" : "######################################################################\n\n# File collection utilities\n\n######################################################################\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# list all subdirectories of the current directory\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# collect .cpp files\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# collect gs*.cpp files\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# collect .h files\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# collect .hpp files\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# collect .cxx files\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# collect _.cpp (instance) files\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#REPO_REVISION\n",
        "Line" : 120,
        "CharPositionInLine" : 44
      },
      "25" : {
        "Text" : "#find_program(Subversion_SVN_EXECUTABLE NAMES svn svn.bat)\n",
        "Line" : 124,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "#elseif (EXISTS \"${gismo_SOURCE_DIR}/.git/svn/refs\")\n",
        "Line" : 127,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "#else()\n\n#  message(\"GISMO_REPO undefined.\")\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "#set( ${repo_exe}\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 29
    },
    "cmake/gsConfig.cmake" : {
      "ObjectId" : "ca91364ea6d3c8873f7aaeeebbc73362a95f0b23",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n## CMakeLists.txt ---\n\n## This file is part of the G+Smo library.\n\n##\n\n## Author: Angelos Mantzaflaris\n\n## Copyright (C) 2012 - 2015 RICAM-Linz.\n\n######################################################################\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## #################################################################\n\n## Configuration\n\n## #################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#find_package(Metis REQUIRED)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Remove NDEBUG from RelWithDebInfo builds\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#fixme: enable for Darwin/clang (probably no export explicit template instantiations)\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Set a default coefficient numeric types if not specified\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#set(GISMO_WITH_MPQ OFF CACHE BOOL \"Use GMP/mpq_class\")\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#set(GISMO_WITH_MPFR OFF CACHE BOOL \"Use MPFR\")\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#math(EXPR BITSZ_VOID_P \"8*${CMAKE_SIZEOF_VOID_P}\")\n\n#set (GISMO_INDEX_TYPE \"int${BITSZ_VOID_P}_t\" CACHE STRING\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# Set a default build type if none was specified\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 60,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# For Visual studio\n",
        "Line" : 68,
        "CharPositionInLine" : 45
      },
      "12" : {
        "Text" : "# overrides Debug/Release subfolders\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#Configure Valgrind\n\n#find_program( MEMORYCHECK_COMMAND valgrind )\n\n#--gen-suppressions=all --trace-children=yes --track-origins=yes\n\n#set( MEMORYCHECK_COMMAND_OPTIONS \"--leak-check=full --show-reachable=yes\" CACHE INTERNAL \"\")\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#note: empty defaults to \"-q --tool=memcheck --leak-check=yes --show-reachable=yes --num-callers=50\n",
        "Line" : 80,
        "CharPositionInLine" : 93
      },
      "15" : {
        "Text" : "# message(STATUS \"Using Boost for smart pointers\")\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Print compilation statistics (these flags work on GCC compiler only)\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -ftime-report\")\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Q\")\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# see http://www.cmake.org/Wiki/CTest:Coverage\n\n# and http://cmake.3232098.n2.nabble.com/Running-coverage-analysis-td7145452.html\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -ftest-coverage -fprofile-arcs\")\n\n#set(CMAKE_EXE_LINKER_FLAGS \"-fprofile-arcs -ftest-coverage\")\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#if(${MSVC_VERSION} EQUAL 1800 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 18.00.31101.0)\n\n#   message(WARNING \"Visual Studio 2013 without Update 4 detected. Update your compiler to avoid G+Smo compilation problems.\")\n\n#endif()\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Disable checked iterators and irrelevant warnings\n\n#wd4351: regards old behaviour before MSVC2005\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# See http://msdn.microsoft.com/en-us/library/hh697468.aspx\n\n#add_definitions(-D_HAS_ITERATOR_DEBUGGING=0)\n\n#add_definitions(-D_SECURE_SCL=0)\n\n#add_definitions(-D_ITERATOR_DEBUG_LEVEL=0) #VS2012\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# disable incremental linking for executables (it doesn't help for linking with libraries) -- check\n\n#STRING(REPLACE \"/INCREMENTAL:YES\" \"/INCREMENTAL:NO\" CMAKE_EXE_LINKER_FLAGS_DEBUG ${CMAKE_EXE_LINKER_FLAGS_DEBUG})\n\n#STRING(REPLACE \"/INCREMENTAL:YES\" \"/INCREMENTAL:NO\" CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO ${CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO})\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "#    if ( GISMO_BUILD_LIB )\n\n#    # /MD /MDd\n\n#      set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /MD\")\n\n#    endif()\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#64bit compiler\n",
        "Line" : 129,
        "CharPositionInLine" : 37
      },
      "25" : {
        "Text" : "# Note: On 64bit-platforms, /Wp64 flag is present, causing extra warnings\n",
        "Line" : 130,
        "CharPositionInLine" : 7
      },
      "26" : {
        "Text" : "#else() #32bit compiler has CMAKE_SIZEOF_VOID_P EQUAL 4\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Force to always compile with W4\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Note: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=53431\n\n# affects -Wno-ignored-attributes in Eigen\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "#-ftrack-macro-expansion=0\n",
        "Line" : 158,
        "CharPositionInLine" : 70
      },
      "30" : {
        "Text" : "#-Wshadow -Wconversion -pedantic -Wunused -Wattributes\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "#-Wl,--no-allow-shlib-undefined\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# fixme: export explicit template instantiations in MinGW ?\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# large files can overflow pe/coff sections, so use the pe+ format\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -ffunction-sections -Wl,--gc-sections\")\n",
        "Line" : 190,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "#fixme: enable for Darwin/clang (probably no export explicit template instantiations)\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# for object libraries with cmake less than 3.3\n",
        "Line" : 195,
        "CharPositionInLine" : 20
      },
      "37" : {
        "Text" : "#set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}\")\n",
        "Line" : 205,
        "CharPositionInLine" : 3
      },
      "38" : {
        "Text" : "#comma for more warns\n",
        "Line" : 214,
        "CharPositionInLine" : 67
      },
      "39" : {
        "Text" : "#set_property(TARGET mytarget PROPERTY INTERPROCEDURAL_OPTIMIZATION 1)\n",
        "Line" : 218,
        "CharPositionInLine" : 3
      },
      "40" : {
        "Text" : "#CHECK_CXX_SOURCE_COMPILES(\n\n#\"template<typename T> class A {}; extern template class A<int>; int main() {}\"\n\n#GISMO_HAS_EXTERN_TEMPLATES)\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#message(\"CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS}\")\n\n#message(\"CMAKE_CXX_FLAGS_DEBUG ${CMAKE_CXX_FLAGS_DEBUG}\")\n\n#message(\"CMAKE_CXX_FLAGS_RELEASE ${CMAKE_CXX_FLAGS_RELEASE}\")\n\n#message(\"CMAKE_CXX_FLAGS_RELWITHDEBINFO ${CMAKE_CXX_FLAGS_RELWITHDEBINFO}\")\n\n#string(TOUPPER ${CMAKE_BUILD_TYPE} TEMP)\n\n#message(STATUS \"Using compilation flags: ${CMAKE_CXX_FLAGS}, ${CMAKE_CXX_FLAGS_${TEMP}}\")\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#https://github.com/VcDevel/Vc/blob/master/cmake/OptimizeForArchitecture.cmake\n",
        "Line" : 233,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 43
    },
    "cmake/gsDataDir.cmake" : {
      "ObjectId" : "922d7dc43ce4ee25892d578977bc4b652b7f1ae7",
      "LastModified" : "2018-08-14T14:56:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### gsDataDir.cmake ---\n\n## \n\n## set GISMO_DATA_DIR based on compiler-toolchain\n\n## \n\n## Author: Harald Weiner\n\n## Copyright (C) 2015 - RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Data directory\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Config-files directory\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set default search paths\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/gsDebugExtra.cmake" : {
      "ObjectId" : "2be7b81de1d0e52591ca2f4ffa01b12b50ad0dd4",
      "LastModified" : "2018-08-14T14:56:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n#\n\n#    Enables extra debugging features.\n\n#\n\n#    This file is part of the G+Smo library.\n\n#\n\n#    This Source Code Form is subject to the terms of the Mozilla Public\n\n#    License, v. 2.0. If a copy of the MPL was not distributed with this\n\n#    file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n#\n\n#    Author(s): Angelos Mantzaflaris\n\n#\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# using Clang\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=address -fno-omit-frame-pointer\")\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=thread -fno-omit-frame-pointer\")\n",
        "Line" : 21,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# using GCC\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# more strict warnings\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wextra -ggdb -Wpedantic\")\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Enable checked iterators\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# using Intel C++\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# using Visual Studio C++\n\n# Enable checked iterators\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Detect shadows\n\n#if((CMAKE_COMPILER_IS_GNUCXX AND CMAKE_C_COMPILER_VERSION VERSION_GREATER \"4.7.99\") OR\n\n#   CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")\n\n#  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wshadow\")\n\n#  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wshadow\")\n\n#endif()\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#add_definitions(-DEIGEN_INTERNAL_DEBUGGING)\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "cmake/gsFetch.cmake" : {
      "ObjectId" : "60b70c16763d96f75ee58f16d655fc5e012bfa16",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n## gsFetch.cmake\n\n## This file is part of the G+Smo library.\n\n##\n\n## Author: Angelos Mantzaflaris\n\n## Copyright (C) 2018\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#latest CMake has FetchContent\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Protect the following options\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message( GF_UNPARSED_ARGUMENTS \"= ${GF_UNPARSED_ARGUMENTS}\")\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#  if(NOT EXISTS ${GF_DOWNLOAD_DIR}/CMakeLists.txt)\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#  endif()\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#! Update step requires the git sources to be available\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# called to fetch/download a submodule form git (working) and svn (in progress)\n\n# (ARGV0) SUBMODULE:  name of submodule\n\n# (ARGVN)             Used to give Update Command, unittests/CMakeLists.txt-15-#07.08.18\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO: online/offline mode\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# or set manually\n",
        "Line" : 80,
        "CharPositionInLine" : 43
      },
      "10" : {
        "Text" : "#if (NOT DEFINED GISMO_FETCH_PROT)\n\n#  set(GISMO_FETCH_PROT https) #ssh\n\n#endif()\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#message(\"Fetch ${SUBMODULE} (repository: ${GISMO_REPO}, revision: ${GISMO_REPO_REV}, protocol: ${GISMO_FETCH_PROT}, username: ${GISMO_UNAME}, password: ${GISMO_PASS})\")\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#if(\"x${GISMO_FETCH_PROT}\" STREQUAL \"xssh\")\n\n#  set(git_repo git@github.com:gismo/${SUBMODULE}.git)\n\n#elseif(\"x${GISMO_FETCH_PROT}\" STREQUAL \"xhttps\")\n\n#  set(git_repo https://github.com/gismo/${SUBMODULE}.git)\n\n#endif()\n\n# gismo_fetch_directory(${ARGN} GIT_REPOSITORY  ${git_repo} DESTINATION  extensions)\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# init SUBMODULE\n",
        "Line" : 100,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "#RESULT_VARIABLE gresult\n\n#OUTPUT_QUIET\n",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "#if(\"x${GISMO_FETCH_PROT}\" STREQUAL \"xssh\") message(ERROR \"GitHub does not support svn+ssh\") endif()\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Username for Subversion checkout and update\n\n# Password for Subversion checkout and update\n\n# Trust the Subversion server site certificate\n",
        "Line" : 112,
        "CharPositionInLine" : 34
      },
      "17" : {
        "Text" : "# get list of programs to compile\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "cmake/gsInstall.cmake" : {
      "ObjectId" : "e85ea44da71eb41f1dda929fd84a6bc40ef6c229",
      "LastModified" : "2018-08-14T14:56:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n## gsIntall.cmake ---\n\n## This file is part of the G+Smo library.\n\n## \n\n## Author: Angelos Mantzaflaris \n\n## Author: Harald Weiner\n\n## Copyright (C) 2012-2015 - RICAM-Linz.\n\n######################################################################\n\n## Installation\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#note: make list_install_components\n\n#set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME gismo)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Offer the user the choice of overriding the installation directories\n\n#set(LIB_INSTALL_DIR     lib     CACHE STRING \"Installation directory for libraries\")\n\n#set(BIN_INSTALL_DIR     bin     CACHE STRING \"Installation directory for executables\")\n\n#set(INCLUDE_INSTALL_DIR include CACHE STRING \"Installation directory for header files\")\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set CMake installation directory\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Make relative paths absolute (needed later on)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add all targets to the build-tree export set\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#if(GISMO_WITH_other)\n\n#  export(TARGETS other\n\n#    FILE \"${PROJECT_BINARY_DIR}/gismoTargets.cmake\" APPEND)\n\n#endif()\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Export the package for use from the build-tree\n\n# (this registers the build-tree with a global CMake-registry)\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create the gismoConfig.cmake and gismoConfigVersion.cmake files\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ... for the build tree\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ... for the install tree\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ... for both\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# For gsExport.h\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# For gsLinearAlgebra.h\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# For gsCmdLine.h\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# For eiquadprog.hpp\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# For gsXmlUtils.h\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# For pure install\n\n#install(DIRECTORY ${PROJECT_SOURCE_DIR}/external/rapidxml\n\n#        DESTINATION include/${PROJECT_NAME}\n\n#        FILES_MATCHING\n\n#        PATTERN \"*.hpp\"\n\n#        PATTERN \".svn\" EXCLUDE\n\n#        PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# For gsConfig.h\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# todo: search environment variable as well\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Install cmake files\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Install the export set for use with the install-tree\n\n#install(EXPORT gismoTargets DESTINATION\n\n#  \"${CMAKE_INSTALL_DIR}\" COMPONENT devel)\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Install docs (if available)\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#message(\"DOC_SRC_DIR='${DOC_SRC_DIR}'\")\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#message(\"TMP_VERSION='${TMP_VERSION}'\")\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#message(\"DOC_INSTALL_DIR='${DOC_INSTALL_DIR}'\")\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "cmake/gsJITConfigXml.cmake" : {
      "ObjectId" : "e26e8b600957af8eede34663db9777284031b8d2",
      "LastModified" : "2018-08-27T11:16:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\r\n\n## gsJITConfigXml ---\r\n\n## This file is part of the G+Smo library. \r\n\n##\r\n\n## Author: Matthias Moeller\r\n\n## Copyright (C) 2012 - 2017 RICAM-Linz.\r\n\n######################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## This macro defines the following variables:\r\n\n##\r\n\n## For <LANG> is C, CXX, CUDA, and Fortran\r\n\n## JIT_<LANG>_COMPILER : JIT compiler command\r\n\n## JIT_<LANG>_FLAGS    : JIT compiler flags\r\n\n##\r\n\n## JIT_INCLUDE_DIRS    : JIT compiler include directories\r\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Gather information of programming languages not enabled by\r\n\n# default with G+Smo (CUDA and Fortran)\r\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Check for CUDA \r\n",
        "Line" : 30,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Check for Fortran\r\n",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Set JIT compiler command\r\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Get build-type as upper-case string\r\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Set JIT compiler flags (build-type dependent)\r\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Add JIT compiler flags (all build types)\r\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Create a set of shared library variable specific to C++\r\n\n# For 90% of the systems, these are the same flags as the C versions\r\n\n# so if these are not set just copy the flags from the c version\r\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Create a set of shared library variable specific to CUDA\r\n\n# For 90% of the systems, these are the same flags as the C versions\r\n\n# so if these are not set just copy the flags from the c version\r\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Create a set of shared library variable specific to Fortran\r\n\n# For 90% of the systems, these are the same flags as the C versions\r\n\n# so if these are not set just copy the flags from the c version\r\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Add C++ standard and pic\r\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# PIC for 64bit machines\r\n\n#if (CMAKE_COMPILER_IS_GNUCXX AND CMAKE_SIZEOF_VOID_P EQUAL 8)\r\n\n#    set(JIT_CXX_FLAGS \"${JIT_CXX_FLAGS} ${CMAKE_CXX_COMPILE_OPTIONS_PIC}\")\r\n\n#endif()\r\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Set includes\r\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Set (extra) library directories\r\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Set libraries\r\n\n#string(REPLACE \";\" \" -l\" JIT_LIBRARIES \"${JIT_LIBRARIES} -l${GISMO_LIBRARIES}\")\r\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Set extra libraries\r\n\n#if (DEFINED gismo_LINKER)\r\n\n#  string(REPLACE \";\" \" -l\" JIT_LIBRARIES \"${JIT_LIBRARIES} -l${gismo_LINKER}\")\r\n\n#endif()\r\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Generate config XML file\r\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 19
    },
    "cmake/gsLibrary.cmake" : {
      "ObjectId" : "2c26fe20c2059bac3c8ed03fdb107260d1a3339a",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n## CMakeLists.txt ---\n\n## This file is part of the G+Smo library.\n\n##\n\n## Author: Angelos Mantzaflaris\n\n## Copyright (C) 2012 - 2016 RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#include (GenerateExportHeader)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## #################################################################\n\n## Add library targets\n\n## #################################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#message(\"Using ${${PROJECT_NAME}_EXTENSIONS}\")\n\n#message(\"Using ${${PROJECT_NAME}_MODULES}\")\n\n#message(\"Using ${${PROJECT_NAME}_SOURCES}\")\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#if (\"x${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"xGNU\")\n\n#  SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-implicit-templates\")\n\n#endif()\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#generate_export_header(${PROJECT_NAME})\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#https://community.kde.org/Policies/Binary_Compatibility_Issues_With_C%2B%2B\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#COMPILE_DEFINITIONS ${PROJECT_NAME}_EXPORTS # Used for DLL exporting (defined by default by CMake)\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#  if (GISMO_WITH_OPENMP)\n\n#    find_package(OpenMP REQUIRED)\n\n#  endif()\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Copy the dll to the bin folder to allow executables to find it\n",
        "Line" : 97,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "#COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_BINARY_DIR}/bin\n",
        "Line" : 102,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "#COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_BINARY_DIR}/bin\n",
        "Line" : 110,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "#generate_export_header(${PROJECT_NAME}_static)\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# See http://eigen.tuxfamily.org/dox/TopicUsingIntelMKL.html\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Avoid naming conflic on MSVC\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "## #################################################################\n\n## Installation\n\n## #################################################################\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# IMPORTANT: Add the ${PROJECT_NAME} library to the \"export-set\"\n",
        "Line" : 173,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 17
    },
    "cmake/gsOptions.cmake" : {
      "ObjectId" : "db7ff23e4f7a194ac39c7b6a2504327d6292ba9a",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n## CMakeLists.txt ---\n\n## This file is part of the G+Smo library.\n\n##\n\n## Author: Angelos Mantzaflaris\n\n## Copyright (C) 2012 - 2016 RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## #################################################################\n\n## Options list: Standard options\n\n## #################################################################\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#option(GISMO_WITH_METIS          \"With METIS\"                false )\n\n#if  (${GISMO_WITH_METIS})\n\n#message (\"  GISMO_WITH_METIS        ${GISMO_WITH_METIS}\")\n\n#endif()\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## #################################################################\n\n## Options list: Extra options\n\n## #################################################################\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#https://www.threadingbuildingblocks.org/documentation\n\n#message (\"  GISMO_WITH_ITBB          ${GISMO_WITH_ITBB}\")\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#message(STATUS \"Type cmake -LAH to see all variables\")\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deploy/CMakeLists.txt" : {
      "ObjectId" : "25fda50cd21ab993ed344c4406c372f94cb027de",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n##\n\n## CMakeLists.txt ---\n\n## Sample CMake project using G+Smo\n\n##\n\n## To ensure that G+Smo is located correctly, set the variable gismo_DIR\n\n## to a path containing the binary and include files, eg:\n\n##\n\n## cmake . -Dgismo_DIR=/path/to/gismo/build\n\n##\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake 3.0\n",
        "Line" : 15,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "# CMake 3.1\n",
        "Line" : 20,
        "CharPositionInLine" : 18
      },
      "3" : {
        "Text" : "# CMake 3.1.3\n",
        "Line" : 23,
        "CharPositionInLine" : 18
      },
      "4" : {
        "Text" : "# CMake 3.3\n",
        "Line" : 26,
        "CharPositionInLine" : 18
      },
      "5" : {
        "Text" : "# G+Smo\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#compiler configuration\n",
        "Line" : 42,
        "CharPositionInLine" : 18
      },
      "7" : {
        "Text" : "# Application files\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#message(\"found files: ${FILES}\")\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# name without extension\n",
        "Line" : 51,
        "CharPositionInLine" : 50
      },
      "10" : {
        "Text" : "# install the example executables (optionally)\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "deploy/Makefile" : {
      "ObjectId" : "c5db270b639778a347e53dddf15d1266f81e48c7",
      "LastModified" : "2017-02-07T20:07:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Output application name\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install directory for G+Smo\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "413b3cf6e8cf957dfb3eb1bdc7cc9a43615401a8",
      "LastModified" : "2018-08-14T14:56:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n## CMakeLists.txt ---\n\n## This file is part of the G+Smo library.\n\n##\n\n## Author: Angelos Mantzaflaris\n\n## Copyright (C) 2012-2018 - RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Detect GraphViz dot\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(\"Detected GraphViz dot\")\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Set some Doxygen flags\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\\\"${gismo_SOURCE_DIR}/examples\\\"\n",
        "Line" : 35,
        "CharPositionInLine" : 197
      },
      "5" : {
        "Text" : "# Uncomment the line below to have doxygen process only\n\n# what is inside the doc folder when typing 'make doc'\n\n#set(GISMO_DOXY_INPUT                    \" \\\"${gismo_SOURCE_DIR}/doc\\\" \")\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#220\n\n#100\n",
        "Line" : 40,
        "CharPositionInLine" : 47
      },
      "7" : {
        "Text" : "# 80\n",
        "Line" : 42,
        "CharPositionInLine" : 48
      },
      "8" : {
        "Text" : "# get the date in variable TODAY\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#add_definitions(\"-DGISMO_MAKING_DOCS\")\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/navtree_hacks.js           ${CMAKE_CURRENT_BINARY_DIR}/html/\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#ALL\n",
        "Line" : 113,
        "CharPositionInLine" : 22
      },
      "12" : {
        "Text" : "#ALL\n",
        "Line" : 119,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 13
    },
    "doc/snippets/CMakeLists.txt" : {
      "ObjectId" : "0a261b0e7d36665e6fe9a24402db66fb3d9f63f8",
      "LastModified" : "2018-08-14T14:56:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n## CMakeLists.txt ---\n\n## This file is part of the G+Smo library.\n\n##\n\n## Author: Angelos Mantzaflaris\n\n## Copyright (C) 2012 - RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Collect source file names\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(snippet_target snippet_${snippet_target})\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#list(LENGTH snippets_SRCS len)\n\n#message(STATUS \"Number of snippets to compile: ${len}\")\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "ddf1518f0579d4e7b9ac67fc5d75f3150b85b0d0",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### CMakeLists.txt ---\n\n##\n\n## Author: Angelos Mantzaflaris\n\n## Author: Harald Weiner\n\n## Copyright (C) 2012-2018 - RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CMake 3.10\n",
        "Line" : 10,
        "CharPositionInLine" : 46
      },
      "2" : {
        "Text" : "# Add a grouping target that builds all tests this is equivalent to\n\n# running \"make\" inside the tests build folder\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#find_package(gismo REQUIRED)\n\n#include_directories( ${GISMO_INCLUDE_DIRS})\n\n#link_directories   ( ${GISMO_LIBRARY_DIR} )\n\n#include( ${GISMO_USE_FILE})\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Collect source file names\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#message(\"found files: ${FILES}\")\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# name without extension\n",
        "Line" : 29,
        "CharPositionInLine" : 52
      },
      "7" : {
        "Text" : "# install the example executables (optionally)\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "extensions/gsCoDiPack/CMakeLists.txt" : {
      "ObjectId" : "59e1d6ce8eaa11cb5a166bc8897a003e36955df9",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### CMakeLists.txt ---\n\n## \n\n## Author: Angelos Mantzaflaris \n\n## Copyright (C) 2016 - RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## CoDiPack extension\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Apply same configuration as G+Smo\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "extensions/gsFdbb/CMakeLists.txt" : {
      "ObjectId" : "6e6fd96401af585d4e80b7899f8a6cc8691fa463",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### CMakeLists.txt ---\n\n## \n\n## Author: Angelos Mantzaflaris \n\n## Copyright (C) 2016 - RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## FDBB extension\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Apply same configuration as G+Smo\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "extensions/gsIpopt/CMakeLists.txt" : {
      "ObjectId" : "75497b9d74cc2c9ec22f3b685ae5e9764e10f7c4",
      "LastModified" : "2018-08-14T14:56:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### CMakeLists.txt ---\n\n##\n\n## Author: Angelos Mantzaflaris\n\n## Copyright (C) 2015 - 2016 RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#unset(IPOPT_INCLUDE_DIR CACHE)\n\n#unset(IPOPT_LIBRARY     CACHE)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#find_package(BLAS REQUIRED)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# 3.12.9 conflicts patching\n",
        "Line" : 22,
        "CharPositionInLine" : 26
      },
      "4" : {
        "Text" : "#fetch here!\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#--libdir=${CMAKE_BINARY_DIR}/lib\n",
        "Line" : 31,
        "CharPositionInLine" : 89
      },
      "6" : {
        "Text" : "#DOWNLOAD_NO_PROGRESS 0\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#add_custom_target (IpOpt)\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Apply same configuration as G+Smo\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "extensions/gsMultiPrecision/CMakeLists.txt" : {
      "ObjectId" : "cec108b8bbaf3016693839fb4982cd3d7a9c2070",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### CMakeLists.txt ---\n\n## \n\n## Author: Angelos Mantzaflaris \n\n## Copyright (C) 2016 - RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Multi-precision floating-point extension\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use internally built GMP/MPFR libraries\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Collect file names\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Apply same configuration as G+Smo\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#BUILD_COMMAND \"\"\n",
        "Line" : 27,
        "CharPositionInLine" : 10
      },
      "6" : {
        "Text" : "#INSTALL_COMMAND \"\"\n",
        "Line" : 29,
        "CharPositionInLine" : 10
      },
      "7" : {
        "Text" : "#BUILD_COMMAND \"\"\n",
        "Line" : 45,
        "CharPositionInLine" : 10
      },
      "8" : {
        "Text" : "#INSTALL_COMMAND \"\"\n",
        "Line" : 47,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 9
    },
    "extensions/gsOpenCascade/CMakeLists.txt" : {
      "ObjectId" : "c61947e7082f9ab67a9e099d8a34aae913cb3ef0",
      "LastModified" : "2018-08-14T14:56:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### CMakeLists.txt ---\n\n## \n\n## Author: Angelos Mantzaflaris \n\n## Copyright (C) 2015 - 2018 RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#find_package(OpenCascade QUIET)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_custom_target (OCC)\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Apply same configuration as G+Smo\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "extensions/gsOpennurbs/CMakeLists.txt" : {
      "ObjectId" : "893c627a695ba7dafa32e01e0821be0193bd3622",
      "LastModified" : "2018-08-14T14:56:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### CMakeLists.txt ---\n\n## \n\n## Author: Angelos Mantzaflaris \n\n## Copyright (C) 2013 - RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## OpenNurbs extension\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# zlib\n\n#${gismo_externals}/onurbs/zlib/adler32.c\n\n#${gismo_externals}/onurbs/zlib/compress.c\n\n#${gismo_externals}/onurbs/zlib/crc32.c\n\n#${gismo_externals}/onurbs/zlib/deflate.c\n\n#${gismo_externals}/onurbs/zlib/infback.c\n\n#${gismo_externals}/onurbs/zlib/inffast.c\n\n#${gismo_externals}/onurbs/zlib/inflate.c\n\n#${gismo_externals}/onurbs/zlib/inftrees.c\n\n#${gismo_externals}/onurbs/zlib/trees.c\n\n#${gismo_externals}/onurbs/zlib/uncompr.c\n\n#${gismo_externals}/onurbs/zlib/zutil.c\n\n# \n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#gsWriteOpenNurbs_.cpp\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#if (BUILD_SHARED_LIBS)\n\n#set(OPENNURBS_SOURCES ${OPENNURBS_SOURCES} ${gismo_externals}/onurbs/opennurbs_dll.cpp)\n\n#endif()\n\n#set(OPENNURBS_SOURCES_UNUSED\n\n#${gismo_externals}/onurbs/opennurbs_gl.cpp\n\n#  )\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#${gismo_externals}/onurbs/opennurbs_quaternion.h\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# zlib\n\n#${gismo_externals}/onurbs/zlib/crc32.h\n\n#${gismo_externals}/onurbs/zlib/deflate.h\n\n#${gismo_externals}/onurbs/zlib/inffast.h\n\n#${gismo_externals}/onurbs/zlib/inffixed.h\n\n#${gismo_externals}/onurbs/zlib/inflate.h\n\n#${gismo_externals}/onurbs/zlib/inftrees.h\n\n#${gismo_externals}/onurbs/zlib/trees.h\n\n#${gismo_externals}/onurbs/zlib/zconf.h\n\n#${gismo_externals}/onurbs/zlib/zlib.h\n\n#${gismo_externals}/onurbs/zlib/zutil.h\n\n# \n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ideally, we should only need ZLIB here\n\n#include_directories(\n\n#  ${${CMAKE_PROJECT_NAME}_SOURCE_DIR}/onurbs/zlib\n\n#  )\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Apply same configuration as G+Smo\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#if(\"x${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"xMSVC\")\n\n#  add_definitions(\n\n#    -DON_COMPILING_OPENNURBS\n\n#    -DON_DLL_EXPORTS\n\n#    -DON_DLL_IMPORTS\n\n#    )\n\n#  SET(OPENNURBS_HEADERS \"${OPENNURBS_HEADERS};${ON_DLL_HEADERS}\")\n\n#else ()\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#endif()\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Suppress 'declaration of '..' hides class member'\t~2400 warns\n\n# declaration of '..' hides previous local declaration ~37 warns\n",
        "Line" : 314,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "#for Mingw\n",
        "Line" : 318,
        "CharPositionInLine" : 35
      },
      "13" : {
        "Text" : "#message(\"Using prefixed Zlib\")\n",
        "Line" : 322,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# use prefixed zlib\n\n# zlib uses oncalloc() and onfree()\n",
        "Line" : 323,
        "CharPositionInLine" : 32
      },
      "15" : {
        "Text" : "#STATIC\n",
        "Line" : 327,
        "CharPositionInLine" : 53
      },
      "16" : {
        "Text" : "#target_link_libraries(gsOpennurbs Rpcrt4) # Note: linked with gismolib instead\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#SET_TARGET_PROPERTIES(gsOpennurbs PROPERTIES VERSION \"2010.04.95\")\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "extensions/gsParasolid/CMakeLists.txt" : {
      "ObjectId" : "00e8cf63f92ba858d92ff0f1d059b85a1c979547",
      "LastModified" : "2018-08-14T14:56:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### CMakeLists.txt ---\n\n## \n\n## Author: Angelos Mantzaflaris \n\n## Copyright (C) 2013 - 2016 RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Parasolid extension\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Collect file names\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#message (\"*** ${PROJECT_NAME} sources: ${${PROJECT_NAME}_HEADERS}, ${${PROJECT_NAME}_SOURCES}\")\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Look for parasolid library\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set default schema path  \n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Compile statically the extension\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR})\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "extensions/gsSpectra/CMakeLists.txt" : {
      "ObjectId" : "873793a2c85cc61a7caab4a5c723369f4aaf116d",
      "LastModified" : "2018-08-14T14:56:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### CMakeLists.txt ---\n\n## Author: Angelos Mantzaflaris \n\n## Copyright (C) 2018 - RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Spectra extension\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Collect file names\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR} ${PROJECT_NAME}_SOURCES)\n\n#aux_tmpl_header_directory(${CMAKE_CURRENT_SOURCE_DIR} ${PROJECT_NAME}_HPPFILES)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Apply same configuration as G+Smo\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#endif(NOT SPECTRA_FOUND)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#include_directories(${SPECTRA_INCLUDE_DIR})\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#$<INSTALL_INTERFACE:gismo/gsSpectra>\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#set_target_properties(${PROJECT_NAME} PROPERTIES\n\n#    COMPILE_DEFINITIONS gismo_EXPORTS \n\n#    POSITION_INDEPENDENT_CODE ON\n\n#    LINKER_LANGUAGE CXX\n\n#    CXX_VISIBILITY_PRESET hidden\n\n#    VISIBILITY_INLINES_HIDDEN ON\n\n#    FOLDER \"G+Smo extensions\"\n\n#    )\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#set(gismo_EXTENSIONS ${gismo_EXTENSIONS} $<TARGET_OBJECTS:${PROJECT_NAME}>\n\n#    CACHE INTERNAL \"${PROJECT_NAME} extensions to be included\")\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "extensions/gsTrilinos/CMakeLists.txt" : {
      "ObjectId" : "d39993f5b8c84b8a04aeca9eebc01279a2873bd4",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### CMakeLists.txt ---\n\n##\n\n## Author: Angelos Mantzaflaris\n\n## Copyright (C) 2016 - RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake 3.0\n",
        "Line" : 9,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "# CMake 3.1\n",
        "Line" : 15,
        "CharPositionInLine" : 18
      },
      "3" : {
        "Text" : "# CMake 3.1.3\n",
        "Line" : 19,
        "CharPositionInLine" : 18
      },
      "4" : {
        "Text" : "# CMake 3.3\n",
        "Line" : 23,
        "CharPositionInLine" : 18
      },
      "5" : {
        "Text" : "## Trilinos extension\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Collect file names\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Apply same configuration as G+Smo\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Look for MPI (now: handled by GISMO_WITH_MPI)\n\n#find_package(MPI REQUIRED)\n\n#include_directories(SYSTEM ${MPI_INCLUDE_PATH})\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Look for trilinos library\n\n#find_package(TRILINOS REQUIRED) # for testing user-provided mode\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#find_package(BLAS REQUIRED)   # needs .._DIR on MS windows\n\n#find_package(LAPACK REQUIRED) # needs LAPACK_DIR on MS windows\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Note: might need export FC=/usr/bin/gfortran\n\n#enable_language(Fortran)\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-DCMAKE_Fortran_COMPILER=${CMAKE_Fortran_COMPILER}\n",
        "Line" : 75,
        "CharPositionInLine" : 23
      },
      "14" : {
        "Text" : "# Linear algebra backends\n",
        "Line" : 81,
        "CharPositionInLine" : 23
      },
      "15" : {
        "Text" : "# non-templated version\n\n# templated version\n",
        "Line" : 82,
        "CharPositionInLine" : 51
      },
      "16" : {
        "Text" : "# needed by Anasazi\n",
        "Line" : 84,
        "CharPositionInLine" : 59
      },
      "17" : {
        "Text" : "# Direct solvers\n",
        "Line" : 87,
        "CharPositionInLine" : 23
      },
      "18" : {
        "Text" : "# Iterative solvers\n",
        "Line" : 90,
        "CharPositionInLine" : 23
      },
      "19" : {
        "Text" : "# multilevel solver\n",
        "Line" : 93,
        "CharPositionInLine" : 47
      },
      "20" : {
        "Text" : "# Ifpack\n",
        "Line" : 94,
        "CharPositionInLine" : 51
      },
      "21" : {
        "Text" : "# Eigenvalue solvers\n",
        "Line" : 96,
        "CharPositionInLine" : 23
      },
      "22" : {
        "Text" : "# Nonlinear solvers\n",
        "Line" : 99,
        "CharPositionInLine" : 23
      },
      "23" : {
        "Text" : "# Additional packages\n",
        "Line" : 102,
        "CharPositionInLine" : 23
      },
      "24" : {
        "Text" : "# parallel mesh generation (buggy cmake)\n",
        "Line" : 103,
        "CharPositionInLine" : 52
      },
      "25" : {
        "Text" : "# Note: below are options that are required for fine-grained\n\n# control of individual packages enabled above\n",
        "Line" : 105,
        "CharPositionInLine" : 23
      },
      "26" : {
        "Text" : "# Note: we disable all optional packages by default\n",
        "Line" : 111,
        "CharPositionInLine" : 23
      },
      "27" : {
        "Text" : "# and enable individual packages below\n",
        "Line" : 113,
        "CharPositionInLine" : 23
      },
      "28" : {
        "Text" : "#-DMPI_BASE_DIR=${TPL_MPI_BASE_DIR}\n\n#-DTPL_MPI_LIBRARIES=${MPI_CXX_LIBRARIES} # bug ? 2 elements\n\n# Note: this must be ON, otherwise Trilinos compilation fails.\n\n# Must be OFF on MS Windows\n",
        "Line" : 117,
        "CharPositionInLine" : 23
      },
      "29" : {
        "Text" : "## Point to specific paths (! no space after \"=\")\n",
        "Line" : 122,
        "CharPositionInLine" : 23
      },
      "30" : {
        "Text" : "# Pardiso solvers\n",
        "Line" : 126,
        "CharPositionInLine" : 23
      },
      "31" : {
        "Text" : "# SuperLU solvers\n",
        "Line" : 129,
        "CharPositionInLine" : 23
      },
      "32" : {
        "Text" : "# Umfpack solvers\n",
        "Line" : 134,
        "CharPositionInLine" : 23
      },
      "33" : {
        "Text" : "# Taucs solvers\n",
        "Line" : 137,
        "CharPositionInLine" : 23
      },
      "34" : {
        "Text" : "#-DTPL_ENABLE_Pthread=OFF # Note: MS Win might not have Pthread\n",
        "Line" : 140,
        "CharPositionInLine" : 23
      },
      "35" : {
        "Text" : "#      set(TRILINOS_DIR ${CMAKE_CURRENT_BINARY_DIR}/Trilinos-prefix CACHE INTERNAL \"\")\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#add_library(${LIBNAME} SHARED IMPORTED )\n\n#set_target_properties(${LIBNAME} PROPERTIES IMPORTED_LOCATION ${install_dir}/lib/${CMAKE_SHARED_LIBRARY_PREFIX}${LIBNAME}${CMAKE_SHARED_LIBRARY_SUFFIX} )\n",
        "Line" : 165,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "#else()\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#include_directories(${EPETRA_INCLUDE_PATH})\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Compile statically the extension\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#${TRILINOS_LIBRARIES}\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR})\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#message(\"TRILINOS_LIBRARIES ${TRILINOS_LIBRARIES}\")\n\n#list(LENGTH TRILINOS_LIBRARIES tlen)\n\n#message(\"NUM TRILINOS_LIBRARIES ${tlen}\")\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "extensions/gsUnum/CMakeLists.txt" : {
      "ObjectId" : "01339ed078abf349ba6ce6abb5d0ae98ecf600cb",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### CMakeLists.txt ---\n\n## \n\n## Author: Angelos Mantzaflaris \n\n## Copyright (C) 2016 - RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Unum extension\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Apply same configuration as G+Smo\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "external/CMakeLists.txt" : {
      "ObjectId" : "58fd49a6dceac04aba6f0d193dfb987277b100bd",
      "LastModified" : "2018-08-14T14:56:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### CMakeLists.txt ---\n\n## \n\n## Author: Angelos Mantzaflaris \n\n## Copyright (C) 2018 - RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## #################################################################\n\n## Collect Headers\n\n## #################################################################\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#use prefixed zlib for gzstream\n",
        "Line" : 17,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "#add_subdirectory(boost)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_subdirectory(Eigen)\n\n#add_subdirectory(rapidxml)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#include_directories(${CMAKE_CURRENT_SOURCE_DIR})\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "external/Eigen/CMakeLists.txt" : {
      "ObjectId" : "9eb502b792d4a9607e2d323f2d8114939b43c209",
      "LastModified" : "2018-08-14T14:56:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/devel.cmake" : {
      "ObjectId" : "91ebc1d1b55a232ff903b0e050f2f32758585ef0",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fetching surface_mesh external\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# todo: tarball etc\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Case 1: Use third party CMake configuration\n\n#add_subdirectory(${gismo_SOURCE_DIR}/extensions/surface_mesh ${gismo_BINARY_DIR}/extensions/surface_mesh EXCLUDE_FROM_ALL)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Case 2: Use our own cmake script\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#.. target_include_directories\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#install(TARGETS surface_mesh DESTINATION lib OPTIONAL)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Case 3: use ExternalProject_Add (to do)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "external/gzstream/CMakeLists.txt" : {
      "ObjectId" : "7769679768411b40e412835d63558094ed95cde3",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n## CMakeLists.txt ---\n\n## This file is part of the G+Smo library. \n\n## \n\n## Author: Angelos Mantzaflaris \n\n## Copyright (C) 2012 - 2018 RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apply same configuration as G+Smo\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "external/rapidxml/CMakeLists.txt" : {
      "ObjectId" : "b3d29b595aa2dacc3c22fde94c5ee3ba9efb116b",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### CMakeLists.txt ---\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "## \n\n## Author: Angelos Mantzaflaris \n\n## Copyright (C) 2012 - RICAM-Linz.\n\n######################################################################\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## #################################################################\n\n## Collect Headers\n\n## #################################################################\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Collect header file names\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "external/surface_mesh.cmake" : {
      "ObjectId" : "b601a8f87c0fc3568f7d4b09055a8cbaa2fa7f3b",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fetching surface_mesh external\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# todo: tarball etc\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Case 1: Use third party CMake configuration\n\n#add_subdirectory(${gismo_SOURCE_DIR}/extensions/surface_mesh ${gismo_BINARY_DIR}/extensions/surface_mesh EXCLUDE_FROM_ALL)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Case 2: Use our own cmake script\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#.. target_include_directories\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#install(TARGETS surface_mesh DESTINATION lib OPTIONAL)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Case 3: use ExternalProject_Add (to do)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "external/tclap/CMakeLists.txt" : {
      "ObjectId" : "a921b577d3d2dde140c8f236ef27fefef99e69f2",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/unsupported/Eigen/src/SparseExtra/CMakeLists.txt" : {
      "ObjectId" : "7ea32ca5e26bf653f5814ce780c63c078ee83e29",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/zlib/CMakeLists.txt" : {
      "ObjectId" : "018fc546864203e1cfa3d0f21862af8d5d9e6d92",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n## CMakeLists.txt ---\n\n## This file is part of the G+Smo library. \n\n## \n\n## Author: Angelos Mantzaflaris \n\n## Copyright (C) 2012 - 2018 RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_C_FLAGS    \"${CMAKE_C_FLAGS} -H\")\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## #################################################################\n\n## Collect files\n\n## #################################################################\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Apply same configuration as G+Smo\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#if(CMAKE_C_COMPILER_ID MATCHES \"Clang\")\n\n#    STRING(REPLACE \"-Wimplicit-function-declaration\" \"\" CMAKE_C_FLAGS ${CMAKE_C_FLAGS})\n\n#endif()\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# use prefixed symbols\n",
        "Line" : 61,
        "CharPositionInLine" : 30
      },
      "6" : {
        "Text" : "# use oncalloc() and onfree()\n",
        "Line" : 63,
        "CharPositionInLine" : 32
      },
      "CommentCount" : 7
    },
    "optional/CMakeLists.txt" : {
      "ObjectId" : "73b4674b1da211f0f6b8647973b699d5da21b6bc",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## CMakeLists.txt ---\n\n## \n\n## Author: Angelos Mantzaflaris \n\n## Copyright (C) 2012 - 2018 RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_custom_target(${PROJECT_NAME})\n\n#set_property(TARGET ${PROJECT_NAME} PROPERTY LABELS ${PROJECT_NAME})\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Parasolid option\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set_property(TARGET gsParasolid_test APPEND PROPERTY \n\n#INCLUDE_DIRECTORIES ${PARASOLID_INCLUDE_DIR} )\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "plugins/RhinoTHBSplines/CMakeLists.txt" : {
      "ObjectId" : "3e8794a7e5e1ba1961317e132169ca5d721aa403",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\r\n\n## CMakeLists.txt\r\n\n## This file is part of the G+Smo library.\r\n\n## \r\n\n## Authors: Menno Deij-van Rijswijk and Angelos Mantzaflaris \r\n\n######################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set to false to try out native cmake generators\r\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"CMAKE_SYSTEM_VERSION ${CMAKE_SYSTEM_VERSION}\")\r\n\n#message(STATUS \"CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION ${CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION}\")\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set (CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/plRhino)\r\n",
        "Line" : 26,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# On first configuration use: -DCMAKE_SYSTEM_VERSION=8.1\r\n\n#set(CMAKE_SYSTEM_VERSION 8.1)\r\n",
        "Line" : 28,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#replace /DWIN32 \"\" in CMAKE_CXX_FLAGS, CMAKE_RC_FLAGS\r\n",
        "Line" : 34,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#set (CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/plRhino)\r\n",
        "Line" : 36,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "plugins/RhinoTHBSplines/GismoExport/CMakeLists.txt" : {
      "ObjectId" : "12f241f2e4fc8eb75600a0855fb3f37b91854621",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---- Native cmake\r\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake 3.0\r\n",
        "Line" : 25,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "# CMake 3.1\r\n",
        "Line" : 31,
        "CharPositionInLine" : 18
      },
      "3" : {
        "Text" : "#set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS 1) #cmake>=3.4, maybe problematic\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -DRHINO_V6_READY\r\n",
        "Line" : 60,
        "CharPositionInLine" : 77
      },
      "5" : {
        "Text" : "#set(CMAKE_MFC_FLAG 2)\r\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#LINK_FLAGS \"/ENTRY:\\\"wWinMainCRTStartup\\\"\"\r\n",
        "Line" : 72,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "#${RHINO_SDK}/lib/Release/rdk.lib\r\n\n#${RHINO_SDK}/lib/Release/opennurbs.lib\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This target is a plugin, so we hook it to the grouping target\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#native cmake\r\n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 10
    },
    "plugins/RhinoTHBSplines/GismoImport/CMakeLists.txt" : {
      "ObjectId" : "76e49a7db643b769672e9967e00cac0473577070",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---- Native cmake\r\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake 3.0\r\n",
        "Line" : 25,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "# CMake 3.1\r\n",
        "Line" : 31,
        "CharPositionInLine" : 18
      },
      "3" : {
        "Text" : "#set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS 1) #cmake>=3.4, maybe problematic\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -DRHINO_V6_READY\r\n",
        "Line" : 57,
        "CharPositionInLine" : 77
      },
      "5" : {
        "Text" : "#set(CMAKE_MFC_FLAG 2)\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#LINK_FLAGS \"/ENTRY:\\\"wWinMainCRTStartup\\\"\"\r\n",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "#${RHINO_SDK}/lib/Release/rdk.lib\r\n\n#${RHINO_SDK}/lib/Release/opennurbs.lib\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This target is a plugin, so we hook it to the grouping target\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#native cmake\r\n",
        "Line" : 94,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 10
    },
    "plugins/RhinoTHBSplines/GismoSupport/CMakeLists.txt" : {
      "ObjectId" : "b122bd03cda2bc15eb9cf8042f0e60389644fad3",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# sets version value\r\n",
        "Line" : 7,
        "CharPositionInLine" : 62
      },
      "1" : {
        "Text" : "#---- Native cmake\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CMake 3.0\r\n",
        "Line" : 22,
        "CharPositionInLine" : 18
      },
      "3" : {
        "Text" : "# CMake 3.1\r\n",
        "Line" : 28,
        "CharPositionInLine" : 18
      },
      "4" : {
        "Text" : "#set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS 1) #cmake>=3.4, maybe problematic\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -DRHINO_V6_READY\r\n",
        "Line" : 95,
        "CharPositionInLine" : 77
      },
      "6" : {
        "Text" : "#set(CMAKE_MFC_FLAG 2)\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#LINK_FLAGS \"/ENTRY:\\\"wWinMainCRTStartup\\\"\"\r\n",
        "Line" : 107,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#${RHINO_SDK}/lib/Release/rdk.lib\r\n\n#${RHINO_SDK}/lib/Release/opennurbs.lib\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This target is a plugin, so we hook it to the grouping target\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#native cmake\r\n",
        "Line" : 133,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 11
    },
    "plugins/RhinoTHBSplines/THBSplines/CMakeLists.txt" : {
      "ObjectId" : "42bd30355883e68d322b5014016fb74c5da9b164",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---- Native cmake\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake 3.0\r\n",
        "Line" : 22,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "# CMake 3.1\r\n",
        "Line" : 28,
        "CharPositionInLine" : 18
      },
      "3" : {
        "Text" : "#set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS 1) #cmake>=3.4, maybe problematic\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -DRHINO_V6_READY\r\n",
        "Line" : 63,
        "CharPositionInLine" : 77
      },
      "5" : {
        "Text" : "#LINK_FLAGS \"/ENTRY:\\\"wWinMainCRTStartup\\\"\"\r\n",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# set \"link library dependencies\" to true\r\n\n#set_target_properties(${PROJECT_NAME} PROPERTIES STATIC_LIBRARY_FLAGS \"\\\" LinkLibraryDependencies=\\\"true\")\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#${RHINO_SDK}/lib/Release/rhino.lib\r\n\n#${RHINO_SDK}/lib/Release/rdk.lib\r\n\n#${RHINO_SDK}/lib/Release/opennurbs.lib\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This target is a plugin, so we hook it to the grouping target\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#native cmake\r\n",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 10
    },
    "plugins/gsAxel/CMakeLists.txt" : {
      "ObjectId" : "7c84ed9ed056ab78935abfacd418bac8a40d77ec",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## #################################################################\n\n## Generated by dtkPluginGenerator\n\n## #################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake 3.0\n",
        "Line" : 7,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "# CMake 3.1\n",
        "Line" : 13,
        "CharPositionInLine" : 18
      },
      "3" : {
        "Text" : "######################################################################\n\n# Check dependencies for axl plugin\n\n######################################################################\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#find_package (Qt4 REQUIRED)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#include (${QT_USE_FILE})\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#set (QT_QMAKE_EXECUTABLE %which_qmake/qmake%)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## #################################################################\n\n## Export header file\n\n## #################################################################\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#add_compiler_export_flags()\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#generate_export_header(${PROJECT_NAME}\n\n#  EXPORT_FILE_NAME \"${PROJECT_NAME}Export.h\")\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#add_custom_command(TARGET ${PROJECT_NAME} PRE_BUILD\n\n#  COMMAND ${CMAKE_COMMAND} ARGS -E copy_if_different \"${${PROJECT_NAME}_BINARY_DIR}/${PROJECT_NAME}Export.h\" \"${CMAKE_BINARY_DIR}\"\n\n# COMMAND ${CMAKE_COMMAND} ARGS -E copy_if_different \"${${PROJECT_NAME}_BINARY_DIR}/${PROJECT_NAME}Export.h\" \"${CMAKE_BINARY_DIR}/${PROJECT_NAME}Export\")\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## #################################################################\n\n## Input\n\n## #################################################################\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# All except from PluginExport.h\n",
        "Line" : 80,
        "CharPositionInLine" : 32
      },
      "13" : {
        "Text" : "# Dialog\n",
        "Line" : 86,
        "CharPositionInLine" : 22
      },
      "14" : {
        "Text" : "# not used\n",
        "Line" : 87,
        "CharPositionInLine" : 24
      },
      "15" : {
        "Text" : "#gsGeometryData.hpp\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "## #################################################################\n\n## Build rules\n\n## #################################################################\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#qt4_wrap_cpp(${PROJECT_NAME}_SOURCES_MOC ${${PROJECT_NAME}_HEADERS_MOC})\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#to do: replace by macro\n\n#if( (NOT GISMO_BUILD_LIB) )\n\n#    set(${PROJECT_NAME}_SOURCES\n\n#        ${${PROJECT_NAME}_SOURCES} ${gismo_SOURCES} ${gismo_EXTENSIONS} )\n\n#endif()\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#message(\"axl--->  ${AXL_INCLUDE_DIR} , ${AXL_LIBRARY_DIR} \")\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# This target is a plugin, so we hook it to the grouping target\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#${QT_LIBRARIES}\n\n#dtkGui\n\n#dtkCore\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "#axlCore\n\n#axlGui\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#qt5_use_modules(${PROJECT_NAME} Declarative) #deprecated\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#  target_link_libraries(${PROJECT_NAME} gismo)\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#message(\"Axl plugins directory: ${AXL_PLUGIN_DIR}\")\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# note: policy CMP0026: The LOCATION property should not be read from target\n\n#get_property(gsAxelPlugin_location TARGET ${PROJECT_NAME} PROPERTY LOCATION)\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## #################################################################\n\n## Install rules\n\n## #################################################################\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "##########CPACK\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#set(CPACK_PACKAGE_DESCRIPTION_FILE ${CMAKE_CURRENT_SOURCE_DIR}/README.txt)\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# set(CPACK_RESOURCE_FILE_LICENSE ${CMAKE_CURRENT_SOURCE_DIR}/COPYING.txt)\n",
        "Line" : 197,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "#set(CPACK_NSIS_MODIFY_PATH ON) # Choice to add prog dir to the system PATH\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 32
    },
    "plugins/gsMex/CMakeLists.txt" : {
      "ObjectId" : "ca90c4539a53a15762edf9ac854f6401411b8da3",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n## CMakeLists.txt\n\n## This file is part of the G+Smo library.\n\n##\n\n## Author: Angelos Mantzaflaris\n\n## Copyright (C) 2012-2018 - RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#For El Capitan\n\n#see https://gitlab.kitware.com/cmake/community/wikis/doc/cmake/RPATH-handling\n\n#set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note: set Matlab_ROOT_DIR for specific installation\n\n# set MATLAB_FIND_DEBUG to debug the find procedure\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#MX_LIBRARY\n",
        "Line" : 17,
        "CharPositionInLine" : 67
      },
      "4" : {
        "Text" : "#octave\n\n#set( Matlab_MEX_COMPILER \"mkoctfile --mex\" CACHE STRING \"path to Mex generator\")\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#############\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Fetch all .cpp files to be mex'ed, and loop over these to set up\n\n# mex-targets.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#matlab_add_mex(-- todo\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#-v \n",
        "Line" : 41,
        "CharPositionInLine" : 37
      },
      "9" : {
        "Text" : "#&& install_name_tool -change @rpath/libgismo.0.dylib ${CMAKE_BINARY_DIR}/lib/libgismo.0.dylib ${fmex}\n",
        "Line" : 49,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# MEX files\n",
        "Line" : 69,
        "CharPositionInLine" : 28
      },
      "11" : {
        "Text" : "# M files\n",
        "Line" : 72,
        "CharPositionInLine" : 51
      },
      "CommentCount" : 12
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "7fa3081ba8434c0369144a48a0bddf5d0b0f70b3",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n## CMakeLists.txt ---\n\n## This file is part of the G+Smo library. \n\n## \n\n## Author: Angelos Mantzaflaris \n\n## Copyright (C) 2012 - 2015 RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#LIST( REMOVE_ITEM SUBDIRS misc)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(\"module: ${GM_NAME}\")\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "## Collect files\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "## Add module\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#EXCLUDE_FROM_ALL 1\n\n#EXCLUDE_FROM_DEFAULT_BUILD 1\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "## install module\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# avoid installing twice gsMesh\n",
        "Line" : 72,
        "CharPositionInLine" : 37
      },
      "CommentCount" : 8
    },
    "unittests/CMakeLists.txt" : {
      "ObjectId" : "781ab1f3b629edfceeba9aa3b6e4c1e146d2a13a",
      "LastModified" : "2019-03-27T16:21:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n## CMakeLists.txt ---\n\n## This file is part of the G+Smo library.\n\n##\n\n## Author: Angelos Mantzaflaris\n\n## Copyright (C) 2012 - RICAM-Linz.\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CMake 3.10\n",
        "Line" : 11,
        "CharPositionInLine" : 46
      },
      "2" : {
        "Text" : "#  UPDATE_COMMAND \"${CMAKE_COMMAND} -E echo (offline mode)\"\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set include directory\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# header\n\n#  add_library(ho_lib INTERFACE)\n\n#  target_include_directories(foo INTERFACE\n\n#    $<BUILD_INTERFACE:${GSUNITTEST_INCLUDE_DIR}>\n\n#    $<INSTALL_INTERFACE:include/${PROJECT_NAME}/ho_lib>)\n\n#  # need to export target as well\n\n#  #install(TARGETS ho_lib EXPORT the_export_set DESTINATION ${some_dest})\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Collect source file names\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# doc-snippets are tests as well\n",
        "Line" : 46,
        "CharPositionInLine" : 49
      },
      "7" : {
        "Text" : "# name without extension\n",
        "Line" : 50,
        "CharPositionInLine" : 51
      },
      "CommentCount" : 8
    }
  },
  "FileTypes" : {
    "CMAKE" : 72,
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 2386
}