{
  "Repository" : "56891",
  "Revision" : "HEAD",
  "ObjectId" : "2ecaffc3c3c20b9bae6d926ed20e7a75adcc6000",
  "CommitTime" : "2019-04-05T13:01:54Z",
  "Files" : {
    "src/brickd/Makefile" : {
      "ObjectId" : "192019e8b7a1646b947973326eb0d4de0503f84f",
      "LastModified" : "2019-01-15T16:55:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# For GCC/Clang builds on Linux and macOS, and MinGW builds on Windows\n\n#\n\n# Minimum libusb version: 1.0.6\n\n# Tested with libusb: 1.0.6, 1.0.8, 1.0.9, 1.0.16, 1.0.17, 1.0.19, 1.0.21\n\n#\n\n# Debian/Ubuntu:\n\n# sudo apt-get install build-essential pkg-config libusb-1.0-0-dev libudev-dev pm-utils\n\n#\n\n# Fedora:\n\n# sudo yum groupinstall \"Development Tools\"\n\n# sudo yum install libusb1-devel libudev-devel pm-utils-devel\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## CONFIG #####################################################################\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## RULES ######################################################################\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# not Linux, no epoll\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# not Linux, no Bricklet\n",
        "Line" : 112,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Linux and RED Brick <= 1.9\n",
        "Line" : 119,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Linux and RED Brick > 1.9\n",
        "Line" : 123,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Linux, but no RED Brick\n",
        "Line" : 126,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# not Linux, no RED Brick\n",
        "Line" : 132,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# libusb hotplug, libudev not required\n",
        "Line" : 167,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# no libusb hotplug, use libudev instead\n",
        "Line" : 171,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# not Linux, no libudev\n",
        "Line" : 176,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# not Linux, no pm-utils\n",
        "Line" : 204,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# not Linux, no systemd\n",
        "Line" : 219,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# tell GCC to use C99, but actually write C89 code plus stdint.h and stdbool.h\n\n# to be able to compile it with MSVC/WDK which supports C89 only\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# always link to librt for clock_gettime for compatibility with older glibc.\n\n# since glibc 2.17 this is not strictly necessary anymore, but detecting glibc\n\n# version is difficult and fragile, instead always link to librt.\n",
        "Line" : 364,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# ensure that there is enough room to rewrite the libusb install name\n",
        "Line" : 484,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# FIXME: make dependency handling work for MinGW\n\n# http://make.paulandlesley.org/autodep.html\n",
        "Line" : 671,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18,
      "Errorlog" : "line 333:11 token recognition error at: '\\d'\nline 333:16 token recognition error at: '\\b'\nline 555:2 token recognition error at: '\\d'\nline 555:7 token recognition error at: '\\b'\nline 556:20 token recognition error at: '\\d'\nline 556:34 token recognition error at: '\\d'\nline 558:23 token recognition error at: '\"..\\d'\nline 560:10 token recognition error at: '\"..\\b'\nline 560:24 token recognition error at: '\\w'\nline 560:32 token recognition error at: '\\l'\nline 560:39 token recognition error at: '\\l'\nline 560:59 token recognition error at: '\\d'\nline 562:10 token recognition error at: '\"..\\b'\nline 562:24 token recognition error at: '\\w'\nline 562:32 token recognition error at: '\\b'\nline 562:48 token recognition error at: '\\d'\n"
    },
    "src/build_data/android/brickd/app/CMakeLists.txt" : {
      "ObjectId" : "ab36984b22af7e97f072b551cf7dc4438d0e269e",
      "LastModified" : "2018-06-18T14:27:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For more information about using CMake with Android Studio, read the\n\n# documentation: https://d.android.com/studio/projects/add-native-code.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sets the minimum version of CMake required to build the native library.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Creates and names a library, sets it as either STATIC\n\n# or SHARED, and provides the relative paths to its source code.\n\n# You can define multiple libraries, and CMake builds them for you.\n\n# Gradle automatically packages shared libraries with your APK.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Searches for a specified prebuilt library and stores the path as a\n\n# variable. Because CMake includes system libraries in the search path by\n\n# default, you only need to specify the name of the public NDK library\n\n# you want to add. CMake verifies that the library exists before\n\n# completing its build.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Sets the name of the path variable.\n",
        "Line" : 70,
        "CharPositionInLine" : 14
      },
      "5" : {
        "Text" : "# Specifies the name of the NDK library that\n\n# you want CMake to locate.\n",
        "Line" : 73,
        "CharPositionInLine" : 14
      },
      "6" : {
        "Text" : "# Specifies libraries CMake should link to your target library. You\n\n# can link multiple libraries, such as libraries you define in this\n\n# build script, prebuilt third-party libraries, or system libraries.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Specifies the target library.\n",
        "Line" : 81,
        "CharPositionInLine" : 23
      },
      "8" : {
        "Text" : "# Links the target library to the log library\n\n# included in the NDK.\n",
        "Line" : 84,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 9
    },
    "src/build_data/android/brickd/app/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2018-06-08T18:07:17Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/build_data/openwrt/Makefile" : {
      "ObjectId" : "68d6fa7b61b45469238897050f1f1db0401bf65a",
      "LastModified" : "2018-06-08T18:07:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/tests/Makefile" : {
      "ObjectId" : "4189151642ca89e928d1e2ae656a3a89049943b2",
      "LastModified" : "2018-06-22T11:02:23Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile for GCC builds on Linux and macOS, and MinGW builds on Windows\n\n#\n\n# Debian/Ubuntu:\n\n# sudo apt-get install build-essential\n\n#\n\n# Fedora:\n\n# sudo yum groupinstall \"Development Tools\"\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## CONFIG #####################################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## RULES ######################################################################\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#CFLAGS += -O0 -g -ggdb\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# FIXME: make dependency handling work for MinGW\n\n# http://make.paulandlesley.org/autodep.html\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    }
  },
  "FileTypes" : {
    "CMAKE" : 1,
    "QMAKE" : 1,
    "MAKEFILE" : 3
  },
  "ElapsedTime" : 1492
}