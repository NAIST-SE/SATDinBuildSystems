{
  "Repository" : "22095589",
  "Revision" : "HEAD",
  "ObjectId" : "113700437675a1557b8b90af9e6dcbac232c3d7f",
  "CommitTime" : "2019-04-07T19:39:56Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "9893dfdcddbf725aa581e4b71b4a014ce5c7f2eb",
      "LastModified" : "2019-03-03T20:54:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determines what CMake APIs we can rely on\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do not allow in source builds\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make sure we can import out CMake functions\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Load in the needed CMake modules\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set up the project\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Detect the platform reliably\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CTest automation\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# C++ wrappers\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Thread Stack Size\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Serve no files from the web server\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Serve no files from the web server\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Disable caching\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C++ wrappers\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# IP Version 6\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Websocket support\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Server statistics support\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Memory debugging\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ASAN in debug mode (-fsanitize=address, etc)\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ARCH flag\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# LUA CGI support\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Enable installing CivetWeb executables\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Advanced users can disable\n",
        "Line" : 111,
        "CharPositionInLine" : 52
      },
      "22" : {
        "Text" : "# Allow builds to complete with warnings (do not set -Werror)\n\n# CivetWeb Linux support is stable:\n\n# Builds for GCC 4.6 and clang 3.4 are free from warnings.\n\n# However, GCC introduced a couple of new, partially idiotic warnings,\n\n# that can not be disabled using a #pragma directive.\n\n# It seems unreasonable to have all GCC versions warning free, but only\n\n# some selected ones.\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Link to the shared LUA library\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Lua Third Party Settings\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Lua Version\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Lua Verification Hash\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Lua Filesystem Version\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Lua Filesystem Verification Hash\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Lua SQLite Version\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Lua SQLite Verification Hash\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Lua XML Version\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Lua XML Verification Hash\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# SQLite Version\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# SQLite Verification Hash\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Duktape CGI support\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# SSL support\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# OpenSSL 1.1 API\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Dynamically load or link the SSL libraries\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Link time optimization\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Third Party Download location\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Unix systems can define the dynamic library names to load\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# SSL library name\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Crytography library name\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# Allow warnings in 3rd party components\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# The C and C++ standards to use\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Configure the linker\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Configure the C compiler\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#Warnings: enable everything\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# VisualStudio highest warning level\n",
        "Line" : 305,
        "CharPositionInLine" : 25
      },
      "50" : {
        "Text" : "#Warnings: Disable some warnings\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# padding in structures by compiler\n",
        "Line" : 308,
        "CharPositionInLine" : 33
      },
      "52" : {
        "Text" : "# so what?\n",
        "Line" : 309,
        "CharPositionInLine" : 40
      },
      "53" : {
        "Text" : "# for system headers\n",
        "Line" : 312,
        "CharPositionInLine" : 45
      },
      "54" : {
        "Text" : "# printf(myFormatStringVar, ...)\n",
        "Line" : 314,
        "CharPositionInLine" : 44
      },
      "55" : {
        "Text" : "# const cast\n",
        "Line" : 315,
        "CharPositionInLine" : 36
      },
      "56" : {
        "Text" : "# padding\n",
        "Line" : 316,
        "CharPositionInLine" : 29
      },
      "57" : {
        "Text" : "# Coverage build type\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Configure the C++ compiler\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# padding\n",
        "Line" : 386,
        "CharPositionInLine" : 33
      },
      "60" : {
        "Text" : "# Set up the definitions\n",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Set 32 or 64 bit environment\n",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# TODO: add support for -march\n",
        "Line" : 477,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Build the targets\n",
        "Line" : 479,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Enable the testing of the library/executable\n",
        "Line" : 482,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Check unit testing framework Version\n",
        "Line" : 485,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# Check unit testing framework Verification Hash\n\n# Hash for Check 0.10.0: 67a34c40b5bc888737f4e5ae82e9939f\n\n# Hash for Check 0.11.0: 1b14ee307dca8e954a8219c34484d7c4\n",
        "Line" : 492,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# Build the testing\n",
        "Line" : 500,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# cmake config file\n",
        "Line" : 504,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Set up CPack\n",
        "Line" : 537,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# RPM Packaging\n",
        "Line" : 553,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Debian Packaging\n",
        "Line" : 559,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# WiX Packaging\n\n# TODO: www.cmake.org/cmake/help/v3.0/module/CPackWIX.html\n",
        "Line" : 564,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Finalize CPack settings\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 74
    },
    "Makefile" : {
      "ObjectId" : "43d2dc33755221427e61a4d3c3062cabf5876b61",
      "LastModified" : "2018-10-07T19:16:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013 No Face Press, LLC\n\n# License http://opensource.org/licenses/mit-license.php MIT License\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# For help try, \"make help\"\n\n#\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#CXXPROG = civetweb\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Installation directories by convention\n\n# http://www.gnu.org/prep/standards/html_node/Directory-Variables.html\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# build tools\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# desired configuration of the document root\n\n# never assume that the document_root actually\n\n# exists on the build machine.  When building\n\n# a chroot, PREFIX if just a directory which\n\n# later becomes /.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The unit tests include the source files directly to get visibility to the\n\n# static functions.  So we clear OBJECTS so that we don't try to build or link\n\n# with any external object.  Later if we find WITH_LUA=1, we'll add lua objects\n\n# to this variable so we can run lua-specific unit tests.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# only set main compile options if none were chosen\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#WITH_CPP is not defined, ALL means only real features, not wrappers\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Use Lua?\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Use Duktape?\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Use zlib?\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Other features\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# File names\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Install target we do not want to overwrite\n\n# as it may be an upgrade\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Install target we do not want to overwrite\n\n# as it may be an upgrade\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# This rules is used to keep the code formatted in a reasonable manor\n\n# For this to work astyle must be installed and in the path\n\n# http://sourceforge.net/projects/astyle\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17,
      "Errorlog" : "line 293:105 token recognition error at: '\\1'\nline 327:105 token recognition error at: '\\1'\nline 351:105 token recognition error at: '\\1'\n"
    },
    "Qt/CivetWeb.pro" : {
      "ObjectId" : "e59aa9764a0a5fb42c12d356ceaefeaa422a0e9f",
      "LastModified" : "2018-04-29T20:32:29Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#include(deployment.pri)\n\n#qtcAddDeployment()\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#To build with DEBUG traces:\n\n#\n\n#DEFINES += DEBUG\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#To build with duktape support:\n\n#\n\n#INCLUDEPATH +=  \\\n#    ../src/third_party/duktape-1.8.0/src\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n#DEFINES += USE_DUKTAPE\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/AddCCompilerFlag.cmake" : {
      "ObjectId" : "f5550fa747a1e7b3c8ae5afa4958bd9a6c4eff59",
      "LastModified" : "2015-07-09T19:05:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Adds a compiler flag if it is supported by the compiler\n\n#\n\n# This function checks that the supplied compiler flag is supported and then\n\n# adds it to the corresponding compiler flags\n\n#\n\n#  add_c_compiler_flag(<FLAG> [<VARIANT>])\n\n#\n\n# - Example\n\n#\n\n# include(AddCCompilerFlag)\n\n# add_c_compiler_flag(-Wall)\n\n# add_c_compiler_flag(-no-strict-aliasing RELEASE)\n\n# Requires CMake 2.6+\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/AddCXXCompilerFlag.cmake" : {
      "ObjectId" : "5e58c6de4270ecb468cd6273f2b86a49d03ca089",
      "LastModified" : "2015-07-09T19:05:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Adds a compiler flag if it is supported by the compiler\n\n#\n\n# This function checks that the supplied compiler flag is supported and then\n\n# adds it to the corresponding compiler flags\n\n#\n\n#  add_cxx_compiler_flag(<FLAG> [<VARIANT>])\n\n#\n\n# - Example\n\n#\n\n# include(AddCXXCompilerFlag)\n\n# add_cxx_compiler_flag(-Wall)\n\n# add_cxx_compiler_flag(-no-strict-aliasing RELEASE)\n\n# Requires CMake 2.6+\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/DetermineTargetArchitecture.cmake" : {
      "ObjectId" : "7d18213f72b2742fbbaca2cecb29e68e96b58d6a",
      "LastModified" : "2015-07-09T19:05:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Determines the target architecture of the compilation\n\n#\n\n# This function checks the architecture that will be built by the compiler\n\n# and sets a variable to the architecture\n\n#\n\n#  determine_target_architecture(<OUTPUT_VAR>)\n\n#\n\n# - Example\n\n#\n\n# include(DetermineTargetArchitecture)\n\n# determine_target_architecture(PROJECT_NAME_ARCHITECTURE)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindLibDl.cmake" : {
      "ObjectId" : "c018d92398b9fbd44e97c67ddec17c42f9f6b44f",
      "LastModified" : "2015-07-09T19:05:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindLibDl\n\n# --------\n\n#\n\n# Find the native realtime includes and library.\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines :prop_tgt:`IMPORTED` target ``LIBDL::LIBDL``, if\n\n# LIBDL has been found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#   LIBDL_INCLUDE_DIRS  - where to find dlfcn.h, etc.\n\n#   LIBDL_LIBRARIES     - List of libraries when using libdl.\n\n#   LIBDL_FOUND         - True if dynamic linking library found.\n\n#\n\n# Hints\n\n# ^^^^^\n\n#\n\n# A user may set ``LIBDL_ROOT`` to a library installation root to tell this\n\n# module where to look.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindLibM.cmake" : {
      "ObjectId" : "9f42aa493a16ddd358854c47a87136875a8f4e24",
      "LastModified" : "2016-10-21T22:28:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindLibM\n\n# --------\n\n#\n\n# Find the native realtime includes and library.\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines :prop_tgt:`IMPORTED` target ``LIBM::LIBM``, if\n\n# LIBM has been found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#   LIBM_INCLUDE_DIRS  - where to find math.h, etc.\n\n#   LIBM_LIBRARIES     - List of libraries when using libm.\n\n#   LIBM_FOUND         - True if math library found.\n\n#\n\n# Hints\n\n# ^^^^^\n\n#\n\n# A user may set ``LIBM_ROOT`` to a math library installation root to tell this\n\n# module where to look.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindLibRt.cmake" : {
      "ObjectId" : "c496edf862a3a8c6357718e63336e492d7a45af9",
      "LastModified" : "2015-07-09T19:05:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindLibRt\n\n# --------\n\n#\n\n# Find the native realtime includes and library.\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines :prop_tgt:`IMPORTED` target ``LIBRT::LIBRT``, if\n\n# LIBRT has been found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#   LIBRT_INCLUDE_DIRS  - where to find time.h, etc.\n\n#   LIBRT_LIBRARIES     - List of libraries when using librt.\n\n#   LIBRT_FOUND         - True if realtime library found.\n\n#\n\n# Hints\n\n# ^^^^^\n\n#\n\n# A user may set ``LIBRT_ROOT`` to a realtime installation root to tell this\n\n# module where to look.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindWinSock.cmake" : {
      "ObjectId" : "0bf355decf0afea56d954881b53636b6b2f9fade",
      "LastModified" : "2015-07-09T19:05:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindWinSock\n\n# --------\n\n#\n\n# Find the native realtime includes and library.\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines :prop_tgt:`IMPORTED` target ``WINSOCK::WINSOCK``, if\n\n# WINSOCK has been found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#   WINSOCK_INCLUDE_DIRS  - where to find winsock.h, etc.\n\n#   WINSOCK_LIBRARIES     - List of libraries when using librt.\n\n#   WINSOCK_FOUND         - True if realtime library found.\n\n#\n\n# Hints\n\n# ^^^^^\n\n#\n\n# A user may set ``WINSOCK_ROOT`` to a realtime installation root to tell this\n\n# module where to look.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/check/patch.cmake" : {
      "ObjectId" : "472d392b5d57b99f6f7ac25f8be4598dcebd2a97",
      "LastModified" : "2015-07-09T19:05:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Patch checks for MinGW\n\n# https://sourceforge.net/p/check/patches/53/\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "conan/test_package/CMakeLists.txt" : {
      "ObjectId" : "e5034b542f17831719da994be529f3c365bd50df",
      "LastModified" : "2018-12-18T18:08:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/_obsolete/chat/Makefile" : {
      "ObjectId" : "e8d12be69be6375e08466347331508a21d45cf11",
      "LastModified" : "2016-12-23T09:48:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# \n\n# Copyright (c) 2013 No Face Press, LLC\n\n# License http://opensource.org/licenses/mit-license.php MIT License\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#This makefile is used to test the other Makefiles\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/_obsolete/hello/Makefile" : {
      "ObjectId" : "4424e3b58effe2b021afc4f8530a22a5db4b2965",
      "LastModified" : "2016-12-23T09:48:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# \n\n# Copyright (c) 2013 No Face Press, LLC\n\n# License http://opensource.org/licenses/mit-license.php MIT License\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#This makefile is used to test the other Makefiles\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/_obsolete/post/Makefile" : {
      "ObjectId" : "6e504f437f867b2a0cdb954cfd9e6e6111f80b6a",
      "LastModified" : "2016-12-23T09:48:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# \n\n# Copyright (c) 2013 No Face Press, LLC\n\n# License http://opensource.org/licenses/mit-license.php MIT License\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#This makefile is used to test the other Makefiles\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/_obsolete/upload/Makefile" : {
      "ObjectId" : "9c6270fb22d21e65a45746e54d1957700eb3cc7a",
      "LastModified" : "2016-12-23T09:48:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# \n\n# Copyright (c) 2013 No Face Press, LLC\n\n# License http://opensource.org/licenses/mit-license.php MIT License\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#This makefile is used to test the other Makefiles\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/_obsolete/websocket/Makefile" : {
      "ObjectId" : "3d654929733dcd08ccec462ce3a4895c4e419822",
      "LastModified" : "2016-12-23T09:48:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# \n\n# Copyright (c) 2013 No Face Press, LLC\n\n# License http://opensource.org/licenses/mit-license.php MIT License\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#This makefile is used to test the other Makefiles\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/_obsolete/websocket_client/Makefile" : {
      "ObjectId" : "e3ef1346883db890c7002650c52d9fcd7d07d8e9",
      "LastModified" : "2016-12-23T09:48:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# \n\n# Copyright (c) 2014 Jordan Shelley\n\n# https://github.com/jshelley\n\n# License http://opensource.org/licenses/mit-license.php MIT License\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#This makefile is used to test the other Makefiles\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/_obsolete/ws_server/Makefile" : {
      "ObjectId" : "60d9dbedbddc17f717bb4eb0f58d9367ceae1969",
      "LastModified" : "2016-12-23T09:48:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# \n\n# Copyright (c) 2013 No Face Press, LLC\n\n# License http://opensource.org/licenses/mit-license.php MIT License\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#This makefile is used to test the other Makefiles\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/embedded_c/Makefile" : {
      "ObjectId" : "93d6379db2664fdf22b1c85190e3e44ae63a0ad4",
      "LastModified" : "2016-12-23T09:48:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# \n\n# Copyright (c) 2013 No Face Press, LLC\n\n# License http://opensource.org/licenses/mit-license.php MIT License\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#This makefile is used to test the other Makefiles\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/embedded_cpp/Makefile" : {
      "ObjectId" : "65adf98bb2daca9ed6cdbefc1cadf80e6d328b89",
      "LastModified" : "2016-12-23T09:48:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# \n\n# Copyright (c) 2013 No Face Press, LLC\n\n# License http://opensource.org/licenses/mit-license.php MIT License\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#This makefile is used to test the other Makefiles\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/rest/Makefile" : {
      "ObjectId" : "e4d44aaea10fff2d9e22bce18fc745e0c0558675",
      "LastModified" : "2018-04-29T20:32:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# \n\n# Copyright (c) 2018 CivetWeb Developers\n\n# Copyright (c) 2013 No Face Press, LLC\n\n# License http://opensource.org/licenses/mit-license.php MIT License\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#This makefile is used to test the other Makefiles\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "898abce2dff069a8f4a645041cdbf46c62f4c212",
      "LastModified" : "2018-11-25T16:42:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The C API library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Need Windows sockets if available\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We need threading\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Need the realtime library if we're using timers\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We need to link OpenSSL if not dynamically loading\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If Lua support is needed we build some extra Lua libraries\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Determine if we should print to the output\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# If Lua is static we must build it from source\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Lua Filesystem Support\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Lua SQLite Support\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Lua XML Support\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Old:\n\n#    URL \"http://viremo.eludi.net/LuaXML/${LUA_XML_FILENAME}\"\n\n#    URL_MD5 ${CIVETWEB_LUA_XML_MD5_HASH}\n\n#    PREFIX \"${CIVETWEB_THIRD_PARTY_DIR}\"\n\n#\n\n# TODO: find current sourde\n\n# viremo.eludi.net does no longer exist\n\n# An extended version is available at https://github.com/n1tehawk/LuaXML\n\n# but the last commit there was in 2015\n\n#\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# TODO: fix this patch command (needs someone with deeper CMake know how)\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# SQLite Support\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Link all the Lua libraries\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# The web server executable\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# The C++ API library\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "src/third_party/duktape-1.5.2/debugger/Makefile" : {
      "ObjectId" : "50740b54993f8b02e740b71833089775d6bb729a",
      "LastModified" : "2018-04-29T20:32:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Try to get a useful default --source-dirs which works both in the Duktape\n\n# repo and in the distributable.  We don't want to add '..' because it would\n\n# scan a lot of undesired files in the Duktape repo (e.g. test262 testcases).\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# http://balupton.github.io/jquery-syntaxhighlighter/demo/\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# http://steamdev.com/snippet/\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# http://prismjs.com/\n\n# http://prismjs.com/plugins/line-highlight/\n\n#\n\n# XXX: prism download manually?\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# https://raw.github.com/LeaVerou/prefixfree/gh-pages/prefixfree.min.js\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# http://meyerweb.com/eric/tools/css/reset/\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/third_party/duktape-1.5.2/examples/debug-trans-dvalue/Makefile" : {
      "ObjectId" : "9d9d0b5886ea53ed06e795ceb3729c962d56a73b",
      "LastModified" : "2018-04-29T20:32:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set DUKTAPE_SRC to 'src' dir of Duktape distributable.\n\n# The default is for the dist environment.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#DUKTAPE_OPTS+=-DDUK_OPT_DEBUGGER_TRANSPORT_TORTURE\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#TRANS_OPTS+=-DDEBUG_PRINTS\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/third_party/duktape-1.8.0/debugger/Makefile" : {
      "ObjectId" : "50740b54993f8b02e740b71833089775d6bb729a",
      "LastModified" : "2018-04-29T20:32:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Try to get a useful default --source-dirs which works both in the Duktape\n\n# repo and in the distributable.  We don't want to add '..' because it would\n\n# scan a lot of undesired files in the Duktape repo (e.g. test262 testcases).\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# http://balupton.github.io/jquery-syntaxhighlighter/demo/\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# http://steamdev.com/snippet/\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# http://prismjs.com/\n\n# http://prismjs.com/plugins/line-highlight/\n\n#\n\n# XXX: prism download manually?\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# https://raw.github.com/LeaVerou/prefixfree/gh-pages/prefixfree.min.js\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# http://meyerweb.com/eric/tools/css/reset/\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/third_party/duktape-1.8.0/examples/debug-trans-dvalue/Makefile" : {
      "ObjectId" : "9d9d0b5886ea53ed06e795ceb3729c962d56a73b",
      "LastModified" : "2018-04-29T20:32:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set DUKTAPE_SRC to 'src' dir of Duktape distributable.\n\n# The default is for the dist environment.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#DUKTAPE_OPTS+=-DDUK_OPT_DEBUGGER_TRANSPORT_TORTURE\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#TRANS_OPTS+=-DDEBUG_PRINTS\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/third_party/lua-5.1.5/Makefile" : {
      "ObjectId" : "209a1324418c25c7b0abc766fe6bd338df5b203f",
      "LastModified" : "2018-04-29T20:32:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# makefile for installing Lua\n\n# see INSTALL for installation instructions\n\n# see src/Makefile and src/luaconf.h for further customization\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to install. The installation starts in the src and doc directories,\n\n# so take care if INSTALL_TOP is not an absolute path.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# You probably want to make INSTALL_LMOD and INSTALL_CMOD consistent with\n\n# LUA_ROOT, LUA_LDIR, and LUA_CDIR in luaconf.h (and also with etc/lua.pc).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# How to install. If your install program does not support \"-p\", then you\n\n# may have to run ranlib on the installed liblua.a (do \"make ranlib\").\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# If you don't have install you can use cp instead.\n\n# INSTALL= cp -p\n\n# INSTALL_EXEC= $(INSTALL)\n\n# INSTALL_DATA= $(INSTALL)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Utilities.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# == END OF USER SETTINGS. NO NEED TO CHANGE ANYTHING BELOW THIS LINE =========\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Convenience platforms targets.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# What to install.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Lua version and release.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# make may get confused with test/ and INSTALL in a case-insensitive OS\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# echo config parameters\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# echo private config parameters\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# echo config parameters as Lua code\n\n# uncomment the last sed expression if you want nil instead of empty strings\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-e 's/\"\"/nil/'\n",
        "Line" : 122,
        "CharPositionInLine" : 58
      },
      "17" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "src/third_party/lua-5.1.5/etc/Makefile" : {
      "ObjectId" : "6d00008d98157eb4c3c83db0e74682f756c8104d",
      "LastModified" : "2018-04-29T20:32:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# makefile for Lua etc\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MYLIBS= -lm -Wl,-E -ldl -lreadline -lhistory -lncurses\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/third_party/lua-5.1.5/src/Makefile" : {
      "ObjectId" : "e0d4c9fa649c74f961ff77d29f980c662b749eeb",
      "LastModified" : "2018-04-29T20:32:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# makefile for building Lua\n\n# see ../INSTALL for installation instructions\n\n# see ../Makefile and luaconf.h for further customization\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# == END OF USER SETTINGS. NO NEED TO CHANGE ANYTHING BELOW THIS LINE =========\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# DLL needs all object files\n",
        "Line" : 51,
        "CharPositionInLine" : 29
      },
      "5" : {
        "Text" : "# convenience targets for popular platforms\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# use this on Mac OS X 10.3-\n\n#\t$(MAKE) all MYCFLAGS=-DLUA_USE_MACOSX\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# DO NOT DELETE\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "src/third_party/lua-5.2.4/Makefile" : {
      "ObjectId" : "b2a62cfdd1be8a127a064d03c2dd2364673af9c2",
      "LastModified" : "2018-04-29T20:32:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for installing Lua\n\n# See doc/readme.html for installation and customization instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to install. The installation starts in the src and doc directories,\n\n# so take care if INSTALL_TOP is not an absolute path. See the local target.\n\n# You may want to make INSTALL_LMOD and INSTALL_CMOD consistent with\n\n# LUA_ROOT, LUA_LDIR, and LUA_CDIR in luaconf.h.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# How to install. If your install program does not support \"-p\", then\n\n# you may have to run ranlib on the installed liblua.a.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# If you don't have \"install\" you can use \"cp\" instead.\n\n# INSTALL= cp -p\n\n# INSTALL_EXEC= $(INSTALL)\n\n# INSTALL_DATA= $(INSTALL)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other utilities.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# == END OF USER SETTINGS -- NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Convenience platforms targets.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# What to install.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Lua version and release.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets start here.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# make may get confused with test/ and install/\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# echo config parameters\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# echo pkg-config data\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "src/third_party/lua-5.2.4/src/Makefile" : {
      "ObjectId" : "7b4b2b75420b876d0116b8af25c11ac44288ce10",
      "LastModified" : "2018-04-29T20:32:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for building Lua\n\n# See ../doc/readme.html for installation and customization instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# == END OF USER SETTINGS -- NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Targets start here.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Convenience targets for popular platforms\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DO NOT DELETE\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/third_party/lua-5.3.5/Makefile" : {
      "ObjectId" : "119110d2f01054adddec43ea75dba1a744e7e5f8",
      "LastModified" : "2019-03-25T19:10:38Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for installing Lua\n\n# See doc/readme.html for installation and customization instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to install. The installation starts in the src and doc directories,\n\n# so take care if INSTALL_TOP is not an absolute path. See the local target.\n\n# You may want to make INSTALL_LMOD and INSTALL_CMOD consistent with\n\n# LUA_ROOT, LUA_LDIR, and LUA_CDIR in luaconf.h.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# How to install. If your install program does not support \"-p\", then\n\n# you may have to run ranlib on the installed liblua.a.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# If you don't have \"install\" you can use \"cp\" instead.\n\n# INSTALL= cp -p\n\n# INSTALL_EXEC= $(INSTALL)\n\n# INSTALL_DATA= $(INSTALL)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other utilities.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# == END OF USER SETTINGS -- NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Convenience platforms targets.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# What to install.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Lua version and release.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets start here.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# make may get confused with test/ and install/\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# echo config parameters\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# echo pkg-config data\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "src/third_party/lua-5.3.5/src/Makefile" : {
      "ObjectId" : "64c78f775ba0eddb6e3a98c74bfebb2252f382ac",
      "LastModified" : "2019-03-25T19:10:38Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for building Lua\n\n# See ../doc/readme.html for installation and customization instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# == END OF USER SETTINGS -- NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Targets start here.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Convenience targets for popular platforms\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DO NOT DELETE\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "unittest/CMakeLists.txt" : {
      "ObjectId" : "c4cdf2295af153b36422c45e3c79b13b1980443c",
      "LastModified" : "2019-03-25T19:10:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determine if we should print to the output\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We use the check unit testing framework for our C unit tests\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if(NOT WIN32)\n\n#  # Apply the patch to check to fix CMake building on OS X\n\n#  set(CHECK_PATCH_COMMAND patch\n\n#     ${CIVETWEB_THIRD_PARTY_DIR}/src/check-unit-test-framework/CMakeLists.txt\n\n#     ${CMAKE_SOURCE_DIR}/cmake/check/c82fe8888aacfe784476112edd3878256d2e30bc.patch\n\n#   )\n\n#else()\n\n#  set(CHECK_PATCH_COMMAND \"\")\n\n#endif()\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Use an official, released check version:\n\n#  URL \"https://codeload.github.com/libcheck/check/zip/${CIVETWEB_CHECK_VERSION}\"\n\n#  DOWNLOAD_NAME \"${CIVETWEB_CHECK_VERSION}.zip\"\n\n#  URL_MD5 ${CIVETWEB_CHECK_MD5_HASH}\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Use a civetweb specific patched version\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# <Edit this file to flush AppVeyor build cache and force reloading check>\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build the C unit tests\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add a check command that builds the dependent test program\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# A macro for adding tests\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Tests of private functions\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Public API function tests\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Public API server tests\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Timer tests\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Tests with main.c\n\n#civetweb_add_test(EXE \"Helper funcs\")\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Add the coverage command(s)\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    }
  },
  "FileTypes" : {
    "CMAKE" : 12,
    "QMAKE" : 1,
    "MAKEFILE" : 22
  },
  "ElapsedTime" : 2927
}