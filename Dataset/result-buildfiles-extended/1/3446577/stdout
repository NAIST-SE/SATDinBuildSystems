{
  "Repository" : "3446577",
  "Revision" : "HEAD",
  "ObjectId" : "653ee3fa29b029c8033efc717b36d94b4cc453dd",
  "CommitTime" : "2018-12-27T14:18:03Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "7ea71bcc33c90bf3554c4dff23c937c35b8103b2",
      "LastModified" : "2018-12-26T21:08:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# options\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set cmake stuff\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_definitions(\"-Wall\")\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Locate dependencies in thirdparty/\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} ${CMAKE_SOURCE_DIR}/thirdparty/CMake ${CMAKE_SOURCE_DIR}/thirdparty/lib/cmake)\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cmake/Modules/FindGMock.cmake" : {
      "ObjectId" : "f8c9fea0ed5673b9690e8cf0a4b3c8b4d5ce40f4",
      "LastModified" : "2018-07-12T18:31:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate the Google C++ Mocking Framework.\n\n# (This file is almost an identical copy of the original FindGTest.cmake file,\n\n#  feel free to use it as it is or modify it for your own needs.)\n\n#\n\n#\n\n# Defines the following variables:\n\n#\n\n#   GMOCK_FOUND - Found the Google Testing framework\n\n#   GMOCK_INCLUDE_DIRS - Include directories\n\n#\n\n# Also defines the library variables below as normal\n\n# variables. These contain debug/optimized keywords when\n\n# a debugging library is found.\n\n#\n\n#   GMOCK_BOTH_LIBRARIES - Both libgmock & libgmock-main\n\n#   GMOCK_LIBRARIES - libgmock\n\n#   GMOCK_MAIN_LIBRARIES - libgmock-main\n\n#\n\n# Accepts the following variables as input:\n\n#\n\n#   GMOCK_ROOT - (as a CMake or environment variable)\n\n#                The root directory of the gmock install prefix\n\n#\n\n#   GMOCK_MSVC_SEARCH - If compiling with MSVC, this variable can be set to\n\n#                       \"MD\" or \"MT\" to enable searching a gmock build tree\n\n#                       (defaults: \"MD\")\n\n#\n\n#-----------------------\n\n# Example Usage:\n\n#\n\n#    find_package(GMock REQUIRED)\n\n#    include_directories(${GMOCK_INCLUDE_DIRS})\n\n#\n\n#    add_executable(foo foo.cc)\n\n#    target_link_libraries(foo ${GMOCK_BOTH_LIBRARIES})\n\n#\n\n#=============================================================================\n\n# This file is released under the MIT licence:\n\n#\n\n# Copyright (c) 2011 Matej Svec\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to\n\n# deal in the Software without restriction, including without limitation the\n\n# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n\n# sell copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n\n# IN THE SOFTWARE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The provided /MD project files for Google Mock add -md suffixes to the\n\n# library names.\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "c2911877d9d8c0d6527759d43e4af13624cce627",
      "LastModified" : "2018-12-26T21:08:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/gui/ng/CMakeLists.txt" : {
      "ObjectId" : "83b58b3753ca368ccb47356136c93e19b67f9e91",
      "LastModified" : "2018-12-24T14:16:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "621d072268bc6fa8b7fa76f71bfdf2c9a2663451",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "thirdparty/CMakeLists.txt" : {
      "ObjectId" : "782d2c8024bcc8003894252ea54ed387bb4ae880",
      "LastModified" : "2018-12-26T21:08:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(THIRDPARTY_INSTAL_DIR ${CMAKE_SOURCE_DIR})\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SFML\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TinyXml2\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${THIRDPARTY_INSTAL_DIR}\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Yaml-Cpp\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${THIRDPARTY_INSTAL_DIR} -DYAML_CPP_BUILD_TESTS=OFF -DYAML_CPP_BUILD_TOOLS=OFF\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    }
  },
  "FileTypes" : {
    "CMAKE" : 6
  },
  "ElapsedTime" : 839
}