{
  "Repository" : "77448",
  "Revision" : "HEAD",
  "ObjectId" : "93db6e16895287b7ac3a8a8f7f4a4f176547b7ed",
  "CommitTime" : "2019-04-15T18:44:22Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "1e7db3ed3eb7a2ca276bd4739fa3cc4932ead3ff",
      "LastModified" : "2019-01-05T16:25:04Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# This file is part of the flashrom project.\n\n#\n\n# Copyright (C) 2005 coresystems GmbH <stepan@coresystems.de>\n\n# Copyright (C) 2009,2010,2012 Carl-Daniel Hailfinger\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; version 2 of the License.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Defaults for the toolchain.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If you want to cross-compile, just run e.g.\n\n# make CC=i586-pc-msdosdjgpp-gcc\n\n# You may have to specify STRIP/AR/RANLIB as well.\n\n#\n\n# Note for anyone editing this Makefile: gnumake will happily ignore any\n\n# changes in this Makefile to variables set on the command line.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The following parameter changes the default programmer that will be used if there is no -p/--programmer\n\n# argument given when running flashrom. The predefined setting does not enable any default so that every\n\n# user has to declare the programmer he wants to use on every run. The rationale for this to be not set\n\n# (to e.g. the internal programmer) is that forgetting to specify this when working with another programmer\n\n# easily puts the system attached to the default programmer at risk (e.g. you want to flash coreboot to another\n\n# system attached to an external programmer while the default programmer is set to the internal programmer, and\n\n# you forget to use the -p parameter. This would (try to) overwrite the existing firmware of the computer\n\n# running flashrom). Please do not enable this without thinking about the possible consequences. Possible\n\n# values are those specified in enum programmer in programmer.h (which depend on other CONFIG_* options\n\n# evaluated below, namely those that enable/disable the various programmers).\n\n# Compilation will fail for unspecified values.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The following adds a default parameter for the default programmer set above (only).\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Example: compiling with\n\n#   make CONFIG_DEFAULT_PROGRAMMER=PROGRAMMER_SERPROG CONFIG_DEFAULT_PROGRAMMER_ARGS=\"dev=/dev/ttyUSB0:1500000\"\n\n# would make executing './flashrom' (almost) equivialent to './flashrom -p serprog:dev=/dev/ttyUSB0:1500000'.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If your compiler spits out excessive warnings, run make WARNERROR=no\n\n# You shouldn't have to change this flag.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Set LC_ALL=C to minimize influences of the locale.\n\n# However, this won't work for the majority of relevant commands because they use the $(shell) function and\n\n# GNU make does not relay variables exported within the makefile to their evironment.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Provide an easy way to execute a command, print its output to stdout and capture any error message on stderr\n\n# in the build details file together with the original stdout output.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###############################################################################\n\n# General OS-specific settings.\n\n# 1. Prepare for later by gathering information about host and target OS\n\n# 2. Set compiler flags and parameters according to OSes\n\n# 3. Likewise verify user-supplied CONFIG_* variables.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# HOST_OS is only used to work around local toolchain issues.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Explicitly set CC = gcc on MinGW, otherwise: \"cc: command not found\".\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Determine the destination OS.\n\n# IMPORTANT: The following line must be placed before TARGET_OS is ever used\n\n# (of course), but should come after any lines setting CC because the line\n\n# below uses CC itself.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13,
      "Errorlog" : "line 1539:31 token recognition error at: '\" AR=i386-elf-ar RANLIB=i386-elf-ranlib\\n\\n.PHONY: all install clean distclean compiler hwlibs features _export export tarball featuresavailable libpayload\\n\\n# Disable implicit suffixes and built-in rules (for performance and profit)\\n.SUFFIXES:\\n\\n-include $(OBJS:.o=.d)\\n\u0000'\n"
    },
    "util/ich_descriptors_tool/Makefile" : {
      "ObjectId" : "c32e30be5bfc20252563da54f32bcca76ff46bc7",
      "LastModified" : "2018-06-23T19:41:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# This file is part of the flashrom project.\n\n#\n\n# This Makefile works standalone, but it is usually called from the main\n\n# Makefile in the flashrom directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your compiler spits out excessive warnings, run make WARNERROR=no\n\n# You shouldn't have to change this flag.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If the user has specified custom CFLAGS, all CFLAGS settings below will be\n\n# completely ignored by gnumake.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Explicitly set CC = gcc on MinGW, otherwise: \"cc: command not found\".\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Some functions provided by Microsoft do not work as described in C99 specifications. This macro fixes that\n\n# for MinGW. See http://sourceforge.net/p/mingw-w64/wiki2/printf%20and%20scanf%20family/ */\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5,
      "Errorlog" : "line 36:15 token recognition error at: '\"')\\n\\nifeq ($(TARGET_OS), DOS)\\nEXEC_SUFFIX := .exe\\n# DJGPP has odd uint*_t definitions which cause lots of format string warnings.\\nCFLAGS += -Wno-format\\nendif\\n\\nifeq ($(WARNERROR), yes)\\nCFLAGS += -Werror\\nendif\\n\\n\\nFLASHROM_CFLAGS += -MMD -MP -MF $(DEPPATH)/$(@F).d\\n# enables functions that populate the descriptor structs from plain binary dumps\\nFLASHROM_CFLAGS += -D ICH_DESCRIPTORS_FROM_DUMP_ONLY\\nFLASHROM_CFLAGS += $(patsubst %,-I%,$(EXTRAINCDIRS))\\n\\nOBJ = $(OBJATH)/$(SRC:%.c=%.o)\\n\\nSHAREDOBJ = $(OBJATH)/$(notdir $(SHAREDSRC:%.c=%.o))\\n\\nall:$(PROGRAM)$(EXEC_SUFFIX)\\n\\n$(OBJ): $(OBJATH)/%.o : %.c\\n\\t$(CC) $(CFLAGS) $(CPPFLAGS) $(FLASHROM_CFLAGS) -o $@ -c $<\\n\\n# this enables us to share source files without simultaneously sharing .o files\\n# with flashrom, which would lead to unexpected results (w/o running make clean)\\n$(SHAREDOBJ): $(OBJATH)/%.o : $(SHAREDSRCDIR)/%.c\\n\\t$(CC) $(CFLAGS) $(CPPFLAGS) $(FLASHROM_CFLAGS) -o $@ -c $<\\n\\n$(PROGRAM)$(EXEC_SUFFIX): $(OBJ) $(SHAREDOBJ)\\n\\t$(CC) $(LDFLAGS) -o $(PROGRAM)$(EXEC_SUFFIX) $(OBJ) $(SHAREDOBJ)\\n\\nclean:\\n\\trm -f $(PROGRAM) $(PROGRAM).exe\\n\\trm -rf $(DEPPATH) $(OBJATH)\\n\\n# Include the dependency files.\\n-include $(shell mkdir -p $(DEPPATH) $(OBJATH) 2>/dev/null) $(wildcard $(DEPPATH)/*)\\n\\n.PHONY: all clean\\n\u0000'\n"
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 909
}