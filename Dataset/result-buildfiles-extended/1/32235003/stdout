{
  "Repository" : "32235003",
  "Revision" : "HEAD",
  "ObjectId" : "eeb9a0097f626b75024cfdb828a75fc52702f4b2",
  "CommitTime" : "2018-09-18T14:55:36Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "1eacddd21a5ee9ca27c4e87ff6886d9d2146245c",
      "LastModified" : "2017-11-17T17:48:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Local CMake Modules\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Export libraries along with our DLLs if we want to build shared\n\n# Allow the developer to select if Dynamic or Static libraries are built\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# This looks for an osvrConfig.cmake file - most of the time it can be\n\n# autodetected but you might need to specify osvr_DIR to be something like\n\n# C:/Users/Ryan/Desktop/build/OSVR-Core-vc12 or\n\n# C:/Users/Ryan/Downloads/OSVR-Core-Snapshot-v0.1-406-gaa55515-build54-vs12-32bit\n\n# in the CMake GUI or command line\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check for the NDA submodules\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add one of these libraries for each vendor that we've got a driver\n\n# for and add a No driver that tells that it is unavailable when we\n\n# don't find the driver library.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Well, redistributables technically, not tools, but close enough.\n",
        "Line" : 79,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Find redistributable version of d3dcompiler_47 which is required for pre-Win8 systems.\n",
        "Line" : 81,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Set the debug postfix default\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# These configurations have the tools installed.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Finally, vendored dependencies\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Open (non-NDA) files\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###\n\n# Graphics API support\n\n###\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set up defines and includes as if we were building as a part of the main rendermanager library\n",
        "Line" : 145,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Add the objects to the main library sources.\n",
        "Line" : 149,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# How to build the NDA modules in \"Debug\" mode (since MSVC has a separate debug runtime) without potentially NDA-violating debug symbols\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Backup the original flags\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#message(STATUS \"Old CMAKE_CXX_FLAGS_DEBUG: '${_osvrrm_debug_flags_bak}'  New: '${CMAKE_CXX_FLAGS_DEBUG}'\")\n\n#message(STATUS \"Old CMAKE_CXX_FLAGS_RELWITHDEBINFO: '${_osvrrm_relwithdebinfo_flags_bak}'  New: '${CMAKE_CXX_FLAGS_RELWITHDEBINFO}'\")\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# no-ops\n",
        "Line" : 172,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGL library as a stand-alone renderer not wrapping D3D\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Usage dependencies\n",
        "Line" : 216,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# nVidia NDA files - object library so we can specify different debug compile flags.\n",
        "Line" : 221,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# Usage dependencies\n",
        "Line" : 237,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# AMD NDA files - object library so we can specify different debug compile flags.\n",
        "Line" : 242,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# Usage dependencies\n",
        "Line" : 258,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# Intel NDA files - object library so we can specify different debug compile flags.\n",
        "Line" : 261,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# Sensics is a header-only lib for now\n",
        "Line" : 277,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# SDL init/quit handler code that makes sure we only do it once.\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGL wrapped around Direct3D\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGL library as a wrapper for D3D DirectMode\n",
        "Line" : 296,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "###\n\n# Set up build product locations\n\n###\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Sometimes GNUInstallDirs misses this one.\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Win-specific: we want shared libs (dlls) in same dir as exe files.\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Let's build into a parallel(ish) structure as we'll install to.\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "###\n\n# Helper for dependencies\n\n###\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "## Copy and install shared libraries from imported targets as required.\n\n## Also generate a list of imported targets for clients of RM to make use of.\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "###\n\n# Build the actual library\n\n###\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Generate the header with the defines we need.\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# If we are using dynamic GLEW on Windows, let's copy it.\n",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# This also lets it know where to find the header files.\n",
        "Line" : 500,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Add the C++ interface target.\n",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Alias targets, so the examples can be used as-is.\n",
        "Line" : 516,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Install d3dcompiler_47\n",
        "Line" : 521,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "# The goal with this variable is so that the same CMakeLists file that is used to build\n\n# the examples in-tree can be shipped to build the examples out-of-tree.\n",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Enable DirectMode on attached OSVR HDKs\n\n# TODO rename to EnableOSVRDirectModeNVIDIA\n",
        "Line" : 555,
        "CharPositionInLine" : 1
      },
      "44" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Disable DirectMode on attached OSVR HDKs\n\n# TODO rename to DisableOSVRDirectModeNVIDIA\n",
        "Line" : 561,
        "CharPositionInLine" : 1
      },
      "45" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Debugging/troubleshooting application for direct mode.\n",
        "Line" : 567,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Enable DirectMode on attached OSVR HDKs\n",
        "Line" : 586,
        "CharPositionInLine" : 1
      },
      "47" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Disable DirectMode on attached OSVR HDKs\n",
        "Line" : 591,
        "CharPositionInLine" : 1
      },
      "48" : {
        "Text" : "###\n\n# Set Up Package for External Usage\n\n###\n",
        "Line" : 606,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Export the targets we want in the build tree.\n",
        "Line" : 624,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Register the current build dir as a package search location\n",
        "Line" : 632,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Generate the config file for build-tree usage.\n",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Path hints for build-tree usage only.\n",
        "Line" : 642,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Generate the config file for installed usage.\n",
        "Line" : 648,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Copy over the shared CMake modules for use in a build tree,\n\n# and install for an install tree.\n",
        "Line" : 655,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Needed by CMakeBoostHelper\n",
        "Line" : 666,
        "CharPositionInLine" : 1
      },
      "56" : {
        "Text" : "# Install an install-tree only helper and a generated file\n",
        "Line" : 680,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Install the install-tree version of the CMake config file.\n",
        "Line" : 687,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Install examples\n",
        "Line" : 694,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Tests\n",
        "Line" : 706,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 60
    },
    "apps/CMakeLists.txt" : {
      "ObjectId" : "811452de8709a6cd39a9408ea156a4a44f05eb53",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Modified version of the OpenGL \"High Poly\" test that just renders a head-locked chessboard.\n",
        "Line" : 3,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "cmake/CMakeBoostHelper.cmake" : {
      "ObjectId" : "f52bb139ae85c56ed786dd2bc3932ce377043697",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Help CMake find recent Boost MSVC binaries without manual configuration.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Most common ABI\n",
        "Line" : 4,
        "CharPositionInLine" : 40
      },
      "2" : {
        "Text" : "# Function exists solely to introduce a new scope for CMAKE_MODULE_PATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Get all versions, newest first.\n",
        "Line" : 25,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "cmake/CopyImportedTarget.cmake" : {
      "ObjectId" : "fed23b4fa9c91daf57cde7dbe5accb948a512400",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Copy shared libraries from imported targets to the target build directory\n\n# on Windows during post-build. Install them in all cases.\n\n#\n\n#  copy_imported_targets(<target_name> [<imported target name> ...])\n\n#\n\n#  install_imported_target(<imported target name> <arguments to pass to install(FILES))\n\n#\n\n# Likely requires CMake 2.8.12 or newer to work well.\n\n#\n\n# Original Author:\n\n# 2015 Ryan Pavlik <ryan.pavlik@gmail.com> <abiryan@ryand.net>\n\n#\n\n# Copyright Sensics, Inc. 2015.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindEigen3.cmake" : {
      "ObjectId" : "9c546a05d859b18c49554d7ee7221cc486b7760e",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindGLEW.cmake" : {
      "ObjectId" : "684f6f10d9daa70208f58f1cf2df3fd7d4feefe3",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindGLEW\n\n# --------\n\n#\n\n# Find the OpenGL Extension Wrangler Library (GLEW)\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the :prop_tgt:`IMPORTED` target ``GLEW::GLEW``,\n\n# if GLEW has been found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#   GLEW_INCLUDE_DIRS - include directories for GLEW\n\n#   GLEW_LIBRARIES - libraries to link against GLEW\n\n#   GLEW_FOUND - true if GLEW has been found and can be used\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012 Benjamin Eikel\n\n# Copyright 2016 Ryan Pavlik\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO how to make this exclude arm?\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Windows, known static library.\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Windows, known dynamic library and we have both pieces\n\n# TODO might be different for mingw\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Anything else - previous behavior.\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "cmake/FindJsonCpp.cmake" : {
      "ObjectId" : "2f66845bfe5f8e462ed1b5bda9a8bd0bfc7ec47d",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find jsoncpp - Overarching find module\n\n# This is a over-arching find module to find older jsoncpp versions and those sadly built\n\n# without JSONCPP_WITH_CMAKE_PACKAGE=ON, as well as those built with the cmake config file.\n\n# It also wraps the different versions of the module.\n\n#\n\n# On CMake 3.0 and newer:\n\n#  JsonCpp::JsonCpp - Imported target (possibly an interface/alias) to use:\n\n#  if anything is populated, this is. If both shared and static are found, then\n\n#  this will be the static version on DLL platforms and shared on non-DLL platforms.\n\n#  JsonCpp::JsonCppShared - Imported target (possibly an interface/alias) for a\n\n#  shared library version.\n\n#  JsonCpp::JsonCppStatic - Imported target (possibly an interface/alias) for a\n\n#  static library version.\n\n#\n\n# On all CMake versions: (Note that on CMake 2.8.10 and earlier, you may need to use JSONCPP_INCLUDE_DIRS)\n\n#  JSONCPP_LIBRARY - wraps JsonCpp::JsonCpp or equiv.\n\n#  JSONCPP_LIBRARY_IS_SHARED - if we know for sure JSONCPP_LIBRARY is shared, this is true-ish. We try to \"un-set\" it if we don't know one way or another.\n\n#  JSONCPP_LIBRARY_SHARED - wraps JsonCpp::JsonCppShared or equiv.\n\n#  JSONCPP_LIBRARY_STATIC - wraps JsonCpp::JsonCppStatic or equiv.\n\n#  JSONCPP_INCLUDE_DIRS - Include directories - should (generally?) not needed if you require CMake 2.8.11+ since it handles target include directories.\n\n#\n\n#  JSONCPP_FOUND - True if JsonCpp was found.\n\n#\n\n# Original Author:\n\n# 2016 Ryan Pavlik <ryan.pavlik@gmail.com>\n\n# Incorporates work from the module contributed to VRPN under the same license:\n\n# 2011 Philippe Crassous (ENSAM ParisTech / Institut Image) p.crassous _at_ free.fr\n\n#\n\n# Copyright Philippe Crassous 2011.\n\n# Copyright Sensics, Inc. 2016.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# sets __jsoncpp_have_jsoncpplib based on whether or not we have a real imported jsoncpp_lib target.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We make interface libraries. If an actual config module made it, it would be an imported library.\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Ensure that if this is TRUE later, it's because we set it.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# See if we find a CMake config file.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We will always try first to get a config file.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# OK, so we found something.\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# A veritable cache of riches - we have both shared and static!\n",
        "Line" : 70,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# DLL platforms: static library should be default\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Other platforms - might require PIC to be linked into shared libraries, so safest to prefer shared.\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Well, only one variant, but we know for sure that it's static.\n",
        "Line" : 83,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# One variant, and we have no idea if this is just an old version or if\n\n# this is shared based on the target name alone. Hmm.\n\n# TODO figure out if this is shared or static?\n",
        "Line" : 88,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# Now, we need include directories. Can't just limit this to old CMakes, since\n\n# new CMakes might be used to build projects designed to support older ones.\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# As a convenience...\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# OK, so we couldn't get it from the target... maybe we can figure it out from jsoncpp_DIR.\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# take off the jsoncpp component\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# take off the cmake component\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# take off the lib component\n",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# take off one more component in case of multiarch lib\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Now, search.\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Note - this does not set it in the cache, in case we find it better at some point in the future!\n",
        "Line" : 142,
        "CharPositionInLine" : 3
      },
      "21" : {
        "Text" : "# Create any missing namespaced targets from the config module.\n",
        "Line" : 154,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# Still nothing after looking for the config file: must go \"old-school\"\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Invoke pkgconfig for hints\n",
        "Line" : 197,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# OK, if pkg-config wasn't able to give us a library name suggestion, then we may\n\n# have to resort to some intense old logic.\n",
        "Line" : 215,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# bit of a generalization but close...\n",
        "Line" : 222,
        "CharPositionInLine" : 15
      },
      "26" : {
        "Text" : "# end of old logic\n",
        "Line" : 263,
        "CharPositionInLine" : 9
      },
      "27" : {
        "Text" : "# Actually go looking.\n",
        "Line" : 265,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# We already know that the target doesn't exist, let's make it.\n\n# TODO don't know why we get errors like:\n\n# error: 'JsonCpp::JsonCpp-NOTFOUND', needed by 'bin/osvr_json_to_c', missing and no known rule to make it\n\n# when we do the imported target commented out below. So, instead, we make an interface\n\n# target with an alias. Hmm.\n",
        "Line" : 284,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "#add_library(JsonCpp::JsonCpp UNKNOWN IMPORTED)\n\n#set_target_properties(JsonCpp::JsonCpp PROPERTIES\n\n#\tIMPORTED_LOCATION \"${JsonCpp_LIBRARY}\"\n\n#\tINTERFACE_INCLUDE_DIRECTORIES \"${JsonCpp_INCLUDE_DIR}\"\n\n#\tIMPORTED_LINK_INTERFACE_LANGUAGES \"CXX\")\n",
        "Line" : 290,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 30
    },
    "cmake/FindOpenGLES2.cmake" : {
      "ObjectId" : "c9307b7e4c1401dd8d7091bebac961fcb9555ee8",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find OpenGLES2\n\n# Find the native OpenGLES2 includes and libraries\n\n#\n\n#  OPENGLES2_INCLUDE_DIR - where to find GLES2/gl2.h, etc.\n\n#  OPENGLES2_LIBRARIES   - List of libraries when using OpenGLES2.\n\n#  OPENGLES2_FOUND       - True if OpenGLES2 found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Downloaded from\n\n# https://sourceforge.net/p/alleg/allegro/ci/5.1/tree/cmake/FindOpenGLES.cmake\n\n# Modified to use the v2 library rather than the v1 library.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set OPENGLES_FOUND\n\n# to TRUE if all listed variables are TRUE.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindSDL2.cmake" : {
      "ObjectId" : "9a35dbff8f099132b52a03f4f726d8daf4623233",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find SDL2\n\n# Find the SDL2 headers and libraries\n\n#\n\n#  SDL2::SDL2 - Imported target to use for building a library\n\n#  SDL2::SDL2main - Imported interface target to use if you want SDL and SDLmain.\n\n#  SDL2_FOUND - True if SDL2 was found.\n\n#  SDL2_DYNAMIC - If we found a DLL version of SDL (meaning you might want to copy a DLL from SDL2::SDL2)\n\n#\n\n# Original Author:\n\n# 2015 Ryan Pavlik <ryan.pavlik@gmail.com> <abiryan@ryand.net>\n\n#\n\n# Copyright Sensics, Inc. 2015.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set up architectures (for windows) and prefixes (for mingw builds)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Invoke pkgconfig for hints\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Some special-casing if we've found/been given a framework.\n\n# Handles whether we're given the library inside the framework or the framework itself.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Move up in the directory tree as required to get the framework directory.\n",
        "Line" : 75,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# If we found a framework, do a search for the header ahead of time that will be more likely to get the framework header.\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# this file was introduced with SDL2\n",
        "Line" : 84,
        "CharPositionInLine" : 16
      },
      "7" : {
        "Text" : "# For some reason we couldn't get the framework directory itself.\n\n# Shouldn't happen, but might if something is weird.\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# this file was introduced with SDL2\n",
        "Line" : 96,
        "CharPositionInLine" : 14
      },
      "9" : {
        "Text" : "# Restore things the way they used to be.\n",
        "Line" : 135,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set QUATLIB_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create SDL2::SDL2\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Handle the case that SDL2 is a framework and we were able to decompose it above.\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Handle the case that SDL2 is a framework and SDL_LIBRARY is just the framework itself.\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# This takes the basename of the framework, without the extension,\n\n# and sets it (as a child of the framework) as the imported location for the target.\n\n# This is the library symlink inside of the framework.\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Handle non-frameworks (including non-Mac), as well as the case that we're given the library inside of the framework\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Need Cocoa here, is always a framework\n",
        "Line" : 186,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# Compute what to do with SDL2main\n",
        "Line" : 196,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# MinGW requires some additional libraries to appear earlier in the link line.\n",
        "Line" : 207,
        "CharPositionInLine" : 3
      },
      "19" : {
        "Text" : "# Use pkgconfig-suggested extra libraries if available.\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# fall back to extra libraries specified in pkg-config in\n\n# an official binary distro of SDL2 for MinGW I downloaded\n",
        "Line" : 213,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 21
    },
    "cmake/FindVRPN.cmake" : {
      "ObjectId" : "641b62b70ea6a7b153d3fa97d6c629b6d977cde9",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find VRPN library\n\n#\n\n# Cache Variables:\n\n#  VRPN_LIBRARY\n\n#  VRPN_SERVER_LIBRARY\n\n#  VRPN_INCLUDE_DIR\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  VRPN_FOUND\n\n#  VRPN_SERVER_LIBRARIES - server libraries\n\n#  VRPN_LIBRARIES - client libraries\n\n#  VRPN_CLIENT_DEFINITIONS - definitions if you only use the client library\n\n#  VRPN_DEFINITIONS - Client-only definition if all we found was the client library.\n\n#  VRPN_INCLUDE_DIRS\n\n#\n\n# VRPN_ROOT_DIR is searched preferentially for these files\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 64-bit dir: only set on win64\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# 32-bit dir: only set on win64\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# 32-bit dir on win32, useless to us on win64\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "###\n\n# Configure VRPN\n\n###\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###\n\n# Dependencies\n\n###\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/FindWindowsSDK.cmake" : {
      "ObjectId" : "17d93421a2c9f33a1838c2f376312f7de90c4f80",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the Windows SDK aka Platform SDK\n\n#\n\n# Relevant Wikipedia article: http://en.wikipedia.org/wiki/Microsoft_Windows_SDK\n\n#\n\n# Pass \"COMPONENTS tools\" to ignore Visual Studio version checks: in case\n\n# you just want the tool binaries to run, rather than the libraries and headers\n\n# for compiling.\n\n#\n\n# Variables:\n\n#  WINDOWSSDK_FOUND - if any version of the windows or platform SDK was found that is usable with the current version of visual studio\n\n#  WINDOWSSDK_LATEST_DIR\n\n#  WINDOWSSDK_LATEST_NAME\n\n#  WINDOWSSDK_FOUND_PREFERENCE - if we found an entry indicating a \"preferred\" SDK listed for this visual studio version\n\n#  WINDOWSSDK_PREFERRED_DIR\n\n#  WINDOWSSDK_PREFERRED_NAME\n\n#\n\n#  WINDOWSSDK_DIRS - contains no duplicates, ordered most recent first.\n\n#  WINDOWSSDK_PREFERRED_FIRST_DIRS - contains no duplicates, ordered with preferred first, followed by the rest in descending recency\n\n#\n\n# Functions:\n\n#  windowssdk_name_lookup(<directory> <output variable>) - Find the name corresponding with the SDK directory you pass in, or\n\n#     NOTFOUND if not recognized. Your directory must be one of WINDOWSSDK_DIRS for this to work.\n\n#\n\n#  windowssdk_build_lookup(<directory> <output variable>) - Find the build version number corresponding with the SDK directory you pass in, or\n\n#     NOTFOUND if not recognized. Your directory must be one of WINDOWSSDK_DIRS for this to work.\n\n#\n\n#  get_windowssdk_from_component(<file or dir> <output variable>) - Given a library or include dir,\n\n#     find the Windows SDK root dir corresponding to it, or NOTFOUND if unrecognized.\n\n#\n\n#  get_windowssdk_library_dirs(<directory> <output variable>) - Find the architecture-appropriate\n\n#     library directories corresponding to the SDK directory you pass in (or NOTFOUND if none)\n\n#\n\n#  get_windowssdk_include_dirs(<directory> <output variable>) - Find the\n\n#     include directories corresponding to the SDK directory you pass in (or NOTFOUND if none)\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# pre-output\n",
        "Line" : 49,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# pre-output\n",
        "Line" : 50,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "# pre-output\n",
        "Line" : 51,
        "CharPositionInLine" : 26
      },
      "4" : {
        "Text" : "# pre-output\n",
        "Line" : 52,
        "CharPositionInLine" : 28
      },
      "5" : {
        "Text" : "# search parameters\n",
        "Line" : 53,
        "CharPositionInLine" : 23
      },
      "6" : {
        "Text" : "# search parameters\n",
        "Line" : 54,
        "CharPositionInLine" : 18
      },
      "7" : {
        "Text" : "# TH2 aka Win10 1511\n\n# Win10 RTM\n\n# just ucrt\n",
        "Line" : 68,
        "CharPositionInLine" : 14
      },
      "8" : {
        "Text" : "# Appends to the three main pre-output lists used only if the path exists\n\n# and is not already in the list.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Path invalid - do not add\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Path already in list - do not add\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Not yet in the list, so we'll add it\n",
        "Line" : 95,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Appends to the \"preferred SDK\" lists only if the path exists\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Path invalid - do not add\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Path already in list - do not add\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Not yet in the list, so we'll add it\n",
        "Line" : 125,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# Just in case we somehow missed it:\n",
        "Line" : 129,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Given a version like v7.0A, looks for an SDK in the registry under \"Microsoft SDKs\".\n\n# If the given version might be in both HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Microsoft SDKs\\\\Windows\n\n# and HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows Kits\\\\Installed Roots aka \"Windows Kits\",\n\n# use this macro first, since these registry keys usually have more information.\n\n#\n\n# Pass a \"default\" build number as an extra argument in case we can't find it.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Default build number passed as extra argument\n",
        "Line" : 147,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# See if the registry holds a Microsoft-mutilated, err, designated, product name\n\n# (just using get_filename_component to execute the registry lookup)\n",
        "Line" : 149,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# Got a product name\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# try for a version to augment our name\n\n# (just using get_filename_component to execute the registry lookup)\n",
        "Line" : 159,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# Got a version\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# and it's not an invalid one with two dots in it:\n\n# use to override the default build\n",
        "Line" : 167,
        "CharPositionInLine" : 3
      },
      "24" : {
        "Text" : "# Got a version that's not already in the name, let's use it to improve our name.\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Given a name for identification purposes, the build number, and a key (technically a \"value name\")\n\n# corresponding to a Windows SDK packaged as a \"Windows Kit\", look for it\n\n# in HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows Kits\\\\Installed Roots\n\n# Note that the key or \"value name\" tends to be something weird like KitsRoot81 -\n\n# no easy way to predict, just have to observe them in the wild.\n\n# Doesn't hurt to also try _winsdk_check_microsoft_sdks_registry for these:\n\n# sometimes you get keys in both parts of the registry (in the wow64 portion especially),\n\n# and the non-\"Windows Kits\" location is often more descriptive.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Given a name for identification purposes and the build number\n\n# corresponding to a Windows 10 SDK packaged as a \"Windows Kit\", look for it\n\n# in HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows Kits\\\\Installed Roots\n\n# Doesn't hurt to also try _winsdk_check_microsoft_sdks_registry for these:\n\n# sometimes you get keys in both parts of the registry (in the wow64 portion especially),\n\n# and the non-\"Windows Kits\" location is often more descriptive.\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# not found\n",
        "Line" : 205,
        "CharPositionInLine" : 11
      },
      "28" : {
        "Text" : "# Given a name for indentification purposes, the build number, and the associated package GUID,\n\n# look in the registry under both HKLM and HKCU in \\\\SOFTWARE\\\\Microsoft\\\\MicrosoftSDK\\\\InstalledSDKs\\\\\n\n# for that guid and the SDK it points to.\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "###\n\n# Detect toolchain information: to know whether it's OK to use Vista+ only SDKs\n\n###\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# VC 10 and older has broad target support\n",
        "Line" : 229,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# VC 11 by default targets Vista and later only, so we can add a few more SDKs that (might?) only work on vista+\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# This is the XP-compatible v110+ toolset\n",
        "Line" : 233,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# This is the VS2010/VS2008 toolset\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# OK, we're VC11 or newer and not using a backlevel or XP-compatible toolset.\n\n# These versions have no XP (and possibly Vista pre-SP1) support\n",
        "Line" : 237,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "###\n\n# MSVC version checks - keeps messy conditionals in one place\n\n# (messy because of _WINDOWSSDK_IGNOREMSVC)\n\n###\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Newer than VS .NET/VS Toolkit 2003\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# VS2005/2008\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# VS2013+\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "###\n\n# START body of find module\n\n###\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Newer than VS .NET/VS Toolkit 2003\n",
        "Line" : 278,
        "CharPositionInLine" : 30
      },
      "41" : {
        "Text" : "###\n\n# Look for \"preferred\" SDKs\n\n###\n",
        "Line" : 279,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "# Environment variable for SDK dir\n",
        "Line" : 283,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "# Per-user current Windows SDK for VS2005/2008\n",
        "Line" : 289,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# System-wide current Windows SDK for VS2005/2008\n",
        "Line" : 295,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "###\n\n# Begin the massive list of SDK searching!\n\n###\n",
        "Line" : 302,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "# These require at least Visual Studio 2013 (VC12)\n",
        "Line" : 306,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Windows Software Development Kit (SDK) for Windows 10\n\n# Several different versions living in the same directory - if nothing else we can assume RTM (10240)\n",
        "Line" : 310,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# vista-only and 2013+\n",
        "Line" : 316,
        "CharPositionInLine" : 9
      },
      "49" : {
        "Text" : "# Included in Visual Studio 2013\n\n# Includes the v120_xp toolset\n",
        "Line" : 318,
        "CharPositionInLine" : 1
      },
      "50" : {
        "Text" : "# Windows Software Development Kit (SDK) for Windows 8.1\n\n# http://msdn.microsoft.com/en-gb/windows/desktop/bg162891\n",
        "Line" : 323,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# vista-only and 2013+\n",
        "Line" : 327,
        "CharPositionInLine" : 9
      },
      "52" : {
        "Text" : "# Included in Visual Studio 2012\n",
        "Line" : 330,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Microsoft Windows SDK for Windows 8 and .NET Framework 4.5\n\n# This is the first version to also include the DirectX SDK\n\n# http://msdn.microsoft.com/en-US/windows/desktop/hh852363.aspx\n",
        "Line" : 333,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# vista-only\n",
        "Line" : 338,
        "CharPositionInLine" : 9
      },
      "55" : {
        "Text" : "# Included with VS 2012 Update 1 or later\n\n# Introduces v110_xp toolset\n",
        "Line" : 340,
        "CharPositionInLine" : 1
      },
      "56" : {
        "Text" : "# Microsoft Windows SDK for Windows 7 and .NET Framework 4\n\n# http://www.microsoft.com/downloads/en/details.aspx?FamilyID=6b6c21d2-2006-4afa-9702-529fa782d63b\n",
        "Line" : 344,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# vista-only\n",
        "Line" : 347,
        "CharPositionInLine" : 9
      },
      "58" : {
        "Text" : "# Included with VS 2010\n",
        "Line" : 349,
        "CharPositionInLine" : 1
      },
      "59" : {
        "Text" : "# Windows SDK for Windows 7 and .NET Framework 3.5 SP1\n\n# Works with VC9\n\n# http://www.microsoft.com/en-us/download/details.aspx?id=18950\n",
        "Line" : 352,
        "CharPositionInLine" : 1
      },
      "60" : {
        "Text" : "# Two versions call themselves \"v6.1\":\n\n# Older:\n\n# Windows Vista Update & .NET 3.0 SDK\n\n# http://www.microsoft.com/en-us/download/details.aspx?id=14477\n",
        "Line" : 357,
        "CharPositionInLine" : 1
      },
      "61" : {
        "Text" : "# Newer:\n\n# Windows Server 2008 & .NET 3.5 SDK\n\n# may have broken VS9SP1? they recommend v7.0 instead, or a KB...\n\n# http://www.microsoft.com/en-us/download/details.aspx?id=24826\n",
        "Line" : 362,
        "CharPositionInLine" : 1
      },
      "62" : {
        "Text" : "# Included in VS 2008\n",
        "Line" : 368,
        "CharPositionInLine" : 1
      },
      "63" : {
        "Text" : "# Microsoft Windows Software Development Kit for Windows Vista and .NET Framework 3.0 Runtime Components\n\n# http://blogs.msdn.com/b/stanley/archive/2006/11/08/microsoft-windows-software-development-kit-for-windows-vista-and-net-framework-3-0-runtime-components.aspx\n",
        "Line" : 371,
        "CharPositionInLine" : 1
      },
      "64" : {
        "Text" : "# Let's not forget the Platform SDKs, which sometimes are useful!\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "###\n\n# Finally, look for \"preferred\" SDKs\n\n###\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Newer than VS .NET/VS Toolkit 2003\n",
        "Line" : 384,
        "CharPositionInLine" : 30
      },
      "67" : {
        "Text" : "# Environment variable for SDK dir\n",
        "Line" : 387,
        "CharPositionInLine" : 1
      },
      "68" : {
        "Text" : "# Per-user current Windows SDK for VS2005/2008\n",
        "Line" : 393,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# System-wide current Windows SDK for VS2005/2008\n",
        "Line" : 399,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# If we found something...\n",
        "Line" : 430,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Fallback, in case no preference found.\n",
        "Line" : 437,
        "CharPositionInLine" : 1
      },
      "72" : {
        "Text" : "# If we found indications of a user preference...\n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Internal: Architecture-appropriate library directory names.\n",
        "Line" : 462,
        "CharPositionInLine" : 1
      },
      "74" : {
        "Text" : "# Only supported in Win10 SDK and up.\n",
        "Line" : 465,
        "CharPositionInLine" : 3
      },
      "75" : {
        "Text" : "# what the WDK for Win8+ calls this architecture\n",
        "Line" : 466,
        "CharPositionInLine" : 28
      },
      "76" : {
        "Text" : "# what the architecture used to be called in oldest SDKs\n",
        "Line" : 468,
        "CharPositionInLine" : 30
      },
      "77" : {
        "Text" : "# what the architecture used to be called\n",
        "Line" : 469,
        "CharPositionInLine" : 25
      },
      "78" : {
        "Text" : "# what the WDK for Win8+ calls this architecture\n",
        "Line" : 470,
        "CharPositionInLine" : 26
      },
      "79" : {
        "Text" : "# what the architecture used to be called in oldest SDKs\n",
        "Line" : 474,
        "CharPositionInLine" : 30
      },
      "80" : {
        "Text" : "# what the architecture used to be called\n",
        "Line" : 475,
        "CharPositionInLine" : 27
      },
      "81" : {
        "Text" : "# what the WDK for Win8+ calls this architecture\n",
        "Line" : 476,
        "CharPositionInLine" : 26
      },
      "82" : {
        "Text" : "# what the architecture used to be called in oldest SDKs\n\n# what the architecture used to be called\n\n# what the WDK for Win8+ calls this architecture\n",
        "Line" : 478,
        "CharPositionInLine" : 26
      },
      "83" : {
        "Text" : "# If we don't have any \"parent directory\" items...\n",
        "Line" : 491,
        "CharPositionInLine" : 3
      },
      "84" : {
        "Text" : "# Fail.\n",
        "Line" : 497,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# SDKs like 7.1A\n",
        "Line" : 503,
        "CharPositionInLine" : 28
      },
      "86" : {
        "Text" : "# just because some SDKs have x86 dir and root dir\n",
        "Line" : 504,
        "CharPositionInLine" : 25
      },
      "87" : {
        "Text" : "# Win2k min requirement\n\n# WinXP min requirement\n",
        "Line" : 505,
        "CharPositionInLine" : 29
      },
      "88" : {
        "Text" : "# Win Server 2003 min requirement\n",
        "Line" : 507,
        "CharPositionInLine" : 30
      },
      "89" : {
        "Text" : "# Win Vista (\"Long Horn\") min requirement\n",
        "Line" : 509,
        "CharPositionInLine" : 33
      },
      "90" : {
        "Text" : "# Win 7 min requirement\n",
        "Line" : 511,
        "CharPositionInLine" : 34
      },
      "91" : {
        "Text" : "# Win Vista (\"Long Horn\") min requirement\n",
        "Line" : 514,
        "CharPositionInLine" : 7
      },
      "92" : {
        "Text" : "# Win 7 min requirement\n\n# Win 8 min requirement\n",
        "Line" : 515,
        "CharPositionInLine" : 8
      },
      "93" : {
        "Text" : "# Win 8.1 min requirement\n",
        "Line" : 517,
        "CharPositionInLine" : 11
      },
      "94" : {
        "Text" : "# Look for WDF libraries in Win10+ SDK\n",
        "Line" : 527,
        "CharPositionInLine" : 2
      },
      "95" : {
        "Text" : "# Check to see if a library actually exists here.\n",
        "Line" : 542,
        "CharPositionInLine" : 3
      },
      "96" : {
        "Text" : "# Check to see if a header file actually exists here.\n",
        "Line" : 572,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 97
    },
    "cmake/Findliquidvr.cmake" : {
      "ObjectId" : "c5e6572874665c16e96cfe1877f8d20a192e76db",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find liquidvr\n\n# Find the liquidvr header.\n\n#\n\n#  LIQUIDVR_INCLUDE_DIRS - where to find LiquidVRD2D.h\n\n#  LIQUIDVR_FOUND        - True if liquidvr found.\n\n#\n\n# Creates an \"liquidvr\" interface target with the include dir\n\n# that you can link against instead of using the above variables.\n\n#\n\n# Original Author:\n\n# 2016 Russ Taylor working through ReliaSolve for Sensics.\n\n#\n\n# Copyright Sensics, Inc. 2016.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIQUIDVR_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/Findnvapi.cmake" : {
      "ObjectId" : "a98588e2f9909f28694f9aa0f11b84aea3082445",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find nvapi\n\n# Find the nvapi headers and libraries. Can request component NDA which\n\n# will only succeed if an NDA version of the header is found.\n\n#\n\n#  NVAPI_INCLUDE_DIRS - where to find nvapi.h\n\n#  NVAPI_LIBRARIES    - List of libraries when using nvapi.\n\n#  NVAPI_FOUND        - True if nvapi found.\n\n#\n\n# Creates an \"nvapi\" interface target with the libraries and include dir\n\n# that you can link against instead of using the above variables.\n\n#\n\n# Original Author:\n\n# 2016 Russ Taylor working through ReliaSolve for Sensics.\n\n#\n\n# Copyright Sensics, Inc. 2016.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Allow user to have us re-detect the edition by clearing NVAPI_EDITION\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If we found an edition, keep track of where we found it so that we don't re-check next time CMake runs.\n",
        "Line" : 48,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Prioritize finding the lib near the header to hopefully ensure they match.\n",
        "Line" : 55,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Look for the library.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Handle asking for component \"NDA\"\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set NVAPI_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/Findquatlib.cmake" : {
      "ObjectId" : "efca27f70af8c3b144193a2c6be8dcdf152d8172",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find quatlib\n\n# Find the quatlib headers and libraries.\n\n#\n\n#  QUATLIB_INCLUDE_DIRS - where to find quat.h\n\n#  QUATLIB_LIBRARIES    - List of libraries when using quatlib.\n\n#  QUATLIB_FOUND        - True if quatlib found.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# 64-bit dir: only set on win64\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# 32-bit dir: only set on win64\n",
        "Line" : 45,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# 32-bit dir on win32, useless to us on win64\n",
        "Line" : 48,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Look for the library.\n",
        "Line" : 67,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set QUATLIB_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/GenerateCompatibilityVersionFile.cmake" : {
      "ObjectId" : "7ac28ed5fa1646b7c34a6a3936d7849ebc12e70d",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# .. command:: generate_compatibility_version_file\n\n#\n\n#  Create a version file for a project::\n\n#\n\n#    generate_compatibility_version_file(<filename>\n\n#      [VERSION <major.minor.patch>]\n\n#      COMPATIBILITY <AnyNewerVersion|SameMajorVersion|ExactVersion>\n\n#      [C_ABI]\n\n#      [CXX_LAYOUT]\n\n#      [CXX_ABI])\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2015 Sensics, Inc. <ryan@sensics.com>\n\n# Copyright 2012 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "85eae1562fe2011e9800787819b21f30a8898eb4",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "cmake/GetMSVCVersion.cmake" : {
      "ObjectId" : "48d7b7c172e8797c693ca6371bece7ef222992be",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# GetMSVCVersion\n\n# --------------\n\n#\n\n#\n\n#\n\n# get_msvc_major_version(<var>)\n\n# get_msvc_minor_version(<var>)\n\n# get_msvc_combined_major_minor_version(<var>)\n\n# get_msvc_major_minor_version(<major_var> <minor_var>)\n\n# get_msvc_unique_decimal_version(<var>)\n\n#\n\n# This family of functions is designed to be used to convert\n\n# MSVC_VERSION from the compiler version number to the Visual Studio\n\n# decimal version number (2012 is 11.0, 2015 is 14.0). All take a name\n\n# of a variable in <var> to return their results in.\n\n#\n\n# Consider Visual Studio 2013, which reports 1800 in MSVC_VERSION (and\n\n# the _MSC_VER preprocessor macro). It is also known as VS 12 or 12.0.\n\n# (Minor versions are rarely used, except in the case of 7.1 aka\n\n# VS.NET 2003) The functions would return this output for 2013:\n\n#\n\n# get_msvc_major_version: 12\n\n# get_msvc_minor_version: 0\n\n# get_msvc_combined_major_minor_version: 120\n\n# get_msvc_major_minor_version: 12 in <major_var>, 0 in <minor_var>\n\n# get_msvc_unique_decimal_version: 12  (this returns with a decimal and\n\n# minor when needed to be precise, e.g. 7.1)\n\n#\n\n# The variable is not modified if not building with MSVC.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2015 Ryan Pavlik <ryan.pavlik@gmail.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This function serves as the main implementation, with the others just\n\n# tweaking the result.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# VS 2015 changed the pattern because they skipped VS 13\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# This function is also used as backend to some implementation, though\n\n# its contents are simpler, no real business logic to speak of.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/PrintTargetProperties.cmake" : {
      "ObjectId" : "8e17a0265c48bbdb019638a2bb22bc1c83932bd6",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Prints a target's properties.\n\n#\n\n# Usage:\n\n#   print_target_properties(target [target...])\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#elseif(NOT is_set)\n\n#\tmessage(\"  ${_prop} is not set\")\n\n#elseif(NOT is_defined)\n\n#\tmessage(\"  ${_prop} is not defined\")\n",
        "Line" : 14,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Expand <CONFIG>\n",
        "Line" : 225,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# Expand <LANG>\n",
        "Line" : 235,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 4
    },
    "cmake/Version.cmake" : {
      "ObjectId" : "3eae488e85f372516f757fb6b6eef87531c6e8bc",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set up package options\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/osvrRenderManagerConfig.cmake" : {
      "ObjectId" : "45673afe28839de843be81200f3a5d90e14671c2",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Hook for a super-build to optionally inject hints before target import.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compute the installation prefix relative to this file.\n",
        "Line" : 8,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# TODO\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#find_dependency(SDL2)\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# TODO\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#find_dependency(GLEW)\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Set up config mapping\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# restore module path\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# The actual exported targets - config mapping still applied.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Undo our changes for later consumers\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Fix up imported targets to add deps: these files will only exist in install trees.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# A list of filenames of required libraries for running with osvrRenderManager DLL\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Options\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Helper function to copy required libraries to an install directory\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Canonicalize paths relative to the directory containing this .cmake file\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Find SDL2 using the script bundled with RenderManager.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Find GLEW using the script bundled with RenderManager.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Hook for a super-build to optionally inject configuration after target import.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "cmake/osvrRenderManagerConfigInstalledBoost.cmake" : {
      "ObjectId" : "ab1be9c4a421753a0bffd14824ba9b66d58da678",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# File included only with installed binaries, to re-find Boost on those systems.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Optionally help Windows machines find Boost easier.\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Boost is optional for UtilCpp - lots of stuff needs it, but lots doesn't.\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Boost is required for these bindings. Adding regardless of if we found it - make the build fail early if it's not found.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/osvrStashMapConfig.cmake" : {
      "ObjectId" : "3183fe95906f01564041c51a04dc97c0caf2d20d",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Manipulate CMAKE_MAP_IMPORTED_CONFIG_ cautiously and reversibly.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Re-entrancy protection\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Not the first stash, get out.\n",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Actually perform the saving and replacement of CMAKE_MAP_IMPORTED_CONFIG_${config}\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Nobody actually called the matching stash...\n",
        "Line" : 20,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Other half of re-entrancy protection\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# someone still in here\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Restoration of CMAKE_MAP_IMPORTED_CONFIG_${config}\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Can't do this - different runtimes, incompatible ABI, etc.\n",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 9
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "d25fe85250940886b13033b497d4c49d8bea83bb",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This means we're building stand-alone, not in an RM build system.\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#find_package(SDL2)\n",
        "Line" : 17,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#find_package(GLEW)\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# TODO search for GLES if applicable\n",
        "Line" : 21,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# D3D\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# D3D program that has an adjustable rendering delay, useful for testing the\n\n# impact of various latency-hiding techniques.\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# D3D Example program using the C API\n",
        "Line" : 66,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# D3D Example program\n",
        "Line" : 74,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# D3D Example program using Present mode\n",
        "Line" : 82,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# D3D Example program using Present mode that also passes in device and context\n",
        "Line" : 90,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# D3D Example program using Present mode that also passes in device and context and works with ATW\n",
        "Line" : 98,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# D3D Example program using Present mode, single buffer for both eyes\n",
        "Line" : 106,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# have common d3d sources\n",
        "Line" : 113,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# D3D Test program (basic 2D test)\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Latency test program\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# D3D Example program\n",
        "Line" : 147,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# D3D program that spins the world cube at a constant rate, useful for testing the\n\n# steadiness of the rendering in the absence of motion.\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# D3D program that restarts the RenderManager every once in a while. For\n\n# the display, it spins the world cube at a constant rate, useful for testing the\n\n# steadiness of the rendering in the absence of motion.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Convenience target to link all we need for basic OpenGL stuff.\n",
        "Line" : 186,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGL Example program using the OpenGL Core profile and a shared context\n",
        "Line" : 193,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGL Example program that uses the C API and a shared context.\n",
        "Line" : 202,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 211,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# OpenGL Example program that uses the Get()/Present() interface, not Render().\n",
        "Line" : 212,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGL Example program\n",
        "Line" : 223,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGL Example program\n",
        "Line" : 232,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGL Example program\n",
        "Line" : 241,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGL Example program using the OpenGL Core profile\n",
        "Line" : 263,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGL test program using the OpenGL Core profile that renders lots of polygons\n",
        "Line" : 272,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGL program that has an adjustable rendering delay, useful for testing the\n\n# impact of various latency-hiding techniques.\n",
        "Line" : 283,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGL Example program that uses the Get()/Present() interface, not Render().\n",
        "Line" : 293,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGL Example program that uses the C API.\n",
        "Line" : 302,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGL Example program that uses the Get()/Present() interface, not Render().\n",
        "Line" : 311,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGLES 2.0 Example program\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGL program that spins the world cube at a constant rate, useful for testing the\n\n# steadiness of the rendering in the absence of motion.\n",
        "Line" : 339,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Program that changes the solid color sent to a display.\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "installer/CMakeLists.txt" : {
      "ObjectId" : "6f4b3457eaef4770a7e87cace301cfe1c5ecec8f",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Local CMake Modules\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# This looks for an osvrConfig.cmake file - most of the time it can be\n\n# autodetected but you might need to specify osvr_DIR to be something like\n\n# C:/Users/Ryan/Desktop/build/OSVR-Core-vc12 or\n\n# C:/Users/Ryan/Downloads/OSVR-Core-Snapshot-v0.1-406-gaa55515-build54-vs12-32bit\n\n# in the CMake GUI or command line\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For time-manipulation routines\n",
        "Line" : 16,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : "# For transformation construction\n",
        "Line" : 17,
        "CharPositionInLine" : 31
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# D3D Test program (basic 2D test)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This example uses the C++ wrapper, as suggested, so you'll need this line.\n\n# Surprisingly, this also lets it know where to find the header files.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# D3D Example program, which should eventually be open source\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This example uses the C++ wrapper, as suggested, so you'll need this line.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# D3D Example program, which should eventually be open source\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This example uses the C++ wrapper, as suggested, so you'll need this line.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# D3D Example program using Present mode, which should eventually be open source\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This example uses the C++ wrapper, as suggested, so you'll need this line.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# D3D Example program using Present mode, which should eventually be open source\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# This example uses the C++ wrapper, as suggested, so you'll need this line.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# D3D Example program using Present mode, which should eventually be open source\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# This example uses the C++ wrapper, as suggested, so you'll need this line.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Latency test program, which should eventually be open source\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This example uses the C++ wrapper, as suggested, so you'll need this line.\n\n# Surprisingly, this also lets it know where to find the header files.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# D3D program that has an adjustable rendering delay, useful for testing the\n\n# impact of various latency-hiding techniques.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# This example uses the C++ wrapper, as suggested, so you'll need this line.\n\n# Surprisingly, this also lets it know where to find the header files.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# D3D program that spins the world cube at a constant rate, useful for testing the\n\n# steadiness of the rendering in the absence of motion.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# This example uses the C++ wrapper, as suggested, so you'll need this line.\n\n# Surprisingly, this also lets it know where to find the header files.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGL Example program, which should eventually be open source\n",
        "Line" : 96,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# This example uses the C++ wrapper, as suggested, so you'll need this line.\n\n# Surprisingly, this also lets it know where to find the header files.\n",
        "Line" : 100,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGL Example program, which should eventually be open source\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# This example uses the C++ wrapper, as suggested, so you'll need this line.\n\n# Surprisingly, this also lets it know where to find the header files.\n",
        "Line" : 109,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGL Example program that uses the Get()/Present() interface, not Render().\n",
        "Line" : 114,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# This example uses the C++ wrapper, as suggested, so you'll need this line.\n\n# Surprisingly, this also lets it know where to find the header files.\n",
        "Line" : 118,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGL Example program that uses the Get()/Present() interface, not Render().\n",
        "Line" : 123,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# This example uses the C++ wrapper, as suggested, so you'll need this line.\n\n# Surprisingly, this also lets it know where to find the header files.\n",
        "Line" : 127,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGL Example program using the OpenGL Core profile, which should eventually be open source\n",
        "Line" : 132,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# This example uses the C++ wrapper, as suggested, so you'll need this line.\n\n# Surprisingly, this also lets it know where to find the header files.\n",
        "Line" : 136,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGL program that has an adjustable rendering delay, useful for testing the\n\n# impact of various latency-hiding techniques.\n",
        "Line" : 141,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# This example uses the C++ wrapper, as suggested, so you'll need this line.\n\n# Surprisingly, this also lets it know where to find the header files.\n",
        "Line" : 146,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenGL program that spins the world cube at a constant rate, useful for testing the\n\n# steadiness of the rendering in the absence of motion.\n",
        "Line" : 151,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# This example uses the C++ wrapper, as suggested, so you'll need this line.\n\n# Surprisingly, this also lets it know where to find the header files.\n",
        "Line" : 156,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 36
    },
    "installer/cmake/FindSDL2.cmake" : {
      "ObjectId" : "8664a80fa318140b7a4f5926d31f43f3853388f5",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find SDL2\n\n# Find the SDL2 headers and libraries\n\n#\n\n#  SDL2::SDL2 - Imported target to use for building a library\n\n#  SDL2::SDL2main - Imported target to use if you want SDL and SDLmain.\n\n#  SDL2_FOUND - True if SDL2 was found.\n\n#\n\n# Original Author:\n\n# 2015 Ryan Pavlik <ryan.pavlik@gmail.com> <abiryan@ryand.net>\n\n#\n\n# Copyright Sensics, Inc. 2015.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set up architectures (for windows) and prefixes (for mingw builds)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Invoke pkgconfig for hints\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# this file was introduced with SDL2\n",
        "Line" : 60,
        "CharPositionInLine" : 14
      },
      "4" : {
        "Text" : "# Restore things the way they used to be.\n",
        "Line" : 101,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set QUATLIB_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "installer/cmake/FindVRPN.cmake" : {
      "ObjectId" : "422db1e632c8ccb9b4387fd49658dbdb4d63ec22",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find VRPN library\n\n#\n\n# Cache Variables:\n\n#  VRPN_LIBRARY\n\n#  VRPN_SERVER_LIBRARY\n\n#  VRPN_INCLUDE_DIR\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  VRPN_FOUND\n\n#  VRPN_SERVER_LIBRARIES - server libraries\n\n#  VRPN_LIBRARIES - client libraries\n\n#  VRPN_CLIENT_DEFINITIONS - definitions if you only use the client library\n\n#  VRPN_DEFINITIONS - Client-only definition if all we found was the client library.\n\n#  VRPN_INCLUDE_DIRS\n\n#\n\n# VRPN_ROOT_DIR is searched preferentially for these files\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 64-bit dir: only set on win64\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# 32-bit dir: only set on win64\n",
        "Line" : 46,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# 32-bit dir on win32, useless to us on win64\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "###\n\n# Configure VRPN\n\n###\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###\n\n# Dependencies\n\n###\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "installer/cmake/FindosvrRenderManager.cmake" : {
      "ObjectId" : "1016411b7a409393ebbc1b3f0ef1b81e1107c97a",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find osvrRenderManager\n\n# Find the osvrRenderManager headers and libraries.\n\n#\n\n#  OSVRRENDERMANAGER_INCLUDE_DIRS - where to find header files\n\n#  OSVRRENDERMANAGER_LIBRARIES    - List of libraries when using osvrRenderManager.\n\n#  OSVRRENDERMANAGER_FOUND        - True if osvrRenderManager found.\n\n#\n\n# Original Author:\n\n# 2015 Russ Taylor <russ@reliasolve.com>\n\n#\n\n# Copyright Sensics 2015.\n\n# Distributed under the Apache Software License, Version 2.0.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 64-bit dir: only set on win64\n",
        "Line" : 23,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# 32-bit dir: only set on win64\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# 32-bit dir on win32, useless to us on win64\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Look for the library.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set OSVRRENDERMANAGER_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "installer/cmake/Findquatlib.cmake" : {
      "ObjectId" : "efca27f70af8c3b144193a2c6be8dcdf152d8172",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find quatlib\n\n# Find the quatlib headers and libraries.\n\n#\n\n#  QUATLIB_INCLUDE_DIRS - where to find quat.h\n\n#  QUATLIB_LIBRARIES    - List of libraries when using quatlib.\n\n#  QUATLIB_FOUND        - True if quatlib found.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# 64-bit dir: only set on win64\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# 32-bit dir: only set on win64\n",
        "Line" : 45,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# 32-bit dir on win32, useless to us on win64\n",
        "Line" : 48,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Look for the library.\n",
        "Line" : 67,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set QUATLIB_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "889359948a5845349e9fe6e41dfb645a1d293961",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Tests\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ensure headers include their own dependencies\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Set up self-contained examples test - make sure they can build against a build tree\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# TODO this is really for any multi-config generators, not just MSVC\n",
        "Line" : 16,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "tests/header_dependencies/CMakeLists.txt" : {
      "ObjectId" : "89cf46c77ac005360499e4f51759048ef92fd65e",
      "LastModified" : "2017-11-16T17:22:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Ensure all headers include all dependencies\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Special cases\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sample of relevant variables computed here\n\n# HEADER: RenderKit/RenderManager.h\n\n# symbolname: RenderKit_RenderManager\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Compute symbolname\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# If we didn't explicitly ignore this and if we built this target\n",
        "Line" : 65,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#message(STATUS \"${HEADER}: '${symbolname}'\")\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Header required to be C-safe, enforce it!\n",
        "Line" : 71,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# Name the test and output file with a number, to dodge Windows path length limits.\n\n# Call it header, instead of test, to avoid polluting the 'executable namespace'\n",
        "Line" : 76,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 8
    },
    "tests/selfcontained_test.cmake" : {
      "ObjectId" : "0d4722f5bc739bf983810c5c33fcf6205bd87d13",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Avoid truncating output.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/CMakeLists.txt" : {
      "ObjectId" : "1b0e19f0bff667279b455b6dad071ec162a2180a",
      "LastModified" : "2017-06-13T20:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build VRPN as subproject\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create an interface target to more easily consume VRPN internally.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create an interface target to more easily consume quatlib internally.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 32
  },
  "ElapsedTime" : 725
}