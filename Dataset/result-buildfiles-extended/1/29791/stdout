{
  "Repository" : "29791",
  "Revision" : "HEAD",
  "ObjectId" : "ad8b5f83222291c51b4800d5a5873b0e90a0cf81",
  "CommitTime" : "2019-03-21T07:37:48Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "66badcca5dc6c98e2a28ddc0ad5f4be5389362b8",
      "LastModified" : "2018-11-21T21:56:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Platform configuration vars\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure there are no erroneous C Runtime flags\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Overide with cmake -DCMAKE_BUILD_TYPE=Debug {dir}\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# make an uninstall target\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "CMakeModules/AndroidUtils.cmake" : {
      "ObjectId" : "cfb13dc255757f4c4afa8d68ea89f03896c5f34c",
      "LastModified" : "2014-04-29T10:48:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure build environment to automatically generate APK's instead of executables.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# virtual targets which we'll add apks and push actions to.\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Reset output directories to be in binary folder (rather than source)\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Find which android platforms are available.\n",
        "Line" : 112,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Pick first platform from this list.\n",
        "Line" : 118,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Generate ant build scripts for making APK\n",
        "Line" : 123,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# Override add_executable to build android .so instead!\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Add required link libs for android\n",
        "Line" : 138,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Create manifest required for APK\n",
        "Line" : 141,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Create library that will launch this program and load shared libs\n",
        "Line" : 147,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Generate ant build system for APK\n",
        "Line" : 150,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Target to invoke ant build system for APK\n",
        "Line" : 153,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Target to install on device\n",
        "Line" : 162,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Target to install on device\n",
        "Line" : 168,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# install and run on device\n",
        "Line" : 175,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Flag to package dependent libs\n",
        "Line" : 183,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Clear shared library loading header\n",
        "Line" : 186,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Mark lib_path as dependent of prog_name\n",
        "Line" : 191,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# If prog_name is to be packaged, add file copy command to package .so's.\n",
        "Line" : 194,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Recursively Process dependents of lib_name\n",
        "Line" : 207,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# Check if lib itself is an external shared library\n",
        "Line" : 222,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Check if lib itself is an internal shared library\n",
        "Line" : 227,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# _target_link_libraries corresponds to original\n",
        "Line" : 235,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# Recursively process dependencies\n",
        "Line" : 238,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 24
    },
    "CMakeModules/CreateMethodCallFile.cmake" : {
      "ObjectId" : "c1ae95bdb4b2aa996c445900e8d533ba38bacf4e",
      "LastModified" : "2016-11-03T04:55:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeModules/EmbedBinaryFiles.cmake" : {
      "ObjectId" : "a579e27a453fa512b2860974da51274da6ecb5db",
      "LastModified" : "2018-02-26T03:00:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Creates C resources file from files in given directory\n\n# Based on http://stackoverflow.com/a/27206982\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Collect input files\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Stop when output file is newer than all binary files\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Create empty output file\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Iterate through input files\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Get short filename\n",
        "Line" : 21,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Replace filename spaces & extension separator for C compatibility\n",
        "Line" : 23,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Read hex data from file\n",
        "Line" : 25,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Convert hex data for C compatibility\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Append data to output file\n",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 10
    },
    "CMakeModules/FindDC1394.cmake" : {
      "ObjectId" : "1dbce01a7734fc91c3a9e09ac1dc3909ac403b06",
      "LastModified" : "2016-11-03T04:55:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the dc1394 v2 lib and include files\n\n#\n\n# DC1394_INCLUDE_DIR\n\n# DC1394_LIBRARIES\n\n# DC1394_FOUND\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/FindDepthSense.cmake" : {
      "ObjectId" : "ede003414ae6fc7bf4f817bc70976e148cb492ab",
      "LastModified" : "2016-11-03T04:55:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the DepthSense SDK For SoftKinetic Cameras\r\n\n#\r\n\n# DepthSense_INCLUDE_DIRS\r\n\n# DepthSense_LIBRARIES\r\n\n# DepthSense_FOUND\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/FindEigen.cmake" : {
      "ObjectId" : "1df56fd4d09a536c17c6f5204c5a542f4183e122",
      "LastModified" : "2018-02-26T03:00:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN_FOUND - system has eigen lib with correct version\n\n#  EIGEN_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# In case anyone relies on the plural form.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "CMakeModules/FindFFMPEG.cmake" : {
      "ObjectId" : "afebf961f484ae9787a34ef553d10433a66deb24",
      "LastModified" : "2018-06-21T06:11:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the ffmpeg libraries and headers for avcodec avformat swscale\n\n#\n\n# FFMPEG_INCLUDE_DIRS\n\n# FFMPEG_LIBRARIES\n\n# FFMPEG_FOUND\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find header files\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find Library files\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMakeModules/FindFREEGLUT.cmake" : {
      "ObjectId" : "b3e32b0646006eb364f0bac975f19be2941749a6",
      "LastModified" : "2018-02-26T03:00:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the FREEGLUT library\n\n#\n\n# FREEGLUT_INCLUDE_DIR\n\n# FREEGLUT_LIBRARY\n\n# FREEGLUT_FOUND\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/FindGLEW.cmake" : {
      "ObjectId" : "65ef6f9b41cbea35672a86f33e66c1a72de731b8",
      "LastModified" : "2018-02-26T03:00:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Try to find GLEW library and include path.\n\n# Once done this will define\n\n#\n\n# GLEW_FOUND\n\n# GLEW_INCLUDE_DIR\n\n# GLEW_LIBRARY\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/FindGLUES.cmake" : {
      "ObjectId" : "2c64fe8a7af6222b0835f32e741d0123a7f80c61",
      "LastModified" : "2018-02-26T03:00:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the GLUES lib and include files\n\n#\n\n# GLUES_INCLUDE_DIR\n\n# GLUES_LIBRARIES\n\n# GLUES_FOUND\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/FindLibRealSense.cmake" : {
      "ObjectId" : "a8d7a82f27c23aa8d2a5278416402c97e0605700",
      "LastModified" : "2018-02-26T03:00:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake; -*-\n\n###############################################################################\n\n# Find librealsense  https://github.com/IntelRealSense/librealsense\n\n#\n\n# This sets the following variables:\n\n# LIBREALSENSE_FOUND - True if OPENNI was found.\n\n# LIBREALSENSE_INCLUDE_DIRS - Directories containing the OPENNI include files.\n\n# LIBREALSENSE_LIBRARIES - Libraries needed to use OPENNI.\n\n# LIBREALSENSE_DEFINITIONS - Compiler flags for OPENNI.\n\n#\n\n# File forked from augmented_dev, project of alantrrs\n\n# (https://github.com/alantrrs/augmented_dev).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add a hint so that it can find it without the pkg-config\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add a hint so that it can find it without the pkg-config\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMakeModules/FindLibRealSense2.cmake" : {
      "ObjectId" : "12ae95d56aa1acbfe2179b5b1320a72db90a2cc8",
      "LastModified" : "2018-07-21T18:46:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake; -*-\n\n###############################################################################\n\n# Find librealsense2  https://github.com/IntelRealSense/librealsense\n\n#\n\n# This sets the following variables:\n\n# LIBREALSENSE2_FOUND - True if LIBREALSENSE2 was found.\n\n# LIBREALSENSE2_INCLUDE_DIRS - Directories containing the LIBREALSENSE2 include files.\n\n# LIBREALSENSE2_LIBRARIES - Libraries needed to use LIBREALSENSE2.\n\n# LIBREALSENSE2_DEFINITIONS - Compiler flags for LIBREALSENSE2.\n\n#\n\n# File forked from augmented_dev, project of alantrrs\n\n# (https://github.com/alantrrs/augmented_dev).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add a hint so that it can find it without the pkg-config\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add a hint so that it can find it without the pkg-config\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMakeModules/FindLz4.cmake" : {
      "ObjectId" : "14bbf9e57421a73b01b2fdde59a27dee41f6d038",
      "LastModified" : "2018-10-25T00:36:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeModules/FindMediaFoundation.cmake" : {
      "ObjectId" : "0d8f47a82197145593086da3d2e365b08e7927ec",
      "LastModified" : "2018-10-25T00:36:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find MediaFoundation\n\n# Find the Windows SDK MediaFoundation libraries\n\n#\n\n# MediaFoundation_LIBRARIES   - List of libraries when using MediaFoundation\n\n# MediaFoundation_FOUND       - True if MediaFoundation found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/FindOculus.cmake" : {
      "ObjectId" : "040816289f072079ed8d15c38ece04d7374b9e89",
      "LastModified" : "2018-10-25T00:36:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Oculus Rift SDK\n\n#\n\n#  Oculus_FOUND - system has libuvc\n\n#  Oculus_INCLUDE_DIRS - the libuvc include directories\n\n#  Oculus_LIBRARIES - link these to use libuvc\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/FindOpenEXR.cmake" : {
      "ObjectId" : "f4f5d8a5f006bc5db4796773a15b1ce7bf8fbd4f",
      "LastModified" : "2018-10-25T00:36:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the OpenEXR v2 lib and include files\n\n#\n\n# OpenEXR_INCLUDE_DIR\n\n# OpenEXR_LIBRARIES\n\n# OpenEXR_FOUND\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/FindOpenNI.cmake" : {
      "ObjectId" : "b5e9d9c8ae4b330644610400970b3dc5acdbe87c",
      "LastModified" : "2018-10-25T00:36:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake; -*-\n\n###############################################################################\n\n# Find OpenNI\n\n#\n\n# This sets the following variables:\n\n# OPENNI_FOUND - True if OPENNI was found.\n\n# OPENNI_INCLUDE_DIRS - Directories containing the OPENNI include files.\n\n# OPENNI_LIBRARIES - Libraries needed to use OPENNI.\n\n# OPENNI_DEFINITIONS - Compiler flags for OPENNI.\n\n#\n\n# File forked from augmented_dev, project of alantrrs\n\n# (https://github.com/alantrrs/augmented_dev).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#using the 64bit version of OpenNi if generating for 64bit\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add a hint so that it can find it without the pkg-config\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#add a hint so that it can find it without the pkg-config\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "CMakeModules/FindOpenNI2.cmake" : {
      "ObjectId" : "2beb7aae8d56f93bf7239748654942766b3b16a5",
      "LastModified" : "2018-10-25T00:36:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Find OpenNI2\n\n#\n\n# This sets the following variables:\n\n# OPENNI2_FOUND - True if OPENNI was found.\n\n# OPENNI2_INCLUDE_DIRS - Directories containing the OPENNI include files.\n\n# OPENNI2_LIBRARIES - Libraries needed to use OPENNI.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add a hint so that it can find it without the pkg-config\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add a hint so that it can find it without the pkg-config\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMakeModules/FindPleora.cmake" : {
      "ObjectId" : "6a4a94df1ec1f83ec889e0ab083c0f018f4e3054",
      "LastModified" : "2018-10-25T00:36:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Pleora SDK\n\n#\n\n#  Pleora_FOUND - system has pleora eUSB SDK\n\n#  Pleora_INCLUDE_DIRS - the pleora eUSB SDK include directories\n\n#  Pleora_LIBRARIES - link these to use pleora eUSB SDK\n\n#  Pleora_BASE_DIR - set env varivales to this to use pleora eUSB SDK\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find header files\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find Library files\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMakeModules/FindROBOTVISION.cmake" : {
      "ObjectId" : "ea600d11cc5f5ea3e113f824196564f81d955c69",
      "LastModified" : "2018-10-25T00:36:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find librobotvision\n\n#\n\n#  ROBOTVISION_FOUND - system has librobotvision\n\n#  ROBOTVISION_INCLUDE_DIR - the librobotvision include directories\n\n#  ROBOTVISION_LIBRARY - link these to use librobotvision\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/FindTeliCam.cmake" : {
      "ObjectId" : "d2f70321e5090ca37f21e9bdced2873895d50aff",
      "LastModified" : "2018-10-25T00:36:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Find Toshiba TeliCam\n\n#\n\n# This sets the following variables:\n\n# TeliCam_FOUND - True if TeliCam was found.\n\n# TeliCam_INCLUDE_DIRS - Directories containing the TeliCam include files.\n\n# TeliCam_LIBRARIES - Libraries needed to use TeliCam.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/FindTooN.cmake" : {
      "ObjectId" : "13ce3d535a14507dcbd88d94cd7b80828d2c7d6c",
      "LastModified" : "2018-10-25T00:36:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libTooN\n\n#\n\n#  TooN_FOUND - system has libTooN\n\n#  TooN_INCLUDE_DIR - the libTooN include directories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/FindXrandr.cmake" : {
      "ObjectId" : "0ec844065769747dc55c1b9d388d1f6b35e3da66",
      "LastModified" : "2018-10-25T00:36:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Xrandr\n\n#\n\n#  Xrandr_FOUND - system has libXrandr\n\n#  Xrandr_INCLUDE_DIRS - the libXrandr include directories\n\n#  Xrandr_LIBRARIES - link these to use libXrandr\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/Findlibusb1.cmake" : {
      "ObjectId" : "a2087285832780b429b84b57f5df21e186b29b1c",
      "LastModified" : "2018-10-25T00:36:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libusb1\n\n#\n\n#  libusb1_FOUND - system has libusb1\n\n#  libusb1_INCLUDE_DIRS - the libusb1 include directories\n\n#  libusb1_LIBRARIES - link these to use libusb1\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/Findpthread.cmake" : {
      "ObjectId" : "40a76f2c0f9b2b05681d6f3be4630e10a0653853",
      "LastModified" : "2018-10-25T00:36:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find pthread\r\n\n#\r\n\n#  pthread_FOUND - system has pthread\r\n\n#  pthread_INCLUDE_DIRS - the pthread include directories\r\n\n#  pthread_LIBRARIES - link these to use pthread\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/Finduvc.cmake" : {
      "ObjectId" : "fefe72f10af109d85367764a7164710fb82f78f7",
      "LastModified" : "2018-10-25T00:36:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find uvc\n\n#\n\n#  uvc_FOUND - system has libuvc\n\n#  uvc_INCLUDE_DIRS - the libuvc include directories\n\n#  uvc_LIBRARIES - link these to use libuvc\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/Findzstd.cmake" : {
      "ObjectId" : "f4faabb8d93ffd52d7c36be92d00ae4d405f1a15",
      "LastModified" : "2018-10-25T00:36:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Find Toshiba TeliCam\n\n#\n\n# This sets the following variables:\n\n# TeliCam_FOUND - True if TeliCam was found.\n\n# TeliCam_INCLUDE_DIRS - Directories containing the TeliCam include files.\n\n# TeliCam_LIBRARIES - Libraries needed to use TeliCam.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Plural forms\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/SetPlatformVars.cmake" : {
      "ObjectId" : "a07b35a274e212fa335e7855abad3a501ae8556a",
      "LastModified" : "2018-10-25T00:36:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Compiler configuration\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Platform configuration\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Default search paths\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "e2caa6118e464eb0f1f4934a8056d13bb9f13e59",
      "LastModified" : "2018-12-02T02:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# All examples depend on Pangolin GUI\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## These samples require Pangolin Var support\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "## Video Samples require Pangolin Video support\n",
        "Line" : 18,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "#      # This sample fails on many platforms, so exclude it for now,\n\n#      # until we can create a better cmake test for support.\n\n#      find_package(CUDA QUIET)\n\n#      if( CUDA_FOUND )\n\n#        add_subdirectory(VBODisplay)\n\n#      endif()\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "examples/HelloPangolin/CMakeLists.txt" : {
      "ObjectId" : "f37389aa24dfa8989250ab152122430ae4f5160e",
      "LastModified" : "2018-10-25T00:36:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Pangolin (https://github.com/stevenlovegrove/Pangolin)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/HelloPangolinOffscreen/CMakeLists.txt" : {
      "ObjectId" : "8653de3292551f1c391e2f0d48af577820c1832c",
      "LastModified" : "2018-12-02T02:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Pangolin (https://github.com/stevenlovegrove/Pangolin)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/HelloPangolinThreads/CMakeLists.txt" : {
      "ObjectId" : "78f02a31f8677a3d4e4413c31b3c5d7546b96b7e",
      "LastModified" : "2018-12-02T02:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Pangolin (https://github.com/stevenlovegrove/Pangolin)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/SharedMemoryCamera/CMakeLists.txt" : {
      "ObjectId" : "567aeed4bec1a0341d38ea23cf1d37c789fba763",
      "LastModified" : "2018-12-02T02:38:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/SimpleDisplay/CMakeLists.txt" : {
      "ObjectId" : "fe858589172a93c6939add467cdd9b7efc5e4294",
      "LastModified" : "2018-12-02T02:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Pangolin (https://github.com/stevenlovegrove/Pangolin)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/SimpleDisplayImage/CMakeLists.txt" : {
      "ObjectId" : "57f37b0392e6d1a49117398951c11f136a2ddc33",
      "LastModified" : "2018-12-02T02:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Pangolin (https://github.com/stevenlovegrove/Pangolin)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/SimpleMultiDisplay/CMakeLists.txt" : {
      "ObjectId" : "3d91937b401a4000bf905eacb884c52be3c83d95",
      "LastModified" : "2018-12-02T02:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Pangolin (https://github.com/stevenlovegrove/Pangolin)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/SimplePlot/CMakeLists.txt" : {
      "ObjectId" : "62a6de774d8bb2d7b88b5afcc8f54aab70a12ede",
      "LastModified" : "2018-12-02T02:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Pangolin (https://github.com/stevenlovegrove/Pangolin)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/SimpleRecord/CMakeLists.txt" : {
      "ObjectId" : "8977c0eff8a227478dddd3aab7da0d53b604bd19",
      "LastModified" : "2018-12-02T02:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Pangolin (https://github.com/stevenlovegrove/Pangolin)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/SimpleScene/CMakeLists.txt" : {
      "ObjectId" : "2ad2549780a2c9491cb60a2193b44baa8123cdc2",
      "LastModified" : "2018-12-02T02:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Pangolin (https://github.com/stevenlovegrove/Pangolin)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/SimpleVideo/CMakeLists.txt" : {
      "ObjectId" : "0be7165d6edf17bddc946a07f8ab5502547f32bf",
      "LastModified" : "2018-12-02T02:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Pangolin (https://github.com/stevenlovegrove/Pangolin)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/VBODisplay/CMakeLists.txt" : {
      "ObjectId" : "28a5b7e16722ba53f1b0ff4258dd1b44750ce223",
      "LastModified" : "2018-12-02T02:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Pangolin (https://github.com/stevenlovegrove/Pangolin)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This example could be made to work with C++11, but the kernel code must be\n\n# compiled without it.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "external/CMakeLists.txt" : {
      "ObjectId" : "c247f4cb4aecbdcb9a3560e9dc35606f2682f1af",
      "LastModified" : "2018-12-02T02:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#########################################################\n\n# GLEW\n\n#########################################################\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################################\n\n# zlib\n\n#########################################################\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################################\n\n# libpng\n\n#########################################################\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################################\n\n# libjpg\n\n#########################################################\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "8e3172bd39800f3886967ec9752cd8f2f9639317",
      "LastModified" : "2018-12-03T23:46:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################################\n\n## Library sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Header only includes / core headers\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Store list of source files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### Store list of Video factory registery methods to call for init.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#######################################################\n\n## User build options\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Generic video includes\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Generic video drivers\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Required for shared memory API using some versions of glibc\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#######################################################\n\n## Setup required includes / link info\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Android specific display code\n",
        "Line" : 146,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Add Pangolins backwards compat layer.\n",
        "Line" : 177,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# headless offscreen rendering via EGL\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#######################################################\n\n## Find optional dependencies\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Fix issue with thread local storage on android.\n",
        "Line" : 195,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Nothing specific in here yet.\n",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Wayland\n",
        "Line" : 210,
        "CharPositionInLine" : 12
      },
      "16" : {
        "Text" : "# X11\n",
        "Line" : 235,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# Required for shared memory API using some versions of glibc\n",
        "Line" : 255,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# pybind11 stuff\n",
        "Line" : 291,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Eigen causes many of these errors. Suppress.\n",
        "Line" : 312,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# FFMPEG is a real pain for deprecating the API.\n",
        "Line" : 365,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Suppress warnings generated from Pleora SDK.\n",
        "Line" : 508,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# (ZLIB is also found by FindPNG.cmake as its dependency)\n",
        "Line" : 522,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "#######################################################\n\n## Embed resource binary files\n",
        "Line" : 587,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#######################################################\n\n## Add Libraries / Include Directories / Link directories\n",
        "Line" : 597,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# 'System' includes shield us from warnings in those includes.\n",
        "Line" : 603,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## Generate symbol export helper header on MSVC\n",
        "Line" : 610,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Set Special Compiler flags\n",
        "Line" : 625,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#######################################################\n\n## Create config.h file for inclusion in library\n",
        "Line" : 632,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#######################################################\n\n## Create video_drivers.h file for inclusion in library\n\n## This loads video driver factories based on cmake configuration\n",
        "Line" : 640,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#######################################################\n\n## Create window_frameworks.h file for inclusion in library\n\n## This loads windowing framwork factories based on cmake configuration\n",
        "Line" : 649,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#######################################################\n\n## Python wrapper\n",
        "Line" : 658,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#######################################################\n\n## Generate Doxygen documentation target (make pangolin_doc)\n",
        "Line" : 669,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#######################################################\n",
        "Line" : 682,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# This relative path allows installed files to be relocatable.\n",
        "Line" : 684,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Export library for easy inclusion from other cmake projects. APPEND allows\n\n# call to function even as subdirectory of larger project.\n",
        "Line" : 691,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Version information\n",
        "Line" : 697,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Build tree config\n",
        "Line" : 701,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Install tree config\n",
        "Line" : 706,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Add package to CMake package registery for use from the build tree\n",
        "Line" : 711,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#######################################################\n\n## Install headers / targets\n",
        "Line" : 719,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#######################################################\n\n## Install CMake config\n",
        "Line" : 735,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 42
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "4a21a0410128bd7b636d35b1922ad9305b7474ca",
      "LastModified" : "2018-12-02T02:38:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/log/CMakeLists.txt" : {
      "ObjectId" : "10ec44e8c464e5d6f0d058716c34974d610e4087",
      "LastModified" : "2018-12-02T02:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Pangolin (https://github.com/stevenlovegrove/Pangolin)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_executable(Testlog testlog.cpp )\n\n#target_link_libraries(Testlog ${Pangolin_LIBRARIES})\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "285dc2618c0119ebd1d7905d695eb9da87f11de2",
      "LastModified" : "2018-12-02T02:38:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/ModelViewer/CMakeLists.txt" : {
      "ObjectId" : "e262f16da700acecc9c76df0eb9bef6981d36233",
      "LastModified" : "2018-12-02T02:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Pangolin (https://github.com/stevenlovegrove/Pangolin)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/Plotter/CMakeLists.txt" : {
      "ObjectId" : "12c71123a9dcebfe21ce5756fb0394ffd3fb994d",
      "LastModified" : "2018-12-02T02:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Pangolin (https://github.com/stevenlovegrove/Pangolin)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make file association\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################################\n\n## Install\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tools/VideoConvert/CMakeLists.txt" : {
      "ObjectId" : "133b991c9e32a12dbe4e2060b776640c2d6f863f",
      "LastModified" : "2018-12-02T02:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Pangolin (https://github.com/stevenlovegrove/Pangolin)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################################\n\n## Install\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/VideoJson/CMakeLists.txt" : {
      "ObjectId" : "f76919f7b33f80d9c2c040c8a96e2df0fbf97bc7",
      "LastModified" : "2018-12-02T02:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Pangolin (https://github.com/stevenlovegrove/Pangolin)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################################\n\n## Install\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/VideoViewer/CMakeLists.txt" : {
      "ObjectId" : "a0fffd0f3f5142fb71dc2f7a96a0c3a9bef8b07b",
      "LastModified" : "2018-12-02T02:38:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Pangolin (https://github.com/stevenlovegrove/Pangolin)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make file association\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################################\n\n## Install\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 52
  },
  "ElapsedTime" : 1622
}