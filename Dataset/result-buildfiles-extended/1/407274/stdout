{
  "Repository" : "407274",
  "Revision" : "HEAD",
  "ObjectId" : "f9a573fcdc9e85f5f5ef99e9f9b04374096d404b",
  "CommitTime" : "2019-03-20T16:14:38Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "8256b4cf58ee86643cc3847d30d5b4e0311798ed",
      "LastModified" : "2014-01-29T19:31:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# install cmake files for catkin (except some files only used at build time of catkin)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/all.cmake" : {
      "ObjectId" : "d6c3e713df6848e3ec8cfc80268c0def1909c4a0",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# prevent multiple inclusion\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# define devel space\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# update develspace marker file with a reference to this sourcespace\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# check if the develspace marker file exists yet\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# write this sourcespace to the marker file\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# append to existing list of sourcespaces if it's not in the list\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# create a new develspace marker file\n\n# NOTE: extra care must be taken when running multiple catkin jobs in parallel \n\n#       so that this does not overwrite the result of a similar call in another package\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# use either CMAKE_PREFIX_PATH explicitly passed to CMake as a command line argument\n\n# or CMAKE_PREFIX_PATH from the environment\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# store original CMAKE_PREFIX_PATH\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# list of unique catkin workspaces based on CMAKE_PREFIX_PATH\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# prepend devel space to CMAKE_PREFIX_PATH\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# set CATKIN_INSTALL_INTO_PREFIX_ROOT based on CATKIN_BUILD_BINARY_PACKAGE\n\n# if not defined already\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# enable all new policies (if available)\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# the following operations must be performed inside a project context\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# include CMake functions\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# functions/macros: list_append_unique, safe_execute_process\n\n# python-integration: catkin_python_setup.cmake, interrogate_setup_dot_py.py, templates/__init__.py.in, templates/script.py.in, templates/python_distutils_install.bat.in, templates/python_distutils_install.sh.in, templates/safe_execute_install.cmake.in\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# required by catkin_symlink_install and test/gtest\n",
        "Line" : 135,
        "CharPositionInLine" : 19
      },
      "17" : {
        "Text" : "# defines PYTHON_EXECUTABLE, required by empy\n",
        "Line" : 140,
        "CharPositionInLine" : 11
      },
      "18" : {
        "Text" : "# defines CATKIN_ENABLE_TESTING, required by other test functions\n",
        "Line" : 153,
        "CharPositionInLine" : 15
      },
      "19" : {
        "Text" : "#    tools/threads\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# output catkin version for debugging\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# ensure that no current package name is set\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# tools/libraries.cmake\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# set global install destinations\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# undefine CATKIN_ENV since it might be set in the cache from a previous build\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# generate environment files like env.* and setup.*\n\n# uses em_expand without CATKIN_ENV being set yet\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# file extension of env script\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# true for linux, apple, mingw-cross and cygwin\n",
        "Line" : 192,
        "CharPositionInLine" : 20
      },
      "28" : {
        "Text" : "# take snapshot of the modifications the setup script causes\n\n# to reproduce the same changes with a static script in a fraction of the time\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# the script is generated once here and refreshed by\n\n# every call to catkin_add_env_hooks() and\n\n# the first call to catkin_python_setup() if the Python install directory didn't exist yet\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# generate env_cached which just relays to the setup_cached\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# environment to call external processes\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# add additional environment hooks\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# requires stamp and environment files\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    },
    "cmake/assert.cmake" : {
      "ObjectId" : "1a3f2c194bca4a9bd720a5122a6af3d683d604a0",
      "LastModified" : "2012-08-16T23:44:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/atomic_configure_file.cmake" : {
      "ObjectId" : "dfe5ba0045da96dee629fc6a11b5c454c940eeaa",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# sync multiple catkin cmake processes writing to that location\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "cmake/catkin_add_env_hooks.cmake" : {
      "ObjectId" : "f08d54abdc72e4be5a46fe2988c377dd776b9f46",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Register environment hooks which are executed by the setup script.\n\n#\n\n# For each shell in ``SHELLS``, the macro searches for one of the\n\n# following files in the directory ``DIRECTORY``:\n\n# ``<file_prefix>.<shell>``,\n\n# ``<file_prefix>.<shell>.<develspace|installspace>.em``,\n\n# ``<file_prefix>.<shell>.em``,\n\n# ``<file_prefix>.<shell>.<develspace|installspace>.in`` or\n\n# ``<file_prefix>.<shell>.in``.\n\n#\n\n# Plain shells, will be copied to, templates are expanded to\n\n# ``etc/catkin/profile.d/``, where it will be read by global generated\n\n# ``setup.<shell>``.\n\n#\n\n# The templates can also distinguish between devel- and installspace\n\n# using the boolean variables ``DEVELSPACE`` and ``INSTALLSPACE``\n\n# which are either ``true`` or ``false``.\n\n# E.g. @[if DEVELSPACE]@ ... @[end if]@ for .em\n\n#\n\n# .. note:: Note that the extra extensions must appear in the filename\n\n#   but must not appear in the argument.\n\n#\n\n# .. note:: These files will share a single directory with other\n\n#   packages that choose to install env hooks.  Be careful to give\n\n#   the file a unique name.  Typically ``NN.name.<shell>`` is used,\n\n#   where NN can define when something should be run (the files are\n\n#   read in alphanumeric order) and the name serves to disambiguate\n\n#   in the event of collisions.\n\n#\n\n# Example::\n\n#\n\n#   catkin_add_env_hooks(my_prefix SHELLS bash tcsh zsh DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/env-hooks)\n\n#\n\n# looks for files env-hooks/my_prefix.[bash|tcsh|zsh]((.(devel|install)space)?.[em|in])?\n\n#\n\n# The environment hooks are installed into two destinations:\n\n#  * ``etc/catkin/profile.d`` where they can be sourced efficiently by the\n\n#    catkin generated ``setup.<shell>`` scripts\n\n#  * ``share/${PROJECT_NAME}/catkin_env_hook`` where they can be sourced\n\n#    efficiently on a per-package base\n\n#\n\n# :param file_prefix: the filename prefix\n\n# :type file_prefix: string\n\n# :param SHELLS: the shell extensions (e.g.: sh bat bash zsh tcsh)\n\n# :type SHELLS: list of strings\n\n# :param DIRECTORY: the directory (default: ${CMAKE_CURRENT_SOURCE_DIR})\n\n# :type DIRECTORY: string\n\n# :param SKIP_INSTALL: if specified the env hooks are only generated\n\n#   in the devel space but not installed\n\n# :type SKIP_INSTALL: option\n\n#\n\n# @public\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# create directory if necessary\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# generate environment hook for devel space\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# evaluate em template\n",
        "Line" : 75,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# evaluate in template\n",
        "Line" : 86,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# copy plain file\n",
        "Line" : 96,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# generate and install environment hook for installspace\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# evaluate em template and install\n",
        "Line" : 106,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# evaluate in template and install\n",
        "Line" : 123,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# install plain file\n",
        "Line" : 139,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# refresh environment cache\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "cmake/catkin_destinations.cmake" : {
      "ObjectId" : "c4327e12235b0061f68f60b4f4231f66bf8476d6",
      "LastModified" : "2012-11-06T01:51:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Set several path suffixes for install destinations.\n\n#\n\n# :outvar CATKIN_PACKAGE_BIN_DESTINATION:\n\n#   See :cmake:data:`CATKIN_PACKAGE_BIN_DESTINATION`.\n\n# :outvar CATKIN_PACKAGE_ETC_DESTINATION:\n\n#   See :cmake:data:`CATKIN_PACKAGE_ETC_DESTINATION`.\n\n# :outvar CATKIN_PACKAGE_INCLUDE_DESTINATION:\n\n#   See :cmake:data:`CATKIN_PACKAGE_INCLUDE_DESTINATION`.\n\n# :outvar CATKIN_PACKAGE_LIB_DESTINATION:\n\n#   See :cmake:data:`CATKIN_PACKAGE_LIB_DESTINATION`.\n\n# :outvar CATKIN_PACKAGE_PYTHON_DESTINATION:\n\n#   See :cmake:data:`CATKIN_PACKAGE_PYTHON_DESTINATION`.\n\n# :outvar CATKIN_PACKAGE_SHARE_DESTINATION:\n\n#   See :cmake:data:`CATKIN_PACKAGE_SHARE_DESTINATION`.\n\n#\n\n# :outvar CATKIN_GLOBAL_BIN_DESTINATION:\n\n#   See :cmake:data:`CATKIN_GLOBAL_BIN_DESTINATION`.\n\n# :outvar CATKIN_GLOBAL_ETC_DESTINATION:\n\n#   See :cmake:data:`CATKIN_GLOBAL_ETC_DESTINATION`.\n\n# :outvar CATKIN_GLOBAL_INCLUDE_DESTINATION:\n\n#   See :cmake:data:`CATKIN_GLOBAL_INCLUDE_DESTINATION`.\n\n# :outvar CATKIN_GLOBAL_LIB_DESTINATION:\n\n#   See :cmake:data:`CATKIN_GLOBAL_LIB_DESTINATION`.\n\n# :outvar CATKIN_GLOBAL_LIBEXEC_DESTINATION:\n\n#   See :cmake:data:`CATKIN_GLOBAL_LIBEXEC_DESTINATION`.\n\n# :outvar CATKIN_GLOBAL_PYTHON_DESTINATION:\n\n#   See :cmake:data:`CATKIN_GLOBAL_PYTHON_DESTINATION`.\n\n# :outvar CATKIN_GLOBAL_SHARE_DESTINATION:\n\n#   See :cmake:data:`CATKIN_GLOBAL_SHARE_DESTINATION`.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# verify that project() has been called before\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# execute catkin_destinations() only once, skip repeated invocations\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# mark that catkin_destinations() was called\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# set project specific install destinations\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# set project specific output directory for libraries\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# set project specific output directory for binaries\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "cmake/catkin_download.cmake" : {
      "ObjectId" : "92af294724d892ac8eb2e9a7e55782c703c095f9",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Download a file containing data from a URL.\n\n#\n\n# It is commonly used to download larger data files which should not be\n\n# stored in the repository.\n\n#\n\n# .. note:: It is not recommended to rely on downloaded data during\n\n#   a configure / make cycle since this prevents building the package\n\n#   when no network connectivity is available.\n\n#\n\n# .. note:: The target will be registered as a dependency\n\n#   of the \"download_extra_data\" target.\n\n#\n\n# :param target: the target name\n\n# :type target: string\n\n# :param url: the url to download\n\n# :type url: string\n\n#\n\n# :param DESTINATION: the directory where the file is downloaded to\n\n#   (default: ${PROJECT_BINARY_DIR})\n\n# :type DESTINATION: string\n\n# :param FILENAME: the filename of the downloaded file\n\n#   (default: the basename of the url)\n\n# :type FILENAME: string\n\n# :param MD5: the expected md5 hash to compare against\n\n#   (default: empty, skipping the check)\n\n# :type MD5: string\n\n#\n\n# Additionally, options EXCLUDE_FROM_ALL and REQUIRED can be specified.\n\n#\n\n# @public\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# With this, the command is always called, even when the output is up to date.\n\n# this is because we want to check the md5 sum if it's given, and redownload\n\n# the target if the md5 sum does not match.\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/catkin_generate_environment.cmake" : {
      "ObjectId" : "c22fb0546929faf2adf47dfb7dea9b015e55caec",
      "LastModified" : "2019-02-28T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# devel space\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# generate empty file to prevent searching for packages in binary dir\n\n# except if source space and build space are identical (which is the case for dry eclipse projects)\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# get multiarch name\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Two step looking for multiarch support: check for gcc -print-multiarch\n\n# and, if failed, try to run dpkg-architecture\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# generate Python setup util\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# non-windows\n\n# generate env\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# generate setup for various shells\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# windows\n\n# generate env\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# generate setup\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# generate rosinstall file referencing setup.sh\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# installspace\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# install empty workspace marker if it doesn't already exist\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# generate and install Python setup util\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# non-windows\n\n# generate and install env\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# generate and install setup for various shells\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# windows\n\n# generate and install env\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# generate and install setup\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# generate rosinstall file referencing setup.sh\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "cmake/catkin_install_python.cmake" : {
      "ObjectId" : "879f39e6c6091c2743c9027656c8a57d5a425196",
      "LastModified" : "2019-03-04T22:22:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Install Python files and update their shebang lines\n\n# to use a different Python executable.\n\n#\n\n# The signature:\n\n#\n\n#   catkin_install_python(PROGRAMS files... DESTINATION <dir> [OPTIONAL])\n\n#\n\n# See the documentation for CMake install() function for more information.\n\n#\n\n# @public\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# read file and check shebang line\n",
        "Line" : 28,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# write modified file with modified shebang line\n",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# install (modified) file to destination\n",
        "Line" : 44,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 4
    },
    "cmake/catkin_libraries.cmake" : {
      "ObjectId" : "814eb43495980992e93b8dc28e4e552c2cc6e877",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Filter libraries based on optional build configuration keywords.\n\n#\n\n# :param VAR: the output variable name\n\n# :type VAR: string\n\n# :param ARGN: a list of libraries\n\n# :type ARGN: list of strings\n\n# :param BUILD_TYPE: a keyword for the build type (default:\n\n#   ``CMAKE_BUILD_TYPE``)\n\n# :type BUILD_TYPE: list of strings\n\n#\n\n# @public\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# skip keyword and debug library for non-debug builds\n",
        "Line" : 32,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# skip keyword and non-debug library for debug builds\n",
        "Line" : 40,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# just consume the keyword\n",
        "Line" : 47,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#\n\n# Pack a list of libraries with optional build configuration keywords.\n\n# Each keyword is joined with its library using a separator.\n\n# A packed library list can be deduplicated correctly.\n\n#\n\n# :param VAR: the output variable name\n\n# :type VAR: string\n\n# :param ARGN: a list of libraries\n\n# :type ARGN: list of strings\n\n#\n\n# @public\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#debug_message(10 \"catkin_pack_libraries_with_build_configuration(${VAR} ${_argn}) ${result}\")\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#\n\n# Unpack a list of libraries with optional build configuration keyword prefixes.\n\n# Libraries prefixed with a keyword are split into the keyword and the library.\n\n#\n\n# :param VAR: the output variable name\n\n# :type VAR: string\n\n# :param ARGN: a list of libraries\n\n# :type ARGN: list of strings\n\n#\n\n# @public\n\n#\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#set(_argn ${ARGN})\n\n#debug_message(10 \"catkin_unpack_libraries_with_build_configuration(${VAR} ${_argn}) ${result}\")\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#\n\n# Replace imported library target names with the library name.\n\n#\n\n# :param VAR: the output variable name\n\n# :type VAR: string\n\n# :param ARGN: a list of libraries\n\n# :type ARGN: list of strings\n\n#\n\n# @public\n\n#\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# sometimes cmake dependencies define imported targets, in which\n\n# case the imported library information is not the target name, but\n\n# the information embedded in cmake properties inside the imported library\n\n# For interface libraries, this is the INTERFACE_LINK_LIBRARIES property.\n\n# For regular imported libraries, this is IMPORTED_LOCATION(_$CONFIG).\n",
        "Line" : 131,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# empty list\n",
        "Line" : 143,
        "CharPositionInLine" : 33
      },
      "11" : {
        "Text" : "# check both locations (imported dll and static lib) on Windows\n\n# otherwise, for packages exporting static lib, the lib path won't be published correctly to downstream\n",
        "Line" : 151,
        "CharPositionInLine" : 14
      },
      "12" : {
        "Text" : "# not an imported library target\n",
        "Line" : 169,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "#set(_argn ${ARGN})\n\n#debug_message(10 \"catkin_replace_imported_library_targets(${VAR} ${_argn}) ${result}\")\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 14
    },
    "cmake/catkin_metapackage.cmake" : {
      "ObjectId" : "e111338a906080ad186f91177f8c793f095d3418",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# It installs the package.xml file of a metapackage.\n\n#\n\n# .. note:: It must be called once for each metapackage.  Best\n\n#   practice is to call this macro early in your root CMakeLists.txt,\n\n#   immediately after calling ``project()`` and\n\n#   ``find_package(catkin REQUIRED)``.\n\n#\n\n# :param DIRECTORY: the path to the package.xml file if not in the same\n\n#   location as the CMakeLists.txt file\n\n# :type DIRECTORY: string\n\n#\n\n# @public\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# verify that project() has been called before\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# install package.xml\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/catkin_package.cmake" : {
      "ObjectId" : "fb6b01a17269ea5b960693f30a7433fb1135fbfe",
      "LastModified" : "2019-03-12T19:51:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# It installs the package.xml file, and it generates code for\n\n# ``find_package`` and ``pkg-config`` so that other packages can get\n\n# information about this package.  For this purpose the information\n\n# about include directories, libraries, further dependencies and\n\n# CMake variables are used.\n\n#\n\n# .. note:: It must be called once for each package.  It is indirectly\n\n#   calling``catkin_destinations()`` which will provide additional\n\n#   output variables.  Please make sure to call ``catkin_package()``\n\n#   before using those variables.\n\n#\n\n# :param INCLUDE_DIRS: ``CMAKE_CURRENT_SOURCE_DIR``-relative paths to\n\n#   C/C++ includes\n\n# :type INCLUDE_DIRS: list of strings\n\n# :param LIBRARIES: names of library targets that will appear in the\n\n#   ``catkin_LIBRARIES`` and ``${PROJECT_NAME}_LIBRARIES`` of other\n\n#   projects that search for you via ``find_package``.  Currently\n\n#   this will break if the logical target names are not the same as\n\n#   the installed names.\n\n# :type LIBRARIES: list of strings\n\n# :param CATKIN_DEPENDS: a list of catkin projects which this project\n\n#   depends on.  It is used when client code finds this project via\n\n#   ``find_package()`` or ``pkg-config``.  Each project listed will in\n\n#   turn be ``find_package``\\ -ed or is states as ``Requires`` in the\n\n#   .pc file.  Therefore their ``INCLUDE_DIRS`` and ``LIBRARIES`` will\n\n#   be appended to ours.  Only catkin projects should be used where it\n\n#   be guarantee that they are *find_packagable* and have pkg-config\n\n#   files.\n\n# :type CATKIN_DEPENDS: list of strings\n\n# :param DEPENDS: a list of CMake projects which this project depends\n\n#   on.  Since they might not be *find_packagable* or lack a pkg-config\n\n#   file their ``INCLUDE_DIRS`` and ``LIBRARIES`` are passed directly.\n\n#   This requires that it has been ``find_package``\\ -ed before and all\n\n#   variables (``<name>_FOUND``, ``<name>_INCLUDE_DIRS``, etc.) have the\n\n#   same case as this argument.\n\n# :type DEPENDS: list of strings\n\n# :param CFG_EXTRAS: a CMake file containing extra stuff that should\n\n#   be accessible to users of this package after\n\n#   ``find_package``\\ -ing it.  This file must live in the\n\n#   subdirectory ``cmake`` or be an absolute path.\n\n#   All passed extra files must have unique basenames since they are\n\n#   being installed into a single folder.\n\n#   Various additional file extension are possible:\n\n#   for a plain cmake file just ``.cmake``, for files expanded using\n\n#   CMake's ``configure_file()`` use ``.cmake.in`` or for files expanded\n\n#   by empy use ``.cmake.em``.  The templates can distinguish between\n\n#   devel- and installspace using the boolean variables ``DEVELSPACE``\n\n#   and ``INSTALLSPACE``.  For templated files it is also possible to\n\n#   use the extensions ``.cmake.develspace.(in|em)`` or\n\n#   ``.cmake.installspace.(em|in)`` to generate the files only for a\n\n#   specific case.\n\n#   If the global variable ${PROJECT_NAME}_CFG_EXTRAS is set it will be\n\n#   prepended to the explicitly passed argument.\n\n# :type CFG_EXTRAS: string\n\n# :param EXPORTED_TARGETS: a list of target names which usually generate\n\n#   code. Downstream packages can depend on these targets to ensure that\n\n#   code is generated before it is being used. The generated CMake config\n\n#   file will ensure that the targets exists.\n\n#   If the global variable ${PROJECT_NAME}_EXPORTED_TARGETS is\n\n#   set it will be prepended to the explicitly passed argument.\n\n# :type EXPORTED_TARGETS: list of strings\n\n# :param SKIP_CMAKE_CONFIG_GENERATION: the option to skip the generation\n\n#   of the CMake config files for the package\n\n# :type SKIP_CMAKE_CONFIG_GENERATION: bool\n\n# :param SKIP_PKG_CONFIG_GENERATION: the option to skip the generation of\n\n#   the pkg-config file for the package\n\n# :type SKIP_PKG_CONFIG_GENERATION: bool\n\n#\n\n# Example:\n\n# ::\n\n#\n\n#   catkin_package(\n\n#     INCLUDE_DIRS include\n\n#     LIBRARIES projlib1 projlib2\n\n#     CATKIN_DEPENDS roscpp\n\n#     DEPENDS Eigen\n\n#     CFG_EXTRAS proj-extras[.cmake|.cmake.in|.cmake(.develspace|.installspace)?.em]\n\n#   )\n\n#\n\n# @public\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# verify that project() has been called before\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# mark that catkin_package() was called in order to detect wrong order of calling with generate_messages()\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# call catkin_package_xml() if it has not been called before\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# prepend INCLUDE_DIRS and LIBRARIES passed using a variable\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# unset previously found directory of this package, so that this package overlays the other cleanly\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# check if the second argument is the COMPONENTS keyword\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# split multiple names (without COMPONENTS) into separate dependencies\n",
        "Line" : 156,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "#message(WARNING \"catkin_package() DEPENDS on catkin package '${depend_name}' which is deprecated. Use CATKIN_DEPENDS for catkin packages instead.\")\n",
        "Line" : 159,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "# the dependency might not come from a CMake config / module file\n\n# but from e.g. PkgConfig / pkg_search_module\n\n# therefore this can't expect ${depend_name}_FOUND to be defined\n",
        "Line" : 162,
        "CharPositionInLine" : 10
      },
      "10" : {
        "Text" : "# for catkin packages it can be guaranteed that they are find_package()-able and have pkg-config files\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# verify that all catkin packages which have been find_package()-ed are listed as build dependencies\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# verify that these packages are really catkin packages\n",
        "Line" : 180,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# verify versioned dependency constraints\n",
        "Line" : 198,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# verify that all catkin packages are listed as run dependencies\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# package version provided by package.cmake/xml\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# flag if package is deprecated provided by package.cmake/xml\n",
        "Line" : 232,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# package maintainer provided by package.cmake/xml\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# urls provided by package.cmake/xml\n",
        "Line" : 238,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# get library paths from all workspaces\n",
        "Line" : 242,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# merge explicitly listed libraries and libraries from non-catkin but find_package()-ed packages\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# resolve imported library targets\n",
        "Line" : 257,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# deduplicate libraries while maintaining build configuration keywords\n",
        "Line" : 260,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# .pc files can not handle build configuration keywords therefore filter them out based on the current build type\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "#\n\n# DEVEL SPACE\n\n#\n",
        "Line" : 280,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# used in the cmake extra files\n",
        "Line" : 284,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# absolute path to include dirs and validate that they are existing either absolute or relative to packages source\n",
        "Line" : 291,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# prepend library path of this workspace\n",
        "Line" : 314,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# ensure that output folder exists\n",
        "Line" : 323,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# generate devel space pc for project\n",
        "Line" : 325,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# generate devel space cfg-extras for project\n",
        "Line" : 332,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# generate devel space config for project\n",
        "Line" : 378,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# generate devel space config-version for project\n",
        "Line" : 387,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "#\n\n# INSTALLSPACE\n\n#\n",
        "Line" : 394,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# used in the cmake extra files\n",
        "Line" : 398,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# absolute path to include dir under install prefix if any include dir is set\n",
        "Line" : 405,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# include dirs in source / build / devel space are handled like relative ones\n\n# since these files are supposed to be installed to the include folder in install space\n",
        "Line" : 409,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# generated header files should be places in the devel space rather then in the build space\n",
        "Line" : 415,
        "CharPositionInLine" : 6
      },
      "38" : {
        "Text" : "# the value doesn't matter as long as it doesn't match IS_ABSOLUTE\n",
        "Line" : 419,
        "CharPositionInLine" : 6
      },
      "39" : {
        "Text" : "# prepend library path of this workspace\n",
        "Line" : 435,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# package cmake dir is the folder where the generated pkgConfig.cmake is located\n",
        "Line" : 438,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# ensure that output folder exists\n",
        "Line" : 442,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# generate and install pc for project\n",
        "Line" : 444,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# generate and install cfg-extras for project\n",
        "Line" : 454,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# generate config for project\n",
        "Line" : 501,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# generate config-version for project\n",
        "Line" : 510,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# install config, config-version and cfg-extras for project\n",
        "Line" : 519,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# install package.xml\n",
        "Line" : 527,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 48
    },
    "cmake/catkin_package_xml.cmake" : {
      "ObjectId" : "f8ec72c3f927acbddab998284f2e85ac257d09c8",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Parse package.xml from ``CMAKE_CURRENT_SOURCE_DIR`` and\n\n# make several information available to CMake.\n\n#\n\n# .. note:: It is called automatically by ``catkin_package()`` if not\n\n#   called manually before.  It must be called once in each package,\n\n#   after calling ``project()`` where the project name must match the\n\n#   package name.  The macro should only be called manually if the\n\n#   variables are use to parameterize ``catkin_package()``.\n\n#\n\n# :param DIRECTORY: the directory of the package.xml (default\n\n#   ``${CMAKE_CURRENT_SOURCE_DIR}``).\n\n# :type DIRECTORY: string\n\n#\n\n# :outvar <packagename>_VERSION: the version number\n\n# :outvar <packagename>_MAINTAINER: the name and email of the\n\n#   maintainer(s)\n\n# :outvar <packagename>_PACKAGE_FORMAT: the format version of the manifest\n\n# :outvar <packagename>_<dep_type>_DEPENDS: the dependencies of a specific\n\n#   type, the following types are available: BUILD, BUILD_EXPORT, BUILDTOOL,\n\n#   BUILDTOOL_EXPORT, EXEC, RUN, TEST, DOC\n\n# :outvar <packagename>_<dep_type>_DEPENDS_<dep_name>_VERSION_<ver_type>: for\n\n#   each dependency which has a version range specified the version number is\n\n#   provided, the following version types are available: LT, LTE, EQ, GTE, GT\n\n# :outvar <packagename>_URL_WEBSITE: the url(s) of type `website`\n\n# :outvar <packagename>_URL_BUGTRACKER: the url(s) of type `bugtracker`\n\n# :outvar <packagename>_URL_REPOSITORY: the url(s) of type `repository`\n\n# :outvar <packagename>_DEPRECATED: `TRUE` if the package is deprecated\n\n# :outvar _CATKIN_CURRENT_PACKAGE: the name of the package from the\n\n#   manifest\n\n#\n\n# .. note:: It is calling ``catkin_destinations()`` which will provide\n\n#   additional output variables.\n\n#\n\n# @public\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# verify that project() has been called before\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# ensure that function is not called multiple times per package\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# verify that the package name from package.xml equals the project() name\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# set default directory\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# stamp and parse package.xml\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# load extracted variable into cmake\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "cmake/catkin_python_setup.cmake" : {
      "ObjectId" : "88e3e5161f1c644cae5d513b5ec2adb3aa48c9e5",
      "LastModified" : "2019-03-12T19:51:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This macro will interrogate the Python setup.py file in\n\n# ``${${PROJECT_NAME}_SOURCE_DIR}``, and then creates forwarding\n\n# Python :term:`pkgutil` infrastructure in devel space\n\n# accordingly for the scripts and packages declared in setup.py.\n\n#\n\n# Doing so enables mixing :term:`generated code` in\n\n# devel space with :term:`static code` from sourcespace within a\n\n# single Python package.\n\n#\n\n# In addition, it adds the install command of\n\n# distutils/setuputils to the install target.\n\n#\n\n# .. note:: If the project also uses genmsg message generation via\n\n#   ``generate_messages()`` this function must be called before.\n\n#\n\n# @public\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# need to convert install prefix to native path for python setuptools --prefix (its fussy about \\'s)\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# generate python script which gets executed at install time\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# interrogate setup.py\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# call catkin_package_xml() if it has not been called before\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# verify that version from setup.py is equal to version from package.xml\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# if the Python install directory didn't exist before\n\n# the cached environment won't contain it in the PYTHONPATH\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# refresh environment cache\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# generate relaying __init__.py for each python package\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# mark that catkin_python_setup() was called and the setup.py file contains a package with the same name as the current project\n\n# in order to disable installation of generated __init__.py files in generate_messages() and generate_dynamic_reconfigure_options()\n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# generate relay-script for each python module (and __init__.py files) if available\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# relay parent __init__.py files if they exist\n",
        "Line" : 128,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# generate relay-script for each python script\n",
        "Line" : 145,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 13
    },
    "cmake/catkin_symlink_install.cmake" : {
      "ObjectId" : "bc43fedceb29fcd1b74fe418c02fd216427c0074",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2014-2018 Open Source Robotics Foundation, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# register custom install logic\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# create the install script from the template\n\n# catkin/cmake/symlink_install/catkin_symlink_install.cmake.in\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# register script for being executed at install time\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/catkin_workspace.cmake" : {
      "ObjectId" : "d346ff0fde5ec63a17138269468f2f505547b244",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Search all subfolders in the workspace for ``package.xml`` files.\n\n# Based on the dependencies specified in the ``build_depends``,\n\n# ``buildtool_depends`` and (as of package format version 2)\n\n# ``test_depends`` tags it performs a topological sort and calls\n\n# ``add_subdirectory()`` for each directory.\n\n#\n\n# The functions is only called in catkin's ``toplevel.cmake``, which\n\n# is usually symlinked to the workspace root directory (which\n\n# contains multiple packages).\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set global output directories for artifacts and create them if necessary\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# tools/libraries.cmake\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# verify that CMakeLists.txt of metapackage conforms to standard\n",
        "Line" : 58,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# compare CMakeLists.txt with standard content\n",
        "Line" : 65,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 5
    },
    "cmake/custom_install.cmake" : {
      "ObjectId" : "2f365a47a7229abffaa09c10fd4c6d061ab360b3",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# only redefine install function once\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "cmake/debug_message.cmake" : {
      "ObjectId" : "dd15d82eef9cda498ab38af38b052d9aac71d245",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Log levels\n\n# 0 Normal use\n\n# 1 Catkin developer use (Stuff being developed)\n\n# 2 Catkin developer use (Stuff working)\n\n# 3 Also Print True Assert Statements\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/em_expand.cmake" : {
      "ObjectId" : "5eadc7906e2ca2785fc43f326b293414796f051f",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# create directory if necessary\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# since empy contains a specific python version in its shebang line\n\n# override the used python version by invoking it explicitly\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# prepend environment if set\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/empy.cmake" : {
      "ObjectId" : "22b7a0a567a60db197a27d0ac754379437f4c5de",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cribbed from http://www.cmake.org/pipermail/cmake/2011-January/041666.html\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# A module's location is usually a directory, but for\n\n# binary modules\n\n# it's a .so file.\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# On OSX, there's an em.py, but not an executable empy script\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# ensure to use cmake-style path separators on Windows\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# ensure to use cmake-style path separators on Windows\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "cmake/find_program_required.cmake" : {
      "ObjectId" : "4cd3ab0c796bec36c23c16469791b1d71311b721",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/legacy.cmake" : {
      "ObjectId" : "a4c65c2146939c61bac1528070385c2df76a6bf2",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/list_append_deduplicate.cmake" : {
      "ObjectId" : "e59a61bb14eb894bca05acbbbb1c88dd8945cdbe",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Append elements to a list and remove existing duplicates from the list.\n\n#\n\n# .. note:: Using CMake's ``list(APPEND ..)`` and\n\n#   ``list(REMOVE_DUPLICATES ..)`` is not sufficient since its\n\n#   implementation uses a set internally which makes the operation\n\n#   unstable.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/list_append_unique.cmake" : {
      "ObjectId" : "4c9bb1df863a2fa6b3e0f058af09e0ed35783e6e",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Append elements to a list if they are not already in the list.\n\n#\n\n# .. note:: Using CMake's ``list(APPEND ..)`` and\n\n#   ``list(REMOVE_DUPLICATES ..)`` is not sufficient since its\n\n#   implementation uses a set internally which makes the operation\n\n#   unstable.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/list_insert_in_workspace_order.cmake" : {
      "ObjectId" : "7f8c574def0ffe626312a23f49f75ebe289a926b",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Insert elements to a list in the same order as the chained catkin workspaces.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# prepend to existing list of sourcespaces\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/platform/lsb.cmake" : {
      "ObjectId" : "7aca48b5f5a17b488f305c1a39c676c450eb49f2",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#message(STATUS \"${v} is on\")\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#message(STATUS \"${v} is on\")\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/platform/ubuntu.cmake" : {
      "ObjectId" : "38507362703e6e55733bb5ae7f391e5bd5b09442",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# requires lsb to be included first\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ubuntu-specifics go here\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/platform/windows.cmake" : {
      "ObjectId" : "649d3a49a3567a5211bcac8e5b7b52ed459a4a0f",
      "LastModified" : "2019-03-12T19:51:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# BUILD_SHARED_LIBS is a global cmake variable (usually defaults to on) \n\n# that determines the build type of libraries:\n\n#   http://www.cmake.org/cmake/help/cmake-2-8-docs.html#variable:BUILD_SHARED_LIBS\n\n# It defaults to shared.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure this is already defined as a cached variable (@sa tools/libraries.cmake)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Windows/cmake make things difficult if building dll's. \n\n# By default:\n\n#   .dll -> CMAKE_RUNTIME_OUTPUT_DIRECTORY\n\n#   .exe -> CMAKE_RUNTIME_OUTPUT_DIRECTORY\n\n#   .lib -> CMAKE_LIBRARY_OUTPUT_DIRECTORY\n\n#\n\n# Subsequently, .dll's and .exe's use the same variable and by \n\n# default must be installed to the same place. Which is not\n\n# what we want for catkin. We wish:\n\n#\n\n#   .dll -> CATKIN_GLOBAL_BIN_DESTINATION\n\n#   .exe -> CATKIN_PACKAGE_BIN_DESTINATION\n\n#   .lib -> CATKIN_PACKAGE_LIB_DESTINATION\n\n#\n\n# Since we can't put CMAKE_RUNTIME_OUTPUT_DIRECTORY to\n\n# two values at once, we have this ugly workaround here.\n\n#\n\n# Note - we want to move away from redefining\n\n# add_library style calls, but necessary until a better solution\n\n# is available for windows. Alternatives are to set_target_properties\n\n# on every lib (painful) or to make exe's public (name conflicts\n\n# bound to arise).\n\n#\n\n# Another feature that would be desirable, is to install .pdb's for\n\n# debugging along with the library. Can't do that here as we do not\n\n# know for sure if the library target is intended for installation\n\n# or not. Might a good idea to have a script that searches for all\n\n# pdb's under CATKIN_DEVEL_PREFIX and copies them over at the end\n\n# of the cmake build.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check if its an external, imported library (e.g. boost libs via cmake module definition)\n",
        "Line" : 43,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# It is encouraged to follow this guide to enable exports for dll's in a cross-platform way:\n\n#   http://wiki.ros.org/win_ros/Contributing/Dll%20Exports\n\n# however, since not every project has implemented import/export macros, enable CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS as a workaround\n\n#   https://blog.kitware.com/create-dlls-on-windows-without-declspec-using-new-cmake-export-all-feature/\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# For Windows, add definitions to exclude defining common names macros that cause name collision\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# enable Math Constants (https://docs.microsoft.com/en-us/cpp/c-runtime-library/math-constants)\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# do not define STRICT macros (minwindef.h or boost\\winapi\\basic_types.hpp)\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# do not define min/max macros\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# do not define STRICT macros (qtgui\\qwindowdefs_win.h)\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# keep minimum windows headers inclusion\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# explicitly enable C++ to compile wrapper\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# https://blogs.msdn.microsoft.com/vcblog/2018/04/09/msvc-now-correctly-reports-__cplusplus/\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#\n\n# Add Python executable wrapper around Python scripts on Windows.\n\n#\n\n# Python scripts with (or without) .py extension are not executable on Windows\n\n# due to lack of shebang support.\n\n#\n\n# :param SCRIPT_NAME: Python script name that needs a wrapper\n\n# :type SCRIPT_NAME: string\n\n# :param TARGET_NAME: build target name\n\n# :type TARGET_NAME: string\n\n# :param DESTINATION: install destination for the build target\n\n# :type DESTINATION: string\n\n#\n\n# @public\n\n#\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Code courtesy of Yujin Robot.\n\n# Derived from https://github.com/ros-windows/win_ros\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# The actual file name of the executable built on Windows will be ${ARG_SCRIPT_NAME}.exe according to OUTPUT_NAME\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 16
    },
    "cmake/python.cmake" : {
      "ObjectId" : "c72b8599982cdf40fbf29c1949d8d918746dbfb2",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the CMake variable PYTHON_INSTALL_DIR has the same value as the Python function catkin.builder.get_python_install_dir()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use major version only when installing 3.x with debian layout\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# setuptools is fussy about windows paths, make sure the install prefix is in native format\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Windows setuptools installs to lib/site-packages not lib/python2.7/site-packages\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/safe_execute_process.cmake" : {
      "ObjectId" : "bfc247f4b05fcc0b7a5fbd43463586e681ae89ca",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/shell.cmake" : {
      "ObjectId" : "4b150d419eceb694bc866be0a410aa100c293558",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/stamp.cmake" : {
      "ObjectId" : "91de185de5550b82d53d7d353fa212bfd5a8b05a",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#   :param path:  file name\n\n#\n\n#   Uses ``configure_file`` to generate a file ``filepath.stamp`` hidden\n\n#   somewhere in the build tree.  This will cause cmake to rebuild its\n\n#   cache when ``filepath`` is modified.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/string_starts_with.cmake" : {
      "ObjectId" : "85483ec9e7996ae2f0ac9375d3aeaea00a30497b",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check if a string starts with a prefix.\n\n#\n\n# :param str: the string\n\n# :type str: string\n\n# :param prefix: the prefix\n\n# :type prefix: string\n\n# :param var: the output variable name\n\n# :type var: bool\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/symlink_install/catkin_install_logic.cmake" : {
      "ObjectId" : "9b76b40ee63d7cf540302143b2165d9e004d1d20",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2014-2018 Open Source Robotics Foundation, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Custom CMake install logic to use symlinks instead of copying resources.\n\n#\n\n# :param ARGN: the same arguments as the CMake install command.\n\n# :type ARGN: various\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# fall back to CMake install() command\n\n# if the arguments haven't been handled before\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/symlink_install/catkin_symlink_install_append_install_code.cmake" : {
      "ObjectId" : "e62fc88a9dafb833ae59c93b1f77f5e42427ab91",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2014 Open Source Robotics Foundation, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Register a CMake script for execution at install time.\n\n#\n\n# :param ARGN: the list of CMake code lines\n\n# :type ARGN: list of strings\n\n# :param COMMENTS: an optional list of comments\n\n# :type COMMENTS: list of strings\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# append code to install script\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/symlink_install/catkin_symlink_install_directory.cmake" : {
      "ObjectId" : "860821fe7f5a01f3178fcd144a8a45c513518038",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2014 Open Source Robotics Foundation, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Reimplement CMake install(DIRECTORY) command to use symlinks instead of\n\n# copying resources.\n\n#\n\n# :param ARGN: the same arguments as the CMake install command.\n\n# :type ARGN: various\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# fall back to CMake install() command\n\n# if the arguments can't be handled\n",
        "Line" : 41,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# merge 'PATTERN \"xxx\" EXCLUDE' arguments to 'PATTERN_EXCLUDE \"xxx\"'\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# replace \"PATTERN\" with \"PATTERN_EXCLUDE\"\n",
        "Line" : 60,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# remove \"EXCLUDE\"\n",
        "Line" : 63,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# get changed length\n",
        "Line" : 65,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 7
    },
    "cmake/symlink_install/catkin_symlink_install_files.cmake" : {
      "ObjectId" : "dbda572413b65004980dfbf030eff0f532830d32",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2014 Open Source Robotics Foundation, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Reimplement CMake install(FILES) command to use symlinks instead of copying\n\n# resources.\n\n#\n\n# :param ARGN: the same arguments as the CMake install command.\n\n# :type ARGN: various\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# fall back to CMake install() command\n\n# if the arguments can't be handled\n",
        "Line" : 36,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "cmake/symlink_install/catkin_symlink_install_programs.cmake" : {
      "ObjectId" : "24f6089e4d7c569e0ec318223c601d68c4365cda",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2014 Open Source Robotics Foundation, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Reimplement CMake install(PROGRAMS) command to use symlinks instead of copying\n\n# resources.\n\n#\n\n# :param ARGN: the same arguments as the CMake install command.\n\n# :type ARGN: various\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# fall back to CMake install() command\n\n# if the arguments can't be handled\n",
        "Line" : 37,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "cmake/symlink_install/catkin_symlink_install_targets.cmake" : {
      "ObjectId" : "ceab8bf98f227dfd8c12ee25cbf697105575ef35",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2014-2015 Open Source Robotics Foundation, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Reimplement CMake install(TARGETS) command to use symlinks instead of copying\n\n# resources.\n\n#\n\n# :param ARGN: the same arguments as the CMake install command.\n\n# :type ARGN: various\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# fall back to CMake install() command\n\n# if the arguments can't be handled\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# convert target names into absolute files\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# join destination keyword with kind of target (e.g. ARCHIVE)\n\n# to simplify parsing in the next CMake function\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# generate unique files\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "cmake/symlink_install/install.cmake" : {
      "ObjectId" : "c39d2e6687d79b7a6ba901eff2cff13ed6b4fcc8",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# trigger the custom install logic\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/test/catkin_download_test_data.cmake" : {
      "ObjectId" : "b71e31b915e7150da570e05cd66cecfd731a4b26",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Download a file containing test data from a URL.\n\n#\n\n# It is commonly used to download larger data files for unit tests\n\n# which should not be stored in the repository.\n\n#\n\n# .. note:: It is not recommended to rely on downloaded data during\n\n#   a configure / make cycle since this prevents building the package\n\n#   when no network connectivity is available.\n\n#\n\n# .. note:: The target will be registered as a dependency\n\n#   of the \"tests\" and \"download_extra_data\" targets, but not of \"all\" target.\n\n#\n\n# .. note:: If the tests should be run on the ROS buildfarm the URL\n\n#   must be publically and reliably accessible.\n\n#\n\n# :param target: the target name\n\n# :type target: string\n\n# :param url: the url to download\n\n# :type url: string\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# :param DESTINATION: the directory where the file is downloaded to\n\n#   (default: ${PROJECT_BINARY_DIR})\n\n# :type DESTINATION: string\n\n# :param FILENAME: the filename of the downloaded file\n\n#   (default: the basename of the url)\n\n# :type FILENAME: string\n\n# :param MD5: the expected md5 hash to compare against\n\n#   (default: empty, skipping the check)\n\n# :type MD5: string\n\n#\n\n# Additionally, option REQUIRED can be specified.\n\n#\n\n# @public\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/test/gtest.cmake" : {
      "ObjectId" : "430d7fb776164720788414879f499d9506b1ff1b",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Add a GTest based test target.\n\n#\n\n# An executable target is created with the source files, it is linked\n\n# against GTest and added to the set of unit tests.\n\n#\n\n# .. note:: The test can be executed by calling the binary directly\n\n#   or using: ``make run_tests_${PROJECT_NAME}_gtest_${target}``\n\n#\n\n# :param target: the target name\n\n# :type target: string\n\n# :param source_files: a list of source files used to build the test\n\n#   executable\n\n# :type source_files: list of strings\n\n# :param TIMEOUT: currently not supported\n\n# :type TIMEOUT: integer\n\n# :param WORKING_DIRECTORY: the working directory when executing the\n\n#   executable\n\n# :type WORKING_DIRECTORY: string\n\n#\n\n# @public\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Add a GMock based test target.\n\n#\n\n# An executable target is created with the source files, it is linked\n\n# against GTest and GMock and added to the set of unit tests.\n\n#\n\n# .. note:: The test can be executed by calling the binary directly\n\n#   or using: ``make run_tests_${PROJECT_NAME}_gtest_${target}``\n\n#\n\n# :param target: the target name\n\n# :type target: string\n\n# :param source_files: a list of source files used to build the test\n\n#   executable\n\n# :type source_files: list of strings\n\n# :param TIMEOUT: currently not supported\n\n# :type TIMEOUT: integer\n\n# :param WORKING_DIRECTORY: the working directory when executing the\n\n#   executable\n\n# :type WORKING_DIRECTORY: string\n\n#\n\n# @public\n\n#\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# This is an internal function, use catkin_add_gtest or catkin_add_gmock\n\n# instead.\n\n#\n\n# :param type: \"gtest\" or \"gmock\"\n\n#\n\n# The remaining arguments are the same as for catkin_add_gtest and\n\n# catkin_add_gmock.\n\n#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# XXX look for optional TIMEOUT argument, #2645\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# make sure the target is built before running tests\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# XXX we DONT use rosunit to call the executable to get process control, #1629, #3112\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#\n\n# Add a GTest executable target.\n\n#\n\n# An executable target is created with the source files, it is linked\n\n# against GTest.\n\n# If you also want to register the executable as a test use\n\n# ``catkin_add_gtest()`` instead.\n\n#\n\n# :param target: the target name\n\n# :type target: string\n\n# :param source_files: a list of source files used to build the test\n\n#   executable\n\n# :type source_files: list of strings\n\n#\n\n# Additionally, the option EXCLUDE_FROM_ALL can be specified.\n\n# @public\n\n#\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Add a GMock executable target.\n\n#\n\n# An executable target is created with the source files, it is linked\n\n# against GTest and GMock.\n\n# If you also want to register the executable as a test use\n\n# ``catkin_add_gtest()`` instead.\n\n#\n\n# :param target: the target name\n\n# :type target: string\n\n# :param source_files: a list of source files used to build the test\n\n#   executable\n\n# :type source_files: list of strings\n\n#\n\n# Additionally, the option EXCLUDE_FROM_ALL can be specified.\n\n# @public\n\n#\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# This is an internal function, use catkin_add_executable_with_gtest\n\n# or catkin_add_executable_with_gmock instead.\n\n#\n\n# :param type: \"gtest\" or \"gmock\"\n\n#\n\n# The remaining arguments are the same as for\n\n# catkin_add_executable_with_gtest and\n\n# catkin_add_executable_with_gmock.\n\n#\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# gmock requires gtest headers and libraries\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# create the executable, with basic + gtest/gmock build flags\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Internal function for finding gtest or gmock sources\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Find the gtest headers\n",
        "Line" : 183,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Find the gtest sources\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# If we found gtest, set the variables accordingly\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Find Google Test (GTest and optionally GMock) source-only install.\n\n#\n\n# Google recommends distributing GTest and GMock as source only, to be built with the same\n\n# flags as that which is being tested.\n\n#\n\n# :param[in] include_path: Path to search for Google Test includes\n\n# :param[in] src_path: Path to search for Google Test sources\n\n# :param[out] gtest_found: Whether or not GTest was found in the paths provided\n\n# :param[out] gtest_include_dir: The include path to access GTest's headers\n\n# :param[out] gtest_lib_dir: The library path to access GTest's libraries\n\n# :param[out] gtest_libs: GTest's libraries\n\n# :param[out] gtest_main_libs: GTest's main libraries\n\n# :param[out] gmock_found: Whether or not GMock was found in the paths provided\n\n# :param[out] gmock_include_dir: The include path to access GMock's headers\n\n# :param[out] gmock_lib_dir: The library path to access GMock's libraries\n\n# :param[out] gmock_libs: GMock's libraries\n\n# :param[out] gmock_main_libs: GMock's main libraries\n\n# :param[out] base_dir: The base directory containing Google Test and/or GMock CMakeLists.txt\n\n#\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#Find GTest\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Ensure current workspace is searched before system path\n",
        "Line" : 238,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#Find GMock\n",
        "Line" : 255,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Ensure current workspace is searched before system path\n",
        "Line" : 259,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#Overwrite gtest base_dir with gmock's\n",
        "Line" : 276,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#In googletest 1.8, gmock and gtest where merged inside googletest\n\n#In this case, including gmock builds gmock twice, so instead we need to include googletest\n\n#which will include gtest and gmock once\n",
        "Line" : 280,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# only add gmock/gtest directory once per workspace\n",
        "Line" : 293,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Fall back to system-installed gmock source (e.g. Ubuntu)\n",
        "Line" : 295,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "# overwrite CMake install command to skip install rules for gtest targets\n\n# which have been added in version 1.8.0\n",
        "Line" : 318,
        "CharPositionInLine" : 10
      },
      "25" : {
        "Text" : "# set the same variables as find_package()\n\n# do NOT set in the cache since when using gmock/gtest from source\n\n# we must always add the subdirectory to have their targets defined\n",
        "Line" : 342,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# set the same variables as find_package()\n\n# do NOT set in the cache since when using gtest from source\n\n# we must always add the subdirectory to have their targets defined\n",
        "Line" : 354,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# For Visual C++, need to increase variadic template size to build gtest\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "cmake/test/nosetests.cmake" : {
      "ObjectId" : "51d375384d69daa81214c4e1a6e6411a2dfd4fcd",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Add Python nose tests.\n\n#\n\n# Nose collects tests from the directory ``dir`` automatically.\n\n#\n\n# .. note:: The test can be executed by calling ``nosetests``\n\n#   directly or using:\n\n#   `` make run_tests_${PROJECT_NAME}_nosetests_${dir}``\n\n#   (where slashes in the ``dir`` are replaced with periods)\n\n#\n\n# :param path: a relative or absolute directory to search for\n\n#   nosetests in or a relative or absolute file containing tests\n\n# :type path: string\n\n# :param DEPENDENCIES: the targets which must be built before executing\n\n#   the test\n\n# :type DEPENDENCIES: list of strings\n\n# :param TIMEOUT: the timeout for individual tests in seconds\n\n#   (default: 60)\n\n# :type TIMEOUT: integer\n\n# :param WORKING_DIRECTORY: the working directory when executing the\n\n#   tests (this option can only be used when the ``path`` argument is a\n\n#   file  but not when it is a directory)\n\n# :type WORKING_DIRECTORY: string\n\n#\n\n# @public\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check that the directory exists\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# check if coverage reports are being requested\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# strip PROJECT_SOURCE_DIR and PROJECT_BINARY_DIR prefix from output_file_name\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# make --xunit-file argument an absolute path (https://github.com/nose-devs/nose/issues/779)\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# passing length -1 does not work for CMake < 2.8.5\n\n# http://public.kitware.com/Bug/view.php?id=10740\n",
        "Line" : 112,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 6
    },
    "cmake/test/tests.cmake" : {
      "ObjectId" : "a0f6b0c594515cbd5c4a97bb1650b3efff8e9573",
      "LastModified" : "2019-03-12T19:51:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# check if testing is explicity skipped\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# creates dummy functions in case testing has been explicitly disabled (and not only skipping)\n\n# which outputs an error message when being invoked\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# checks if a function has been called while testing is skipped\n\n# and outputs a warning message\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# do not enable ctest's on the farm, since they are automatically executed by the current rules files\n\n# and since the tests have not been build rostests would hang forever\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# do not enable ctest's for dry packages, since they have a custom test target which must not be overwritten\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# configure CTest not to truncate the dashboard summary\n",
        "Line" : 53,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# create dart configuration from template\n",
        "Line" : 57,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# allow overriding CATKIN_TEST_RESULTS_DIR when explicitly passed to CMake as a command line argument\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# create target to build tests\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# create target to run all tests\n\n# it uses the dot-prefixed test targets to depend on building all tests and cleaning test results before the tests are executed\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# create target to clean all test results\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# Create a test target, integrate it with the run_tests infrastructure\n\n# and post-process the junit result.\n\n#\n\n# All test results go under ${CATKIN_TEST_RESULTS_DIR}/${PROJECT_NAME}\n\n#\n\n# This function is only used internally by the various\n\n# catkin_add_*test() functions.\n\n#\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Friendly error message for ros/catkin#961\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# create meta target to trigger all tests of a project\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# create hidden meta target which depends on hidden test targets which depend on clean_test_results\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# run_tests depends on this hidden target hierarchy to clear test results before running all tests\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# create meta target to trigger all tests of a specific type of a project\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# hidden meta target which depends on hidden test targets which depend on clean_test_results\n",
        "Line" : 128,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# create target for test execution\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# for ctest the command needs to return non-zero if any test failed\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# for the run_tests target the command needs to return zero so that testing is not aborted\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# create empty dummy target\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# hidden test target which depends on building all tests and cleaning test results\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# create target to clean project specific test results\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 24
    },
    "cmake/tools/bz2.cmake" : {
      "ObjectId" : "d5f129d2a3ccc47cd18406e5c536e7ad45c9e572",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2011, Willow Garage, Inc.\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of the Willow Garage, Inc. nor the names of its\n\n#       contributors may be used to endorse or promote products derived from\n\n#       this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/tools/doxygen.cmake" : {
      "ObjectId" : "28dc9a18dad3e75f5b3d0066df4a2708b33fa694",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2011, Willow Garage, Inc.\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of the Willow Garage, Inc. nor the names of its\n\n#       contributors may be used to endorse or promote products derived from\n\n#       this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n\n# doxygen(<TARGET_NAME> <SEARCH_DIRS>)\n\n# TARGET_NAME -> The cmake target to create.\n\n# SEARCH_DIRS -> a CMake List of directories to search for doxygenated files.\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/tools/libraries.cmake" : {
      "ObjectId" : "77e38d680eba494a5a1c819c9408084fd09403e1",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# BUILD_SHARED_LIBS is a global cmake variable (usually defaults to on) \n\n# that determines the build type of libraries:\n\n#   http://www.cmake.org/cmake/help/cmake-2-8-docs.html#variable:BUILD_SHARED_LIBS\n\n# It defaults to shared.\n\n#\n\n# Our only current major use case for static libraries is\n\n# via the mingw cross compiler, though embedded builds\n\n# could be feasibly built this way also (largely untested).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure this is already defined as a cached variable (@sa platform/windows.cmake)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/tools/rt.cmake" : {
      "ObjectId" : "3e5b708d8f5d577e2ad20688f5aaaaa13722f49f",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2011, Willow Garage, Inc.\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of the Willow Garage, Inc. nor the names of its\n\n#       contributors may be used to endorse or promote products derived from\n\n#       this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# message(\"CMAKE_LIBRARY_PATH: ${CMAKE_LIBRARY_PATH}\")\n\n# message(\"CMAKE_LIBRARY_ARCHITECTURE: ${CMAKE_LIBRARY_ARCHITECTURE}\")\n\n# message(\"CMAKE_SYSTEM_LIBRARY_PATH: ${CMAKE_SYSTEM_LIBRARY_PATH}\")\n\n# message(\"CMAKE_VERSION=${CMAKE_VERSION}\")\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# cmake later than 2.8.0 appears to have a better find_library\n\n# that knows about the ABI of the compiler.  For lucid we just\n\n# depend on the linker to find it for us.\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(STATUS \"RT_LIBRARY: ${RT_LIBRARY}\")\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/tools/threads.cmake" : {
      "ObjectId" : "8087ad6fa11641b4de25039e4acf88a3b7f2689e",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2011, Willow Garage, Inc.\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of the Willow Garage, Inc. nor the names of its\n\n#       contributors may be used to endorse or promote products derived from\n\n#       this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/toplevel.cmake" : {
      "ObjectId" : "b1cf04c4d2fe0fbd4158fc37cb92986aa4c5110e",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# toplevel CMakeLists.txt for a catkin workspace\n\n# catkin/cmake/toplevel.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# search for catkin within the workspace\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# searching fot catkin resulted in an error\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# include catkin from workspace or via find_package()\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# include all.cmake without add_subdirectory to let it operate in same scope\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# use either CMAKE_PREFIX_PATH explicitly passed to CMake as a command line argument\n\n# or CMAKE_PREFIX_PATH from the environment\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# list of catkin workspaces\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# search for catkin in all workspaces\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "doc/Makefile" : {
      "ObjectId" : "4e47768704e86f143751dd3fde2bb4c6f64e737a",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set write permission for group so that everybody can overwrite existing files on the webserver\n",
        "Line" : 137,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# set sticky-bit for group on folders so that the group \"www\" is kept when overwriting existing files on the webserver\n",
        "Line" : 139,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#scp -pr $(BUILDDIR)/html/ wgs32.willowgarage.com:/var/www/www.ros.org/html/doc/api/catkin\n\n#scp -pr $(BUILDDIR)/html/ wgs32.willowgarage.com:/var/www/www.ros.org/html/doc/fuerte/api/catkin\n",
        "Line" : 141,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 6
    },
    "test/mock_resources/src-fail/badly_specified_changelog/CMakeLists.txt" : {
      "ObjectId" : "0706f0fe2c77edad77e61e14adfd4ff7232fd2ff",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/mock_resources/src-fail/noproject/CMakeLists.txt" : {
      "ObjectId" : "91917431de2e9a626953ed56b0e301a3e62fb80f",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# commented to cause failure\n\n# project(noproject)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/mock_resources/src/catkin_test/CMakeLists.txt" : {
      "ObjectId" : "c6d991570de96ac5b8f43f8e402cf0f436efaea3",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/mock_resources/src/catkin_test/a/CMakeLists.txt" : {
      "ObjectId" : "289a2087fa4a6f6ffa063de81938a4163fed6a36",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/mock_resources/src/catkin_test/b/CMakeLists.txt" : {
      "ObjectId" : "c7b0416ae0cbfd164f9d264ef53f51e41959715b",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# catkin_python_setup()\n\n# enable_python(b)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# generate_messages(DEPENDENCIES std_msgs)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/mock_resources/src/catkin_test/c/CMakeLists.txt" : {
      "ObjectId" : "a25ef9c52f71b76167c8acbf6bf5894bff71ade4",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# catkin_python_setup()\n\n# enable_python(c)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# generate_messages(DEPENDENCIES std_msgs a)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/mock_resources/src/catkin_test/d/CMakeLists.txt" : {
      "ObjectId" : "699f024c0849094605d404b6dbe59113f96a701c",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# catkin_python_setup()\n\n# enable_python(d)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# generate_messages(DEPENDENCIES std_msgs b c a)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/mock_resources/src/catkin_test/quux_msgs/CMakeLists.txt" : {
      "ObjectId" : "82bce27f9fa785fbe8b5f1c4d159c2cc99bc92c1",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/mock_resources/src/catkin_test/quux_user/CMakeLists.txt" : {
      "ObjectId" : "51bf2b7869dee39a42f7fb42b0a3c428d55e4e7b",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/mock_resources/src/nolangs/CMakeLists.txt" : {
      "ObjectId" : "678f7a9275779bf70107e76613634147dcdb0e39",
      "LastModified" : "2019-01-29T17:28:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 60,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 2702
}