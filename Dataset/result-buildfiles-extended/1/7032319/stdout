{
  "Repository" : "7032319",
  "Revision" : "HEAD",
  "ObjectId" : "2f48d597821e1f278fb7f27c5c0ed97a8613400b",
  "CommitTime" : "2017-12-15T10:26:10Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "355e877cc782ae17e81f60a6ad82ac1ae4a14ed3",
      "LastModified" : "2017-11-27T11:45:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake 3.4\n\n# CMake 3.10\n",
        "Line" : 4,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "# Generate folders for IDE targets (e.g., VisualStudio solutions)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This doesn't seem to have an effect: RelNoOptimization is still linked to Debug VTK libraries.\n\n# If there is a property way to set this, remove VTK target property hacks in FindThirdParties.cmake\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if generatorIsMultiConfig is not detected, CMAKE_CONFIGURATION_TYPES must not be set!\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# project() sets CMAKE_CONFIGURATION_TYPES only for multi-configuration generators.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# reject invalid build types to prevent unexpected build behavior\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Initialize CMAKE_BUILD_TYPE or CMAKE_CONFIGURATION_TYPES depending on current generator type\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Cleanup\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# PLATFORM AND ARCHITECTURE\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Architecture (32/64 bit)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Debug build, assert enabled: Debug, RelNoOptimization\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# optimized builds\n",
        "Line" : 127,
        "CharPositionInLine" : 41
      },
      "12" : {
        "Text" : "# Setup platform specifics (compile flags, etc., ...)\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# Deployment/installation setup\n\n#\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C:\\Programme\\<project>\n",
        "Line" : 161,
        "CharPositionInLine" : 48
      },
      "15" : {
        "Text" : "# C:\\Programme\\<project>\n",
        "Line" : 162,
        "CharPositionInLine" : 49
      },
      "16" : {
        "Text" : "# C:\\Programme\\<project>\n",
        "Line" : 163,
        "CharPositionInLine" : 46
      },
      "17" : {
        "Text" : "# C:\\Programme\\<project>\n\n# C:\\Programme\\<project>\\lib\n\n# C:\\Programme\\<project>\\include\n\n# C:\\Programme\\<project>\\doc\n\n# Not available under Windows\n\n# Not available under Windows\n\n# Not available under Windows\n",
        "Line" : 164,
        "CharPositionInLine" : 48
      },
      "18" : {
        "Text" : "#     set(INSTALL_ROOT \"share/${META_PROJECT_NAME}\")        # /usr/[local]/share/<project>\n\n#     set(INSTALL_DATA \"share/${META_PROJECT_NAME}\")        # /usr/[local]/share/<project>\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# /usr/[local]/bin\n\n# /usr/[local]/lib\n\n# /usr/[local]/lib\n\n# /usr/[local]/include\n",
        "Line" : 183,
        "CharPositionInLine" : 48
      },
      "20" : {
        "Text" : "# /usr/[local]/share/doc/<project>\n",
        "Line" : 187,
        "CharPositionInLine" : 58
      },
      "21" : {
        "Text" : "# /usr/[local]/share/applications\n\n# /usr/[local]/share/pixmaps\n\n# /etc/init (upstart init scripts)\n",
        "Line" : 188,
        "CharPositionInLine" : 48
      },
      "22" : {
        "Text" : "# Prefer using libraries in ./lib/ folder when installed.\n\n# (see https://cmake.org/Wiki/CMake_RPATH_handling)\n",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 201,
        "CharPositionInLine" : 36
      },
      "24" : {
        "Text" : "# when building, don't use the install RPATH already (but later on when installing)\n",
        "Line" : 202,
        "CharPositionInLine" : 44
      },
      "25" : {
        "Text" : "# Install the project meta files\n\n#install(FILES geohazardvis-config.cmake DESTINATION ${INSTALL_ROOT})\n\n#install(FILES AUTHORS DESTINATION               ${INSTALL_ROOT})\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Get git revision\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Write git information for this project\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Plugins that require additional third party libraries may add their required runtime paths\n\n# using the addPluginRuntimPathEntries function.\n\n# Executable targets depend on that, to find required DLLs at runtime\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "app/CMakeLists.txt" : {
      "ObjectId" : "e8af0474621000dff0e07e590b6614727b3b1198",
      "LastModified" : "2017-03-27T09:17:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   LIBRARY DESTINATION ${INSTALL_SHARED}\n\n#   ARCHIVE DESTINATION ${INSTALL_LIB}\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/CppCheckTargets.cmake" : {
      "ObjectId" : "5dde902170e680aa7c8a152b84305e411e9508c7",
      "LastModified" : "2017-04-26T16:42:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# https://blog.kitware.com/how-many-ya-got/\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Linux:\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Mac:\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Windows:\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# \"cppcheck --version\" -> \"Cppcheck x.y.z\"\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# https://arcanis.me/en/2015/10/17/cppcheck-and-clang-format/\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --check-config\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "cmake/Custom.cmake" : {
      "ObjectId" : "1d59ac1ab9fe97fb63725a88b0c90fcaa5368213",
      "LastModified" : "2017-04-26T16:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include not required in CMake 3.5+\n",
        "Line" : 4,
        "CharPositionInLine" : 32
      },
      "1" : {
        "Text" : "# MSVC flags not properly handled by target_link_libraries, fall-back to legacy is required\n",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# TODO replace by generator expressions, once requiring CMake 3.4\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Define function \"source_group_by_path with three mandatory arguments (PARENT_PATH, REGEX, GROUP, ...)\n\n# to group source files in folders (e.g. for MSVC solutions).\n\n#\n\n# Example:\n\n# source_group_by_path(\"${CMAKE_CURRENT_SOURCE_DIR}/src\" \"\\\\\\\\.h$|\\\\\\\\.hpp$|\\\\\\\\.cpp$|\\\\\\\\.c$|\\\\\\\\.ui$|\\\\\\\\.qrc$\" \"Source Files\" ${sources})\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# see also: CMakeDependentOption.cmake\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# create if does not exist\n",
        "Line" : 155,
        "CharPositionInLine" : 55
      },
      "6" : {
        "Text" : "# force to non-internal\n",
        "Line" : 156,
        "CharPositionInLine" : 63
      },
      "CommentCount" : 7
    },
    "cmake/DeploySystemLibraries.cmake" : {
      "ObjectId" : "a2b41bf93fa3bf737dc446d23c57b339b7389902",
      "LastModified" : "2017-12-08T14:36:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fix OpenMP debug runtime deployment not directly supported by InstallRequiredSystemLibraries\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# MSVC 12 2013\n",
        "Line" : 27,
        "CharPositionInLine" : 48
      },
      "2" : {
        "Text" : "# MSVC 14 2015\n",
        "Line" : 29,
        "CharPositionInLine" : 48
      },
      "3" : {
        "Text" : "# MSVC 15 2017 (same runtime as MSVC 2015)\n",
        "Line" : 30,
        "CharPositionInLine" : 52
      },
      "4" : {
        "Text" : "# just a random assumption...\n",
        "Line" : 31,
        "CharPositionInLine" : 57
      },
      "5" : {
        "Text" : "# Compile a simple C++ test program to locate third party libraries and determine their linked names.\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Extract library locations\n\n# generate something like: \"lib(stdc\\\\+\\\\+|foo|bar)\\\\.so\"\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# including empty line at the end of the list\n",
        "Line" : 120,
        "CharPositionInLine" : 66
      },
      "8" : {
        "Text" : "# resolve symlinks\n",
        "Line" : 132,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 9
    },
    "cmake/ExternalProjectMapBuild.cmake" : {
      "ObjectId" : "3d44ecb3e95def9f5ee50db62fcd54d9d8cb8727",
      "LastModified" : "2016-06-23T14:09:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ExternalProjectMapBuild\n\n#\n\n# Map project's (custom) build configurations to ones that are available third party packages.\n\n# For simplicity, use Release for all non-\"Debug\" builds.\n\n#\n\n# https://cmake.org/pipermail/cmake/2011-July/045274.html\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindGMOCK.cmake" : {
      "ObjectId" : "aa3623bd53357d0776981ca6337bda47fe3ab8e7",
      "LastModified" : "2016-06-23T14:09:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GMOCK_FOUND\n\n# GMOCK_INCLUDE_DIR\n\n# GMOCK_LIBRARIES\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindGTEST.cmake" : {
      "ObjectId" : "0b1390b281710ef7e55a3e3a0d97bd5de71e244c",
      "LastModified" : "2016-06-23T14:09:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GTEST_FOUND\n\n# GTEST_INCLUDE_DIR\n\n# GTEST_LIBRARIES\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindThirdParties.cmake" : {
      "ObjectId" : "88013aa06298ee5c3ac87d6b362126e2df475656",
      "LastModified" : "2017-12-08T15:44:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindThirdParties.cmake\n\n#\n\n# This module finds required third party packages.\n\n# Include it in the top CMakeLists.txt file of the project to include third party variables in the\n\n# project scope!\n\n#\n\n# Module Dependencies:\n\n#   * ExternalProjectMapBuild.cmake\n\n#   * GetGitRevisionDescription.cmake\n\n#   * GitDate.cmake\n\n#\n\n#\n\n# Handled external dependencies:\n\n#   * VTK    -> VTK_DEFINITIONS, VTK_LIBRARIES, VTK_INCLUDE_DIRS, (and some detailed options such\n\n#               as VTK_RENDERING_BACKEND)\n\n#   * Qt5    -> Qt5::* imported targets, PROJECT_QT_COMPONENTS\n\n#   * proj.4 -> PROJ4_INCLUDE_FILE links the a generated include file that include proj.4.\n\n#               By default, the proj.4 version packaged with VTK is used.\n\n#               If OPTION_USE_PROJ4_FROM_VTK is disabled, PROJ4_FOUND, PROJ4_INCLUDE_DIR and\n\n#               PROJ4_LIBRARIES will be defined.\n\n#\n\n#\n\n# Packages either handled as ExternalProject (default) or by find_package\n\n#   OPTION_USE_SYSTEM_*     - ON: find_package(*), OFF: build as external project\n\n#   OPTION_*_GIT_REPOSITORY - if OPTION_USE_SYSTEM_* is OFF: adjust the source git folder or URL\n\n#                             for the package\n\n#\n\n#   * libzeug   -> LIBZEUG_INCLUDES, LIBZEUG_LIBRARIES\n\n#\n\n#   Only relevant if tests are enabled (OPTION_BUILD_TESTS):\n\n#   * gtest     -> GTEST_FOUND GTEST_INCLUDE_DIR GTEST_LIBRARIES\n\n#\n\n#\n\n# Third party packaging: OPTION_INSTALL_3RDPARTY_BINARIES\n\n#   Enable this option (default) to include third party runtime libraries packages and\n\n#   installations. This requires CMake scripts that are partly quite specific for the each\n\n#   package/OS, so please double check if the package actually runs on the relevant platform.\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# helper functions\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Read git revision and date.\n\n# This only works if BUILD_DIR refers to the build directory, not an installed version of package\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# cached\n",
        "Line" : 61,
        "CharPositionInLine" : 56
      },
      "4" : {
        "Text" : "# need to read again\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#========= VTK =========\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# vtkCubeAxesActor, vtkScalarBarActor\n",
        "Line" : 119,
        "CharPositionInLine" : 28
      },
      "7" : {
        "Text" : "# QVTKOpenGLWidget\n",
        "Line" : 124,
        "CharPositionInLine" : 54
      },
      "8" : {
        "Text" : "# QVTKWidget2\n",
        "Line" : 126,
        "CharPositionInLine" : 54
      },
      "9" : {
        "Text" : "# replaced by explicit calls on the relevant targets (http://www.kitware.com/source/home/post/116)\n\n#include(${VTK_USE_FILE})\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# OpenGL backend dependent modules\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# configuration dependent VTK components\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Use better font rending/unicode support if available\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#== proj.4 == (prefer VTK's bundled proj.4)\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# NOTE: PROJ4_INCLUDE_FILE should be added to the core library.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# find additional VTK components\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# When using VTK kits, the provided library names are just interfaces to underlaying targets\n\n# Restore actual library target to get properties from them.\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# RelNoOptimization erroneously links to Debug by default.\n\n# Fix this by setting RelNoOptimization properties (redirecting to RelWithDebInfo)\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Read VTK git revision and date.\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Some components of ParaView are used\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#========= Qt5 =========\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# required for platform plugin deployment\n",
        "Line" : 300,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#========= libzeug =========\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#========= Third Party Deployment =========\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# For libraries built within VTK just their names are listed. Thus, absolute library\n\n# paths refer to system libraries that VTK libraries are linked to.\n\n# See VTK_USE_SYSTEM_ZLIB, etc.\n",
        "Line" : 402,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "# VTK CMake configuration might be use symlinks, but we need to install the actual files.\n",
        "Line" : 406,
        "CharPositionInLine" : 16
      },
      "26" : {
        "Text" : "# HACK: VTK links to libraries names such as libz.so.1, so we must truncate minor\n\n# version numbers, such as in libz.so.1.2.11\n\n# TODO: would be better to detect the real link names using ldd or whatever.\n",
        "Line" : 420,
        "CharPositionInLine" : 16
      },
      "27" : {
        "Text" : "# Windows: VTK build tree contains separated folders for each configuration\n",
        "Line" : 430,
        "CharPositionInLine" : 12
      },
      "28" : {
        "Text" : "# Linux: configuration type of installed VTK must be the same as the deployment configuration for this project.\n\n# We have to rely on this correct setup here.\n",
        "Line" : 435,
        "CharPositionInLine" : 12
      },
      "29" : {
        "Text" : "#========= GTest =========\n",
        "Line" : 479,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# For features deprecated in VS2017 v15.5\n",
        "Line" : 513,
        "CharPositionInLine" : 56
      },
      "31" : {
        "Text" : "# without setting this explicitly the test/mock subproject don't install correctly\n",
        "Line" : 534,
        "CharPositionInLine" : 16
      },
      "32" : {
        "Text" : "# Further third party licenses to deploy\n",
        "Line" : 549,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "cmake/GenerateBinaryVersionResource.cmake" : {
      "ObjectId" : "afdad78d538ee05efcc7b01084bebbcf2439ca99",
      "LastModified" : "2017-04-26T16:42:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "cb7bff19f35b2775c184d485523ee1a0fe05a808",
      "LastModified" : "2017-04-26T16:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar>; <hashvar>; [<additional arguments to git describe>; ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var>; [<additional arguments to git describe&gt; ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found\n",
        "Line" : 50,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# common case\n",
        "Line" : 57,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# submodule case\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#   (ARGN MATCHES \"||\") OR\n\n#   (ARGN MATCHES \"\\\\;\"))\n\n#   message(\"Please report the following error to the project!\")\n\n#   message(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "cmake/GitDate.cmake" : {
      "ObjectId" : "f2cea180440444bc1794100773f13a4a7d7fb8d4",
      "LastModified" : "2017-04-26T16:42:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/PlatformLinuxClang.cmake" : {
      "ObjectId" : "b095539c0440a36b5f701d18843306195fe4e030",
      "LastModified" : "2017-04-26T16:42:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Linux system\n\n# Position-independent code\n\n# Reentrant code\n",
        "Line" : 5,
        "CharPositionInLine" : 30
      },
      "1" : {
        "Text" : "# use position independent code\n\n# http://blog.quarkslab.com/clang-hardening-cheat-sheet.html\n\n# (-pie dropped in version 3.8?)\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# http://clang.llvm.org/docs/ControlFlowIntegrity.html\n\n# LTO (required for CFI is currently broken in Ubuntu packaged clang)\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#     -fsanitize=cfi\n\n#     -flto\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# colors in output of ninja builds\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Disable warnings caused by VTK headers\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# VERSION_GREATER_EQUAL available in CMake 3.7\n",
        "Line" : 57,
        "CharPositionInLine" : 54
      },
      "7" : {
        "Text" : "# read-only relocations...\n\n# ... and immediate binding (symbols resolved at load time)\n",
        "Line" : 70,
        "CharPositionInLine" : 20
      },
      "8" : {
        "Text" : "# set(DEFAULT_LINKER_FLAGS ${DEFAULT_LINKER_FLAGS} -flto) # currently broken, at least on Ubuntu\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/PlatformLinuxGCC.cmake" : {
      "ObjectId" : "222efe5c30300cc45fae10c053ce1bff6cf41c51",
      "LastModified" : "2017-11-27T11:45:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Linux system\n",
        "Line" : 13,
        "CharPositionInLine" : 30
      },
      "1" : {
        "Text" : "# -> use pthread library\n\n# ->\n\n# ->\n",
        "Line" : 19,
        "CharPositionInLine" : 20
      },
      "2" : {
        "Text" : "# -Wconversion\n\n# -Wfloat-equal\n\n# -Wshadow\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# -> missing returns in functions and methods\n\n# -> Undefined behavior: https://stackoverflow.com/a/12861635\n",
        "Line" : 28,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 4
    },
    "cmake/PlatformWindowsMSVC.cmake" : {
      "ObjectId" : "255861c992ebdfebb5f9a1e79ad7d7b59efffe06",
      "LastModified" : "2017-06-12T18:04:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Windows system\n\n# Use unicode\n\n# Use unicode\n\n# Calling any one of the potentially unsafe methods in the Standard C++ Library\n\n# Required for vtkDataArrayAccessor and vtkAOSDataArrayTemplate related classes\n",
        "Line" : 4,
        "CharPositionInLine" : 32
      },
      "1" : {
        "Text" : "#    _CRT_SECURE_NO_DEPRECATE   # Disable CRT deprecation warnings\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# /Z* flag: see version specific flags\n",
        "Line" : 31,
        "CharPositionInLine" : 51
      },
      "3" : {
        "Text" : "# nologo       -> Suppresses the display of the copyright banner when the compiler starts up and display of informational messages during compiling.\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# MD           -> runtime library: multithreaded dll\n\n# MDd          -> Runtime Library: Multithreaded Debug DLL\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Od           -> Optimization: none\n\n# O1           -> Minimize Size, equivalent to /Og /Os /Oy /Ob2 /Gs /GF /Gy\n\n# O2           -> Maximize Speed, equivalent to /Og /Oi /Ot /Oy /Ob2 /Gs /GF /Gy\n\n# Ob2          -> inline function expansion: any suitable\n\n# Ox           -> optimization: full optimization, equivalent to /Ob2 /Og /Ot /Oy\n\n# Oi           -> enable intrinsic functions: yes\n\n# Oy           -> omit frame pointers: yes\n\n# Ot           -> favor fast code\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# RTC1         -> Runtime error checks\n\n# guard:cf     -> Enable compiler generation of Control Flow Guard security checks (Visual Studio 2015, incompatible with /ZI)\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# MP           -> build with multiple processes\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# GF           -> string pooling (set by /O1, /O2 and /ZI)\n\n# GL           -> whole program optimization: enable link-time code generation\n\n# GR           -> runtime type information\n\n# GS           -> buffer security check\n\n# Gm           -> enable minimal rebuild\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# arch:SSE2    -> enable enhanced instruction set: streaming simd extensions 2\n\n# fp:precise   -> floating point model: precise\n\n# fp:fast      -> floating point model: fast\n\n# bigobj       -> Increase Number of Sections in .Obj file\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Zc:wchar_t   -> treat wchar_t as built-in type: yes\n\n# Zc:forScope  -> force conformance in for loop scope: Yes\n\n# Zc:rvalueCast -> treat rvalue references according to section 5.4 of the C++11 standard\n\n# Zc:inline    -> enforce section 3.2 and section 7.1.2. of the C++11 standard: definitions of called inline functions must be visible\n\n# Zc:throwingNew -> assume operator new throws on failure (Visual Studio 2015)\n\n# Zc:strictStrings -> strict const-qualification conformance for pointer initlized by using string literals (Visual Studio 2015)\n\n# Zc:referenceBinding -> a temporary will not bind to an non-const lvalue reference (Visual Studio 2015)\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Zi           -> debug information format: program database\n\n# ZI           -> debug information format: program database supporting edit and continue (Visual Studio 2015)\n\n# Zo           -> generates richer debugging information for optimized code (non- /Od builds) (VS2013 Update 3, default in VS2015 when /Zi is specified)\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# wd           -> disable warning\n\n# we           -> treat warning as error\n\n#   4100       -> 'identifier' : unreferenced formal parameter\n\n#   4127       -> conditional expression is constant (caused by Qt)\n\n#   4172       -> returning address of local variable or temporary\n\n#   4189       -> 'identifier' : local variable is initialized but not referenced\n\n#   4239       -> nonstandard extension used : 'token' : conversion from 'type' to 'type'\n\n#   4250       -> 'class1' : inherits 'class2::member' via dominance\n\n#   4251       -> 'identifier' : class 'type' needs to have dll-interface to be used by clients of class 'type2'\n\n#   4267       -> 'var' : conversion from 'size_t' to 'type', possible loss of data\n\n#   4351       -> new behavior: elements of array '...' will be default initialized\n\n#   4390       -> ';' : empty controlled statement found; is this the intent?\n\n#   4456       -> declaration of 'x' hides previous local declaration\n\n#   4457       -> declaration of 'x' hides function parameter\n\n#   4458       -> declaration of 'x' hides class member\n\n#   4505       -> 'function' : unreferenced local function has been removed (caused by libzeug)\n\n#   4512       -> 'class' : assignment operator could not be generated\n\n#   4661       -> 'identifier' : no suitable definition provided for explicit template instantiation request (AbstractSimpleGeoCoordinateTransformFilter.h)\n\n#   4700       -> uninitialized local variable 'name' used\n\n#   4701       -> Potentially uninitialized local variable 'name' used\n\n#   4703       -> Potentially uninitialized local pointer variable 'name' used\n\n#   4714       -> function 'function' marked as __forceinline not inlined  (Qt5, Version 5.8?)\n\n#   4715       -> 'function' : not all control paths return a value\n\n#   4717       -> 'function' : recursive on all control paths, function will cause runtime stack overflow\n\n#   4718       -> 'function call' : recursive call has no side effects, deleting (QMapNode/qmap.h)\n\n# W4           -> warning level 4\n\n# WX           -> treat warnings as errors\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# version specific compile flags\n\n# 1800: Visual Studio 12 2013\n\n# 1900: Visual Studio 14 2015\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# this is set in RelWithDebInfo builds for all MSVC versions\n",
        "Line" : 136,
        "CharPositionInLine" : 36
      },
      "15" : {
        "Text" : "# Visual Studio 14 2015 as minimum\n",
        "Line" : 140,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# allow native edit and continue: http://blogs.msdn.com/b/vcblog/archive/2015/07/22/c-edit-and-continue-in-visual-studio-2015.aspx\n",
        "Line" : 144,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Enable compiler generation of Control Flow Guard security checks. (incompatible with /ZI)\n",
        "Line" : 147,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Visual Studio 2015 Update 3 introduced a new optimizer\n\n#   https://blogs.msdn.microsoft.com/vcblog/2016/05/04/new-code-optimizer/\n\n# with a few bugs, see:\n\n# https://bugreports.qt.io/browse/QTBUG-54443\n\n# https://connect.microsoft.com/VisualStudio/feedback/details/2992985\n\n# https://connect.microsoft.com/VisualStudio/feedback/details/2988420\n\n# https://connect.microsoft.com/VisualStudio/Feedback/Details/2984689\n\n# These bugs are fixed in current micro updates in Update 3, but apparently it's not that easy\n\n# to check for the MSVC/optimizer version here. So just hope the updates are present.\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# NOLOGO                                            -> suppress logo\n\n# INCREMENTAL:NO                                    -> enable incremental linking: no\n\n# MANIFEST                                          -> generate manifest: yes\n\n# MANIFESTUAC:\"level='asInvoker' uiAccess='false'\"  -> uac execution level: asinvoker, uac bypass ui protection: false\n\n# NXCOMPAT                                          -> data execution prevention (dep): image is compatible with dep\n\n# DYNAMICBASE:NO                                    -> randomized base address: disable image randomization\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# DEBUG        -> create debug info, implies /INCREMENTAL\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# OPT:REF      -> references: eliminate unreferenced data\n\n# OPT:ICF      -> enable comdat folding: remove redundant comdats\n\n# LTCG         -> link time code generation: use link time code generation\n\n# DELAY:UNLOAD -> delay loaded dll: support unload\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# version specific linker flags\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "cmake/PlatformWindowsMSVCClang.cmake" : {
      "ObjectId" : "b02bc4eb6328d3a5b51137f303a7cee043b62a15",
      "LastModified" : "2017-04-26T16:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Windows system\n",
        "Line" : 4,
        "CharPositionInLine" : 32
      },
      "1" : {
        "Text" : "# UNICODE                     # Use unicode\n\n# _UNICODE                    # Use unicode\n\n# _SCL_SECURE_NO_WARNINGS     # Calling any one of the potentially unsafe methods in the Standard C++ Library\n\n# _CRT_SECURE_NO_DEPRECATE    # Disable CRT deprecation warnings\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Debug build\n",
        "Line" : 14,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# Release build\n",
        "Line" : 19,
        "CharPositionInLine" : 32
      },
      "4" : {
        "Text" : "# -Wshadow      # -> e.g. when a parameter is named like a member, too many warnings, disabled for now\n",
        "Line" : 28,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# -> missing returns in functions and methods are handled as errors which stops the compilation\n",
        "Line" : 29,
        "CharPositionInLine" : 26
      },
      "6" : {
        "Text" : "# required for qrgba64.h (Qt 5.6)\n",
        "Line" : 31,
        "CharPositionInLine" : 29
      },
      "7" : {
        "Text" : "# -Wno-unknown-warning-option\n",
        "Line" : 32,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# required for Qt (atomic)\n",
        "Line" : 33,
        "CharPositionInLine" : 28
      },
      "9" : {
        "Text" : "# -Wno-reinterpret-base-class\n\n# -Wno-overloaded-virtual\n",
        "Line" : 34,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# required for libzeug\n",
        "Line" : 36,
        "CharPositionInLine" : 44
      },
      "11" : {
        "Text" : "# -Wno-unused-parameter\n\n# -Wno-unused-variable\n\n# -Wno-unused-but-set-variable\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# -Wno-deprecated-declarations\n\n# -Wno-pointer-bool-conversion\n\n# -Wno-missing-braces\n",
        "Line" : 42,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# -fms-extensions     # -> Enable full Microsoft Visual C++ compatibility\n\n# -fms-compatibility  # -> Accept some non-standard constructs supported by the Microsoft compiler\n",
        "Line" : 46,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# -gline-tables-only\n",
        "Line" : 54,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# -O3\n",
        "Line" : 62,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 16
    },
    "cmake/ProjectConfigSetup.cmake" : {
      "ObjectId" : "deac8b1fe955bcb36d2e7e890e5ffe5e522d9dde",
      "LastModified" : "2017-12-08T14:36:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include not required in CMake 3.5+\n",
        "Line" : 8,
        "CharPositionInLine" : 32
      },
      "1" : {
        "Text" : "# this is reset on each CMake configuration invocation\n\n# Thus, include this file only once before adding the plugin subfolders.\n\n# All executables that depend on plugin/thirdparty runtime paths should be added after the plugins.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add MSVC_VERSION values here that use MSVC_TOOLS_VERSION 15.0 in their *.vcxproj files.\n",
        "Line" : 56,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# prepend executable paths for 3rdparty libraries to configuration specific PATHs\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# VTK\n",
        "Line" : 87,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# libzeug\n",
        "Line" : 95,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Qt\n",
        "Line" : 98,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# plugins that require additional third party libraries may add their paths to PLUGIN_RUNTIME_PATHS\n",
        "Line" : 102,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 8
    },
    "cmake/WriteBinaryVersionInfo.cmake" : {
      "ObjectId" : "0e5f83887646d373a7b976b0551171cf0e90c846",
      "LastModified" : "2017-04-26T16:42:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "core/CMakeLists.txt" : {
      "ObjectId" : "ecbf009237d745a312ea37d06612492c6176bb64",
      "LastModified" : "2017-12-13T15:47:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Rely on upstream warning fixes\n",
        "Line" : 293,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# disable warnings produced by Qt headers (GCC)\n",
        "Line" : 346,
        "CharPositionInLine" : 32
      },
      "2" : {
        "Text" : "# Don't include proj.4 in public headers!\n",
        "Line" : 350,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# ARCHIVE DESTINATION ${INSTALL_LIB}\n",
        "Line" : 370,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "docs/CMakeLists.txt" : {
      "ObjectId" : "76c01838cf4245bfccd492757fd9fe6abbce7191",
      "LastModified" : "2017-04-26T16:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Target 'docs'\n\n# add_custom_target(docs)\n\n# set_target_properties(docs PROPERTIES EXCLUDE_FROM_DEFAULT_BUILD 1)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Documentation\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "docs/doxygen/CMakeLists.txt" : {
      "ObjectId" : "93be44b55934a3392bde4e28da5ec8b8bc82958c",
      "LastModified" : "2017-04-26T16:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Path to doxygen input\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set project variables\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if doxygen is available\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Get filename and path of doxyfile\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Configure doxyfile (if it is a real doxyfile already, it should simply copy the file)\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Invoke doxygen\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# ToDO, configure doxygen to use source as is\n",
        "Line" : 37,
        "CharPositionInLine" : 104
      },
      "7" : {
        "Text" : "# Declare target\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# add_dependencies(docs docs-doxygen)\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "gui/CMakeLists.txt" : {
      "ObjectId" : "0b10b54309f4093416613a920ae87965404b07f0",
      "LastModified" : "2017-07-24T13:09:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Group source files\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# disable warnings produced by Qt headers (GCC)\n",
        "Line" : 179,
        "CharPositionInLine" : 31
      },
      "2" : {
        "Text" : "# ARCHIVE DESTINATION ${INSTALL_LIB}\n",
        "Line" : 201,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "gui/widgets/qt_designer_plugins/CMakeLists.txt" : {
      "ObjectId" : "16cbcbf941fb9756ad9f42550bc8b242f36da8dd",
      "LastModified" : "2017-06-12T18:04:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "packages/CMakeLists.txt" : {
      "ObjectId" : "bc80e3ea391383987945328175ac6e0868b83f8a",
      "LastModified" : "2017-04-26T16:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create output directory\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target 'pack'\n\n# add_custom_target(pack)\n\n# set_target_properties(pack PROPERTIES EXCLUDE_FROM_DEFAULT_BUILD 1)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Packages\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "packages/helper-qtdeploy.cmake" : {
      "ObjectId" : "22ccb59103a986b6ffacfe2501c59df9e527f323",
      "LastModified" : "2017-12-13T15:47:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# copy required Qt binaries to deploy them with installs/packages\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# deprecated Qt5 OpenGL module is not deployed by Qt anymore\n",
        "Line" : 23,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# If conditions of generator expressions don't match, they are replaced by \"\",\n\n# which is then interpreted as an empty parameter.\n\n# Thus, $<$<OR:$<CONFIG:Debug>,$<CONFIG:RelWithDebInfo>,$<CONFIG:RelNoOptimization>>:--pdb>\n\n# resolves to \"\" for Release builds. So just don't use this flag for now.\n",
        "Line" : 39,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Putting UNIX deployment into a function to be able to safely abort it.\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Check Qt plugins first: if related CMake modules are not available, we should skip everything else here\n\n# NOTE: For Qt downloaded+installed from their website, the Qt5::Gui component lists all the\n\n# input, platform, etc. plugins. in Qt5Gui_PLUGINS. On the packaged Qt5 versions (e.g., in\n\n# Ubuntu 17.10), Qt5Gui_PLUGINS is empty, and no CMake modules are available that would\n\n# facilitate plugin deployment.\n\n# TODO: All that stuff could be manually deployed, too. But that's error-prone and hard to maintain.\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# qt.conf: setup deploy folder structure\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Libraries: need to rename, e.g., \"libQt5Core.so.5.6.0\" -> \"libQt5Core.so.5\"\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Plugins: copy as is [can't check what is actually needed]\n",
        "Line" : 136,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#         if (${_locationRelease} MATCHES \"^.*/platforms/.*$\")\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# only need to deploy this platform plugin. And it has to be located at a fixed position relative to the executable.\n",
        "Line" : 145,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "#             if (NOT _plugin STREQUAL \"Qt5::QXcbIntegrationPlugin\")\n\n#                 continue()\n\n#             endif()\n\n#             set(_pluginInstallDir ${INSTALL_BIN}/platforms)\n\n#         else()\n\n#             set(_pluginInstallDir ${INSTALL_SHARED})\n\n#         endif()\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ICU: no Qt-CMake support at all.\n\n# Find all ICU libs shipped with Qt (hopefully not something else..) and copy to shortened names.\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Platform plugin: not listed in the CMakes' WTF??\n",
        "Line" : 190,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 13
    },
    "packages/pack.cmake" : {
      "ObjectId" : "23772679ec052bfe8b310d844b030219dbb3df5d",
      "LastModified" : "2017-04-26T16:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Reset CPack configuration\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Find cpack executable\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#set(CPACK_PACKAGE_ICON                  \"${PROJECT_SOURCE_DIR}/packages/logo.bmp\")\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# NOTE: for using MUI (UN)WELCOME images we suggest to replace nsis defaults,\n\n# since there is currently no way to do so without manipulating the installer template (which we won't).\n\n# http://public.kitware.com/pipermail/cmake-developers/2013-January/006243.html\n",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# SO the following only works for the installer icon, not for the welcome image.\n",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# NSIS requires \"\\\\\" - escaped backslash to work properly. We probably won't rely on this feature,\n\n# so just replacing / with \\\\ manually.\n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#file(TO_NATIVE_PATH \"${CPACK_PACKAGE_ICON}\" CPACK_PACKAGE_ICON)\n",
        "Line" : 62,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# http://public.kitware.com/Bug/view.php?id=9094\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#set(CPACK_NSIS_DISPLAY_NAME             \"${package_name}-${META_VERSION}\")\n\n#set(CPACK_NSIS_MUI_ICON    \"${PROJECT_SOURCE_DIR}/packages/logo.ico\")\n\n#set(CPACK_NSIS_MUI_UNIICON \"${PROJECT_SOURCE_DIR}/packages/logo.ico\")\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# set(CPACK_PACKAGE_FILE_NAME \"${package_name}-${CPACK_PACKAGE_VERSION}\")\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Important: Must be set to install files to absolute path (e.g., /etc)\n\n# -> CPACK_[RPM_]PACKAGE_RELOCATABLE = OFF\n",
        "Line" : 86,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Package target\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Dependencies\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#add_dependencies(pack pack-${project_name})\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "plugins/CMakeLists.txt" : {
      "ObjectId" : "46532830082e2335c85277ff6e4341b321220544",
      "LastModified" : "2017-04-26T16:42:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/plugin_template/CMakeLists.txt" : {
      "ObjectId" : "0807976afdaecccdae049e44df15fff1e1578305",
      "LastModified" : "2017-04-26T16:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# install(TARGETS ${target}\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# RUNTIME DESTINATION ${INSTALL_PLUGINS_BIN}\n\n# LIBRARY DESTINATION ${INSTALL_PLUGINS_SHARED}\n\n# ARCHIVE DESTINATION ${INSTALL_PLUGINS_LIB}\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# )\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "e95ae726730a49ad6de41280936e294381fb696f",
      "LastModified" : "2017-12-13T15:47:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This policy was introduced in 3.0.0 and does not allow targets named \"test\" or \"help\" ...\n\n# Since we do not rely on cmake testing we stick to the old policy for now.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Function: Build test and add command to execute it via target 'test'\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target 'test'\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# This is for an incompatibility between Google Test 1.8.0 and MSVC 15 2017 version 15.5\n\n# See https://github.com/google/googletest/issues/1318\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Tests\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "tests/TestUtilities/CMakeLists.txt" : {
      "ObjectId" : "790fcd853922ad46a4afb7830eaabcee3eecb983",
      "LastModified" : "2017-04-26T16:42:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/core-test/CMakeLists.txt" : {
      "ObjectId" : "be5eb3703ff15b2e5fe3e8b0a675477feeeb9dce",
      "LastModified" : "2017-12-13T15:47:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/gui-test/CMakeLists.txt" : {
      "ObjectId" : "39cc6e593d40cad79a48b9f56595e76b136f843c",
      "LastModified" : "2017-04-26T16:42:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "ae9d1e05bd63f41063cbd21723620aa3e6892b33",
      "LastModified" : "2017-04-26T16:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_subdirectory(test_lic3Dstacked)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/VisExtractedPoints/CMakeLists.txt" : {
      "ObjectId" : "75d1d67590f7452c5a12fc6948e5c80a74e010bf",
      "LastModified" : "2017-04-26T16:42:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/fixDEM/CMakeLists.txt" : {
      "ObjectId" : "c82e709d9c8b2d1f1a27069e26769f9ae3f1d1a0",
      "LastModified" : "2017-04-26T16:42:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/test_lic3Dstacked/CMakeLists.txt" : {
      "ObjectId" : "3a22c6a97b979cc8a74768889566553ded997476",
      "LastModified" : "2017-04-26T16:42:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/test_standalone_components/CMakeLists.txt" : {
      "ObjectId" : "a208dcf69aaf148333e1669d035e54df49cfd040",
      "LastModified" : "2017-04-26T16:42:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 37
  },
  "ElapsedTime" : 1075
}