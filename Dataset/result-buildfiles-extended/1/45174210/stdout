{
  "Repository" : "45174210",
  "Revision" : "HEAD",
  "ObjectId" : "9959e8e52c2b86b9d3b02f1804f1971f96d53060",
  "CommitTime" : "2019-02-25T13:36:14Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "f05c2d9442f54ed940e4ecda71cb6803e5158fbb",
      "LastModified" : "2018-11-15T17:04:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n# top-level CMakeLists.txt for building BornAgain\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# equivalent to \"enable_testing() ???\n",
        "Line" : 17,
        "CharPositionInLine" : 15
      },
      "2" : {
        "Text" : "# => 'make check' is an alias for 'ctest'\n",
        "Line" : 18,
        "CharPositionInLine" : 70
      },
      "3" : {
        "Text" : "# => 'make check' is an alias for 'ctest'\n",
        "Line" : 19,
        "CharPositionInLine" : 60
      },
      "4" : {
        "Text" : "# declare project-wide user flags, and set default values\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# include CMake macros and functions\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# overwrite CMake command\n",
        "Line" : 52,
        "CharPositionInLine" : 30
      },
      "7" : {
        "Text" : "# debug optimization\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# code coverage analysis\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# recurse into the given subdirectories\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# functional tests (ctest)\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# after-install message\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# make package targets\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "Core/CMakeLists.txt" : {
      "ObjectId" : "eac6d11586e9fda376f9d8e0b992f5d0b88b61c1",
      "LastModified" : "2019-01-29T08:17:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building libBornAgainCore library\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    set(CMAKE_CXX_CLANG_TIDY \"clang-tidy;-checks=-*,readability-*,-readability-braces-around-statements\")\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(CMAKE_CXX_CLANG_TIDY \"clang-tidy;-checks=*,-google-*,-misc-macro-parentheses,-readability-braces-around-statements,-readability-named-parameter,-llvm-namespace-comment\")\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- source and include files ---------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- making library ---------\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# exposing library name and list of include directories outside\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- external dependencies ---------\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- installation ---------\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# required by swig\n",
        "Line" : 190,
        "CharPositionInLine" : 113
      },
      "9" : {
        "Text" : "# python in windows required .pyd extention for the library name\n",
        "Line" : 195,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# system libraries\n",
        "Line" : 214,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Install thisbornagain.sh.\n",
        "Line" : 235,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Create bin directory for links.\n",
        "Line" : 244,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Make links.\n",
        "Line" : 249,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Install bornagain/__init__.py and utilites\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "Doc/UserManual/CMakeLists.txt" : {
      "ObjectId" : "16f1f59e7dfce7bf8d2ee3d41c6c42d1f3ba487a",
      "LastModified" : "2018-03-07T09:19:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This CMakeLists.txt is not actively maintained;\n\n# we usually do not use CMake to build the manual.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# to compile in standalone mode\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Doc/man/CMakeLists.txt" : {
      "ObjectId" : "a13c40f7302c861816007fe178db2c77dac66c81",
      "LastModified" : "2016-06-01T15:22:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/cpp/CylindersAndPrisms/CMakeLists.txt" : {
      "ObjectId" : "3094bc295136d86f39378b7b64c52cdaba40d8e3",
      "LastModified" : "2018-03-07T09:19:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  BornAgain: simulate and fit scattering at grazing incidence\n\n#\n\n#  @file      Examples/cpp/CylindersAndPrisms/CMakeLists.txt\n\n#  @brief     Demonstrates how to compile a main program that uses the BornAgain C++ API.\n\n#\n\n#  @homepage  http://www.bornagainproject.org\n\n#  @license   GNU General Public License v3 or higher (see COPYING)\n\n#  @copyright Forschungszentrum Jülich GmbH 2016\n\n#  @authors   Scientific Computing Group at MLZ Garching\n\n#  @authors   J. Burle, C. Durniak, J. M. Fisher, M. Ganeva, G. Pospelov, W. Van Herck, J. Wuttke\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# path to the cmake modules\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find libraries\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Examples/cpp/modules/FindBornAgain.cmake" : {
      "ObjectId" : "81253fd49a1b1fe7eccc6ab77601b2e4030323ea",
      "LastModified" : "2016-09-27T18:21:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  BornAgain: simulate and fit scattering at grazing incidence\n\n#\n\n#  @file      Examples/cpp/modules/FindBornAgain.cmake\n\n#  @brief     Finds BornAgain installation\n\n#\n\n#  Usage:     find_package(BornAgain REQUIRED)\n\n#\n\n#  Outcome:   defines\n\n#             - BORNAGAIN_INCLUDE_DIR  PATH to the include directory\n\n#             - BORNAGAIN_LIBRARIES    BornAgain libraries\n\n#\n\n#  @homepage  http://www.bornagainproject.org\n\n#  @license   GNU General Public License v3 or higher (see COPYING)\n\n#  @copyright Forschungszentrum Jülich GmbH 2016\n\n#  @authors   Scientific Computing Group at MLZ Garching\n\n#  @authors   J. Burle, C. Durniak, J. M. Fisher, M. Ganeva, G. Pospelov, W. Van Herck, J. Wuttke\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 32-bits systems require special Eigen options\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Fit/CMakeLists.txt" : {
      "ObjectId" : "4b0af5985bea92f8ef08327ca292014322ef6122",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building libBornAgainFit library\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- source and include files ------\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#list(APPEND include_files \"${AUTO_DIR}/libBornAgainFit_wrap.h\")\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# --- definitions ---------\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- making library ---------\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# exposing library name and list of include directories outside\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- dependencies ---------\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- custom actions\n\n# python in windows required .pyd extention for the library name\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# for functional tests\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#    set(link_flags \"-Wl,-rpath,@loader_path/../..\")\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# -----------------------------------------------\n\n# installation\n\n# -----------------------------------------------\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# required by SWIG\n",
        "Line" : 148,
        "CharPositionInLine" : 113
      },
      "CommentCount" : 12
    },
    "GUI/CMakeLists.txt" : {
      "ObjectId" : "69f3895f40cde4f38bfdc76bf5ab4e385fe5e225",
      "LastModified" : "2018-11-15T17:04:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building BornAgain/GUI libraries and executable\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "GUI/ba3d/CMakeLists.txt" : {
      "ObjectId" : "8c961aad3d0ca0198c5a7a253063a10820baf55b",
      "LastModified" : "2018-03-07T09:19:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "GUI/ba3d/ba3d/CMakeLists.txt" : {
      "ObjectId" : "271d8a613d9641ce6e54d7745d7e2256653ec58c",
      "LastModified" : "2018-11-15T17:04:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# --- source, include and resource files ---\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "GUI/ba3d/demo/CMakeLists.txt" : {
      "ObjectId" : "4e1b67361de7f9900f5fbcc02ac4a972b9a01def",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "GUI/ba3d/showcase/CMakeLists.txt" : {
      "ObjectId" : "ad49c0eb8880b2f5194a603f5cc761aa8ec5c72c",
      "LastModified" : "2018-03-07T09:19:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "GUI/coregui/CMakeLists.txt" : {
      "ObjectId" : "5caa7bf421ce708ca372795b8644f7c427d61716",
      "LastModified" : "2018-11-15T17:04:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building libBornAgainGUI library\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- source and include files ---\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Qt configuration ---------\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- definitions ------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- making library ---------\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# exposing library name and list of include directories outside\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- dependencies ---------\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- Installation ---------\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- Qt ---\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Convert C:\\Qt\\ to C:/Qt/\n",
        "Line" : 122,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 10
    },
    "GUI/main/CMakeLists.txt" : {
      "ObjectId" : "94efc3a46c2db2fb00166ed9b1170f6b7869b169",
      "LastModified" : "2018-11-15T17:04:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Builds BornAgain/GUI main executable\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Qt configuration\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# executable icons\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# executable\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# dependencies\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# extra target properties\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# this makes sense only if we build a bundle\n",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# installation section\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#message(STATUS \"Executable destination is ${executable_destination}\")\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# system dependent installation\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# creating link to BornAgain gui in bin directory\n",
        "Line" : 115,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 11
    },
    "Tests/Functional/CMakeLists.txt" : {
      "ObjectId" : "05fcf8d4bc049562ed0e32bf344b0cfed50c00f2",
      "LastModified" : "2018-11-28T15:01:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# Tests/Functional/CMakeLists.txt (called from top-level CMakeLists.txt)\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Tests/Functional/Core/CMakeLists.txt" : {
      "ObjectId" : "8c78d7e8480c83c41d3f89c3540f329daf12e78e",
      "LastModified" : "2019-01-29T08:17:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# Tests/Functional/Core/CMakeLists.txt\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add standard and special tests\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# build MPI test executable\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Tests/Functional/Core/CoreSpecial/CMakeLists.txt" : {
      "ObjectId" : "41de4c5c857062512d72e5747f96e5e1e9a1af36",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    CoreIO\n\n#    DetectorTest\n\n#    MesoPerformance\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build executables for each test case\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# create test cases\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Tests/Functional/Core/CoreStandardTest/CMakeLists.txt" : {
      "ObjectId" : "1f320dcc8de0799327006749656f8db349fb265a",
      "LastModified" : "2019-02-08T10:19:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# Tests/Functional/Core/CMakeLists.txt\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CoreStandardTest cases:\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Tests/Functional/Core/MPI/CMakeLists.txt" : {
      "ObjectId" : "ce919177e1dfaeccbb6cba92b559a75ecd20b2f7",
      "LastModified" : "2018-03-16T16:07:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find libraries\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include dirs\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# executable and its dependencies\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# compile and link flags\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Tests/Functional/Core/SelfConsistenceTest/CMakeLists.txt" : {
      "ObjectId" : "96be7c1ad6d2a3d9975519bded6d5275b76ac993",
      "LastModified" : "2019-02-19T10:10:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# Tests/Functional/Core/SelfConsistenceTest/CMakeLists.txt\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CoreStandardTest cases:\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Tests/Functional/Fit/CMakeLists.txt" : {
      "ObjectId" : "bb84a497b99efb51f9681d0fc275bc44ae37af5f",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# Tests/Functional/Core/CMakeLists.txt\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# testing fitting via FitObjective\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# testing standalone fitting of arbitrary objective functions\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Tests/Functional/Fit/FitObjective/CMakeLists.txt" : {
      "ObjectId" : "5577560d5260f6b2fa7c109e0994150afde81f77",
      "LastModified" : "2019-01-29T08:17:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# --- slow, but still converging ---\n\n# SimAnCylindersInBA\n\n# GeneticCylindersInBA\n\n# SteepestDescentCylindersInBA\n\n# AdjustMinimizerFit\n\n# BfgsCylindersInBA\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "Tests/Functional/Fit/Minimizer/CMakeLists.txt" : {
      "ObjectId" : "0d5396ca6591422801c406b10b87bd9f1eebf0fa",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SteepestDescentTestV1 <-- not able to fit Rosenbrock function\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "Tests/Functional/GUI/CMakeLists.txt" : {
      "ObjectId" : "c0a7bdb20fa5256e9707be9c00d66761c32682aa",
      "LastModified" : "2018-11-15T17:04:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Tests/Functional/GUI/GUISpecial/CMakeLists.txt" : {
      "ObjectId" : "64ad6691539c5578d50a924673fde805f7570b70",
      "LastModified" : "2019-02-19T10:10:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Performance tests are not part of the functional test suite.\n\n# They need to be run manually when needed.\n\n#    CsvImportAssistantPerformanceTest\n\n#    GUIPerformanceTest\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Tests/Functional/GUI/GUIStandardTest/CMakeLists.txt" : {
      "ObjectId" : "4cb72336872b02efcff70d6a459b0f5ab1e88ed5",
      "LastModified" : "2019-02-19T10:10:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# Tests/Functional/GUI/CMakeLists.txt\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Tests/Functional/Python/CMakeLists.txt" : {
      "ObjectId" : "b7a973d0adf9f38c89c5c6d02b65d10684007988",
      "LastModified" : "2018-03-16T16:07:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Collection of Python related tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Tests/Functional/Python/PyCore/CMakeLists.txt" : {
      "ObjectId" : "479c0fdd2cc78c2f61a6733dafac1a093c112e5f",
      "LastModified" : "2018-03-16T16:07:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# Tests/Functional/PyCore/scripts/CMakeLists.txt\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Tests/Functional/Python/PyEmbedded/CMakeLists.txt" : {
      "ObjectId" : "3d23ac7fecc5abfe34eb68b192b08dd5dbc247e8",
      "LastModified" : "2018-05-04T09:06:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Tests/Functional/Python/PyExamples/CMakeLists.txt" : {
      "ObjectId" : "1613670be9428860be99f824f8c7b36a5c6fbb17",
      "LastModified" : "2018-03-16T16:07:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Tests/Functional/PyExamples/CMakeLists.txt\n\n#\n\n# > Test functionality of all examples found in PY_EXAMPLES_DIR = <BornAgain>/Examples/python\n\n# > Validates selected examples against reference files\n\n#\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Tests/Functional/Python/PyFit/CMakeLists.txt" : {
      "ObjectId" : "72a470992ebe8c391eb29ee86a18376b94720f8c",
      "LastModified" : "2018-11-15T17:04:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# Tests/Functional/PyFit/CMakeLists.txt\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Tests/Functional/Python/PyPersistence/CMakeLists.txt" : {
      "ObjectId" : "18c2b8530fcd7f6877124ea7c5511f2c24327d2c",
      "LastModified" : "2018-11-28T15:01:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# Tests/Functional/PyCore/persistence/CMakeLists.txt\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Python persistence test\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# modified example to run as a test\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Tests/Functional/Python/PyStandard/CMakeLists.txt" : {
      "ObjectId" : "1b5f41cf79088a653589898c12217821b3b34175",
      "LastModified" : "2019-02-19T10:10:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# Tests/Functional/PyCore/suite/CMakeLists.txt\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Tests/Functional/TestMachinery/CMakeLists.txt" : {
      "ObjectId" : "9bf0b1c4db669fed61d2b7b09667c180a74339bf",
      "LastModified" : "2018-11-15T17:04:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building libBornAgainCore library\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- making library ---------\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# exposing library name and list of include directories outside\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- external dependencies ---------\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Tests/UnitTests/Core/CMakeLists.txt" : {
      "ObjectId" : "070f4f29d48bf9c08acf3b81f380f20653209a20",
      "LastModified" : "2018-11-15T17:04:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# Core unit tests\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add execution of TestCore just after compilation\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Tests/UnitTests/Fit/CMakeLists.txt" : {
      "ObjectId" : "2cd1c801d2a9777ece16e386986fb63e435bc140",
      "LastModified" : "2018-11-15T17:04:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# Fit unit tests\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add execution of TestCore just after compilation\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Tests/UnitTests/GUI/CMakeLists.txt" : {
      "ObjectId" : "a40e9e5d68c534bd8d36cbe728dae475878a2e79",
      "LastModified" : "2018-11-15T17:04:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# GUI unit tests\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add execution of TestCore just after compilation\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Tests/UnitTests/Numeric/CMakeLists.txt" : {
      "ObjectId" : "f3fc2bb9fd801dcf94f0314f45ba362ba5564db1",
      "LastModified" : "2018-11-15T17:04:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# Core unit tests\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Registering in ctest section\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ThirdParty/Core/CMakeLists.txt" : {
      "ObjectId" : "c62dbccfe5250a080c855ef684962ccb1e321a3b",
      "LastModified" : "2019-01-29T08:17:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/Core/Faddeeva/CMakeLists.txt" : {
      "ObjectId" : "98277d1ce39bd12502a9192f28fe0c4de4631eae",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building libFaddeeva package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- source and include files ---------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- making library ------------\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ThirdParty/Core/tspectrum/CMakeLists.txt" : {
      "ObjectId" : "cda692ec2cfbad008c1e16c354e082e2a7c2458e",
      "LastModified" : "2019-01-29T08:17:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building libFaddeeva package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- source and include files ---------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- making library ------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ThirdParty/Fit/CMakeLists.txt" : {
      "ObjectId" : "1b416261f7c1c96ebe0a1acdef30c6087124c454",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/Fit/RootMinimizers/CMakeLists.txt" : {
      "ObjectId" : "d61e64d209ba77978af1c41054e11c93291a149b",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building libRootMinimizers package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- source and include files ---------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- definitions ---------\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- making library ------------\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- external dependencies ---\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ThirdParty/GUI/CMakeLists.txt" : {
      "ObjectId" : "c8f8cea6c2d31bb285d9172486c874f54be59203",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/GUI/qcustomplot/CMakeLists.txt" : {
      "ObjectId" : "21d5d4ac20e076464d6ebd751b7b61c9520b468f",
      "LastModified" : "2018-11-15T17:04:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building qcustomplot static library\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ThirdParty/GUI/qt-manhattan-style/CMakeLists.txt" : {
      "ObjectId" : "24fdaa55cc42db28d661d829f9951025b73c0a8e",
      "LastModified" : "2018-11-15T17:04:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building libManhattanStyle\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Qt5 ---------\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- definitions ---------\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- library ---------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- dependencies ---------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ThirdParty/common/CMakeLists.txt" : {
      "ObjectId" : "2082bf1f5c30df603539e45245e0a157ce65700f",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/common/gtest/CMakeLists.txt" : {
      "ObjectId" : "3d7abaf296c0efc829b55ff87de479f74a637df5",
      "LastModified" : "2018-11-15T17:04:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building gtest library\n\n############################################################################\n\n# instructs CMake to consider libgtest.so as our project library (inspite of the fact, that\n\n# it is not installed) and to provide @rpath instead of hardcoded links.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ThirdParty/common/gtest/gtest-1.8.0/CMakeLists.txt" : {
      "ObjectId" : "843f291f7b8fdb88ca9056f342b98f1df08926f0",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 62,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If the CMake version supports it, attach header directory information\n\n# to the targets for when we are part of a parent build (ie being pulled\n\n# in via add_subdirectory() rather than being a standalone build).\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################################\n\n#\n\n# Install rules\n\n#install(TARGETS gtest gtest_main\n\n#  DESTINATION lib)\n\n#install(DIRECTORY ${gtest_SOURCE_DIR}/include/gtest\n\n#  DESTINATION include)\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 210,
        "CharPositionInLine" : 43
      },
      "22" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Visual Studio .NET 2003 does not support STL with exceptions disabled.\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# 1310 is Visual Studio .NET 2003\n",
        "Line" : 232,
        "CharPositionInLine" : 46
      },
      "26" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 27
    },
    "ThirdParty/common/gtest/gtest-1.8.0/Makefile.am" : {
      "ObjectId" : "29797e4e9de4e1d5e5f93bba14288de87f623946",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "ThirdParty/common/gtest/gtest-1.8.0/cmake/internal_utils.cmake" : {
      "ObjectId" : "777b91ed4b8caa226ea55cfa61fe7ec433ffb452",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# 1400 is Visual Studio 2005\n",
        "Line" : 59,
        "CharPositionInLine" : 33
      },
      "9" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# 1500 is Visual Studio 2008\n",
        "Line" : 69,
        "CharPositionInLine" : 33
      },
      "13" : {
        "Text" : "# Conditional expression is constant.\n\n# When compiling with /W4, we get several instances of C4127\n\n# (Conditional expression is constant). In our code, we disable that\n\n# warning on a case-by-case basis. However, on Visual Studio 2005,\n\n# the warning fires on std::list. Therefore on that compiler and earlier,\n\n# we disable the warning project-wide.\n",
        "Line" : 70,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 78,
        "CharPositionInLine" : 39
      },
      "15" : {
        "Text" : "# Suppress \"unreachable code\" warning on VS 2012 and later.\n\n# http://stackoverflow.com/questions/3232669 explains the issue.\n",
        "Line" : 79,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# 1900 is Visual Studio 2015\n",
        "Line" : 83,
        "CharPositionInLine" : 42
      },
      "17" : {
        "Text" : "# BigObj required for tests.\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 126,
        "CharPositionInLine" : 32
      },
      "24" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 238,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 38
    },
    "VERSION.cmake" : {
      "ObjectId" : "4d93379b497f01d4d1241a3b6afbb1cc8e6ea321",
      "LastModified" : "2019-02-22T12:51:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/bornagain/CMakeLists.txt" : {
      "ObjectId" : "36cabf1e645a216f63c3d57ddf816f00d70e635d",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this script is a trick to print the message at the end of installation\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# to show files in Qt creator\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/bornagain/modules/BornAgainCPack.cmake" : {
      "ObjectId" : "0977d0f07919124fdf4b8ac7616c6932a63786df",
      "LastModified" : "2018-12-10T10:16:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# BornAgain packaging\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# binary package setup\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# one can build debian package only on UNIX system\n",
        "Line" : 34,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "# Generating the source package\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Specify which files not to include into the source package generated by make package_source\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# first take the default parameters\n",
        "Line" : 50,
        "CharPositionInLine" : 33
      },
      "6" : {
        "Text" : "# more screeneng symbols is neccesary because of double file processing by cmake and cpack\n",
        "Line" : 60,
        "CharPositionInLine" : 22
      },
      "7" : {
        "Text" : "# user will not need it\n",
        "Line" : 73,
        "CharPositionInLine" : 25
      },
      "8" : {
        "Text" : "# user will not need it\n",
        "Line" : 74,
        "CharPositionInLine" : 36
      },
      "9" : {
        "Text" : "# remove this line when unneeded\n",
        "Line" : 76,
        "CharPositionInLine" : 35
      },
      "CommentCount" : 10
    },
    "cmake/bornagain/modules/BornAgainConfiguration.cmake" : {
      "ObjectId" : "450d1a1039b106753a8a50eca94193fede38e8af",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# BornAgain project configuration\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Common policies\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- from GUI section\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#if(POLICY CMP0020)\n\n#    cmake_policy(SET CMP0020 NEW)\n\n#endif()\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#if(POLICY CMP0043)\n\n#    cmake_policy(SET CMP0043 NEW)\n\n#endif()\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#if(POLICY CMP0028)\n\n#    cmake_policy(SET CMP0028 NEW)\n\n#endif()\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Common definitions\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# suppress qDebug() output for release build\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# source directory paths\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# cmake runtime output configuration\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# file extensions\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# destinations\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# configure files\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# configure Doxyfile\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# configure BornAgain launch scripts\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# configure postinst and prerm for the debian package\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "cmake/bornagain/modules/BornAgainPolicy.cmake" : {
      "ObjectId" : "15eb6dcece9911a39dfa08012df96d5b4eb60e55",
      "LastModified" : "2018-11-15T17:04:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/bornagain/modules/CPackApple.cmake" : {
      "ObjectId" : "f19dac116ac6c05345f2c78c9385a4cc843db8bc",
      "LastModified" : "2018-12-10T10:16:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# BornAgain Mac packaging \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/bornagain/modules/CPackDebian.cmake" : {
      "ObjectId" : "b2049bca7a6785d5bdd6808ae4b9646801b81d2c",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# BornAgain debian packaging\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# parameters to build a debian package\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Architecture: (mandatory)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# There is no such thing as i686 architecture on debian, you should use i386 instead\n\n# $ dpkg --print-architecture\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#From the BornAgain webpage: set(CPACK_DEBIAN_PACKAGE_DEPENDS \"build-essential, git, cmake(>=3.1), libgsl-dev(>=1.15), libboost-all-dev(>=1.48), libfftw3-dev(>=3.3.1), python3, python3-dev, python3-numpy, python3-matplotlib, libtiff5-dev(>=4.0.2), qt5-default(>=5.4), libqt5designercomponents5, qttools5-dev, libqt5svg5-dev\")\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Version Specific Dependencies: set(CPACK_DEBIAN_PACKAGE_DEPENDS \"libgsl-dev(>=1.15), libboost-program-options${Boost_MAJOR_VERSION}.${Boost_MINOR_VERSION}.${Boost_SUBMINOR_VERSION}, libboost-iostreams${Boost_MAJOR_VERSION}.${Boost_MINOR_VERSION}.${Boost_SUBMINOR_VERSION}, libboost-regex${Boost_MAJOR_VERSION}.${Boost_MINOR_VERSION}.${Boost_SUBMINOR_VERSION}, libboost-filesystem${Boost_MAJOR_VERSION}.${Boost_MINOR_VERSION}.${Boost_SUBMINOR_VERSION}, libfftw3-3(>=3.3.1), python3, python3-numpy, python3-matplotlib, libqt5widgets5(>=5.4), libtiffxx5(>=4.0.2)\")\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Version-free dependencies:\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set postinstall and preremove scripts for the debian package\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# write copyright file\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# write changelog file\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# execute_process(COMMAND gzip -9 \"${CMAKE_BINARY_DIR}/changelog\" OUTPUT_FILE \"${CMAKE_BINARY_DIR}/changelog.gz\")\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cmake/bornagain/modules/CPackWindows.cmake" : {
      "ObjectId" : "91705c836ab992d6b7a4fb51e486edb8e2187842",
      "LastModified" : "2018-12-10T10:16:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# BornAgain Windows packaging\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/bornagain/modules/CheckCode.cmake" : {
      "ObjectId" : "29b413952ddc8b855cd142622d24bb198bf28fca",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# maximum line length of code written by MLZ-SCG\n",
        "Line" : 1,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : "#   file(GLOB_RECURSE SRC1 \"GUI/*.cpp\")\n\n#   file(GLOB_RECURSE SRC2 \"GUI/*.h\")\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/bornagain/modules/CheckCompiler.cmake" : {
      "ObjectId" : "5ba61f321908c4f831de88ddf8236a951fe2d656",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#  CheckCompiler.cmake\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----Test if clang setup works----------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---Obtain the major and minor version of the GNU compiler------------------------------------------\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---Set a default build type for single-configuration CMake generators if no build type is set------\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  set(CMAKE_BUILD_TYPE RelWithDebInfo CACHE STRING \"\" FORCE)\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#---Need to locate thead libraries and options to set properly some compilation flags---------------\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---Setup details depending on the major platform type----------------------------------------------\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---Setup details depending on the compiler type----------------------------------------------------\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---Print the final compiler flags------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/bornagain/modules/GeneratePythonDocs.cmake" : {
      "ObjectId" : "85497ae967486368181b82a58fab4557195db9fa",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Autogenerate a .i file from doxygen comments, provided -DBORNAGAIN_GENERATE_PYTHON_DOCS=ON.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/bornagain/modules/PyExamplesLineLength.cmake" : {
      "ObjectId" : "60dbf1cb4f76a5c1172b351b33b3b5457ad3c2d1",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check whether the line length of all python examples remains below WEB_LEN_LIM\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# maximum line length of code for display\n",
        "Line" : 3,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 2
    },
    "cmake/bornagain/modules/SearchInstalledSoftware.cmake" : {
      "ObjectId" : "218eadf20df6ec65f5f2330be471ff75082e3eba",
      "LastModified" : "2019-02-22T12:51:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Search for installed software required by BornAgain\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Eigen3 is a git submodule; throw an error if submodule is not initialized ---\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Boost ---\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# prevent shortcut\n",
        "Line" : 15,
        "CharPositionInLine" : 29
      },
      "4" : {
        "Text" : "# line is needed for MSVC\n",
        "Line" : 19,
        "CharPositionInLine" : 38
      },
      "5" : {
        "Text" : "#add_definitions(-DBOOST_LIB_DIAGNOSTIC) # shows during compilation auto-linked libraries\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# In spite of the \"REQUIRED\" flag, FindBoost will not terminate if some components are missing.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# === optional packages ===\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- MPI support ---\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# --- Tiff ---\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# --- Python ---\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# --- Swig ---\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# --- man page generation ---\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "cmake/bornagain/modules/SearchQt.cmake" : {
      "ObjectId" : "dd1920b362175322585bb2525d8a2eda23210417",
      "LastModified" : "2019-02-22T12:51:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files Qt5WidgetsConfig.cmake etc are part of the Qt5 sources.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# checking 3D\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/bornagain/modules/SetUpLinux.cmake" : {
      "ObjectId" : "a92a17cc5642408b1fba485d868a470b4be2916a",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/bornagain/modules/SetUpMacOS.cmake" : {
      "ObjectId" : "26c2a1aa773a1b6e16dc86e3ee29e8192113c23d",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------------------------------\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TODO: check haveconfig and rpath -> set rpath true\n\n#TODO: check Thread, define link command\n\n#TODO: more stuff check configure script\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Select flags.\n",
        "Line" : 53,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "#settings for cint\n",
        "Line" : 65,
        "CharPositionInLine" : 5
      },
      "4" : {
        "Text" : "#     SET(CMAKE_Fortran_FLAGS \"${CMAKE_FORTRAN_FLAGS} -std=legacy\")\n\n#     SET(CINT_CXX_DEFINITIONS \"-DG__REGEXP -DG__UNIX -DG__SHAREDLIB -DG__ROOT -DG__REDIRECTIO -DG__OSFDLL -DG__STD_EXCEPTION\")\n\n#     SET(CINT_C_DEFINITIONS \"-DG__REGEXP -DG__UNIX -DG__SHAREDLIB -DG__ROOT -DG__REDIRECTIO -DG__OSFDLL -DG__STD_EXCEPTION\")\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Select flags.\n",
        "Line" : 88,
        "CharPositionInLine" : 5
      },
      "6" : {
        "Text" : "#settings for cint\n",
        "Line" : 100,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 7
    },
    "cmake/bornagain/modules/SetUpWindows.cmake" : {
      "ObjectId" : "e9aa4884dfe045bf55ddf803ba381d19cb0b8d11",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/bornagain/modules/SetupCoverage.cmake" : {
      "ObjectId" : "384dc144f96db994262d3316cb5a1152032b90e8",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SetupCoverage.cmake\n\n#\n\n# description: sets up code coverage custom target\n\n#\n\n# copyright: 2016 Scientific Computing Group, Forschungszentrum Juelich GmbH\n\n#\n\n# license: see LICENSE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/bornagain/modules/ValidatePythonInstallation.cmake" : {
      "ObjectId" : "353cb3d74eb6d1682e41912d6ed0836ec7e2f285",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Convert the process output into a list\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#    set(ALT_PYTHONLIBS_FOUND ${ALT_PYTHONLIBS_FOUND} PARENT_SCOPE)\n\n#    set(ALT_PYTHON_VERSION_STRING ${ALT_PYTHON_VERSION_STRING} PARENT_SCOPE)\n\n#    set(ALT_PYTHON_INCLUDE_DIRS ${ALT_PYTHON_INCLUDE_DIRS} PARENT_SCOPE)\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/generic/modules/CheckCoverage.cmake" : {
      "ObjectId" : "921bfabced709a2d8de6448666b1e8f7785f6408",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CheckCoverage.cmake\n\n#\n\n# description: add custom target 'coverage' which generates a code coverage report\n\n#\n\n# usage: from build directory\n\n#\n\n#        cmake .. -DCMAKE_BUILD_TYPE=Debug\n\n#        ctest   (or make check)\n\n#        cmake --build . --config Debug --target coverage\n\n#\n\n# author: Jonathan Fisher\n\n#         j.fisher@fz-juelich.de, jonathan.m.fisher@gmail.com\n\n#\n\n# copyright: 2016 Scientific Computing Group, Forschungszentrum Juelich GmbH\n\n#\n\n# license: see LICENSE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# function to add a coverage target\n\n# it will scan the working directory for coverage info, ignoring the directories in ignore_directories\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/generic/modules/DebugOptimization.cmake" : {
      "ObjectId" : "0a19de98457f72f5a71a9695bce94ccdb618d0d9",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DebugOptimization.cmake\n\n#\n\n# description: add debug optimization (gcc only)\n\n#\n\n# usage: from build directory\n\n#\n\n#        cmake .. -DCMAKE_BUILD_TYPE=Debug\n\n#        ctest   (or make check)\n\n#        cmake --build . --config Debug --target coverage\n\n#\n\n# author: Jonathan Fisher\n\n#         j.fisher@fz-juelich.de, jonathan.m.fisher@gmail.com\n\n#\n\n# copyright: 2016 scientific computing group, Forshungszentrum Juelich GmbH\n\n#\n\n# license: see LICENSE\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/generic/modules/FindFFTW.cmake" : {
      "ObjectId" : "51609d09fd7ddb0de3eba69f925a54ba27f3eacb",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the FFTW includes and library.\n\n# \n\n# This module defines\n\n# FFTW_INCLUDE_DIR, where to locate fftw3.h file\n\n# FFTW_LIBRARIES, the libraries to link against to use fftw3\n\n# FFTW_FOUND.  If false, you cannot build anything that requires fftw3.\n\n# FFTW_LIBRARY, where to find the libfftw3 library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if fftw cannot be found in env path\n",
        "Line" : 37,
        "CharPositionInLine" : 42
      },
      "2" : {
        "Text" : "#    message(\"XXX ${FFTW_INCLUDE_DIR}\")\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if fftw cannot be found in env path\n",
        "Line" : 45,
        "CharPositionInLine" : 38
      },
      "CommentCount" : 4
    },
    "cmake/generic/modules/FindGSL.cmake" : {
      "ObjectId" : "1528e3b83263876374d87049d073308a17bec4de",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindGSL\n\n# --------\n\n#\n\n# Find the native GSL includes and libraries.\n\n#\n\n# The GNU Scientific Library (GSL) is a numerical library for C and C++\n\n# programmers. It is free software under the GNU General Public\n\n# License.\n\n#\n\n# Imported Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# If GSL is found, this module defines the following :prop_tgt:`IMPORTED`\n\n# targets::\n\n#\n\n#  GSL::gsl      - The main GSL library.\n\n#  GSL::gslcblas - The CBLAS support library used by GSL.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project::\n\n#\n\n#  GSL_FOUND          - True if GSL found on the local system\n\n#  GSL_INCLUDE_DIRS   - Location of GSL header files.\n\n#  GSL_LIBRARIES      - The GSL libraries.\n\n#  GSL_VERSION        - The version of the discovered GSL install.\n\n#\n\n# Hints\n\n# ^^^^^\n\n#\n\n# Set ``GSL_ROOT_DIR`` to a directory that contains a GSL installation.\n\n#\n\n# This script expects to find libraries at ``$GSL_ROOT_DIR/lib`` and the GSL\n\n# headers at ``$GSL_ROOT_DIR/include/gsl``.  The library directory may\n\n# optionally provide Release and Debug folders.  For Unix-like systems, this\n\n# script will use ``$GSL_ROOT_DIR/bin/gsl-config`` (if found) to aid in the\n\n# discovery GSL.\n\n#\n\n# Cache Variables\n\n# ^^^^^^^^^^^^^^^\n\n#\n\n# This module may set the following variables depending on platform and type\n\n# of GSL installation discovered.  These variables may optionally be set to\n\n# help this module find the correct files::\n\n#\n\n#  GSL_CLBAS_LIBRARY       - Location of the GSL CBLAS library.\n\n#  GSL_CBLAS_LIBRARY_DEBUG - Location of the debug GSL CBLAS library (if any).\n\n#  GSL_CONFIG_EXECUTABLE   - Location of the ``gsl-config`` script (if any).\n\n#  GSL_LIBRARY             - Location of the GSL library.\n\n#  GSL_LIBRARY_DEBUG       - Location of the debug GSL library (if any).\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2014 Kelly Thompson <kgt@lanl.gov>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include these modules to handle the QUIETLY and REQUIRED arguments.\n\n#include(${CMAKE_CURRENT_LIST_DIR}/FindPackageHandleStandardArgs.cmake) # original\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# patched JWu 4/16\n",
        "Line" : 70,
        "CharPositionInLine" : 39
      },
      "4" : {
        "Text" : "#=============================================================================\n\n# If the user has provided ``GSL_ROOT_DIR``, use it!  Choose items found\n\n# at this location over system locations.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#=============================================================================\n\n# As a first try, use the PkgConfig module.  This will work on many\n\n# *NIX systems.  See :module:`findpkgconfig`\n\n# This will return ``GSL_INCLUDEDIR`` and ``GSL_LIBDIR`` used below.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#=============================================================================\n\n# Set GSL_INCLUDE_DIRS and GSL_LIBRARIES. If we skipped the PkgConfig step, try\n\n# to find the libraries at $GSL_ROOT_DIR (if provided) or in standard system\n\n# locations.  These find_library and find_path calls will prefer custom\n\n# locations over standard locations (HINTS).  If the requested file is not found\n\n# at the HINTS location, standard system locations will be still be searched\n\n# (/usr/lib64 (Redhat), lib/i386-linux-gnu (Debian)).\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Do we also have debug versions?\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If we didn't use PkgConfig, try to find the version via gsl-config or by\n\n# reading gsl_version.h.\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# 1. If gsl-config exists, query for the version.\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# 2. If gsl-config is not available, try looking in gsl/gsl_version.h\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# might also try scraping the directory name for a regex match \"gsl-X.X\"\n",
        "Line" : 153,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#=============================================================================\n\n# handle the QUIETLY and REQUIRED arguments and set GSL_FOUND to TRUE if all\n\n# listed variables are TRUE\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#=============================================================================\n\n# Register imported libraries:\n\n# 1. If we can find a Windows .dll file (or if we can find both Debug and\n\n#    Release libraries), we will set appropriate target properties for these.\n\n# 2. However, for most systems, we will only register the import location and\n\n#    include directory.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Look for dlls, or Release and Debug libraries.\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Windows systems with dll libraries.\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Windows with dlls, but only Release libraries.\n",
        "Line" : 196,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# If we have both Debug and Release libraries\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# For all other environments (ones without dll libraries), create\n\n# the imported library targets.\n",
        "Line" : 225,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 19
    },
    "cmake/generic/modules/FindNumpy.cmake" : {
      "ObjectId" : "f17b75c44158a6fa393598e3cc376e1288792ff8",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the native numpy includes\n\n# This module defines\n\n#  NUMPY_INCLUDE_DIR, where to find numpy/arrayobject.h, etc.\n\n#  NUMPY_FOUND, If false, do not try to use numpy headers.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Did not successfully include numpy\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# successful\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/generic/modules/FindTIFF.cmake" : {
      "ObjectId" : "ecd840a63391e4bacada4f236ede5ce98eb5e62c",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindTIFF\n\n# --------\n\n#\n\n# Find TIFF and TIFF/C++libraries\n\n#\n\n# This module defines\n\n#\n\n# ::\n\n#\n\n#   TIFF_INCLUDE_DIR, where to find tiff.h, etc.\n\n#   TIFF_LIBRARIES, libraries to link against to use TIFF.\n\n#   TIFF_FOUND, If false, do not try to use TIFF.\n\n#\n\n# also defined, but not for general use are\n\n#\n\n# ::\n\n#\n\n#   TIFF_LIBRARY, where to find the TIFF library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a heavily patched version of the CMake module FindTIFF.cmake\n\n# Copyright 2002-2009 Kitware, Inc.\n\n# Copyright 2013- BornAgain team\n\n# Distributed under the OSI-approved BSD License\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set TIFF_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# looking for C++ version of library libtiffxx.so\n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "cmake/generic/modules/GetFilenameComponent.cmake" : {
      "ObjectId" : "24275e77f1beb63137d3c57c8b691a8019b9d8c7",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Reimplementation of native CMake command,\n\n# for correct handling of leading dot,\n\n# https://cmake.org/pipermail/cmake-developers/2011-June/013526.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/generic/modules/GlobDirectories.cmake" : {
      "ObjectId" : "cdf3381cc30ce47da84ecf1c335b3744c973bce3",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/generic/modules/PreventInSourceBuilds.cmake" : {
      "ObjectId" : "ca2ee52036b47a8160c6b3b85ac4aa689673263e",
      "LastModified" : "2018-11-15T17:04:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Prevent in-source builds.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make sure the user doesn't play dirty with symlinks\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# disallow in-source builds\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/generic/modules/UseLATEX.cmake" : {
      "ObjectId" : "8905a8b5c2935fddbe8f92f42dee9b2696d87ba0",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# File: UseLATEX.cmake\n\n# CMAKE commands to actually use the LaTeX compiler\n\n# Version: 1.10.5\n\n# Author: Kenneth Moreland <kmorel@sandia.gov>\n\n#\n\n# Copyright 2004 Sandia Corporation.\n\n# Under the terms of Contract DE-AC04-94AL85000, there is a non-exclusive\n\n# license for use of this work by or on behalf of the\n\n# U.S. Government. Redistribution and use in source and binary forms, with\n\n# or without modification, are permitted provided that this Notice and any\n\n# statement of authorship are reproduced on all copies.\n\n#\n\n# The following function is defined:\n\n#\n\n# ADD_LATEX_DOCUMENT(<tex_file>\n\n#                    [BIBFILES <bib_files>]\n\n#                    [INPUTS <input_tex_files>]\n\n#                    [IMAGE_DIRS] <image_directories>\n\n#                    [IMAGES] <image_files>\n\n#                    [CONFIGURE] <tex_files>\n\n#                    [DEPENDS] <tex_files>\n\n#                    [MULTIBIB_NEWCITES] <suffix_list>\n\n#                    [USE_INDEX] [USE_GLOSSARY] [USE_NOMENCL]\n\n#                    [DEFAULT_PDF] [DEFAULT_SAFEPDF] [DEFAULT_PS] [NO_DEFAULT]\n\n#                    [MANGLE_TARGET_NAMES])\n\n#       Adds targets that compile <tex_file>.  The latex output is placed\n\n#       in LATEX_OUTPUT_PATH or CMAKE_CURRENT_BINARY_DIR if the former is\n\n#       not set.  The latex program is picky about where files are located,\n\n#       so all input files are copied from the source directory to the\n\n#       output directory.  This includes the target tex file, any tex file\n\n#       listed with the INPUTS option, the bibliography files listed with\n\n#       the BIBFILES option, and any .cls, .bst, and .clo files found in\n\n#       the current source directory.  Images found in the IMAGE_DIRS\n\n#       directories or listed by IMAGES are also copied to the output\n\n#       directory and coverted to an appropriate format if necessary.  Any\n\n#       tex files also listed with the CONFIGURE option are also processed\n\n#       with the CMake CONFIGURE_FILE command (with the @ONLY flag).  Any\n\n#       file listed in CONFIGURE but not the target tex file or listed with\n\n#       INPUTS has no effect. DEPENDS can be used to specify generated files\n\n#       that are needed to compile the latex target.\n\n#\n\n#       The following targets are made:\n\n#               dvi: Makes <name>.dvi\n\n#               pdf: Makes <name>.pdf using pdflatex.\n\n#               safepdf: Makes <name>.pdf using ps2pdf.  If using the default\n\n#                       program arguments, this will ensure all fonts are\n\n#                       embedded and no lossy compression has been performed\n\n#                       on images.\n\n#               ps: Makes <name>.ps\n\n#               html: Makes <name>.html\n\n#               auxclean: Deletes <name>.aux and other auxiliary files.\n\n#                       This is sometimes necessary if a LaTeX error occurs\n\n#                       and writes a bad aux file.  Unlike the regular clean\n\n#                       target, it does not delete other input files, such as\n\n#                       converted images, to save time on the rebuild.\n\n#\n\n#       The dvi target is added to the ALL.  That is, it will be the target\n\n#       built by default.  If the DEFAULT_PDF argument is given, then the\n\n#       pdf target will be the default instead of dvi.  Likewise,\n\n#       DEFAULT_SAFEPDF sets the default target to safepdf.  If NO_DEFAULT\n\n#       is specified, then no target will be added to ALL, which is\n\n#       convenient when including LaTeX documentation with something else.\n\n#\n\n#       If the argument MANGLE_TARGET_NAMES is given, then each of the\n\n#       target names above will be mangled with the <tex_file> name.  This\n\n#       is to make the targets unique if ADD_LATEX_DOCUMENT is called for\n\n#       multiple documents.  If the argument USE_INDEX is given, then\n\n#       commands to build an index are made.  If the argument USE_GLOSSARY\n\n#       is given, then commands to build a glossary are made.  If the\n\n#       argument MULTIBIB_NEWCITES is given, then additional bibtex calls\n\n#       are added to the build to support the extra auxiliary files created\n\n#       with the \\newcite command in the multibib package.\n\n#\n\n# History:\n\n#\n\n# 1.10.5 Fix for Window's convert check (thanks to Martin Baute).\n\n#\n\n# 1.10.4 Copy font files to binary directory for packages that come with\n\n#       their own fonts.\n\n#\n\n# 1.10.3 Check for Windows version of convert being used instead of\n\n#       ImageMagick's version (thanks to Martin Baute).\n\n#\n\n# 1.10.2 Use htlatex as a fallback when latex2html is not available (thanks\n\n#       to Tomasz Grzegurzko).\n\n#\n\n# 1.10.1 Make convert program mandatory only if actually used (thanks to\n\n#       Julien Schueller).\n\n#\n\n# 1.10.0 Added NO_DEFAULT and DEFAULT_PS options.\n\n#       Fixed issue with cleaning files for LaTeX documents originating in\n\n#       a subdirectory.\n\n#\n\n# 1.9.6 Fixed problem with LATEX_SMALL_IMAGES.\n\n#       Strengthened check to make sure the output directory does not contain\n\n#       the source files.\n\n#\n\n# 1.9.5 Add support for image types not directly supported by either latex\n\n#       or pdflatex.  (Thanks to Jorge Gerardo Pena Pastor for SVG support.)\n\n#\n\n# 1.9.4 Fix issues with filenames containing multiple periods.\n\n#\n\n# 1.9.3 Hide some variables that are now cached but should not show up in\n\n#       the ccmake list of variables.\n\n#\n\n# 1.9.2 Changed MACRO declarations to FUNCTION declarations.  The better\n\n#       FUNCTION scoping will hopefully avoid some common but subtle bugs.\n\n#       This implicitly increases the minimum CMake version to 4.6 (although\n\n#       I honestly only test it with the latest 4.8 version).\n\n#\n\n#       Since we are updating the minimum CMake version, I'm going to start\n\n#       using the builtin LIST commands that are now available.\n\n#\n\n#       Favor using pdftops from the Poppler package to convert from pdf to\n\n#       eps.  It does a much better job than ImageMagick or ghostscript.\n\n#\n\n# 1.9.1 Fixed typo that caused the LATEX_SMALL_IMAGES option to fail to\n\n#       activate.\n\n#\n\n# 1.9.0 Add support for the multibib package (thanks to Antonio LaTorre).\n\n#\n\n# 1.8.2 Fix corner case when an argument name was also a variable containing\n\n#       the text of an argument.  In this case, the CMake IF was matching\n\n#       the argument text with the contents of the variable with the same\n\n#       argument name.\n\n#\n\n# 1.8.1 Fix problem where ps2pdf was not getting the appropriate arguments.\n\n#\n\n# 1.8.0 Add support for synctex.\n\n#\n\n# 1.7.7 Support calling xindy when making glossaries.\n\n#\n\n#       Improved make clean support.\n\n#\n\n# 1.7.6 Add support for the nomencl package (thanks to Myles English).\n\n#\n\n# 1.7.5 Fix issue with bibfiles being copied two different ways, which causes\n\n#       Problems with dependencies (thanks to Edwin van Leeuwen).\n\n#\n\n# 1.7.4 Added the DEFAULT_SAFEPDF option (thanks to Raymond Wan).\n\n#\n\n#       Added warnings when image directories are not found (and were\n\n#       probably not given relative to the source directory).\n\n#\n\n# 1.7.3 Fix some issues with interactions between makeglossaries and bibtex\n\n#       (thanks to Mark de Wever).\n\n#\n\n# 1.7.2 Use ps2pdf to convert eps to pdf to get around the problem with\n\n#       ImageMagick dropping the bounding box (thanks to Lukasz Lis).\n\n#\n\n# 1.7.1 Fixed some dependency issues.\n\n#\n\n# 1.7.0 Added DEPENDS options (thanks to Theodore Papadopoulo).\n\n#\n\n# 1.6.1 Ported the makeglossaries command to CMake and embedded the port\n\n#       into UseLATEX.cmake.\n\n#\n\n# 1.6.0 Allow the use of the makeglossaries command.  Thanks to Oystein\n\n#       S. Haaland for the patch.\n\n#\n\n# 1.5.0 Allow any type of file in the INPUTS lists, not just tex file\n\n#       (suggested by Eric Noulard).  As a consequence, the ability to\n\n#       specify tex files without the .tex extension is removed.  The removed\n\n#       function is of dubious value anyway.\n\n#\n\n#       When copying input files, skip over any file that exists in the\n\n#       binary directory but does not exist in the source directory with the\n\n#       assumption that these files were added by some other mechanism.  I\n\n#       find this useful when creating large documents with multiple\n\n#       chapters that I want to build separately (for speed) as I work on\n\n#       them.  I use the same boilerplate as the starting point for all\n\n#       and just copy it with different configurations.  This was what the\n\n#       separate ADD_LATEX_DOCUMENT method was supposed to originally be for.\n\n#       Since its external use is pretty much deprecated, I removed that\n\n#       documentation.\n\n#\n\n# 1.4.1 Copy .sty files along with the other class and package files.\n\n#\n\n# 1.4.0 Added a MANGLE_TARGET_NAMES option that will mangle the target names.\n\n#\n\n#       Fixed problem with copying bib files that became apparent with\n\n#       CMake 2.4.\n\n#\n\n# 1.3.0 Added a LATEX_OUTPUT_PATH variable that allows you or the user to\n\n#       specify where the built latex documents to go.  This is especially\n\n#       handy if you want to do in-source builds.\n\n#\n\n#       Removed the ADD_LATEX_IMAGES macro and absorbed the functionality\n\n#       into ADD_LATEX_DOCUMENT.  The old interface was always kind of\n\n#       clunky anyway since you had to specify the image directory in both\n\n#       places.  It also made supporting LATEX_OUTPUT_PATH problematic.\n\n#\n\n#       Added support for jpeg files.\n\n#\n\n# 1.2.0 Changed the configuration options yet again.  Removed the NO_CONFIGURE\n\n#       Replaced it with a CONFIGURE option that lists input files for which\n\n#       configure should be run.\n\n#\n\n#       The pdf target no longer depends on the dvi target.  This allows you\n\n#       to build latex documents that require pdflatex.  Also added an option\n\n#       to make the pdf target the default one.\n\n#\n\n# 1.1.1 Added the NO_CONFIGURE option.  The @ character can be used when\n\n#       specifying table column separators.  If two or more are used, then\n\n#       will incorrectly substitute them.\n\n#\n\n# 1.1.0 Added ability include multiple bib files.  Added ability to do copy\n\n#       sub-tex files for multipart tex files.\n\n#\n\n# 1.0.0 If both ps and pdf type images exist, just copy the one that\n\n#       matches the current render mode.  Replaced a bunch of STRING\n\n#       commands with GET_FILENAME_COMPONENT commands that were made to do\n\n#       the desired function.\n\n#\n\n# 0.4.0 First version posted to CMake Wiki.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#############################################################################\n\n# Find the location of myself while originally executing.  If you do this\n\n# inside of a macro, it will recode where the macro was invoked.\n\n#############################################################################\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#############################################################################\n\n# Generic helper functions\n\n#############################################################################\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Parse function arguments.  Variables containing the results are placed\n\n# in the global scope for historical reasons.\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Match the contents of a file to a regular expression.\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The FILE STRINGS command would be a bit better, but I'm not totally sure\n\n# the match will always be to a whole line, and I don't want to break things.\n",
        "Line" : 273,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# A version of GET_FILENAME_COMPONENT that treats extensions after the last\n\n# period rather than the first.  To the best of my knowledge, all filenames\n\n# typically used by LaTeX, including image files, have small extensions\n\n# after the last dot.\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#############################################################################\n\n# Functions that perform processing during a LaTeX build.\n\n#############################################################################\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This is really a bare bones port of the makeglossaries perl script into\n\n# CMake scripting.\n",
        "Line" : 308,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# What crazy person makes a LaTeX index generater that uses different\n\n# identifiers for language than babel (or at least does not support\n\n# the old ones)?\n",
        "Line" : 376,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Ideally, we would check that the language is compatible with the\n\n# default codepage, but I'm hoping that distributions will be smart\n\n# enough to specify their own codepage.  I know, it's asking a lot.\n",
        "Line" : 419,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# So, it is possible (perhaps common?) for aux files to specify a\n\n# language and codepage that are incompatible with each other.  Check\n\n# for that condition, and if it happens run again with the default\n\n# codepage.\n",
        "Line" : 440,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "#############################################################################\n\n# Helper functions for establishing LaTeX build.\n\n#############################################################################\n",
        "Line" : 543,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# MiKTeX calls latex2html htlatex\n",
        "Line" : 597,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Just holds extensions for known image types.  They should all be lower case.\n\n# For historical reasons, these are all declared in the global scope.\n",
        "Line" : 681,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# ImageMagick has broken eps to pdf conversion\n\n# use ps2pdf instead\n",
        "Line" : 758,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# ImageMagick can also be sketchy on pdf to eps conversion.  Not good with\n\n# color spaces and tends to unnecessarily rasterize.\n\n# use pdftops instead\n",
        "Line" : 768,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Makes custom commands to convert a file to a particular type.\n",
        "Line" : 803,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Check input filename for potential problems with LaTeX.\n",
        "Line" : 818,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# As a shortcut, we can just copy the file.\n",
        "Line" : 837,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Check to see if there is another input file of the appropriate type.\n",
        "Line" : 847,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# If we still need to convert, do it.\n",
        "Line" : 857,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Adds custom commands to process the given files for dvi and pdf builds.\n\n# Adds the output files to the given variables (does not replace).\n",
        "Line" : 869,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Check to see if we need to downsample the image.\n",
        "Line" : 880,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "# Make sure the output directory exists.\n",
        "Line" : 889,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# Do conversions for dvi.\n",
        "Line" : 893,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# Do conversions for pdf.\n",
        "Line" : 898,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# Special case: output exists but input does not.  Assume that it was\n\n# created elsewhere and skip the input file copy.\n",
        "Line" : 956,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "#############################################################################\n\n# Commands provided by the UseLATEX.cmake \"package\"\n\n#############################################################################\n",
        "Line" : 964,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Parses arguments to ADD_LATEX_DOCUMENT and ADD_LATEX_TARGETS and sets the\n\n# variables LATEX_TARGET, LATEX_IMAGE_DIR, LATEX_BIBFILES, LATEX_DEPENDS, and\n\n# LATEX_INPUTS.\n",
        "Line" : 974,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# The first argument is the target latex file.\n",
        "Line" : 985,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Backward compatibility between 1.6.0 and 1.6.1.\n",
        "Line" : 1000,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# The commands to run LaTeX.  They are repeated multiple times.\n",
        "Line" : 1013,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Set up target names.\n",
        "Line" : 1021,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Probably not all of these will be generated, but they could be.\n\n# Note that the aux file is added later.\n",
        "Line" : 1038,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# For each directory in LATEX_IMAGE_DIRS, glob all the image files and\n\n# place them in LATEX_IMAGES.\n",
        "Line" : 1066,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Dependent .tex files might have their own .aux files created.  Make\n\n# sure these get cleaned as well.  This might replicate the cleaning\n\n# of the main .aux file, which is OK.\n",
        "Line" : 1097,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "# Repeat these commands twice.\n",
        "Line" : 1109,
        "CharPositionInLine" : 25
      },
      "38" : {
        "Text" : "# Repeat these commands twice.\n",
        "Line" : 1138,
        "CharPositionInLine" : 25
      },
      "39" : {
        "Text" : "# Add commands and targets for building dvi outputs.\n",
        "Line" : 1244,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Add commands and targets for building pdf outputs (with pdflatex).\n",
        "Line" : 1257,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Since both the pdf and safepdf targets have the same output, we\n\n# cannot properly do the dependencies for both.  When selecting safepdf,\n\n# simply force a recompile every time.\n",
        "Line" : 1285,
        "CharPositionInLine" : 6
      },
      "42" : {
        "Text" : "# htlatex places the output in a different location\n",
        "Line" : 1305,
        "CharPositionInLine" : 6
      },
      "43" : {
        "Text" : "#############################################################################\n\n# Actually do stuff\n\n#############################################################################\n",
        "Line" : 1364,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Must be part of the actual configure (included from CMakeLists.txt).\n",
        "Line" : 1391,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 45
    },
    "dev-tools/math/fftest/Makefile" : {
      "ObjectId" : "16b5785ea9e79164cf7a6b52176e9e81d3f38117",
      "LastModified" : "2018-10-05T12:55:42Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# LIBS=           -lm -lgslcblas -lgsl -lyaml-cpp\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# source from BornAgain overwrites -lBornAgainCore, cf http://stackoverflow.com/questions/36667429\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 79,
    "MAKEFILE" : 1,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 7550
}