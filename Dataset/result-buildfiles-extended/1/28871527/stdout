{
  "Repository" : "28871527",
  "Revision" : "HEAD",
  "ObjectId" : "6d53e923432a1058b786703d9aea0d032a1452c2",
  "CommitTime" : "2019-04-13T19:01:37Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "efb5ea9cbdae4ce06c528ff457548c8847f91051",
      "LastModified" : "2018-11-06T14:02:51Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "catkin_ws/src/00-infrastructure/Makefile" : {
      "ObjectId" : "5dfbfeb4f79a483d7256143ddf27c6ab67a7edfd",
      "LastModified" : "2018-07-08T14:44:03Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# docker build -t $(docker_image_name):$(tag) $(docker_dir)\n",
        "Line" : 6,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# docker push $(docker_image_name):$(tag)\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Kill all running containers:\n",
        "Line" : 14,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Delete all stopped containers (including data-only containers):\n",
        "Line" : 17,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Delete all exited containers\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Delete all images\n",
        "Line" : 23,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#docker-run:\n\n#\tdocker run -it $(docker_image_name):$(tag) python -m duckietown_utils\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "catkin_ws/src/00-infrastructure/duckieteam/CMakeLists.txt" : {
      "ObjectId" : "c8899b9c17afd36beba76bd858d6f1c3d1970399",
      "LastModified" : "2018-07-08T14:44:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/00-infrastructure/duckietown/CMakeLists.txt" : {
      "ObjectId" : "b12a483ef68ea0403258c7ded607c5da583c9a30",
      "LastModified" : "2018-07-08T14:44:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# duckietown_msgs # Every duckietown packages should use this.\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/00-infrastructure/duckietown_msgs/CMakeLists.txt" : {
      "ObjectId" : "1716c8fe0fc7136c26b372e63778e1b21a409129",
      "LastModified" : "2018-09-16T18:21:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Generate messages in the 'msg' folder\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  LEDControl.msg\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  IntersectionDetection.msg\n\n#  CoordinationSignal.msg\n\n#  TrafficLightDetection.msg\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  VehicleDetection.msg\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Generate services in the 'srv' folder\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Service2.srv\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES duckietown_msgs\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#  DEPENDS system_lib\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "catkin_ws/src/00-infrastructure/easy_algo/CMakeLists.txt" : {
      "ObjectId" : "0775bb7b0363dfdd34a4ec53a8baef804c446808",
      "LastModified" : "2018-07-08T14:44:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#duckietown_msgs # Every duckietown packages should use this.\n\n#cv_bridge\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/00-infrastructure/easy_logs/CMakeLists.txt" : {
      "ObjectId" : "038b2d8e7c74b7bcfba70e2cdcf2b968aca46e6a",
      "LastModified" : "2018-07-08T14:44:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#roscpp\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#duckietown_msgs # Every duckietown packages should use this.\n\n#cv_bridge\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "catkin_ws/src/00-infrastructure/easy_node/CMakeLists.txt" : {
      "ObjectId" : "de91e1228eb274ec5757a79e420de6df306d57ba",
      "LastModified" : "2018-07-08T14:44:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages should use this.\n",
        "Line" : 7,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/00-infrastructure/easy_regression/CMakeLists.txt" : {
      "ObjectId" : "ed2dcda9ae6bcd98f1100eb7e060b5c9a02983ff",
      "LastModified" : "2018-07-08T14:44:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#roscpp\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#duckietown_msgs # Every duckietown packages should use this.\n\n#cv_bridge\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "catkin_ws/src/00-infrastructure/ros_diagram/Makefile" : {
      "ObjectId" : "e5bc9b03a6d739117963f710072db1fd30daf056",
      "LastModified" : "2018-07-08T14:44:03Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# upload-andrea:\n\n# \tcp Duckietown_ROS_Diagram.pdf /Users/andrea/a.censi@gmail.com/1601-Duckietown/duckietown-public/design/Duckietown_ROS_Diagram.pdf\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/00-infrastructure/what_the_duck/CMakeLists.txt" : {
      "ObjectId" : "b51a9c9838a99daa3f468b0bedd8c10e9440b118",
      "LastModified" : "2018-07-08T14:44:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#duckietown_msgs\n\n#roscpp\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/05-teleop/adafruit_drivers/CMakeLists.txt" : {
      "ObjectId" : "7d1a3aa382440fd4d8fb33ff99c800dfedc0c253",
      "LastModified" : "2018-07-08T14:44:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# roscpp\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# duckietown_msgs # Every duckietown packages should use this.\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "catkin_ws/src/05-teleop/dagu_car/CMakeLists.txt" : {
      "ObjectId" : "61ed013d37659e676153aa2ab66ba33c03278968",
      "LastModified" : "2018-07-08T14:44:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages should use this.\n",
        "Line" : 10,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/05-teleop/joy_mapper/CMakeLists.txt" : {
      "ObjectId" : "8b023c39f59e5f306a14659ff265a0e7efafd960",
      "LastModified" : "2018-07-08T14:44:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/05-teleop/pi_camera/CMakeLists.txt" : {
      "ObjectId" : "bba5ab53f7176ff33b3d81d8fb1e00d863883669",
      "LastModified" : "2018-07-08T14:44:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages should use this.\n",
        "Line" : 7,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/10-lane-control/anti_instagram/CMakeLists.txt" : {
      "ObjectId" : "9e9aff71411eea691bc89e62cf64c3836b78ac04",
      "LastModified" : "2018-07-08T14:44:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/10-lane-control/complete_image_pipeline/CMakeLists.txt" : {
      "ObjectId" : "283fc857253999a55417e34b1eb562ca02ce9351",
      "LastModified" : "2018-07-08T14:44:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/10-lane-control/ground_projection/CMakeLists.txt" : {
      "ObjectId" : "1e5181926616737c757a37c66e750faa33769cb1",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# libyaml-cpp-dev\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES ground_projection\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  DEPENDS system_lib\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "catkin_ws/src/10-lane-control/lane_control/CMakeLists.txt" : {
      "ObjectId" : "a802257a06a6cc20d4aaf1232ce653aa6307796b",
      "LastModified" : "2018-07-08T14:44:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/10-lane-control/lane_filter/CMakeLists.txt" : {
      "ObjectId" : "3be110326e58309f7f83a871d81f8f59771bc3df",
      "LastModified" : "2018-07-08T14:44:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages should use this.\n",
        "Line" : 7,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/10-lane-control/line_detector/CMakeLists.txt" : {
      "ObjectId" : "95e12428108183c3039ac51f7689dc7508213094",
      "LastModified" : "2018-07-08T14:44:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages should use this.\n",
        "Line" : 7,
        "CharPositionInLine" : 18
      },
      "1" : {
        "Text" : "# XXX add anti_instagram?\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "catkin_ws/src/10-lane-control/line_detector2/CMakeLists.txt" : {
      "ObjectId" : "e875a18d892f924e57028c59031045ebd703f40f",
      "LastModified" : "2018-07-08T14:44:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages should use this.\n",
        "Line" : 7,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/20-indefinite-navigation/apriltags2_ros/apriltags2/CMakeLists.txt" : {
      "ObjectId" : "35db3bd7557c773ef821700faf5149551bb623f7",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Mark executables and/or libraries for installation\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Mark cpp header files for installation\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "catkin_ws/src/20-indefinite-navigation/apriltags2_ros/apriltags2_ros/CMakeLists.txt" : {
      "ObjectId" : "fdc0482cc1ef9552688686f5a34dc3025a175e13",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the build type.  Options are:\n\n#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage\n\n#  Debug          : w/ debug symbols, w/o optimization\n\n#  Release        : w/o debug symbols, w/ optimization\n\n#  RelWithDebInfo : w/ debug symbols, w/ optimization\n\n#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -march=native -msse2 \")\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "catkin_ws/src/20-indefinite-navigation/apriltags_ros/apriltags/CMakeLists.txt" : {
      "ObjectId" : "41d14d397c2a3cd4864847daeae974b35bf0abb1",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Mark executables and/or libraries for installation\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Mark cpp header files for installation\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "catkin_ws/src/20-indefinite-navigation/apriltags_ros/apriltags_ros/CMakeLists.txt" : {
      "ObjectId" : "7c4845eddb3180941c494726a342ff8a2960c186",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Mark executables and/or libraries for installation\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Mark cpp header files for installation\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "catkin_ws/src/20-indefinite-navigation/auto_calibration/CMakeLists.txt" : {
      "ObjectId" : "aa580ac6612443b24fe9acad9ea5db7cec2c633e",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages should use this.\n",
        "Line" : 7,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/20-indefinite-navigation/charging_control/CMakeLists.txt" : {
      "ObjectId" : "4e1f5ed28e1fd887bb8f6590cf8ea9f8cf499c90",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages should use this.\n",
        "Line" : 7,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/20-indefinite-navigation/fleet_planning/CMakeLists.txt" : {
      "ObjectId" : "c57de2b18756f2fb623b2d12f8968f5a11253037",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## -- UNCOMMENT BELOW LINE FOR LAPTOP BUILD -- ##\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#rqt_gui_py\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES fleet_planning\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  DEPENDS system_lib\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "catkin_ws/src/20-indefinite-navigation/fsm/CMakeLists.txt" : {
      "ObjectId" : "d7a2a8e0a74f30af1e3a9a0ee1bf54dcd8fb9479",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages should use this.\n",
        "Line" : 7,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/20-indefinite-navigation/indefinite_navigation/CMakeLists.txt" : {
      "ObjectId" : "390f429485421dd4ac9d69a95b66e7b76f7c0b8a",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/20-indefinite-navigation/intersection_control/CMakeLists.txt" : {
      "ObjectId" : "609b61e835b2b371604b65fdce143ec0011ba2bf",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages should use this.\n",
        "Line" : 7,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/20-indefinite-navigation/maintenance_control/CMakeLists.txt" : {
      "ObjectId" : "e696ae5da8b83433547dc0309ae833707bda2e55",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages should use this.\n",
        "Line" : 7,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/20-indefinite-navigation/navigation/CMakeLists.txt" : {
      "ObjectId" : "97ad77eb3952fcaf35aee50c861d9f37d5bd322b",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## -- UNCOMMENT BELOW LINE FOR LAPTOP BUILD -- ##\n\n##  rqt_gui_py\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES navigation\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  DEPENDS system_lib\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "catkin_ws/src/20-indefinite-navigation/stop_line_filter/CMakeLists.txt" : {
      "ObjectId" : "61fe00ab6325b38f9b36af998d8403bceb0ffad4",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages should use this.\n",
        "Line" : 7,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/20-indefinite-navigation/unicorn_intersection/CMakeLists.txt" : {
      "ObjectId" : "a6fcee7919d311b565d762c4ee0f42b714a83cc6",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages should use this.\n",
        "Line" : 7,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/30-localization-and-planning/duckietown_description/CMakeLists.txt" : {
      "ObjectId" : "64c0aee256f09f1928fa60884bb26c372a0ab0f4",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/30-localization-and-planning/localization/CMakeLists.txt" : {
      "ObjectId" : "6c394c7c3b65e45e2b4c8b3b9813fde093858e83",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/40-coordination/explicit_coordinator/CMakeLists.txt" : {
      "ObjectId" : "bdee20db57d169ce122a9b46b5b0411d59df0a1e",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/40-coordination/implicit_coordination/CMakeLists.txt" : {
      "ObjectId" : "5e6d588b12ac0ce2636ae3b05d8e760bdcff8907",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages must use this.\n",
        "Line" : 8,
        "CharPositionInLine" : 18
      },
      "1" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES pkg_name\n\n#  CATKIN_DEPENDS duckietown_msgs roscpp rospy\n\n#  DEPENDS system_lib\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "catkin_ws/src/40-coordination/led_detection/CMakeLists.txt" : {
      "ObjectId" : "89282a5c8ccb07285ac9fc2c4c8d091281a2f0ea",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/40-coordination/led_emitter/CMakeLists.txt" : {
      "ObjectId" : "0ead3710bf447f2b85bde129e528a8e96b5aa02e",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# catkin_python_setup()\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/40-coordination/led_emitter/Makefile" : {
      "ObjectId" : "b75b928f20ef9ea4f509a17db62e4e31b422c27f",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "catkin_ws/src/40-coordination/led_interpreter/CMakeLists.txt" : {
      "ObjectId" : "165ff29dcddf5554a41e4f3e64c0ab8dfdcff34d",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/40-coordination/led_joy_mapper/CMakeLists.txt" : {
      "ObjectId" : "01abbc20c2aa36e55069bdb0c43d76f690eb17f9",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/40-coordination/rgb_led/CMakeLists.txt" : {
      "ObjectId" : "1855894ef1ff01c60ea447d504700a369f407752",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages should use this.\n",
        "Line" : 6,
        "CharPositionInLine" : 17
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/40-coordination/traffic_light/CMakeLists.txt" : {
      "ObjectId" : "d5e86deec2ceacc13f7a7fed52f641fa49bc0201",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/45-communication/tcp_communication/CMakeLists.txt" : {
      "ObjectId" : "6b0553d2cbcb0e5966db988e2d0660a42b0a3287",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages should use this.\n",
        "Line" : 7,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/50-misc-additional-functionality/mdoap/CMakeLists.txt" : {
      "ObjectId" : "55f053985b29b2aeb1b0310b08b5fa90441318ed",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/50-misc-additional-functionality/multivehicle_tracker/CMakeLists.txt" : {
      "ObjectId" : "480bfb5a943b5c8fdd317f7530c3d2f65e0c5152",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Every duckietown packages must use this.\n",
        "Line" : 10,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "# Every duckietown packages must use this.\n",
        "Line" : 27,
        "CharPositionInLine" : 18
      },
      "3" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "catkin_ws/src/50-misc-additional-functionality/obst_avoid/CMakeLists.txt" : {
      "ObjectId" : "1323f2039f660e3116e5b8bfab975d2b07fcb029",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages must use this.\n",
        "Line" : 7,
        "CharPositionInLine" : 18
      },
      "1" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES pkg_name\n\n#  CATKIN_DEPENDS duckietown_msgs roscpp rospy\n\n#  DEPENDS system_lib\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "catkin_ws/src/50-misc-additional-functionality/parallel_autonomy/CMakeLists.txt" : {
      "ObjectId" : "978b0df3f260bde931ae26e94e7268210c4cc309",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages should use this.\n",
        "Line" : 7,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/50-misc-additional-functionality/steering_wheel/CMakeLists.txt" : {
      "ObjectId" : "8dea6731b18809266643cb10acbe32fcf1921cb2",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages should use this.\n",
        "Line" : 7,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/50-misc-additional-functionality/vehicle_detection/CMakeLists.txt" : {
      "ObjectId" : "59c409e23a938a4f449d5058933e72774da3a638",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/60-templates/pkg_name/CMakeLists.txt" : {
      "ObjectId" : "e9323d7ccba0ece5395d9198b90970eecb193d06",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Every duckietown packages must use this.\n",
        "Line" : 10,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################\n\n## Declare ROS messages, services and actions ##\n\n################################################\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## To declare and build messages, services or actions from within this\n\n## package, follow these steps:\n\n## * Let MSG_DEP_SET be the set of packages whose message types you use in\n\n##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).\n\n## * In the file package.xml:\n\n##   * add a build_depend tag for \"message_generation\"\n\n##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET\n\n##   * If MSG_DEP_SET isn't empty the following dependency has been pulled in\n\n##     but can be declared for certainty nonetheless:\n\n##     * add a run_depend tag for \"message_runtime\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"message_generation\" and every package in MSG_DEP_SET to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * add \"message_runtime\" and every package in MSG_DEP_SET to\n\n##     catkin_package(CATKIN_DEPENDS ...)\n\n##   * uncomment the add_*_files sections below as needed\n\n##     and list every .msg/.srv/.action file to be processed\n\n##   * uncomment the generate_messages entry below\n\n##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Generate actions in the 'action' folder\n\n# add_action_files(\n\n#   FILES\n\n#   Action1.action\n\n#   Action2.action\n\n# )\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   duckietown_msgs\n\n# )\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "################################################\n\n## Declare ROS dynamic reconfigure parameters ##\n\n################################################\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## To declare and build dynamic reconfigure parameters within this\n\n## package, follow these steps:\n\n## * In the file package.xml:\n\n##   * add a build_depend and a run_depend tag for \"dynamic_reconfigure\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"dynamic_reconfigure\" to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * uncomment the \"generate_dynamic_reconfigure_options\" section below\n\n##     and list every .cfg file to be processed\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Generate dynamic reconfigure parameters in the 'cfg' folder\n\n# generate_dynamic_reconfigure_options(\n\n#   cfg/DynReconf1.cfg\n\n#   cfg/DynReconf2.cfg\n\n# )\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES pkg_name\n\n#  CATKIN_DEPENDS duckietown_msgs roscpp rospy\n\n#  DEPENDS system_lib\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Declare a C++ library\n\n# add_library(pkg_name\n\n#   src/${PROJECT_NAME}/pkg_name.cpp\n\n# )\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Add cmake target dependencies of the library\n\n## as an example, code may need to be generated before libraries\n\n## either from message generation or dynamic reconfigure\n\n# add_dependencies(pkg_name ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Declare a C++ executable\n\n# add_executable(pkg_name_node src/pkg_name_node.cpp)\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Add cmake target dependencies of the executable\n\n## same as for the library above\n\n# add_dependencies(pkg_name_node ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(pkg_name_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS pkg_name pkg_name_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_pkg_name.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "catkin_ws/src/60-templates/rostest_example/CMakeLists.txt" : {
      "ObjectId" : "ae678dbcd220cf1e717fc1c43b9d05c4c9a20425",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################\n\n## Declare ROS messages, services and actions ##\n\n################################################\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## To declare and build messages, services or actions from within this\n\n## package, follow these steps:\n\n## * Let MSG_DEP_SET be the set of packages whose message types you use in\n\n##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).\n\n## * In the file package.xml:\n\n##   * add a build_depend tag for \"message_generation\"\n\n##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET\n\n##   * If MSG_DEP_SET isn't empty the following dependency has been pulled in\n\n##     but can be declared for certainty nonetheless:\n\n##     * add a run_depend tag for \"message_runtime\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"message_generation\" and every package in MSG_DEP_SET to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * add \"message_runtime\" and every package in MSG_DEP_SET to\n\n##     catkin_package(CATKIN_DEPENDS ...)\n\n##   * uncomment the add_*_files sections below as needed\n\n##     and list every .msg/.srv/.action file to be processed\n\n##   * uncomment the generate_messages entry below\n\n##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Generate actions in the 'action' folder\n\n# add_action_files(\n\n#   FILES\n\n#   Action1.action\n\n#   Action2.action\n\n# )\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   std_msgs  # Or other packages containing msgs\n\n# )\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "################################################\n\n## Declare ROS dynamic reconfigure parameters ##\n\n################################################\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## To declare and build dynamic reconfigure parameters within this\n\n## package, follow these steps:\n\n## * In the file package.xml:\n\n##   * add a build_depend and a run_depend tag for \"dynamic_reconfigure\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"dynamic_reconfigure\" to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * uncomment the \"generate_dynamic_reconfigure_options\" section below\n\n##     and list every .cfg file to be processed\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Generate dynamic reconfigure parameters in the 'cfg' folder\n\n# generate_dynamic_reconfigure_options(\n\n#   cfg/DynReconf1.cfg\n\n#   cfg/DynReconf2.cfg\n\n# )\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES rostest_example\n\n#  CATKIN_DEPENDS roscpp rospy\n\n#  DEPENDS system_lib\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Declare a C++ library\n\n# add_library(rostest_example\n\n#   src/${PROJECT_NAME}/rostest_example.cpp\n\n# )\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Add cmake target dependencies of the library\n\n## as an example, code may need to be generated before libraries\n\n## either from message generation or dynamic reconfigure\n\n# add_dependencies(rostest_example ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Declare a C++ executable\n\n# add_executable(rostest_example_node src/rostest_example_node.cpp)\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Add cmake target dependencies of the executable\n\n## same as for the library above\n\n# add_dependencies(rostest_example_node ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(rostest_example_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS rostest_example rostest_example_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_rostest_example.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "catkin_ws/src/70-convenience-packages/duckie_rr_bridge/CMakeLists.txt" : {
      "ObjectId" : "1c20be5a03c4eee539e50d4a192ed03226521977",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#catkin_python_setup()\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Specify additional locations of header files\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "catkin_ws/src/70-convenience-packages/duckiebot_visualizer/CMakeLists.txt" : {
      "ObjectId" : "c71e4fae73e63123bddf2929554516a8c52bf3c8",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages should use this.\n",
        "Line" : 7,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/70-convenience-packages/duckietown_demos/CMakeLists.txt" : {
      "ObjectId" : "522dd0e974264bf652cdb9160f400e815913fab3",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/70-convenience-packages/duckietown_unit_test/CMakeLists.txt" : {
      "ObjectId" : "b4e93d56b6467be02e2f62e0be19ec8e44e26e69",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# roscpp\n\n# rospy\n\n# duckietown_msgs # Every duckietown_unit_test packages should use this.\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/70-convenience-packages/multivehicle_tracking_visualizer/CMakeLists.txt" : {
      "ObjectId" : "ffcbb74edbb6213af534094a9646ac7cb88f7552",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "catkin_ws/src/70-convenience-packages/veh_coordinator/CMakeLists.txt" : {
      "ObjectId" : "4aeb2ca65a74ba8af46b75d64b7939adeaaba88d",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/75-notebooks/similarity/Makefile" : {
      "ObjectId" : "0583e29d78265fe3f0d5fc5ee7e7274193252c83",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "catkin_ws/src/80-deep-learning/object_detection/CMakeLists.txt" : {
      "ObjectId" : "122fe8c57c322cf3b02c6c29b6d52579941c5c80",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Every duckietown packages must use this.\n",
        "Line" : 10,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "# Every duckietown packages must use this.\n",
        "Line" : 27,
        "CharPositionInLine" : 18
      },
      "3" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "catkin_ws/src/90-failed/f4-devel/bag_stamper/CMakeLists.txt" : {
      "ObjectId" : "9a28ffd7bb1dd842f249d7065b3f991030bab6cb",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/90-failed/f4-devel/kinematics/CMakeLists.txt" : {
      "ObjectId" : "3b4450f9f7c779fadaa81e7f5ab8fa864e22260a",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   INCLUDE_DIRS include\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/90-failed/f4-devel/visual_odometry/CMakeLists.txt" : {
      "ObjectId" : "6bf7e904104541534b2546a43443440da1cee88e",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/90-failed/isam/CMakeLists.txt" : {
      "ObjectId" : "8901edd1a9e9f0a3570557e4ae2bffb0147ccd90",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# iSAM master cmake file\n\n# Michael Kaess, 2010\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# do not edit - use ccmake to change\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# SDL is optional\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# note: -g automatic for Debug mode, -O3 -DNDEBUG automatic for Release\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Eigen3 is needed\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "catkin_ws/src/90-failed/isam/Makefile" : {
      "ObjectId" : "8222a4794d1cc0c3e344de346a4998a7a50bff17",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# iSAM Makefile\n\n# providing shortcuts to cmake for building outside the source tree\n\n# Michael Kaess, 2010\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# default parameters, including multi-core building\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# creates isam libraries and isam binary\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# generate documentation (requires doxygen and graphviz)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# remove all generated files and directories\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# clean up in case \"cmake .\" was called\n",
        "Line" : 21,
        "CharPositionInLine" : 40
      },
      "6" : {
        "Text" : "# internal target: the actual build directory\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# internal target: populate the build directory\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# create all executables in the examples/ directory\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# create all executables in the misc/ directory\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# default target: any target such as \"clean\", \"example\"...\n\n# is simply passed on to the cmake-generated Makefile \n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "catkin_ws/src/90-failed/isam/cmake/FindCholmod.cmake" : {
      "ObjectId" : "a5e132b64d366d01f35eab6da40c6667f0bdadf2",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Cholmod lib usually requires linking to a blas and lapack library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/90-failed/isam/cmake/FindEigen3.cmake" : {
      "ObjectId" : "9c546a05d859b18c49554d7ee7221cc486b7760e",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "catkin_ws/src/90-failed/isam/examples/CMakeLists.txt" : {
      "ObjectId" : "9220dcaef3f024594c117ddd916bf875feaf9db4",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# generate a target for each .cpp file in this directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/90-failed/isam/isam/CMakeLists.txt" : {
      "ObjectId" : "f5c51a3b36800f3fe6e3a7f3d10fbc512dcd5b81",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# main iSAM executable (for processing files, timing, includes GUI, LCM interface)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/90-failed/isam/isam/lcmtypes/CMakeLists.txt" : {
      "ObjectId" : "4d8ca68a84ef663d00afb1d7d6d597ce4905d8a4",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/90-failed/isam/isamlib/CMakeLists.txt" : {
      "ObjectId" : "eb59aac20c48788d7992797634778283dd8c85a3",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find all source and header files\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# isamlib\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# simple way of finding CHOLMOD\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# install library\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# install header files\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "catkin_ws/src/90-failed/isam/misc/CMakeLists.txt" : {
      "ObjectId" : "2fcd2f72c174dc74455e87e4c40ab3aaee88774a",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# generate a target for each .cpp file in this directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/90-failed/mouse_encoder/CMakeLists.txt" : {
      "ObjectId" : "927030dfda0e4661324e3fdb6123f659719961cb",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/90-failed/simcity/CMakeLists.txt" : {
      "ObjectId" : "11ace65573f58b576efccae8c0950eef7dff9d6a",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown package should use this.\n",
        "Line" : 8,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/90-failed/slam/CMakeLists.txt" : {
      "ObjectId" : "9037a872e1f44752b2e52acbc49e19b680480eec",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/90-failed/street_name_detector/CMakeLists.txt" : {
      "ObjectId" : "d5cd3853f2c43a19b5841a52f6399926c8f94794",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Every duckietown packages should use this.\n",
        "Line" : 11,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################\n\n## Declare ROS messages, services and actions ##\n\n################################################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## To declare and build messages, services or actions from within this\n\n## package, follow these steps:\n\n## * Let MSG_DEP_SET be the set of packages whose message types you use in\n\n##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).\n\n## * In the file package.xml:\n\n##   * add a build_depend tag for \"message_generation\"\n\n##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET\n\n##   * If MSG_DEP_SET isn't empty the following dependency has been pulled in\n\n##     but can be declared for certainty nonetheless:\n\n##     * add a run_depend tag for \"message_runtime\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"message_generation\" and every package in MSG_DEP_SET to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * add \"message_runtime\" and every package in MSG_DEP_SET to\n\n##     catkin_package(CATKIN_DEPENDS ...)\n\n##   * uncomment the add_*_files sections below as needed\n\n##     and list every .msg/.srv/.action file to be processed\n\n##   * uncomment the generate_messages entry below\n\n##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Generate actions in the 'action' folder\n\n# add_action_files(\n\n#   FILES\n\n#   Action1.action\n\n#   Action2.action\n\n# )\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   duckietown_msgs\n\n# )\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "################################################\n\n## Declare ROS dynamic reconfigure parameters ##\n\n################################################\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## To declare and build dynamic reconfigure parameters within this\n\n## package, follow these steps:\n\n## * In the file package.xml:\n\n##   * add a build_depend and a run_depend tag for \"dynamic_reconfigure\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"dynamic_reconfigure\" to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * uncomment the \"generate_dynamic_reconfigure_options\" section below\n\n##     and list every .cfg file to be processed\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Generate dynamic reconfigure parameters in the 'cfg' folder\n\n# generate_dynamic_reconfigure_options(\n\n#   cfg/DynReconf1.cfg\n\n#   cfg/DynReconf2.cfg\n\n# )\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#  CATKIN_DEPENDS duckietown_msgs roscpp rospy apriltags\n\n#  DEPENDS system_lib\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Declare a C++ library\n\n# add_library(street_name_detector\n\n#   src/${PROJECT_NAME}/street_name_detector.cpp\n\n# )\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Add cmake target dependencies of the library\n\n## as an example, code may need to be generated before libraries\n\n## either from message generation or dynamic reconfigure\n\n# add_dependencies(street_name_detector ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Declare a C++ executable\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Add cmake target dependencies of the executable\n\n## same as for the library above\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Specify libraries to link a library or executable target against\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS street_name_detector street_name_detector_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_street_name_detector.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "catkin_ws/src/95-blockly/blockly_controller/CMakeLists.txt" : {
      "ObjectId" : "b00637e00f071a9b855d331da143cc4b8244c871",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/99-attic/adafruit_imu/CMakeLists.txt" : {
      "ObjectId" : "98ea41dde446218bdcab6fd553182d765d4bec1b",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/99-attic/anti_insta/annotation/camera_rectifier/CMakeLists.txt" : {
      "ObjectId" : "7cfd78d5f125e67ba19e4b1041fe5912946b91e0",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Every duckietown packages must use this.\n",
        "Line" : 10,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################\n\n## Declare ROS messages, services and actions ##\n\n################################################\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## To declare and build messages, services or actions from within this\n\n## package, follow these steps:\n\n## * Let MSG_DEP_SET be the set of packages whose message types you use in\n\n##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).\n\n## * In the file package.xml:\n\n##   * add a build_depend tag for \"message_generation\"\n\n##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET\n\n##   * If MSG_DEP_SET isn't empty the following dependency has been pulled in\n\n##     but can be declared for certainty nonetheless:\n\n##     * add a run_depend tag for \"message_runtime\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"message_generation\" and every package in MSG_DEP_SET to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * add \"message_runtime\" and every package in MSG_DEP_SET to\n\n##     catkin_package(CATKIN_DEPENDS ...)\n\n##   * uncomment the add_*_files sections below as needed\n\n##     and list every .msg/.srv/.action file to be processed\n\n##   * uncomment the generate_messages entry below\n\n##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Generate actions in the 'action' folder\n\n# add_action_files(\n\n#   FILES\n\n#   Action1.action\n\n#   Action2.action\n\n# )\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   duckietown_msgs\n\n# )\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "################################################\n\n## Declare ROS dynamic reconfigure parameters ##\n\n################################################\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## To declare and build dynamic reconfigure parameters within this\n\n## package, follow these steps:\n\n## * In the file package.xml:\n\n##   * add a build_depend and a run_depend tag for \"dynamic_reconfigure\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"dynamic_reconfigure\" to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * uncomment the \"generate_dynamic_reconfigure_options\" section below\n\n##     and list every .cfg file to be processed\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Generate dynamic reconfigure parameters in the 'cfg' folder\n\n# generate_dynamic_reconfigure_options(\n\n#   cfg/DynReconf1.cfg\n\n#   cfg/DynReconf2.cfg\n\n# )\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES pkg_name\n\n#  CATKIN_DEPENDS duckietown_msgs roscpp rospy\n\n#  DEPENDS system_lib\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Declare a C++ library\n\n# add_library(pkg_name\n\n#   src/${PROJECT_NAME}/pkg_name.cpp\n\n# )\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Add cmake target dependencies of the library\n\n## as an example, code may need to be generated before libraries\n\n## either from message generation or dynamic reconfigure\n\n# add_dependencies(pkg_name ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Declare a C++ executable\n\n# add_executable(pkg_name_node src/pkg_name_node.cpp)\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Add cmake target dependencies of the executable\n\n## same as for the library above\n\n# add_dependencies(pkg_name_node ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(pkg_name_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS pkg_name pkg_name_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_pkg_name.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "catkin_ws/src/99-attic/car_supervisor/CMakeLists.txt" : {
      "ObjectId" : "9b44b56cd6567d48bf6745975ade059e1f50d64f",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/99-attic/intersection_localization/CMakeLists.txt" : {
      "ObjectId" : "0deeff026915f3b41497ec6733e00899b98a654f",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages should use this.\n",
        "Line" : 7,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/99-attic/intersection_navigation/CMakeLists.txt" : {
      "ObjectId" : "922e6e32313e519cd926680919fa2ec2801bdf93",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages should use this.\n",
        "Line" : 7,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "catkin_ws/src/99-attic/personal/CMakeLists.txt" : {
      "ObjectId" : "a6893efc0de58eec23a4ba39e7d77868daf7d079",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Every duckietown packages must use this.\n",
        "Line" : 10,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################\n\n## Declare ROS messages, services and actions ##\n\n################################################\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## To declare and build messages, services or actions from within this\n\n## package, follow these steps:\n\n## * Let MSG_DEP_SET be the set of packages whose message types you use in\n\n##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).\n\n## * In the file package.xml:\n\n##   * add a build_depend tag for \"message_generation\"\n\n##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET\n\n##   * If MSG_DEP_SET isn't empty the following dependency has been pulled in\n\n##     but can be declared for certainty nonetheless:\n\n##     * add a run_depend tag for \"message_runtime\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"message_generation\" and every package in MSG_DEP_SET to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * add \"message_runtime\" and every package in MSG_DEP_SET to\n\n##     catkin_package(CATKIN_DEPENDS ...)\n\n##   * uncomment the add_*_files sections below as needed\n\n##     and list every .msg/.srv/.action file to be processed\n\n##   * uncomment the generate_messages entry below\n\n##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Generate actions in the 'action' folder\n\n# add_action_files(\n\n#   FILES\n\n#   Action1.action\n\n#   Action2.action\n\n# )\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   duckietown_msgs\n\n# )\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "################################################\n\n## Declare ROS dynamic reconfigure parameters ##\n\n################################################\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## To declare and build dynamic reconfigure parameters within this\n\n## package, follow these steps:\n\n## * In the file package.xml:\n\n##   * add a build_depend and a run_depend tag for \"dynamic_reconfigure\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"dynamic_reconfigure\" to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * uncomment the \"generate_dynamic_reconfigure_options\" section below\n\n##     and list every .cfg file to be processed\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Generate dynamic reconfigure parameters in the 'cfg' folder\n\n# generate_dynamic_reconfigure_options(\n\n#   cfg/DynReconf1.cfg\n\n#   cfg/DynReconf2.cfg\n\n# )\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES pkg_name\n\n#  CATKIN_DEPENDS duckietown_msgs roscpp rospy\n\n#  DEPENDS system_lib\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Declare a C++ library\n\n# add_library(pkg_name\n\n#   src/${PROJECT_NAME}/pkg_name.cpp\n\n# )\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Add cmake target dependencies of the library\n\n## as an example, code may need to be generated before libraries\n\n## either from message generation or dynamic reconfigure\n\n# add_dependencies(pkg_name ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Declare a C++ executable\n\n# add_executable(pkg_name_node src/pkg_name_node.cpp)\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Add cmake target dependencies of the executable\n\n## same as for the library above\n\n# add_dependencies(pkg_name_node ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(pkg_name_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS pkg_name pkg_name_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_pkg_name.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "catkin_ws/src/99-attic/personal/dt_live_instagram_duckbrown/CMakeLists.txt" : {
      "ObjectId" : "76476570695ec2c644d3a55a8b9bdc22b863904c",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Every duckietown packages must use this.\n",
        "Line" : 10,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################\n\n## Declare ROS messages, services and actions ##\n\n################################################\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## To declare and build messages, services or actions from within this\n\n## package, follow these steps:\n\n## * Let MSG_DEP_SET be the set of packages whose message types you use in\n\n##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).\n\n## * In the file package.xml:\n\n##   * add a build_depend tag for \"message_generation\"\n\n##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET\n\n##   * If MSG_DEP_SET isn't empty the following dependency has been pulled in\n\n##     but can be declared for certainty nonetheless:\n\n##     * add a run_depend tag for \"message_runtime\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"message_generation\" and every package in MSG_DEP_SET to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * add \"message_runtime\" and every package in MSG_DEP_SET to\n\n##     catkin_package(CATKIN_DEPENDS ...)\n\n##   * uncomment the add_*_files sections below as needed\n\n##     and list every .msg/.srv/.action file to be processed\n\n##   * uncomment the generate_messages entry below\n\n##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Generate actions in the 'action' folder\n\n# add_action_files(\n\n#   FILES\n\n#   Action1.action\n\n#   Action2.action\n\n# )\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   duckietown_msgs\n\n# )\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "################################################\n\n## Declare ROS dynamic reconfigure parameters ##\n\n################################################\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## To declare and build dynamic reconfigure parameters within this\n\n## package, follow these steps:\n\n## * In the file package.xml:\n\n##   * add a build_depend and a run_depend tag for \"dynamic_reconfigure\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"dynamic_reconfigure\" to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * uncomment the \"generate_dynamic_reconfigure_options\" section below\n\n##     and list every .cfg file to be processed\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Generate dynamic reconfigure parameters in the 'cfg' folder\n\n# generate_dynamic_reconfigure_options(\n\n#   cfg/DynReconf1.cfg\n\n#   cfg/DynReconf2.cfg\n\n# )\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES pkg_name\n\n#  CATKIN_DEPENDS duckietown_msgs roscpp rospy\n\n#  DEPENDS system_lib\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Declare a C++ library\n\n# add_library(pkg_name\n\n#   src/${PROJECT_NAME}/pkg_name.cpp\n\n# )\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Add cmake target dependencies of the library\n\n## as an example, code may need to be generated before libraries\n\n## either from message generation or dynamic reconfigure\n\n# add_dependencies(pkg_name ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Declare a C++ executable\n\n# add_executable(pkg_name_node src/pkg_name_node.cpp)\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Add cmake target dependencies of the executable\n\n## same as for the library above\n\n# add_dependencies(pkg_name_node ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(pkg_name_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS pkg_name pkg_name_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_pkg_name.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "catkin_ws/src/99-attic/scene_segmentation/CMakeLists.txt" : {
      "ObjectId" : "50949e986ed5f6dcd042905111f36748413d0b5b",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# std_msgs\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# geometry_msgs\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES scene_segmentation\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  DEPENDS system_lib\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Declare a C++ executable\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# src/egbis/segment-image.h\n\n# src/egbis/segment-graph.h\n\n# src/egbis/disjoint-set.h\n\n# src/egbis/image.h\n\n# src/egbis/filter.h\n\n# src/egbis/misc.h\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Add cmake target dependencies of the executable\n\n## same as for the library above\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "catkin_ws/src/99-attic/scene_segmentation/src/egbis/CMakeLists.txt" : {
      "ObjectId" : "61d2a69b564c3d1911e2bac8d145880aa0e98115",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin_ws/src/99-attic/visual_odometry_line/CMakeLists.txt" : {
      "ObjectId" : "281ef8ee08c4131fea372d274148b07b3feb2a4f",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Every duckietown packages should use this.\n",
        "Line" : 7,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "hardware/software/Makefile" : {
      "ObjectId" : "30b614ac4162bd5b051b18a090b8b9806881ff20",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# WinAVR Sample makefile written by Eric B. Weddington, J�rg Wunsch, et al.\n\n# Modified (bringing often-changed options to the top) by Elliot Williams\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make all = Make software and program\n\n# make clean = Clean out built project files.\n\n# make coff = Convert ELF to AVR COFF (for use with AVR Studio 3.x or VMLAB).\n\n# make extcoff = Convert ELF to AVR Extended COFF (for use with AVR Studio\n\n#                4.07 or greater).\n\n# make program = Download the hex file to the device, using avrdude.  Please\n\n#                customize the avrdude settings below first!\n\n# make filename.s = Just compile filename.c into the assembler code only\n\n# To rebuild project do \"make clean\" then \"make all\".\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Microcontroller Type\n\n# MCU = attiny13\n\n# MCU = attiny85\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MCU = atmega8\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Programming hardware: type avrdude -c ?\n\n# to get a full listing.\n\n# AVRDUDE_PROGRAMMER = usbtiny \n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#usbasp              # official name of \n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#AVRDUDE_PROGRAMMER = avrispmkII              # official name of \n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#AVRDUDE_PORT = usb\n\n#AVRDUDE_PORT = lpt1\t\t       # windows\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# 8MHz internal RC, no divider\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "############# Don't need to change below here for most purposes  (Elliot)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Optimization level, can be [0, 1, 2, 3, s]. 0 turns off optimization.\n\n# (Note: 3 is not always the best optimization level. See avr-libc FAQ.)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Output format. (can be srec, ihex, binary)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# If there is more than one source file, append them above, or modify and\n\n# uncomment the following:\n\n#SRC += foo.c bar.c\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# You can also wrap lines by appending a backslash to the end of the line:\n\n#SRC += baz.c \\\n#xyzzy.c\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# List Assembler source files here.\n\n# Make them always end in a capital .S.  Files ending in a lowercase .s\n\n# will not be considered source files but generated files (assembler\n\n# output from the compiler), and will be deleted upon \"make clean\"!\n\n# Even though the DOS/Win* filesystem matches both .s and .S the same,\n\n# it will preserve the spelling of the filenames, and gcc itself does\n\n# care about how the name is spelled on its command-line.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#     Each directory must be seperated by a space.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Optional compiler flags.\n\n#  -g:        generate debugging information (for GDB, or for COFF conversion)\n\n#  -O*:       optimization level\n\n#  -f...:     tuning, see gcc manual and avr-libc documentation\n\n#  -Wall...:  warning level\n\n#  -Wa,...:   tell GCC to pass this to the assembler.\n\n#    -ahlms:  create assembler listing\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Set a \"language standard\" compiler flag.\n\n#   Unremark just one line below to set the language standard to use.\n\n#   gnu99 = C99 + GNU extensions. See GCC manual for more information.\n\n#CFLAGS += -std=c89\n\n#CFLAGS += -std=gnu89\n\n#CFLAGS += -std=c99\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Optional assembler flags.\n\n#  -Wa,...:   tell GCC to pass this to the assembler.\n\n#  -ahlms:    create listing\n\n#  -gstabs:   have the assembler create line number information; note that\n\n#             for use in COFF files, additional information about filenames\n\n#             and function names needs to be present in the assembler source\n\n#             files -- see avr-libc docs [FIXME: not yet described there]\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Optional linker flags.\n\n#  -Wl,...:   tell GCC to pass this to linker.\n\n#  -Map:      create map file\n\n#  --cref:    add cross reference to  map file\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Additional libraries\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Minimalistic printf version\n\n#LDFLAGS += -Wl,-u,vfprintf -lprintf_min\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Floating point printf version (requires -lm below)\n\n#LDFLAGS += -Wl,-u,vfprintf -lprintf_flt\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# -lm = math library\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Programming support using avrdude. Settings and variables.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#AVRDUDE_WRITE_EEPROM = -U eeprom:w:$(TARGET).eep\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Uncomment the following if you want avrdude's erase cycle counter.\n\n# Note that this counter needs to be initialized first using -Yn,\n\n# see avrdude manual.\n\n#AVRDUDE_ERASE += -y\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Uncomment the following if you do /not/ wish a verification to be\n\n# performed after programming the device.\n\n#AVRDUDE_FLAGS += -V\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Increase verbosity level.  Please use this when submitting bug\n\n# reports about avrdude. See <http://savannah.nongnu.org/projects/avrdude> \n\n# to submit bug reports.\n\n#AVRDUDE_FLAGS += -v -v\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#Run while cable attached or don't\n\n#AVRDUDE_FLAGS += -E reset #keep chip disabled while cable attached\n\n#AVRDUDE_FLAGS += -E noreset\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#AVRDUDE_WRITE_FLASH = -U lfuse:w:0x04:m #run with 8 Mhz clock\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#AVRDUDE_WRITE_FLASH = -U lfuse:w:0x21:m #run with 1 Mhz clock #default clock mode\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#AVRDUDE_WRITE_FLASH = -U lfuse:w:0x01:m #run with 1 Mhz clock no start up time\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# ---------------------------------------------------------------------------\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Define directories, if needed.\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Define programs and commands.\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Programming support using avrdude.\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Define Messages\n\n# English\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Define all object files.\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define all listing files.\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Combine all necessary flags and optional flags.\n\n# Add target processor to flags.\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Default target: make program!\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Eye candy.\n\n# AVR Studio 3.x does not check make's exit code but relies on\n\n# the following magic strings to be generated by the compile job.\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Display size of file.\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Display compiler version information.\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Convert ELF to COFF for use in debugging / simulating in\n\n# AVR Studio or VMLAB.\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Program the device.  \n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Create final output files (.hex, .eep) from ELF output file.\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Create extended listing file from ELF output file.\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Create a symbol table from ELF output file.\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Link: create ELF output file from object files.\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Compile: create object files from C source files.\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Compile: create assembler files from C source files.\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Assemble: create object files from assembler source files.\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Target: clean project.\n",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Automatically generate C source code dependencies. \n\n# (Code originally taken from the GNU make user manual and modified \n\n# (See README.txt Credits).)\n\n#\n\n# Note that this will work with sh (bash) and sed that is shipped with WinAVR\n\n# (see the SHELL variable defined above).\n\n# This may not work with other shells or other seds.\n\n#\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Remove the '-' if you want to see the dependency files generated.\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Listing of phony targets.\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 60,
      "Errorlog" : "line 386:25 token recognition error at: '\\1'\nline 386:30 token recognition error at: '\\1'\n"
    },
    "misc/gallery/Makefile" : {
      "ObjectId" : "d6b90af6cbb3e2f0c00bc55cbeee6b04146ec20e",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "misc/glorious-git-graph/Makefile" : {
      "ObjectId" : "e4177ab5795a51460ea6129a9152ba9437ffd02a",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#rm -rf git-big-picture \n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "misc/pretty-graphs/Makefile" : {
      "ObjectId" : "92c8ca4555ee2fef7bb12ec4582f456dd977b6ba",
      "LastModified" : "2019-02-18T14:42:40Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# bash -c \"source environment.sh && ./make_videos.py --dir ~/duckietown-data/logs/ --console\"\n",
        "Line" : 28,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#bash -c \"source environment.sh && cd procgraph && python setup.py develop\"\n\n# bash -c \"source environment.sh && pip install https://github.com/AndreaCensi/procgraph/archive/env_fault.zip\"\n\n# git clone -b duckietown2016 git@github.com:AndreaCensi/procgraph.git\n\n# git clone -b duckietown2016 git@github.com:AndreaCensi/procgraph.git\n\n# git clone -b duckietown2016 git@github.com:AndreaCensi/conf_tools.git\n\n# log=~/duckietown-data/logs/Phase_2/F23/Meeting_1_Logs/allblinking_test1/20160312-allblinking_test1-argo.bag\n\n# go1:\n\n# \t./go1.sh $(log) argo  \n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 85,
    "MAKEFILE" : 10
  },
  "ElapsedTime" : 5450
}