{
  "Repository" : "12251098",
  "Revision" : "HEAD",
  "ObjectId" : "342fea76b2d7c70f099c60c2cd1ec14919e1ce4b",
  "CommitTime" : "2017-08-23T11:48:04Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "7c7eb482f5b5aaaa7b9f6e1f1521861c2f2dacba",
      "LastModified" : "2017-07-08T18:58:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################ VTRC library ############################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\"${CMAKE_CURRENT_SOURCE_DIR}/../vtrc/\"\n",
        "Line" : 23,
        "CharPositionInLine" : 14
      },
      "2" : {
        "Text" : "######################################################################\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#################### BOOST ###########################\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#context\n",
        "Line" : 94,
        "CharPositionInLine" : 20
      },
      "5" : {
        "Text" : "###############################################\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Force to always compile with W4\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Update if necessary\n",
        "Line" : 159,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "###############################################\n\n## make some stuff for gui client\n\n###############################################\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# LIBS +=\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Qt :(\n",
        "Line" : 201,
        "CharPositionInLine" : 36
      },
      "11" : {
        "Text" : "# INCLUDEPATH +=\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "###############################################\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# add_subdirectory( console-client )\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "agent/CMakeLists.txt" : {
      "ObjectId" : "570a55557104ad3c547978511c9b759cb2452d1b",
      "LastModified" : "2016-07-26T12:27:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "client-core/CMakeLists.txt" : {
      "ObjectId" : "54da705a1d6d08ecf22e711c65de7eea76082e56",
      "LastModified" : "2014-10-24T05:39:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#target_link_libraries(  ${lib_name} ${${dep}_LIBRARIES} )\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#if( LUA_FOUND )\n\n#    include_directories( ${LUA_INCLUDE_DIR} )\n\n#    target_link_libraries( ${lib_name} ${LUA_LIBRARIES} )\n\n#    #add_dependencies( ${lib_name} lua_lib )\n\n#endif( )\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#target_link_libraries(  ${lib_name} ${${dep}_LIBRARIES} )\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/Modules/FindFuse.cmake" : {
      "ObjectId" : "09180d41ec30cf631e47e3537c3ec51aaa9c66a1",
      "LastModified" : "2016-07-28T13:29:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module can find FUSE Library\n\n#\n\n# Requirements:\n\n# - CMake >= 2.8.3\n\n#\n\n# The following variables will be defined for your use:\n\n# - FUSE_FOUND : was FUSE found?\n\n# - FUSE_INCLUDE_DIRS : FUSE include directory\n\n# - FUSE_LIBRARIES : FUSE library\n\n# - FUSE_DEFINITIONS : FUSE cflags\n\n# - FUSE_VERSION : complete version of FUSE (major.minor)\n\n# - FUSE_MAJOR_VERSION : major version of FUSE\n\n# - FUSE_MINOR_VERSION : minor version of FUSE\n\n#\n\n# Example Usage:\n\n#\n\n# 1. Copy this file in the root of your project source directory\n\n# 2. Then, tell CMake to search this non-standard module in your project\n\n# directory by adding to your CMakeLists.txt:\n\n# set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR})\n\n# 3. Finally call find_package() once, here are some examples to pick from\n\n#\n\n# Require FUSE 2.6 or later\n\n# find_package(FUSE 2.6 REQUIRED)\n\n#\n\n# if(FUSE_FOUND)\n\n# add_definitions(${FUSE_DEFINITIONS})\n\n# include_directories(${FUSE_INCLUDE_DIRS})\n\n# add_executable(myapp myapp.c)\n\n# target_link_libraries(myapp ${FUSE_LIBRARIES})\n\n# endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright (c) 2012, julp\n\n#\n\n# Distributed under the OSI-approved BSD License\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n#=============================================================================\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########## Private ##########\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########## Public ##########\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# fusedebug(PC_FUSE_LIBRARIES)\n\n# fusedebug(PC_FUSE_LIBRARY_DIRS)\n\n# fusedebug(PC_FUSE_LDFLAGS)\n\n# fusedebug(PC_FUSE_LDFLAGS_OTHER)\n\n# fusedebug(PC_FUSE_INCLUDE_DIRS)\n\n# fusedebug(PC_FUSE_CFLAGS)\n\n# fusedebug(PC_FUSE_CFLAGS_OTHER)\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Backup CMAKE_REQUIRED_*\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Add FUSE compilation flags\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Should we run again previous test to assume the failure was due to\n\n# missing definition -D_FILE_OFFSET_BITS=64?\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Restore CMAKE_REQUIRED_*\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# IN (args)\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# OUT\n\n# Found\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Definitions\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Linking\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Version\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "console-client/CMakeLists.txt" : {
      "ObjectId" : "717aa121e35e0fc4c3d9fabfc65a57c490bd706e",
      "LastModified" : "2016-07-28T13:29:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cxx11_check.cmake" : {
      "ObjectId" : "8705817fd9a55679a3d8155f1137dd886a332a85",
      "LastModified" : "2016-07-28T13:29:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-std=c++11 by default\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "### MS\n",
        "Line" : 6,
        "CharPositionInLine" : 56
      },
      "2" : {
        "Text" : "### GNU\n",
        "Line" : 12,
        "CharPositionInLine" : 56
      },
      "3" : {
        "Text" : "### Clang\n",
        "Line" : 18,
        "CharPositionInLine" : 56
      },
      "4" : {
        "Text" : "### MS\n",
        "Line" : 30,
        "CharPositionInLine" : 56
      },
      "5" : {
        "Text" : "### GNU\n",
        "Line" : 34,
        "CharPositionInLine" : 56
      },
      "6" : {
        "Text" : "### Clang\n",
        "Line" : 38,
        "CharPositionInLine" : 56
      },
      "7" : {
        "Text" : "### MS\n",
        "Line" : 48,
        "CharPositionInLine" : 56
      },
      "8" : {
        "Text" : "### GNU\n",
        "Line" : 52,
        "CharPositionInLine" : 56
      },
      "9" : {
        "Text" : "### Clang\n",
        "Line" : 60,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 10
    },
    "fuse-client/CMakeLists.txt" : {
      "ObjectId" : "44932a877ad5b856c1f1fcce66f2232155a6e7f8",
      "LastModified" : "2016-07-30T20:59:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################### FUSE ############################\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for fuse\n",
        "Line" : 28,
        "CharPositionInLine" : 39
      },
      "2" : {
        "Text" : "#########################################################\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#include_directories( ${LUA_INCLUDE_DIR} )\n\n#target_link_libraries( ${exe_name} ${LUA_LIBRARIES} )\n\n#add_dependencies( ${exe_name} lua_lib )\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#if(MINGW)\n\n#    add_definitions( -DBOOST_THREAD_USE_LIB=1 )\n\n#endif(MINGW)\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "fuse-client/FindFuse.cmake" : {
      "ObjectId" : "e125a1b10ada1b3ede7404f0b85e7fc481880340",
      "LastModified" : "2016-07-28T13:29:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module can find FUSE Library\n\n#\n\n# Requirements:\n\n# - CMake >= 2.8.3\n\n#\n\n# The following variables will be defined for your use:\n\n# - FUSE_FOUND : was FUSE found?\n\n# - FUSE_INCLUDE_DIRS : FUSE include directory\n\n# - FUSE_LIBRARIES : FUSE library\n\n# - FUSE_DEFINITIONS : FUSE cflags\n\n# - FUSE_VERSION : complete version of FUSE (major.minor)\n\n# - FUSE_MAJOR_VERSION : major version of FUSE\n\n# - FUSE_MINOR_VERSION : minor version of FUSE\n\n#\n\n# Example Usage:\n\n#\n\n# 1. Copy this file in the root of your project source directory\n\n# 2. Then, tell CMake to search this non-standard module in your project directory by adding to your CMakeLists.txt:\n\n# set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR})\n\n# 3. Finally call find_package() once, here are some examples to pick from\n\n#\n\n# Require FUSE 2.6 or later\n\n# find_package(FUSE 2.6 REQUIRED)\n\n#\n\n# if(FUSE_FOUND)\n\n# add_definitions(${FUSE_DEFINITIONS})\n\n# include_directories(${FUSE_INCLUDE_DIRS})\n\n# add_executable(myapp myapp.c)\n\n# target_link_libraries(myapp ${FUSE_LIBRARIES})\n\n# endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright (c) 2012, julp\n\n#\n\n# Distributed under the OSI-approved BSD License\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n#=============================================================================\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########## Private ##########\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########## Public ##########\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# fusedebug(PC_FUSE_LIBRARIES)\n\n# fusedebug(PC_FUSE_LIBRARY_DIRS)\n\n# fusedebug(PC_FUSE_LDFLAGS)\n\n# fusedebug(PC_FUSE_LDFLAGS_OTHER)\n\n# fusedebug(PC_FUSE_INCLUDE_DIRS)\n\n# fusedebug(PC_FUSE_CFLAGS)\n\n# fusedebug(PC_FUSE_CFLAGS_OTHER)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Backup CMAKE_REQUIRED_*\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Add FUSE compilation flags\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Should we run again previous test to assume the failure was due to missing definition -D_FILE_OFFSET_BITS=64?\n",
        "Line" : 124,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Restore CMAKE_REQUIRED_*\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# IN (args)\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# OUT\n\n# Found\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Definitions\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Linking\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Version\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "gui-client/ferro-remote.pri" : {
      "ObjectId" : "e68444ef0f76c636775008ab6cb5c40a99b4a9c3",
      "LastModified" : "2016-07-28T13:29:50Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# TODO make it generated\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "gui-client/gui-client.pro" : {
      "ObjectId" : "c4ab8b0051a23914b8d2a184a0e40f5b36563df7",
      "LastModified" : "2016-07-28T13:29:50Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add more folders to ship with the application, here\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## TODO: Make it with cmake!!!!\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#QMAKE_LFLAGS         += -static -static-libgcc\n\n#DEFINES              += QT_STATIC_BUILD\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Additional import path used to resolve QML modules in Creator's code model\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The .cpp file which was generated for your project. Feel free to hack it.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Installation path\n\n# target.path =\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Please do not modify the following two lines. Required for deployment.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "gui-client/pri4win/ferro-remote-templ.pri" : {
      "ObjectId" : "f551a47fb1b7c77c5eabf3f44cf8d7c11f291783",
      "LastModified" : "2016-07-28T13:29:50Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# TODO make it generated\r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "gui-client/qtquick2applicationviewer/qtquick2applicationviewer.pri" : {
      "ObjectId" : "ce35a9bd12838bb2d4de0a68cb37fa2f9c30ffaa",
      "LastModified" : "2016-07-28T13:29:50Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# checksum 0x21c9 version 0x90005\n\n# This file was generated by the Qt Quick 2 Application wizard of Qt Creator.\n\n# The code below adds the QtQuick2ApplicationViewer to the project and handles\n\n# the activation of QML debugging.\n\n# It is recommended not to modify this file, since newer versions of Qt Creator\n\n# may offer an updated version of it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file was generated by an application wizard of Qt Creator.\n\n# The code below handles deployment to Android and Maemo, aswell as copying\n\n# of the application data to shadow build directories on desktop.\n\n# It is recommended not to modify this file, since newer versions of Qt Creator\n\n# may offer an updated version of it.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Assumed to be a Desktop Unix\n",
        "Line" : 137,
        "CharPositionInLine" : 13
      },
      "CommentCount" : 3
    },
    "hub-core/CMakeLists.txt" : {
      "ObjectId" : "bfe90db38f1446369df85fbee63b75035d7f7522",
      "LastModified" : "2016-07-28T13:29:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#target_link_libraries(  ${lib_name} ${${dep}_LIBRARIES} )\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#if( LUA_FOUND )\n\n#    include_directories( ${LUA_INCLUDE_DIR} )\n\n#    target_link_libraries( ${lib_name} ${LUA_LIBRARIES} )\n\n#    #add_dependencies( ${lib_name} lua_lib )\n\n#endif( )\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#target_link_libraries(  ${lib_name} ${${dep}_LIBRARIES} )\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "lua-build/CMakeLists.txt" : {
      "ObjectId" : "811791e98928de9f08a5f5c9c0f55c79b7ce7910",
      "LastModified" : "2016-07-28T13:29:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lua-client/CMakeLists.txt" : {
      "ObjectId" : "bd1fa1360adc51ebe121ecf8b478c9a06d5e5043",
      "LastModified" : "2016-07-28T13:29:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if(MINGW)\n\n#    add_definitions( -DBOOST_THREAD_USE_LIB=1 )\n\n#endif(MINGW)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "msvc_override.cmake" : {
      "ObjectId" : "25bcf2263f4392d1c314afa194a4669d6ddeb92c",
      "LastModified" : "2016-07-28T13:29:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "protocol/CMakeLists.txt" : {
      "ObjectId" : "1ee2a3aacb7bb517aefc2f4485af2bb4ad11d51a",
      "LastModified" : "2016-08-02T12:14:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################### PROTOCOL FILES #######################\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# protoc bug workaround: https://github.com/google/protobuf/pull/180\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 13,
    "QMAKE" : 4
  },
  "ElapsedTime" : 812
}