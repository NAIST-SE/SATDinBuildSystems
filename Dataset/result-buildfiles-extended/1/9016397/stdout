{
  "Repository" : "9016397",
  "Revision" : "HEAD",
  "ObjectId" : "fba6154fea023aa1b4711d5081e49a9dddaa0fb2",
  "CommitTime" : "2015-08-18T09:30:02Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "d239afe1b1c1f34937a938443ce02caea4b2091b",
      "LastModified" : "2015-08-10T02:08:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if OVRDIR is undefined, set it to the in-source external directory\n\n# otherwise, it will respect the user preference and look in that directory\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# check 64 bit\n\n# this will break on non-x86 processors\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ugly hack to work around the fact that SteamVR's headers check for GNUC\n",
        "Line" : 363,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 3
    },
    "backends/linux/Makefile" : {
      "ObjectId" : "324d52359fb004856bfaf703c774c2fb58da4eeb",
      "LastModified" : "2014-03-22T07:36:09Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Quake2 Makefile for Linux 2.0\n\n#\n\n# Nov '97 by Zoid <zoid@idsoftware.com>\n\n#\n\n# ELF only\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#############################################################################\n\n# SETUP AND BUILD\n\n#############################################################################\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\t$(BUILDDIR)/xatrix/game$(ARCH).$(SHLIBEXT) \\\n#\t$(BUILDDIR)/rogue/game$(ARCH).$(SHLIBEXT)\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\t$(BUILDDIR)/xatrix/game$(ARCH).$(SHLIBEXT) \\\n#\t$(BUILDDIR)/rogue/game$(ARCH).$(SHLIBEXT)\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\t\t$(BUILD_DEBUG_DIR)/xatrix \\\n#\t\t$(BUILD_DEBUG_DIR)/rogue\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\t\t$(BUILD_RELEASE_DIR)/xatrix \\\n#\t\t$(BUILD_RELEASE_DIR)/rogue\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#############################################################################\n\n# CLIENT/SERVER\n\n#############################################################################\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#blank\n",
        "Line" : 196,
        "CharPositionInLine" : 18
      },
      "8" : {
        "Text" : "#############################################################################\n\n# DEDICATED SERVER\n\n#############################################################################\n",
        "Line" : 346,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#############################################################################\n\n# GAME\n\n#############################################################################\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#############################################################################\n\n# CTF\n\n#############################################################################\n",
        "Line" : 657,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#############################################################################\n\n# XATRIX\n\n#############################################################################\n",
        "Line" : 770,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#############################################################################\n\n# ROGUE\n\n#############################################################################\n",
        "Line" : 987,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#############################################################################\n\n# REF_SOFT\n\n#############################################################################\n",
        "Line" : 1247,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#############################################################################\n\n# REF_GL\n\n#############################################################################\n",
        "Line" : 1407,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# TTimo: taking out Mesa\n",
        "Line" : 1427,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#REF_GL_FXMESA_OBJS = \\\n#\t$(BUILDDIR)/ref_gl/gl_fxmesa.o \\\n#\t$(BUILDDIR)/ref_gl/rw_in_svgalib.o\n",
        "Line" : 1431,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#############################################################################\n\n# RPM\n\n#############################################################################\n",
        "Line" : 1492,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Make RPMs.  You need to be root to make this work\n",
        "Line" : 1496,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# rpm-quake2-patch\n",
        "Line" : 1557,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# rpm-quake2-patch: quake2-patch.spec\n",
        "Line" : 1613,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\tcp -R $(VWEP_DIR)/baseq2 $(COPYDIR)/.\n\n#\tfor x in `find $(COPYDIR)/baseq2 -type d`; do chmod 755 $$x;done\n\n#\tfor x in `find $(COPYDIR)/baseq2 -type f`; do chmod 644 $$x;done\n",
        "Line" : 1899,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\t-mkdir $(COPYDIR)/ctf\n\n#\tchmod 1777 $(COPYDIR)/ctf\n\n#\tcp $(BUILD_RELEASE_DIR)/ctf/game$(ARCH).$(SHLIBEXT) $(COPYDIR)/ctf\n",
        "Line" : 1908,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#############################################################################\n\n# MISC\n\n#############################################################################\n",
        "Line" : 1957,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "external/FindOVR.cmake" : {
      "ObjectId" : "f75f4330a111ea2a98974c99c088a21622f812ee",
      "LastModified" : "2015-04-05T09:10:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate OVR library\n\n# This module defines\n\n# OVR_LIBRARY, the name of the library to link against\n\n# OVR_INCLUDE_DIR, the directory containing OVR.h\n\n# OVR_CAPI_INCLUDE_DIR, the directory containing OVR_CAPI.h\n\n# OVR_FOUND, if false, do not try to link to OVR\n\n#\n\n# If a path is set in the OVRDIR environment variable it will check there\n\n#\n\n# This has been tested on OS X\n\n# This may or may not with Linux - it should, but i think it could be broken easily\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 19,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 20,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 21,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# For OS X, OVR uses IOKit as a backend so it must link to IOKit.\n\n# CMake doesn't display the -framework IOKit string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "external/FindSDL2.cmake" : {
      "ObjectId" : "4eac3a96cf1880be2a52e94147eed9da11a88626",
      "LastModified" : "2015-01-25T09:45:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL2 library\n\n# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 73,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 74,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 75,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For SDL2main\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# For MinGW library\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 14
    },
    "external/FindSteamworks.cmake" : {
      "ObjectId" : "bdd767a8cf29a6b2fc308ce8ac9a6b0a00720ddc",
      "LastModified" : "2015-03-05T09:22:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Steamworks library\n\n# This module defines\n\n# STEAMWORKS_LIBRARY, the name of the library to link against\n\n# STEAMWORKS_INCLUDE_DIR, the directory containing steam/steam_api.h\n\n# STEAMWORKS_FOUND, if false, do not try to link to Steamworks\n\n#\n\n# If a path is set in the SteamworksDIR environment variable it will check there\n\n#\n\n# This has been tested on OS X\n\n# This may or may not with Linux - it should, but i think it could be broken easily\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 18,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 19,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 20,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    }
  },
  "FileTypes" : {
    "CMAKE" : 4,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 2682
}