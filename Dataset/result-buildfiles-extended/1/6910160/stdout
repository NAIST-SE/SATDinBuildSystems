{
  "Repository" : "6910160",
  "Revision" : "HEAD",
  "ObjectId" : "db590fb3383c9fef912cac30439e24fc083431bf",
  "CommitTime" : "2019-04-16T21:08:40Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "b9b6ea3ea64b724b8b0c55336a0055a7c1f91184",
      "LastModified" : "2019-02-03T19:22:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# SuperTux - root build script\n\n# Copyright (C) 2006 Christoph Sommer <christoph.sommer@2006.expires.deltadevelopment.de>\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# INSTRUCTIONS:\n\n# -------------\n\n#\n\n# Create a directory build/ and change to it. Run\n\n#\n\n#   cmake ..\n\n#\n\n# This creates a set of Makefiles to build the project. Run\n\n#\n\n#   make\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Project name to use as command prefix.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### CMake configuration\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## For autopackage\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Check endianess\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Add definitions\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## These variables enable MSVC to find libraries located in \"dependencies{32|64}\"\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Store path of dependecy folder\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "## To test if the host (not the build) is x64:\n\n## \"$ENV{PROCESSOR_ARCHITEW6432}\" STREQUAL \"AMD64\"\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "## Enable multi-processor compilation (faster)\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "## And shut up about unsafe stuff\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "## Add an icon\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "## Find all used libraries\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "## Add lots of dependencies to compiler switches\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## The curl headers are in the standard include path in dependencies\n\n## so it's not required to add them here\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#find_package(ICONV REQUIRED)\n\n#include_directories(SYSTEM ${ICONV_INCLUDE_DIR})\n\n#link_libraries(${ICONV_LIBRARY})\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Find revision of WC\n",
        "Line" : 296,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "## Configure doxygen\n\n# Adapted from https://tty1.net/blog/2014/cmake-doxygen_en.html\n\n# add a target to generate API documentation with Doxygen\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Check platform-dependent build options\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Include altivec wrapper on ppc\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Also build external/squirrel\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#For debug run purposes\n",
        "Line" : 411,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "## Also build external/tinygettext\n",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Include altivec wrapper on ppc\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## external/SDL_ttf with patches\n",
        "Line" : 459,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## Some additional include paths\n",
        "Line" : 482,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Lint\n",
        "Line" : 496,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## Build list of sources for supertux binary\n",
        "Line" : 515,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Sort source lists to have deterministic linking order\n",
        "Line" : 538,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Compile everything at once (roughly equivalent to cat *.cpp | gcc)\n",
        "Line" : 547,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "## Build instead of CXX sources\n",
        "Line" : 556,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "## Debug options\n",
        "Line" : 564,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# temporarily disabled:\n\n#   -Wsign-conversion -Wfloat-equal -Wundef -Wswitch-default\n\n#   -Wswitch-enum -Wsign-promo -Wcast-qual -Woverloaded-virtual -Wmissing-format-attribute\n\n#   -Wpadded -Wabi -Winline -Wunsafe-loop-optimizations -Wstrict-overflow=5\n\n# fails on MinGW:\n\n#   -ansi\n",
        "Line" : 583,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# flags that we deliberately ignore\n",
        "Line" : 630,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# warnings that should probably be fixed in code\n",
        "Line" : 641,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "## If xgettext is available, generate messages.pot for sources\n",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "## Do not add target if SUPERTUX_LEVELS is empty. This is needed for cmake <=2.4\n",
        "Line" : 684,
        "CharPositionInLine" : 6
      },
      "38" : {
        "Text" : "## Some additional compiler switches\n",
        "Line" : 708,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "## On Windows, add an icon\n",
        "Line" : 718,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#  set(SUPERTUX_SOURCES_C ${SUPERTUX_SOURCES_C} ${CMAKE_CURRENT_SOURCE_DIR}/data/images/engine/icons/supertux.rc)\n",
        "Line" : 721,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "## Build miniswig and generate miniswig wrapper\n",
        "Line" : 730,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "## Generate supertux executable in the right place\n",
        "Line" : 749,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#set(EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR})\n",
        "Line" : 751,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "## Add target for supertux binary\n",
        "Line" : 754,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "## Copy dlls on windows\n",
        "Line" : 769,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "## Link supertux binary with squirrel and other libraries\n",
        "Line" : 776,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# build gtest\n\n# ${CMAKE_CURRENT_SOURCE_DIR} in include_directories is needed to generate -isystem instead of -I flags\n",
        "Line" : 847,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# build SuperTux tests\n",
        "Line" : 855,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# add 'make test' target, use 'make test ARGS=\"-V\"' or 'ctest -V' for verbose\n",
        "Line" : 864,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "## Install stuff\n",
        "Line" : 871,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "## Create config.h now that INSTALL_SUBDIR_* have been set.\n",
        "Line" : 967,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "## Configure main menu logo\n",
        "Line" : 971,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "## CPack/Installation-specific stuff\n",
        "Line" : 980,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# move some config clutter to the advanced section\n",
        "Line" : 1062,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 55
    },
    "config.h.cmake" : {
      "ObjectId" : "c8fef95fa83d1cee722371ff39b5f1af022b75af",
      "LastModified" : "2016-07-10T19:00:43Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "external/SDL_SavePNG/Makefile" : {
      "ObjectId" : "c2d2a07622ac0f80a8a9d1855a5d1ccb459a8847",
      "LastModified" : "2018-08-02T14:45:24Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "external/findlocale/Makefile" : {
      "ObjectId" : "12fff7524683256d63f9a193ae2b9790d29fb9c0",
      "LastModified" : "2018-08-02T14:45:24Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "mk/cmake/ConfigureChecks.cmake" : {
      "ObjectId" : "90fcfd20484b44fd1b461eeb96900adba2075eb4",
      "LastModified" : "2018-08-02T14:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "mk/cmake/ConfigureFiles.cmake" : {
      "ObjectId" : "6e5dd6029f33f080081795539a747c6c2fab7ca4",
      "LastModified" : "2018-08-02T14:45:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy files from source directory to destination directory, substituting any\n\n# variables.  Create destination directory if it does not exist.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "mk/cmake/FindGLBINDING.cmake" : {
      "ObjectId" : "f5794200c9cc9bae0a6071442c052971f95830b9",
      "LastModified" : "2018-08-02T14:45:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GLBINDING_FOUND\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GLBINDING_LIBRARIES\n\n# GLBINDING_INCLUDE_DIRS\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GLBINDING_LIBRARY\n\n# GLBINDING_LIBRARY_RELEASE\n\n# GLBINDING_LIBRARY_DEBUG\n\n# GLBINDING_INCLUDE_DIR\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# GLBINDING_BINARIES        (win32 only)\n\n# GLBINDING_BINARY_RELEASE  (win32 only)\n\n# GLBINDING_BINARY_DEBUG    (win32 only)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# DEBUG\n\n# message(\"${LIB_NAME_UPPER}_INCLUDE_DIR     = ${${LIB_NAME_UPPER}_INCLUDE_DIR}\")\n\n# message(\"${LIB_NAME_UPPER}_LIBRARY_RELEASE = ${${LIB_NAME_UPPER}_LIBRARY_RELEASE}\")\n\n# message(\"${LIB_NAME_UPPER}_LIBRARY_DEBUG   = ${${LIB_NAME_UPPER}_LIBRARY_DEBUG}\")\n\n# message(\"${LIB_NAME_UPPER}_LIBRARY         = ${${LIB_NAME_UPPER}_LIBRARY}\")\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# DEBUG\n\n# message(\"${LIB_NAME_UPPER}_BINARIES         = ${${LIB_NAME_UPPER}_BINARIES}\")\n",
        "Line" : 128,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# DEBUG\n\n# message(\"GLBINDING_INCLUDE_DIRS  = ${GLBINDING_INCLUDE_DIRS}\")\n\n# message(\"GLBINDING_LIBRARIES = ${GLBINDING_LIBRARIES}\")\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "mk/cmake/FindICONV.cmake" : {
      "ObjectId" : "34971b500181b44f25102f10e4d1e5cd27781660",
      "LastModified" : "2018-08-02T14:45:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  Copyright (c) 2006, Peter K�mmel, <syntheticpp@gmx.net>\n\n#\n\n#  Redistribution and use in source and binary forms, with or without\n\n#  modification, are permitted provided that the following conditions\n\n#  are met:\n\n#\n\n#  1. Redistributions of source code must retain the copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n#  2. Redistributions in binary form must reproduce the copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#  3. The name of the author may not be used to endorse or promote products\n\n#     derived from this software without specific prior written permission.\n\n#\n\n#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n#  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n#  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n#  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n#  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#message(STATUS \"Found iconv   dll  : ${ICONV_DLL}\")\n",
        "Line" : 88,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "mk/cmake/FindOggVorbis.cmake" : {
      "ObjectId" : "aa53efaf720e3130d8c92de6f8034c5a3931fbfa",
      "LastModified" : "2018-08-02T14:45:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### SuperTux - Removed unused vorbisenc library\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find the OggVorbis libraries\n\n# Once done this will define\n\n#\n\n#  OGGVORBIS_FOUND - system has OggVorbis\n\n#  OGGVORBIS_VERSION - set either to 1 or 2\n\n#  OGGVORBIS_INCLUDE_DIR - the OggVorbis include directory\n\n#  OGGVORBIS_LIBRARIES - The libraries needed to use OggVorbis\n\n#  OGG_LIBRARY         - The Ogg library\n\n#  VORBIS_LIBRARY      - The Vorbis library\n\n#  VORBISFILE_LIBRARY  - The VorbisFile library\n\n# Copyright (c) 2006, Richard Laerkaeng, <richard@goteborg.utfors.se>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  [sommer] (for SuperTux) reversed order of libraries, so that cmake 2.4.5 for Windows generates an MSYS Makefile that will link correctly\n\n#  set(OGGVORBIS_LIBRARIES ${OGG_LIBRARY} ${VORBIS_LIBRARY} ${VORBISFILE_LIBRARY})\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#check_include_files(vorbis/vorbisfile.h HAVE_VORBISFILE_H)\n\n#check_library_exists(ogg ogg_page_version \"\" HAVE_LIBOGG)\n\n#check_library_exists(vorbis vorbis_info_init \"\" HAVE_LIBVORBIS)\n\n#check_library_exists(vorbisfile ov_open \"\" HAVE_LIBVORBISFILE)\n\n#check_library_exists(vorbis vorbis_bitrate_addblock \"\" HAVE_LIBVORBISENC2)\n\n#if (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE)\n\n#    message(STATUS \"Ogg/Vorbis found\")\n\n#    set (VORBIS_LIBS \"-lvorbis -logg\")\n\n#    set (VORBISFILE_LIBS \"-lvorbisfile\")\n\n#    set (OGGVORBIS_FOUND TRUE)\n\n#    if (HAVE_LIBVORBISENC2)\n\n#        set (HAVE_VORBIS 2)\n\n#    else (HAVE_LIBVORBISENC2)\n\n#        set (HAVE_VORBIS 1)\n\n#    endif (HAVE_LIBVORBISENC2)\n\n#else (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE)\n\n#    message(STATUS \"Ogg/Vorbis not found\")\n\n#endif (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE)\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "mk/cmake/FindRAQM.cmake" : {
      "ObjectId" : "32171841d77ab5a95444bf1fc961f1dd59feea1a",
      "LastModified" : "2018-09-11T17:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "mk/cmake/FindWindowsSDK.cmake" : {
      "ObjectId" : "b02b633f395704da9be112e420c8227937b579f3",
      "LastModified" : "2018-09-11T17:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the Windows SDK aka Platform SDK\n\n#\n\n# Relevant Wikipedia article: http://en.wikipedia.org/wiki/Microsoft_Windows_SDK\n\n#\n\n# Pass \"COMPONENTS tools\" to ignore Visual Studio version checks: in case\n\n# you just want the tool binaries to run, rather than the libraries and headers\n\n# for compiling.\n\n#\n\n# Variables:\n\n#  WINDOWSSDK_FOUND - if any version of the windows or platform SDK was found that is usable with the current version of visual studio\n\n#  WINDOWSSDK_LATEST_DIR\n\n#  WINDOWSSDK_LATEST_NAME\n\n#  WINDOWSSDK_FOUND_PREFERENCE - if we found an entry indicating a \"preferred\" SDK listed for this visual studio version\n\n#  WINDOWSSDK_PREFERRED_DIR\n\n#  WINDOWSSDK_PREFERRED_NAME\n\n#\n\n#  WINDOWSSDK_DIRS - contains no duplicates, ordered most recent first.\n\n#  WINDOWSSDK_PREFERRED_FIRST_DIRS - contains no duplicates, ordered with preferred first, followed by the rest in descending recency\n\n#\n\n# Functions:\n\n#  windowssdk_name_lookup(<directory> <output variable>) - Find the name corresponding with the SDK directory you pass in, or\n\n#     NOTFOUND if not recognized. Your directory must be one of WINDOWSSDK_DIRS for this to work.\n\n#\n\n#  windowssdk_build_lookup(<directory> <output variable>) - Find the build version number corresponding with the SDK directory you pass in, or\n\n#     NOTFOUND if not recognized. Your directory must be one of WINDOWSSDK_DIRS for this to work.\n\n#\n\n#  get_windowssdk_from_component(<file or dir> <output variable>) - Given a library or include dir,\n\n#     find the Windows SDK root dir corresponding to it, or NOTFOUND if unrecognized.\n\n#\n\n#  get_windowssdk_library_dirs(<directory> <output variable>) - Find the architecture-appropriate\n\n#     library directories corresponding to the SDK directory you pass in (or NOTFOUND if none)\n\n#\n\n#  get_windowssdk_include_dirs(<directory> <output variable>) - Find the\n\n#     include directories corresponding to the SDK directory you pass in (or NOTFOUND if none)\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# pre-output\n",
        "Line" : 49,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# pre-output\n",
        "Line" : 50,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "# pre-output\n",
        "Line" : 51,
        "CharPositionInLine" : 26
      },
      "4" : {
        "Text" : "# pre-output\n",
        "Line" : 52,
        "CharPositionInLine" : 28
      },
      "5" : {
        "Text" : "# search parameters\n",
        "Line" : 53,
        "CharPositionInLine" : 23
      },
      "6" : {
        "Text" : "# search parameters\n",
        "Line" : 54,
        "CharPositionInLine" : 18
      },
      "7" : {
        "Text" : "# Appends to the three main pre-output lists used only if the path exists\n\n# and is not already in the list.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Path invalid - do not add\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Path already in list - do not add\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Not yet in the list, so we'll add it\n",
        "Line" : 90,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Appends to the \"preferred SDK\" lists only if the path exists\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Path invalid - do not add\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Path already in list - do not add\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Not yet in the list, so we'll add it\n",
        "Line" : 120,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# Just in case we somehow missed it:\n",
        "Line" : 124,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# Given a version like v7.0A, looks for an SDK in the registry under \"Microsoft SDKs\".\n\n# If the given version might be in both HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Microsoft SDKs\\\\Windows\n\n# and HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows Kits\\\\Installed Roots aka \"Windows Kits\",\n\n# use this macro first, since these registry keys usually have more information.\n\n#\n\n# Pass a \"default\" build number as an extra argument in case we can't find it.\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Default build number passed as extra argument\n",
        "Line" : 142,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# See if the registry holds a Microsoft-mutilated, err, designated, product name\n\n# (just using get_filename_component to execute the registry lookup)\n",
        "Line" : 144,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# Got a product name\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# try for a version to augment our name\n\n# (just using get_filename_component to execute the registry lookup)\n",
        "Line" : 154,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# Got a version\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# and it's not an invalid one with two dots in it:\n\n# use to override the default build\n",
        "Line" : 162,
        "CharPositionInLine" : 3
      },
      "23" : {
        "Text" : "# Got a version that's not already in the name, let's use it to improve our name.\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Given a name for identification purposes, the build number, and a key (technically a \"value name\")\n\n# corresponding to a Windows SDK packaged as a \"Windows Kit\", look for it\n\n# in HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows Kits\\\\Installed Roots\n\n# Note that the key or \"value name\" tends to be something weird like KitsRoot81 -\n\n# no easy way to predict, just have to observe them in the wild.\n\n# Doesn't hurt to also try _winsdk_check_microsoft_sdks_registry for these:\n\n# sometimes you get keys in both parts of the registry (in the wow64 portion especially),\n\n# and the non-\"Windows Kits\" location is often more descriptive.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Given a name for indentification purposes, the build number, and the associated package GUID,\n\n# look in the registry under both HKLM and HKCU in \\\\SOFTWARE\\\\Microsoft\\\\MicrosoftSDK\\\\InstalledSDKs\\\\\n\n# for that guid and the SDK it points to.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "###\n\n# Detect toolchain information: to know whether it's OK to use Vista+ only SDKs\n\n###\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# VC 10 and older has broad target support\n",
        "Line" : 206,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# VC 11 by default targets Vista and later only, so we can add a few more SDKs that (might?) only work on vista+\n",
        "Line" : 208,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# This is the XP-compatible v110+ toolset\n",
        "Line" : 210,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# This is the VS2010/VS2008 toolset\n",
        "Line" : 212,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# OK, we're VC11 or newer and not using a backlevel or XP-compatible toolset.\n\n# These versions have no XP (and possibly Vista pre-SP1) support\n",
        "Line" : 214,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "###\n\n# MSVC version checks - keeps messy conditionals in one place\n\n# (messy because of _WINDOWSSDK_IGNOREMSVC)\n\n###\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Newer than VS .NET/VS Toolkit 2003\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# VS2005/2008\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# VS2013+\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "###\n\n# START body of find module\n\n###\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Newer than VS .NET/VS Toolkit 2003\n",
        "Line" : 255,
        "CharPositionInLine" : 30
      },
      "38" : {
        "Text" : "###\n\n# Look for \"preferred\" SDKs\n\n###\n",
        "Line" : 256,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# Environment variable for SDK dir\n",
        "Line" : 260,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "# Per-user current Windows SDK for VS2005/2008\n",
        "Line" : 266,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# System-wide current Windows SDK for VS2005/2008\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "###\n\n# Begin the massive list of SDK searching!\n\n###\n",
        "Line" : 279,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "# These require at least Visual Studio 2013 (VC12)\n",
        "Line" : 283,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# Windows Software Development Kit (SDK) for Windows 10\n",
        "Line" : 287,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# vista-only and 2013+\n",
        "Line" : 290,
        "CharPositionInLine" : 9
      },
      "46" : {
        "Text" : "# Included in Visual Studio 2013\n\n# Includes the v120_xp toolset\n",
        "Line" : 292,
        "CharPositionInLine" : 1
      },
      "47" : {
        "Text" : "# Windows Software Development Kit (SDK) for Windows 8.1\n\n# http://msdn.microsoft.com/en-gb/windows/desktop/bg162891\n",
        "Line" : 297,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# vista-only and 2013+\n",
        "Line" : 301,
        "CharPositionInLine" : 9
      },
      "49" : {
        "Text" : "# Included in Visual Studio 2012\n",
        "Line" : 304,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# Microsoft Windows SDK for Windows 8 and .NET Framework 4.5\n\n# This is the first version to also include the DirectX SDK\n\n# http://msdn.microsoft.com/en-US/windows/desktop/hh852363.aspx\n",
        "Line" : 307,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# vista-only\n",
        "Line" : 312,
        "CharPositionInLine" : 9
      },
      "52" : {
        "Text" : "# Included with VS 2012 Update 1 or later\n\n# Introduces v110_xp toolset\n",
        "Line" : 314,
        "CharPositionInLine" : 1
      },
      "53" : {
        "Text" : "# Microsoft Windows SDK for Windows 7 and .NET Framework 4\n\n# http://www.microsoft.com/downloads/en/details.aspx?FamilyID=6b6c21d2-2006-4afa-9702-529fa782d63b\n",
        "Line" : 318,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# vista-only\n",
        "Line" : 321,
        "CharPositionInLine" : 9
      },
      "55" : {
        "Text" : "# Included with VS 2010\n",
        "Line" : 323,
        "CharPositionInLine" : 1
      },
      "56" : {
        "Text" : "# Windows SDK for Windows 7 and .NET Framework 3.5 SP1\n\n# Works with VC9\n\n# http://www.microsoft.com/en-us/download/details.aspx?id=18950\n",
        "Line" : 326,
        "CharPositionInLine" : 1
      },
      "57" : {
        "Text" : "# Two versions call themselves \"v6.1\":\n\n# Older:\n\n# Windows Vista Update & .NET 3.0 SDK\n\n# http://www.microsoft.com/en-us/download/details.aspx?id=14477\n",
        "Line" : 331,
        "CharPositionInLine" : 1
      },
      "58" : {
        "Text" : "# Newer:\n\n# Windows Server 2008 & .NET 3.5 SDK\n\n# may have broken VS9SP1? they recommend v7.0 instead, or a KB...\n\n# http://www.microsoft.com/en-us/download/details.aspx?id=24826\n",
        "Line" : 336,
        "CharPositionInLine" : 1
      },
      "59" : {
        "Text" : "# Included in VS 2008\n",
        "Line" : 342,
        "CharPositionInLine" : 1
      },
      "60" : {
        "Text" : "# Microsoft Windows Software Development Kit for Windows Vista and .NET Framework 3.0 Runtime Components\n\n# http://blogs.msdn.com/b/stanley/archive/2006/11/08/microsoft-windows-software-development-kit-for-windows-vista-and-net-framework-3-0-runtime-components.aspx\n",
        "Line" : 345,
        "CharPositionInLine" : 1
      },
      "61" : {
        "Text" : "# Let's not forget the Platform SDKs, which sometimes are useful!\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "###\n\n# Finally, look for \"preferred\" SDKs\n\n###\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Newer than VS .NET/VS Toolkit 2003\n",
        "Line" : 358,
        "CharPositionInLine" : 30
      },
      "64" : {
        "Text" : "# Environment variable for SDK dir\n",
        "Line" : 361,
        "CharPositionInLine" : 1
      },
      "65" : {
        "Text" : "# Per-user current Windows SDK for VS2005/2008\n",
        "Line" : 367,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# System-wide current Windows SDK for VS2005/2008\n",
        "Line" : 373,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# If we found something...\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Fallback, in case no preference found.\n",
        "Line" : 411,
        "CharPositionInLine" : 1
      },
      "69" : {
        "Text" : "# If we found indications of a user preference...\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Internal: Architecture-appropriate library directory names.\n",
        "Line" : 436,
        "CharPositionInLine" : 1
      },
      "71" : {
        "Text" : "# Only supported in Win10 SDK and up.\n",
        "Line" : 439,
        "CharPositionInLine" : 3
      },
      "72" : {
        "Text" : "# what the WDK for Win8+ calls this architecture\n",
        "Line" : 440,
        "CharPositionInLine" : 28
      },
      "73" : {
        "Text" : "# what the architecture used to be called in oldest SDKs\n",
        "Line" : 442,
        "CharPositionInLine" : 30
      },
      "74" : {
        "Text" : "# what the architecture used to be called\n",
        "Line" : 443,
        "CharPositionInLine" : 25
      },
      "75" : {
        "Text" : "# what the WDK for Win8+ calls this architecture\n",
        "Line" : 444,
        "CharPositionInLine" : 26
      },
      "76" : {
        "Text" : "# what the architecture used to be called in oldest SDKs\n",
        "Line" : 448,
        "CharPositionInLine" : 30
      },
      "77" : {
        "Text" : "# what the architecture used to be called\n",
        "Line" : 449,
        "CharPositionInLine" : 27
      },
      "78" : {
        "Text" : "# what the WDK for Win8+ calls this architecture\n",
        "Line" : 450,
        "CharPositionInLine" : 26
      },
      "79" : {
        "Text" : "# what the architecture used to be called in oldest SDKs\n\n# what the architecture used to be called\n\n# what the WDK for Win8+ calls this architecture\n",
        "Line" : 452,
        "CharPositionInLine" : 26
      },
      "80" : {
        "Text" : "# If we don't have any \"parent directory\" items...\n",
        "Line" : 465,
        "CharPositionInLine" : 3
      },
      "81" : {
        "Text" : "# Fail.\n",
        "Line" : 471,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# SDKs like 7.1A\n",
        "Line" : 477,
        "CharPositionInLine" : 28
      },
      "83" : {
        "Text" : "# just because some SDKs have x86 dir and root dir\n",
        "Line" : 478,
        "CharPositionInLine" : 25
      },
      "84" : {
        "Text" : "# Win2k min requirement\n\n# WinXP min requirement\n",
        "Line" : 479,
        "CharPositionInLine" : 29
      },
      "85" : {
        "Text" : "# Win Server 2003 min requirement\n",
        "Line" : 481,
        "CharPositionInLine" : 30
      },
      "86" : {
        "Text" : "# Win Vista (\"Long Horn\") min requirement\n",
        "Line" : 483,
        "CharPositionInLine" : 33
      },
      "87" : {
        "Text" : "# Win 7 min requirement\n",
        "Line" : 485,
        "CharPositionInLine" : 34
      },
      "88" : {
        "Text" : "# Win Vista (\"Long Horn\") min requirement\n",
        "Line" : 488,
        "CharPositionInLine" : 7
      },
      "89" : {
        "Text" : "# Win 7 min requirement\n\n# Win 8 min requirement\n",
        "Line" : 489,
        "CharPositionInLine" : 8
      },
      "90" : {
        "Text" : "# Win 8.1 min requirement\n",
        "Line" : 491,
        "CharPositionInLine" : 11
      },
      "91" : {
        "Text" : "# Look for WDF libraries in Win10+ SDK\n",
        "Line" : 501,
        "CharPositionInLine" : 2
      },
      "92" : {
        "Text" : "# Check to see if a library actually exists here.\n",
        "Line" : 516,
        "CharPositionInLine" : 3
      },
      "93" : {
        "Text" : "# Check to see if a header file actually exists here.\n",
        "Line" : 546,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 94
    },
    "mk/cmake/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "41fd4fad7060e04dac7717e0e698c5f7eba665ef",
      "LastModified" : "2018-09-11T17:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#\t\tERROR_QUIET\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "mk/cmake/x64-windows.cmake" : {
      "ObjectId" : "506b8f61d4b70e75b8636750b58f24330237e18f",
      "LastModified" : "2018-11-05T21:25:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "mk/cmake/x86-windows.cmake" : {
      "ObjectId" : "d8c244e1efe7f1742b3cd8c8e375b2215e133a5a",
      "LastModified" : "2018-11-05T21:25:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "mk/vcpkg/libraqm/CMakeLists.txt" : {
      "ObjectId" : "9476a99ced6cbb7d61947a4ae691151ad00ee142",
      "LastModified" : "2018-11-05T21:25:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "mk/vcpkg/libraqm/FindFribidi.cmake" : {
      "ObjectId" : "a12bdb60ea5e0618f182a28d3fb58028cb2491bc",
      "LastModified" : "2018-11-05T21:25:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "mk/vcpkg/libraqm/FindHarfbuzz.cmake" : {
      "ObjectId" : "a6ee9a6f36697fa28d741a94d9de85e64ae8b8e8",
      "LastModified" : "2018-11-05T21:25:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# Find HarfBuzz\n\n# -------------\n\n#\n\n# Finds the HarfBuzz library. This module defines:\n\n#\n\n#  HarfBuzz_FOUND           - True if HarfBuzz library is found\n\n#  HarfBuzz::HarfBuzz       - HarfBuzz imported target\n\n#\n\n# Additionally these variables are defined for internal usage:\n\n#\n\n#  HARFBUZZ_LIBRARY         - HarfBuzz library\n\n#  HARFBUZZ_LIBRARIES       - Same as HARFBUZZ_LIBRARY\n\n#  HARFBUZZ_INCLUDE_DIR     - Include dir\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#   This file is part of Magnum.\n\n#\n\n#   Copyright © 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018\n\n#             Vladimír Vondruš <mosra@centrum.cz>\n\n#\n\n#   Permission is hereby granted, free of charge, to any person obtaining a\n\n#   copy of this software and associated documentation files (the \"Software\"),\n\n#   to deal in the Software without restriction, including without limitation\n\n#   the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n#   and/or sell copies of the Software, and to permit persons to whom the\n\n#   Software is furnished to do so, subject to the following conditions:\n\n#\n\n#   The above copyright notice and this permission notice shall be included\n\n#   in all copies or substantial portions of the Software.\n\n#\n\n#   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n#   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n#   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n#   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n#   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n#   DEALINGS IN THE SOFTWARE.\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Library\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include dir\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "mk/vcpkg/libraqm/portfile.cmake" : {
      "ObjectId" : "28abc62dd1e9db23a725f94b4e25f3b0cc896ead",
      "LastModified" : "2018-11-05T21:25:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Common Ambient Variables:\r\n\n#   CURRENT_BUILDTREES_DIR    = ${VCPKG_ROOT_DIR}\\buildtrees\\${PORT}\r\n\n#   CURRENT_PACKAGES_DIR      = ${VCPKG_ROOT_DIR}\\packages\\${PORT}_${TARGET_TRIPLET}\r\n\n#   CURRENT_PORT_DIR          = ${VCPKG_ROOT_DIR}\\ports\\${PORT}\r\n\n#   PORT                      = current port name (zlib, etc)\r\n\n#   TARGET_TRIPLET            = current triplet (x86-windows, x64-windows-static, etc)\r\n\n#   VCPKG_CRT_LINKAGE         = C runtime linkage type (static, dynamic)\r\n\n#   VCPKG_LIBRARY_LINKAGE     = target library linkage type (static, dynamic)\r\n\n#   VCPKG_ROOT_DIR            = <C:\\path\\to\\current\\vcpkg>\r\n\n#   VCPKG_TARGET_ARCHITECTURE = target architecture (x64, x86, arm)\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle copyright\r\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Post-build test for cmake libraries\r\n\n# vcpkg_test_cmake(PACKAGE_NAME libraqm)\r\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tools/miniswig/CMakeLists.txt" : {
      "ObjectId" : "3423236167cfba953fa2d55fafa07b8b5b91fe05",
      "LastModified" : "2018-11-05T21:25:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# SuperTux - miniswig build script\n\n# Copyright (C) 2007 Timothy Goya <tuxdev103@gmail.com>\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n# \n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n# \n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Project name to use as command prefix\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## add additional compiler switches\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the autogenerated bison/flex is not warning free usually\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Include paths to make generated files work\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## build list of source files\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Add target for bison parser generation\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Add target for flex lexical analyzer generation\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Add target for miniswig binary\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "tools/tilemanager/Makefile" : {
      "ObjectId" : "e483bd213551d3f0c9da9ee78806c0d4b76d03d7",
      "LastModified" : "2018-11-05T21:25:54Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 16,
    "CMAKESOURCE" : 1,
    "MAKEFILE" : 3
  },
  "ElapsedTime" : 16133
}