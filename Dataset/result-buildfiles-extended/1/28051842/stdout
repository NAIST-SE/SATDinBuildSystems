{
  "Repository" : "28051842",
  "Revision" : "HEAD",
  "ObjectId" : "748255ba19823e386e1d5952793524922a02a67d",
  "CommitTime" : "2019-04-12T15:05:32Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "17c7d4d88e8988395b50417301fc0cadfd2ccc0c",
      "LastModified" : "2019-04-04T15:07:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#cmake_policy(VERSION 3.5.2)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The project version number.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The size of the data buffer for write/read_darray().\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#==============================================================================\n\n#  USER-DEFINED OPTIONS (set with \"-DOPT=VAL\" from command line)\n\n#==============================================================================\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#===== Library Options =====\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set a variable that appears in the config.h.in file.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set a variable that appears in the config.h.in file.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Set a variable that appears in the config.h.in file.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#==============================================================================\n\n#  PREPEND TO CMAKE MODULE PATH\n\n#==============================================================================\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#===== Local modules =====\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#===== External modules =====\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#===== MPI =====\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#===== Library Variables =====\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#===== Testing Options =====\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#==============================================================================\n\n#  BACKWARDS COMPATIBILITY\n\n#==============================================================================\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Old NETCDF_DIR variable --> NetCDF_PATH\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Old PNETCDF_DIR variable --> PnetCDF_PATH\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#==============================================================================\n\n#  HELPFUL GLOBAL VARIABLES\n\n#==============================================================================\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# System Name\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C Compiler Name\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Fortran Compiler Name\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# configure a header file to pass some of the CMake settings\n\n# to the source code\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#==============================================================================\n\n#  SET CODE COVERAGE COMPILER FLAGS\n\n#==============================================================================\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Only support GNU compilers at this time\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#==============================================================================\n\n#  INCLUDE SOURCE DIRECTORIES\n\n#==============================================================================\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Libraries\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#==============================================================================\n\n#  TESTING TARGET\n\n#==============================================================================\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Custom \"piotests\" target (builds the test executables)\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Custom \"check\" target that depends upon \"tests\"\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Tests\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Documentation\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "cd7099ae6bb1ef8f9e24094378c72a907eb981a7",
      "LastModified" : "2017-02-08T19:44:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n\n##\n\n## # The following are required to submit to the CDash dashboard:\n\n##   ENABLE_TESTING()\n\n##   INCLUDE(CTest)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CTestScript.cmake" : {
      "ObjectId" : "23d2a25a4182b55049f7337ca668c6e3253bea01",
      "LastModified" : "2017-05-11T13:06:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n#\n\n#  This is the CTest script for PIO builds and submission to the CTest\n\n#  Dashboard site: my.cdash.org.\n\n#\n\n#  Example originally stolen from:\n\n#    http://www.vtk.org/Wiki/CTest:Using_CTEST_and_CDASH_without_CMAKE\n\n#==============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------\n\n#-- User-defined setup from environment\n\n#---------------------------------------\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## -- CTest Dashboard Root Directory\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## -- Compiler ID\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## -- CTest Dashboard Build Group\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---------------------------------------\n\n#-- Get the machine environment\n\n#---------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## -- Set hostname\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## -- Set hostname ID (e.g., alcf, nwsc, nersc, ...)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# UCAR/NWSC Machines\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# New UCAR/NWSC SGI Machines\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ALCF/Argonne Machines\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# NERSC Machines\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Blue Waters at NCSA\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# CGD local linux cluster\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Argonne Linux workstations\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## -- Get system info\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## -- Git command\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## -- make command\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#-----------------------------------------------------------\n\n#-- Generate build-specific information\n\n#-----------------------------------------------------------\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## -- CTest Site Name\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## -- CTest Build Name\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## -- SRC Dir (where this script exists)\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## -- BIN Dir\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## -- Add the CTest script directory to the module path\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# -----------------------------------------------------------\n\n# -- Store Build-Specific Info (environment variables)\n\n# -----------------------------------------------------------\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# -----------------------------------------------------------\n\n# -- Run CTest\n\n# -----------------------------------------------------------\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## -- Empty the binary directory\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## -- Start\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## -- Update\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## -- Configure\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## -- BUILD\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "## -- TEST\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## -- SUBMIT\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# -----------------------------------------------------------\n\n# -- Clear environment\n\n# -----------------------------------------------------------\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    },
    "Makefile.am" : {
      "ObjectId" : "6c15f45f04f751279a04dd614a584ef43801b781",
      "LastModified" : "2019-04-04T15:07:17Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# This is part of PIO. It creates the main Makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ed Hartnett\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look in the m4 directory for autotools stuff.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Does the user want to build fortran?\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindGPTL.cmake" : {
      "ObjectId" : "c223c1b3461ab9c64167d8ee66aa0cd00b0e818f",
      "LastModified" : "2017-02-08T19:44:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GPTL\n\n#\n\n# This can be controlled by setting the GPTL_DIR (or, equivalently, the \n\n# GPTL environment variable), or GPTL_<lang>_DIR CMake variables, where\n\n# <lang> is the COMPONENT language one needs.\n\n#\n\n# Once done, this will define:\n\n#\n\n#   GPTL_<lang>_FOUND        (BOOL) - system has GPTL\n\n#   GPTL_<lang>_IS_SHARED    (BOOL) - whether library is shared/dynamic\n\n#   GPTL_<lang>_INCLUDE_DIR  (PATH) - Location of the C header file\n\n#   GPTL_<lang>_INCLUDE_DIRS (LIST) - the GPTL include directories\n\n#   GPTL_<lang>_LIBRARY      (FILE) - Path to the C library file\n\n#   GPTL_<lang>_LIBRARIES    (LIST) - link these to use GPTL\n\n#\n\n# The available COMPONENTS are: C Fortran Perfmod\n\n# If no components are specified, it assumes only C\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define GPTL C Component\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define GPTL Fortran Component\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define GPTL Fortran_Perf Component\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Search for list of valid components requested\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#==============================================================================\n\n# SEARCH FOR VALIDATED COMPONENTS\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If not found already, search...\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Manually add the MPI include and library dirs to search paths\n",
        "Line" : 48,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Search for the package component\n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 9
    },
    "cmake/FindHDF5.cmake" : {
      "ObjectId" : "e918277b1aef0d2ff5fc02ed23852655f290ee04",
      "LastModified" : "2017-02-08T19:44:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find HDF5\n\n#\n\n# This can be controlled by setting the HDF5_DIR (or, equivalently, the \n\n# HDF5 environment variable), or HDF5_<lang>_DIR CMake variables, where\n\n# <lang> is the COMPONENT language one needs.\n\n#\n\n# Once done, this will define:\n\n#\n\n#   HDF5_<lang>_FOUND        (BOOL) - system has HDF5\n\n#   HDF5_<lang>_IS_SHARED    (BOOL) - whether library is shared/dynamic\n\n#   HDF5_<lang>_INCLUDE_DIR  (PATH) - Location of the C header file\n\n#   HDF5_<lang>_INCLUDE_DIRS (LIST) - the HDF5 include directories\n\n#   HDF5_<lang>_LIBRARY      (FILE) - Path to the C library file\n\n#   HDF5_<lang>_LIBRARIES    (LIST) - link these to use HDF5\n\n#\n\n# The available COMPONENTS are: C HL Fortran Fortran_HL\n\n# If no components are specified, it assumes only C\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define HDF5 C Component\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define HDF5 HL Component\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define HDF5 Fortran Component\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define HDF5 Fortran_HL Component\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Search for list of valid components requested\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#==============================================================================\n\n# SEARCH FOR VALIDATED COMPONENTS\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If not found already, search...\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Manually add the MPI include and library dirs to search paths\n",
        "Line" : 54,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Search for the package component\n",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Continue only if found\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Dependencies\n",
        "Line" : 79,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "# DEPENDENCY: LIBZ\n",
        "Line" : 82,
        "CharPositionInLine" : 16
      },
      "13" : {
        "Text" : "# DEPENDENCY: SZIP (Optional)\n",
        "Line" : 89,
        "CharPositionInLine" : 16
      },
      "14" : {
        "Text" : "# DEPENDENCY: HDF5\n",
        "Line" : 105,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 15
    },
    "cmake/FindLIBRT.cmake" : {
      "ObjectId" : "1f55f9f3f13d2de146717718bf0d7d61b4b7da35",
      "LastModified" : "2017-02-08T19:44:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LIBRT\n\n#\n\n# This can be controlled by setting the LIBRT_DIR (or, equivalently, the \n\n# LIBRT environment variable).\n\n#\n\n# Once done, this will define:\n\n#\n\n#   LIBRT_FOUND        (BOOL) - system has LIBRT\n\n#   LIBRT_IS_SHARED    (BOOL) - whether library is shared/dynamic\n\n#   LIBRT_INCLUDE_DIR  (PATH) - Location of the C header file\n\n#   LIBRT_INCLUDE_DIRS (LIST) - the LIBRT include directories\n\n#   LIBRT_LIBRARY      (FILE) - Path to the C library file\n\n#   LIBRT_LIBRARIES    (LIST) - link these to use LIBRT\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define LIBRT package\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# SEARCH FOR PACKAGE\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for the package\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/FindLIBZ.cmake" : {
      "ObjectId" : "8ebbaefeed84bbb9a71eb842d9a0d660e2fffacc",
      "LastModified" : "2017-02-08T19:44:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LIBZ\n\n#\n\n# This can be controlled by setting the LIBZ_DIR (or, equivalently, the \n\n# LIBZ environment variable).\n\n#\n\n# Once done, this will define:\n\n#\n\n#   LIBZ_FOUND        (BOOL) - system has LIBZ\n\n#   LIBZ_IS_SHARED    (BOOL) - whether library is shared/dynamic\n\n#   LIBZ_INCLUDE_DIR  (PATH) - Location of the C header file\n\n#   LIBZ_INCLUDE_DIRS (LIST) - the LIBZ include directories\n\n#   LIBZ_LIBRARY      (FILE) - Path to the C library file\n\n#   LIBZ_LIBRARIES    (LIST) - link these to use LIBZ\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define LIBZ package\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# SEARCH FOR PACKAGE\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Manually add the MPI include and library dirs to search paths \n\n# and search for the package component\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/FindMPE.cmake" : {
      "ObjectId" : "5a964172da7697a0527c5efb8f284e1d83f2b434",
      "LastModified" : "2017-02-08T19:44:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find MPE\n\n#\n\n# This can be controlled by setting the MPE_PATH (or, equivalently,\n\n# the MPE environment variable), or MPE_<lang>_PATH CMake variables,\n\n# where <lang> is the COMPONENT language one needs.\n\n#\n\n# Once done, this will define:\n\n#\n\n#   MPE_<lang>_FOUND        (BOOL) - system has MPE\n\n#   MPE_<lang>_IS_SHARED    (BOOL) - whether library is shared/dynamic\n\n#   MPE_<lang>_INCLUDE_DIR  (PATH) - Location of the C header file\n\n#   MPE_<lang>_INCLUDE_DIRS (LIST) - the MPE include directories\n\n#   MPE_<lang>_LIBRARY      (FILE) - Path to the C library file\n\n#   MPE_<lang>_LIBRARIES    (LIST) - link these to use MPE\n\n#\n\n# The available COMPONENTS are: C \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define MPE C Component\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search for list of valid components requested\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#==============================================================================\n\n# SEARCH FOR VALIDATED COMPONENTS\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If not found already, search...\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Manually add the MPI include and library dirs to search paths\n\n# and search for the package component\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "cmake/FindMPISERIAL.cmake" : {
      "ObjectId" : "09906eb7a2daf6d21285f85e2d7d7d8e555d6c7b",
      "LastModified" : "2017-02-08T19:44:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find MPISERIAL\n\n#\n\n# This can be controlled by setting the MPISERIAL_PATH (or, equivalently, the \n\n# MPISERIAL environment variable).\n\n#\n\n# Once done, this will define:\n\n#\n\n#   MPISERIAL_FOUND        (BOOL) - system has MPISERIAL\n\n#   MPISERIAL_IS_SHARED    (BOOL) - whether library is shared/dynamic\n\n#   MPISERIAL_INCLUDE_DIR  (PATH) - Location of the C header file\n\n#   MPISERIAL_INCLUDE_DIRS (LIST) - the MPISERIAL include directories\n\n#   MPISERIAL_LIBRARY      (FILE) - Path to the C library file\n\n#   MPISERIAL_LIBRARIES    (LIST) - link these to use MPISERIAL\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define MPISERIAL C component\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define MPISERIAL Fortran component\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for list of valid components requested\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#==============================================================================\n\n# SEARCH FOR VALIDATED COMPONENTS\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If not found already, search...\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Search for the package\n",
        "Line" : 39,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    },
    "cmake/FindNetCDF.cmake" : {
      "ObjectId" : "344714b18ab1df3315fd5f850acb612c4591bf55",
      "LastModified" : "2017-02-08T19:44:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find NetCDF\n\n#\n\n# This can be controlled by setting the NetCDF_PATH (or, equivalently, the\n\n# NETCDF environment variable), or NetCDF_<lang>_PATH CMake variables, where\n\n# <lang> is the COMPONENT language one needs.\n\n#\n\n# Once done, this will define:\n\n#\n\n#   NetCDF_<lang>_FOUND        (BOOL) - system has NetCDF\n\n#   NetCDF_<lang>_IS_SHARED    (BOOL) - whether library is shared/dynamic\n\n#   NetCDF_<lang>_INCLUDE_DIR  (PATH) - Location of the C header file\n\n#   NetCDF_<lang>_INCLUDE_DIRS (LIST) - the NetCDF include directories\n\n#   NetCDF_<lang>_LIBRARY      (FILE) - Path to the C library file\n\n#   NetCDF_<lang>_LIBRARIES    (LIST) - link these to use NetCDF\n\n#\n\n# The available COMPONENTS are: C Fortran\n\n# If no components are specified, it assumes only C\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define NetCDF C Component\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define NetCDF Fortran Component\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for list of valid components requested\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#==============================================================================\n\n# SEARCH FOR VALIDATED COMPONENTS\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If not found already, search...\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Manually add the MPI include and library dirs to search paths\n\n# and search for the package component\n",
        "Line" : 43,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Continue only if component found\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Checks\n",
        "Line" : 58,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# Check version\n",
        "Line" : 61,
        "CharPositionInLine" : 16
      },
      "10" : {
        "Text" : "# Check for parallel support\n",
        "Line" : 67,
        "CharPositionInLine" : 16
      },
      "11" : {
        "Text" : "# Check if logging enabled\n",
        "Line" : 74,
        "CharPositionInLine" : 17
      },
      "12" : {
        "Text" : "# Dependencies\n",
        "Line" : 81,
        "CharPositionInLine" : 12
      },
      "13" : {
        "Text" : "# DEPENDENCY: PnetCDF (if PnetCDF enabled)\n",
        "Line" : 84,
        "CharPositionInLine" : 16
      },
      "14" : {
        "Text" : "# DEPENDENCY: CURL (If DAP enabled)\n",
        "Line" : 98,
        "CharPositionInLine" : 16
      },
      "15" : {
        "Text" : "# DEPENDENCY: HDF5\n",
        "Line" : 112,
        "CharPositionInLine" : 16
      },
      "16" : {
        "Text" : "# DEPENDENCY: LIBDL Math\n",
        "Line" : 121,
        "CharPositionInLine" : 16
      },
      "17" : {
        "Text" : "# DEPENDENCY: NetCDF\n",
        "Line" : 126,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 18
    },
    "cmake/FindPAPI.cmake" : {
      "ObjectId" : "dcf1445bc7dd8410776afbc7efb12c0b812c70d8",
      "LastModified" : "2017-02-08T19:44:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find PAPI\n\n#\n\n# This can be controlled by setting the PAPI_DIR (or, equivalently, the \n\n# PAPI environment variable).\n\n#\n\n# Once done, this will define:\n\n#\n\n#   PAPI_FOUND        (BOOL) - system has PAPI\n\n#   PAPI_IS_SHARED    (BOOL) - whether library is shared/dynamic\n\n#   PAPI_INCLUDE_DIR  (PATH) - Location of the C header file\n\n#   PAPI_INCLUDE_DIRS (LIST) - the PAPI include directories\n\n#   PAPI_LIBRARY      (FILE) - Path to the C library file\n\n#   PAPI_LIBRARIES    (LIST) - link these to use PAPI\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define PAPI package\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# SEARCH FOR PACKAGE\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for the package\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/FindPnetCDF.cmake" : {
      "ObjectId" : "b87d245cd10bf98976e88b1d048bbf26b2bc3f43",
      "LastModified" : "2017-02-08T19:44:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find PnetCDF\n\n#\n\n# This can be controlled by setting the PnetCDF_PATH (or, equivalently, the \n\n# PNETCDF environment variable), or PnetCDF_<lang>_PATH CMake variables, where\n\n# <lang> is the COMPONENT language one needs.\n\n#\n\n# Once done, this will define:\n\n#\n\n#   PnetCDF_<lang>_FOUND        (BOOL) - system has PnetCDF\n\n#   PnetCDF_<lang>_IS_SHARED    (BOOL) - whether library is shared/dynamic\n\n#   PnetCDF_<lang>_INCLUDE_DIR  (PATH) - Location of the C header file\n\n#   PnetCDF_<lang>_INCLUDE_DIRS (LIST) - the PnetCDF include directories\n\n#   PnetCDF_<lang>_LIBRARY      (FILE) - Path to the C library file\n\n#   PnetCDF_<lang>_LIBRARIES    (LIST) - link these to use PnetCDF\n\n#\n\n# The available COMPONENTS are: C, Fortran\n\n# If no components are specified, it assumes only C\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define PnetCDF C Component\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define PnetCDF Fortran Component\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for list of valid components requested\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#==============================================================================\n\n# SEARCH FOR VALIDATED COMPONENTS\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If not found already, search...\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Manually add the MPI include and library dirs to search paths\n\n# and search for the package component\n",
        "Line" : 43,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Continue only if component found\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Check version\n",
        "Line" : 58,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 9
    },
    "cmake/FindSZIP.cmake" : {
      "ObjectId" : "e65cfe5fd6807851d9f0051355c64f27be77433a",
      "LastModified" : "2017-02-08T19:44:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find SZIP\n\n#\n\n# This can be controlled by setting the SZIP_DIR (or, equivalently, the \n\n# SZIP environment variable).\n\n#\n\n# Once done, this will define:\n\n#\n\n#   SZIP_FOUND        (BOOL) - system has SZIP\n\n#   SZIP_IS_SHARED    (BOOL) - whether library is shared/dynamic\n\n#   SZIP_INCLUDE_DIR  (PATH) - Location of the C header file\n\n#   SZIP_INCLUDE_DIRS (LIST) - the SZIP include directories\n\n#   SZIP_LIBRARY      (FILE) - Path to the C library file\n\n#   SZIP_LIBRARIES    (LIST) - link these to use SZIP\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define SZIP package\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# SEARCH FOR PACKAGE\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Manually add the MPI include and library dirs to search paths \n\n# and search for the package component\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/LibCheck.cmake" : {
      "ObjectId" : "3f12bdf796571318410399bfed3ec14748c074df",
      "LastModified" : "2017-03-08T19:13:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n#\n\n#  FUNCTIONS TO HELP WITH Check* MODULES\n\n#\n\n#==============================================================================\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#______________________________________________________________________________\n\n# - Basic function to check a property of a package using a try_compile step\n\n#\n\n# SYNTAX:  check_macro (<return_variable>\n\n#                          NAME <filename>\n\n#                          HINTS <path> <path> ...\n\n#                          DEFINITIONS <definition1> <definition> ...\n\n#                          COMMENT <string_comment>)\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Parse the input arguments\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# If the return variable is defined, already, don't continue\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#______________________________________________________________________________\n\n# - Basic function to check the version of a package using a try_run step\n\n#\n\n# SYNTAX:  check_version (<pkg>\n\n#                         NAME <try_version_file>\n\n#                         HINTS <path> <path> ...\n\n#                         DEFINITIONS <definition1> <definition> ...)\n\n#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Parse the input arguments\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# If the return variable is defined, already, don't continue\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "cmake/LibFind.cmake" : {
      "ObjectId" : "61cd93aa37d4d2b8b5e5077fcf7c0266912fd32e",
      "LastModified" : "2018-08-06T21:49:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n#\n\n#  FUNCTIONS TO HELP WITH Find* MODULES\n\n#\n\n#==============================================================================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#______________________________________________________________________________\n\n# - Wrapper for finding static libraries ONLY\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#______________________________________________________________________________\n\n# - Wrapper for finding shared/dynamic libraries ONLY\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#______________________________________________________________________________\n\n# - Function to determine type (SHARED or STATIC) of library\n\n#\n\n#   Input:\n\n#     LIB             (FILE)\n\n#\n\n#   Returns:\n\n#     RETURN_VAR      (BOOL)\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#______________________________________________________________________________\n\n# - Function to define a valid package component\n\n#\n\n#   Input:\n\n#     ${PKG}_DEFAULT             (BOOL)\n\n#     ${PKG}_COMPONENT           (STRING)\n\n#     ${PKG}_INCLUDE_NAMES       (LIST)\n\n#     ${PKG}_LIBRARY_NAMES       (LIST)\n\n#\n\n#   Returns:\n\n#     ${PKG}_DEFAULT_COMPONENT           (STRING)\n\n#     ${PKG}_VALID_COMPONENTS            (LIST)\n\n#     ${PKG}_${COMPONENT}_INCLUDE_NAMES  (LIST)\n\n#     ${PKG}_${COMPONENT}_LIBRARY_NAMES  (LIST)\n\n#\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Parse the input arguments\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Set return values\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#______________________________________________________________________________\n\n# - Function to find valid package components\n\n#\n\n#   Assumes pre-defined variables: \n\n#     ${PKG}_FIND_COMPONENTS        (LIST)\n\n#     ${PKG}_DEFAULT_COMPONENT      (STRING)\n\n#     ${PKG}_VALID_COMPONENTS       (LIST)\n\n#\n\n#   Returns:\n\n#     ${PKG}_FIND_VALID_COMPONENTS  (LIST)\n\n#\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#______________________________________________________________________________\n\n# - Initialize a list of paths from a list of includes and libraries\n\n#\n\n# Input:\n\n#   INCLUDE_DIRECTORIES\n\n#   LIBRARIES\n\n#\n\n# Ouput:\n\n#   ${PATHLIST}\n\n#\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Parse the input arguments\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#______________________________________________________________________________\n\n# - Basic find package macro for a specific component\n\n#\n\n# Assumes pre-defined variables:\n\n#   ${PKG}_${COMP}_INCLUDE_NAMES or ${PKG}_INCLUDE_NAMES\n\n#   ${PKG}_${COMP}_LIBRARY_NAMES or ${PKG}_LIBRARY_NAMES\n\n#\n\n# Input:\n\n#   ${PKG}_COMPONENT\n\n#   ${PKG}_HINTS\n\n#   ${PKG}_PATHS\n\n#\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Parse the input arguments\n",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Only continue if package not found already\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Handle QUIET and REQUIRED arguments\n",
        "Line" : 196,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Determine search order\n",
        "Line" : 204,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Start the search for the include file and library file. Only overload\n\n# if the variable is not defined.\n",
        "Line" : 228,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Search for include file names in current dirrectory\n",
        "Line" : 238,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# Search for library file names in the found prefix only!\n",
        "Line" : 252,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# If found, check if library is static or dynamic \n",
        "Line" : 260,
        "CharPositionInLine" : 16
      },
      "19" : {
        "Text" : "# If we want only shared libraries, and it isn't shared...                \n",
        "Line" : 264,
        "CharPositionInLine" : 20
      },
      "20" : {
        "Text" : "# If we want only static libraries, and it is shared...\n",
        "Line" : 276,
        "CharPositionInLine" : 20
      },
      "21" : {
        "Text" : "# If include dir and library both found, then we're done\n",
        "Line" : 290,
        "CharPositionInLine" : 16
      },
      "22" : {
        "Text" : "# Otherwise, reset the search variables and continue\n",
        "Line" : 294,
        "CharPositionInLine" : 16
      },
      "23" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and \n\n# set NetCDF_C_FOUND to TRUE if all listed variables are TRUE\n",
        "Line" : 304,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# HACK For bug in CMake v3.0:\n",
        "Line" : 311,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# Set return variables\n",
        "Line" : 314,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# Set variables in parent scope\n",
        "Line" : 320,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 27
    },
    "cmake/LibMPI.cmake" : {
      "ObjectId" : "f1116724831f08315eaac29458a51bb7b85e8b67",
      "LastModified" : "2018-12-18T18:11:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Valgrind to perform memory leak check\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# - Functions for parallel testing with CTest\n\n#\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#==============================================================================\n\n# - Get the machine platform-specific\n\n#\n\n# Syntax:  platform_name (RETURN_VARIABLE)\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Determine platform name from site name...\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# ALCF/Argonne Machines\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# NERSC Machines\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# NCSA Machine (Blue Waters)\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# OLCF/Oak Ridge Machines\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#==============================================================================\n\n# - Add a new parallel test\n\n#\n\n# Syntax:  add_mpi_test (<TESTNAME>\n\n#                        EXECUTABLE <command>\n\n#                        ARGUMENTS <arg1> <arg2> ...\n\n#                        NUMPROCS <num_procs>\n\n#                        TIMEOUT <timeout>)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Parse the input arguments\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Store parsed arguments for convenience\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Get the platform name\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Default (\"unknown\" platform) execution\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Run tests directly from the command line\n",
        "Line" : 96,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Run tests from the platform-specific executable\n",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Add the test to CTest\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Adjust the test timeout\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 17
    },
    "ctest/CTestEnvironment-alcf.cmake" : {
      "ObjectId" : "607076479def092a8878d60dc5aa75efe6a7b779",
      "LastModified" : "2017-02-08T19:44:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n#\n\n#  This file sets the environment variables needed to configure and build\n\n#  on the Argonne Leadership Computing Facility systems \n\n#  (mira/cetus/vesta/cooley).\n\n#\n\n#==============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Assume all package locations (NetCDF, PnetCDF, HDF5, etc) are already\n\n# set with existing environment variables: NETCDF, PNETCDF, HDF5, etc.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define the extra CMake configure options\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ctest/CTestEnvironment-anlworkstation.cmake" : {
      "ObjectId" : "ddf04f063a6e8ffbd7dd2a96a51ed25237991cd2",
      "LastModified" : "2018-12-18T18:11:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n#\n\n#  This file sets the environment variables needed to configure and build\n\n#  on Argonne Linux workstations\n\n#\n\n#==============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Assume all package locations (NetCDF, PnetCDF, HDF5, etc) are already\n\n# set with existing environment variables: NETCDF, PNETCDF, HDF5, etc.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define the extra CMake configure options\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If ENABLE_COVERAGE environment variable is set, then enable code coverage\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If VALGRIND_CHECK environment variable is set, then enable memory leak check using Valgrind\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If USE_MALLOC environment variable is set, then use native malloc (instead of bget package)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "ctest/CTestEnvironment-cgd.cmake" : {
      "ObjectId" : "eb8606e46d0794e66b0468f89b95c6b7a365cdb0",
      "LastModified" : "2018-12-18T18:11:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n#\n\n#  This file sets the environment variables needed to configure and build\n\n#  on the NCAR CGD cluster Hobart\n\n#\n\n#==============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Assume all package locations (NetCDF, PnetCDF, HDF5, etc) are already\n\n# set with existing environment variables: NETCDF, PNETCDF, HDF5, etc.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define the extra CMake configure options\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If MPISERIAL environment variable is set, then enable MPISERIAL\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ctest/CTestEnvironment-ncsa.cmake" : {
      "ObjectId" : "706946ec2bc3d02f5f63f4f9fdac9b2878ad299d",
      "LastModified" : "2018-12-18T18:11:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n#\n\n#  This file sets the environment variables needed to configure and build\n\n#  on the NCSA systems \n\n#  (Blue Waters).\n\n#\n\n#==============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Assume all package locations (NetCDF, PnetCDF, HDF5, etc) are already\n\n# set with existing environment variables: NETCDF, PNETCDF, HDF5, etc.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define the extra CMake configure options\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ctest/CTestEnvironment-nersc.cmake" : {
      "ObjectId" : "6b1ac8fa7911018f9b3722f385ac1a96a5921cdf",
      "LastModified" : "2018-12-18T18:11:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n#\n\n#  This file sets the environment variables needed to configure and build\n\n#  on the NERSC systems \n\n#  (edison/ corip1).\n\n#\n\n#==============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Assume all package locations (NetCDF, PnetCDF, HDF5, etc) are already\n\n# set with existing environment variables: NETCDF, PNETCDF, HDF5, etc.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define the extra CMake configure options\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set (CTEST_CONFIGURE_OPTIONS \"${CTEST_CONFIGURE_OPTIONS} -DHDF5_PATH=$ENV{HDF5_DIR}\")\n\n#set (CTEST_CONFIGURE_OPTIONS \"${CTEST_CONFIGURE_OPTIONS} -DMPI_C_INCLUDE_PATH=$ENV{MPICH_DIR}/include\")\n\n#set (CTEST_CONFIGURE_OPTIONS \"${CTEST_CONFIGURE_OPTIONS} -DMPI_Fortran_INCLUDE_PATH=$ENV{MPICH_DIR}/include\")\n\n#set (CTEST_CONFIGURE_OPTIONS \"${CTEST_CONFIGURE_OPTIONS} -DMPI_C_LIBRARIES=$ENV{MPICH_DIR}/lib/libmpich.a\")\n\n#set (CTEST_CONFIGURE_OPTIONS \"${CTEST_CONFIGURE_OPTIONS} -DMPI_Fortran_LIBRARIES=$ENV{MPICH_DIR}/lib/libmpichf90.a\")\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ctest/CTestEnvironment-nwscla.cmake" : {
      "ObjectId" : "efee6bf659d9a2ab5d420aa969365d5b0d5bd5d4",
      "LastModified" : "2018-12-18T18:11:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n#\n\n#  This file sets the environment variables needed to configure and build\n\n#  on the new NCAR Wyoming Supercomputing Center systems\n\n#  (laramie/cheyenne).\n\n#\n\n#==============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Assume all package locations (NetCDF, PnetCDF, HDF5, etc) are already\n\n# set with existing environment variables: NETCDF, PNETCDF, HDF5, etc.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define the extra CMake configure options\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If MPISERIAL environment variable is set, then enable MPISERIAL\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ctest/CTestEnvironment-unknown.cmake" : {
      "ObjectId" : "8d51f15fffda9fd46a5ff6c31d61b1b4373d98d5",
      "LastModified" : "2018-12-18T18:11:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n#\n\n#  This file sets the CMake variables needed to configure and build\n\n#  on the default (\"unknown\") system.\n\n#\n\n#==============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Assume all package locations (NetCDF, PnetCDF, HDF5, etc) are already\n\n# set with existing environment variables: NETCDF, PNETCDF, HDF5, etc.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define the extra CMake configure options\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ctest/CTestScript-Test.cmake" : {
      "ObjectId" : "79aec3bca6832013c9858a5a62fc960dd1f6bb5f",
      "LastModified" : "2018-12-18T18:11:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n#\n\n#  This is the CTest script for generating test results for submission to the \n\n#  CTest Dashboard site: my.cdash.org.\n\n#\n\n#  Example originally stolen from:\n\n#    http://www.vtk.org/Wiki/CTest:Using_CTEST_and_CDASH_without_CMAKE\n\n#==============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-------------------------------------------\n\n#-- Get the common build information\n\n#-------------------------------------------\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -----------------------------------------------------------  \n\n# -- Run CTest- TESTING ONLY (Appended to existing TAG)\n\n# -----------------------------------------------------------  \n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## -- Start\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## -- TEST\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Don't submit!  Submission handled by main CTestScript\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "doc/CMakeFiles/3.2.3/CMakeSystem.cmake" : {
      "ObjectId" : "c94e370e1b0dc7b9dbffa3cd64097ec670be59d2",
      "LastModified" : "2018-12-18T18:11:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "982b445b66a5a9cb788c5aa5fc7cf9fb2b794631",
      "LastModified" : "2018-12-18T18:11:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n#\n\n#  API documentation with Doxygen\n\n#\n\n#==============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This supports the build with/witout internal documentation.\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Process the Doxyfile using options set during configure.\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Copy necessary files.\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "doc/Makefile.am" : {
      "ObjectId" : "083c26f69c0ff13d401822c13f8e8cba7ceaa60f",
      "LastModified" : "2019-04-04T15:07:17Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# This is part of PIO. It creates the doc Makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ed Hartnett 4/1/19\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# simple doxygen target\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# clean up the extras including doxygen\n\n#clean-local:\n\n#\tcd ${top_srcdir}\n\n#\trm -rf doxygen\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "cd4fc6c23dfe2acafb108e548f9c8eaa2369b577",
      "LastModified" : "2019-04-04T15:07:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###-------------------------------------------------------------------------###\n\n### CMakeList.txt for examples using pio\n\n###-------------------------------------------------------------------------###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    ADD_SUBDIRECTORY(cxx)\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "examples/Makefile.am" : {
      "ObjectId" : "38c170d4579de56879df5350aa4adec72bfcabb7",
      "LastModified" : "2019-04-04T15:07:17Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# This is part of PIO. It creates the examples Makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ed Hartnett\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/basic/CMakeLists.txt" : {
      "ObjectId" : "efa784e01e1091d0c6b85c67fa0d7b66893fa13a",
      "LastModified" : "2019-04-04T15:07:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/c/CMakeLists.txt" : {
      "ObjectId" : "4f1115b48d544045ed84730a805d48dce6a771cf",
      "LastModified" : "2019-04-04T15:07:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###-------------------------------------------------------------------------###\n\n### CMakeList.txt for examples using pio\n\n###-------------------------------------------------------------------------###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include PIO include and lib directories\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compiler-specific compiler options\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#add_mpi_test(darray_async EXECUTABLE ${CMAKE_CURRENT_BINARY_DIR}/darray_async NUMPROCS 5 TIMEOUT 60)\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#===== MPE =====\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "examples/c/Makefile.am" : {
      "ObjectId" : "50750dd913225271a45164d79894b910a56c170e",
      "LastModified" : "2019-04-11T14:12:08Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is the automake file for building the C examples for the PIO\n\n## library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ed Hartnett 5/7/18\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Link to our assembled library.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build the tests for make check.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tests will run from a bash script.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# RUN_TESTS\n",
        "Line" : 16,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Distribute the test script.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Clean up files produced during testing.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "examples/cxx/CMakeLists.txt" : {
      "ObjectId" : "5f22a39c60121b51241cbd3907e242dd380c19e6",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###-------------------------------------------------------------------------###\n\n### CMakeList.txt for examples using pio\n\n###-------------------------------------------------------------------------###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Adding PIO definitions - defined in the root directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/f03/CMakeLists.txt" : {
      "ObjectId" : "a299c7cde8c847d30dc9bdbb0624b2616b31ae23",
      "LastModified" : "2019-04-04T15:07:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###-------------------------------------------------------------------------###\n\n### CMakeList.txt for examples using pio\n\n###-------------------------------------------------------------------------###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Adding PIO definitions - defined in the root directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include PIO include and lib directories\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "5c5c079fa1e8368a1bfd29ff256a190092e86da1",
      "LastModified" : "2019-04-04T15:07:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n#  PRELIMINARIES\n\n#==============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test for big-endian nature\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for GPTL\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#==============================================================================\n\n#  INCLUDE SOURCE DIRECTORIES\n\n#==============================================================================\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build GPTL only if necessary\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build the C library\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build the Fortran library\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/Makefile.am" : {
      "ObjectId" : "7cd8d61f77b999e9e5ba9eb94be7971f14c7c538",
      "LastModified" : "2019-04-09T17:50:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# This is part of PIO. It creates the Makefile for the src directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ed Hartnett\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Does the user want to build fortran?\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/clib/CMakeLists.txt" : {
      "ObjectId" : "baf4dcd3c759e10316357a6cc47b098f39c3bef0",
      "LastModified" : "2019-04-04T15:07:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n#  DEFINE THE TARGET\n\n#==============================================================================\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set up include-directories\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# to find foo/foo.h\n\n# to find foo/config.h\n",
        "Line" : 17,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : "# Include the clib source directory\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# System and compiler CPP directives\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Compiler-specific compiler options\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#==============================================================================\n\n#  DEFINE THE INSTALL\n\n#==============================================================================\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Library\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Include/Header File\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#==============================================================================\n\n#  DEFINE THE DEPENDENCIES\n\n#==============================================================================\n\n# MPI test done at top level\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#===== GPTL =====\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#===== NetCDF-C =====\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# netcdf.h needs this to be defined to use netCDF logging.\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#===== PnetCDF-C =====\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Check library for varn functions\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#===== Add EXTRAs =====\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#===== Check for necessities =====\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "src/clib/Makefile.am" : {
      "ObjectId" : "1703f5d0e0102b0d6b9576e7dd7daa3547706219",
      "LastModified" : "2019-04-04T15:07:17Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is the automake file to build the PIO C library.\n\n# Ed Hartnett 8/19/17\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The library we are building.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These linker flags specify libtool version info.\n\n# See http://www.gnu.org/software/libtool/manual/libtool.html#Libtool-versioning\n\n# for information regarding incrementing `-version-info`.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The header file.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The library soure files.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/flib/CMakeLists.txt" : {
      "ObjectId" : "42b70edb78997aac3c13837aa3aff88bd794045e",
      "LastModified" : "2019-04-04T15:07:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n#  DEFINE THE TARGET\n\n#==============================================================================\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include flib source and binary directories (for Fortran modules)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# System and compiler CPP directives\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compiler-specific compile options\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#    target_compile_options (piof\n\n#        PRIVATE -mismatch_all)\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Look for c_sizeof capability\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Look for filesystem hints\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#==============================================================================\n\n#  DEFINE THE INSTALL\n\n#==============================================================================\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Library\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Fortran Modules\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#==============================================================================\n\n#  DEFINE THE DEPENDENCIES\n\n#==============================================================================\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#===== pioc =====\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#===== genf90 =====\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#===== Fortran Source Generation with GenF90 =====\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#===== MPI =====\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Check MPI I/O capabilities\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check for MPI Fortran module\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#===== GPTL =====\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#===== NetCDF-Fortran =====\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#===== PnetCDF =====\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Check library for varn functions\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "#===== Add EXTRAs =====\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#===== Check for necessities =====\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "src/flib/Makefile.am" : {
      "ObjectId" : "6557dd9ecf1419e45d859d90cd3998b29924a45f",
      "LastModified" : "2019-04-04T15:07:17Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is the automake file to build the PIO Fortran library.\n\n# Ed Hartnett 3/19/19\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Turn off parallel builds in this directory.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The library we are building.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# These linker flags specify libtool version info.\n\n# See http://www.gnu.org/software/libtool/manual/libtool.html#Libtool-versioning\n\n# for information regarding incrementing `-version-info`.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The library soure files.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build these uninstalled convenience libraries.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The convenience libraries depends on their source.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Each mod file depends on the .o file.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Mod files are built and then installed as headers.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "src/gptl/CMakeLists.txt" : {
      "ObjectId" : "5f73687f23db46bcc4995f5d613307c59073077e",
      "LastModified" : "2019-04-04T15:07:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n#  DEFINE THE TARGET\n\n#==============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    target_compile_options (gptl\n\n#        PRIVATE -mismatch_all)\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#==============================================================================\n\n#  DEFINE THE INSTALL\n\n#==============================================================================\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Library\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Header/Include File\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Fortran Modules\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#==============================================================================\n\n#  DEFINE THE DEPENDENCIES\n\n#==============================================================================\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#===== PAPI =====\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#===== LIBRT =====\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#===== MPI =====\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Check MPI library for Comm_f2c function\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Check for MPI Fortran module\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#===== GetTimeOfDay =====\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "src/gptl/Makefile.am" : {
      "ObjectId" : "54216d4ffa991fb91486dd2acd651737b76bbae1",
      "LastModified" : "2019-04-11T12:59:59Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# This is part of PIO. It creates the Makefile for the GPTL directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ed Hartnett 4/9/19\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Turn off parallel builds in this directory.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build these uninstalled convenience libraries.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The convenience libraries depends on their source.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Each mod file depends on the .o file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Does the user want to build fortran?\n\n#if BUILD_FORTRAN\n\n#endif\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "115c732b51c7b8c749a11dfcfdef860bd4f050ef",
      "LastModified" : "2019-04-04T15:07:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n#  TESTING TARGET\n\n#==============================================================================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# # Custom \"piotests\" target (builds the test executables)\n\n# add_custom_target (tests)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# # Custom \"check\" target that depends upon \"tests\"\n\n# add_custom_target (check COMMAND ${CMAKE_CTEST_COMMAND})\n\n# add_dependencies (check tests)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#==============================================================================\n\n#  INCLUDE SOURCE DIRECTORIES\n\n#==============================================================================\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/Makefile.am" : {
      "ObjectId" : "a643bbcd9760ef611bdc235ad3284e362dec404b",
      "LastModified" : "2019-04-09T17:50:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# This file is part of PIO. It generates the Makefiles for the tests\n\n# directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ed Hartnett\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Does the user want to build fortran? If so, there are two additional\n\n# test directories.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/cunit/CMakeLists.txt" : {
      "ObjectId" : "64b6a20b7275987ce6aaf47d4db57f4bfb5c6d48",
      "LastModified" : "2019-04-04T15:07:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compiler-specific compiler options\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#==============================================================================\n\n#  PREPARE FOR TESTING\n\n#==============================================================================\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Don't run these tests if we are using MPI SERIAL.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  add_dependencies (tests test_perf2)\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Test Timeout in seconds.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# All tests need a certain number of tasks, but they should be able to\n\n# run successfully with more than they need. Test this by providing an\n\n# extra processor for each C test.\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# add_mpi_test(test_perf2\n\n#   EXECUTABLE ${CMAKE_CURRENT_BINARY_DIR}/test_perf2\n\n#   NUMPROCS ${AT_LEAST_FOUR_TASKS}\n\n#   TIMEOUT ${DEFAULT_TEST_TIMEOUT})\n",
        "Line" : 277,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "tests/cunit/Makefile.am" : {
      "ObjectId" : "ff25651eeb7b78a00bf6bfb4093d5f52e3579de1",
      "LastModified" : "2019-04-11T14:12:08Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is the automake file for building the C tests for the PIO\n\n## library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ed Hartnett 8/17/17\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Link to our assembled library.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build the tests for make check.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tests will run from a bash script.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# RUN_TESTS\n",
        "Line" : 27,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Source code for each test.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Distribute the test script.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Clean up files produced during testing.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "tests/general/CMakeLists.txt" : {
      "ObjectId" : "4f54c7831782a424d73bd4d7c06d47ed2e481391",
      "LastModified" : "2019-04-04T15:07:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n#  GENERATE TARGET SOURCES\n\n#==============================================================================\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    target_compile_options (gptl\n\n#        PRIVATE -mismatch_all)\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#==============================================================================\n\n#  DEFINE THE TARGETS AND TESTS\n\n#==============================================================================\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Test Timeout (4 min = 240 sec)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#===== pio_init_finalize =====\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#===== pio_file_simple_tests =====\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#===== pio_file_fail =====\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#===== ncdf_simple_tests =====\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#===== ncdf_get_put =====\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#===== ncdf_fail =====\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#===== ncdf_inq =====\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#===== pio_rearr =====\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#===== pio_rearr_opts =====\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#===== pio_rearr_opts2 =====\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#===== pio_decomp_tests =====\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#===== pio_decomp_tests_1d =====\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#===== pio_decomp_tests_2d =====\n",
        "Line" : 516,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#===== pio_decomp_tests_3d =====\n",
        "Line" : 629,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#===== pio_decomp_frame_tests =====\n",
        "Line" : 742,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#===== pio_decomp_fillval =====\n",
        "Line" : 761,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#===== pio_iosystems_test =====\n",
        "Line" : 780,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#===== pio_iosystems_test2 =====\n",
        "Line" : 800,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#===== pio_iosystems_test3 =====\n",
        "Line" : 819,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "tests/general/Makefile.am" : {
      "ObjectId" : "d7f11687daa8620971e88be5e92974917a4f1fc8",
      "LastModified" : "2019-04-11T14:12:08Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is the automake file for building the Fortran general tests\n\n## for the PIO library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ed Hartnett 3/25/19\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Parallel builds don't currently work in this directory.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Put together AM_CPPFLAGS and AM_LDFLAGS.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# There is a test utility mod file in this subdir which must be built.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build these uninstalled convenience libraries.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The convenience libraries depends on their source.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# configure copies this from util dir.\n",
        "Line" : 23,
        "CharPositionInLine" : 40
      },
      "8" : {
        "Text" : "# Each mod file depends on the .o file.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Some mods are dependant on other mods in this dir.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Build the test for make check.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#pio_rearr_opts_SOURCES = pio_rearr_opts.F90\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Tests will run from a bash script.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# RUN_TESTS\n",
        "Line" : 66,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Distribute the test script.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Clean up files produced during testing.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "tests/general/util/Makefile.am" : {
      "ObjectId" : "208a2829469875dfe1791ad691a94d618f0a7f9f",
      "LastModified" : "2019-04-04T15:07:17Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is the automake file for building the Fortran general tests\n\n## util mod for the PIO library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ed Hartnett 3/29/19\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/performance/CMakeLists.txt" : {
      "ObjectId" : "fce71424308d852e2682e4122a22d99a5021037b",
      "LastModified" : "2019-04-04T15:07:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n#  DEFINE THE TARGETS AND TESTS\n\n#==============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    target_compile_options (gptl\n\n#        PRIVATE -mismatch_all)\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "tests/performance/Makefile.am" : {
      "ObjectId" : "17a14e91ce8b7b1755116bae1ecf768635995734",
      "LastModified" : "2019-04-11T14:12:08Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is the automake file for building the Fortran performance\n\n## tests for the PIO library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ed Hartnett 4/6/19\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Parallel builds don't currently work in this directory.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Put together AM_CPPFLAGS and AM_LDFLAGS.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Link to test util library and PIO Fortran and C libs.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find perf_mod and perf_util.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find pio_tutil.mod\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build the test for make check.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Tests will run from a bash script.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# RUN_TESTS\n",
        "Line" : 33,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Clean up files produced during testing.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "tests/unit/CMakeLists.txt" : {
      "ObjectId" : "eaf7c0f5694dd40ac8397efa41b5260c748cc321",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n#  PREPARE FOR TESTING\n\n#==============================================================================\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#==============================================================================\n\n#  DEFINE THE TARGETS AND TESTS\n\n#==============================================================================\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    target_compile_options (gptl\n\n#        PRIVATE -mismatch_all)\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Test Timeout in seconds.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# All tests need a certain number of tasks, but they should be able to\n\n# run successfully with more than they need. Test this by providing an\n\n# extra processor for each C test.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tests/unit/Makefile.am" : {
      "ObjectId" : "848f2af471b576e77631d4b7dd27b3729fc9b266",
      "LastModified" : "2019-04-11T14:12:08Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is the automake file for building the Fortran tests for the\n\n## PIO library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ed Hartnett 3/20/19\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Parallel builds don't currently work in this directory.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Put together AM_CPPFLAGS and AM_LDFLAGS.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build the test for make check.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build these uninstalled convenience libraries.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The convenience libraries depends on their source.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Tests will run from a bash script.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# RUN_TESTS\n",
        "Line" : 30,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Distribute the test script.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Clean up files produced during testing.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    }
  },
  "FileTypes" : {
    "CMAKE" : 40,
    "AUTOMAKE" : 14
  },
  "ElapsedTime" : 3816
}