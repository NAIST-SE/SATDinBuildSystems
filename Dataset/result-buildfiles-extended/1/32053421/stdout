{
  "Repository" : "32053421",
  "Revision" : "HEAD",
  "ObjectId" : "4d22c3cbfd4cd3194f8a53a2815476334ddb8dbf",
  "CommitTime" : "2019-04-13T21:23:57Z",
  "Files" : {
    "core/Makefile" : {
      "ObjectId" : "01e9ce76b6ac97c267e7a0f5353daaf203d189e7",
      "LastModified" : "2019-03-09T04:14:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# If you want debug/symbol info, add -gX and remove -OX as needed\n\n# If you want core debug support, add -DDEBUG_SUPPORT\n\n# If you want the emulator to run on a different thread than the gui, add -DMULTITHREAD\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add debugging support, with zdis disassembler\n\n# Note that this will require a compatible c11 compiler\n\n#CFLAGS += -DDEBUG_SUPPORT\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add these flags if your compiler supports it\n\n#CFLAGS += -Wstack-protector -fstack-protector-strong --param=ssp-buffer-size=1 -fsanitize=address,bounds -fsanitize-undefined-trap-on-error\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Build rules, you shouldn't need to edit anything below this line\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "gui/qt/CEmu.pro" : {
      "ObjectId" : "88622bbd0ab42ed6091f9281d938a2efdc821f30",
      "LastModified" : "2019-04-13T20:33:12Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Error if git submodules are not downloaded\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CEmu version and info\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Continuous Integration (variable checked later)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Code beautifying\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Linux desktop files\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Localization\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Core options\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# These options can be disabled / enabled depending on\n\n# compiler / library support for your toolchain\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#This is a release build\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#This is a debug build\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# GCC/clang flags\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Only enable opts for non-CI release builds\n\n# -flto might cause an internal compiler error on GCC in some circumstances (with -g3?)... Comment it if needed.\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# You should run ./capture/get_libpng-apng.sh first!\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# TODO: add equivalent flags\n\n# Example for -Werror=shadow: /weC4456 /weC4457 /weC4458 /weC4459\n\n#     Source: https://connect.microsoft.com/VisualStudio/feedback/details/1355600/\n\n# /wd5045: disable C5045\n\n#          (new warning that causes errors: \"Compiler will insert Spectre mitigation\n\n#          for memory load if /Qspectre switch specified\")\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Add -MP to enable speedier builds\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Do we have a flag specifying use of libpng-apng from vcpkg?\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# This is a bad hack, but MOC kinda needs it to work correctly...\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Otherwise...\n",
        "Line" : 127,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# If we're not using vcpkg, we rely on manual variables to find needed\n\n# libpng-apng components.\n\n# \n\n# Note that libpng/zlib LIBS/INCLUDES should be specified in the envrionment.\n\n# We will use LIBPNG_APNG_LIB, ZLIB_LIB, and LIBPNG_APNG_INCLUDE.\n\n# The logic below accounts for both specifying in the real shell environment,\n\n# as well as directly on the command line (e.g. qmake VAR=1).\n",
        "Line" : 129,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Be more secure by default...\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Use ASAN on debug builds. Watch out about ODR crashes when built with -flto. detect_odr_violation=0 as an env var may help.\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# If we want to keep supporting macOS down to 10.9, change this and build/deploy with Qt 5.8\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# This doesn't exist, but Qt Creator ignores that\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23,
      "Errorlog" : "line 355:21 token recognition error at: '\\i'\nline 355:27 token recognition error at: '\\i'\n"
    },
    "gui/sdl/Makefile" : {
      "ObjectId" : "6695f6182dbe501fd9cacd56c846771767e3c6b4",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Add these flags if your compiler supports it\n\n#CFLAGS += -Wstack-protector -fstack-protector-strong --param=ssp-buffer-size=1 -fsanitize=address,bounds -fsanitize-undefined-trap-on-error\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/autotester/CMakeLists.txt" : {
      "ObjectId" : "ca6ca87a1252f936679f882874e568ee01de4570",
      "LastModified" : "2016-05-22T06:18:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# You first need to build the cemucore library. Basically, type `make` in the core directory.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/autotester/Makefile" : {
      "ObjectId" : "07ddf21f67a9b034b94bf47bc92bfbda3ec28fd6",
      "LastModified" : "2019-03-09T04:14:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Add these flags if your compiler supports it\n\n#CFLAGS += -Wstack-protector -fstack-protector-strong --param=ssp-buffer-size=1 -fsanitize=address,bounds -fsanitize-undefined-trap-on-error\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 1,
    "QMAKE" : 1,
    "MAKEFILE" : 3
  },
  "ElapsedTime" : 1304
}