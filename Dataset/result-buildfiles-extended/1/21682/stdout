{
  "Repository" : "21682",
  "Revision" : "HEAD",
  "ObjectId" : "5cd6bf6c3f0606312daa14175a16c8d20f64e19e",
  "CommitTime" : "2019-04-02T11:34:44Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "2291b3e77e32147bc6d24d08c416177424479193",
      "LastModified" : "2019-01-25T06:17:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# option(ENABLE_LOG \"Build with logging using Log4cxx\" ON)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###### Prerequisites ######\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FIND SWIFTEN\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FIND BOOST\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# FIND POPT\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###### Database ######\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# FIND SQLITE3\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# FIND MYSQL\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# FIND PQXX\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###### Plugins ######\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# FIND LIBPURPLE\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# FIND LIBEVENT\n",
        "Line" : 142,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# FIND GLIB\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\tif (GLIB2_INCLUDE_DIR AND GLIB2_LIBRARIES)\n\n#\t\tset(GLIB2_FOUND TRUE)\n\n#\telse()\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\tendif()\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# FIND LIBXML2\n\n# find_package(libxml2)\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# FIND PROTOBUF\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ADD_DEFINITIONS(${SWIFTEN_CFLAGS})\n",
        "Line" : 201,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# ADD_DEFINITIONS(-DBOOST_FILESYSTEM_VERSION=2)\n",
        "Line" : 203,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "####### Miscallanous ######\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# if(ENABLE_LOG)\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# endif()\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# FIND CPPUNIT\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\tADD_SUBDIRECTORY(spectrum2_send_message)\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "backends/CMakeLists.txt" : {
      "ObjectId" : "09a9254c2a4a3054663a4e2b2a6de5865d29ca28",
      "LastModified" : "2017-06-08T14:32:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "backends/frotz/CMakeLists.txt" : {
      "ObjectId" : "b4a033144e4435b846a6be2eb991a66a4836f596",
      "LastModified" : "2015-10-15T12:41:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "backends/frotz/dfrotz/CMakeLists.txt" : {
      "ObjectId" : "925e8c0a406afaf6eac31fa51a434f506ce99b3c",
      "LastModified" : "2015-10-15T12:41:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# target_link_libraries(dfrotz)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "backends/libcommuni/CMakeLists.txt" : {
      "ObjectId" : "4a71b379ad1e54afb7af0059083eb5252045b28a",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "backends/libpurple/CMakeLists.txt" : {
      "ObjectId" : "d6b5839f1079523fe2fafdf81b88c45465c4dd8a",
      "LastModified" : "2017-06-08T14:32:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "backends/smstools3/CMakeLists.txt" : {
      "ObjectId" : "84f3497888ea40b84e601141147fe6c79abfe6a0",
      "LastModified" : "2015-10-15T12:41:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "backends/swiften/CMakeLists.txt" : {
      "ObjectId" : "f90e77ef6d53b98621337c2ccee5921e5648dcb6",
      "LastModified" : "2015-10-15T12:41:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "backends/template/CMakeLists.txt" : {
      "ObjectId" : "6de3857e7bb419a3799ee8429129302135c36b58",
      "LastModified" : "2015-10-15T12:41:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INSTALL(TARGETS spectrum2_template_backend RUNTIME DESTINATION bin)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "backends/twitter/CMakeLists.txt" : {
      "ObjectId" : "c7476cf305e7327788abe4a787445eb464fa1ee4",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "backends/twitter/libtwitcurl/CMakeLists.txt" : {
      "ObjectId" : "b9571e13c604224114c6779924cbe9b7c7ae23f0",
      "LastModified" : "2015-10-15T12:41:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake_modules/FindBoost.cmake" : {
      "ObjectId" : "0466effcb4c81b51cb190b170ec45bee074afd0b",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Boost include dirs and libraries\n\n# Usage of this module as follows:\n\n#\n\n# NOTE: Take note of the Boost_ADDITIONAL_VERSIONS variable below.\n\n# Due to Boost naming conventions and limitations in CMake this find\n\n# module is NOT future safe with respect to Boost version numbers,\n\n# and may break.\n\n#\n\n# == Using Header-Only libraries from within Boost: ==\n\n#\n\n#   find_package( Boost 1.36.0 )\n\n#   if(Boost_FOUND)\n\n#      include_directories(${Boost_INCLUDE_DIRS})\n\n#      add_executable(foo foo.cc)\n\n#   endif()\n\n#\n\n#\n\n# == Using actual libraries from within Boost: ==\n\n#\n\n#   set(Boost_USE_STATIC_LIBS   ON)\n\n#   set(Boost_USE_MULTITHREADED ON)\n\n#   find_package( Boost 1.36.0 COMPONENTS date_time filesystem system ... )\n\n#\n\n#   if(Boost_FOUND)\n\n#      include_directories(${Boost_INCLUDE_DIRS})\n\n#      add_executable(foo foo.cc)\n\n#      target_link_libraries(foo ${Boost_LIBRARIES})\n\n#   endif()\n\n#\n\n#\n\n# The components list needs to contain actual names of boost libraries only,\n\n# such as \"date_time\" for \"libboost_date_time\".  If you're using parts of\n\n# Boost that contain header files only (e.g. foreach) you do not need to\n\n# specify COMPONENTS.\n\n#\n\n# You should provide a minimum version number that should be used. If you provide this \n\n# version number and specify the REQUIRED attribute, this module will fail if it\n\n# can't find the specified or a later version. If you specify a version number this is\n\n# automatically put into the considered list of version numbers and thus doesn't need\n\n# to be specified in the Boost_ADDITIONAL_VERSIONS variable (see below).\n\n#\n\n# NOTE for Visual Studio Users:\n\n#     Automatic linking is used on MSVC & Borland compilers by default when\n\n#     #including things in Boost.  It's important to note that setting\n\n#     Boost_USE_STATIC_LIBS to OFF is NOT enough to get you dynamic linking,\n\n#     should you need this feature.  Automatic linking typically uses static\n\n#     libraries with a few exceptions (Boost.Python is one).\n\n#\n\n#     Please see the section below near Boost_LIB_DIAGNOSTIC_DEFINITIONS for\n\n#     more details.  Adding a TARGET_LINK_LIBRARIES() as shown in the example\n\n#     above appears to cause VS to link dynamically if Boost_USE_STATIC_LIBS\n\n#     gets set to OFF.  It is suggested you avoid automatic linking since it\n\n#     will make your application less portable.\n\n#\n\n# =========== The mess that is Boost_ADDITIONAL_VERSIONS (sorry?) ============\n\n#\n\n# OK, so the Boost_ADDITIONAL_VERSIONS variable can be used to specify a list of\n\n# boost version numbers that should be taken into account when searching\n\n# for Boost. Unfortunately boost puts the version number into the\n\n# actual filename for the libraries, so this variable will certainly be needed\n\n# in the future when new Boost versions are released.\n\n#\n\n# Currently this module searches for the following version numbers:\n\n# 1.33, 1.33.0, 1.33.1, 1.34, 1.34.0, 1.34.1, 1.35, 1.35.0, 1.35.1,\n\n# 1.36, 1.36.0, 1.36.1, 1.37, 1.37.0, 1.38, 1.38.0, 1.39, 1.39.0,\n\n# 1.40, 1.40.0, 1.41, 1.41.0\n\n#\n\n# NOTE: If you add a new major 1.x version in Boost_ADDITIONAL_VERSIONS you should\n\n# add both 1.x and 1.x.0 as shown above.  Official Boost include directories\n\n# omit the 3rd version number from include paths if it is 0 although not all\n\n# binary Boost releases do so.\n\n#\n\n# SET(Boost_ADDITIONAL_VERSIONS \"1.78\" \"1.78.0\" \"1.79\" \"1.79.0\")\n\n#\n\n# ===================================== ============= ========================\n\n#\n\n# Variables used by this module, they can change the default behaviour and\n\n# need to be set before calling find_package:\n\n#\n\n#   Boost_USE_MULTITHREADED      Can be set to OFF to use the non-multithreaded\n\n#                                boost libraries.  If not specified, defaults\n\n#                                to ON.\n\n#\n\n#   Boost_USE_STATIC_LIBS        Can be set to ON to force the use of the static\n\n#                                boost libraries. Defaults to OFF.\n\n#\n\n# Other Variables used by this module which you may want to set.\n\n#\n\n#   Boost_ADDITIONAL_VERSIONS    A list of version numbers to use for searching\n\n#                                the boost include directory.  Please see\n\n#                                the documentation above regarding this\n\n#                                annoying, but necessary variable :(\n\n#\n\n#   Boost_DEBUG                  Set this to TRUE to enable debugging output\n\n#                                of FindBoost.cmake if you are having problems.\n\n#                                Please enable this before filing any bug\n\n#                                reports.\n\n#\n\n#   Boost_DETAILED_FAILURE_MSG   FindBoost doesn't output detailed information\n\n#                                about why it failed or how to fix the problem\n\n#                                unless this is set to TRUE or the REQUIRED\n\n#                                keyword is specified in find_package().\n\n#                                  [Since CMake 2.8.0]\n\n# \n\n#   Boost_COMPILER               Set this to the compiler suffix used by Boost\n\n#                                (e.g. \"-gcc43\") if FindBoost has problems finding\n\n#                                the proper Boost installation\n\n#\n\n# These last three variables are available also as environment variables:\n\n#\n\n#   BOOST_ROOT or BOOSTROOT      The preferred installation prefix for searching for\n\n#                                Boost.  Set this if the module has problems finding\n\n#                                the proper Boost installation.\n\n#\n\n#   BOOST_INCLUDEDIR             Set this to the include directory of Boost, if the\n\n#                                module has problems finding the proper Boost installation\n\n#\n\n#   BOOST_LIBRARYDIR             Set this to the lib directory of Boost, if the\n\n#                                module has problems finding the proper Boost installation\n\n#\n\n# Variables defined by this module:\n\n#\n\n#   Boost_FOUND                         System has Boost, this means the include dir was\n\n#                                       found, as well as all the libraries specified in\n\n#                                       the COMPONENTS list.\n\n#\n\n#   Boost_INCLUDE_DIRS                  Boost include directories: not cached\n\n#\n\n#   Boost_INCLUDE_DIR                   This is almost the same as above, but this one is\n\n#                                       cached and may be modified by advanced users\n\n#\n\n#   Boost_LIBRARIES                     Link to these to use the Boost libraries that you\n\n#                                       specified: not cached\n\n#\n\n#   Boost_LIBRARY_DIRS                  The path to where the Boost library files are.\n\n#\n\n#   Boost_VERSION                       The version number of the boost libraries that\n\n#                                       have been found, same as in version.hpp from Boost\n\n#\n\n#   Boost_LIB_VERSION                   The version number in filename form as\n\n#                                       it's appended to the library filenames\n\n#\n\n#   Boost_MAJOR_VERSION                 major version number of boost\n\n#   Boost_MINOR_VERSION                 minor version number of boost\n\n#   Boost_SUBMINOR_VERSION              subminor version number of boost\n\n#\n\n#   Boost_LIB_DIAGNOSTIC_DEFINITIONS    [WIN32 Only] You can call\n\n#                                       add_definitions(${Boost_LIB_DIAGNOSTIC_DEFINITIONS})\n\n#                                       to have diagnostic information about Boost's\n\n#                                       automatic linking outputted during compilation time.\n\n#\n\n# For each component you specify in find_package(), the following (UPPER-CASE)\n\n# variables are set.  You can use these variables if you would like to pick and\n\n# choose components for your targets instead of just using Boost_LIBRARIES.\n\n#\n\n#   Boost_${COMPONENT}_FOUND            True IF the Boost library \"component\" was found.\n\n#\n\n#   Boost_${COMPONENT}_LIBRARY          Contains the libraries for the specified Boost\n\n#                                       \"component\" (includes debug and optimized keywords\n\n#                                       when needed).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006-2008 Andreas Schneider <mail@cynapses.org>\n\n# Copyright 2007      Wengo\n\n# Copyright 2007      Mike Jackson\n\n# Copyright 2008      Andreas Pakulat <apaku@gmx.de>\n\n# Copyright 2008-2009 Philip Lowman <philip@yhbt.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#  FindBoost functions & macros\n\n#\n\n############################################\n\n#\n\n# Check the existence of the libraries.\n\n#\n\n############################################\n\n# This macro was taken directly from the FindQt4.cmake file that is included\n\n# with the CMake distribution. This is NOT my work. All work was done by the\n\n# original authors of the FindQt4.cmake file. Only minor modifications were\n\n# made to remove references to Qt and make this file more generally applicable\n\n# And ELSE/ENDIF pairs were removed for readability.\n\n#########################################################################\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if the generator supports configuration types then set\n\n# optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value\n",
        "Line" : 198,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# if there are no configuration types and CMAKE_BUILD_TYPE has no value\n\n# then just use the release libraries\n",
        "Line" : 203,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# FIXME: This probably should be set for both cases\n",
        "Line" : 207,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# if only the release version was found, set the debug variable also to the release version\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# if only the debug version was found, set the release variable also to the debug version\n",
        "Line" : 218,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Remove superfluous \"debug\" / \"optimized\" keywords from\n\n# Boost_LIBRARY_DIRS\n",
        "Line" : 228,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Make variables changeble to the advanced user\n",
        "Line" : 241,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# Runs compiler with \"-dumpversion\" and parses major/minor\n\n# version with a regex.\n\n#\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# A convenience function for marking desired components\n\n# as found or not\n\n#\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# End functions/macros\n\n#  \n\n#-------------------------------------------------------------------------------\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# The version may appear in a directory with or without the patch\n\n# level, even when the patch level is non-zero.\n",
        "Line" : 291,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# The user has not requested an exact version.  Among known\n\n# versions, find those that are acceptable to the user request.\n",
        "Line" : 297,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Select acceptable versions.\n",
        "Line" : 306,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# This version is high enough.\n",
        "Line" : 309,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# This version is a short-form for the requested version with\n\n# the patch level dropped.\n",
        "Line" : 312,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Any version is acceptable.\n",
        "Line" : 318,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# The reason that we failed to find Boost. This will be set to a\n\n# user-friendly message when we fail to find some necessary piece of\n\n# Boost.\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# On versions < 1.35, remove the System library from the considered list\n\n# since it wasn't added until 1.35.\n",
        "Line" : 331,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# in cache already\n",
        "Line" : 352,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Need to search for boost\n",
        "Line" : 371,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Output some of their choices\n",
        "Line" : 375,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# In windows, automatic linking is performed, so you do not have\n\n# to specify the libraries.  If you are linking to a dynamic\n\n# runtime, then you can choose to link to either a static or a\n\n# dynamic Boost library, the default is to do a static link.  You\n\n# can alter this for a specific library \"whatever\" by defining\n\n# BOOST_WHATEVER_DYN_LINK to force Boost library \"whatever\" to be\n\n# linked dynamically.  Alternatively you can force all Boost\n\n# libraries to dynamic link by defining BOOST_ALL_DYN_LINK.\n",
        "Line" : 385,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# This feature can be disabled for Boost library \"whatever\" by\n\n# defining BOOST_WHATEVER_NO_LIB, or for all of Boost by defining\n\n# BOOST_ALL_NO_LIB.\n",
        "Line" : 394,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# If you want to observe which libraries are being linked against\n\n# then defining BOOST_LIB_DIAGNOSTIC will cause the auto-linking\n\n# code to emit a #pragma message each time a library is selected\n\n# for linking.\n",
        "Line" : 398,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# If BOOST_ROOT was defined in the environment, use it.\n",
        "Line" : 414,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# If BOOSTROOT was defined in the environment, use it.\n",
        "Line" : 419,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# If BOOST_INCLUDEDIR was defined in the environment, use it.\n",
        "Line" : 424,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# If BOOST_LIBRARYDIR was defined in the environment, use it.\n",
        "Line" : 429,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Search for Boost include DIR \n\n# ------------------------------------------------------------------------\n\n# Try to find Boost by stepping backwards through the Boost versions\n\n# we know about.\n",
        "Line" : 464,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Build a list of path suffixes for each version.\n",
        "Line" : 470,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Add in a path suffix, based on the required version, ideally\n\n# we could read this from version.hpp, but for that to work we'd\n\n# need to know the include dir already\n",
        "Line" : 473,
        "CharPositionInLine" : 6
      },
      "35" : {
        "Text" : "# Transform 1.35 => 1_35 and 1.36.0 => 1_36_0\n",
        "Line" : 478,
        "CharPositionInLine" : 6
      },
      "36" : {
        "Text" : "# For BoostPro's underscores (and others?)\n",
        "Line" : 489,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# Look for a standard boost header file.\n",
        "Line" : 504,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Extract version information from version.hpp\n\n# ------------------------------------------------------------------------\n",
        "Line" : 512,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Extract Boost_VERSION and Boost_LIB_VERSION from version.hpp\n\n# Read the whole file:\n\n#\n",
        "Line" : 517,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Suffix initialization and compiler suffix detection.\n\n# ------------------------------------------------------------------------\n",
        "Line" : 552,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Setting some more suffixes for the library\n",
        "Line" : 556,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Attempt to guess the compiler suffix\n\n# NOTE: this is not perfect yet, if you experience any issues\n\n# please report them and use the Boost_COMPILER variable\n\n# to work around the problems.\n",
        "Line" : 569,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# Good luck!\n",
        "Line" : 589,
        "CharPositionInLine" : 20
      },
      "44" : {
        "Text" : "# yes, this is correct\n",
        "Line" : 590,
        "CharPositionInLine" : 35
      },
      "45" : {
        "Text" : "# Good luck!\n",
        "Line" : 591,
        "CharPositionInLine" : 20
      },
      "46" : {
        "Text" : "# yes, this is correct\n",
        "Line" : 592,
        "CharPositionInLine" : 35
      },
      "47" : {
        "Text" : "# no GCC version encoding prior to 1.34\n",
        "Line" : 599,
        "CharPositionInLine" : 38
      },
      "48" : {
        "Text" : "# no GCC version encoding prior to 1.34\n",
        "Line" : 607,
        "CharPositionInLine" : 38
      },
      "49" : {
        "Text" : "# Determine which version of GCC we have.\n",
        "Line" : 610,
        "CharPositionInLine" : 10
      },
      "50" : {
        "Text" : "# In Boost 1.36.0 and newer, the mangled compiler name used\n\n# on Mac OS X/Darwin is \"xgcc\".\n",
        "Line" : 614,
        "CharPositionInLine" : 16
      },
      "51" : {
        "Text" : "# In Boost <= 1.35.0, there is no mangled compiler name for\n\n# the Mac OS X/Darwin version of GCC.\n",
        "Line" : 618,
        "CharPositionInLine" : 16
      },
      "52" : {
        "Text" : "# We don't know the Boost version, so assume it's\n\n# pre-1.36.0.\n",
        "Line" : 623,
        "CharPositionInLine" : 14
      },
      "53" : {
        "Text" : "#   if(${Boost_MINOR_VERSION} GREATER 41 AND NOT WIN32 AND NOT APPLE)\n\n#       set (_boost_MULTITHREADED \"\")\n\n#   else()\n",
        "Line" : 640,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "#   endif()\n",
        "Line" : 647,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Begin finding boost libraries\n\n# ------------------------------------------------------------------------\n",
        "Line" : 673,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# Support preference of static libs by adjusting CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 712,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  End finding boost libraries\n\n# ------------------------------------------------------------------------\n",
        "Line" : 749,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Check the version of Boost against the requested version.\n",
        "Line" : 761,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# If the user requested an exact version of Boost, check\n\n# that. We already know that the Boost version we have is >= the\n\n# requested version.\n",
        "Line" : 785,
        "CharPositionInLine" : 6
      },
      "60" : {
        "Text" : "# If the user didn't specify a patchlevel, it's 0.\n",
        "Line" : 790,
        "CharPositionInLine" : 6
      },
      "61" : {
        "Text" : "# We'll set Boost_FOUND true again if we have an exact version match.\n",
        "Line" : 795,
        "CharPositionInLine" : 6
      },
      "62" : {
        "Text" : "# State that we found a version of Boost that is too new or too old.\n",
        "Line" : 809,
        "CharPositionInLine" : 6
      },
      "63" : {
        "Text" : "# Always check for missing components\n",
        "Line" : 822,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# We were unable to find some libraries, so generate a sensible\n\n# error message that lists the libraries we were unable to find.\n",
        "Line" : 840,
        "CharPositionInLine" : 6
      },
      "65" : {
        "Text" : "# Compatibility Code for backwards compatibility with CMake\n\n# 2.4's FindBoost module.\n",
        "Line" : 861,
        "CharPositionInLine" : 6
      },
      "66" : {
        "Text" : "# Look for the boost library path.\n\n# Note that the user may not have installed any libraries\n\n# so it is quite possible the Boost_LIBRARY_PATH may not exist.\n",
        "Line" : 864,
        "CharPositionInLine" : 6
      },
      "67" : {
        "Text" : "# Strip off the trailing \"/include\" in the path.\n",
        "Line" : 874,
        "CharPositionInLine" : 8
      },
      "68" : {
        "Text" : "#         if(Boost_FIND_COMPONENTS)\n\n#           message(STATUS \"Found the following Boost libraries:\")\n\n#         endif()\n",
        "Line" : 901,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "#             MESSAGE (STATUS \"  ${COMPONENT}\")\n",
        "Line" : 909,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# we opt not to automatically output Boost_ERROR_REASON here as\n\n# it could be quite lengthy and somewhat imposing in it's requests\n\n# Since Boost is not always a required dependency we'll leave this\n\n# up to the end-user.\n",
        "Line" : 919,
        "CharPositionInLine" : 8
      },
      "71" : {
        "Text" : "# show the Boost_INCLUDE_DIRS AND Boost_LIBRARIES variables only in the advanced view\n",
        "Line" : 932,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 72
    },
    "cmake_modules/FindCommuni.cmake" : {
      "ObjectId" : "c650897523aa225e86361d9fcd6f7c1c46a1e561",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# message( STATUS ${IRC_LIBRARY})\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake_modules/FindProtobuf.cmake" : {
      "ObjectId" : "379ed4e997212e92255b29223aec2daa8f5cef4b",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate and configure the Google Protocol Buffers library.\n\n# Defines the following variables:\n\n#\n\n#   PROTOBUF_FOUND - Found the Google Protocol Buffers library\n\n#   PROTOBUF_INCLUDE_DIRS - Include directories for Google Protocol Buffers\n\n#   PROTOBUF_LIBRARIES - The protobuf library\n\n#\n\n# The following cache variables are also defined:\n\n#   PROTOBUF_LIBRARY - The protobuf library\n\n#   PROTOBUF_PROTOC_LIBRARY   - The protoc library\n\n#   PROTOBUF_INCLUDE_DIR - The include directory for protocol buffers\n\n#   PROTOBUF_PROTOC_EXECUTABLE - The protoc compiler\n\n#\n\n#  ====================================================================\n\n#  Example:\n\n#\n\n#   find_package(Protobuf REQUIRED)\n\n#   include_directories(${PROTOBUF_INCLUDE_DIRS})\n\n#\n\n#   include_directories(${CMAKE_CURRENT_BINARY_DIR})\n\n#   PROTOBUF_GENERATE_CPP(PROTO_SRCS PROTO_HDRS foo.proto)\n\n#   add_executable(bar bar.cc ${PROTO_SRCS} ${PROTO_HDRS})\n\n#   target_link_libraries(bar ${PROTOBUF_LIBRARY})\n\n#\n\n# NOTE: You may need to link against pthreads, depending\n\n# on the platform.\n\n#  ====================================================================\n\n#\n\n# PROTOBUF_GENERATE_CPP (public function)\n\n#   SRCS = Variable to define with autogenerated\n\n#          source files\n\n#   HDRS = Variable to define with autogenerated\n\n#          header files\n\n#   ARGN = proto files\n\n#\n\n#  ====================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2009 Philip Lowman <philip@yhbt.com>\n\n# Copyright 2008 Esben Mose Hansen, Ange Optimization ApS\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Google's provided vcproj files generate libraries with a \"lib\"\n\n# prefix on Windows\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Restore original find library prefixes\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake_modules/FindSwiften.cmake" : {
      "ObjectId" : "9b0436d98956f5d8ccea2be6fd6b39a0c0181791",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Libs\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Version\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake_modules/Findcppunit.cmake" : {
      "ObjectId" : "d1d1832b775415e74b3e4f9e32ec9edb3122f00e",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find cppunit\n\n# Find the native cppunit includes and library\n\n#\n\n#  CPPUNIT_INCLUDE_DIR - where to find cppunit/Test.h, etc.\n\n#  CPPUNIT_LIBRARIES   - List of libraries when using cppunit.\n\n#  CPPUNIT_FOUND       - True if cppunit found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set CPPUNIT_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake_modules/Findevent.cmake" : {
      "ObjectId" : "dcbd0a20dcc9a34d35b80ec883eb6862d3167180",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake_modules/Findglib.cmake" : {
      "ObjectId" : "c18a38810fb35c66c03baeafc0552184b21946a7",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# search the glibconfig.h include dir under the same root where the library is found\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# not sure if this include dir is optional or required\n\n# for now it is optional\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake_modules/Findjsoncpp.cmake" : {
      "ObjectId" : "67045e97b1b57bb2d3362297f0e9b22ea15de4a4",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find jsoncpp - Overarching find module\n\n# This is a over-arching find module to find older jsoncpp versions and those sadly built\n\n# without JSONCPP_WITH_CMAKE_PACKAGE=ON, as well as those built with the cmake config file.\n\n# It also wraps the different versions of the module.\n\n#\n\n# On CMake 3.0 and newer:\n\n#  JsonCpp::JsonCpp - Imported target (possibly an interface/alias) to use:\n\n#  if anything is populated, this is. If both shared and static are found, then\n\n#  this will be the static version on DLL platforms and shared on non-DLL platforms.\n\n#  JsonCpp::JsonCppShared - Imported target (possibly an interface/alias) for a\n\n#  shared library version.\n\n#  JsonCpp::JsonCppStatic - Imported target (possibly an interface/alias) for a\n\n#  static library version.\n\n#\n\n# On all CMake versions: (Note that on CMake 2.8.10 and earlier, you may need to use JSONCPP_INCLUDE_DIRS)\n\n#  JSONCPP_LIBRARY - wraps JsonCpp::JsonCpp or equiv.\n\n#  JSONCPP_LIBRARY_IS_SHARED - if we know for sure JSONCPP_LIBRARY is shared, this is true-ish. We try to \"un-set\" it if we don't know one way or another.\n\n#  JSONCPP_LIBRARY_SHARED - wraps JsonCpp::JsonCppShared or equiv.\n\n#  JSONCPP_LIBRARY_STATIC - wraps JsonCpp::JsonCppStatic or equiv.\n\n#  JSONCPP_INCLUDE_DIRS - Include directories - should (generally?) not needed if you require CMake 2.8.11+ since it handles target include directories.\n\n#\n\n#  JSONCPP_FOUND - True if JsonCpp was found.\n\n#\n\n# Original Author:\n\n# 2016 Ryan Pavlik <ryan.pavlik@gmail.com>\n\n# Incorporates work from the module contributed to VRPN under the same license:\n\n# 2011 Philippe Crassous (ENSAM ParisTech / Institut Image) p.crassous _at_ free.fr\n\n#\n\n# Copyright Philippe Crassous 2011.\n\n# Copyright Sensics, Inc. 2016.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# sets __jsoncpp_have_jsoncpplib based on whether or not we have a real imported jsoncpp_lib target.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We make interface libraries. If an actual config module made it, it would be an imported library.\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#message(STATUS \"__jsoncpp_have_jsoncpplib ${__jsoncpp_have_jsoncpplib}\")\n",
        "Line" : 54,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Ensure that if this is TRUE later, it's because we set it.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# See if we find a CMake config file - there is no harm in calling this more than once,\n\n# and we need to call it at least once every CMake invocation to create the original\n\n# imported targets, since those don't stick around like cache variables.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build a string to help us figure out when to invalidate our cache variables.\n\n# start with where we found jsoncpp\n",
        "Line" : 68,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# part of the string to indicate if we found a real jsoncpp_lib (and what kind)\n",
        "Line" : 72,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Can't do this - different runtimes, incompatible ABI, etc.\n",
        "Line" : 77,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "#osvr_stash_map_config(DEBUG DEBUG RELWITHDEBINFO RELEASE MINSIZEREL NONE)\n",
        "Line" : 81,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# Appending, just in case using project or upstream fixes this.\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# part of the string to indicate if we found jsoncpp_lib_static\n",
        "Line" : 98,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# If we found something, and it's not the exact same as what we've found before...\n\n# NOTE: The contents of this \"if\" block update only (internal) cache variables!\n\n# (since this will only get run the first CMake pass that finds jsoncpp or that finds a different/updated install)\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#message(\"Updating jsoncpp cache variables! ${__jsoncpp_info_string}\")\n",
        "Line" : 112,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# if(__jsoncpp_have_jsoncpplib) is equivalent to if(TARGET jsoncpp_lib) except it excludes our\n\n# \"invented\" jsoncpp_lib interface targets, made for convenience purposes after this block.\n",
        "Line" : 120,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# A veritable cache of riches - we have both shared and static!\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# DLL platforms: static library should be default\n",
        "Line" : 129,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# Other platforms - might require PIC to be linked into shared libraries, so safest to prefer shared.\n",
        "Line" : 133,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# Well, only one variant, but we know for sure that it's static.\n",
        "Line" : 139,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# We were able to figure out the mystery library is static!\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# We were able to figure out the mystery library is shared!\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# One variant, and we have no idea if this is just an old version or if\n\n# this is shared based on the target name alone. Hmm.\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Now, we need include directories. Can't just limit this to old CMakes, since\n\n# new CMakes might be used to build projects designed to support older ones.\n",
        "Line" : 162,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# As a convenience...\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# OK, so we couldn't get it from the target... maybe we can figure it out from jsoncpp_DIR.\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# take off the jsoncpp component\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# take off the cmake component\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# take off the lib component\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# take off one more component in case of multiarch lib\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Now, search.\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Note - this does not set it in the cache, in case we find it better at some point in the future!\n",
        "Line" : 209,
        "CharPositionInLine" : 3
      },
      "31" : {
        "Text" : "# Create any missing namespaced targets from the config module.\n",
        "Line" : 222,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# Hide the stuff we didn't, and no longer, need.\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Still nothing after looking for the config file: must go \"old-school\"\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Invoke pkgconfig for hints\n",
        "Line" : 273,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# OK, if pkg-config wasn't able to give us a library name suggestion, then we may\n\n# have to resort to some intense old logic.\n",
        "Line" : 291,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# bit of a generalization but close...\n",
        "Line" : 298,
        "CharPositionInLine" : 15
      },
      "37" : {
        "Text" : "# end of old logic\n",
        "Line" : 339,
        "CharPositionInLine" : 9
      },
      "38" : {
        "Text" : "# Actually go looking.\n",
        "Line" : 341,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# We already know that the target doesn't exist, let's make it.\n\n# TODO don't know why we get errors like:\n\n# error: 'JsonCpp::JsonCpp-NOTFOUND', needed by 'bin/osvr_json_to_c', missing and no known rule to make it\n\n# when we do the imported target commented out below. So, instead, we make an interface\n\n# target with an alias. Hmm.\n",
        "Line" : 360,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "#add_library(JsonCpp::JsonCpp UNKNOWN IMPORTED)\n\n#set_target_properties(JsonCpp::JsonCpp PROPERTIES\n\n#\tIMPORTED_LOCATION \"${JsonCpp_LIBRARY}\"\n\n#\tINTERFACE_INCLUDE_DIRECTORIES \"${JsonCpp_INCLUDE_DIR}\"\n\n#\tIMPORTED_LINK_INTERFACE_LANGUAGES \"CXX\")\n",
        "Line" : 366,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 41
    },
    "cmake_modules/Findlog4cxx.cmake" : {
      "ObjectId" : "0b68a76f936d2df443adc919a8b73b8603ff7eef",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# LOG4CXX_FOUND - system has liblog4cxx\n\n# LOG4CXX_INCLUDE_DIR - the liblog4cxx include directory\n\n# LOG4CXX_LIBRARIES - liblog4cxx library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#remove last /log4cxx string\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake_modules/Findmysql.cmake" : {
      "ObjectId" : "e33beb545a087b5bf1695e5bae22b1c8c0a05395",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find mysqlclient\n\n# Find the native MySQL includes and library\n\n#\n\n#  MYSQL_INCLUDE_DIR - where to find mysql.h, etc.\n\n#  MYSQL_LIBRARIES   - List of libraries when using MySQL.\n\n#  MYSQL_FOUND       - True if MySQL found.\n\n#\n\n# Based on: http://www.itk.org/Wiki/CMakeUserFindMySQL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set MYSQL_FOUND to TRUE if \n\n# all listed variables are TRUE\n\n# include( FindPackageHandleStandardArgs )\n\n# FIND_PACKAGE_HANDLE_STANDARD_ARGS( MYSQL\n\n# \tREQUIRED_VARS MYSQL_LIBRARY MYSQL_INCLUDE_DIR\n\n# \tVERSION_VAR MYSQL_VERSION_STRING )\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake_modules/Findopenssl.cmake" : {
      "ObjectId" : "caa6b066cb6f86d2a667caca8f7491cce03bf9d3",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the OpenSSL encryption library\n\n# Once done this will define\n\n#\n\n#  OPENSSL_ROOT_DIR - Set this variable to the root installation of OpenSSL\n\n#\n\n# Read-Only variables:\n\n#  OPENSSL_FOUND - system has the OpenSSL library\n\n#  OPENSSL_INCLUDE_DIR - the OpenSSL include directory\n\n#  OPENSSL_LIBRARIES - The libraries needed to use OpenSSL\n\n#  OPENSSL_VERSION - This is set to $major.$minor.$revision (eg. 0.9.8)\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n# Copyright 2009-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# http://www.slproweb.com/products/Win32OpenSSL.html\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# MINGW should go here too\n",
        "Line" : 66,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# /MD and /MDd are the standard values - if someone wants to use\n\n# others, the libnames have to change here too\n\n# use also ssl and ssleay32 in debug as fallback for openssl < 0.9.8b\n\n# TODO: handle /MT and static lib\n\n# In Visual C++ naming convention each of these four kinds of Windows libraries has it's standard suffix:\n\n#   * MD for dynamic-release\n\n#   * MDd for dynamic-debug\n\n#   * MT for static-release\n\n#   * MTd for static-debug\n",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Implementation details:\n\n# We are using the libraries located in the VC subdir instead of the parent directory eventhough :\n\n# libeay32MD.lib is identical to ../libeay32.lib, and\n\n# ssleay32MD.lib is identical to ../ssleay32.lib\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# same player, for MingW\n",
        "Line" : 139,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Not sure what to pick for -say- intel, let's use the toplevel ones and hope someone report issues:\n",
        "Line" : 161,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# compat defines\n",
        "Line" : 211,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 9
    },
    "cmake_modules/Findpopt.cmake" : {
      "ObjectId" : "a1a0b2eead36f293864a02e839cc76540728901b",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake_modules/Findpqxx.cmake" : {
      "ObjectId" : "9c53550c66cfece57e7bb49cf0300c8ea0e1e959",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake_modules/Findpurple.cmake" : {
      "ObjectId" : "96f58a196c3ec594da318f4dfaa195576bcbcb67",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake_modules/Findsqlite3.cmake" : {
      "ObjectId" : "dddf04e96c48ee14243daaf3113c9f739b324754",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - find Sqlite 3\n\n# SQLITE3_INCLUDE_DIR - Where to find Sqlite 3 header files (directory)\n\n# SQLITE3_LIBRARIES - Sqlite 3 libraries\n\n# SQLITE3_LIBRARY_RELEASE - Where the release library is\n\n# SQLITE3_LIBRARY_DEBUG - Where the debug library is\n\n# SQLITE3_FOUND - Set to TRUE if we found everything (library, includes and executable)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if the generator supports configuration types then set\n\n# optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value\n",
        "Line" : 23,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# if there are no configuration types and CMAKE_BUILD_TYPE has no value\n\n# then just use the release libraries\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "docs/CMakeLists.txt" : {
      "ObjectId" : "4349816c4bafb56b048d4c8d524a6535b41bb54f",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "docs/api/CMakeLists.txt" : {
      "ObjectId" : "0466175ab5752c6b9569221441a7d1210685c868",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "docs/guide/CMakeLists.txt" : {
      "ObjectId" : "2159790c26dfdbdfbf662f904f4e56992c00dcaa",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Custom command to do the processing\n",
        "Line" : 6,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Finally remember the output file for dependencies\n",
        "Line" : 17,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Setup a target to drive the conversion\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "include/CMakeLists.txt" : {
      "ObjectId" : "1a79f8054d1726026661f719322dc820b14a548d",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "include/transport/CMakeLists.txt" : {
      "ObjectId" : "104a2206b3b112699e7eafb022e557c504bb3b79",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libtransport/CMakeLists.txt" : {
      "ObjectId" : "d63ffc5ee3f92b329da785db05cdb35024b0082e",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build without openssl on msvc\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SOURCE_GROUP(headers FILES ${HEADERS})\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\tSET_SOURCE_FILES_PROPERTIES(${CMAKE_CURRENT_BINARY_DIR}/../include/transport/protocol.pb.cc PROPERTIES GENERATED 1)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if (CMAKE_COMPILER_IS_GNUCXX)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# endif()\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#CONFIGURE_FILE(transport.pc.in \"${CMAKE_CURRENT_BINARY_DIR}/transport.pc\")\n\n#INSTALL(FILES \"${CMAKE_CURRENT_BINARY_DIR}/transport.pc\" DESTINATION lib/pkgconfig)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "plugin/CMakeLists.txt" : {
      "ObjectId" : "798bc96f902363d40fd94e2e8f0d2892cdeae4e5",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugin/cpp/CMakeLists.txt" : {
      "ObjectId" : "6a9d517e330b15fd161966af9b74db57d8320434",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#CONFIGURE_FILE(transport.pc.in \"${CMAKE_CURRENT_SOURCE_DIR}/transport.pc\")\n\n#INSTALL(FILES \"${CMAKE_CURRENT_SOURCE_DIR}/transport.pc\" DESTINATION lib/pkgconfig)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugin/python/CMakeLists.txt" : {
      "ObjectId" : "6caa1a131b5d4a22da8bc4c6024a38424be64fbb",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "spectrum/CMakeLists.txt" : {
      "ObjectId" : "4b7537b554d723abc731b10f483f955a82e47103",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "spectrum/src/CMakeLists.txt" : {
      "ObjectId" : "162d5c5ab30aa299b8e59a8c1c55a0283b51ec3b",
      "LastModified" : "2018-12-27T12:39:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include_directories(frontends/xmpp)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# export all symbols (used for loading frontends)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "spectrum/src/frontends/CMakeLists.txt" : {
      "ObjectId" : "cc148fc1f707cdda452d957d8daebcffea739e87",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "spectrum/src/frontends/slack/CMakeLists.txt" : {
      "ObjectId" : "cc30050b91cd2fbe3143da46a665fd0cc65f8bce",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SET_TARGET_PROPERTIES(transport-plugin PROPERTIES\n\n#       VERSION ${TRANSPORT_VERSION} SOVERSION ${TRANSPORT_VERSION}\n\n# )\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# INSTALL(TARGETS transport-plugin LIBRARY DESTINATION ${LIB_INSTALL_DIR} ARCHIVE DESTINATION ${LIB_INSTALL_DIR} COMPONENT libraries)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "spectrum/src/frontends/xmpp/CMakeLists.txt" : {
      "ObjectId" : "d5d6d2c9257a9b3043d2f124dcc74e2b9ffb518c",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SET_TARGET_PROPERTIES(transport-plugin PROPERTIES\n\n#       VERSION ${TRANSPORT_VERSION} SOVERSION ${TRANSPORT_VERSION}\n\n# )\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# INSTALL(TARGETS transport-plugin LIBRARY DESTINATION ${LIB_INSTALL_DIR} ARCHIVE DESTINATION ${LIB_INSTALL_DIR} COMPONENT libraries)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "spectrum_manager/CMakeLists.txt" : {
      "ObjectId" : "4b7537b554d723abc731b10f483f955a82e47103",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "spectrum_manager/src/CMakeLists.txt" : {
      "ObjectId" : "a3f29fd029a043951bae78daf40af44e195b3459",
      "LastModified" : "2018-12-02T21:27:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# IF(NOT EXISTS \"/etc/spectrum2/spectrum_manager.cfg\")\n\n# INSTALL(FILES\n\n# \tspectrum_manager.cfg\n\n# \tDESTINATION /etc/spectrum2\n\n# \t)\n\n# ENDIF()\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "c880337651dd93d0388bddbf18f42b1be216d4c4",
      "LastModified" : "2019-02-24T06:27:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/libpurple/CMakeLists.txt" : {
      "ObjectId" : "2224bd911ae612c35654659f8e69019fbbb6f9a5",
      "LastModified" : "2019-02-24T06:27:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/libtransport/CMakeLists.txt" : {
      "ObjectId" : "3703c09be20d2578b35def0b55a37320f6e69afc",
      "LastModified" : "2019-02-24T06:27:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build without openssl on msvc\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 45
  },
  "ElapsedTime" : 2510
}