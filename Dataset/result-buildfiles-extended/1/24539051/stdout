{
  "Repository" : "24539051",
  "Revision" : "HEAD",
  "ObjectId" : "bb4fcd0df0ed918f71b17d32a1c4c1e90445e440",
  "CommitTime" : "2019-04-16T00:51:17Z",
  "Files" : {
    "docker/crossbuild/files/FindCUDA.cmake" : {
      "ObjectId" : "4a4024d0a37f2a6261b8eb523c49cf43625cda07",
      "LastModified" : "2018-08-20T08:39:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindCUDA\n\n# --------\n\n#\n\n# Tools for building CUDA C files: libraries and build dependencies.\n\n#\n\n# This script locates the NVIDIA CUDA C tools.  It should work on linux,\n\n# windows, and mac and should be reasonably up to date with CUDA C\n\n# releases.\n\n#\n\n# This script makes use of the standard find_package arguments of\n\n# <VERSION>, REQUIRED and QUIET.  CUDA_FOUND will report if an\n\n# acceptable version of CUDA was found.\n\n#\n\n# The script will prompt the user to specify CUDA_TOOLKIT_ROOT_DIR if\n\n# the prefix cannot be determined by the location of nvcc in the system\n\n# path and REQUIRED is specified to find_package().  To use a different\n\n# installed version of the toolkit set the environment variable\n\n# CUDA_BIN_PATH before running cmake (e.g.\n\n# CUDA_BIN_PATH=/usr/local/cuda1.0 instead of the default\n\n# /usr/local/cuda) or set CUDA_TOOLKIT_ROOT_DIR after configuring.  If\n\n# you change the value of CUDA_TOOLKIT_ROOT_DIR, various components that\n\n# depend on the path will be relocated.\n\n#\n\n# It might be necessary to set CUDA_TOOLKIT_ROOT_DIR manually on certain\n\n# platforms, or to use a cuda runtime not installed in the default\n\n# location.  In newer versions of the toolkit the cuda library is\n\n# included with the graphics driver- be sure that the driver version\n\n# matches what is needed by the cuda runtime version.\n\n#\n\n# The following variables affect the behavior of the macros in the\n\n# script (in alphebetical order).  Note that any of these flags can be\n\n# changed multiple times in the same directory before calling\n\n# CUDA_ADD_EXECUTABLE, CUDA_ADD_LIBRARY, CUDA_COMPILE, CUDA_COMPILE_PTX,\n\n# CUDA_COMPILE_FATBIN, CUDA_COMPILE_CUBIN or CUDA_WRAP_SRCS::\n\n#\n\n#   CUDA_64_BIT_DEVICE_CODE (Default matches host bit size)\n\n#   -- Set to ON to compile for 64 bit device code, OFF for 32 bit device code.\n\n#      Note that making this different from the host code when generating object\n\n#      or C files from CUDA code just won't work, because size_t gets defined by\n\n#      nvcc in the generated source.  If you compile to PTX and then load the\n\n#      file yourself, you can mix bit sizes between device and host.\n\n#\n\n#   CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE (Default ON)\n\n#   -- Set to ON if you want the custom build rule to be attached to the source\n\n#      file in Visual Studio.  Turn OFF if you add the same cuda file to multiple\n\n#      targets.\n\n#\n\n#      This allows the user to build the target from the CUDA file; however, bad\n\n#      things can happen if the CUDA source file is added to multiple targets.\n\n#      When performing parallel builds it is possible for the custom build\n\n#      command to be run more than once and in parallel causing cryptic build\n\n#      errors.  VS runs the rules for every source file in the target, and a\n\n#      source can have only one rule no matter how many projects it is added to.\n\n#      When the rule is run from multiple targets race conditions can occur on\n\n#      the generated file.  Eventually everything will get built, but if the user\n\n#      is unaware of this behavior, there may be confusion.  It would be nice if\n\n#      this script could detect the reuse of source files across multiple targets\n\n#      and turn the option off for the user, but no good solution could be found.\n\n#\n\n#   CUDA_BUILD_CUBIN (Default OFF)\n\n#   -- Set to ON to enable and extra compilation pass with the -cubin option in\n\n#      Device mode. The output is parsed and register, shared memory usage is\n\n#      printed during build.\n\n#\n\n#   CUDA_BUILD_EMULATION (Default OFF for device mode)\n\n#   -- Set to ON for Emulation mode. -D_DEVICEEMU is defined for CUDA C files\n\n#      when CUDA_BUILD_EMULATION is TRUE.\n\n#\n\n#   CUDA_GENERATED_OUTPUT_DIR (Default CMAKE_CURRENT_BINARY_DIR)\n\n#   -- Set to the path you wish to have the generated files placed.  If it is\n\n#      blank output files will be placed in CMAKE_CURRENT_BINARY_DIR.\n\n#      Intermediate files will always be placed in\n\n#      CMAKE_CURRENT_BINARY_DIR/CMakeFiles.\n\n#\n\n#   CUDA_HOST_COMPILATION_CPP (Default ON)\n\n#   -- Set to OFF for C compilation of host code.\n\n#\n\n#   CUDA_HOST_COMPILER (Default CMAKE_C_COMPILER, $(VCInstallDir)/bin for VS)\n\n#   -- Set the host compiler to be used by nvcc.  Ignored if -ccbin or\n\n#      --compiler-bindir is already present in the CUDA_NVCC_FLAGS or\n\n#      CUDA_NVCC_FLAGS_<CONFIG> variables.  For Visual Studio targets\n\n#      $(VCInstallDir)/bin is a special value that expands out to the path when\n\n#      the command is run from withing VS.\n\n#\n\n#   CUDA_NVCC_FLAGS\n\n#   CUDA_NVCC_FLAGS_<CONFIG>\n\n#   -- Additional NVCC command line arguments.  NOTE: multiple arguments must be\n\n#      semi-colon delimited (e.g. --compiler-options;-Wall)\n\n#\n\n#   CUDA_PROPAGATE_HOST_FLAGS (Default ON)\n\n#   -- Set to ON to propagate CMAKE_{C,CXX}_FLAGS and their configuration\n\n#      dependent counterparts (e.g. CMAKE_C_FLAGS_DEBUG) automatically to the\n\n#      host compiler through nvcc's -Xcompiler flag.  This helps make the\n\n#      generated host code match the rest of the system better.  Sometimes\n\n#      certain flags give nvcc problems, and this will help you turn the flag\n\n#      propagation off.  This does not affect the flags supplied directly to nvcc\n\n#      via CUDA_NVCC_FLAGS or through the OPTION flags specified through\n\n#      CUDA_ADD_LIBRARY, CUDA_ADD_EXECUTABLE, or CUDA_WRAP_SRCS.  Flags used for\n\n#      shared library compilation are not affected by this flag.\n\n#\n\n#   CUDA_SEPARABLE_COMPILATION (Default OFF)\n\n#   -- If set this will enable separable compilation for all CUDA runtime object\n\n#      files.  If used outside of CUDA_ADD_EXECUTABLE and CUDA_ADD_LIBRARY\n\n#      (e.g. calling CUDA_WRAP_SRCS directly),\n\n#      CUDA_COMPUTE_SEPARABLE_COMPILATION_OBJECT_FILE_NAME and\n\n#      CUDA_LINK_SEPARABLE_COMPILATION_OBJECTS should be called.\n\n#\n\n#   CUDA_SOURCE_PROPERTY_FORMAT\n\n#   -- If this source file property is set, it can override the format specified\n\n#      to CUDA_WRAP_SRCS (OBJ, PTX, CUBIN, or FATBIN).  If an input source file\n\n#      is not a .cu file, setting this file will cause it to be treated as a .cu\n\n#      file. See documentation for set_source_files_properties on how to set\n\n#      this property.\n\n#\n\n#   CUDA_USE_STATIC_CUDA_RUNTIME (Default ON)\n\n#   -- When enabled the static version of the CUDA runtime library will be used\n\n#      in CUDA_LIBRARIES.  If the version of CUDA configured doesn't support\n\n#      this option, then it will be silently disabled.\n\n#\n\n#   CUDA_VERBOSE_BUILD (Default OFF)\n\n#   -- Set to ON to see all the commands used when building the CUDA file.  When\n\n#      using a Makefile generator the value defaults to VERBOSE (run make\n\n#      VERBOSE=1 to see output), although setting CUDA_VERBOSE_BUILD to ON will\n\n#      always print the output.\n\n#\n\n# The script creates the following macros (in alphebetical order)::\n\n#\n\n#   CUDA_ADD_CUFFT_TO_TARGET( cuda_target )\n\n#   -- Adds the cufft library to the target (can be any target).  Handles whether\n\n#      you are in emulation mode or not.\n\n#\n\n#   CUDA_ADD_CUBLAS_TO_TARGET( cuda_target )\n\n#   -- Adds the cublas library to the target (can be any target).  Handles\n\n#      whether you are in emulation mode or not.\n\n#\n\n#   CUDA_ADD_EXECUTABLE( cuda_target file0 file1 ...\n\n#                        [WIN32] [MACOSX_BUNDLE] [EXCLUDE_FROM_ALL] [OPTIONS ...] )\n\n#   -- Creates an executable \"cuda_target\" which is made up of the files\n\n#      specified.  All of the non CUDA C files are compiled using the standard\n\n#      build rules specified by CMAKE and the cuda files are compiled to object\n\n#      files using nvcc and the host compiler.  In addition CUDA_INCLUDE_DIRS is\n\n#      added automatically to include_directories().  Some standard CMake target\n\n#      calls can be used on the target after calling this macro\n\n#      (e.g. set_target_properties and target_link_libraries), but setting\n\n#      properties that adjust compilation flags will not affect code compiled by\n\n#      nvcc.  Such flags should be modified before calling CUDA_ADD_EXECUTABLE,\n\n#      CUDA_ADD_LIBRARY or CUDA_WRAP_SRCS.\n\n#\n\n#   CUDA_ADD_LIBRARY( cuda_target file0 file1 ...\n\n#                     [STATIC | SHARED | MODULE] [EXCLUDE_FROM_ALL] [OPTIONS ...] )\n\n#   -- Same as CUDA_ADD_EXECUTABLE except that a library is created.\n\n#\n\n#   CUDA_BUILD_CLEAN_TARGET()\n\n#   -- Creates a convience target that deletes all the dependency files\n\n#      generated.  You should make clean after running this target to ensure the\n\n#      dependency files get regenerated.\n\n#\n\n#   CUDA_COMPILE( generated_files file0 file1 ... [STATIC | SHARED | MODULE]\n\n#                 [OPTIONS ...] )\n\n#   -- Returns a list of generated files from the input source files to be used\n\n#      with ADD_LIBRARY or ADD_EXECUTABLE.\n\n#\n\n#   CUDA_COMPILE_PTX( generated_files file0 file1 ... [OPTIONS ...] )\n\n#   -- Returns a list of PTX files generated from the input source files.\n\n#\n\n#   CUDA_COMPILE_FATBIN( generated_files file0 file1 ... [OPTIONS ...] )\n\n#   -- Returns a list of FATBIN files generated from the input source files.\n\n#\n\n#   CUDA_COMPILE_CUBIN( generated_files file0 file1 ... [OPTIONS ...] )\n\n#   -- Returns a list of CUBIN files generated from the input source files.\n\n#\n\n#   CUDA_COMPUTE_SEPARABLE_COMPILATION_OBJECT_FILE_NAME( output_file_var\n\n#                                                        cuda_target\n\n#                                                        object_files )\n\n#   -- Compute the name of the intermediate link file used for separable\n\n#      compilation.  This file name is typically passed into\n\n#      CUDA_LINK_SEPARABLE_COMPILATION_OBJECTS.  output_file_var is produced\n\n#      based on cuda_target the list of objects files that need separable\n\n#      compilation as specified by object_files.  If the object_files list is\n\n#      empty, then output_file_var will be empty.  This function is called\n\n#      automatically for CUDA_ADD_LIBRARY and CUDA_ADD_EXECUTABLE.  Note that\n\n#      this is a function and not a macro.\n\n#\n\n#   CUDA_INCLUDE_DIRECTORIES( path0 path1 ... )\n\n#   -- Sets the directories that should be passed to nvcc\n\n#      (e.g. nvcc -Ipath0 -Ipath1 ... ). These paths usually contain other .cu\n\n#      files.\n\n#\n\n#\n\n#\n\n#   CUDA_LINK_SEPARABLE_COMPILATION_OBJECTS( output_file_var cuda_target\n\n#                                            nvcc_flags object_files)\n\n#\n\n#   -- Generates the link object required by separable compilation from the given\n\n#      object files.  This is called automatically for CUDA_ADD_EXECUTABLE and\n\n#      CUDA_ADD_LIBRARY, but can be called manually when using CUDA_WRAP_SRCS\n\n#      directly.  When called from CUDA_ADD_LIBRARY or CUDA_ADD_EXECUTABLE the\n\n#      nvcc_flags passed in are the same as the flags passed in via the OPTIONS\n\n#      argument.  The only nvcc flag added automatically is the bitness flag as\n\n#      specified by CUDA_64_BIT_DEVICE_CODE.  Note that this is a function\n\n#      instead of a macro.\n\n#\n\n#   CUDA_WRAP_SRCS ( cuda_target format generated_files file0 file1 ...\n\n#                    [STATIC | SHARED | MODULE] [OPTIONS ...] )\n\n#   -- This is where all the magic happens.  CUDA_ADD_EXECUTABLE,\n\n#      CUDA_ADD_LIBRARY, CUDA_COMPILE, and CUDA_COMPILE_PTX all call this\n\n#      function under the hood.\n\n#\n\n#      Given the list of files (file0 file1 ... fileN) this macro generates\n\n#      custom commands that generate either PTX or linkable objects (use \"PTX\" or\n\n#      \"OBJ\" for the format argument to switch).  Files that don't end with .cu\n\n#      or have the HEADER_FILE_ONLY property are ignored.\n\n#\n\n#      The arguments passed in after OPTIONS are extra command line options to\n\n#      give to nvcc.  You can also specify per configuration options by\n\n#      specifying the name of the configuration followed by the options.  General\n\n#      options must preceed configuration specific options.  Not all\n\n#      configurations need to be specified, only the ones provided will be used.\n\n#\n\n#         OPTIONS -DFLAG=2 \"-DFLAG_OTHER=space in flag\"\n\n#         DEBUG -g\n\n#         RELEASE --use_fast_math\n\n#         RELWITHDEBINFO --use_fast_math;-g\n\n#         MINSIZEREL --use_fast_math\n\n#\n\n#      For certain configurations (namely VS generating object files with\n\n#      CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE set to ON), no generated file will\n\n#      be produced for the given cuda file.  This is because when you add the\n\n#      cuda file to Visual Studio it knows that this file produces an object file\n\n#      and will link in the resulting object file automatically.\n\n#\n\n#      This script will also generate a separate cmake script that is used at\n\n#      build time to invoke nvcc.  This is for several reasons.\n\n#\n\n#        1. nvcc can return negative numbers as return values which confuses\n\n#        Visual Studio into thinking that the command succeeded.  The script now\n\n#        checks the error codes and produces errors when there was a problem.\n\n#\n\n#        2. nvcc has been known to not delete incomplete results when it\n\n#        encounters problems.  This confuses build systems into thinking the\n\n#        target was generated when in fact an unusable file exists.  The script\n\n#        now deletes the output files if there was an error.\n\n#\n\n#        3. By putting all the options that affect the build into a file and then\n\n#        make the build rule dependent on the file, the output files will be\n\n#        regenerated when the options change.\n\n#\n\n#      This script also looks at optional arguments STATIC, SHARED, or MODULE to\n\n#      determine when to target the object compilation for a shared library.\n\n#      BUILD_SHARED_LIBS is ignored in CUDA_WRAP_SRCS, but it is respected in\n\n#      CUDA_ADD_LIBRARY.  On some systems special flags are added for building\n\n#      objects intended for shared libraries.  A preprocessor macro,\n\n#      <target_name>_EXPORTS is defined when a shared library compilation is\n\n#      detected.\n\n#\n\n#      Flags passed into add_definitions with -D or /D are passed along to nvcc.\n\n#\n\n#\n\n#\n\n# The script defines the following variables::\n\n#\n\n#   CUDA_VERSION_MAJOR    -- The major version of cuda as reported by nvcc.\n\n#   CUDA_VERSION_MINOR    -- The minor version.\n\n#   CUDA_VERSION\n\n#   CUDA_VERSION_STRING   -- CUDA_VERSION_MAJOR.CUDA_VERSION_MINOR\n\n#\n\n#   CUDA_TOOLKIT_ROOT_DIR -- Path to the CUDA Toolkit (defined if not set).\n\n#   CUDA_SDK_ROOT_DIR     -- Path to the CUDA SDK.  Use this to find files in the\n\n#                            SDK.  This script will not directly support finding\n\n#                            specific libraries or headers, as that isn't\n\n#                            supported by NVIDIA.  If you want to change\n\n#                            libraries when the path changes see the\n\n#                            FindCUDA.cmake script for an example of how to clear\n\n#                            these variables.  There are also examples of how to\n\n#                            use the CUDA_SDK_ROOT_DIR to locate headers or\n\n#                            libraries, if you so choose (at your own risk).\n\n#   CUDA_INCLUDE_DIRS     -- Include directory for cuda headers.  Added automatically\n\n#                            for CUDA_ADD_EXECUTABLE and CUDA_ADD_LIBRARY.\n\n#   CUDA_LIBRARIES        -- Cuda RT library.\n\n#   CUDA_CUFFT_LIBRARIES  -- Device or emulation library for the Cuda FFT\n\n#                            implementation (alternative to:\n\n#                            CUDA_ADD_CUFFT_TO_TARGET macro)\n\n#   CUDA_CUBLAS_LIBRARIES -- Device or emulation library for the Cuda BLAS\n\n#                            implementation (alterative to:\n\n#                            CUDA_ADD_CUBLAS_TO_TARGET macro).\n\n#   CUDA_cudart_static_LIBRARY -- Statically linkable cuda runtime library.\n\n#                                 Only available for CUDA version 5.5+\n\n#   CUDA_cupti_LIBRARY    -- CUDA Profiling Tools Interface library.\n\n#                            Only available for CUDA version 4.0+.\n\n#   CUDA_curand_LIBRARY   -- CUDA Random Number Generation library.\n\n#                            Only available for CUDA version 3.2+.\n\n#   CUDA_cusolver_LIBRARY -- CUDA Direct Solver library.\n\n#                            Only available for CUDA version 7.0+.\n\n#   CUDA_cusparse_LIBRARY -- CUDA Sparse Matrix library.\n\n#                            Only available for CUDA version 3.2+.\n\n#   CUDA_npp_LIBRARY      -- NVIDIA Performance Primitives lib.\n\n#                            Only available for CUDA version 4.0+.\n\n#   CUDA_nppc_LIBRARY     -- NVIDIA Performance Primitives lib (core).\n\n#                            Only available for CUDA version 5.5+.\n\n#   CUDA_nppi_LIBRARY     -- NVIDIA Performance Primitives lib (image processing).\n\n#                            Only available for CUDA version 5.5+.\n\n#   CUDA_npps_LIBRARY     -- NVIDIA Performance Primitives lib (signal processing).\n\n#                            Only available for CUDA version 5.5+.\n\n#   CUDA_nvcuvenc_LIBRARY -- CUDA Video Encoder library.\n\n#                            Only available for CUDA version 3.2+.\n\n#                            Windows only.\n\n#   CUDA_nvcuvid_LIBRARY  -- CUDA Video Decoder library.\n\n#                            Only available for CUDA version 3.2+.\n\n#                            Windows only.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   James Bigler, NVIDIA Corp (nvidia.com - jbigler)\n\n#   Abe Stephens, SCI Institute -- http://www.sci.utah.edu/~abe/FindCuda.html\n\n#\n\n#   Copyright (c) 2008 - 2009 NVIDIA Corporation.  All rights reserved.\n\n#\n\n#   Copyright (c) 2007-2009\n\n#   Scientific Computing and Imaging Institute, University of Utah\n\n#\n\n#   This code is licensed under the MIT License.  See the FindCUDA.cmake script\n\n#   for the text of the license.\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The MIT License\n\n#\n\n# License for the specific language governing rights and limitations under\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and associated documentation files (the \"Software\"),\n\n# to deal in the Software without restriction, including without limitation\n\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n# and/or sell copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n#\n\n###############################################################################\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FindCUDA.cmake\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This macro helps us find the location of helper files we will need the full path to\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CMAKE_CURRENT_LIST_FILE contains the full path to the file currently being\n\n# processed.  Using this variable, we can pull out the current path, and\n\n# provide a way to get access to the other files we need local to here.\n",
        "Line" : 352,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set this variable as internal, so the user isn't bugged with it.\n",
        "Line" : 367,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#####################################################################\n\n## CUDA_INCLUDE_NVCC_DEPENDENCIES\n\n##\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# So we want to try and include the dependency file if it exists.  If\n\n# it doesn't exist then we need to create an empty one, so we can\n\n# include it.\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If it does exist, then we need to check to see if all the files it\n\n# depends on exist.  If they don't then we should clear the dependency\n\n# file and regenerate it later.  This covers the case where a header\n\n# file has disappeared or moved.\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Include the dependency file.  Create it first if it doesn't exist .  The\n\n# INCLUDE puts a dependency that will force CMake to rerun and bring in the\n\n# new info when it changes.  DO NOT REMOVE THIS (as I did and spent a few\n\n# hours figuring out why it didn't work.\n",
        "Line" : 389,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Always include this file to force CMake to run again next\n\n# invocation and rebuild the dependencies.\n\n#message(\"including dependency_file = ${dependency_file}\")\n",
        "Line" : 396,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Now we need to verify the existence of all the included files\n\n# here.  If they aren't there we need to just blank this variable and\n\n# make the file regenerate again.\n",
        "Line" : 401,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#   if(DEFINED CUDA_NVCC_DEPEND)\n\n#     message(\"CUDA_NVCC_DEPEND set\")\n\n#   else()\n\n#     message(\"CUDA_NVCC_DEPEND NOT set\")\n\n#   endif()\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#message(\"CUDA_NVCC_DEPEND found\")\n",
        "Line" : 410,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# message(\"searching for ${f}\")\n",
        "Line" : 412,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "#message(\"file ${f} not found\")\n",
        "Line" : 414,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "#message(\"CUDA_NVCC_DEPEND false\")\n\n# No dependencies, so regenerate the file.\n",
        "Line" : 419,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#message(\"CUDA_NVCC_DEPEND_REGENERATE = ${CUDA_NVCC_DEPEND_REGENERATE}\")\n\n# No incoming dependencies, so we need to generate them.  Make the\n\n# output depend on the dependency file itself, which should cause the\n\n# rule to re-run.\n",
        "Line" : 424,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#message(\"Generating an empty dependency_file: ${dependency_file}\")\n",
        "Line" : 430,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Setup variables' defaults\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Allow the user to specify if the device code is supposed to be 32 or 64 bit.\n",
        "Line" : 442,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Attach the build rule to the source file in VS.  This option\n",
        "Line" : 450,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Prints out extra information about the cuda file during compilation\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Set whether we are using emulation or device mode.\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Where to put the generated output.\n",
        "Line" : 459,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Parse HOST_COMPILATION mode.\n",
        "Line" : 462,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Extra user settable flags\n",
        "Line" : 465,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Using cc which is symlink to clang may let NVCC think it is GCC and issue\n\n# unhandled -dumpspecs option to clang. Also in case neither\n\n# CMAKE_C_COMPILER is defined (project does not use C language) nor\n\n# CUDA_HOST_COMPILER is specified manually we should skip -ccbin and let\n\n# nvcc use its own default C compiler.\n\n# Only care about this on APPLE with clang to avoid\n\n# following symlinks to things like ccache\n",
        "Line" : 474,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# if the real path does not end up being clang then\n\n# go back to using CMAKE_C_COMPILER\n",
        "Line" : 483,
        "CharPositionInLine" : 6
      },
      "30" : {
        "Text" : "# Propagate the host flags to the host compiler via -Xcompiler\n",
        "Line" : 498,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Enable CUDA_SEPARABLE_COMPILATION\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Specifies whether the commands used when compiling the .cu file will be printed out.\n",
        "Line" : 504,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Makefile and similar generators don't define CMAKE_CONFIGURATION_TYPES, so we\n\n# need to add another entry for the CMAKE_BUILD_TYPE.  We also need to add the\n\n# standerd set of 4 build types (Debug, MinSizeRel, Release, and RelWithDebInfo)\n\n# for completeness.  We need run this loop in order to accomodate the addition\n\n# of extra configuration types.  Duplicate entries will be removed by\n\n# REMOVE_DUPLICATES.\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Locate CUDA, Set Build Type, etc.\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Make sure you run this before you unset CUDA_VERSION.\n",
        "Line" : 544,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# This only existed in the 3.0 version of the CUDA toolkit\n",
        "Line" : 546,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Check to see if the CUDA_TOOLKIT_ROOT_DIR and CUDA_SDK_ROOT_DIR have changed,\n\n# if they have then clear the cache variables, so that will be detected again.\n",
        "Line" : 568,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# No specific variables to catch.  Use this kind of code before calling\n\n# find_package(CUDA) to clean up any variables that may depend on this path.\n",
        "Line" : 582,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "#   unset(MY_SPECIAL_CUDA_SDK_INCLUDE_DIR CACHE)\n\n#   unset(MY_SPECIAL_CUDA_SDK_LIBRARY CACHE)\n",
        "Line" : 585,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Search for the cuda distribution.\n",
        "Line" : 589,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Search in the CUDA_BIN_PATH first.\n",
        "Line" : 592,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Now search default paths\n",
        "Line" : 602,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# We need to force this back into the cache.\n",
        "Line" : 612,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# CUDA_NVCC_EXECUTABLE\n",
        "Line" : 624,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Search default search paths, after we search our own set of paths.\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Compute the version.\n",
        "Line" : 638,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Need to set these based off of the cached value\n",
        "Line" : 645,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# Always set this convenience variable\n",
        "Line" : 650,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Support for arm cross compilation with CUDA 5.5\n",
        "Line" : 653,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Support for aarch64 cross compilation with CUDA 7.0\n",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Target CPU architecture\n",
        "Line" : 664,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# CUDA_TOOLKIT_INCLUDE\n",
        "Line" : 673,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Header included in toolkit\n",
        "Line" : 676,
        "CharPositionInLine" : 23
      },
      "54" : {
        "Text" : "# Search default search paths, after we search our own set of paths.\n",
        "Line" : 683,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Set the user list of include dir to nothing to initialize it.\n",
        "Line" : 689,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# CUDA 3.2+ on Windows moved the library directories, so we need the new\n\n# and old paths.\n",
        "Line" : 695,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# CUDA 3.2+ on Windows moved the library directories, so we need to new\n\n# (lib/Win32) and the old path (lib).\n",
        "Line" : 699,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Search default search paths, after we search our own set of paths.\n",
        "Line" : 710,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# CUDA_LIBRARIES\n",
        "Line" : 727,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# The cudartemu library only existed for the 3.0 version of CUDA.\n",
        "Line" : 732,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# Set whether to use the static cuda runtime.\n",
        "Line" : 747,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# Check for the dependent libraries.  Here we look for pthreads.\n",
        "Line" : 755,
        "CharPositionInLine" : 4
      },
      "63" : {
        "Text" : "# Many of the FindXYZ CMake comes with makes use of try_compile with int main(){return 0;}\n\n# as the source file.  Unfortunately this causes a warning with -Wstrict-prototypes and\n\n# -Werror causes the try_compile to fail.  We will just temporarily disable other flags\n\n# when doing the find_package command here.\n",
        "Line" : 761,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# Here is librt that has things such as, clock_gettime, shm_open, and shm_unlink.\n",
        "Line" : 777,
        "CharPositionInLine" : 6
      },
      "65" : {
        "Text" : "# CUPTI library showed up in cuda toolkit 4.0\n",
        "Line" : 786,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Set the CUDA_LIBRARIES variable.  This is the set of stuff to link against if you are\n\n# using the CUDA runtime.  For the dynamic version of the runtime, most of the\n\n# dependencies are brough in, but for the static version there are additional libraries\n\n# and linker commands needed.\n\n# Initialize to empty\n",
        "Line" : 792,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# If we are using emulation mode and we found the cudartemu library then use\n\n# that one instead of cudart.\n",
        "Line" : 799,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# We need to add the default path to the driver (libcuda.dylib) as an rpath, so that\n\n# the static cuda runtime can find it at runtime.\n",
        "Line" : 809,
        "CharPositionInLine" : 4
      },
      "69" : {
        "Text" : "# 1.1 toolkit on linux doesn't appear to have a separate library on\n\n# some platforms.\n",
        "Line" : 818,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "#######################\n\n# Look for some of the toolkit helper libraries\n",
        "Line" : 828,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "#######################\n\n# Disable emulation for v3.1 onward\n",
        "Line" : 835,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Search for additional CUDA toolkit libraries.\n",
        "Line" : 843,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Emulation libraries aren't available in version 3.1 onward.\n",
        "Line" : 845,
        "CharPositionInLine" : 2
      },
      "74" : {
        "Text" : "# cusparse showed up in version 3.2\n",
        "Line" : 852,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# In CUDA 5.5 NPP was splitted onto 3 separate libraries.\n",
        "Line" : 861,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# cusolver showed up in version 7.0\n",
        "Line" : 870,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "########################\n\n# Look for the SDK stuff.  As of CUDA 3.0 NVSDKCUDA_ROOT has been replaced with\n\n# NVSDKCOMPUTE_ROOT with the old CUDA C contents moved into the C subdirectory\n",
        "Line" : 882,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Keep the CUDA_SDK_ROOT_DIR first in order to be able to override the\n\n# environment variables.\n",
        "Line" : 894,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Example of how to find an include file from the CUDA_SDK_ROOT_DIR\n",
        "Line" : 906,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# find_path(CUDA_CUT_INCLUDE_DIR\n\n#   cutil.h\n\n#   PATHS ${CUDA_SDK_SEARCH_PATH}\n\n#   PATH_SUFFIXES \"common/inc\"\n\n#   DOC \"Location of cutil.h\"\n\n#   NO_DEFAULT_PATH\n\n#   )\n\n# # Now search system paths\n\n# find_path(CUDA_CUT_INCLUDE_DIR cutil.h DOC \"Location of cutil.h\")\n",
        "Line" : 908,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# mark_as_advanced(CUDA_CUT_INCLUDE_DIR)\n",
        "Line" : 918,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Example of how to find a library in the CUDA_SDK_ROOT_DIR\n",
        "Line" : 921,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# # cutil library is called cutil64 for 64 bit builds on windows.  We don't want\n\n# # to get these confused, so we are setting the name based on the word size of\n\n# # the build.\n",
        "Line" : 923,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# if(CMAKE_SIZEOF_VOID_P EQUAL 8)\n\n#   set(cuda_cutil_name cutil64)\n\n# else()\n\n#   set(cuda_cutil_name cutil32)\n\n# endif()\n",
        "Line" : 927,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# find_library(CUDA_CUT_LIBRARY\n\n#   NAMES cutil ${cuda_cutil_name}\n\n#   PATHS ${CUDA_SDK_SEARCH_PATH}\n\n#   # The new version of the sdk shows up in common/lib, but the old one is in lib\n\n#   PATH_SUFFIXES \"common/lib\" \"lib\"\n\n#   DOC \"Location of cutil library\"\n\n#   NO_DEFAULT_PATH\n\n#   )\n\n# # Now search system paths\n\n# find_library(CUDA_CUT_LIBRARY NAMES cutil ${cuda_cutil_name} DOC \"Location of cutil library\")\n\n# mark_as_advanced(CUDA_CUT_LIBRARY)\n\n# set(CUDA_CUT_LIBRARIES ${CUDA_CUT_LIBRARY})\n",
        "Line" : 933,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "#############################\n\n# Check for required components\n",
        "Line" : 948,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Macros\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 972,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "###############################################################################\n\n# Add include directories to pass to the nvcc command.\n",
        "Line" : 978,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "##############################################################################\n",
        "Line" : 987,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "##############################################################################\n\n# Separate the OPTIONS out from the sources\n\n#\n",
        "Line" : 992,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# Assume this is a file\n",
        "Line" : 1016,
        "CharPositionInLine" : 8
      },
      "92" : {
        "Text" : "##############################################################################\n\n# Parse the OPTIONS from ARGN and set the variables prefixed by _option_prefix\n\n#\n",
        "Line" : 1023,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# Determine if we are dealing with a perconfiguration flag\n",
        "Line" : 1029,
        "CharPositionInLine" : 4
      },
      "94" : {
        "Text" : "# Set arg to nothing to keep it from being processed further\n",
        "Line" : 1034,
        "CharPositionInLine" : 8
      },
      "95" : {
        "Text" : "##############################################################################\n\n# Helper to add the include directory for CUDA only once\n",
        "Line" : 1045,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# If SHARED, MODULE, or STATIC aren't already in the list of arguments, then\n\n# add SHARED or STATIC based on the value of BUILD_SHARED_LIBS.\n",
        "Line" : 1064,
        "CharPositionInLine" : 2
      },
      "97" : {
        "Text" : "##############################################################################\n\n# Helper to avoid clashes of files with the same basename but different paths.\n\n# This doesn't attempt to do exactly what CMake internals do, which is to only\n\n# add this path when there is a conflict, since by the time a second collision\n\n# in names is detected it's already too late to fix the first one.  For\n\n# consistency sake the relative path will be added to all files.\n",
        "Line" : 1083,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "#message(\"CUDA_COMPUTE_BUILD_PATH([${path}] ${build_path})\")\n\n# Only deal with CMake style paths from here on out\n",
        "Line" : 1090,
        "CharPositionInLine" : 2
      },
      "99" : {
        "Text" : "# Absolute paths are generally unnessary, especially if something like\n\n# file(GLOB_RECURSE) is used to pick up the files.\n",
        "Line" : 1094,
        "CharPositionInLine" : 4
      },
      "100" : {
        "Text" : "# This recipe is from cmLocalGenerator::CreateSafeUniqueObjectFileName in the\n\n# CMake source.\n",
        "Line" : 1105,
        "CharPositionInLine" : 2
      },
      "101" : {
        "Text" : "# Remove leading /\n",
        "Line" : 1108,
        "CharPositionInLine" : 2
      },
      "102" : {
        "Text" : "# Avoid absolute paths by removing ':'\n",
        "Line" : 1110,
        "CharPositionInLine" : 2
      },
      "103" : {
        "Text" : "# Avoid relative paths that go up the tree\n",
        "Line" : 1112,
        "CharPositionInLine" : 2
      },
      "104" : {
        "Text" : "# Avoid spaces\n",
        "Line" : 1114,
        "CharPositionInLine" : 2
      },
      "105" : {
        "Text" : "# Strip off the filename.  I wait until here to do it, since removin the\n\n# basename can make a path that looked like path/../basename turn into\n\n# path/.. (notice the trailing slash).\n",
        "Line" : 1117,
        "CharPositionInLine" : 2
      },
      "106" : {
        "Text" : "#message(\"${build_path} = ${bpath}\")\n",
        "Line" : 1123,
        "CharPositionInLine" : 2
      },
      "107" : {
        "Text" : "##############################################################################\n\n# This helper macro populates the following variables and setups up custom\n\n# commands and targets to invoke the nvcc compiler to generate C or PTX source\n\n# dependent upon the format parameter.  The compiler is invoked once with -M\n\n# to generate a dependency file and a second time with -cuda or -ptx to generate\n\n# a .cpp or .ptx file.\n\n# INPUT:\n\n#   cuda_target         - Target name\n\n#   format              - PTX, CUBIN, FATBIN or OBJ\n\n#   FILE1 .. FILEN      - The remaining arguments are the sources to be wrapped.\n\n#   OPTIONS             - Extra options to NVCC\n\n# OUTPUT:\n\n#   generated_files     - List of generated files\n\n##############################################################################\n\n##############################################################################\n",
        "Line" : 1126,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "# If CMake doesn't support separable compilation, complain\n",
        "Line" : 1144,
        "CharPositionInLine" : 2
      },
      "109" : {
        "Text" : "# Set up all the command line flags here, so that they can be overridden on a per target basis.\n",
        "Line" : 1149,
        "CharPositionInLine" : 2
      },
      "110" : {
        "Text" : "# Emulation if the card isn't present.\n",
        "Line" : 1153,
        "CharPositionInLine" : 2
      },
      "111" : {
        "Text" : "# Emulation.\n",
        "Line" : 1155,
        "CharPositionInLine" : 4
      },
      "112" : {
        "Text" : "# Device mode.  No flags necessary.\n",
        "Line" : 1158,
        "CharPositionInLine" : 4
      },
      "113" : {
        "Text" : "# This needs to be passed in at this stage, because VS needs to fill out the\n\n# value of VCInstallDir from within VS.  Note that CCBIN is only used if\n\n# -ccbin or --compiler-bindir isn't used and CUDA_HOST_COMPILER matches\n\n# $(VCInstallDir)/bin.\n",
        "Line" : 1184,
        "CharPositionInLine" : 2
      },
      "114" : {
        "Text" : "# Figure out which configure we will use and pass that in as an argument to\n\n# the script.  We need to defer the decision until compilation time, because\n\n# for VS projects we won't know if we are making a debug or release build\n\n# until build time.\n",
        "Line" : 1194,
        "CharPositionInLine" : 2
      },
      "115" : {
        "Text" : "# Initialize our list of includes with the user ones followed by the CUDA system ones.\n",
        "Line" : 1204,
        "CharPositionInLine" : 2
      },
      "116" : {
        "Text" : "# Get the include directories for this directory and use them for our nvcc command.\n\n# Remove duplicate entries which may be present since include_directories\n\n# in CMake >= 2.8.8 does not remove them.\n",
        "Line" : 1206,
        "CharPositionInLine" : 2
      },
      "117" : {
        "Text" : "# Reset these variables\n",
        "Line" : 1217,
        "CharPositionInLine" : 2
      },
      "118" : {
        "Text" : "# Figure out if we are building a shared library.  BUILD_SHARED_LIBS is\n\n# respected in CUDA_ADD_LIBRARY.\n",
        "Line" : 1227,
        "CharPositionInLine" : 2
      },
      "119" : {
        "Text" : "# SHARED, MODULE\n",
        "Line" : 1230,
        "CharPositionInLine" : 2
      },
      "120" : {
        "Text" : "# STATIC\n",
        "Line" : 1236,
        "CharPositionInLine" : 2
      },
      "121" : {
        "Text" : "# CUDA_HOST_FLAGS\n",
        "Line" : 1242,
        "CharPositionInLine" : 2
      },
      "122" : {
        "Text" : "# If we are setting up code for a shared library, then we need to add extra flags for\n\n# compiling objects for shared libraries.\n",
        "Line" : 1244,
        "CharPositionInLine" : 4
      },
      "123" : {
        "Text" : "# Only add the CMAKE_{C,CXX}_FLAGS if we are propagating host flags.  We\n\n# always need to set the SHARED_FLAGS, though.\n",
        "Line" : 1250,
        "CharPositionInLine" : 2
      },
      "124" : {
        "Text" : "# Loop over all the configuration types to generate appropriate flags for run_nvcc.cmake\n",
        "Line" : 1259,
        "CharPositionInLine" : 2
      },
      "125" : {
        "Text" : "# CMAKE_FLAGS are strings and not lists.  By not putting quotes around CMAKE_FLAGS\n\n# we convert the strings to lists (like we want).\n",
        "Line" : 1262,
        "CharPositionInLine" : 4
      },
      "126" : {
        "Text" : "# nvcc chokes on -g3 in versions previous to 3.0, so replace it with -g\n",
        "Line" : 1266,
        "CharPositionInLine" : 6
      },
      "127" : {
        "Text" : "# Note that if we ever want CUDA_NVCC_FLAGS_<CONFIG> to be string (instead of a list\n\n# like it is currently), we can remove the quotes around the\n\n# ${CUDA_NVCC_FLAGS_${config_upper}} variable like the CMAKE_HOST_FLAGS_<CONFIG> variable.\n",
        "Line" : 1286,
        "CharPositionInLine" : 4
      },
      "128" : {
        "Text" : "# Process the C++11 flag.  If the host sets the flag, we need to add it to nvcc and\n\n# remove it from the host. This is because -Xcompile -std=c++ will choke nvcc (it uses\n\n# the C preprocessor).  In order to get this to work correctly, we need to use nvcc's\n\n# specific c++11 flag.\n",
        "Line" : 1292,
        "CharPositionInLine" : 2
      },
      "129" : {
        "Text" : "# Add the c++11 flag to nvcc if it isn't already present.  Note that we only look at\n\n# the main flag instead of the configuration specific flags.\n",
        "Line" : 1297,
        "CharPositionInLine" : 4
      },
      "130" : {
        "Text" : "# Get the list of definitions from the directory property\n",
        "Line" : 1305,
        "CharPositionInLine" : 2
      },
      "131" : {
        "Text" : "# Reset the output variable\n",
        "Line" : 1317,
        "CharPositionInLine" : 2
      },
      "132" : {
        "Text" : "# Iterate over the macro arguments and create custom\n\n# commands for all the .cu files.\n",
        "Line" : 1320,
        "CharPositionInLine" : 2
      },
      "133" : {
        "Text" : "# Ignore any file marked as a HEADER_FILE_ONLY\n",
        "Line" : 1323,
        "CharPositionInLine" : 4
      },
      "134" : {
        "Text" : "# Allow per source file overrides of the format.  Also allows compiling non-.cu files.\n",
        "Line" : 1325,
        "CharPositionInLine" : 4
      },
      "135" : {
        "Text" : "# If file isn't a .cu file, we need to tell nvcc to treat it as such.\n",
        "Line" : 1332,
        "CharPositionInLine" : 6
      },
      "136" : {
        "Text" : "# Don't use any of the host compilation flags for PTX targets.\n",
        "Line" : 1355,
        "CharPositionInLine" : 8
      },
      "137" : {
        "Text" : "# Determine output directory\n",
        "Line" : 1363,
        "CharPositionInLine" : 6
      },
      "138" : {
        "Text" : "# Add a custom target to generate a c or ptx file. ######################\n",
        "Line" : 1376,
        "CharPositionInLine" : 6
      },
      "139" : {
        "Text" : "# Set all of our file names.  Make sure that whatever filenames that have\n\n# generated_file_path in them get passed in through as a command line\n\n# argument, so that the ${CMAKE_CFG_INTDIR} gets expanded at run time\n\n# instead of configure time.\n",
        "Line" : 1394,
        "CharPositionInLine" : 6
      },
      "140" : {
        "Text" : "# Setup properties for obj files:\n",
        "Line" : 1404,
        "CharPositionInLine" : 6
      },
      "141" : {
        "Text" : "# This is an object file not to be compiled, but only be linked.\n",
        "Line" : 1408,
        "CharPositionInLine" : 31
      },
      "142" : {
        "Text" : "# Don't add CMAKE_CURRENT_SOURCE_DIR if the path is already an absolute path.\n",
        "Line" : 1412,
        "CharPositionInLine" : 6
      },
      "143" : {
        "Text" : "# Bring in the dependencies.  Creates a variable CUDA_NVCC_DEPEND #######\n",
        "Line" : 1424,
        "CharPositionInLine" : 6
      },
      "144" : {
        "Text" : "# Convience string for output ###########################################\n",
        "Line" : 1427,
        "CharPositionInLine" : 6
      },
      "145" : {
        "Text" : "# Build the NVCC made dependency file ###################################\n",
        "Line" : 1434,
        "CharPositionInLine" : 6
      },
      "146" : {
        "Text" : "# Configure the build script\n",
        "Line" : 1442,
        "CharPositionInLine" : 6
      },
      "147" : {
        "Text" : "# So if a user specifies the same cuda file as input more than once, you\n\n# can have bad things happen with dependencies.  Here we check an option\n\n# to see if this is the behavior they want.\n",
        "Line" : 1445,
        "CharPositionInLine" : 6
      },
      "148" : {
        "Text" : "# Create up the comment string\n",
        "Line" : 1462,
        "CharPositionInLine" : 6
      },
      "149" : {
        "Text" : "# Build the generated file and dependency file ##########################\n",
        "Line" : 1475,
        "CharPositionInLine" : 6
      },
      "150" : {
        "Text" : "# These output files depend on the source_file and the contents of cmake_dependency_file\n",
        "Line" : 1478,
        "CharPositionInLine" : 8
      },
      "151" : {
        "Text" : "# Make sure the output directory exists before trying to write to it.\n",
        "Line" : 1482,
        "CharPositionInLine" : 8
      },
      "152" : {
        "Text" : "# Make sure the build system knows the file is generated.\n",
        "Line" : 1496,
        "CharPositionInLine" : 6
      },
      "153" : {
        "Text" : "# Add the other files that we want cmake to clean on a cleanup ##########\n",
        "Line" : 1501,
        "CharPositionInLine" : 6
      },
      "154" : {
        "Text" : "# Set the return parameter\n",
        "Line" : 1509,
        "CharPositionInLine" : 2
      },
      "155" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Separable Compilation Link\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1524,
        "CharPositionInLine" : 0
      },
      "156" : {
        "Text" : "# Compute the filename to be used by CUDA_LINK_SEPARABLE_COMPILATION_OBJECTS\n",
        "Line" : 1530,
        "CharPositionInLine" : 0
      },
      "157" : {
        "Text" : "# Setup the build rule for the separable compilation intermediate link file.\n",
        "Line" : 1542,
        "CharPositionInLine" : 0
      },
      "158" : {
        "Text" : "# This is an object file not to be compiled, but only\n\n# be linked.\n\n# This file is generated during the build\n",
        "Line" : 1548,
        "CharPositionInLine" : 27
      },
      "159" : {
        "Text" : "# For now we are ignoring all the configuration specific flags.\n",
        "Line" : 1553,
        "CharPositionInLine" : 4
      },
      "160" : {
        "Text" : "# If -ccbin, --compiler-bindir has been specified, don't do anything.  Otherwise add it here.\n",
        "Line" : 1561,
        "CharPositionInLine" : 4
      },
      "161" : {
        "Text" : "# Match VERBATIM check below.\n",
        "Line" : 1565,
        "CharPositionInLine" : 6
      },
      "162" : {
        "Text" : "# Create a list of flags specified by CUDA_NVCC_FLAGS_${CONFIG} and CMAKE_${CUDA_C_OR_CXX}_FLAGS*\n",
        "Line" : 1573,
        "CharPositionInLine" : 4
      },
      "163" : {
        "Text" : "# Add config specific flags\n",
        "Line" : 1578,
        "CharPositionInLine" : 6
      },
      "164" : {
        "Text" : "# Add CMAKE_${CUDA_C_OR_CXX}_FLAGS\n",
        "Line" : 1588,
        "CharPositionInLine" : 4
      },
      "165" : {
        "Text" : "# Add our general CUDA_NVCC_FLAGS with the configuration specifig flags\n",
        "Line" : 1595,
        "CharPositionInLine" : 4
      },
      "166" : {
        "Text" : "# Some generators don't handle the multiple levels of custom command\n\n# dependencies correctly (obj1 depends on file1, obj2 depends on obj1), so\n\n# we work around that issue by compiling the intermediate link object as a\n\n# pre-link custom command in that situation.\n",
        "Line" : 1600,
        "CharPositionInLine" : 4
      },
      "167" : {
        "Text" : "# VS 2010 and 2012 have this problem.\n",
        "Line" : 1606,
        "CharPositionInLine" : 6
      },
      "168" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# ADD LIBRARY\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1638,
        "CharPositionInLine" : 0
      },
      "169" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 1647,
        "CharPositionInLine" : 2
      },
      "170" : {
        "Text" : "# Create custom commands and targets for each file.\n",
        "Line" : 1650,
        "CharPositionInLine" : 2
      },
      "171" : {
        "Text" : "# Compute the file name of the intermedate link file used for separable\n\n# compilation.\n",
        "Line" : 1655,
        "CharPositionInLine" : 2
      },
      "172" : {
        "Text" : "# Add the library.\n",
        "Line" : 1659,
        "CharPositionInLine" : 2
      },
      "173" : {
        "Text" : "# Add a link phase for the separable compilation if it has been enabled.  If\n\n# it has been enabled then the ${cuda_target}_SEPARABLE_COMPILATION_OBJECTS\n\n# variable will have been defined.\n",
        "Line" : 1666,
        "CharPositionInLine" : 2
      },
      "174" : {
        "Text" : "# We need to set the linker language based on what the expected generated file\n\n# would be. CUDA_C_OR_CXX is computed based on CUDA_HOST_COMPILATION_CPP.\n",
        "Line" : 1675,
        "CharPositionInLine" : 2
      },
      "175" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# ADD EXECUTABLE\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1685,
        "CharPositionInLine" : 0
      },
      "176" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 1694,
        "CharPositionInLine" : 2
      },
      "177" : {
        "Text" : "# Create custom commands and targets for each file.\n",
        "Line" : 1696,
        "CharPositionInLine" : 2
      },
      "178" : {
        "Text" : "# Compute the file name of the intermedate link file used for separable\n\n# compilation.\n",
        "Line" : 1699,
        "CharPositionInLine" : 2
      },
      "179" : {
        "Text" : "# Add the library.\n",
        "Line" : 1703,
        "CharPositionInLine" : 2
      },
      "180" : {
        "Text" : "# Add a link phase for the separable compilation if it has been enabled.  If\n\n# it has been enabled then the ${cuda_target}_SEPARABLE_COMPILATION_OBJECTS\n\n# variable will have been defined.\n",
        "Line" : 1710,
        "CharPositionInLine" : 2
      },
      "181" : {
        "Text" : "# We need to set the linker language based on what the expected generated file\n\n# would be. CUDA_C_OR_CXX is computed based on CUDA_HOST_COMPILATION_CPP.\n",
        "Line" : 1719,
        "CharPositionInLine" : 2
      },
      "182" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# (Internal) helper for manually added cuda source files with specific targets\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1729,
        "CharPositionInLine" : 0
      },
      "183" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 1736,
        "CharPositionInLine" : 2
      },
      "184" : {
        "Text" : "# Create custom commands and targets for each file.\n",
        "Line" : 1738,
        "CharPositionInLine" : 2
      },
      "185" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA COMPILE\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1746,
        "CharPositionInLine" : 0
      },
      "186" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA COMPILE PTX\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1755,
        "CharPositionInLine" : 0
      },
      "187" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA COMPILE FATBIN\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1764,
        "CharPositionInLine" : 0
      },
      "188" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA COMPILE CUBIN\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1773,
        "CharPositionInLine" : 0
      },
      "189" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA ADD CUFFT TO TARGET\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1783,
        "CharPositionInLine" : 0
      },
      "190" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA ADD CUBLAS TO TARGET\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1796,
        "CharPositionInLine" : 0
      },
      "191" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA BUILD CLEAN TARGET\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1809,
        "CharPositionInLine" : 0
      },
      "192" : {
        "Text" : "# Call this after you add all your CUDA targets, and you will get a convience\n\n# target.  You should also make clean after running this target to get the\n\n# build system to generate all the code again.\n",
        "Line" : 1815,
        "CharPositionInLine" : 2
      },
      "193" : {
        "Text" : "# Clear out the variable, so the next time we configure it will be empty.\n\n# This is useful so that the files won't persist in the list after targets\n\n# have been removed.\n",
        "Line" : 1826,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 194
    },
    "ros/cross_toolchain.cmake" : {
      "ObjectId" : "8bb8c3155b8f78d8b5a54852566d05595bb67587",
      "LastModified" : "2019-01-23T01:53:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CMAKE_PREFIX_PATH \"${CMAKE_SYSROOT}/opt/ros/kinetic\")\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# specify the cross compiler\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# where is the target environment\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This assumes that pthread will be available on the target system\n\n# (this emulates that the return of the TRY_RUN is a return code \"0\"\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ros/cross_toolchain_driveworks.cmake" : {
      "ObjectId" : "1801f5848391ffba8eb3aa099fe1d8c3f643418e",
      "LastModified" : "2019-01-23T01:53:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# specify the cross compiler\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# where is the target environment\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This assumes that pthread will be available on the target system\n\n# (this emulates that the return of the TRY_RUN is a return code \"0\"\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ros/src/actuation/vehicles/packages/as/CMakeLists.txt" : {
      "ObjectId" : "ba6c7b0f5341ec0b840cd386ef76f07bd8c44602",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/actuation/vehicles/packages/ymc/CMakeLists.txt" : {
      "ObjectId" : "aa722bc17f6ce5b2215ca7dab776c5b9f8ca82d3",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# _GLIBCXX_USE_CXX11_ABI is 1\n",
        "Line" : 39,
        "CharPositionInLine" : 23
      },
      "1" : {
        "Text" : "# _GLIBCXX_USE_CXX11_ABI is 0\n",
        "Line" : 41,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 2
    },
    "ros/src/common/cmake/autoware_build_flags/CMakeLists.txt" : {
      "ObjectId" : "79f2c3d6c6da6660f0ff9c633c0ac407bc02296e",
      "LastModified" : "2018-08-20T08:39:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/common/cmake/autoware_build_flags/cmake/autoware_build_flags-extras.cmake" : {
      "ObjectId" : "607e89b7b5d7ce6d48de3f51df0bcca6ede205a2",
      "LastModified" : "2018-08-20T08:39:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable support for C++11\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ros/src/common/libs/amathutils_lib/CMakeLists.txt" : {
      "ObjectId" : "3076116eb79cd056052e1fa3d3811199795b9f85",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# autoware math utility\n",
        "Line" : 2,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 1
    },
    "ros/src/common/libs/state_machine_lib/CMakeLists.txt" : {
      "ObjectId" : "61a5fd818bd06d0641f8f41b89c6334ea3719eb7",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/common/libvectormap/CMakeLists.txt" : {
      "ObjectId" : "3dd012aa3e6bfbd688fe23969cdade04e9b7410e",
      "LastModified" : "2019-01-23T01:53:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fallback to cmake_modules\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Not strictly necessary as Eigen is head only\n",
        "Line" : 18,
        "CharPositionInLine" : 46
      },
      "2" : {
        "Text" : "# Possibly map additional variables to the EIGEN3_ prefix.\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ros/src/computing/perception/detection/fusion_tools/packages/pixel_cloud_fusion/CMakeLists.txt" : {
      "ObjectId" : "b7e5ffda1162151006be7310962ac550566ecb21",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fallback to cmake_modules\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Not strictly necessary as Eigen is head only\n",
        "Line" : 27,
        "CharPositionInLine" : 46
      },
      "2" : {
        "Text" : "# Possibly map additional variables to the EIGEN3_ prefix.\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#fusion Library\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Fusion node\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ros/src/computing/perception/detection/fusion_tools/packages/range_vision_fusion/CMakeLists.txt" : {
      "ObjectId" : "00aad8e2e63f51df007e94b37287dad45a3d67ba",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fallback to cmake_modules\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Not strictly necessary as Eigen is head only\n",
        "Line" : 34,
        "CharPositionInLine" : 46
      },
      "2" : {
        "Text" : "# Possibly map additional variables to the EIGEN3_ prefix.\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#fusion Library\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Fusion node\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ros/src/computing/perception/detection/lidar_detector/packages/lidar_apollo_cnn_seg_detect/CMakeLists.txt" : {
      "ObjectId" : "91250f35ee01d598bab234f0fcc8a03380827ffa",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###CAFFE\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ros/src/computing/perception/detection/lidar_detector/packages/lidar_euclidean_cluster_detect/CMakeLists.txt" : {
      "ObjectId" : "341c3099d3dd2888bdd79cc9d25bbb11cc771b7c",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Resolve system dependency on yaml-cpp, which apparently does not\n\n# provide a CMake find_package() module.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Euclidean Cluster\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ros/src/computing/perception/detection/lidar_detector/packages/lidar_fake_perception/CMakeLists.txt" : {
      "ObjectId" : "3124841995fb7878430d82c2c2b62a547daf8310",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/computing/perception/detection/lidar_detector/packages/lidar_naive_l_shape_detect/CMakeLists.txt" : {
      "ObjectId" : "a9c86adb812d8724d7f4fd10bea08681c885e5d1",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/computing/perception/detection/lidar_detector/packages/lidar_point_pillars/CMakeLists.txt" : {
      "ObjectId" : "87d2a5728b87e023c97a837360f88b71abd47d9e",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set flags for CUDA availability\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set flags for TensorRT availability\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# try to find the tensorRT modules\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set flags for CUDNN availability\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# try to find the CUDNN module\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ros/src/computing/perception/detection/lidar_tracker/packages/lidar_imm_ukf_pda_track/CMakeLists.txt" : {
      "ObjectId" : "ffbbd6147df5aeea0722030dc471857f7cc6fab8",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#imm_ukf_pda\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ros/src/computing/perception/detection/lidar_tracker/packages/lidar_kf_contour_track/CMakeLists.txt" : {
      "ObjectId" : "4e75a467288624dc7368bf6e96ba86892eb885c7",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#kl contour track\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ros/src/computing/perception/detection/object_filter/packages/lidar_shape_estimation/CMakeLists.txt" : {
      "ObjectId" : "070576c9650d959be91082545f090af5c42ea526",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_shape_estimation.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ros/src/computing/perception/detection/object_filter/packages/roi_object_filter/CMakeLists.txt" : {
      "ObjectId" : "9a56057e84165e0f0467d6d3dbf90eaaf1b3c055",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fallback to cmake_modules\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Not strictly necessary as Eigen is head only\n",
        "Line" : 27,
        "CharPositionInLine" : 46
      },
      "2" : {
        "Text" : "# Possibly map additional variables to the EIGEN3_ prefix.\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#lib\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#node\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ros/src/computing/perception/detection/trafficlight_recognizer/CMakeLists.txt" : {
      "ObjectId" : "314cac92fa9153f9eb4d367343bd564fdc6b577e",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fallback to cmake_modules\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Not strictly necessary as Eigen is head only\n",
        "Line" : 41,
        "CharPositionInLine" : 46
      },
      "2" : {
        "Text" : "# Possibly map additional variables to the EIGEN3_ prefix.\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### tl_switch ###\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "### region_tlr ###\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "### feat_proj ###\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "### tlr_tuner ###\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "### roi_extractor ###\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "### label_maker ###\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "### region_tlr_ssd ###\n\n##############################SSD'sFORK of CAFFE NEEDS TO BE PREVIOUSLY COMPILED####################\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "####################################################################################################\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# if(EXISTS \"${SSD_CAFFE_PATH}\")\n",
        "Line" : 297,
        "CharPositionInLine" : 33
      },
      "14" : {
        "Text" : "# if(EXISTS \"${SSD_CAFFE_PATH}\")\n",
        "Line" : 299,
        "CharPositionInLine" : 33
      },
      "15" : {
        "Text" : "### region_tlr_mxnet ###\n\n##############################MXNET with CPP_PACKAGE NEEDS TO BE PREVIOUSLY COMPILED################\n\n#############Please follow README file for instructions#############################################\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "####################################################################################################\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "ros/src/computing/perception/detection/trafficlight_recognizer/nodes/label_maker/label_maker.pro" : {
      "ObjectId" : "4c19ad992c173056bc019d0c5e0f557c2a083c17",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ros/src/computing/perception/detection/trafficlight_recognizer/nodes/tlr_tuner/qt_test.pro" : {
      "ObjectId" : "223f8203c6b73cf2d0c3448dbb0a74c9f6c7d3ef",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2015-06-22T11:47:14\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ros/src/computing/perception/detection/vision_detector/libs/dpm_ttic/CMakeLists.txt" : {
      "ObjectId" : "e28fc154c40bb098e56427f86acb52224bed3148",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Declare a cpp library\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#SET_TARGET_PROPERTIES(libdpm_ttic PROPERTIES OUTPUT_NAME dpm_ttic)\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "## Declare a cpp library\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#SET_TARGET_PROPERTIES(libdpm_ttic PROPERTIES OUTPUT_NAME dpm_ttic)\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "ros/src/computing/perception/detection/vision_detector/packages/vision_darknet_detect/CMakeLists.txt" : {
      "ObjectId" : "d764645fb94ac05fa5babc44663565cef2e69496",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#darknet\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#ros node\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#ros node\n",
        "Line" : 243,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "ros/src/computing/perception/detection/vision_detector/packages/vision_dpm_ttic_detect/CMakeLists.txt" : {
      "ObjectId" : "06704298aabb0fb3e55797c9956ff18ab863b637",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## dpm_ttic ##\n\n#this must be fixed to use cmake cuda commands\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ros/src/computing/perception/detection/vision_detector/packages/vision_lane_detect/CMakeLists.txt" : {
      "ObjectId" : "cbddfdcc1c605ac0ba0e13ea021165d382123a17",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES vision_lane_detect\n",
        "Line" : 16,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "#  DEPENDS system_lib\n",
        "Line" : 19,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ros/src/computing/perception/detection/vision_detector/packages/vision_segment_enet_detect/CMakeLists.txt" : {
      "ObjectId" : "76aa0feb22f6bbc052cfac615248d45ecddb2307",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#####ENET########\n\n##############################ENet's CAFFE FORK NEEDS TO BE PREVIOUSLY COMPILED####################\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "####################################################################################################\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ros/src/computing/perception/detection/vision_detector/packages/vision_ssd_detect/CMakeLists.txt" : {
      "ObjectId" : "c19cace836fcb0b9e61efb8929cb3f8ca57c6a62",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#####SSD########\n\n##############################SSD'sFORK of CAFFE NEEDS TO BE PREVIOUSLY COMPILED####################\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "####################################################################################################\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ros/src/computing/perception/detection/vision_tracker/packages/vision_beyond_track/CMakeLists.txt" : {
      "ObjectId" : "8a91e0936f2c7ddcdf59369f4062ef817e5ad0c4",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/computing/perception/detection/visualizers/packages/detected_objects_visualizer/CMakeLists.txt" : {
      "ObjectId" : "b8ee99d7bd980ef93c39cb58606701d90ae05db8",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Rviz Marker visualization\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Image Rect Visualization\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ros/src/computing/perception/detection/visualizers/packages/integrated_viewer/CMakeLists.txt" : {
      "ObjectId" : "500aebdd0ec2058e95529b20f280c94111a151fb",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Qt's user-interface compiler.\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Here we specify which header files need to be run through \"moc\",\n\n# Qt's meta-object compiler.\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Qt's user-interface compiler.\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Here we specify which header files need to be run through \"moc\",\n\n# Qt's meta-object compiler.\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# I prefer the Qt signals and slots to avoid defining \"emit\", \"slots\",\n\n# etc because they can conflict with boost signals, so define QT_NO_KEYWORDS here.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Here we specify the list of source files, including the output of\n\n# the previous command which is stored in ``${MOC_FILES}`` and ``${UI_HEADERS}``.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# An rviz plugin is just a shared library, so here we declare the\n\n# library to be called ``${PROJECT_NAME}`` (which is\n\n# \"rviz_plugin_tutorials\", or whatever your version of this project\n\n# is called) and specify the list of source files we collected above\n\n# in ``${SOURCE_FILES}``.\n\n#\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Specify libraries to link a library or executable target against\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n\n## Mark executables and/or libraries for installation\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#endif()\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "ros/src/computing/perception/localization/lib/gnss/CMakeLists.txt" : {
      "ObjectId" : "1b7609926e452f7ea96e7eced17c32ea42e1af9e",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/computing/perception/localization/lib/ndt_cpu/CMakeLists.txt" : {
      "ObjectId" : "5d30c68566fa08d8e693320446b9f1a4658f996e",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fallback to cmake_modules\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Not strictly necessary as Eigen is head only\n",
        "Line" : 14,
        "CharPositionInLine" : 46
      },
      "2" : {
        "Text" : "# Possibly map additional variables to the EIGEN3_ prefix.\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#The exported libraries from the project\n",
        "Line" : 22,
        "CharPositionInLine" : 44
      },
      "CommentCount" : 4
    },
    "ros/src/computing/perception/localization/lib/ndt_gpu/CMakeLists.txt" : {
      "ObjectId" : "41cfba3c6ef5b9c0b1cd0051ad37f7d5883172e6",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fallback to cmake_modules\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Not strictly necessary as Eigen is head only\n",
        "Line" : 15,
        "CharPositionInLine" : 46
      },
      "2" : {
        "Text" : "# Possibly map additional variables to the EIGEN3_ prefix.\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#Non-catkin CMake projects\n",
        "Line" : 50,
        "CharPositionInLine" : 55
      },
      "4" : {
        "Text" : "#The exported include paths\n\n#The exported libraries from the project\n",
        "Line" : 51,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 5
    },
    "ros/src/computing/perception/localization/lib/ndt_tku/CMakeLists.txt" : {
      "ObjectId" : "9100b03162ee7c4c604c960f05e8f45491b59ec3",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ros/src/computing/perception/localization/lib/pcl_omp_registration/CMakeLists.txt" : {
      "ObjectId" : "65d10475ac0a7d75135dec6c57c5a453e8cf2c3d",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fallback to cmake_modules\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Not strictly necessary as Eigen is head only\n",
        "Line" : 19,
        "CharPositionInLine" : 46
      },
      "2" : {
        "Text" : "# Possibly map additional variables to the EIGEN3_ prefix.\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "ros/src/computing/perception/localization/packages/autoware_connector/CMakeLists.txt" : {
      "ObjectId" : "1f8a45feafbe91eb15f954bcd4c80da178dd4b4d",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/computing/perception/localization/packages/gnss_localizer/CMakeLists.txt" : {
      "ObjectId" : "d5094e4aa889b629fd826cdc9cb890942318ebf8",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/computing/perception/localization/packages/lidar_localizer/CMakeLists.txt" : {
      "ObjectId" : "a8dc9a8fd76ca75f94dea344cac9237fec463052",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fallback to cmake_modules\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Not strictly necessary as Eigen is head only\n",
        "Line" : 30,
        "CharPositionInLine" : 46
      },
      "2" : {
        "Text" : "# Possibly map additional variables to the EIGEN3_ prefix.\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ros/src/computing/perception/prediction/motion_predictor/packages/naive_motion_predict/CMakeLists.txt" : {
      "ObjectId" : "eb20c81f656b55318dac192a0213885ad28a7219",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#naive_motion_predict\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ros/src/computing/perception/semantics/packages/costmap_generator/CMakeLists.txt" : {
      "ObjectId" : "b643c28b738ae472e5e887dffa294cc36d3ff653",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### costmap_generator ###\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ros/src/computing/perception/semantics/packages/object_map/CMakeLists.txt" : {
      "ObjectId" : "990ecf5a83b6e49d0b1361eceec1458150a6753e",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### object_map_utils ###\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### laserscan2costmap ###\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### points2costmap ###\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### potential_field ###\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "### grid_map_filter ###\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### wayarea2grid ###\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "ros/src/computing/perception/semantics/packages/road_occupancy_processor/CMakeLists.txt" : {
      "ObjectId" : "8cc213a439d4da3f48addec288a4c86f8accc54a",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Road Occupancy Processor Library\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Occupancy Processor Main\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ros/src/computing/planning/common/lib/astar_search/CMakeLists.txt" : {
      "ObjectId" : "89cb749c1b0bbc1f14f036189f51b866b325185d",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/computing/planning/common/lib/openplanner/op_planner/CMakeLists.txt" : {
      "ObjectId" : "b1013d2df08d682b9a212dab319208977bf0eaa2",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get a ros version\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Declare a cpp library\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ros/src/computing/planning/common/lib/openplanner/op_planner/Makefile" : {
      "ObjectId" : "7f437c4515a2ad04abe2598b9bc1cab63b9b1f3a",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#For GPS enabled conversion ! \n\n#LFLAGS = -Lbin -Llibs -lutilityh -lproj $(DEBUG) -std=c++11\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\tmv src/*.o ./bin/\t\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ros/src/computing/planning/common/lib/openplanner/op_ros_helpers/CMakeLists.txt" : {
      "ObjectId" : "1afef90403acadb952fad90b6366889a0ca4361b",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Declare a cpp library\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ros/src/computing/planning/common/lib/openplanner/op_simu/CMakeLists.txt" : {
      "ObjectId" : "f07973c1339d233b93c7ac9c2e1f354627d670dd",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get a ros version\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Declare a cpp library\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ros/src/computing/planning/common/lib/openplanner/op_simu/Makefile" : {
      "ObjectId" : "5d7462d5a8ae9df76cea9620d406837c580e668f",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "ros/src/computing/planning/common/lib/openplanner/op_utility/CMakeLists.txt" : {
      "ObjectId" : "aa825551b9ddb0d3acafb04c9f813237de67edbc",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Declare a cpp library\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ros/src/computing/planning/common/lib/openplanner/op_utility/Makefile" : {
      "ObjectId" : "5fc3564554345bc319f344c85ada594e3a45aab8",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "ros/src/computing/planning/common/lib/openplanner/op_utility/cmake/FindTinyXML.cmake" : {
      "ObjectId" : "aabb323d50cf4f1b1b4cd45736fd7589df33e773",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##################################################################################################\n\n# \n\n# CMake script for finding TinyXML.\n\n# \n\n# Input variables:\n\n# \n\n# - TinyXML_ROOT_DIR (optional): When specified, header files and libraries will be searched for in\n\n#     ${TinyXML_ROOT_DIR}/include\n\n#     ${TinyXML_ROOT_DIR}/libs\n\n#   respectively, and the default CMake search order will be ignored. When unspecified, the default\n\n#   CMake search order is used.\n\n#   This variable can be specified either as a CMake or environment variable. If both are set,\n\n#   preference is given to the CMake variable.\n\n#   Use this variable for finding packages installed in a nonstandard location, or for enforcing\n\n#   that one of multiple package installations is picked up.\n\n# \n\n# \n\n# Cache variables (not intended to be used in CMakeLists.txt files)\n\n# \n\n# - TinyXML_INCLUDE_DIR: Absolute path to package headers.\n\n# - TinyXML_LIBRARY: Absolute path to library.\n\n# \n\n# \n\n# Output variables:\n\n# \n\n# - TinyXML_FOUND: Boolean that indicates if the package was found\n\n# - TinyXML_INCLUDE_DIRS: Paths to the necessary header files\n\n# - TinyXML_LIBRARIES: Package libraries\n\n# \n\n# \n\n# Example usage:\n\n# \n\n#  find_package(TinyXML)\n\n#  if(NOT TinyXML_FOUND)\n\n#    # Error handling\n\n#  endif()\n\n#  ...\n\n#  include_directories(${TinyXML_INCLUDE_DIRS} ...)\n\n#  ...\n\n#  target_link_libraries(my_target ${TinyXML_LIBRARIES})\n\n# \n\n##################################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get package location hint from environment variable (if any)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search path for nonstandard package locations\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find headers and libraries\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Output variables generation\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enforce case-correctness: Set appropriately cased variable...\n",
        "Line" : 68,
        "CharPositionInLine" : 36
      },
      "6" : {
        "Text" : "# ...and unset uppercase variable generated by find_package_handle_standard_args\n",
        "Line" : 69,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 7
    },
    "ros/src/computing/planning/decision/packages/decision_maker/CMakeLists.txt" : {
      "ObjectId" : "f30761c526ac5382c58ad8c7e05328dcec19acff",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Compile as C++11, supported in ROS Kinetic and newer\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Install project namespaced headers\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ros/src/computing/planning/mission/packages/freespace_planner/CMakeLists.txt" : {
      "ObjectId" : "f8bd73ff02a0a811758fe545d3c1cafd28fd6e43",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/computing/planning/mission/packages/lane_planner/CMakeLists.txt" : {
      "ObjectId" : "86e795e69546c5039aa6ee5198f6b1306eac22b6",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/computing/planning/mission/packages/op_global_planner/CMakeLists.txt" : {
      "ObjectId" : "d9dbc0a99b03cf6f8fa78992d270af36ecbce657",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Declare a C++ executable\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ros/src/computing/planning/mission/packages/way_planner/CMakeLists.txt" : {
      "ObjectId" : "e0177960bb96c16e7ad1fd0eebcefbcbaad50995",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Declare a C++ executable\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add_executable(way_planner nodes/kml_map_recorder.cpp)\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "## Add cmake target dependencies of the executable\n\n## same as for the library above\n\n# add_dependencies(way_planner_node ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ros/src/computing/planning/motion/packages/dp_planner/CMakeLists.txt" : {
      "ObjectId" : "0c9c590da7840ee11f8662e834aef5514acf7b86",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  DEPENDS system_lib\n",
        "Line" : 49,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Declare a C++ library\n\n#add_library(libdp_planner lib/libdp_planner.cpp)\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ros/src/computing/planning/motion/packages/ff_waypoint_follower/CMakeLists.txt" : {
      "ObjectId" : "6c49aaad486cd133673b01cb21e56479600638dc",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  /usr/local/include/zmp/minivan\n",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "## Declare a C++ library\n\n#add_library(libplanner_x lib/libplanner_x.cpp)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#link_directories(/usr/local/lib/zmp/minivan)\n\n#add_executable(ff_waypoint_follower nodes/ff_waypoint_follower.cpp nodes/ff_waypoint_follower_core.cpp nodes/HevCnt.cpp nodes/HevComm.cpp)\n\n#target_link_libraries(ff_waypoint_follower utilityh plannerh simuh CANUSB hevcontrol ${catkin_LIBRARIES})\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "ros/src/computing/planning/motion/packages/lattice_planner/CMakeLists.txt" : {
      "ObjectId" : "142910b60e45f28f009d04d7ab8f78e8d21662a7",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/computing/planning/motion/packages/op_local_planner/CMakeLists.txt" : {
      "ObjectId" : "6d19312901eb58040c6ab250ebf4b21c2b1b1ddf",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  DEPENDS system_lib\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ros/src/computing/planning/motion/packages/op_simulation_package/CMakeLists.txt" : {
      "ObjectId" : "0e2cefd2c330b48bd84e42250bcbb5bc4a0a7f1a",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  DEPENDS system_lib\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ros/src/computing/planning/motion/packages/op_utilities/CMakeLists.txt" : {
      "ObjectId" : "678cfb17946b7a77773c6d182087b4d6c4a52778",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#find_package(TinyXML REQUIRED)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ros/src/computing/planning/motion/packages/waypoint_follower/CMakeLists.txt" : {
      "ObjectId" : "04a1d371f11405bafcd582937c583086f93b9374",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################\n\n## Declare ROS messages, services and actions ##\n\n################################################\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Install executables and/or libraries\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Install project namespaced headers\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ros/src/computing/planning/motion/packages/waypoint_maker/CMakeLists.txt" : {
      "ObjectId" : "93ba5575211064ae560e0d044afa523946689bda",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/computing/planning/motion/packages/waypoint_planner/CMakeLists.txt" : {
      "ObjectId" : "d950e3714e72177f2a81ecb6ccad7c4bdfead757",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/data/packages/map_file/CMakeLists.txt" : {
      "ObjectId" : "c7cb61eb68b451699eadfbafb0f76da636330110",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See: https://github.com/ros-perception/perception_pcl/blob/lunar-devel/pcl_ros/CMakeLists.txt#L10-L22\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME: this causes duplicates and not found error in ubuntu:zesty\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# For debian: https://github.com/ros-perception/perception_pcl/issues/139\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Install executables and/or libraries\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Install project namespaced headers\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "ros/src/data/packages/obj_db/CMakeLists.txt" : {
      "ObjectId" : "470fe41b78a720e4425a7b5721301e63e3b79222",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ros/src/data/packages/pos_db/CMakeLists.txt" : {
      "ObjectId" : "c3b6f1292f8d820c9f52476f49a4dbbf9329bfba",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/data/packages/pos_db/FindLibSsh2.cmake" : {
      "ObjectId" : "4768f84e1e0bf825381e0074d71f5d50abb18bcf",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libssh2\n\n# Once done this will define\n\n#  LIBSSH2_FOUND - System has libssh2\n\n#  LIBSSH2_INCLUDE_DIRS - The libssh2 include directories\n\n#  LIBSSH2_LIBRARIES - The libraries needed to use libssh2\n\n#  LIBSSH2_DEFINITIONS - Compiler switches required for using libssh2\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBSSH2_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ros/src/data/packages/vector_map/CMakeLists.txt" : {
      "ObjectId" : "a9f7fb8183f93d5a915451fa059320ba365590fe",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Install executables and/or libraries\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Install project namespaced headers\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ros/src/data/packages/vector_map_msgs/CMakeLists.txt" : {
      "ObjectId" : "db8ec59e472586a63eaa645e328f66c6706afdbe",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/data/packages/vector_map_server/CMakeLists.txt" : {
      "ObjectId" : "43e6e4566ce361513f8487664b1ca1022e316254",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/driveworks/packages/autoware_driveworks_gmsl_interface/CMakeLists.txt" : {
      "ObjectId" : "cd50c3bac205c0fc8fbb5cf1dc534d117fdb6ec1",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/driveworks/packages/autoware_driveworks_gmsl_interface/FindDriveWorksSDK.cmake" : {
      "ObjectId" : "f2ef0576921d65e69024b4abc6e1083760510d92",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Try to find DriveWorks library\n\n#\n\n# Look for cmake path\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for include path\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for target build system sdk\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for lib\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set cmake and include dir\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set nvmedia_xxx.h include dir\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set driveworks lib\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "ros/src/driveworks/packages/autoware_driveworks_interface/CMakeLists.txt" : {
      "ObjectId" : "031059681e8a1ae32e4a0b83cb8df3bcb83fc1ed",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use configure_file instead of file(COPY ...) so that if the input file\n\n# changes, it gets copied to the DEVEL space anyway\n",
        "Line" : 96,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 1
    },
    "ros/src/msgs/autoware_can_msgs/CMakeLists.txt" : {
      "ObjectId" : "025ace83e1a81ffb30b0490f4fcf07c417198bfe",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Generate messages in the 'msg' folder\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ros/src/msgs/autoware_config_msgs/CMakeLists.txt" : {
      "ObjectId" : "1b967b368247566bcd6724cebaaf703a41711cfc",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Generate messages in the 'msg' folder\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Runtime Manager ##\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ros/src/msgs/autoware_msgs/CMakeLists.txt" : {
      "ObjectId" : "d2e9d5637f3ac99e1272e26ac939dcc755d5ea5c",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Generate messages in the 'msg' folder\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Sync\n",
        "Line" : 66,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "## Remote Control\n",
        "Line" : 70,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ros/src/msgs/autoware_system_msgs/CMakeLists.txt" : {
      "ObjectId" : "f0b97cbc97bd0d56301a75e9d4a60323fcca9296",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/msgs/dbw_mkz_msgs/CMakeLists.txt" : {
      "ObjectId" : "0f6eeafdb856f995b43b53423466453fd43ab1c5",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/sensing/drivers/camera/packages/baumer/CMakeLists.txt" : {
      "ObjectId" : "ea92b4a3a5d2cb19617e50c6b4739cf77d48995b",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## pkg-config libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ros/src/sensing/drivers/camera/packages/pointgrey/CMakeLists.txt" : {
      "ObjectId" : "d5ed4aa6066ead63e94fe9cd4634d3a75ac30831",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ros/src/sensing/drivers/camera/packages/pointgrey/CMakeParseArguments.cmake" : {
      "ObjectId" : "4248176ad66488c41a2c1a6104c3bbb53765747a",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# CMakeParseArguments\n\n# -------------------\n\n#\n\n#\n\n#\n\n# CMAKE_PARSE_ARGUMENTS(<prefix> <options> <one_value_keywords>\n\n# <multi_value_keywords> args...)\n\n#\n\n# CMAKE_PARSE_ARGUMENTS() is intended to be used in macros or functions\n\n# for parsing the arguments given to that macro or function.  It\n\n# processes the arguments and defines a set of variables which hold the\n\n# values of the respective options.\n\n#\n\n# The <options> argument contains all options for the respective macro,\n\n# i.e.  keywords which can be used when calling the macro without any\n\n# value following, like e.g.  the OPTIONAL keyword of the install()\n\n# command.\n\n#\n\n# The <one_value_keywords> argument contains all keywords for this macro\n\n# which are followed by one value, like e.g.  DESTINATION keyword of the\n\n# install() command.\n\n#\n\n# The <multi_value_keywords> argument contains all keywords for this\n\n# macro which can be followed by more than one value, like e.g.  the\n\n# TARGETS or FILES keywords of the install() command.\n\n#\n\n# When done, CMAKE_PARSE_ARGUMENTS() will have defined for each of the\n\n# keywords listed in <options>, <one_value_keywords> and\n\n# <multi_value_keywords> a variable composed of the given <prefix>\n\n# followed by \"_\" and the name of the respective keyword.  These\n\n# variables will then hold the respective value from the argument list.\n\n# For the <options> keywords this will be TRUE or FALSE.\n\n#\n\n# All remaining arguments are collected in a variable\n\n# <prefix>_UNPARSED_ARGUMENTS, this can be checked afterwards to see\n\n# whether your macro was called with unrecognized parameters.\n\n#\n\n# As an example here a my_install() macro, which takes similar arguments\n\n# as the real install() command:\n\n#\n\n# ::\n\n#\n\n#    function(MY_INSTALL)\n\n#      set(options OPTIONAL FAST)\n\n#      set(oneValueArgs DESTINATION RENAME)\n\n#      set(multiValueArgs TARGETS CONFIGURATIONS)\n\n#      cmake_parse_arguments(MY_INSTALL \"${options}\" \"${oneValueArgs}\" \"${multiValueArgs}\" ${ARGN} )\n\n#      ...\n\n#\n\n#\n\n#\n\n# Assume my_install() has been called like this:\n\n#\n\n# ::\n\n#\n\n#    my_install(TARGETS foo bar DESTINATION bin OPTIONAL blub)\n\n#\n\n#\n\n#\n\n# After the cmake_parse_arguments() call the macro will have set the\n\n# following variables:\n\n#\n\n# ::\n\n#\n\n#    MY_INSTALL_OPTIONAL = TRUE\n\n#    MY_INSTALL_FAST = FALSE (this option was not used when calling my_install()\n\n#    MY_INSTALL_DESTINATION = \"bin\"\n\n#    MY_INSTALL_RENAME = \"\" (was not used)\n\n#    MY_INSTALL_TARGETS = \"foo;bar\"\n\n#    MY_INSTALL_CONFIGURATIONS = \"\" (was not used)\n\n#    MY_INSTALL_UNPARSED_ARGUMENTS = \"blub\" (no value expected after \"OPTIONAL\"\n\n#\n\n#\n\n#\n\n# You can then continue and process these variables.\n\n#\n\n# Keywords terminate lists of values, e.g.  if directly after a\n\n# one_value_keyword another recognized keyword follows, this is\n\n# interpreted as the beginning of the new option.  E.g.\n\n# my_install(TARGETS foo DESTINATION OPTIONAL) would result in\n\n# MY_INSTALL_DESTINATION set to \"OPTIONAL\", but MY_INSTALL_DESTINATION\n\n# would be empty and MY_INSTALL_OPTIONAL would be set to TRUE therefor.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first set all result variables to empty/FALSE\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# now iterate over all arguments and fill the result variables\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 122,
        "CharPositionInLine" : 57
      },
      "5" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 123,
        "CharPositionInLine" : 63
      },
      "6" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 124,
        "CharPositionInLine" : 61
      },
      "7" : {
        "Text" : "# propagate the result variables to the caller:\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "ros/src/sensing/drivers/camera/packages/pointgrey/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "d03041852de88c0e31e4ffd17cc055b284407ca7",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindPackageHandleStandardArgs\n\n# -----------------------------\n\n#\n\n#\n\n#\n\n# FIND_PACKAGE_HANDLE_STANDARD_ARGS(<name> ...  )\n\n#\n\n# This function is intended to be used in FindXXX.cmake modules files.\n\n# It handles the REQUIRED, QUIET and version-related arguments to\n\n# find_package().  It also sets the <packagename>_FOUND variable.  The\n\n# package is considered found if all variables <var1>...  listed contain\n\n# valid results, e.g.  valid filepaths.\n\n#\n\n# There are two modes of this function.  The first argument in both\n\n# modes is the name of the Find-module where it is called (in original\n\n# casing).\n\n#\n\n# The first simple mode looks like this:\n\n#\n\n# ::\n\n#\n\n#     FIND_PACKAGE_HANDLE_STANDARD_ARGS(<name> (DEFAULT_MSG|\"Custom failure message\") <var1>...<varN> )\n\n#\n\n# If the variables <var1> to <varN> are all valid, then\n\n# <UPPERCASED_NAME>_FOUND will be set to TRUE.  If DEFAULT_MSG is given\n\n# as second argument, then the function will generate itself useful\n\n# success and error messages.  You can also supply a custom error\n\n# message for the failure case.  This is not recommended.\n\n#\n\n# The second mode is more powerful and also supports version checking:\n\n#\n\n# ::\n\n#\n\n#     FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME [FOUND_VAR <resultVar>]\n\n#                                            [REQUIRED_VARS <var1>...<varN>]\n\n#                                            [VERSION_VAR   <versionvar>]\n\n#                                            [HANDLE_COMPONENTS]\n\n#                                            [CONFIG_MODE]\n\n#                                            [FAIL_MESSAGE \"Custom failure message\"] )\n\n#\n\n#\n\n#\n\n# In this mode, the name of the result-variable can be set either to\n\n# either <UPPERCASED_NAME>_FOUND or <OriginalCase_Name>_FOUND using the\n\n# FOUND_VAR option.  Other names for the result-variable are not\n\n# allowed.  So for a Find-module named FindFooBar.cmake, the two\n\n# possible names are FooBar_FOUND and FOOBAR_FOUND.  It is recommended\n\n# to use the original case version.  If the FOUND_VAR option is not\n\n# used, the default is <UPPERCASED_NAME>_FOUND.\n\n#\n\n# As in the simple mode, if <var1> through <varN> are all valid,\n\n# <packagename>_FOUND will be set to TRUE.  After REQUIRED_VARS the\n\n# variables which are required for this package are listed.  Following\n\n# VERSION_VAR the name of the variable can be specified which holds the\n\n# version of the package which has been found.  If this is done, this\n\n# version will be checked against the (potentially) specified required\n\n# version used in the find_package() call.  The EXACT keyword is also\n\n# handled.  The default messages include information about the required\n\n# version and the version which has been actually found, both if the\n\n# version is ok or not.  If the package supports components, use the\n\n# HANDLE_COMPONENTS option to enable handling them.  In this case,\n\n# find_package_handle_standard_args() will report which components have\n\n# been found and which are missing, and the <packagename>_FOUND variable\n\n# will be set to FALSE if any of the required components (i.e.  not the\n\n# ones listed after OPTIONAL_COMPONENTS) are missing.  Use the option\n\n# CONFIG_MODE if your FindXXX.cmake module is a wrapper for a\n\n# find_package(...  NO_MODULE) call.  In this case VERSION_VAR will be\n\n# set to <NAME>_VERSION and the macro will automatically check whether\n\n# the Config module was found.  Via FAIL_MESSAGE a custom failure\n\n# message can be specified, if this is not used, the default message\n\n# will be displayed.\n\n#\n\n# Example for mode 1:\n\n#\n\n# ::\n\n#\n\n#     find_package_handle_standard_args(LibXml2  DEFAULT_MSG  LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR)\n\n#\n\n#\n\n#\n\n# LibXml2 is considered to be found, if both LIBXML2_LIBRARY and\n\n# LIBXML2_INCLUDE_DIR are valid.  Then also LIBXML2_FOUND is set to\n\n# TRUE.  If it is not found and REQUIRED was used, it fails with\n\n# FATAL_ERROR, independent whether QUIET was used or not.  If it is\n\n# found, success will be reported, including the content of <var1>.  On\n\n# repeated Cmake runs, the same message won't be printed again.\n\n#\n\n# Example for mode 2:\n\n#\n\n# ::\n\n#\n\n#     find_package_handle_standard_args(LibXslt FOUND_VAR LibXslt_FOUND\n\n#                                              REQUIRED_VARS LibXslt_LIBRARIES LibXslt_INCLUDE_DIRS\n\n#                                              VERSION_VAR LibXslt_VERSION_STRING)\n\n#\n\n# In this case, LibXslt is considered to be found if the variable(s)\n\n# listed after REQUIRED_VAR are all valid, i.e.  LibXslt_LIBRARIES and\n\n# LibXslt_INCLUDE_DIRS in this case.  The result will then be stored in\n\n# LibXslt_FOUND .  Also the version of LibXslt will be checked by using\n\n# the version contained in LibXslt_VERSION_STRING.  Since no\n\n# FAIL_MESSAGE is given, the default messages will be printed.\n\n#\n\n# Another example for mode 2:\n\n#\n\n# ::\n\n#\n\n#     find_package(Automoc4 QUIET NO_MODULE HINTS /opt/automoc4)\n\n#     find_package_handle_standard_args(Automoc4  CONFIG_MODE)\n\n#\n\n# In this case, FindAutmoc4.cmake wraps a call to find_package(Automoc4\n\n# NO_MODULE) and adds an additional search directory for automoc4.  Here\n\n# the result will be stored in AUTOMOC4_FOUND.  The following\n\n# FIND_PACKAGE_HANDLE_STANDARD_ARGS() call produces a proper\n\n# success/error message.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# internal helper macro\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# internal helper macro to generate the failure message when used in CONFIG_MODE:\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# <name>_CONFIG is set, but FOUND is false, this means that some other of the REQUIRED_VARS was not found:\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If _CONSIDERED_CONFIGS is set, the config-file has been found, but no suitable version.\n\n# List them all in the error message:\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Simple case: No Config-file was found at all:\n",
        "Line" : 168,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# set up the arguments for CMAKE_PARSE_ARGUMENTS and check whether we are in\n\n# new extended or in the \"old\" mode:\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# now that we collected all arguments, process them\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# In config-mode, we rely on the variable <package>_CONFIG, which is set by find_package()\n\n# when it successfully found the config-file, including version checking:\n",
        "Line" : 208,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# collect all variables which were not found, so they can be printed, so the\n\n# user knows better what went wrong (#6375)\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# check if all passed variables are valid\n",
        "Line" : 239,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# component handling\n",
        "Line" : 253,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# version handling:\n",
        "Line" : 284,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# exact version required\n",
        "Line" : 292,
        "CharPositionInLine" : 44
      },
      "15" : {
        "Text" : "# minimum version specified:\n",
        "Line" : 300,
        "CharPositionInLine" : 17
      },
      "16" : {
        "Text" : "# if the package was not found, but a version was given, add that to the output:\n",
        "Line" : 311,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# print the result:\n",
        "Line" : 332,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "ros/src/sensing/drivers/camera/packages/pointgrey/FindPackageMessage.cmake" : {
      "ObjectId" : "6821cee4f77a9d84c74f2c140870a2163ae5a5f0",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindPackageMessage\n\n# ------------------\n\n#\n\n#\n\n#\n\n# FIND_PACKAGE_MESSAGE(<name> \"message for user\" \"find result details\")\n\n#\n\n# This macro is intended to be used in FindXXX.cmake modules files.  It\n\n# will print a message once for each unique find result.  This is useful\n\n# for telling the user where a package was found.  The first argument\n\n# specifies the name (XXX) of the package.  The second argument\n\n# specifies the message to display.  The third argument lists details\n\n# about the find result so that if they change the message will be\n\n# displayed again.  The macro also obeys the QUIET argument to the\n\n# find_package command.\n\n#\n\n# Example:\n\n#\n\n# ::\n\n#\n\n#   if(X11_FOUND)\n\n#     FIND_PACKAGE_MESSAGE(X11 \"Found X11: ${X11_X11_LIB}\"\n\n#       \"[${X11_X11_LIB}][${X11_INCLUDE_DIR}]\")\n\n#   else()\n\n#    ...\n\n#   endif()\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Avoid printing a message repeatedly for the same find result.\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The message has not yet been printed.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Save the find details in the cache to avoid printing the same\n\n# message again.\n",
        "Line" : 41,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "ros/src/sensing/drivers/camera/packages/pointgrey/FindSpinnaker.cmake" : {
      "ObjectId" : "bb4502b0dc1a7fed7b76ac58b9d0c26ba00e4ded",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/sensing/drivers/camera/packages/pointgrey/FindXercesC.cmake" : {
      "ObjectId" : "5a8ea9de2560c90d04112b89a611a41087a69377",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindXercesC\n\n# -----------\n\n#\n\n# Find the Apache Xerces-C++ validating XML parser headers and libraries.\n\n#\n\n# This module reports information about the Xerces installation in\n\n# several variables.  General variables::\n\n#\n\n#   XercesC_FOUND - true if the Xerces headers and libraries were found\n\n#   XercesC_VERSION - Xerces release version\n\n#   XercesC_INCLUDE_DIRS - the directory containing the Xerces headers\n\n#   XercesC_LIBRARIES - Xerces libraries to be linked\n\n#\n\n# The following cache variables may also be set::\n\n#\n\n#   XercesC_INCLUDE_DIR - the directory containing the Xerces headers\n\n#   XercesC_LIBRARY - the Xerces library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Written by Roger Leigh <rleigh@codelibre.net>\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2014 University of Dundee\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find include directory\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find all XercesC libraries\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ros/src/sensing/drivers/camera/packages/vectacam/CMakeLists.txt" : {
      "ObjectId" : "03d96418387f37d72eab8d9fa0d515541c2395eb",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/sensing/drivers/can/packages/kvaser/CMakeLists.txt" : {
      "ObjectId" : "40334a057243723d17e08c4f8a937d16ef51fd59",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ros/src/sensing/drivers/gnss/packages/garmin/CMakeLists.txt" : {
      "ObjectId" : "dcafe4050e3c73caeed672f2a5aa2e165a49ea16",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#or\n",
        "Line" : 4,
        "CharPositionInLine" : 54
      },
      "1" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES velodyne_gps_imu\n\n#  CATKIN_DEPENDS geometry_msgs roscpp std_msgs\n\n#  DEPENDS system_lib\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ros/src/sensing/drivers/gnss/packages/javad_navsat_driver/CMakeLists.txt" : {
      "ObjectId" : "8d31eb6f530fcac559d0bed981c66d98e3b9e5b4",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check package for pep8 style, add a test to fail on violations.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#roslint_add_test()\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ros/src/sensing/drivers/gnss/packages/nmea_navsat/CMakeLists.txt" : {
      "ObjectId" : "3d6d41336153455e8eac60cf703a639e40dedeae",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES fake_drivers\n\n#  CATKIN_DEPENDS other_catkin_pkg\n\n#  DEPENDS system_lib\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_executable(javad_tty nodes/javad_tty/javad_tty.cpp)\n\n#target_link_libraries(javad_tty\n\n#   ${catkin_LIBRARIES}\n\n#)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ros/src/sensing/drivers/imu/packages/analog_devices/CMakeLists.txt" : {
      "ObjectId" : "9da75e8e1cc0c2e110454c4d2a1f145dbcb853f7",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if(CATKIN_ENABLE_TESTING)\n\n#  find_package(catkin REQUIRED COMPONENTS rostest roslaunch)\n\n#  file(GLOB LAUNCH_FILES launch/*.launch)\n\n#  foreach(LAUNCH_FILE ${LAUNCH_FILES})\n\n#    message(STATUS \"Testing ${LAUNCH_FILE}\")\n\n#    roslaunch_add_file_check(${LAUNCH_FILE})\n\n#  endforeach()\n\n#  roslaunch_add_file_check(launch/adis16470.launch with_rviz:=true with_plot:=true)\n\n#endif()\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# catkin_add_gtest(${PROJECT_NAME}-test test/test_adi_driver.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# debbuild\n\n# catkin build minas_control --make-args debbuild\n\n# ROS_PARALLEL_JOBS='' catkin_make --pkg ${PROJECT_NAME} -- debbuild\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# make docs\n\n# ROS_PARALLEL_JOBS='' catkin_make --pkg adi_driver -- docbuild_adi_driver\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#COMMAND cmake -E chdir output sh -c 'ls *.png | xargs extractbb'\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "## change layout, chapter to section, section to subsection\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "##\n\n## for japanese doc,\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# COMMAND cmake -E chdir output platex ${PROJECT_NAME}.tex\n\n# COMMAND cmake -E chdir output platex ${PROJECT_NAME}.tex\n\n# COMMAND cmake -E chdir output dvipdfmx ${PROJECT_NAME}\n",
        "Line" : 79,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "## for english doc\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "##\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "ros/src/sensing/drivers/imu/packages/memsic/CMakeLists.txt" : {
      "ObjectId" : "137ef279ac3112c1b84dd6cc1455b4f00de0ebd2",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES crossbow_imu\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  DEPENDS system_lib\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Declare a cpp executable\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ros/src/sensing/drivers/imu/packages/microstrain/CMakeLists.txt" : {
      "ObjectId" : "88f9170c3408eb2b4c3bd509fcdad8f796ee0f28",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directories containing MIP SDK header files\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The SDK comes with a skeleton for the user-defined functions\n\n# It might be helpful to test compilation against these skeletons\n\n# contains both .c and .h files\n\n# set(MIPUSR \"MIPSDK/C/Library/User\\ Functions\")\n\n#include_directories(include ${MIPLIBINC} ${MIPUTILINC} ${MIPUSR})\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  ${MIPUSR}/mip_sdk_user_functions.h\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  ${MIPUSR}/mip_sdk_user_functions.c  \n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Libraries\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Executables\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Linking\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "ros/src/sensing/drivers/imu/packages/xsens/src/custom_msgs/CMakeLists.txt" : {
      "ObjectId" : "8272e1586b3a5fd25f2bfe1861791a6ff99efbe5",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################\n\n## Declare ROS messages, services and actions ##\n\n################################################\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## To declare and build messages, services or actions from within this\n\n## package, follow these steps:\n\n## * Let MSG_DEP_SET be the set of packages whose message types you use in\n\n##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).\n\n## * In the file package.xml:\n\n##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET\n\n##   * If MSG_DEP_SET isn't empty the following dependencies might have been\n\n##     pulled in transitively but can be declared for certainty nonetheless:\n\n##     * add a build_depend tag for \"message_generation\"\n\n##     * add a run_depend tag for \"message_runtime\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"message_generation\" and every package in MSG_DEP_SET to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * add \"message_runtime\" and every package in MSG_DEP_SET to\n\n##     catkin_package(CATKIN_DEPENDS ...)\n\n##   * uncomment the add_*_files sections below as needed\n\n##     and list every .msg/.srv/.action file to be processed\n\n##   * uncomment the generate_messages entry below\n\n##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate messages in the 'msg' folder\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Generate actions in the 'action' folder\n\n# add_action_files(\n\n#   FILES\n\n#   Action1.action\n\n#   Action2.action\n\n# )\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES test_py\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#  DEPENDS system_lib\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Declare a cpp library\n\n# add_library(test_py\n\n#   src/${PROJECT_NAME}/test_py.cpp\n\n# )\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Declare a cpp executable\n\n# add_executable(test_py_node src/test_py_node.cpp)\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Add cmake target dependencies of the executable/library\n\n## as an example, message headers may need to be generated before nodes\n\n# add_dependencies(test_py_node test_py_generate_messages_cpp)\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(test_py_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS test_py test_py_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "ros/src/sensing/drivers/imu/packages/xsens/src/xsens_driver/CMakeLists.txt" : {
      "ObjectId" : "fc1a5187e961a9c2aa0cdb63cd847592491c1fcd",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################\n\n## Declare ROS messages, services and actions ##\n\n################################################\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## To declare and build messages, services or actions from within this\n\n## package, follow these steps:\n\n## * Let MSG_DEP_SET be the set of packages whose message types you use in\n\n##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).\n\n## * In the file package.xml:\n\n##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET\n\n##   * If MSG_DEP_SET isn't empty the following dependencies might have been\n\n##     pulled in transitively but can be declared for certainty nonetheless:\n\n##     * add a build_depend tag for \"message_generation\"\n\n##     * add a run_depend tag for \"message_runtime\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"message_generation\" and every package in MSG_DEP_SET to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * add \"message_runtime\" and every package in MSG_DEP_SET to\n\n##     catkin_package(CATKIN_DEPENDS ...)\n\n##   * uncomment the add_*_files sections below as needed\n\n##     and list every .msg/.srv/.action file to be processed\n\n##   * uncomment the generate_messages entry below\n\n##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Generate actions in the 'action' folder\n\n# add_action_files(\n\n#   FILES\n\n#   Action1.action\n\n#   Action2.action\n\n# )\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   std_msgs  # Or other packages containing msgs\n\n# )\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES test_py\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#  DEPENDS system_lib\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Declare a cpp library\n\n# add_library(test_py\n\n#   src/${PROJECT_NAME}/test_py.cpp\n\n# )\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Declare a cpp executable\n\n# add_executable(test_py_node src/test_py_node.cpp)\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Add cmake target dependencies of the executable/library\n\n## as an example, message headers may need to be generated before nodes\n\n# add_dependencies(test_py_node test_py_generate_messages_cpp)\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(test_py_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS test_py test_py_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n#install(\n\n#  DIRECTORY launch\n\n#  DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n#)\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_test_py.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 27
    },
    "ros/src/sensing/drivers/lidar/packages/hokuyo/CMakeLists.txt" : {
      "ObjectId" : "d1d959e3c2a9f7bda799e436c27f59b0dfdb5202",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin and any catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Declare a catkin package\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ros/src/sensing/drivers/lidar/packages/sick/ldmrs/sick_ldmrs_description/CMakeLists.txt" : {
      "ObjectId" : "2617cd7dccfdb951cf730593ca37d16b5aa3f3ea",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ros/src/sensing/drivers/lidar/packages/sick/ldmrs/sick_ldmrs_driver/CMakeLists.txt" : {
      "ObjectId" : "39c7a54dd408400ce90cc45d7920ccaf5d81b60d",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The following is commented because we're importing sick_ldmrs from src/dirver\n\n# find_package(SickLDMRS REQUIRED)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    LIBRARIES \n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# sick_ldmrs is an imported target from libsick_ldmrs (in src/driver), we'd use\n\n# ${SICK_LDMRS_LIBRARIES} as defined by find_package(SickLDMRS) otherwise\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Mark cpp header files for installation\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ros/src/sensing/drivers/lidar/packages/sick/ldmrs/sick_ldmrs_driver/src/driver/CMakeLists.txt" : {
      "ObjectId" : "41ae17207194a67170598bdee21c5a8a63d19c54",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Offer the user the choice of overriding the installation directories\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make relative paths absolute (needed later on)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set up include-directories\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Extra cmake macros\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add sub-directories\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###### create and install Config module ####\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add all targets to the build-tree export set\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Export the package for use from the build-tree\n\n# (this registers the build-tree with a global CMake-registry)\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create the SickLDMRSConfig.cmake and SickLDMRSConfigVersion files\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ... for the build tree\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ... for the install tree\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ... for both\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install the SickLDMRSConfig.cmake and SickLDMRSConfigVersion.cmake\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Install the export set for use with the install-tree\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Install catkin package.xml\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "ros/src/sensing/drivers/lidar/packages/sick/ldmrs/sick_ldmrs_driver/src/driver/src/CMakeLists.txt" : {
      "ObjectId" : "a8e539cd224ecfa1712342a34777a0b5ca36c064",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# LDMRS_Examples\n\n#\n\n# SICK AG\n\n# 16.12.2011, willhvo\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the binary dir so that the UI files are wrapped correctly\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set CMake policy\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The target executable\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The target library\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# IMPORTANT: Add the LDMRS_Example executable to the \"export-set\"\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# IMPORTANT: Add the sick_ldmrs library to the \"export-set\"\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "ros/src/sensing/drivers/lidar/packages/sick/ldmrs/sick_ldmrs_laser/CMakeLists.txt" : {
      "ObjectId" : "1e4e3a371b1fce86e33bb6b65bb58d26db21c4ca",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/sensing/drivers/lidar/packages/sick/ldmrs/sick_ldmrs_msgs/CMakeLists.txt" : {
      "ObjectId" : "45745710efdecd8bd41cff5eb07dae27ce74e2f0",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################\n\n## Declare ROS messages, services and actions ##\n\n################################################\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## To declare and build messages, services or actions from within this\n\n## package, follow these steps:\n\n## * Let MSG_DEP_SET be the set of packages whose message types you use in\n\n##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).\n\n## * In the file package.xml:\n\n##   * add a build_depend tag for \"message_generation\"\n\n##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET\n\n##   * If MSG_DEP_SET isn't empty the following dependency has been pulled in\n\n##     but can be declared for certainty nonetheless:\n\n##     * add a run_depend tag for \"message_runtime\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"message_generation\" and every package in MSG_DEP_SET to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * add \"message_runtime\" and every package in MSG_DEP_SET to\n\n##     catkin_package(CATKIN_DEPENDS ...)\n\n##   * uncomment the add_*_files sections below as needed\n\n##     and list every .msg/.srv/.action file to be processed\n\n##   * uncomment the generate_messages entry below\n\n##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Generate messages in the 'msg' folder\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate actions in the 'action' folder\n\n# add_action_files(\n\n#   FILES\n\n#   Action1.action\n\n#   Action2.action\n\n# )\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#  LIBRARIES sick_ldmrs_msgs\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#  DEPENDS system_lib\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Declare a C++ library\n\n# add_library(sick_ldmrs_msgs\n\n#   src/${PROJECT_NAME}/sick_ldmrs_msgs.cpp\n\n# )\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Add cmake target dependencies of the library\n\n## as an example, code may need to be generated before libraries\n\n## either from message generation or dynamic reconfigure\n\n# add_dependencies(sick_ldmrs_msgs ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Declare a C++ executable\n\n# add_executable(sick_ldmrs_msgs_node src/sick_ldmrs_msgs_node.cpp)\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Add cmake target dependencies of the executable\n\n## same as for the library above\n\n# add_dependencies(sick_ldmrs_msgs_node ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(sick_ldmrs_msgs_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS sick_ldmrs_msgs sick_ldmrs_msgs_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Mark cpp header files for installation\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "ros/src/sensing/drivers/lidar/packages/sick/ldmrs/sick_ldmrs_tools/CMakeLists.txt" : {
      "ObjectId" : "c4f20f69ac55a0d639566f90da922f4462d1ad90",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES sick_ldmrs_tools\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  DEPENDS system_lib\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Declare a C++ library\n\n# add_library(sick_ldmrs_tools\n\n#   src/${PROJECT_NAME}/sick_ldmrs_tools.cpp\n\n# )\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Add cmake target dependencies of the library\n\n## as an example, code may need to be generated before libraries\n\n## either from message generation or dynamic reconfigure\n\n# add_dependencies(sick_ldmrs_tools ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Declare a C++ executable\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Add cmake target dependencies of the executable\n\n## same as for the library above\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Specify libraries to link a library or executable target against\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Mark executables and/or libraries for installation\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_sick_ldmrs_tools.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "ros/src/sensing/drivers/lidar/packages/sick/lms5xx/CMakeLists.txt" : {
      "ObjectId" : "5a254e975e645511b2a3c2af9d4a9e11a8eb4fe7",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/sensing/filters/packages/image_processor/CMakeLists.txt" : {
      "ObjectId" : "58887e155550f2f450f8904f3e2ac592b50f9e6f",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Image rotator\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Image rectifier\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Image Stitcher\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Image Blender\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "ros/src/sensing/filters/packages/points_downsampler/CMakeLists.txt" : {
      "ObjectId" : "9a969e621b401c5811ae9c97a23a4fbcf85d4341",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ros/src/sensing/filters/packages/points_preprocessor/CMakeLists.txt" : {
      "ObjectId" : "1de4d8283e1b4c84349944be95e7b198c3781790",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Resolve system dependency on yaml-cpp, which apparently does not\n\n# provide a CMake find_package() module.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Space Filter\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Ring Ground Filter\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Ray Ground Filter\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Points Concat filter\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Cloud Transformer\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Compare Map Filter\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "### Unit Tests ###\n\n#if (CATKIN_ENABLE_TESTING)\n\n#    find_package(rostest REQUIRED)\n\n#    find_package(roslaunch REQUIRED)\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#    add_rostest_gtest(test_points_preprocessor\n\n#\t\t\ttest/test_points_preprocessor.test\n\n#\t\t\ttest/src/test_points_preprocessor.cpp)\n\n#   target_include_directories(test_points_preprocessor PRIVATE\n\n#          nodes/ray_ground_filter/include\n\n#            test/include)\n\n#    target_link_libraries(test_points_preprocessor\n\n#            ray_ground_filter_lib\n\n#            ${catkin_LIBRARIES})\n\n#endif ()\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "ros/src/sensing/fusion/packages/autoware_camera_lidar_calibrator/CMakeLists.txt" : {
      "ObjectId" : "192580d06515315ad94ae23df06b42e430694a75",
      "LastModified" : "2019-03-26T05:46:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#camera lidar node\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#camera intrinsics node\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ros/src/sensing/fusion/packages/calibration_publisher/CMakeLists.txt" : {
      "ObjectId" : "75501d488bcbd3059cb0aeb68dd5fde0e3b003de",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/sensing/fusion/packages/multi_lidar_calibrator/CMakeLists.txt" : {
      "ObjectId" : "d49eb3e56aa55404666e511640fd41384a7e3817",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MultiLidar Calibrator\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ros/src/sensing/fusion/packages/points2image/CMakeLists.txt" : {
      "ObjectId" : "f0655c94e49cecb619a4ce35ed7ab07ad3bc2768",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CMAKE_AUTOUIC ON)\n\n#set(CMAKE_AUTORCC ON)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# library\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# points2vscan\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# points2image\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# vscan2image\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# vscan2linelist\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "ros/src/sensing/fusion/packages/points2image/points_to_image.pro" : {
      "ObjectId" : "eff9234a7f44dd5d78d1daea573738273cdabcd1",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-11-20T12:48:46\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ros/src/simulation/gazebo_simulator/launcher/vehicle_gazebo_simulation_launcher/CMakeLists.txt" : {
      "ObjectId" : "55c628d0caf2e2371d5ccac24f4b074c6450e3f2",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/simulation/gazebo_simulator/vehicle/sensor_model/camera/gazebo_camera_description/CMakeLists.txt" : {
      "ObjectId" : "b3d93c659fa4925acae0896a1d02fc58ffc3356e",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/simulation/gazebo_simulator/vehicle/sensor_model/imu/gazebo_imu_description/CMakeLists.txt" : {
      "ObjectId" : "0df554dd9d331fe20740fb87f16074b5b06c72e3",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/simulation/gazebo_simulator/vehicle/vehicle_gazebo_simulation_interface/CMakeLists.txt" : {
      "ObjectId" : "1370e835a9eb4a5208589c86ba6ef8d4e7b1a552",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/simulation/gazebo_simulator/vehicle/vehicle_model/CMakeLists.txt" : {
      "ObjectId" : "2d24e53f8f7c2c810a5b4c7fca070833b3779997",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/simulation/gazebo_simulator/worlds/gazebo_world_description/CMakeLists.txt" : {
      "ObjectId" : "6c200d435bbe28345409c41b760f5e09d7781083",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/simulation/lgsvl_simulator/lgsvl_simulator_bridge/CMakeLists.txt" : {
      "ObjectId" : "49593885fac5131f28b7a7955c56ea62c3cc4475",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/socket/packages/mqtt_socket/CMakeLists.txt" : {
      "ObjectId" : "33fbd044544278277fbbe1f44b7c09b8d07486cf",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TODO: FIX THIS\n",
        "Line" : 44,
        "CharPositionInLine" : 84
      },
      "CommentCount" : 1
    },
    "ros/src/socket/packages/oculus_socket/CMakeLists.txt" : {
      "ObjectId" : "4013dfc194d39a61933520a56f9f84e8dea06d82",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/socket/packages/tablet_socket/CMakeLists.txt" : {
      "ObjectId" : "fdd7ca8ff3100c86db0cf9ed3c7c450ded2ad7f7",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/socket/packages/tablet_socket_msgs/CMakeLists.txt" : {
      "ObjectId" : "89f368a3afbd937a44f7fa58cea39a6d3bafe0a5",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################\n\n## Declare ROS messages, services and actions ##\n\n################################################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## To declare and build messages, services or actions from within this\n\n## package, follow these steps:\n\n## * Let MSG_DEP_SET be the set of packages whose message types you use in\n\n##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).\n\n## * In the file package.xml:\n\n##   * add a build_depend tag for \"message_generation\"\n\n##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET\n\n##   * If MSG_DEP_SET isn't empty the following dependency has been pulled in\n\n##     but can be declared for certainty nonetheless:\n\n##     * add a run_depend tag for \"message_runtime\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"message_generation\" and every package in MSG_DEP_SET to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * add \"message_runtime\" and every package in MSG_DEP_SET to\n\n##     catkin_package(CATKIN_DEPENDS ...)\n\n##   * uncomment the add_*_files sections below as needed\n\n##     and list every .msg/.srv/.action file to be processed\n\n##   * uncomment the generate_messages entry below\n\n##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate messages in the 'msg' folder\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Generate actions in the 'action' folder\n\n# add_action_files(\n\n#   FILES\n\n#   Action1.action\n\n#   Action2.action\n\n# )\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "################################################\n\n## Declare ROS dynamic reconfigure parameters ##\n\n################################################\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## To declare and build dynamic reconfigure parameters within this\n\n## package, follow these steps:\n\n## * In the file package.xml:\n\n##   * add a build_depend and a run_depend tag for \"dynamic_reconfigure\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"dynamic_reconfigure\" to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * uncomment the \"generate_dynamic_reconfigure_options\" section below\n\n##     and list every .cfg file to be processed\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Generate dynamic reconfigure parameters in the 'cfg' folder\n\n# generate_dynamic_reconfigure_options(\n\n#   cfg/DynReconf1.cfg\n\n#   cfg/DynReconf2.cfg\n\n# )\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES tablet_socket_msgs\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#  DEPENDS system_lib\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Declare a C++ library\n\n# add_library(tablet_socket_msgs\n\n#   src/${PROJECT_NAME}/tablet_socket_msgs.cpp\n\n# )\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Add cmake target dependencies of the library\n\n## as an example, code may need to be generated before libraries\n\n## either from message generation or dynamic reconfigure\n\n# add_dependencies(tablet_socket_msgs ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Declare a C++ executable\n\n# add_executable(tablet_socket_msgs_node src/tablet_socket_msgs_node.cpp)\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Add cmake target dependencies of the executable\n\n## same as for the library above\n\n# add_dependencies(tablet_socket_msgs_node ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(tablet_socket_msgs_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS tablet_socket_msgs tablet_socket_msgs_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_tablet_socket_msgs.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "ros/src/socket/packages/udon_socket/CMakeLists.txt" : {
      "ObjectId" : "2ec390c8b675a46029f85e866405e6c84b5b547b",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/socket/packages/vehicle_socket/CMakeLists.txt" : {
      "ObjectId" : "73f1528c6b0862154dc8a9ea4aeace19c375f3c8",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/system/autoware_health_checker/CMakeLists.txt" : {
      "ObjectId" : "b4c0f5051de6777a096ff2f20f42d33572c547fb",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  DEPENDS system_lib\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CPP Execution programs\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include header files\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install library\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ros/src/system/sync/CMakeLists.txt" : {
      "ObjectId" : "c171f0f05c71ad27d93c4be43a93c932af03dc83",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"-O2 -Wall ${CMAKE_CXX_FLAGS}\")\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ros/src/util/packages/RobotSDK/fastvirtualscan/CMakeLists.txt" : {
      "ObjectId" : "e9fc298005eab5953e13686cc9479a6094e5fdae",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ros/src/util/packages/RobotSDK/glviewer/CMakeLists.txt" : {
      "ObjectId" : "1ad0f7b8241a67a8743664e6e66321941bacc2bc",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fallback to cmake_modules\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Not strictly necessary as Eigen is head only\n",
        "Line" : 18,
        "CharPositionInLine" : 46
      },
      "2" : {
        "Text" : "# Possibly map additional variables to the EIGEN3_ prefix.\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#set(CMAKE_AUTOUIC ON)\n\n#set(CMAKE_AUTORCC ON)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ros/src/util/packages/RobotSDK/glviewer/GLViewer/GLViewer.pro" : {
      "ObjectId" : "3a0806115bdcd3dbf2f89d694af8d1e92dfaff4f",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ros/src/util/packages/RobotSDK/glviewer/GLViewer/RobotSDK_Install.pri" : {
      "ObjectId" : "964540b6dc70e52b888487dbbfc5209a6de3592d",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ros/src/util/packages/RobotSDK/glviewer/GLViewer/RobotSDK_Main.pri" : {
      "ObjectId" : "cf0bd6b26dbfbf1dfccaecc646f5cc60ce7736eb",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ros/src/util/packages/RobotSDK/rosinterface/CMakeLists.txt" : {
      "ObjectId" : "1199691d12afdf3b10d3a437dea191d53dd843a1",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CMAKE_AUTOUIC ON)\n\n#set(CMAKE_AUTORCC ON)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ros/src/util/packages/RobotSDK/rosinterface/ROSInterface/ROSInterface.pro" : {
      "ObjectId" : "a06c1eaeb0e39130e02283b33a1244c5dfe3b1ea",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-11-02T13:57:41\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ros/src/util/packages/RobotSDK/rosinterface/ROSInterface/RobotSDK_Install.pri" : {
      "ObjectId" : "964540b6dc70e52b888487dbbfc5209a6de3592d",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ros/src/util/packages/RobotSDK/rosinterface/ROSInterface/RobotSDK_Main.pri" : {
      "ObjectId" : "cf0bd6b26dbfbf1dfccaecc646f5cc60ce7736eb",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ros/src/util/packages/autoware_bag_tools/CMakeLists.txt" : {
      "ObjectId" : "d774f392fc3d8b26d656acde72dd2ad3e2dccb23",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/util/packages/autoware_launcher/CMakeLists.txt" : {
      "ObjectId" : "aa88b28042ec318a080c85c61d08fbe156a86989",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/util/packages/autoware_rviz_plugins/autoware_launcher_rviz/CMakeLists.txt" : {
      "ObjectId" : "fc13fdb5317f01a6311d071269374079b4b4a529",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/util/packages/autoware_rviz_plugins/decision_maker_panel/CMakeLists.txt" : {
      "ObjectId" : "6d452f2d0d21185fcdee0cfa997368b2b86b5805",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## pull in all required include dirs, define QT_LIBRARIES, etc.\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "## make target_link_libraries(${QT_LIBRARIES}) pull in all required dependencies\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES state_rviz_plugins\n\n#  CATKIN_DEPENDS rviz std_msgs\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Install rules\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "ros/src/util/packages/autoware_rviz_plugins/rosbag_controller/CMakeLists.txt" : {
      "ObjectId" : "15b16de8636832b7785e58665746c9c832127331",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## pull in all required include dirs, define QT_LIBRARIES, etc.\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "## make target_link_libraries(${QT_LIBRARIES}) pull in all required dependencies\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "## System dependencies are found with CMake's conventions\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##include(${QT_USE_FILE})\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# DEPENDS system_lib\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Declare a cpp library\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Specify libraries to link a library or executable target against\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Mark executables and/or libraries for installation\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Mark cpp header files for installation\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "ros/src/util/packages/autoware_rviz_plugins/state_panel/CMakeLists.txt" : {
      "ObjectId" : "b054beded6b3fbcf07a5fcdc9e659841e26a27a9",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## pull in all required include dirs, define QT_LIBRARIES, etc.\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "## make target_link_libraries(${QT_LIBRARIES}) pull in all required dependencies\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES state_rviz_plugins\n\n#  CATKIN_DEPENDS rviz std_msgs\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Install rules\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "ros/src/util/packages/data_preprocessor/CMakeLists.txt" : {
      "ObjectId" : "1cb6973b3fcbe02c00b3bc6c9aa3304b37df5b11",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#libpcl-all-dev\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES data_preprocessor\n\n#  CATKIN_DEPENDS cv_bridge libpcl-all-dev pcd_tutorial pcl_conversions pcl_msgs pcl_ros roscpp std_msgs\n\n#  DEPENDS system_lib\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ros/src/util/packages/graph_tools/CMakeLists.txt" : {
      "ObjectId" : "62bdf820cd0738407e40b44d798368d158876ae2",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES graph_tools\n\n#  CATKIN_DEPENDS other_catkin_pkg\n\n#  DEPENDS system_lib\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ros/src/util/packages/kitti_pkg/kitti_box_publisher/CMakeLists.txt" : {
      "ObjectId" : "e1acb7f4951e89ae7e19baee122a795145ea89bd",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ros/src/util/packages/kitti_pkg/kitti_launch/CMakeLists.txt" : {
      "ObjectId" : "ac578c4d577351906c87b91c5d71572ca988c025",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/util/packages/kitti_pkg/kitti_player/CMakeLists.txt" : {
      "ObjectId" : "f58393e0229a7b6fdb9141b1232f8d31b60409fa",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/util/packages/log_tools/CMakeLists.txt" : {
      "ObjectId" : "301e2f41a18ca095ec4ba2c815c718b2c4f8c74d",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/util/packages/map_tf_generator/CMakeLists.txt" : {
      "ObjectId" : "6568433e1ae88401f2c7a19930fc2896b2db7746",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Compile as C++11, supported in ROS Kinetic and newer\n\n# add_compile_options(-std=c++11)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if your package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES map_tf_generator\n\n#  CATKIN_DEPENDS other_catkin_pkg\n\n#  DEPENDS system_lib\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Specify libraries to link a library or executable target against\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ros/src/util/packages/map_tools/CMakeLists.txt" : {
      "ObjectId" : "53c5ec86d063ecbd1e3dee61556c27ec5cefe290",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ros/src/util/packages/marker_downsampler/CMakeLists.txt" : {
      "ObjectId" : "8a15d7df64bae5a102a38c480e9dde31aebd5841",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES marker_downsampler\n\n#  CATKIN_DEPENDS other_catkin_pkg\n\n#  DEPENDS system_lib\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# include\n\n# ${catkin_INCLUDE_DIRS}\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "ros/src/util/packages/pc2_downsampler/CMakeLists.txt" : {
      "ObjectId" : "708828537de2f57f82f8016885ba001e6ef01c00",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES pc2_downsampler\n\n#  CATKIN_DEPENDS other_catkin_pkg\n\n#  DEPENDS system_lib\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# include\n\n# ${catkin_INCLUDE_DIRS}\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "ros/src/util/packages/runtime_manager/CMakeLists.txt" : {
      "ObjectId" : "33d479a86ef877edd762a13956435ce073341cef",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#DESTINATION share/${PROJECT_NAME}/images\n",
        "Line" : 64,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "#DESTINATION share/${PROJECT_NAME}/launch_files\n",
        "Line" : 98,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "ros/src/util/packages/sound_player/CMakeLists.txt" : {
      "ObjectId" : "3d7707dc8b5efd1faebe202f8a7c692205d4976f",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TODO INSTALL ALL THE WAVs, MODIFY SCRIPT",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ros/src/vehicle/vehicle_description/CMakeLists.txt" : {
      "ObjectId" : "a0fc25e3737e599d141182252c17d283ccccd28d",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ui/oculus/ofw/Makefile" : {
      "ObjectId" : "7a7fe8b58f60bd38f7f9f61349aa71be6ba5062d",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Attempt to load a config.make file.\n\n# If none is found, project defaults in config.project.make will be used.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make sure the the OF_ROOT location is defined\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# call the project makefile!\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ui/tablet/AutowareDrive/app/proguard-rules.pro" : {
      "ObjectId" : "f31f060471dd41ba0dd01c94b52c784ceb52d678",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in /Users/yuki.iida/Library/Android/sdk/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ui/watch/Voice/mobile/proguard-rules.pro" : {
      "ObjectId" : "e93e140e0cd9bbd7fa996abc1e0a449a822f8ab8",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in C:\\Users\\Show\\AppData\\Local\\Android\\sdk/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ui/watch/Voice/wear/proguard-rules.pro" : {
      "ObjectId" : "e93e140e0cd9bbd7fa996abc1e0a449a822f8ab8",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in C:\\Users\\Show\\AppData\\Local\\Android\\sdk/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ui/watch/mapdemo/app/proguard-rules.pro" : {
      "ObjectId" : "e93e140e0cd9bbd7fa996abc1e0a449a822f8ab8",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in C:\\Users\\Show\\AppData\\Local\\Android\\sdk/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ui/watch/mapdemo/mobile/proguard-rules.pro" : {
      "ObjectId" : "e93e140e0cd9bbd7fa996abc1e0a449a822f8ab8",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in C:\\Users\\Show\\AppData\\Local\\Android\\sdk/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "vehicle/zmp/autoware_socket/PID_debugger/Makefile" : {
      "ObjectId" : "fadcf8cf78bfaec0a978a6d6c1b7fb24fd3f1274",
      "LastModified" : "2019-03-23T09:03:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#############################################################################\n\n# Makefile for building: PID_controller\n\n# Generated by qmake (2.01a) (Qt 4.8.1) on: Fri Oct 23 22:37:47 2015\n\n# Project:  ../PID_controller/PID_controller.pro\n\n# Template: app\n\n# Command: /opt/QtSDK/Desktop/Qt/4.8.1/gcc/bin/qmake -spec /opt/QtSDK/Desktop/Qt/4.8.1/gcc/mkspecs/linux-g++ -o Makefile ../PID_controller/PID_controller.pro\n\n#############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "####### Compiler, tools and options\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "####### Output directory\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "####### Files\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "####### Implicit rules\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "####### Build rules\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "####### Sub-libraries\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "####### Compile\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "####### Install\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    }
  },
  "FileTypes" : {
    "CMAKE" : 148,
    "QMAKE" : 14,
    "MAKEFILE" : 5
  },
  "ElapsedTime" : 7028
}