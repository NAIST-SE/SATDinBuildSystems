{
  "Repository" : "65810954",
  "Revision" : "HEAD",
  "ObjectId" : "5843530a06e4bcbda66d3cefa1e7b32580f2f4c3",
  "CommitTime" : "2019-04-18T15:49:40Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "a71d847af7afaa18471db51dc1b15a2d3de02d84",
      "LastModified" : "2019-04-16T03:04:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############################\n\n# Options\n\n#############################\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#############################\n\n# Setup config generation\n\n#############################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#############################\n\n# Setup version information\n\n#############################\n\n# Determine HIP_BASE_VERSION\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# get date information based on UTC\n\n# use the last two digits of year + week number + day in the week as HIP_VERSION_PATCH\n\n# use the commit date, instead of build date\n\n# add xargs to remove strange trailing newline character\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#############################\n\n# Configure variables\n\n#############################\n\n# Determine HIP_PLATFORM\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Determine HIP_COMPILER\n\n# Either hcc or clang; default is hcc\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Determine HIP_RUNTIME\n\n# Either HCC or VDI; default is HCC\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If HIP_PLATFORM is hcc, we need HCC_HOME and HSA_PATH to be defined\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Determine HCC_HOME\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Determine HSA_PATH\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Set default build type\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Determine HIP install path\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Check if we need to enable ATP marker\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#############################\n\n# Profiling API support\n\n#############################\n\n# Generate profiling API macros/structures header\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Enable profiling API\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "################\n\n# Detect Code Object Manager\n\n################\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#############################\n\n# Build steps\n\n#############################\n\n# Build clang hipify if enabled\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Build LPL an CA (fat binary generation / fat binary decomposition tools) if\n\n# platform is hcc; do this before the ugly hijacking of the compiler, since no\n\n# HC code is involved.\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Build hip_hcc if platform is hcc\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Add HIP_VERSION to CMAKE_<LANG>_FLAGS\n",
        "Line" : 232,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Add remaining flags\n",
        "Line" : 235,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Set compiler and compiler flags\n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Generate .hipInfo\n",
        "Line" : 295,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Generate .hipVersion\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Build doxygen documentation\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#############################\n\n# Install steps\n\n#############################\n\n# Install hip_hcc if platform is hcc\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Install .hipInfo\n",
        "Line" : 316,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Install .hipVersion\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Install src, bin, include & cmake if necessary\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#############################\n\n# hip-config\n\n#############################\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#############################\n\n# Packaging steps\n\n#############################\n\n# Package: hip_base\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Packaging needs to wait for hipify-clang to build if it's enabled...\n",
        "Line" : 394,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Package: hip_hcc\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Package: hip_nvcc\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Package: hip_doc\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Package: hip_samples\n",
        "Line" : 435,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Package: all\n",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#############################\n\n# Code analysis\n\n#############################\n\n# Target: cppcheck\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#############################\n\n# Code formatting\n\n#############################\n\n# Target: clangformat\n",
        "Line" : 466,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#############################\n\n# Testing steps\n\n#############################\n\n# Target: test\n",
        "Line" : 477,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Add tests\n",
        "Line" : 491,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# Add top-level tests to build_tests\n",
        "Line" : 495,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# Add custom target: check\n",
        "Line" : 498,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# vim: ts=4:sw=4:expandtab:smartindent\n",
        "Line" : 504,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 44
    },
    "cmake/FindHIP.cmake" : {
      "ObjectId" : "d2377e9adb888d61f11e6d31ee782e7e9b080de2",
      "LastModified" : "2018-08-27T15:51:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# FindHIP.cmake\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# SET: Variable defaults\n\n###############################################################################\n\n# User defined flags\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# Set HIP CMAKE Flags\n\n###############################################################################\n\n# Copy the invocation styles from CXX to HIP\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(CMAKE_SHARED_LIBRARY_LINK_HIP_FLAGS ${CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS})\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the CMake Flags to use the HCC Compilier.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###############################################################################\n\n# FIND: HIP and associated helper binaries\n\n###############################################################################\n\n# HIP is supported on Linux only\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Search for HIP installation\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Search in user specified path first\n",
        "Line" : 54,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Now search in default path\n",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Check if we found HIP installation\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# If so, fix the path\n",
        "Line" : 78,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "# And push it back to the cache\n",
        "Line" : 80,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "# Find HIPCC executable\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Now search in default paths\n",
        "Line" : 106,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Find HIPCONFIG executable\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Now search in default paths\n",
        "Line" : 125,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Find HIPCC_CMAKE_LINKER_HELPER executable\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Now search in default paths\n",
        "Line" : 144,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Compute the version\n",
        "Line" : 150,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Compute the platform\n",
        "Line" : 174,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "###############################################################################\n\n# MACRO: Locate helper files\n\n###############################################################################\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Set this variable as internal, so the user isn't bugged with it.\n",
        "Line" : 213,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "###############################################################################\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "###############################################################################\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "###############################################################################\n\n# MACRO: Reset compiler flags\n\n###############################################################################\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "###############################################################################\n\n# MACRO: Separate the options from the sources\n\n###############################################################################\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Assume this is a file\n",
        "Line" : 277,
        "CharPositionInLine" : 16
      },
      "27" : {
        "Text" : "###############################################################################\n\n# MACRO: Add include directories to pass to the hipcc command\n\n###############################################################################\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "###############################################################################\n\n# FUNCTION: Helper to avoid clashes of files with the same basename but different paths\n\n###############################################################################\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Convert to cmake style paths\n",
        "Line" : 298,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Remove leading /\n",
        "Line" : 309,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Avoid absolute paths by removing ':'\n",
        "Line" : 311,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Avoid relative paths that go up the tree\n",
        "Line" : 313,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Avoid spaces\n",
        "Line" : 315,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Strip off the filename\n",
        "Line" : 317,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "###############################################################################\n\n# MACRO: Parse OPTIONS from ARGN & set variables prefixed by _option_prefix\n\n###############################################################################\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Determine if we are dealing with a per-configuration flag\n",
        "Line" : 329,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# Clear arg to prevent it from being processed anymore\n",
        "Line" : 334,
        "CharPositionInLine" : 16
      },
      "38" : {
        "Text" : "###############################################################################\n\n# MACRO: Try and include dependency file if it exists\n\n###############################################################################\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Create the dependency file if it doesn't exist\n",
        "Line" : 351,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# Include the dependency file\n",
        "Line" : 355,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# Verify the existence of all the included files\n",
        "Line" : 358,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# If they aren't there, regenerate the file again\n",
        "Line" : 362,
        "CharPositionInLine" : 16
      },
      "43" : {
        "Text" : "# No dependencies, so regenerate the file\n",
        "Line" : 367,
        "CharPositionInLine" : 8
      },
      "44" : {
        "Text" : "# Regenerate the dependency file if needed\n",
        "Line" : 371,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "###############################################################################\n\n# MACRO: Prepare cmake commands for the target\n\n###############################################################################\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Initialize list of includes with those specified by the user. Append with\n\n# ones specified to cmake directly.\n",
        "Line" : 391,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# Add the include directories\n",
        "Line" : 395,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# Add the compile definitions\n",
        "Line" : 412,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# Check if we are building shared library.\n",
        "Line" : 416,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# If we are building a shared library, add extra flags to HIP_HIPCC_FLAGS\n",
        "Line" : 428,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# Set host compiler\n",
        "Line" : 434,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# Set compiler flags\n",
        "Line" : 437,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# Reset the output variable\n",
        "Line" : 450,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# Iterate over all arguments and create custom commands for all source files\n",
        "Line" : 454,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# Ignore any file marked as a HEADER_FILE_ONLY\n",
        "Line" : 456,
        "CharPositionInLine" : 8
      },
      "56" : {
        "Text" : "# Allow per source file overrides of the format. Also allows compiling non .cu files.\n",
        "Line" : 458,
        "CharPositionInLine" : 8
      },
      "57" : {
        "Text" : "# Determine output directory\n",
        "Line" : 467,
        "CharPositionInLine" : 12
      },
      "58" : {
        "Text" : "# Set file names\n",
        "Line" : 475,
        "CharPositionInLine" : 12
      },
      "59" : {
        "Text" : "# Set properties for object files\n",
        "Line" : 481,
        "CharPositionInLine" : 12
      },
      "60" : {
        "Text" : "# This is an object file not to be compiled, but only be linked\n",
        "Line" : 484,
        "CharPositionInLine" : 37
      },
      "61" : {
        "Text" : "# Don't add CMAKE_CURRENT_SOURCE_DIR if the path is already an absolute path\n",
        "Line" : 487,
        "CharPositionInLine" : 12
      },
      "62" : {
        "Text" : "# Bring in the dependencies\n",
        "Line" : 495,
        "CharPositionInLine" : 12
      },
      "63" : {
        "Text" : "# Configure the build script\n",
        "Line" : 498,
        "CharPositionInLine" : 12
      },
      "64" : {
        "Text" : "# Create up the comment string\n",
        "Line" : 513,
        "CharPositionInLine" : 12
      },
      "65" : {
        "Text" : "# Build the generated file and dependency file\n",
        "Line" : 517,
        "CharPositionInLine" : 12
      },
      "66" : {
        "Text" : "# These output files depend on the source_file and the contents of cmake_dependency_file\n",
        "Line" : 520,
        "CharPositionInLine" : 16
      },
      "67" : {
        "Text" : "# Make sure the output directory exists before trying to write to it.\n",
        "Line" : 524,
        "CharPositionInLine" : 16
      },
      "68" : {
        "Text" : "# Make sure the build system knows the file is generated\n",
        "Line" : 535,
        "CharPositionInLine" : 12
      },
      "69" : {
        "Text" : "# Set the return parameter\n",
        "Line" : 542,
        "CharPositionInLine" : 4
      },
      "70" : {
        "Text" : "###############################################################################\n\n# HIP_ADD_EXECUTABLE\n\n###############################################################################\n",
        "Line" : 547,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 551,
        "CharPositionInLine" : 4
      },
      "72" : {
        "Text" : "###############################################################################\n\n# HIP_ADD_LIBRARY\n\n###############################################################################\n",
        "Line" : 565,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 569,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "# vim: ts=4:sw=4:expandtab:smartindent\n",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 75
    },
    "cmake/FindHIP/run_hipcc.cmake" : {
      "ObjectId" : "4dc2572e981f0eed13227c45588a07e21290c298",
      "LastModified" : "2017-03-07T09:10:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Runs commands using HIPCC\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# This file runs the hipcc commands to produce the desired output file\n\n# along with the dependency file needed by CMake to compute dependencies.\n\n#\n\n# Input variables:\n\n#\n\n# verbose:BOOL=<>               OFF: Be as quiet as possible (default)\n\n#                               ON : Describe each step\n\n# build_configuration:STRING=<> Build configuration. Defaults to Debug.\n\n# generated_file:STRING=<>      File to generate. Mandatory argument.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set these up as variables to make reading the generated file easier\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# path\n",
        "Line" : 24,
        "CharPositionInLine" : 51
      },
      "4" : {
        "Text" : "#path\n",
        "Line" : 25,
        "CharPositionInLine" : 59
      },
      "5" : {
        "Text" : "# path\n",
        "Line" : 26,
        "CharPositionInLine" : 45
      },
      "6" : {
        "Text" : "# path\n",
        "Line" : 27,
        "CharPositionInLine" : 37
      },
      "7" : {
        "Text" : "# path\n",
        "Line" : 28,
        "CharPositionInLine" : 47
      },
      "8" : {
        "Text" : "#path\n",
        "Line" : 29,
        "CharPositionInLine" : 27
      },
      "9" : {
        "Text" : "# list (needs to be in quotes to handle spaces properly)\n",
        "Line" : 35,
        "CharPositionInLine" : 55
      },
      "10" : {
        "Text" : "# path\n",
        "Line" : 37,
        "CharPositionInLine" : 53
      },
      "11" : {
        "Text" : "# path\n",
        "Line" : 38,
        "CharPositionInLine" : 33
      },
      "12" : {
        "Text" : "# bool\n",
        "Line" : 39,
        "CharPositionInLine" : 29
      },
      "13" : {
        "Text" : "# Determine compiler and compiler flags\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# hip_execute_process - Executes a command with optional command echo and status message.\n\n#   status     - Status message to print if verbose is true\n\n#   command    - COMMAND argument from the usual execute_process argument structure\n\n#   ARGN       - Remaining arguments are the command with arguments\n\n#   HIP_result - Return value from running the command\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Build command string to print\n",
        "Line" : 71,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Escape quotes if any\n",
        "Line" : 74,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# Surround args with spaces with quotes\n",
        "Line" : 76,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# Echo the command\n",
        "Line" : 83,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Run the command\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Delete the target file\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Generate the dependency file\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Generate the cmake readable dependency file to a temp file\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Copy the file if it is different\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Delete the temporary file\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Generate the output file\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Make sure that we delete the output file\n",
        "Line" : 157,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# vim: ts=4:sw=4:expandtab:smartindent\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "cmake/FindHIP/run_make2cmake.cmake" : {
      "ObjectId" : "d2e3eb51690262c7b5115d756f870dc748fdb3ed",
      "LastModified" : "2016-09-02T09:37:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Computes dependencies using HIPCC\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# This file converts dependency files generated using hipcc to a format that\n\n# cmake can understand.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Input variables:\n\n#\n\n# input_file:STRING=<> Dependency file to parse. Required argument\n\n# output_file:STRING=<> Output file to generate. Required argument\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Remove the duplicate entries and sort them.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# vim: ts=4:sw=4:expandtab:smartindent\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "hipify-clang/CMakeLists.txt" : {
      "ObjectId" : "6853cafaa19c97711edfd6494a864b7649ca6e45",
      "LastModified" : "2019-04-16T03:04:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Link against LLVM and CLANG libraries\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Populates CUDA_TOOLKIT_ROOT_DIR, which is then applied to the lit config to give the\n\n# value of --cuda-path for the test runs.\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "lpl_ca/CMakeLists.txt" : {
      "ObjectId" : "b36d73bbcb4aae340c2bd1e962a17942377df158",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------LPL--------------------------------------#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-------------------------------------LPL--------------------------------------#\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-------------------------------------CA---------------------------------------#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-------------------------------------CA---------------------------------------#",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "packaging/hip-targets-release.cmake" : {
      "ObjectId" : "83c207810cba6d6a5e58ceacd1971e43e1b7866a",
      "LastModified" : "2018-10-31T08:38:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------\n\n# Generated CMake target import file for configuration \"Release\".\n\n#----------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Commands may need to know the format version.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Import target \"hip::hip_hcc_static\" for configuration \"Release\"\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Import target \"hip::hip_hcc\" for configuration \"Release\"\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Commands beyond this point should not need to know the version.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "packaging/hip-targets.cmake" : {
      "ObjectId" : "d7a6b4d588e6d26f3d8f91c49703c93cd29f4629",
      "LastModified" : "2018-10-31T08:38:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generated by CMake 3.5.1\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------\n\n# Generated CMake target import file.\n\n#----------------------------------------------------------------\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Commands may need to know the format version.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Protect against multiple inclusion, which would fail when already imported targets are added once more.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The installation prefix configured by this project.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create imported target hip::hip_hcc_static\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create imported target hip::hip_hcc\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create imported target hip::host\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create imported target hip::device\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Load information for each installed configuration.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Cleanup temporary variables.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Loop over all imported files and verify that they actually exist\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# This file does not depend on other imported targets which have\n\n# been exported from the same project but in a separate export set.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Commands beyond this point should not need to know the version.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "samples/0_Intro/bit_extract/Makefile" : {
      "ObjectId" : "08bca6e642fb18e27e185d5d52271e018a3a48a4",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#Dependencies : [MYHIP]/bin must be in user's path.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Show how to use PLATFORM to specify different options for each compiler:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "samples/0_Intro/hcc_dialects/Makefile" : {
      "ObjectId" : "4a514b66918f3930d5d39313bc7659ac747ae010",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# HCC version:\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HCC version, using explicit arrays:\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# HCC version, using AM (accelerator memory) pointer\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# HIP version:\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# AMP version:\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "samples/0_Intro/module_api/Makefile" : {
      "ObjectId" : "270d4c1211b5a90c584f0ee1eecf1f0a27833ef4",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#defaultDriver.hip.out: defaultDriver.cpp\n\n#\t$(HIPCC)  $(HIPCC_FLAGS) $< -o $@\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "samples/0_Intro/module_api_global/Makefile" : {
      "ObjectId" : "97605020b28830aed7854fcecce1de1fb84033ff",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "samples/0_Intro/square/Makefile" : {
      "ObjectId" : "9bb0dd82053380f5062ddbea9cb25c3b1def9e4f",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Step\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "samples/1_Utils/hipBusBandwidth/Makefile" : {
      "ObjectId" : "418f25f8ed607daa0b63170a2c4736b1d143a4e2",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "samples/1_Utils/hipCommander/Makefile" : {
      "ObjectId" : "c3a19073f085bb4ae044985cd634f8f0f225d22b",
      "LastModified" : "2018-05-17T01:55:27Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#CXXFLAGS = -O3 -g\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "samples/1_Utils/hipDispatchLatency/Makefile" : {
      "ObjectId" : "3b69c4a33587a153934b983c78e161bf06b9394f",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "samples/1_Utils/hipInfo/Makefile" : {
      "ObjectId" : "53bad55e45fd953f255511a70fa8cc684d691ca8",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "samples/2_Cookbook/0_MatrixTranspose/Makefile" : {
      "ObjectId" : "d3630a1c197b3d5663989b87998d9e431602f082",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "samples/2_Cookbook/10_inline_asm/Makefile" : {
      "ObjectId" : "6ad3c201bd985e8f007fa9bb040df8c885e33873",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "samples/2_Cookbook/11_texture_driver/Makefile" : {
      "ObjectId" : "b68c5c31c7b11a8e19bc111ad63e971a48cf8638",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "samples/2_Cookbook/12_cmake_hip_add_executable/CMakeLists.txt" : {
      "ObjectId" : "99409724d30d3c671345923e69464552b38a187e",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/2_Cookbook/1_hipEvent/Makefile" : {
      "ObjectId" : "be4bc2169acfbf2edf4a515888b5a3c5325140cc",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "samples/2_Cookbook/2_Profiler/Makefile" : {
      "ObjectId" : "db2d008182ca4591c85266f80e911ed8a3554e23",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Pass option to control start and stop iterations for profiling - see MatrixTranspose.cpp for implementation:\n\n# Note we start profiler in --startdisabled mode - no timing collected until app enabled it via hipProfilerStart()\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "samples/2_Cookbook/3_shared_memory/Makefile" : {
      "ObjectId" : "24aafcd15291db23d1250c89a75be7d40cd11b9e",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "samples/2_Cookbook/4_shfl/Makefile" : {
      "ObjectId" : "56f54d95184bb89cb07bbffade007ae0533d9f2f",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "samples/2_Cookbook/5_2dshfl/Makefile" : {
      "ObjectId" : "cfadb1a311b0bc63ed3e73ee9fbadd1e4d6f7dde",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "samples/2_Cookbook/6_dynamic_shared/Makefile" : {
      "ObjectId" : "5d867a58c93be530376bf8ae51b9ddf28d9505ed",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "samples/2_Cookbook/7_streams/Makefile" : {
      "ObjectId" : "64b0f0e097d737d3a59042e0b32ca283c141a71e",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "samples/2_Cookbook/8_peer2peer/Makefile" : {
      "ObjectId" : "0bf9e6f93ee5267653271f5ae98c28dcfd29dd44",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "samples/2_Cookbook/9_unroll/Makefile" : {
      "ObjectId" : "b71f3d83537db8509be1852b883854bbe4ef3cd4",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/hit/HIT.cmake" : {
      "ObjectId" : "82e8508dcd8f62d34c655705c2e14e0a3c0818a3",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Helper macro to parse BUILD instructions\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Helper macro to parse RUN instructions\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Helper macro to parse RUN_NAMED instructions\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Helper macro to insert key/value pair into \"hashmap\"\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Helper macro to read key/value pair from \"hashmap\"\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Helper macro to create a test\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Macro: HIT_ADD_FILES used to scan+add multiple files for testing.\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Build tests\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Run cmake commands\n",
        "Line" : 158,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Add tests\n",
        "Line" : 172,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Add named tests\n",
        "Line" : 191,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Macro: HIT_ADD_DIRECTORY to scan+add all files in a directory for testing\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Macro: HIT_ADD_DIRECTORY_RECURSIVE to scan+add all files in a directory+subdirectories for testing\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# vim: ts=4:sw=4:expandtab:smartindent\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "tests/src/Makefile" : {
      "ObjectId" : "829d45a08c02d5c213513c55712140a1192bea26",
      "LastModified" : "2018-03-05T04:29:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 10,
    "MAKEFILE" : 22
  },
  "ElapsedTime" : 2540
}