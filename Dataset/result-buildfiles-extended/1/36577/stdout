{
  "Repository" : "36577",
  "Revision" : "HEAD",
  "ObjectId" : "d7855101d8d3ed1cbcc108221ea33b80abcef020",
  "CommitTime" : "2015-09-14T18:36:05Z",
  "Files" : {
    "firmware/tinyg/Debug/Makefile" : {
      "ObjectId" : "93f24d2b4bf6881c6a046be3bde3bebb936bf088",
      "LastModified" : "2015-02-16T12:03:04Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "################################################################################\r\n\n# Automatically-generated file. Do not edit!\r\n\n################################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# AVR32/GNU Preprocessing Assembler\r\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# AVR32/GNU Assembler\r\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add inputs and outputs from these tool invocations to the build variables \r\n",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# All Target\r\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5,
      "Errorlog" : "line 28:9 token recognition error at: '\"\\r\\nADDITIONAL_DEPENDENCIES:=\\r\\nOUTPUT_FILE_DEP:=\\r\\nLIB_DEP:=\\r\\nLINKER_SCRIPT_DEP:=\\r\\n\\r\\n# Every subdirectory with source files must be described here\\r\\nSUBDIRS :=  \\\\r\\n../settings/ \\\\r\\n../tests/ \\\\r\\n../xio/ \\\\r\\n../xmega/\\r\\n\\r\\n\\r\\n# Add inputs and outputs from these tool invocations to the build variables \\r\\nC_SRCS +=  \\\\r\\n../canonical_machine.c \\\\r\\n../config.c \\\\r\\n../config_app.c \\\\r\\n../controller.c \\\\r\\n../cycle_homing.c \\\\r\\n../cycle_jogging.c \\\\r\\n../cycle_probing.c \\\\r\\n../encoder.c \\\\r\\n../gcode_parser.c \\\\r\\n../gpio.c \\\\r\\n../hardware.c \\\\r\\n../help.c \\\\r\\n../json_parser.c \\\\r\\n../kinematics.c \\\\r\\n../main.c \\\\r\\n../network.c \\\\r\\n../persistence.c \\\\r\\n../planner.c \\\\r\\n../plan_arc.c \\\\r\\n../plan_exec.c \\\\r\\n../plan_line.c \\\\r\\n../plan_zoid.c \\\\r\\n../pwm.c \\\\r\\n../report.c \\\\r\\n../spindle.c \\\\r\\n../stepper.c \\\\r\\n../switch.c \\\\r\\n../test.c \\\\r\\n../text_parser.c \\\\r\\n../util.c \\\\r\\n../xio.c \\\\r\\n../xio/xio_file.c \\\\r\\n../xio/xio_pgm.c \\\\r\\n../xio/xio_rs485.c \\\\r\\n../xio/xio_spi.c \\\\r\\n../xio/xio_usart.c \\\\r\\n../xio/xio_usb.c \\\\r\\n../xmega/xmega_eeprom.c \\\\r\\n../xmega/xmega_init.c \\\\r\\n../xmega/xmega_interrupts.c \\\\r\\n../xmega/xmega_rtc.c\\r\\n\\r\\n\\r\\nPREPROCESSING_SRCS += \\r\\n\\r\\n\\r\\nASM_SRCS += \\r\\n\\r\\n\\r\\nOBJS +=  \\\\r\\ncanonical_machine.o \\\\r\\nconfig.o \\\\r\\nconfig_app.o \\\\r\\ncontroller.o \\\\r\\ncycle_homing.o \\\\r\\ncycle_jogging.o \\\\r\\ncycle_probing.o \\\\r\\nencoder.o \\\\r\\ngcode_parser.o \\\\r\\ngpio.o \\\\r\\nhardware.o \\\\r\\nhelp.o \\\\r\\njson_parser.o \\\\r\\nkinematics.o \\\\r\\nmain.o \\\\r\\nnetwork.o \\\\r\\npersistence.o \\\\r\\nplanner.o \\\\r\\nplan_arc.o \\\\r\\nplan_exec.o \\\\r\\nplan_line.o \\\\r\\nplan_zoid.o \\\\r\\npwm.o \\\\r\\nreport.o \\\\r\\nspindle.o \\\\r\\nstepper.o \\\\r\\nswitch.o \\\\r\\ntest.o \\\\r\\ntext_parser.o \\\\r\\nutil.o \\\\r\\nxio.o \\\\r\\nxio/xio_file.o \\\\r\\nxio/xio_pgm.o \\\\r\\nxio/xio_rs485.o \\\\r\\nxio/xio_spi.o \\\\r\\nxio/xio_usart.o \\\\r\\nxio/xio_usb.o \\\\r\\nxmega/xmega_eeprom.o \\\\r\\nxmega/xmega_init.o \\\\r\\nxmega/xmega_interrupts.o \\\\r\\nxmega/xmega_rtc.o\\r\\n\\r\\nOBJS_AS_ARGS +=  \\\\r\\ncanonical_machine.o \\\\r\\nconfig.o \\\\r\\nconfig_app.o \\\\r\\ncontroller.o \\\\r\\ncycle_homing.o \\\\r\\ncycle_jogging.o \\\\r\\ncycle_probing.o \\\\r\\nencoder.o \\\\r\\ngcode_parser.o \\\\r\\ngpio.o \\\\r\\nhardware.o \\\\r\\nhelp.o \\\\r\\njson_parser.o \\\\r\\nkinematics.o \\\\r\\nmain.o \\\\r\\nnetwork.o \\\\r\\npersistence.o \\\\r\\nplanner.o \\\\r\\nplan_arc.o \\\\r\\nplan_exec.o \\\\r\\nplan_line.o \\\\r\\nplan_zoid.o \\\\r\\npwm.o \\\\r\\nreport.o \\\\r\\nspindle.o \\\\r\\nstepper.o \\\\r\\nswitch.o \\\\r\\ntest.o \\\\r\\ntext_parser.o \\\\r\\nutil.o \\\\r\\nxio.o \\\\r\\nxio/xio_file.o \\\\r\\nxio/xio_pgm.o \\\\r\\nxio/xio_rs485.o \\\\r\\nxio/xio_spi.o \\\\r\\nxio/xio_usart.o \\\\r\\nxio/xio_usb.o \\\\r\\nxmega/xmega_eeprom.o \\\\r\\nxmega/xmega_init.o \\\\r\\nxmega/xmega_interrupts.o \\\\r\\nxmega/xmega_rtc.o\\r\\n\\r\\nC_DEPS +=  \\\\r\\ncanonical_machine.d \\\\r\\nconfig.d \\\\r\\nconfig_app.d \\\\r\\ncontroller.d \\\\r\\ncycle_homing.d \\\\r\\ncycle_jogging.d \\\\r\\ncycle_probing.d \\\\r\\nencoder.d \\\\r\\ngcode_parser.d \\\\r\\ngpio.d \\\\r\\nhardware.d \\\\r\\nhelp.d \\\\r\\njson_parser.d \\\\r\\nkinematics.d \\\\r\\nmain.d \\\\r\\nnetwork.d \\\\r\\npersistence.d \\\\r\\nplanner.d \\\\r\\nplan_arc.d \\\\r\\nplan_exec.d \\\\r\\nplan_line.d \\\\r\\nplan_zoid.d \\\\r\\npwm.d \\\\r\\nreport.d \\\\r\\nspindle.d \\\\r\\nstepper.d \\\\r\\nswitch.d \\\\r\\ntest.d \\\\r\\ntext_parser.d \\\\r\\nutil.d \\\\r\\nxio.d \\\\r\\nxio/xio_file.d \\\\r\\nxio/xio_pgm.d \\\\r\\nxio/xio_rs485.d \\\\r\\nxio/xio_spi.d \\\\r\\nxio/xio_usart.d \\\\r\\nxio/xio_usb.d \\\\r\\nxmega/xmega_eeprom.d \\\\r\\nxmega/xmega_init.d \\\\r\\nxmega/xmega_interrupts.d \\\\r\\nxmega/xmega_rtc.d\\r\\n\\r\\nC_DEPS_AS_ARGS +=  \\\\r\\ncanonical_machine.d \\\\r\\nconfig.d \\\\r\\nconfig_app.d \\\\r\\ncontroller.d \\\\r\\ncycle_homing.d \\\\r\\ncycle_jogging.d \\\\r\\ncycle_probing.d \\\\r\\nencoder.d \\\\r\\ngcode_parser.d \\\\r\\ngpio.d \\\\r\\nhardware.d \\\\r\\nhelp.d \\\\r\\njson_parser.d \\\\r\\nkinematics.d \\\\r\\nmain.d \\\\r\\nnetwork.d \\\\r\\npersistence.d \\\\r\\nplanner.d \\\\r\\nplan_arc.d \\\\r\\nplan_exec.d \\\\r\\nplan_line.d \\\\r\\nplan_zoid.d \\\\r\\npwm.d \\\\r\\nreport.d \\\\r\\nspindle.d \\\\r\\nstepper.d \\\\r\\nswitch.d \\\\r\\ntest.d \\\\r\\ntext_parser.d \\\\r\\nutil.d \\\\r\\nxio.d \\\\r\\nxio/xio_file.d \\\\r\\nxio/xio_pgm.d \\\\r\\nxio/xio_rs485.d \\\\r\\nxio/xio_spi.d \\\\r\\nxio/xio_usart.d \\\\r\\nxio/xio_usb.d \\\\r\\nxmega/xmega_eeprom.d \\\\r\\nxmega/xmega_init.d \\\\r\\nxmega/xmega_interrupts.d \\\\r\\nxmega/xmega_rtc.d\\r\\n\\r\\nOUTPUT_FILE_PATH +=tinyg.elf\\r\\n\\r\\nOUTPUT_FILE_PATH_AS_ARGS +=tinyg.elf\\r\\n\\r\\nADDITIONAL_DEPENDENCIES:=\\r\\n\\r\\nOUTPUT_FILE_DEP:= ./makedep.mk\\r\\n\\r\\nLIB_DEP+= \\r\\n\\r\\nLINKER_SCRIPT_DEP+= \\r\\n\\r\\n\\r\\n# AVR32/GNU C Compiler\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n./%.o: .././%.c\\r\\n\\t@echo Building file: $<\\r\\n\\t@echo Invoking: AVR/GNU C Compiler : 4.8.1\\r\\n\\t$(QUOTE)C:\\P'\nline 365:25 token recognition error at: '\\A'\nline 365:31 token recognition error at: '\\A'\nline 365:47 token recognition error at: '\\A'\nline 365:56 token recognition error at: '\\N'\nline 365:63 token recognition error at: '\\3'\nline 365:72 token recognition error at: '\\a'\nline 365:91 token recognition error at: '\\b'\nline 365:95 token recognition error at: '\\a'\nline 372:11 token recognition error at: '\\P'\nline 372:25 token recognition error at: '\\A'\nline 372:31 token recognition error at: '\\A'\nline 372:47 token recognition error at: '\\A'\nline 372:56 token recognition error at: '\\N'\nline 372:63 token recognition error at: '\\3'\nline 372:72 token recognition error at: '\\a'\nline 372:91 token recognition error at: '\\b'\nline 372:95 token recognition error at: '\\a'\nline 379:11 token recognition error at: '\\P'\nline 379:25 token recognition error at: '\\A'\nline 379:31 token recognition error at: '\\A'\nline 379:47 token recognition error at: '\\A'\nline 379:56 token recognition error at: '\\N'\nline 379:63 token recognition error at: '\\3'\nline 379:72 token recognition error at: '\\a'\nline 379:91 token recognition error at: '\\b'\nline 379:95 token recognition error at: '\\a'\nline 408:11 token recognition error at: '\\P'\nline 408:25 token recognition error at: '\\A'\nline 408:31 token recognition error at: '\\A'\nline 408:47 token recognition error at: '\\A'\nline 408:56 token recognition error at: '\\N'\nline 408:63 token recognition error at: '\\3'\nline 408:72 token recognition error at: '\\a'\nline 408:91 token recognition error at: '\\b'\nline 408:95 token recognition error at: '\\a'\nline 410:1 token recognition error at: '\"C:\\P'\nline 410:18 token recognition error at: '\\A'\nline 410:24 token recognition error at: '\\A'\nline 410:40 token recognition error at: '\\A'\nline 410:49 token recognition error at: '\\N'\nline 410:56 token recognition error at: '\\3'\nline 410:65 token recognition error at: '\\a'\nline 410:84 token recognition error at: '\\b'\nline 410:88 token recognition error at: '\\a'\nline 411:4 token recognition error at: '\\P'\nline 411:18 token recognition error at: '\\A'\nline 411:24 token recognition error at: '\\A'\nline 411:40 token recognition error at: '\\A'\nline 411:49 token recognition error at: '\\N'\nline 411:56 token recognition error at: '\\3'\nline 411:65 token recognition error at: '\\a'\nline 411:84 token recognition error at: '\\b'\nline 411:88 token recognition error at: '\\a'\nline 412:4 token recognition error at: '\\P'\nline 412:18 token recognition error at: '\\A'\nline 412:24 token recognition error at: '\\A'\nline 412:40 token recognition error at: '\\A'\nline 412:49 token recognition error at: '\\N'\nline 412:56 token recognition error at: '\\3'\nline 412:65 token recognition error at: '\\a'\nline 412:84 token recognition error at: '\\b'\nline 412:88 token recognition error at: '\\a'\nline 413:4 token recognition error at: '\\P'\nline 413:18 token recognition error at: '\\A'\nline 413:24 token recognition error at: '\\A'\nline 413:40 token recognition error at: '\\A'\nline 413:49 token recognition error at: '\\N'\nline 413:56 token recognition error at: '\\3'\nline 413:65 token recognition error at: '\\a'\nline 413:84 token recognition error at: '\\b'\nline 413:88 token recognition error at: '\\a'\nline 414:4 token recognition error at: '\\P'\nline 414:18 token recognition error at: '\\A'\nline 414:24 token recognition error at: '\\A'\nline 414:40 token recognition error at: '\\A'\nline 414:49 token recognition error at: '\\N'\nline 414:56 token recognition error at: '\\3'\nline 414:65 token recognition error at: '\\a'\nline 414:84 token recognition error at: '\\b'\nline 414:88 token recognition error at: '\\a'\nline 426:112 token recognition error at: '\"\\n\\t\u0000'\n"
    },
    "firmware/tinyg/Release/Makefile" : {
      "ObjectId" : "4baaa45d7dab2a5d7b1ca849b67b998164dfe1ea",
      "LastModified" : "2015-05-31T19:54:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "################################################################################\r\n\n# Automatically-generated file. Do not edit!\r\n\n################################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# AVR32/GNU Preprocessing Assembler\r\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# AVR32/GNU Assembler\r\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add inputs and outputs from these tool invocations to the build variables \r\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# All Target\r\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5,
      "Errorlog" : "line 28:9 token recognition error at: '\"\\r\\nADDITIONAL_DEPENDENCIES:=\\r\\nOUTPUT_FILE_DEP:=\\r\\nLIB_DEP:=\\r\\n\\r\\n# Every subdirectory with source files must be described here\\r\\nSUBDIRS :=  \\\\r\\n../settings/ \\\\r\\n../tests/ \\\\r\\n../xio/ \\\\r\\n../xmega/\\r\\n\\r\\n\\r\\n# Add inputs and outputs from these tool invocations to the build variables \\r\\nC_SRCS +=  \\\\r\\n../canonical_machine.c \\\\r\\n../config.c \\\\r\\n../config_app.c \\\\r\\n../controller.c \\\\r\\n../cycle_homing.c \\\\r\\n../cycle_probing.c \\\\r\\n../gcode_parser.c \\\\r\\n../gpio.c \\\\r\\n../hardware.c \\\\r\\n../help.c \\\\r\\n../json_parser.c \\\\r\\n../kinematics.c \\\\r\\n../main.c \\\\r\\n../network.c \\\\r\\n../planner.c \\\\r\\n../plan_arc.c \\\\r\\n../plan_line.c \\\\r\\n../pwm.c \\\\r\\n../report.c \\\\r\\n../spindle.c \\\\r\\n../stepper.c \\\\r\\n../switch.c \\\\r\\n../test.c \\\\r\\n../text_parser.c \\\\r\\n../util.c \\\\r\\n../xio/xio.c \\\\r\\n../xio/xio_file.c \\\\r\\n../xio/xio_pgm.c \\\\r\\n../xio/xio_rs485.c \\\\r\\n../xio/xio_spi.c \\\\r\\n../xio/xio_usart.c \\\\r\\n../xio/xio_usb.c \\\\r\\n../xmega/xmega_eeprom.c \\\\r\\n../xmega/xmega_init.c \\\\r\\n../xmega/xmega_interrupts.c \\\\r\\n../xmega/xmega_rtc.c\\r\\n\\r\\n\\r\\nPREPROCESSING_SRCS += \\r\\n\\r\\n\\r\\nASM_SRCS += \\r\\n\\r\\n\\r\\nOBJS +=  \\\\r\\ncanonical_machine.o \\\\r\\nconfig.o \\\\r\\nconfig_app.o \\\\r\\ncontroller.o \\\\r\\ncycle_homing.o \\\\r\\ncycle_probing.o \\\\r\\ngcode_parser.o \\\\r\\ngpio.o \\\\r\\nhardware.o \\\\r\\nhelp.o \\\\r\\njson_parser.o \\\\r\\nkinematics.o \\\\r\\nmain.o \\\\r\\nnetwork.o \\\\r\\nplanner.o \\\\r\\nplan_arc.o \\\\r\\nplan_line.o \\\\r\\npwm.o \\\\r\\nreport.o \\\\r\\nspindle.o \\\\r\\nstepper.o \\\\r\\nswitch.o \\\\r\\ntest.o \\\\r\\ntext_parser.o \\\\r\\nutil.o \\\\r\\nxio/xio.o \\\\r\\nxio/xio_file.o \\\\r\\nxio/xio_pgm.o \\\\r\\nxio/xio_rs485.o \\\\r\\nxio/xio_spi.o \\\\r\\nxio/xio_usart.o \\\\r\\nxio/xio_usb.o \\\\r\\nxmega/xmega_eeprom.o \\\\r\\nxmega/xmega_init.o \\\\r\\nxmega/xmega_interrupts.o \\\\r\\nxmega/xmega_rtc.o\\r\\n\\r\\n\\r\\nOBJS_AS_ARGS +=  \\\\r\\ncanonical_machine.o \\\\r\\nconfig.o \\\\r\\nconfig_app.o \\\\r\\ncontroller.o \\\\r\\ncycle_homing.o \\\\r\\ncycle_probing.o \\\\r\\ngcode_parser.o \\\\r\\ngpio.o \\\\r\\nhardware.o \\\\r\\nhelp.o \\\\r\\njson_parser.o \\\\r\\nkinematics.o \\\\r\\nmain.o \\\\r\\nnetwork.o \\\\r\\nplanner.o \\\\r\\nplan_arc.o \\\\r\\nplan_line.o \\\\r\\npwm.o \\\\r\\nreport.o \\\\r\\nspindle.o \\\\r\\nstepper.o \\\\r\\nswitch.o \\\\r\\ntest.o \\\\r\\ntext_parser.o \\\\r\\nutil.o \\\\r\\nxio/xio.o \\\\r\\nxio/xio_file.o \\\\r\\nxio/xio_pgm.o \\\\r\\nxio/xio_rs485.o \\\\r\\nxio/xio_spi.o \\\\r\\nxio/xio_usart.o \\\\r\\nxio/xio_usb.o \\\\r\\nxmega/xmega_eeprom.o \\\\r\\nxmega/xmega_init.o \\\\r\\nxmega/xmega_interrupts.o \\\\r\\nxmega/xmega_rtc.o\\r\\n\\r\\n\\r\\nC_DEPS +=  \\\\r\\ncanonical_machine.d \\\\r\\nconfig.d \\\\r\\nconfig_app.d \\\\r\\ncontroller.d \\\\r\\ncycle_homing.d \\\\r\\ncycle_probing.d \\\\r\\ngcode_parser.d \\\\r\\ngpio.d \\\\r\\nhardware.d \\\\r\\nhelp.d \\\\r\\njson_parser.d \\\\r\\nkinematics.d \\\\r\\nmain.d \\\\r\\nnetwork.d \\\\r\\nplanner.d \\\\r\\nplan_arc.d \\\\r\\nplan_line.d \\\\r\\npwm.d \\\\r\\nreport.d \\\\r\\nspindle.d \\\\r\\nstepper.d \\\\r\\nswitch.d \\\\r\\ntest.d \\\\r\\ntext_parser.d \\\\r\\nutil.d \\\\r\\nxio/xio.d \\\\r\\nxio/xio_file.d \\\\r\\nxio/xio_pgm.d \\\\r\\nxio/xio_rs485.d \\\\r\\nxio/xio_spi.d \\\\r\\nxio/xio_usart.d \\\\r\\nxio/xio_usb.d \\\\r\\nxmega/xmega_eeprom.d \\\\r\\nxmega/xmega_init.d \\\\r\\nxmega/xmega_interrupts.d \\\\r\\nxmega/xmega_rtc.d\\r\\n\\r\\n\\r\\nC_DEPS_AS_ARGS +=  \\\\r\\ncanonical_machine.d \\\\r\\nconfig.d \\\\r\\nconfig_app.d \\\\r\\ncontroller.d \\\\r\\ncycle_homing.d \\\\r\\ncycle_probing.d \\\\r\\ngcode_parser.d \\\\r\\ngpio.d \\\\r\\nhardware.d \\\\r\\nhelp.d \\\\r\\njson_parser.d \\\\r\\nkinematics.d \\\\r\\nmain.d \\\\r\\nnetwork.d \\\\r\\nplanner.d \\\\r\\nplan_arc.d \\\\r\\nplan_line.d \\\\r\\npwm.d \\\\r\\nreport.d \\\\r\\nspindle.d \\\\r\\nstepper.d \\\\r\\nswitch.d \\\\r\\ntest.d \\\\r\\ntext_parser.d \\\\r\\nutil.d \\\\r\\nxio/xio.d \\\\r\\nxio/xio_file.d \\\\r\\nxio/xio_pgm.d \\\\r\\nxio/xio_rs485.d \\\\r\\nxio/xio_spi.d \\\\r\\nxio/xio_usart.d \\\\r\\nxio/xio_usb.d \\\\r\\nxmega/xmega_eeprom.d \\\\r\\nxmega/xmega_init.d \\\\r\\nxmega/xmega_interrupts.d \\\\r\\nxmega/xmega_rtc.d\\r\\n\\r\\n\\r\\nOUTPUT_FILE_PATH +=tinyg.elf\\r\\n\\r\\nOUTPUT_FILE_PATH_AS_ARGS +=tinyg.elf\\r\\n\\r\\nADDITIONAL_DEPENDENCIES:=\\r\\n\\r\\nOUTPUT_FILE_DEP:= ./makedep.mk\\r\\n\\r\\nLIB_DEP+= \\r\\n\\r\\n# AVR32/GNU C Compiler\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n./%.o: .././%.c\\r\\n\\t@echo Building file: $<\\r\\n\\t@echo Invoking: AVR/GNU C Compiler : \\r\\n\\t$(QUOTE)C:\\P'\nline 330:25 token recognition error at: '\\A'\nline 330:31 token recognition error at: '\\A'\nline 330:47 token recognition error at: '\\A'\nline 330:56 token recognition error at: '\\N'\nline 330:63 token recognition error at: '\\3'\nline 330:73 token recognition error at: '\\a'\nline 330:92 token recognition error at: '\\b'\nline 330:96 token recognition error at: '\\a'\nline 336:11 token recognition error at: '\\P'\nline 336:25 token recognition error at: '\\A'\nline 336:31 token recognition error at: '\\A'\nline 336:47 token recognition error at: '\\A'\nline 336:56 token recognition error at: '\\N'\nline 336:63 token recognition error at: '\\3'\nline 336:73 token recognition error at: '\\a'\nline 336:92 token recognition error at: '\\b'\nline 336:96 token recognition error at: '\\a'\nline 342:11 token recognition error at: '\\P'\nline 342:25 token recognition error at: '\\A'\nline 342:31 token recognition error at: '\\A'\nline 342:47 token recognition error at: '\\A'\nline 342:56 token recognition error at: '\\N'\nline 342:63 token recognition error at: '\\3'\nline 342:73 token recognition error at: '\\a'\nline 342:92 token recognition error at: '\\b'\nline 342:96 token recognition error at: '\\a'\nline 370:11 token recognition error at: '\\P'\nline 370:25 token recognition error at: '\\A'\nline 370:31 token recognition error at: '\\A'\nline 370:47 token recognition error at: '\\A'\nline 370:56 token recognition error at: '\\N'\nline 370:63 token recognition error at: '\\3'\nline 370:73 token recognition error at: '\\a'\nline 370:92 token recognition error at: '\\b'\nline 370:96 token recognition error at: '\\a'\nline 372:1 token recognition error at: '\"C:\\P'\nline 372:18 token recognition error at: '\\A'\nline 372:24 token recognition error at: '\\A'\nline 372:40 token recognition error at: '\\A'\nline 372:49 token recognition error at: '\\N'\nline 372:56 token recognition error at: '\\3'\nline 372:66 token recognition error at: '\\a'\nline 372:85 token recognition error at: '\\b'\nline 372:89 token recognition error at: '\\a'\nline 373:4 token recognition error at: '\\P'\nline 373:18 token recognition error at: '\\A'\nline 373:24 token recognition error at: '\\A'\nline 373:40 token recognition error at: '\\A'\nline 373:49 token recognition error at: '\\N'\nline 373:56 token recognition error at: '\\3'\nline 373:66 token recognition error at: '\\a'\nline 373:85 token recognition error at: '\\b'\nline 373:89 token recognition error at: '\\a'\nline 374:4 token recognition error at: '\\P'\nline 374:18 token recognition error at: '\\A'\nline 374:24 token recognition error at: '\\A'\nline 374:40 token recognition error at: '\\A'\nline 374:49 token recognition error at: '\\N'\nline 374:56 token recognition error at: '\\3'\nline 374:66 token recognition error at: '\\a'\nline 374:85 token recognition error at: '\\b'\nline 374:89 token recognition error at: '\\a'\nline 375:4 token recognition error at: '\\P'\nline 375:18 token recognition error at: '\\A'\nline 375:24 token recognition error at: '\\A'\nline 375:40 token recognition error at: '\\A'\nline 375:49 token recognition error at: '\\N'\nline 375:56 token recognition error at: '\\3'\nline 375:66 token recognition error at: '\\a'\nline 375:85 token recognition error at: '\\b'\nline 375:89 token recognition error at: '\\a'\nline 376:4 token recognition error at: '\\P'\nline 376:18 token recognition error at: '\\A'\nline 376:24 token recognition error at: '\\A'\nline 376:40 token recognition error at: '\\A'\nline 376:49 token recognition error at: '\\N'\nline 376:56 token recognition error at: '\\3'\nline 376:66 token recognition error at: '\\a'\nline 376:85 token recognition error at: '\\b'\nline 376:89 token recognition error at: '\\a'\nline 386:89 token recognition error at: '\"\\n\\t\u0000'\n"
    },
    "firmware/tinyg/default/Makefile" : {
      "ObjectId" : "8a577ca51176a5ea11a9d787be83159751cf01b9",
      "LastModified" : "2015-05-31T19:54:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\r\n\n# Makefile for the project tinyg\r\n\n###############################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## General Flags\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Options common to compile, link and assembly rules\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Compile options common for all C compilation units.\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Assembly specific flags\r\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Linker flags\r\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Intel Hex file production flags\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Libraries\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Objects that must be built in order to link\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Objects explicitly added by the user\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Build\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Compile\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##Link\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Clean target\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Other dependencies\r\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "support/removed/xmega_boot/Makefile" : {
      "ObjectId" : "c31136f1565e773194223439084fcb3957f10cd8",
      "LastModified" : "2015-05-31T19:54:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# Makefile for the project atxmega_boot\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## General Flags\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Options common to compile, link and assembly rules\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Compile options common for all C compilation units.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Assembly specific flags\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Linker flags\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Intel Hex file production flags\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Objects that must be built in order to link\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Objects explicitly added by the user\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Build\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Compile\n",
        "Line" : 45,
        "CharPositionInLine" : 65
      },
      "11" : {
        "Text" : "##Link\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Clean target\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Other dependencies\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "support/removed/xmega_boot/default/Makefile" : {
      "ObjectId" : "fd83fcd77019a86521a28b73af8e8b1a0f166415",
      "LastModified" : "2015-05-31T19:54:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\r\n\n# Makefile for the project xmega_boot\r\n\n###############################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## General Flags\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Options common to compile, link and assembly rules\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Compile options common for all C compilation units.\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Assembly specific flags\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Linker flags\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Intel Hex file production flags\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Objects that must be built in order to link\r\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Objects explicitly added by the user\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Build\r\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Compile\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##Link\r\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Clean target\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Other dependencies\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "xboot/xboot/Makefile" : {
      "ObjectId" : "c0e2f1f719a6e73053862d109a5711f4d89b2c13",
      "LastModified" : "2015-05-31T19:54:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Hey Emacs, this is a -*- makefile -*-\r\n\n#\r\n\n# General-purpose makefile for ATMEL XMEGA\r\n\n#\r\n\n# based on the\r\n\n# WinAVR Sample makefile written by Eric B. Weddington, Jörg Wunsch, et al.\r\n\n# Released to the Public Domain\r\n\n# Please read the make user manual!\r\n\n#\r\n\n# Additional material for this makefile was submitted by:\r\n\n#  Tim Henigan\r\n\n#  Peter Fleury\r\n\n#  Reiner Patommel\r\n\n#  Sander Pool\r\n\n#  Frederik Rouleau\r\n\n#  Markus Pfaff\r\n\n#\r\n\n# Updated for XMEGA by:\r\n\n#  Alex Forencich\r\n\n#\r\n\n# On command line:\r\n\n#\r\n\n# make all = Make software.\r\n\n#\r\n\n# make clean = Clean out built project files.\r\n\n#\r\n\n# make coff = Convert ELF to AVR COFF (for use with AVR Studio 3.x or VMLAB).\r\n\n#\r\n\n# make extcoff = Convert ELF to AVR Extended COFF (for use with AVR Studio\r\n\n#                4.07 or greater).\r\n\n#\r\n\n# make program = Download the hex file to the device, using avrdude.  Please\r\n\n#                customize the avrdude settings below first!\r\n\n#\r\n\n# make filename.s = Just compile filename.c into the assembler code only\r\n\n#\r\n\n# To rebuild project do \"make clean\" then \"make all\".\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# user defined values\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MCU name\r\n\n# XMEGA\r\n\n## MCU = atxmega16a4\r\n\n## MCU = atxmega32a4\r\n\n## MCU = atxmega64a1\r\n\n## MCU = atxmega64a3\r\n\n## MCU = atxmega64a4\r\n\n## MCU = atxmega128a1\r\n\n## MCU = atxmega128a3\r\n\n## MCU = atxmega128a4\r\n\n## MCU = atxmega192a1\r\n\n## MCU = atxmega192a3\r\n\n## MCU = atxmega256a1\r\n\n## MCU = atxmega256a3\r\n\n## MCU = atxmega256a3b\r\n\n## MCU = atxmega16d4\r\n\n## MCU = atxmega32d4\r\n\n## MCU = atxmega64d3\r\n\n## MCU = atxmega64d4\r\n\n## MCU = atxmega128d3\r\n\n## MCU = atxmega128d4\r\n\n## MCU = atxmega192d3\r\n\n## MCU = atxmega256d3\r\n\n## MCU = atxmega16a4u\r\n\n## MCU = atxmega32a4u\r\n\n## MCU = atxmega64a3u\r\n\n## MCU = atxmega64a4u\r\n\n## MCU = atxmega128a3u\r\n\n## MCU = atxmega128a4u\r\n\n## MCU = atxmega192a3u\r\n\n## MCU = atxmega256a3u\r\n\n## MCU = atxmega256a3bu\r\n\n## MCU = atxmega64b1\r\n\n## MCU = atxmega64b3\r\n\n## MCU = atxmega128b1\r\n\n## MCU = atxmega128b3\r\n\n# ATMEGA\r\n\n## MCU = atmega88\r\n\n## MCU = atmega88p\r\n\n## MCU = atmega88pa\r\n\n## MCU = atmega164\r\n\n## MCU = atmega168\r\n\n## MCU = atmega168p\r\n\n## MCU = atmega169\r\n\n## MCU = atmega169p\r\n\n## MCU = atmega169pa\r\n\n## MCU = atmega324\r\n\n## MCU = atmega324pa\r\n\n## MCU = atmega325\r\n\n## MCU = atmega3250\r\n\n## MCU = atmega328p\r\n\n## MCU = atmega329\r\n\n## MCU = atmega3290\r\n\n## MCU = atmega64\r\n\n## MCU = atmega640\r\n\n## MCU = atmega644\r\n\n## MCU = atmega644p\r\n\n## MCU = atmega644pa\r\n\n## MCU = atmega645\r\n\n## MCU = atmega6450\r\n\n## MCU = atmega649\r\n\n## MCU = atmega649p\r\n\n## MCU = atmega6490\r\n\n## MCU = atmega128\r\n\n## MCU = atmega1280\r\n\n## MCU = atmega1281\r\n\n## MCU = atmega1284p\r\n\n## MCU = atmega2560\r\n\n## MCU = atmega2561\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Is this a bootloader?\r\n\n#MAKE_BOOTLOADER=no\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Select boot size (ATmega only)\r\n\n# Note: if boot size is too small, XBoot may not fit.\r\n\n# Generally, it should be left on largest\r\n\n# See part datasheet for specific values\r\n\n# Largest\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Large\r\n\n#BOOTSZ=1\r\n\n# Medium\r\n\n#BOOTSZ=2\r\n\n# Small\r\n\n#BOOTSZ=3\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Only program boot section\r\n\n# (XMega only)\r\n\n# This will create a target-boot.hex file with the program relocated to\r\n\n# address 0 and then program the file directly to the boot section.  It\r\n\n# is faster than programming the entire application section with\r\n\n# nothing and has the added advantage of leaving the application\r\n\n# section in tact\r\n\n# Note: ignored if MAKE_BOOTLOADER is not set\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# CPU Frequency\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#F_CPU=32000000\r\n\n#F_CPU=16000000\r\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Configuration support\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Is this an xmega?\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Preprocessor defines\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Output format. (can be srec, ihex, binary)\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#FORMAT = srec\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Target file name (without extension).\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# SRC += ...\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# List Assembler source files here.\r\n\n# Make them always end in a capital .S.  Files ending in a lowercase .s\r\n\n# will not be considered source files but generated files (assembler\r\n\n# output from the compiler), and will be deleted upon \"make clean\"!\r\n\n# Even though the DOS/Win* filesystem matches both .s and .S the same,\r\n\n# it will preserve the spelling of the filenames, and gcc itself does\r\n\n# care about how the name is spelled on its command-line.\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Xmega specific SP driver\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ASRC += ...\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Optimization level, can be [0, 1, 2, 3, s].\r\n\n# 0 = turn off optimization. s = optimize for size.\r\n\n# (Note: 3 is not always the best optimization level. See avr-libc FAQ.)\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Debugging format.\r\n\n# Native formats for AVR-GCC's -g are stabs [default], or dwarf-2.\r\n\n# AVR (extended) COFF requires stabs, plus an avr-objcopy run.\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List any extra directories to look for include files here.\r\n\n#     Each directory must be seperated by a space.\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Compiler flag to set the C Standard level.\r\n\n# c89   - \"ANSI\" C\r\n\n# gnu89 - c89 plus GCC extensions\r\n\n# c99   - ISO C99 standard (not yet fully implemented)\r\n\n# gnu99 - c99 plus GCC extensions\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Place -D or -U options here\r\n\n#CDEFS = -DBOOTSIZE=$(BOOTSIZE)\r\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Place -I options here\r\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Compiler flags.\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Good idea for devices with large flash memory\r\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#COMMON_FLAGS += ...\r\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# C Specific flags\r\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#CFLAGS += ...\r\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# C++ Specific flags\r\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#CXXFLAGS += ...\r\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Assembler flags.\r\n\n#  -Wa,...:   tell GCC to pass this to the assembler.\r\n\n#  -ahlms:    create listing\r\n\n#  -gstabs:   have the assembler create line number information; note that\r\n\n#             for use in COFF files, additional information about filenames\r\n\n#             and function names needs to be present in the assembler source\r\n\n#             files -- see avr-libc docs [FIXME: not yet described there]\r\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#Additional libraries.\r\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Minimalistic printf version\r\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Floating point printf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Minimalistic scanf version\r\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Floating point + %[ scanf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# External memory options\r\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# used for variables (.data/.bss) and heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,-Tdata=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# only used for heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,--defsym=__heap_start=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Linker flags.\r\n\n#  -Wl,...:     tell GCC to pass this to linker.\r\n\n#    -Map:      create map file\r\n\n#    --cref:    add cross reference to  map file\r\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Programming support using avrdude. Settings and variables.\r\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Programming hardware: alf avr910 avrisp bascom bsd\r\n\n# dt006 pavr picoweb pony-stk200 sp12 stk200 stk500\r\n\n#\r\n\n# Type: avrdude -c ?\r\n\n# to get a full listing.\r\n\n#\r\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#AVRDUDE_PROGRAMMER = jtag2isp\r\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#AVRDUDE_PROGRAMMER = avr109\r\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Port\r\n\n# com1 = serial port. Use lpt1 to connect to parallel port.\r\n\n# Use usb for usb devices\r\n\n# For *nix, need device path (/dev/ttyUSBn, /dev/ttySn)\r\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#AVRDUDE_PORT = /dev/ttyUSB0\r\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# BAUD Rate\r\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Sections to write\r\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#AVRDUDE_WRITE_EEPROM = -U eeprom:w:$(TARGET).eep\r\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Uncomment the following if you want avrdude's erase cycle counter.\r\n\n# Note that this counter needs to be initialized first using -Yn,\r\n\n# see avrdude manual.\r\n\n#AVRDUDE_ERASE_COUNTER = -y\r\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Uncomment the following if you do /not/ wish a verification to be\r\n\n# performed after programming the device.\r\n\n#AVRDUDE_NO_VERIFY = -V\r\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Increase verbosity level.  Please use this when submitting bug\r\n\n# reports about avrdude. See <http://savannah.nongnu.org/projects/avrdude>\r\n\n# to submit bug reports.\r\n\n#AVRDUDE_VERBOSE = -v -v\r\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Erase behaviour\r\n\n# Normaly with an XMega, the programmer should automatically erase a \r\n\n# page before flashing. \r\n\n# It seems that at least the avrdragon_jtag (and probably other types) \r\n\n# don't do so(Feb 11)\r\n\n# In that case, erase the chip before flashing\r\n\n# Force chip erase\r\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Disable automatic chip erase\r\n\n#AVRDUDE_CHIP_ERASE = -D\r\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Fuses and Lock Bits\r\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# XMEGA\r\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# See XMega A series datasheet (Atmel doc8077) section 4.16\r\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Resest Configuration (for fuse byte 2)\r\n\n# If a custom configuration is needed, please\r\n\n# override farther down in the fuse byte 2 section\r\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Reset (Bootloader)\r\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Reset (Regular)\r\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Fuse byte 0: JTAG User ID\r\n\n# If a custom JTAG User ID is required, uncomment\r\n\n# and set it here\r\n\n#AVRDUDE_FUSES += -U fuse0:w:0x00:m\r\n",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Fuse byte 1: Watchdog\r\n\n# Set WDPER and WDWPER\r\n\n# See datasheet sections 4.16.2, 11.7.1, and 11.7.2\r\n\n# for more information\r\n\n#AVRDUDE_FUSES += -U fuse1:w:0x00:m\r\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Fuse byte 2: Reset configuration\r\n\n# Spike detector, reset vector location, and BOD\r\n\n# in power down configuration\r\n\n# See datasheet section 4.16.3 for more information\r\n\n# If a custom configuration is needed, please\r\n\n# override it here\r\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# There is no fuse byte 3.....\r\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Fuse byte 4: Start-up configuration\r\n\n# See datasheet section 4.16.4\r\n\n# Configures external reset disable, start-up time,\r\n\n# watchdog timer lock, and jtag enable\r\n\n#AVRDUDE_FUSES += -U fuse4:w:0xFE:m\r\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Fuse byte 5\r\n\n# See datasheet section 4.16.5\r\n\n# Configures BOD operation in active mode,\r\n\n# EEPROM preserved through chip erase, and\r\n\n# BOD detection leven\r\n\n#AVRDUDE_FUSES += -U fuse5:w:0xFF:m\r\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Lock byte\r\n\n# See datasheet section 4.16.6\r\n\n# Lock bits for boot loader, application,\r\n\n# and application table sections via internal\r\n\n# SPM commands and external programming interface\r\n\n#AVRDUDE_FUSES += -U lock:w:0xFF:m\r\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Write user sig row (256 bytes max)\r\n\n# Uncomment to initialize user sig row with custom data\r\n\n##AVRDUDE_USERSIG = -U usersig:w:0x01,0x02,0x03:m\r\n\n##AVRDUDE_USERSIG = -U usersig:w:filename\r\n\n#AVRDUDE_USERSIG = -U usersig:w:...:m\r\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# xmega\r\n",
        "Line" : 427,
        "CharPositionInLine" : 5
      },
      "72" : {
        "Text" : "# ATMEGA\r\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Fuses for ATmega devices\r\n",
        "Line" : 432,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Boot config (Bootloader)\r\n",
        "Line" : 490,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Boot config (Regular)\r\n",
        "Line" : 493,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "#AVRDUDE_FUSES += -U lfuse:w:0xFF:m\r\n\n#AVRDUDE_FUSES += -U hfuse:w:0xFF:m\r\n\n#AVRDUDE_FUSES += -U efuse:w:0xFF:m\r\n",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# xmega\r\n\n# override fuses\r\n",
        "Line" : 503,
        "CharPositionInLine" : 6
      },
      "78" : {
        "Text" : "# ---------------------------------------------------------------------------\r\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Processor definitions\r\n\n# Sizes in bytes, not works (datasheet generally in words)\r\n\n# xmega\r\n",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# atmega\r\n",
        "Line" : 552,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# BOOT_SECTION_START (=Start of Boot Loader section\r\n\n# in bytes - not words) as defined above.\r\n",
        "Line" : 668,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# ---------------------------------------------------------------------------\r\n",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Define directories, if needed.\r\n\n#DIRAVR = c:/winavr\r\n\n#DIRAVRBIN = $(DIRAVR)/bin\r\n\n#DIRAVRUTILS = $(DIRAVR)/utils/bin\r\n\n#DIRINC = .\r\n\n#DIRLIB = $(DIRAVR)/avr/lib\r\n",
        "Line" : 679,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Define programs and commands.\r\n\n#SHELL = \"$(DIRAVRUTILS)/sh\"\r\n\n#NM = \"$(DIRAVRBIN)/avr-nm\"\r\n\n#CC = \"$(DIRAVRBIN)/avr-gcc\"\r\n\n#CXX = \"$(DIRAVRBIN)/avr-g++\"\r\n\n#OBJCOPY = \"$(DIRAVRBIN)/avr-objcopy\"\r\n\n#OBJDUMP= \"$(DIRAVRBIN)/avr-objdump\"\r\n\n#SIZE = \"$(DIRAVRBIN)/avr-size\"\r\n\n#AVRDUDE = \"$(DIRAVRBIN)/avrdude.sh\"\r\n\n#REMOVE = rm -f\r\n\n#COPY = cp\r\n",
        "Line" : 687,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Define programs and commands.\r\n",
        "Line" : 699,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Define Messages\r\n\n# English\r\n",
        "Line" : 713,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Configuration support\r\n",
        "Line" : 733,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# Define all object files.\r\n",
        "Line" : 740,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# Define all listing files.\r\n",
        "Line" : 743,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# Compiler flags to generate dependency files.\r\n\n### GENDEPFLAGS = -Wp,-M,-MP,-MT,$(*F).o,-MF,.dep/$(@F).d\r\n",
        "Line" : 747,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# Combine all necessary flags and optional flags.\r\n\n# Add target processor to flags.\r\n",
        "Line" : 751,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# Default target.\r\n",
        "Line" : 761,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# Configuration support\r\n",
        "Line" : 773,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# Eye candy.\r\n\n# AVR Studio 3.x does not check make's exit code but relies on\r\n\n# the following magic strings to be generated by the compile job.\r\n",
        "Line" : 780,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# Display size of file.\r\n",
        "Line" : 795,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# Display compiler version information.\r\n",
        "Line" : 806,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# Program the device.\r\n",
        "Line" : 812,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# Convert ELF to COFF for use in debugging / simulating in AVR Studio or VMLAB.\r\n",
        "Line" : 819,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# Create final output files (.hex, .eep) from ELF output file.\r\n",
        "Line" : 840,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# Create extended listing file from ELF output file.\r\n",
        "Line" : 857,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# Create a symbol table from ELF output file.\r\n",
        "Line" : 863,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# Link: create ELF output file from object files.\r\n",
        "Line" : 871,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# Compile: create object files from C source files.\r\n",
        "Line" : 880,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# Compile: create object files from C++ source files.\r\n",
        "Line" : 887,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# Compile: create assembler files from C source files.\r\n",
        "Line" : 894,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# Compile: create assembler files from C++ source files.\r\n",
        "Line" : 899,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "# Assemble: create object files from assembler source files.\r\n",
        "Line" : 904,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "# Target: clean project.\r\n",
        "Line" : 912,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "# Include the dependency files.\r\n",
        "Line" : 938,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "# Listing of phony targets.\r\n",
        "Line" : 942,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 111
    },
    "xboot/xboot/default/Makefile" : {
      "ObjectId" : "525b3d2e697053ba8a368d2daa2aeace059155a2",
      "LastModified" : "2015-05-31T19:54:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\r\n\n# Makefile for the project xboot\r\n\n###############################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## General Flags\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Options common to compile, link and assembly rules\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Compile options common for all C compilation units.\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Assembly specific flags\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Linker flags\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Intel Hex file production flags\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Objects that must be built in order to link\r\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Objects explicitly added by the user\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Build\r\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Compile\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##Link\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Clean target\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Other dependencies\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 7
  },
  "ElapsedTime" : 7925
}