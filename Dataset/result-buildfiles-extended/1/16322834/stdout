{
  "Repository" : "16322834",
  "Revision" : "HEAD",
  "ObjectId" : "7bba198ae2fd42f6092de74a64b9d544dc10e4ff",
  "CommitTime" : "2019-04-03T22:07:05Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "96d203ffafb9acdd34ff5783b985d2c215c1dbb2",
      "LastModified" : "2019-02-19T09:10:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Workaround for CMake issue 8345 / 9220, see http://trac.navit-project.org/ticket/1041\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# binary name\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# install path\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# LIB_DIR\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# check 64 bit\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "### Detect environment\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#find_library(SDL2MAIN SDL2)\n\n#find_library(SDL2IMAGE SDL2_image)\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#find_package(SDL_ttf)\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Qt detection\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Unfortunately, CMake seems to ignore the \"OPTIONAL_COMPONENTS\" flag,\n\n# and actually requires all components to be installed. Maybe this can\n\n# be fixed later...\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#pkg-config based detection\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Accept even old versions of libgps, because N810 uses an old version (see #1179).\n",
        "Line" : 199,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# libgpsd<V3.1 is buggy if LC_ALL is set.\n",
        "Line" : 202,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "#Simple checks\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "### Configure build\n\n#Required libraries, supplied with navit\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Include gtk.h with \"SYSTEM\" to avoid GCC compiler warning for gtkitemfactory.h.\n",
        "Line" : 371,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#Independent modules\n",
        "Line" : 478,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#set(map_shapefile_LIBRARY_DIRS \"${CMAKE_BINARY_DIR}/navit/support/shapefile\")\n",
        "Line" : 492,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#Modules without test yet\n",
        "Line" : 498,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# other features\n",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# additional parameter is passed to the stylesheet processor as transformation parameter\n",
        "Line" : 563,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "### Platform specific settings\n",
        "Line" : 581,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# vehicle_file is broken for windows. use vehicle_wince instead\n\n# whicle_wince isn't buildable on non-CE windows ssytems\n",
        "Line" : 594,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# plugins currently not supported on windows\n",
        "Line" : 597,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# Image stuff\n",
        "Line" : 603,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "#GTK requires special compile flags\n",
        "Line" : 617,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# mingw32ce since gcc 4.7.0 needs HAVE_PRAGMA_PACK as __attribute__((packed)) is broken, see gcc bug 52991\n",
        "Line" : 653,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "#speech/espeak does use windows threads, and therefore needs only parts of\n\n#espeak lib. INTERNAL_ESPEAK_COMPLETE controls this.\n",
        "Line" : 659,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "#   set_with_reason(plugin/pedestrian \"Android detected\" TRUE)\n",
        "Line" : 729,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# Image conversion\n",
        "Line" : 742,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Plugins\n",
        "Line" : 782,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Compile with -Wall -Wextra. We need all the help we can get from the compiler :-).\n\n# Disabled warnings:\n\n# -Wno-missing-field-initializers: Used a lot, does not seem problematic.\n\n# -Wno-unused-parameter: Unfortunately occurs frequently because of\n\n#                        functions implementing the interface of a plugin.\n\n# -Wno-sign-compare: We currently just use int almost everywhere.\n\n#                    Unclear if it's really worth correcting.\n",
        "Line" : 804,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# flags not available in old GCC versions, or not for both C and C++\n",
        "Line" : 815,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# split path to type and name\n",
        "Line" : 835,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 34
    },
    "Toolchain/arm-apple-darwin9.cmake" : {
      "ObjectId" : "90a0ab821295d2c2abf5e99aecd978d5b9b098b5",
      "LastModified" : "2011-08-27T10:42:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# specify the cross compiler\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Toolchain/arm-eabi.cmake" : {
      "ObjectId" : "5aec2769204779946ecee4e569dbd17fc9d2319f",
      "LastModified" : "2017-09-05T17:07:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Toolchain/arm-linux.cmake" : {
      "ObjectId" : "c85a8a6dc2aa428fcefe152347540e0147d8c19a",
      "LastModified" : "2016-10-26T17:51:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# specify the cross compiler\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Toolchain/arm-mingw32ce.cmake" : {
      "ObjectId" : "4ccdd22c4f11368ce918c7bfbadb8e73764c8bd6",
      "LastModified" : "2016-10-26T17:51:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# specify the cross compiler\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Toolchain/i386-mingw32ce.cmake" : {
      "ObjectId" : "a1cc562f6e9ea2b49481e77459afb7596322d520",
      "LastModified" : "2016-10-26T17:51:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# specify the cross compiler\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Toolchain/i686-android.cmake" : {
      "ObjectId" : "4f5630644e51a494db942f0922be8d76ffded622",
      "LastModified" : "2017-09-05T17:07:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Toolchain/mingw32.cmake" : {
      "ObjectId" : "f16eb51ad510c61cc11e34a60cf03db4e1545a99",
      "LastModified" : "2018-10-12T21:38:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Toolchain/xcode-iphone-sim.cmake" : {
      "ObjectId" : "7e80940c8eb1472914913c3f7960319d8378ad2c",
      "LastModified" : "2016-10-26T17:51:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Toolchain/xcode-iphone.cmake" : {
      "ObjectId" : "06aa1d4cac857855f71e01fd6c26f21866ce152b",
      "LastModified" : "2016-10-26T17:51:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindDBus.cmake" : {
      "ObjectId" : "b6bbdb53d6e06427727a361bc855249b57c05050",
      "LastModified" : "2016-10-26T17:51:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   PATH_SUFFIXES dbus\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   PATH_SUFFIXES dbus\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindDBusGLib.cmake" : {
      "ObjectId" : "57bbd022a0472589154c633a49bcb371a0e1d7a9",
      "LastModified" : "2018-10-12T21:38:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   PATH_SUFFIXES dbus\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindGTK2.cmake" : {
      "ObjectId" : "d538ca3e8daf87155136e9ba0ba1a8b307d2de40",
      "LastModified" : "2016-10-26T17:51:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GTK2\n\n# Once done this will define\n\n#\n\n#  GTK2_FOUND - System has Boost\n\n#  GTK2_INCLUDE_DIRS - GTK2 include directory\n\n#  GTK2_LIBRARIES - Link these to use GTK2\n\n#  GTK2_LIBRARY_DIRS - The path to where the GTK2 library files are.\n\n#  GTK2_DEFINITIONS - Compiler switches required for using GTK2\n\n#\n\n#  Copyright (c) 2007 Andreas Schneider <mail@cynapses.org>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set GTK2_DEBUG to enable debug output.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Some Linux distributions (e.g. Red Hat) have glibconfig.h\n\n# and glib.h in different directories, so we need to look\n\n# for both.\n\n#  - Atanas Georgiev <atanas@cs.columbia.edu>\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# set GTK2 libraries\n",
        "Line" : 406,
        "CharPositionInLine" : 22
      },
      "6" : {
        "Text" : "# check for gtkgl support\n",
        "Line" : 419,
        "CharPositionInLine" : 22
      },
      "7" : {
        "Text" : "#                        set(GTK2_INCLUDE_DIRS\n\n#                          ${GTK2_INCLUDE_DIRS}\n\n#                          ${GTK2_GTKGL_INCLUDE_DIR}\n\n#                        )\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#                        set(GTK2_LIBRARIES\n\n#                          ${GTK2_LIBRARIES}\n\n#                          ${GTK2_GTKGL_LIBRARY}\n\n#                        )\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# show the GTK2_INCLUDE_DIRS and GTK2_LIBRARIES variables only in the advanced view\n",
        "Line" : 466,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "cmake/FindGlib.cmake" : {
      "ObjectId" : "43414ff5428b5ff35bf4786bcb087a6b2873a2da",
      "LastModified" : "2016-10-26T17:51:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Glib-2.0 (with gobject)\n\n# Once done, this will define\n\n#\n\n#  Glib_FOUND - system has Glib\n\n#  Glib_INCLUDE_DIRS - the Glib include directories\n\n#  Glib_LIBRARIES - link these to use Glib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Main include dir\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Glib-related libraries also use a separate config header, which is in lib dir\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindGmodule.cmake" : {
      "ObjectId" : "2d5ddd0bb98c50aa15899002616f028acae18ef8",
      "LastModified" : "2016-10-26T17:51:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Glib-2.0 (with gobject)\n\n# Once done, this will define\n\n#\n\n#  Glib_FOUND - system has Glib\n\n#  Glib_INCLUDE_DIRS - the Glib include directories\n\n#  Glib_LIBRARIES - link these to use Glib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Main include dir\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Finally the modulerary itself\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindProtobuf-c.cmake" : {
      "ObjectId" : "170c1a03d09a55b3cd8a1c0496d789be5d7928d7",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate and configure the Google Protocol Buffers library.\n\n# Defines the following variables:\n\n#\n\n#   PROTOBUF_C_FOUND - Found the Google Protocol Buffers library\n\n#   PROTOBUF_C_INCLUDE_DIRS - Include directories for Google Protocol Buffers\n\n#   PROTOBUF_C_LIBRARIES - The protobuf library\n\n#\n\n# The following cache variables are also defined:\n\n#   PROTOBUF_C_LIBRARY - The protobuf library\n\n#   PROTOBUF_C_PROTOC_LIBRARY   - The protoc library\n\n#   PROTOBUF_C_INCLUDE_DIR - The include directory for protocol buffers\n\n#   PROTOBUF_C_PROTOC_EXECUTABLE - The protoc compiler\n\n#\n\n#  ====================================================================\n\n#  Example:\n\n#\n\n#   find_package(Protobuf-c REQUIRED)\n\n#   include_directories(${PROTOBUF_C_INCLUDE_DIRS})\n\n#\n\n#   include_directories(${CMAKE_CURRENT_BINARY_DIR})\n\n#   PROTOBUF_C_GENERATE_C(PROTO_SRCS PROTO_HDRS foo.proto)\n\n#   add_executable(bar bar.c ${PROTO_SRCS} ${PROTO_HDRS})\n\n#   target_link_libraries(bar ${PROTOBUF_C_LIBRARY})\n\n#\n\n# NOTE: You may need to link against pthreads, depending\n\n# on the platform.\n\n#  ====================================================================\n\n#\n\n# PROTOBUF_C_GENERATE_C (public function)\n\n#   SRCS = Variable to define with autogenerated\n\n#          source files\n\n#   HDRS = Variable to define with autogenerated\n\n#          header files\n\n#   ARGN = proto files\n\n#\n\n#  ====================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2009 Philip Lowman <philip@yhbt.com>\n\n# Copyright 2008 Esben Mose Hansen, Ange Optimization ApS\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Google's provided vcproj files generate libraries with a \"lib\"\n\n# prefix on Windows\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Restore original find library prefixes\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindXGettextGlade.cmake" : {
      "ObjectId" : "3f541ab710f2bb65de1684160b702bb0b956a855",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Findespeak.cmake" : {
      "ObjectId" : "6d390a9a8fee51ac0f91b37d2e4a225cea24188d",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find espeak (with libespeak)\n\n# Once done, this will define\n\n#\n\n#  espeak_FOUND - system has Glib\n\n#  espeak_INCLUDE_DIRS - the Glib include directories\n\n#  espeak_LIBRARIES - link these to use Glib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# espeak-related libraries\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/LibFindMacros.cmake" : {
      "ObjectId" : "69975c51be3f9c5e0ff372a4424f8de3b580ee88",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Works the same as find_package, but forwards the \"REQUIRED\" and \"QUIET\" arguments\n\n# used for the current package. For this to work, the first parameter must be the\n\n# prefix of the current package, then the prefix of the new package etc, which are\n\n# passed to find_package.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake developers made the UsePkgConfig system deprecated in the same release (2.6)\n\n# where they added pkg_check_modules. Consequently I need to support both in my scripts\n\n# to avoid those deprecated warnings. Here's a helper that does just that.\n\n# Works identically to pkg_check_modules, except that no checks are needed prior to use.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Skip processing if already processed during this run\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Start with the assumption that the library was found\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Process all includes and set _FOUND to false if any are missing\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Process all libraries and set _FOUND to false if any are missing\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Print message and/or exit on fatal error\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/build.xml" : {
      "ObjectId" : "5a4b4796550303d56b1fde40c967284c2a4a9d0c",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "cmake/copy_files.cmake" : {
      "ObjectId" : "03ad8d14fed19b8f4fdbca7eaa2cd162a1b9f111",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/navit_download.cmake" : {
      "ObjectId" : "bcc47b3e131a82ddb8cae2305768ba371202cd35",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/navit_macros.cmake" : {
      "ObjectId" : "88f2dc3cf28583ded8703db3b31964ab5a76df89",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# variable not in cache (first run)\n\n# variable in cache -> different from autodetected value?\n",
        "Line" : 2,
        "CharPositionInLine" : 56
      },
      "1" : {
        "Text" : "# poor man's boolean equal\n",
        "Line" : 4,
        "CharPositionInLine" : 64
      },
      "2" : {
        "Text" : "# plugins are always linked static\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# module plugins are always linked static\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# workaround to be compatible with old paths\n",
        "Line" : 69,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# C++ compiler is optional\n",
        "Line" : 101,
        "CharPositionInLine" : 33
      },
      "CommentCount" : 6
    },
    "cmake/navit_po_version.cmake" : {
      "ObjectId" : "ff5e7d8e4f02b254541ae0c6dd7718e18c38658e",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/navit_writemapxml.cmake" : {
      "ObjectId" : "7ca58d26833aadea9b0a1d4890ca2eddc6ae4c05",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/navit_xml_parser.cmake" : {
      "ObjectId" : "9edbcd2b0ad636ee33333bce6a5aee7cf9721103",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/navit_xml_parser_glade.cmake" : {
      "ObjectId" : "350d8e079565ce13035cc16203b76de00568304f",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/recolor.cmake" : {
      "ObjectId" : "fe99244ec8fd368522078415451f1e6ec88e4b58",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/replace.cmake" : {
      "ObjectId" : "2d8101b4695eda37f6ca484f6190cb65955fc8ce",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/strings_xml_parser.cmake" : {
      "ObjectId" : "747af1c5826ed7c0cb2e1bec11aac80101655c56",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/version.cmake" : {
      "ObjectId" : "0dd520a4590b61718d8b8cc781db067e966a3053",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# output as unix timestamp\n",
        "Line" : 8,
        "CharPositionInLine" : 51
      },
      "1" : {
        "Text" : "# To match length of android versionCode\n",
        "Line" : 33,
        "CharPositionInLine" : 37
      },
      "2" : {
        "Text" : "# output as unix timestamp\n",
        "Line" : 42,
        "CharPositionInLine" : 66
      },
      "CommentCount" : 3
    },
    "config.h.cmake" : {
      "ObjectId" : "c759e69c104768e9244715263a839106449af5b3",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* Versions */",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpack.cmake" : {
      "ObjectId" : "2bf38e6192ed149637496b3194f9770f36e07088",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "man/CMakeLists.txt" : {
      "ObjectId" : "5c0b6c90a19dfa0d19c88f1576e74ecb309d6734",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/CMakeLists.txt" : {
      "ObjectId" : "ca19ce41d390a7e5ce9bcf5e1b886bba698cb507",
      "LastModified" : "2019-02-19T09:10:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# navit core\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add module paths\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# additional parameter are passed to the stylesheet processor as parameter\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create a unique temporary name based on the PATH and filename of the target xml file\n",
        "Line" : 129,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Create this unique temporary directory inside ${CMAKE_CURRENT_BINARY_DIR}. This is where we will store our intermediate xml file (called ${SRC_XML}.temp after each xslt pass\n",
        "Line" : 133,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Also copy the dtd file in the same directory as the xml file (required by the xslt processor)\n",
        "Line" : 137,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# We will run this loop below for each xslt file provided in the XSLTS variable\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Move the final resulting xml file to the target filename and directory (provided in arguments)\n",
        "Line" : 153,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Depend on all XSLT files, because the main XSLT file may pull in other files.\n\n# Ideally we'd parse the main XSLT file for includes, but that is tricky to do reliably.\n\n# Note that this list of files is only updated when (re)running CMake, so if files are\n\n# added/deleted, CMake must be re-run manually.\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "#message(FATAL_ERROR ${CMAKE_CURRENT_BINARY_DIR}/${DEST_XML})\n",
        "Line" : 163,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Give instructions on how to build all navit_*.xml navit_layout_*.xml files, obtained applying relevant xslt tranformation on the source navit_shipped_*.xml files\n\n# The following XMLCFG_ALL_FILE_PREFIXES variable below lists all xml config files, semicolon is the delimiter\n\n# For example, it contains layout_navit_car, that will then be used to guess the source filename navit_layout_car_shipped.xml, installed as navit_layout_car.xml (or on android DPI-related files like navit_layout_car_xxxhdpi.xml)\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# On android, additional xlst transformations are applied to scale the OSD, icons etc... and the size is selected depending on the definition of the screen of the device (xxxhdpi, xxhdpi, ... ldpi)\n\n# Files for all screen definitions are shipped inside the android package (suffixed with _xxxhdpi, _xxhdpi etc.), and it is only at runtime that the correct navit_*.xml (corresponding to the current device's resolution) is selected\n",
        "Line" : 177,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Used to build the list of generated *xml filenames (only file basename, directory part excluded)\n",
        "Line" : 186,
        "CharPositionInLine" : 28
      },
      "13" : {
        "Text" : "# Used to build the list of generated *xml filenames (only file basename, directory part excluded)\n",
        "Line" : 206,
        "CharPositionInLine" : 28
      },
      "14" : {
        "Text" : "# A list of full path to installed xml files\n",
        "Line" : 207,
        "CharPositionInLine" : 36
      },
      "CommentCount" : 15
    },
    "navit/android/AndroidManifest.xml.cmake" : {
      "ObjectId" : "811a895d201c4731b1aec6b80b6de757c121d4f4",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/android/CMakeLists.txt" : {
      "ObjectId" : "91a4b29e78de342a97a5312958d2c6c35120b39a",
      "LastModified" : "2019-02-19T09:10:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate Android string resource files from gettext .po.in files.\n\n# Note: Android language resources should have two letter ISO 639-1 code, and, optionally, iso-3166-1-alpha-2 region code,\n\n# so we skip all translation files which do not conform these requirements.\n",
        "Line" : 9,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "navit/autoload/osso/CMakeLists.txt" : {
      "ObjectId" : "2a6f9b6315c909b4408be83ba8cffd1635ca6e87",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/binding/dbus/CMakeLists.txt" : {
      "ObjectId" : "b6378da1422d0720e613a0f7accd3fbd92786ca3",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/binding/python/CMakeLists.txt" : {
      "ObjectId" : "b0d5dfc3c48c935883d31f22ee6c602d5bf79a19",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/binding/win32/CMakeLists.txt" : {
      "ObjectId" : "37b675873e3951fdd1a1d66ed3e51c1ec0478b6d",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/fib-1.1/CMakeLists.txt" : {
      "ObjectId" : "1c86263c47441046954d169ce328602ffe996ded",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/font/freetype/CMakeLists.txt" : {
      "ObjectId" : "c8c945e680069867b98d71ee0e658a5ff731437a",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/fonts/CMakeLists.txt" : {
      "ObjectId" : "69fb716f3c7f355ab4d715caba5d053d4a4eb5d0",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#${NAVIT_FONTS}\"\n",
        "Line" : 3,
        "CharPositionInLine" : 49
      },
      "CommentCount" : 1
    },
    "navit/graphics/CMakeLists.txt" : {
      "ObjectId" : "9e77d361d5b95b880b3caa8325933167505b05d8",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"Hello\" which includes the source file \"hello.cxx\".\n\n# The extension is already found. Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "navit/graphics/android/CMakeLists.txt" : {
      "ObjectId" : "87aa37f20fed837b3aa260411744c0a6b9563b89",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/graphics/cocoa/CMakeLists.txt" : {
      "ObjectId" : "6e7d21e4a7ac108e2541cd5ec38c24eb54bfd3ed",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/graphics/egl/CMakeLists.txt" : {
      "ObjectId" : "a0e4e27dd30d49cd745676b182533a3d4a470ac1",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/graphics/gd/CMakeLists.txt" : {
      "ObjectId" : "cf411b9ae24b8089190939fa5fb6434a7fa9ad7c",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/graphics/gtk_drawing_area/CMakeLists.txt" : {
      "ObjectId" : "b5b55f4f66b4aeba18a19503be30d4019b1899c8",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/graphics/null/CMakeLists.txt" : {
      "ObjectId" : "f9cd65ecf3a07d74283d8339d50dc1da4dfd705d",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/graphics/opengl/CMakeLists.txt" : {
      "ObjectId" : "382be14c75a9591f335368f689623df669da2f94",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/graphics/qt5/CMakeLists.txt" : {
      "ObjectId" : "0ba6dbc62a3146e16a26ced44394044129772278",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find includes in corresponding build directories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Instruct CMake to run moc automatically when needed.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Instruct CMake to build QRC if needed\n\n#set(CMAKE_AUTORCC ON) -> unfortunate cmake used in CI doesnt have this\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# collect additional source files in this variable\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# initialize QML and QWIDGET usage to not use\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# check if we have FREETYPE\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# check if we have QML\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#check if we have QWIDGET\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# pass QML and QWIDGET preference to source\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "navit/graphics/qt_qpainter/CMakeLists.txt" : {
      "ObjectId" : "fa02132a09c86330675cddd2fbfff647abdd5fed",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/graphics/sdl/CMakeLists.txt" : {
      "ObjectId" : "c367a1762eb0dcf043a93c52a040cf965aea8b54",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/graphics/win32/CMakeLists.txt" : {
      "ObjectId" : "68013dbd52695aa0f73ced27eb723c0e4bce1b4a",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/gui/gtk/CMakeLists.txt" : {
      "ObjectId" : "1a1ec2a7a80b51909142b4f0b3c213c51371b685",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/gui/internal/CMakeLists.txt" : {
      "ObjectId" : "27011bab377d8552ffeb1cb6cd5a2d2eebbb0815",
      "LastModified" : "2019-02-19T09:10:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/gui/qml/CMakeLists.txt" : {
      "ObjectId" : "4f2f4a8ced853b992fc73584ef50dc5945f54324",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/gui/qt5_qml/CMakeLists.txt" : {
      "ObjectId" : "770c9a2f069735033470e80fb0db7b8ef6a01ac1",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find includes in corresponding build directories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Instruct CMake to run moc automatically when needed.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "navit/gui/qt5_qml/editor/editor.pro" : {
      "ObjectId" : "d0d4cd297921500cf2a64cbd2e5ab04219938115",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Additional import path used to resolve QML modules in Qt Creator's code model\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Additional import path used to resolve QML modules just for Qt Quick Designer\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The following define makes your compiler emit warnings if you use\n\n# any feature of Qt which as been marked deprecated (the exact warnings\n\n# depend on your compiler). Please consult the documentation of the\n\n# deprecated API in order to know how to port your code away from it.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You can also make your code fail to compile if you use deprecated APIs.\n\n# In order to do so, uncomment the following line.\n\n# You can also select to disable deprecated APIs only up to a certain version of Qt.\n\n#DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0x060000    # disables all the APIs deprecated before Qt 6.0.0\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default rules for deployment.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "navit/gui/win32/CMakeLists.txt" : {
      "ObjectId" : "2c5dd092351c80cdb1c92694c004dc52d26e46b3",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/icons/CMakeLists.txt" : {
      "ObjectId" : "9817aa25e99fec693ed1acbe6ee4db242f28e718",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#patch binary name in desktop file\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#install(FILES  bench.xpm DESTINATION )\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "navit/map/binfile/CMakeLists.txt" : {
      "ObjectId" : "62ef1326b695567cfb7dbbafe1de5af92cda5786",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/map/csv/CMakeLists.txt" : {
      "ObjectId" : "9135d1a885a9317ea915658bf922456dd3dc1baf",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/map/filter/CMakeLists.txt" : {
      "ObjectId" : "7ea4221a59090db5f32060466172b2121f661930",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/map/garmin/CMakeLists.txt" : {
      "ObjectId" : "b60128a9cdc3ae5701f78fc6fb2664e90e9e0ee6",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add the command to generate the source code\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "navit/map/mg/CMakeLists.txt" : {
      "ObjectId" : "5a2dd387cf7b7ad0e394c6eafd7ad7f812846eaa",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/map/shapefile/CMakeLists.txt" : {
      "ObjectId" : "906537a730ad41eb315e33396f8e8e0304e875dc",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/map/textfile/CMakeLists.txt" : {
      "ObjectId" : "00ef8211cb0bfb2888cb39af07c6643a54d188a6",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/maps/CMakeLists.txt" : {
      "ObjectId" : "ee9babdf9b22749ec5234dc34ec8095283d8384a",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/maptool/CMakeLists.txt" : {
      "ObjectId" : "624ea907b09a22ccad5fd4f344992c4b91a770d0",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#PROTOBUF_C_GENERATE_C(PROTO_SRCS PROTO_HDRS zfs.proto)\n",
        "Line" : 6,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "navit/osd/core/CMakeLists.txt" : {
      "ObjectId" : "84231464b3c5a96dd01a79cc9e38b3580f962e4a",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/plugin/j1850/CMakeLists.txt" : {
      "ObjectId" : "0a9e4f01144d742d051f2c45feb4400d652a7c45",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/plugin/pedestrian/CMakeLists.txt" : {
      "ObjectId" : "8205dbb64b2e8a7515973f8ad0e2b95dea60f2e7",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/speech/android/CMakeLists.txt" : {
      "ObjectId" : "73c426a3e3f37e9b7d0a20fcd85fcda8374a923b",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/speech/cmdline/CMakeLists.txt" : {
      "ObjectId" : "f8c00ad4b8384633a436ffd6cb33b210502af7f2",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/speech/dbus/CMakeLists.txt" : {
      "ObjectId" : "c2e32eb8c0fa30b68ee7787862f02b2c0997b42d",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/speech/espeak/CMakeLists.txt" : {
      "ObjectId" : "f08e35090352c0d0296e623fc8d32c19acbc8ec9",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/speech/iphone/CMakeLists.txt" : {
      "ObjectId" : "16b75cb10c0b4977ea1b55381dd53f1f2048a9ac",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/speech/qt5_espeak/CMakeLists.txt" : {
      "ObjectId" : "dbeb1efb29ff151ef502f34fda8c6cfd08d19bb4",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find includes in corresponding build directories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Instruct CMake to run moc automatically when needed.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "navit/speech/speech_dispatcher/CMakeLists.txt" : {
      "ObjectId" : "897a8c088ba18d4e066cd316839234374e2b02ee",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/support/espeak/CMakeLists.txt" : {
      "ObjectId" : "c358f712ed24f65eec1464ae237509ec59ef2215",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# speak.c \n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "navit/support/ezxml/CMakeLists.txt" : {
      "ObjectId" : "d93ad068683f55d14679ad868f96a666116a6c72",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/support/gettext_intl/CMakeLists.txt" : {
      "ObjectId" : "ab74f3f1cf36df2d8432268c1cc1af975818aae7",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/support/glib/CMakeLists.txt" : {
      "ObjectId" : "56d1ae8d394c90326b5cc548d310578fdc1476d4",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/support/libc/CMakeLists.txt" : {
      "ObjectId" : "9a91d41b69defef0f696980b21a4af9bc6028db8",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/support/libpng/CMakeLists.txt" : {
      "ObjectId" : "3aa3362bea476a2fbd02eafd8abce87387c7ef23",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/support/shapefile/CMakeLists.txt" : {
      "ObjectId" : "03c96432972770633c1c4c014e0d5ed61a260204",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/support/win32/CMakeLists.txt" : {
      "ObjectId" : "24408476240d33ebd85eaa3f81bf8b15762cf66d",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/support/wordexp/CMakeLists.txt" : {
      "ObjectId" : "650c9d1de65396d211766a4230f696b66298df12",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/support/xgetopt/CMakeLists.txt" : {
      "ObjectId" : "98a333f82f14657509a9e534fdaf3878dcda7e89",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/support/zlib/CMakeLists.txt" : {
      "ObjectId" : "66d30198ca948866c62708577041e034f5b82b87",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/tools/latlon2bookmark/Makefile" : {
      "ObjectId" : "22d3d6257353493e9d55912d95eddbb86e770d06",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "navit/traffic/dummy/CMakeLists.txt" : {
      "ObjectId" : "83df03b5154330e75e8b1666c16a9a0e59d4a35c",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/traffic/null/CMakeLists.txt" : {
      "ObjectId" : "c5edbe6918668619c0c96b6749000723792527d5",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/traffic/traff_android/CMakeLists.txt" : {
      "ObjectId" : "5e5f06df164ebb64e36b631eda50a00badc71bda",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/vehicle/android/CMakeLists.txt" : {
      "ObjectId" : "e7b19ebba97a3df1816b3ac29ea04e66fd4b57a3",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/vehicle/demo/CMakeLists.txt" : {
      "ObjectId" : "e7f57f902cd8254d822ddf19b8bdbeea3756b20f",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/vehicle/file/CMakeLists.txt" : {
      "ObjectId" : "764f412f8e453b883f89a67fa63c6e8add05ab4d",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/vehicle/gpsd/CMakeLists.txt" : {
      "ObjectId" : "75c3866c464bcee93d01256e4269c9e32da5d50a",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/vehicle/gpsd_dbus/CMakeLists.txt" : {
      "ObjectId" : "a38e65539042ee9eddb761be76eb2071fdc0fa36",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/vehicle/gypsy/CMakeLists.txt" : {
      "ObjectId" : "78719e28899e22bcba8bd801aa07c768c6313071",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/vehicle/iphone/CMakeLists.txt" : {
      "ObjectId" : "b84abb228131ee54368d8d0e16138ac00727a284",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/vehicle/maemo/CMakeLists.txt" : {
      "ObjectId" : "011e5dce97e533755deee49a073a8c0f7d683d0c",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/vehicle/null/CMakeLists.txt" : {
      "ObjectId" : "7b515acaa522a47bb567399b3da4bd33b9491bcb",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/vehicle/qt5/CMakeLists.txt" : {
      "ObjectId" : "411d9d6eed0eab42dfe69be43d4c2428d06620f9",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find includes in corresponding build directories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Instruct CMake to run moc automatically when needed.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "navit/vehicle/webos/CMakeLists.txt" : {
      "ObjectId" : "9cbdbcec052f6793ba585b58f62b7d5e76ada212",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navit/vehicle/wince/CMakeLists.txt" : {
      "ObjectId" : "d35904a3e660bf4737e8f8dd1155dec198d98499",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "po/CMakeLists.txt" : {
      "ObjectId" : "da02d43e8437457b33ae4395276fa90c552d5aae",
      "LastModified" : "2018-10-20T06:15:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Trick gettext to get translateable strings out of navit_shipped.xml\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Trick gettext to get translateable strings out of android strings.xml\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 106,
    "CMAKESOURCE" : 1,
    "QMAKE" : 1,
    "MAKEFILE" : 1,
    "ANT" : 1
  },
  "ElapsedTime" : 5165
}