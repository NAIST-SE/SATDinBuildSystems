{
  "Repository" : "32430516",
  "Revision" : "HEAD",
  "ObjectId" : "7dfa9ab822beb6d0d6672b8f7ee79d054fe5c2d5",
  "CommitTime" : "2019-04-14T09:32:31Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "1e3cd18322b8302abf0a5c52c57d21552ede94c8",
      "LastModified" : "2019-04-13T15:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# because of CMAKE_CXX_STANDARD\n",
        "Line" : 1,
        "CharPositionInLine" : 50
      },
      "1" : {
        "Text" : "### setup binary output directories\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Set a default build type if none was specified\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Global setting: build everything position independent\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# by default, force c++11\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# in case we have any c code, use the best c standard ever\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# whenever clang-tidy is available, use it to automatically add braces after ever \"make\"\n",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#         set(CMAKE_CXX_CLANG_TIDY \"clang-tidy;-fix\")\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "### set compile flags\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "### setup project include dirs\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "### Search in the `cmake' directory for additional CMake modules.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#############################\n\n### SCAN FOR DEPENDENCIES ###\n\n#############################\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# require at least OMP 3.0\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "###################################\n\n### HANDLE AUDIO OUTPUT SUPPORT ###\n\n###################################\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# previous versions neither provided pkgconfig, nor did true peak calc work\n",
        "Line" : 153,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################\n\n### HANDLE CODEC SUPPORT ###\n\n############################\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# TODO: this is very ugly, any easier way??\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# modplug ships an sndfile.h, which conflicts with libsndfile's sndfile.h\n\n# so dont include modplugs include path in compiler search list to avoid wrong includes\n\n#                 set(PROJECT_SYSTEM_INCLUDE_DIRS ${PROJECT_SYSTEM_INCLUDE_DIRS} ${LIBMODPLUG_INCLUDE_DIRS})\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "##################################\n\n### miscellaneous dependencies ###\n\n##################################\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# We need add -DQT_WIDGETS_LIB when using QtWidgets in Qt 5.\n",
        "Line" : 354,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# OpenGL & GLEW library\n",
        "Line" : 375,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "### Show a summary of what we got\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# anmp-core\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# anmp-qt\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# anmp-normalize\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Additional targets to perform clang-format/clang-tidy\n\n# Get all project files\n",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Adding clang-format target if executable is found\n",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "cmake/AddAnmpTest.cmake" : {
      "ObjectId" : "826103cd94456083228592700b2838b00e815592",
      "LastModified" : "2019-04-13T15:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# only build this unit test when explicitly requested by \"make check\"\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# add the test to ctest\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# append the current unit test to check-target as dependency\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/FindFFmpeg.cmake" : {
      "ObjectId" : "e2b8b603cb65009214224f8b0b9cea15ec6ea672",
      "LastModified" : "2019-04-13T15:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindFFMPEG\n\n# ----------\n\n#\n\n# Find the native FFMPEG includes and libraries\n\n#\n\n# This module defines:\n\n#\n\n#  FFMPEG_INCLUDE_DIRS, where to find avformat.h, avcodec.h...\n\n#  FFMPEG_LIBRARIES, the libraries to link against to use FFMPEG.\n\n#  FFMPEG_FOUND, If false, do not try to use FFMPEG.\n\n#\n\n# also defined, but not for general use are:\n\n#\n\n#   FFMPEG_avformat_LIBRARY, where to find the FFMPEG avformat library.\n\n#   FFMPEG_avcodec_LIBRARY, where to find the FFMPEG avcodec library.\n\n#\n\n# This is useful to do it this way so that we can always add more libraries\n\n# if needed to ``FFMPEG_LIBRARIES`` if ffmpeg ever changes...\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright: 1993-2008 Ken Martin, Will Schroeder, Bill Lorensen\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of ppsspp, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#   $ENV{FFMPEG_DIR}/libavformat\n\n#   $ENV{FFMPEG_DIR}/include/libavformat\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#   /usr/include/libavformat\n\n#   /usr/include/ffmpeg/libavformat\n\n#   /usr/local/include/libavformat\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#   $ENV{FFMPEG_DIR}/libavcodec\n\n#   $ENV{FFMPEG_DIR}/include/libavcodec\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#   /usr/include/libavcodec\n\n#   /usr/include/ffmpeg/libavcodec\n\n#   /usr/local/include/libavcodec\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#   $ENV{FFMPEG_DIR}/libavutil\n\n#   $ENV{FFMPEG_DIR}/include/libavutil\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#   /usr/include/libavutil\n\n#   /usr/include/ffmpeg/libavutil\n\n#   /usr/local/include/libavutil\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#   $ENV{FFMPEG_DIR}/libswresample\n\n#   $ENV{FFMPEG_DIR}/include/libswresample\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#   /usr/include/libswresample\n\n#   /usr/include/ffmpeg/libswresample\n\n#   /usr/local/include/libswresample\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/FindJack.cmake" : {
      "ObjectId" : "12b2987c632f3624a47d4c83af5dd2ba293e6f13",
      "LastModified" : "2019-04-13T15:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find jack-2.6\n\n# Once done this will define\n\n#\n\n#  JACK_FOUND - system has jack\n\n#  JACK_INCLUDE_DIRS - the jack include directory\n\n#  JACK_LIBRARIES - Link these to use jack\n\n#  JACK_DEFINITIONS - Compiler switches required for using jack\n\n#\n\n#  Copyright (c) 2008 Andreas Schneider <mail@cynapses.org>\n\n#  Modified for other libraries by Lasse Kärkkäinen <tronic>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# show the JACK_INCLUDE_DIRS and JACK_LIBRARIES variables only in the advanced view\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/FindLibSamplerate.cmake" : {
      "ObjectId" : "2fabd7e2b6bcfba706fb8bf2378b6e740003820a",
      "LastModified" : "2019-04-13T15:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is copyrighted under the BSD-license for buildsystem files of KDE\n\n# copyright 2010, Patrick von Reth <patrick.vonreth@gmail.com>\n\n#\n\n#\n\n# - Try to find the libsamplerate library\n\n# Once done this will define\n\n#\n\n#  LIBSAMPLERATE_FOUND          Set to TRUE if libsamplerate librarys and include directory is found\n\n#  LIBSAMPLERATE_LIBRARIES      The libsamplerate librarys\n\n#  LIBSAMPLERATE_INCLUDE_DIRS   The libsamplerate include directory\n\n#  LIBSAMPLERATE_DEFINITIONS    cflags and so\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# due to constness of SRC_DATA::data_in\n",
        "Line" : 20,
        "CharPositionInLine" : 55
      },
      "3" : {
        "Text" : "# \tfind_library(LIBSAMPLERATE_LIBRARIES NAMES samplerate libsamplerate\n\n# \t\t\t\t\tHINTS ${PC_LIBSAMPLERATE_LIBDIR} ${PC_LIBSAMPLERATE_LIBRARY_DIRS})\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \t    message(STATUS \"Found libsamplerate ${LIBSAMPLERATE_LIBRARIES}\")\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \t    message(STATUS \"Could not find libsamplerate, get it http://www.mega-nerd.com/SRC/\")\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/summary.cmake" : {
      "ObjectId" : "98fd5e5aba24d54e5bbfac616e38226bfb03521f",
      "LastModified" : "2019-04-13T15:58:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/utils.cmake" : {
      "ObjectId" : "ca8d5488405010bc8e1ca01342694a80bea7a03a",
      "LastModified" : "2019-04-13T15:58:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "gui/ANMP.pro" : {
      "ObjectId" : "d1d8105d6416ca41f7b6f0d6af8846057248199a",
      "LastModified" : "2019-04-13T15:58:02Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2016-02-28T15:40:47\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "gui/CMakeLists.txt" : {
      "ObjectId" : "95e51eeef46d3a3ec27602748ce949a0e8a8bd12",
      "LastModified" : "2019-04-13T15:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# due to CMAKE_AUTOUIC and CMAKE_AUTORCC\n",
        "Line" : 1,
        "CharPositionInLine" : 48
      },
      "1" : {
        "Text" : "# Tell CMake to run moc when necessary:\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# As moc files are generated in the binary dir, tell CMake\n\n# to always look for includes there:\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# from that header\n\n# generate the dbus interface to that xml\n",
        "Line" : 33,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : "# exporting public slots only\n",
        "Line" : 35,
        "CharPositionInLine" : 19
      },
      "5" : {
        "Text" : "# from the just generated xml file, generate implementation files for the dbus adaptor\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# skip processing those auto generated files\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# auto-generate \"build/gui/anmp_dbus_interface.h\" and \"build/gui/anmp_dbus_interface.cpp\" but skip\n\n# AUTOMOC and AUTOUIC for them (Policy CMP0071)\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# should add all necessary compile and link flags\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# name of libraries that will be build in the applets subdir\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "#     if(DEFINED DBUS_SERVICES_INSTALL_DIR)\n\n#         install(FILES ${CMAKE_CURRENT_BINARY_DIR}/org.anmp.xml DESTINATION ${DBUS_SERVICES_INSTALL_DIR})\n\n#     else(DEFINED DBUS_SERVICES_INSTALL_DIR)\n\n#         message(WARNING \"DBUS_SERVICES_INSTALL_DIR is not defined, refusing to install anmp's dbus interface\")\n\n#     endif(DEFINED DBUS_SERVICES_INSTALL_DIR)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "gui/applets/analyzer/CMakeLists.txt" : {
      "ObjectId" : "6e3ec006a1e516e926c7839491b710ea339c31a8",
      "LastModified" : "2019-04-13T15:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tell CMake to run moc when necessary:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# As moc files are generated in the binary dir, tell CMake\n\n# to always look for includes there:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/AudioOutput/CMakeLists.txt" : {
      "ObjectId" : "59ab2ae1d86f35c86bbb975af70a6e63b9853b2d",
      "LastModified" : "2019-04-13T15:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------------------\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "0149f204300fb184eaf024cba6636bf5277d7871",
      "LastModified" : "2019-04-13T15:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### these subdirs make up the anmp-core library\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this target requires c++11\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Common/CMakeLists.txt" : {
      "ObjectId" : "906eef1dbbdbf993ebe098256dee5cfcaf31f0da",
      "LastModified" : "2019-04-13T15:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/InputLibraryWrapper/CMakeLists.txt" : {
      "ObjectId" : "e6126c505ff9f0a94efc6970a9794beb01fe0093",
      "LastModified" : "2019-04-13T15:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------------------\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/PlayerLogic/CMakeLists.txt" : {
      "ObjectId" : "9e8122296de6fb7b6806c3aaa8664d35a27e96a1",
      "LastModified" : "2019-04-13T15:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "78f5f11be217981b34a6778c5def19101048cca1",
      "LastModified" : "2019-04-13T15:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# first define the test target, used by the macros below\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "utils/CMakeLists.txt" : {
      "ObjectId" : "cafb3901bbfc3aef629fc2d924a6ad7b1ecf2919",
      "LastModified" : "2019-04-13T15:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### name for anmp's normalization tool\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 16,
    "QMAKE" : 1
  },
  "ElapsedTime" : 1160
}