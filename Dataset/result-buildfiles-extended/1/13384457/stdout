{
  "Repository" : "13384457",
  "Revision" : "HEAD",
  "ObjectId" : "105ad04a046a2c084b773be31a65b631f6628f8b",
  "CommitTime" : "2019-04-15T05:48:40Z",
  "Files" : {
    "BUILD" : {
      "ObjectId" : "6c7a93fb519742b7758a28a1057539352397433d",
      "LastModified" : "2018-06-22T04:39:16Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "#3. The suggested list of packages for non-Debian and ",
        "Line" : 70,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 1
    },
    "engauge.pro" : {
      "ObjectId" : "aca92be1897720560036a47e1f41ff2ee0a37153",
      "LastModified" : "2019-04-15T05:48:40Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# engauge.pro : Builds make files for engauge executable\n\n#\n\n# Comments:\n\n# 1) Version numbers for the packages mentioned in the following comments are documented in the BUILD file\n\n# 2) This builds 'release' executables by default, to greatly reduce the chances of a 'debug' build getting deployed.\n\n#    To get a 'debug' build, add 'CONFIG=debug' to the qmake command line:\n\n#        qmake CONFIG=debug\n\n# 3) Add 'jpeg2000' to the qmake command line to include support for JPEG2000 input files. Requires:\n\n#        1) previous installation of OpenJPEG development package. According to Debian Security\n\n#           Advisory DSA-4013-1 the version should be newer than 2.1.2-1.1.\n\n#        2) OPENJPEG_INCLUDE environment variable pointing to directory with openjpeg.h\n\n#        3) OPENJPEG_LIB environment variable pointing to directory with libopenjp2.so\n\n#    Sample command lines:\n\n#        qmake CONFIG+=jpeg2000\n\n#        qmake \"CONFIG+=debug jpeg2000\"\n\n#    At some point, Qt may provide its own support for this format, at which point this can be skipped\n\n# 4) Add 'pdf' to the qmake command line to include support for PDF input files. Requires\n\n#        1) Linux and Mac OSX builds only. Unfortunately, the old software libraries needed to support\n\n#           PDF in Windows no longer compile and link correctly with newer Engauge builds. \n\n#        2) previous installation of the poppler-qt5 development package\n\n#        3) POPPLER_INCLUDE environment variable pointing to directory containing poppler-qt5.h\n\n#        4) POPPLER_LIB environment variable pointing to directory containing libpoppler-qt5.so\n\n#    Sample command lines:\n\n#        qmake CONFIG+=pdf\n\n#        qmake \"CONFIG+=debug pdf\"\n\n# 5) Set environment variable HELPDIR to override the default directory for the help files. On the command line, use\n\n#    qmake \"DEFINES+=HELPDIR=<directory>\". The <directory> is absolute or relative to the application executable directory\n\n# 6) Gratuitous warning about import_qpa_plugin in Fedora is due to 'CONFIG=qt' but that option takes care of \n\n#    include/library files in an automated and platform-independent manner, so it will not be removed\n\n# 7) 'network' module of Qt is not included for Windows version since installation file gets blocked by Avast antivirus.\n\n#    Likewise, it is not included for OSX since it is interpretted as a threat. \n\n#    The network module can download files, which is what malware does to install bad things\n\n# 8) In OSX, QtHelp requires QtNetwork which is rejected by the operating system, so QtHelp is disabled\n\n# 9) To include log4cpp_null as part of the build, add the 'log4cpp_null' config argument. This is meant only for\n\n#    building the snap package.\n\n#        qmake CONFIG+=log4cpp_null\n\n#\n\n# More comments are in the INSTALL file, and below\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Debug version:\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Release version:\n\n# 1) Release version has warnings enabled so they can be removed as a convenience for downstream package maintainers\n\n# 2) Full coverage requires disabling of ENGAUGE_ASSERT by setting QT_NO_DEBUG\n\n# 3) -Wuninitialized requires O1, O2 or O3 optimization\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# /usr/local/Cellar path below is for Travis builds\n",
        "Line" : 781,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# People interested in translating a language can contact the developers for help. \n\n# \n\n# Translation file names are 'engauge_XX_YY' or 'engauge_XX' where:\n\n#   XX = two letter language codes in column '639-1' at https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n\n#   YY = two letter country codes in column 'ISO 3166-2' at https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\n\n# where XX and YY are:\n\n#   ar = Arabic     Egypt=_eg\n\n#   cs = Czech      Czech Republic=_cs\n\n#   de = German     Germany=_de\n\n#   en = English    USA=us\n\n#   es = Spanish    Spain=_es\n\n#   fr = French     France=_fr\n\n#   hi = Hindi      India=_in\n\n#   it = Italian    Italy=_it\n\n#   ja = Japanese   Japan=_jp\n\n#   kk = Kazakh     Kazakhstan=_kz\n\n#   ko = Korean     SouthKorea=_kr\n\n#   pt = Portuguese Brazil=_br\n\n#   ru = Russian    Federation=_ru\n\n#   zh = Chinese    China=_cn\n\n# When the user picks an (XX_YY) locale in Settings / Main Window and restarts Engauge, Engauge follows these steps to load:\n\n#   1) 'engauge_XX_YY' is loaded if it exists and locale loading finishes\n\n#   2) 'engauge_XX' is loaded if it exists and step 1 failed, and locale loading finishes\n\n#   3) the default locale is loaded and steps 1 and 2 failed\n\n# In other words, translations specific to a country are loaded if available, otherwise translations for a language\n\n# (which often apply to multiple countries) are loaded.\n",
        "Line" : 1010,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/engauge_test_template.pro" : {
      "ObjectId" : "b38045d1536b538d37592d3387d85117382529c3",
      "LastModified" : "2019-04-15T05:48:40Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# engauge_test_template.pro : Builds make files for testing engauge executable\n\n#\n\n# Instructions are in the INSTALL file, with some comments about setting the configuration variable 'CONFIG' included below\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CONFIG comments:\n\n# 1) Add 'jpeg2000' to the qmake command line to include support for JPEG2000 input files. Requires\n\n#       1) previous installation of the jpeg2000 development package\n\n#       2) JPEG2000_INCLUDE environment variable pointing to directory containing openjpeg.h\n\n#       3) JPEG2000_LIB environment variable pointing to directory containing libopenjp2.so\n\n#    Sample command lines\n\n#       qmake CONFIG+=jpeg2000\n\n#       qmake \"CONFIG+=debug jpeg2000\"\n\n# 2) Add 'pdf' to the qmake command line to include support for PDF input files. Requires\n\n#       1) previous installation of the poppler-qt5 development package\n\n#       2) POPPLER_INCLUDE environment variable pointing to directory containing poppler-qt5.h\n\n#       3) POPPLER_LIB environment variable pointing to directory containing libpoppler-qt5.so\n\n#    Sample command lines\n\n#       qmake CONFIG+=pdf\n\n#       qmake \"CONFIG+=debug pdf\"\n\n# 3) Gratuitous warning about import_qpa_plugin in Fedora is due to 'CONFIG=qt' but that option takes care of \n\n#    include/library files in an automated and platform-independent manner, so it will not be removed\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "QMAKE" : 2,
    "BAZEL" : 1
  },
  "ElapsedTime" : 1687
}