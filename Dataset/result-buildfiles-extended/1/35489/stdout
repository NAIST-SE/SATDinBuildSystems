{
  "Repository" : "35489",
  "Revision" : "HEAD",
  "ObjectId" : "d3228bfb05ab7e153e2398a6543bdf86520860ff",
  "CommitTime" : "2019-02-06T00:44:07Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "4cc8951915142baacaf36a59857a786701cc9c7f",
      "LastModified" : "2018-10-09T04:10:07Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/mod/Makefile" : {
      "ObjectId" : "e1d8ee81bd8e55b11b0cb10683040431b12ccb42",
      "LastModified" : "2018-10-09T04:10:07Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Running the dependencies is enough.\n",
        "Line" : 6,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Don't want to execute depmod twice; it takes too long.\n",
        "Line" : 12,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "src/mod/nat64/Makefile" : {
      "ObjectId" : "8bcc9cac708e1fa209723828bf4acd432702c04e",
      "LastModified" : "2018-10-09T04:10:07Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/mod/siit/Makefile" : {
      "ObjectId" : "8bcc9cac708e1fa209723828bf4acd432702c04e",
      "LastModified" : "2018-10-09T04:10:07Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/usr/Makefile.am" : {
      "ObjectId" : "5685198393fe9fe7bc8b3b9f8dcc912601de39dc",
      "LastModified" : "2018-10-09T04:10:07Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/usr/iptables/Makefile" : {
      "ObjectId" : "1957ad371cdce730a758cddb341bfe8927a406c3",
      "LastModified" : "2019-01-06T01:27:41Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/usr/joold/Makefile.am" : {
      "ObjectId" : "823cdf6bf899dce6763a391cb8ce02596f80dd13",
      "LastModified" : "2018-10-22T05:14:52Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Note to myself: documentation tends to call these \"PROGRAMS\" \"targets\".\n\n# \"joold\" is a \"target\".\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#man_MANS = joold.8\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/usr/nat64/Makefile.am" : {
      "ObjectId" : "db047dae20951f65f8838eb02a13180168d6ff4d",
      "LastModified" : "2018-11-24T07:01:27Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Note to myself: documentation tends to call these \"PROGRAMS\" \"targets\".\n\n# \"jool\" is a \"target\".\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/usr/siit/Makefile.am" : {
      "ObjectId" : "5f7d97c75cb233f98f687e336ba13c588d10c105",
      "LastModified" : "2018-11-24T07:01:27Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Note to myself: documentation tends to call these \"PROGRAMS\" \"targets\".\n\n# \"jool_siit\" is a \"target\".\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/graybox/mod/Makefile" : {
      "ObjectId" : "b924fffd51e6fd3dfcd32a713d114515f2d042eb",
      "LastModified" : "2018-10-09T04:10:07Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/graybox/usr/Makefile.am" : {
      "ObjectId" : "fcd8b0fc5e42bc57b90ac0d80bda5d5e7a3e4c3c",
      "LastModified" : "2018-10-09T04:10:07Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Note to myself: documentation tends to call these \"PROGRAMS\" \"targets\".\n\n# \"graybox\" is a \"target\".\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/Makefile" : {
      "ObjectId" : "072d1ca14dff371ef13b4d1db1e03871c3cf193f",
      "LastModified" : "2018-10-22T05:14:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Layer 1 tests (utils)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Layer 2 tests (tables)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Layer 3 tests (dbs)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Layer 4 tests (utils that depend on the dbs)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Layer 5 tests (translation steps)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Layer 6 test (global translation)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Time for a rant:\n\n#\n\n# Kbuild is a fucking idiot. It has no problem creating object files\n\n# outside of the module's directory (as defined by the `-objs` variables),\n\n# but doesn't remove them. This is a major problem for `clean` targets.\n\n#\n\n# There used to be a little command in this target to work around that.\n\n# It looked somewhat like this:\n\n#\n\n# \tfind ../../src -type f -name \"*.o\" -delete\n\n#\n\n# But it had several drawbacks:\n\n#\n\n# 1. It indiscriminately removed all `.o` files in `src/`. Even object files\n\n#    that had nothing to do with unit testing.\n\n# 2. It only ran during this makefile. The individual PROJECTS didn't have it,\n\n#    and thus would leave the garbage around when individually `clean`d.\n\n# 3. It only deleted *object* files.\n\n#\n\n# That last one is actually a real problem. I don't know if it has always been\n\n# like this, but Kbuild now generates additional garbage. And there's no way\n\n# to predict how it will continue polluting our directories in the future. It\n\n# literally does whatever it wants.\n\n#\n\n# It's not Jool's job to compensate for Kbuild's idiocy in the first place.\n\n# It cannot do so correctly. We're going to have to just accept the garbage.\n\n# There's a `deconf.sh` script in the root of the project. It cleans far more\n\n# effectively than this target, if you're interested. But it needs git.\n\n#\n\n# TODO\n\n# Couple of ideas:\n\n# - In each PROJECTS directory, create a relative soft link to `src/`. That\n\n#   might fool Kbuild into thinking that the rest of the project is a child of\n\n#   the unit test. Off the top of my head, I think that Eclipse will go bananas\n\n#   because it will try to index the whole project several times...\n\n# - Do the iptables common.c include trick. It's bound to need loooooots of new\n\n#   files, though...\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "test/unit/addr/Makefile" : {
      "ObjectId" : "a52ea8da1a91513d67f6d2dff86a98feb1c74aba",
      "LastModified" : "2018-10-22T05:14:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# It appears the -C's during the makes below prevent this include from happening\n\n# when it's supposed to.\n\n# For that reason, I can't just do \"include ../common.mk\". I need the absolute\n\n# path of the file.\n\n# Unfortunately, while the (as always utterly useless) working directory is (as\n\n# always) brain-dead easy to access, the easiest way I found to get to the\n\n# \"current\" directory is the mouthful below.\n\n# And yet, it still has at least one major problem: if the path contains\n\n# whitespace, `lastword $(MAKEFILE_LIST)` goes apeshit.\n\n# This is the one and only reason why the unit tests need to be run in a\n\n# space-free directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/bibdb/Makefile" : {
      "ObjectId" : "276caaacb0fea3b0fe6750a268035283eb5d8e9f",
      "LastModified" : "2019-01-17T17:35:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# It appears the -C's during the makes below prevent this include from happening\n\n# when it's supposed to.\n\n# For that reason, I can't just do \"include ../common.mk\". I need the absolute\n\n# path of the file.\n\n# Unfortunately, while the (as always utterly useless) working directory is (as\n\n# always) brain-dead easy to access, the easiest way I found to get to the\n\n# \"current\" directory is the mouthful below.\n\n# And yet, it still has at least one major problem: if the path contains\n\n# whitespace, `lastword $(MAKEFILE_LIST)` goes apeshit.\n\n# This is the one and only reason why the unit tests need to be run in a\n\n# space-free directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/bibtable/Makefile" : {
      "ObjectId" : "fcc6e9cdc35e2b0c8422c1c9d6404115c1653f6d",
      "LastModified" : "2019-01-17T17:35:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# It appears the -C's during the makes below prevent this include from happening\n\n# when it's supposed to.\n\n# For that reason, I can't just do \"include ../common.mk\". I need the absolute\n\n# path of the file.\n\n# Unfortunately, while the (as always utterly useless) working directory is (as\n\n# always) brain-dead easy to access, the easiest way I found to get to the\n\n# \"current\" directory is the mouthful below.\n\n# And yet, it still has at least one major problem: if the path contains\n\n# whitespace, `lastword $(MAKEFILE_LIST)` goes apeshit.\n\n# This is the one and only reason why the unit tests need to be run in a\n\n# space-free directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/eamt/Makefile" : {
      "ObjectId" : "d296156c7150a31f9e2be75bed3bcd9b60b85032",
      "LastModified" : "2018-10-22T05:14:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# It appears the -C's during the makes below prevent this include from happening\n\n# when it's supposed to.\n\n# For that reason, I can't just do \"include ../common.mk\". I need the absolute\n\n# path of the file.\n\n# Unfortunately, while the (as always utterly useless) working directory is (as\n\n# always) brain-dead easy to access, the easiest way I found to get to the\n\n# \"current\" directory is the mouthful below.\n\n# And yet, it still has at least one major problem: if the path contains\n\n# whitespace, `lastword $(MAKEFILE_LIST)` goes apeshit.\n\n# This is the one and only reason why the unit tests need to be run in a\n\n# space-free directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/filtering/Makefile" : {
      "ObjectId" : "ce3dc9251cc956b9cb68354c1f31fae838db8d07",
      "LastModified" : "2019-01-17T17:35:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# It appears the -C's during the makes below prevent this include from happening\n\n# when it's supposed to.\n\n# For that reason, I can't just do \"include ../common.mk\". I need the absolute\n\n# path of the file.\n\n# Unfortunately, while the (as always utterly useless) working directory is (as\n\n# always) brain-dead easy to access, the easiest way I found to get to the\n\n# \"current\" directory is the mouthful below.\n\n# And yet, it still has at least one major problem: if the path contains\n\n# whitespace, `lastword $(MAKEFILE_LIST)` goes apeshit.\n\n# This is the one and only reason why the unit tests need to be run in a\n\n# space-free directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/iterator/Makefile" : {
      "ObjectId" : "d0d5a92c5c462f13799bccc86b6bc0b927254842",
      "LastModified" : "2018-10-22T05:14:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# It appears the -C's during the makes below prevent this include from happening\n\n# when it's supposed to.\n\n# For that reason, I can't just do \"include ../common.mk\". I need the absolute\n\n# path of the file.\n\n# Unfortunately, while the (as always utterly useless) working directory is (as\n\n# always) brain-dead easy to access, the easiest way I found to get to the\n\n# \"current\" directory is the mouthful below.\n\n# And yet, it still has at least one major problem: if the path contains\n\n# whitespace, `lastword $(MAKEFILE_LIST)` goes apeshit.\n\n# This is the one and only reason why the unit tests need to be run in a\n\n# space-free directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/joolns/Makefile" : {
      "ObjectId" : "251a220e05767c0cdd09e87faa62a1e3c6988ad4",
      "LastModified" : "2019-01-17T17:35:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# It appears the -C's during the makes below prevent this include from happening\n\n# when it's supposed to.\n\n# For that reason, I can't just do \"include ../common.mk\". I need the absolute\n\n# path of the file.\n\n# Unfortunately, while the (as always utterly useless) working directory is (as\n\n# always) brain-dead easy to access, the easiest way I found to get to the\n\n# \"current\" directory is the mouthful below.\n\n# And yet, it still has at least one major problem: if the path contains\n\n# whitespace, `lastword $(MAKEFILE_LIST)` goes apeshit.\n\n# This is the one and only reason why the unit tests need to be run in a\n\n# space-free directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/page/Makefile" : {
      "ObjectId" : "9fdfc644170705b51b0228e4580ddd86306fbce1",
      "LastModified" : "2019-01-17T17:35:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# It appears the -C's during the makes below prevent this include from happening\n\n# when it's supposed to.\n\n# For that reason, I can't just do \"include ../common.mk\". I need the absolute\n\n# path of the file.\n\n# Unfortunately, while the (as always utterly useless) working directory is (as\n\n# always) brain-dead easy to access, the easiest way I found to get to the\n\n# \"current\" directory is the mouthful below.\n\n# And yet, it still has at least one major problem: if the path contains\n\n# whitespace, `lastword $(MAKEFILE_LIST)` goes apeshit.\n\n# This is the one and only reason why the unit tests need to be run in a\n\n# space-free directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/pkt/Makefile" : {
      "ObjectId" : "c38cfe5f3044bd9929ce7245a6ca4245a5290058",
      "LastModified" : "2018-10-22T05:14:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# It appears the -C's during the makes below prevent this include from happening\n\n# when it's supposed to.\n\n# For that reason, I can't just do \"include ../common.mk\". I need the absolute\n\n# path of the file.\n\n# Unfortunately, while the (as always utterly useless) working directory is (as\n\n# always) brain-dead easy to access, the easiest way I found to get to the\n\n# \"current\" directory is the mouthful below.\n\n# And yet, it still has at least one major problem: if the path contains\n\n# whitespace, `lastword $(MAKEFILE_LIST)` goes apeshit.\n\n# This is the one and only reason why the unit tests need to be run in a\n\n# space-free directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/pool4-iterations/Makefile" : {
      "ObjectId" : "fae1ef50056574d13bf19738986f5fda0db580bb",
      "LastModified" : "2018-10-22T05:14:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# It appears the -C's during the makes below prevent this include from happening\n\n# when it's supposed to.\n\n# For that reason, I can't just do \"include ../common.mk\". I need the absolute\n\n# path of the file.\n\n# Unfortunately, while the (as always utterly useless) working directory is (as\n\n# always) brain-dead easy to access, the easiest way I found to get to the\n\n# \"current\" directory is the mouthful below.\n\n# And yet, it still has at least one major problem: if the path contains\n\n# whitespace, `lastword $(MAKEFILE_LIST)` goes apeshit.\n\n# This is the one and only reason why the unit tests need to be run in a\n\n# space-free directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/pool4db/Makefile" : {
      "ObjectId" : "f26803e984405190c5558b07aad3dd6b0ef506d5",
      "LastModified" : "2018-10-22T05:14:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# It appears the -C's during the makes below prevent this include from happening\n\n# when it's supposed to.\n\n# For that reason, I can't just do \"include ../common.mk\". I need the absolute\n\n# path of the file.\n\n# Unfortunately, while the (as always utterly useless) working directory is (as\n\n# always) brain-dead easy to access, the easiest way I found to get to the\n\n# \"current\" directory is the mouthful below.\n\n# And yet, it still has at least one major problem: if the path contains\n\n# whitespace, `lastword $(MAKEFILE_LIST)` goes apeshit.\n\n# This is the one and only reason why the unit tests need to be run in a\n\n# space-free directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/rbtree/Makefile" : {
      "ObjectId" : "d1bfa55a7870f9a5f67aa8f1dd49640db229f651",
      "LastModified" : "2018-10-22T05:14:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# It appears the -C's during the makes below prevent this include from happening\n\n# when it's supposed to.\n\n# For that reason, I can't just do \"include ../common.mk\". I need the absolute\n\n# path of the file.\n\n# Unfortunately, while the (as always utterly useless) working directory is (as\n\n# always) brain-dead easy to access, the easiest way I found to get to the\n\n# \"current\" directory is the mouthful below.\n\n# And yet, it still has at least one major problem: if the path contains\n\n# whitespace, `lastword $(MAKEFILE_LIST)` goes apeshit.\n\n# This is the one and only reason why the unit tests need to be run in a\n\n# space-free directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/rfc6052/Makefile" : {
      "ObjectId" : "c75553639c9b3f376843b6f956447ac9571ce1ce",
      "LastModified" : "2018-10-22T05:14:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# It appears the -C's during the makes below prevent this include from happening\n\n# when it's supposed to.\n\n# For that reason, I can't just do \"include ../common.mk\". I need the absolute\n\n# path of the file.\n\n# Unfortunately, while the (as always utterly useless) working directory is (as\n\n# always) brain-dead easy to access, the easiest way I found to get to the\n\n# \"current\" directory is the mouthful below.\n\n# And yet, it still has at least one major problem: if the path contains\n\n# whitespace, `lastword $(MAKEFILE_LIST)` goes apeshit.\n\n# This is the one and only reason why the unit tests need to be run in a\n\n# space-free directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/rfc6056/Makefile" : {
      "ObjectId" : "c2c7b8eb8397a4599c19bdf0a025c802cd740ce4",
      "LastModified" : "2018-10-22T05:14:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# It appears the -C's during the makes below prevent this include from happening\n\n# when it's supposed to.\n\n# For that reason, I can't just do \"include ../common.mk\". I need the absolute\n\n# path of the file.\n\n# Unfortunately, while the (as always utterly useless) working directory is (as\n\n# always) brain-dead easy to access, the easiest way I found to get to the\n\n# \"current\" directory is the mouthful below.\n\n# And yet, it still has at least one major problem: if the path contains\n\n# whitespace, `lastword $(MAKEFILE_LIST)` goes apeshit.\n\n# This is the one and only reason why the unit tests need to be run in a\n\n# space-free directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/sessiondb/Makefile" : {
      "ObjectId" : "a1f6a30eb17c97f32e4720a803054a3749b4fe01",
      "LastModified" : "2019-01-17T17:35:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# It appears the -C's during the makes below prevent this include from happening\n\n# when it's supposed to.\n\n# For that reason, I can't just do \"include ../common.mk\". I need the absolute\n\n# path of the file.\n\n# Unfortunately, while the (as always utterly useless) working directory is (as\n\n# always) brain-dead easy to access, the easiest way I found to get to the\n\n# \"current\" directory is the mouthful below.\n\n# And yet, it still has at least one major problem: if the path contains\n\n# whitespace, `lastword $(MAKEFILE_LIST)` goes apeshit.\n\n# This is the one and only reason why the unit tests need to be run in a\n\n# space-free directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/sessiontable/Makefile" : {
      "ObjectId" : "a5467fd2ddfeecf6c61dd9c3109e8ee6dedc1b3f",
      "LastModified" : "2019-01-17T17:35:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# It appears the -C's during the makes below prevent this include from happening\n\n# when it's supposed to.\n\n# For that reason, I can't just do \"include ../common.mk\". I need the absolute\n\n# path of the file.\n\n# Unfortunately, while the (as always utterly useless) working directory is (as\n\n# always) brain-dead easy to access, the easiest way I found to get to the\n\n# \"current\" directory is the mouthful below.\n\n# And yet, it still has at least one major problem: if the path contains\n\n# whitespace, `lastword $(MAKEFILE_LIST)` goes apeshit.\n\n# This is the one and only reason why the unit tests need to be run in a\n\n# space-free directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/translate/Makefile" : {
      "ObjectId" : "8a1a68ad426bd335487a81a7d6e495257ef38bf9",
      "LastModified" : "2019-01-17T17:35:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# It appears the -C's during the makes below prevent this include from happening\n\n# when it's supposed to.\n\n# For that reason, I can't just do \"include ../common.mk\". I need the absolute\n\n# path of the file.\n\n# Unfortunately, while the (as always utterly useless) working directory is (as\n\n# always) brain-dead easy to access, the easiest way I found to get to the\n\n# \"current\" directory is the mouthful below.\n\n# And yet, it still has at least one major problem: if the path contains\n\n# whitespace, `lastword $(MAKEFILE_LIST)` goes apeshit.\n\n# This is the one and only reason why the unit tests need to be run in a\n\n# space-free directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/types/Makefile" : {
      "ObjectId" : "9cd5a3a143f56782b435e5441a02512803c17703",
      "LastModified" : "2018-10-22T05:14:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# It appears the -C's during the makes below prevent this include from happening\n\n# when it's supposed to.\n\n# For that reason, I can't just do \"include ../common.mk\". I need the absolute\n\n# path of the file.\n\n# Unfortunately, while the (as always utterly useless) working directory is (as\n\n# always) brain-dead easy to access, the easiest way I found to get to the\n\n# \"current\" directory is the mouthful below.\n\n# And yet, it still has at least one major problem: if the path contains\n\n# whitespace, `lastword $(MAKEFILE_LIST)` goes apeshit.\n\n# This is the one and only reason why the unit tests need to be run in a\n\n# space-free directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 24,
    "AUTOMAKE" : 6
  },
  "ElapsedTime" : 1218
}