{
  "Repository" : "1449718",
  "Revision" : "HEAD",
  "ObjectId" : "555d28b0ec31eb825e939d1b194eaf796d1f8c11",
  "CommitTime" : "2016-09-13T13:18:47Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "be5912db67517f409f57d710df33d1b82afae8d5",
      "LastModified" : "2016-04-04T16:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# /*\n\n#     dspdfviewer - Dual Screen PDF Viewer for LaTeX-Beamer\n\n#     Copyright (C) 2012  Danny Edel <mail@danny-edel.de>\n\n#\n\n#     This program is free software; you can redistribute it and/or modify\n\n#     it under the terms of the GNU General Public License as published by\n\n#     the Free Software Foundation; either version 2 of the License, or\n\n#     (at your option) any later version.\n\n#\n\n#     This program is distributed in the hope that it will be useful,\n\n#     but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#     GNU General Public License for more details.\n\n#\n\n#     You should have received a copy of the GNU General Public License along\n\n#     with this program; if not, write to the Free Software Foundation, Inc.,\n\n#     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\n# */\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# qtmain.lib linkage on windows\n",
        "Line" : 21,
        "CharPositionInLine" : 31
      },
      "2" : {
        "Text" : "# dont expand quoted strings in if()s\n",
        "Line" : 24,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "#\n",
        "Line" : 30,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : "### Compile all the source code into one .a file\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set target name to \"libdspdfviewer\"\n\n# without a prefix (normally unix would auto-add lib...)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "### And link it together with main.cpp to produce an executable\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "### ... and link it with the tests to produce a testing executable.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Run unit tests regardless of debug/release\n\n# Set a default timeout to 60 seconds\n",
        "Line" : 75,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Check for big endian\n",
        "Line" : 79,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "#### Installation\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cmake/compiler_clang.cmake" : {
      "ObjectId" : "643536e864935efb90c2167fde4e9bc468a26011",
      "LastModified" : "2016-05-20T08:21:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake fragment\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Clang\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Turn on a lot of warnings, hopefully helping with code quality.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# And turn them into errors.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Disable warnings irrelevant to the project:\n\n#   c++98 compatibility warnings\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Currently this warning triggers in exception classes\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# We don't care about padding right now.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# in release mode: Unrechable code / Macro expansion (these stem from QDEBUG)\n\n# trigger a lot (QDEBUG compiles into the equivalent of while(false) { ... } )\n\n# So these are safe to ignore IFF we're not in Debug mode.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Qt's moc (Meta Object Compiler) generates code that triggers warnings\n\n# about undefined behaviours.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# So don't set Werror for it.\n\n# TODO: Set this only for the automoc files\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Clang on recent XCode fails to compile the boost tests\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#message(FATAL_ERROR \"Version: ${CMAKE_CXX_COMPILER_VERSION}\")\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# clang will complain about -isystem passed but not used.\n\n# This adds unnecessary noise\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# qrc system generates code that triggers a lot of the\n\n# clang warnings.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "cmake/compiler_gnu_gcc.cmake" : {
      "ObjectId" : "20d614cb696b77d67a0f0a46537968cbf480dbc8",
      "LastModified" : "2016-05-20T08:21:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GNU GCC\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set as much warnings as possible.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Turn all warnings into errors\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# These warnings produce false positives on some older qt4 libraries\n\n# (this failed debian s390x compilation), therefore tune them back\n\n# to warning when building against qt4.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/compiler_msvc.cmake" : {
      "ObjectId" : "6ce4cc2d4b5eb0b86a3c42bc705d1a5460d17793",
      "LastModified" : "2016-05-20T08:21:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MSVC\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/compiler_unknown.cmake" : {
      "ObjectId" : "9a4f14195347720d05f0a7b5365c9b67a8afca07",
      "LastModified" : "2015-09-21T16:39:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake framgent: unknown compiler\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Let's hops this works.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/compilers.cmake" : {
      "ObjectId" : "ade2ae9da86ad4e11084d62cb5b2da7263983030",
      "LastModified" : "2016-05-20T08:21:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake fragment\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler support\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Unknown Compiler\n",
        "Line" : 18,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#\n\n### Common for all compilers\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add -DQT_NO_DEBUG_OUTPUT to Release\n\n# and Release with Debug Info builds\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This helps with translation, since it disables QString(const char*)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/external_libraries.cmake" : {
      "ObjectId" : "cacfbcc1bf977814e830409b29a49d07589fbc06",
      "LastModified" : "2016-05-20T08:21:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake frament\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# External libraries\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Boost Libraries ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If we're building tests, we need program_options\n\n# AND unit_test_framework\n",
        "Line" : 18,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# No unit tests: Only program_options needed\n",
        "Line" : 24,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "### Qt\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Qt5\n",
        "Line" : 33,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# If linking statically,\n\n# Try to find Qt in /qt/static/qtbase\n\n# or plain /qt/static\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# On lower versions, QTBUG-32100 prevents compilation at least on clang\n\n# https://bugreports.qt.io/browse/QTBUG-32100\n",
        "Line" : 43,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# MSVC, but not statically linking\n",
        "Line" : 59,
        "CharPositionInLine" : 9
      },
      "10" : {
        "Text" : "# Non-MSVC Platforms:\n\n# Find poppler using pkg-config\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# add their link flags\n",
        "Line" : 73,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# add their include directories\n",
        "Line" : 82,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Set conditional compilation to Qt5 mode\n",
        "Line" : 91,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "#qt4\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# include/link poppler\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# This is needed for moc/uic results\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "cmake/filelists.cmake" : {
      "ObjectId" : "49e46ced186f31f94eab10bca8f7c3813b2430fb",
      "LastModified" : "2016-05-20T08:21:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake file fragment\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# File lists\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Windows file lists:\n\n# Dynamic and static precompiled dependencies\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Microsoft SDK\n",
        "Line" : 76,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Qt Platform Support\n",
        "Line" : 82,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "cmake/platforms.cmake" : {
      "ObjectId" : "d92880fa08f7bd7e765ed7d2f40d1b095792f4eb",
      "LastModified" : "2016-05-20T08:21:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If building on MSVC, WIN32 is defined, but on Cygwin/MSYS/MinGW it is not.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use the WINDOWS variable for everything on windows (regardless of which\n\n# compiler type), MSVC or MINGW for compiler-specific things.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/qrc_embedding.cmake" : {
      "ObjectId" : "40ef5afb6f46371eeca89d309c9987ab9550cf85",
      "LastModified" : "2016-05-20T08:21:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy all the filex in QRCFILES into the binary dir,\n\n# and execute qrc (Qt Resource Compiler) on them.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/version_number.cmake" : {
      "ObjectId" : "e3cf3bf3dc5fccf36f35b7bb9e03e3dca5d640ed",
      "LastModified" : "2016-05-20T08:21:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### CMake Fragment: Include version number\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Version-number inclusion logic.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Rationale: dspdfviewer --version should print something meaningful\n\n# Especially on builds from git, it should include the git revision.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Not-Empty version given on the command line. This has absolute priority.\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# We don't have a version number yet, but\n\n# this looks like a checkout from git.\n\n# Ask \"git describe\" for a version number.\n",
        "Line" : 14,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Check if it gave something back\n",
        "Line" : 21,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# We still don't know version number to embed.\n\n# Use default\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# TODO: Keep me updated!\n",
        "Line" : 32,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 8
    },
    "testing/CMakeLists.txt" : {
      "ObjectId" : "977cfff366569f225f7c09b4999a71b0be91caec",
      "LastModified" : "2016-05-20T08:21:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test driver library for convenience linking.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Link this helper library to dspdfviewer's functions\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compile from source\n",
        "Line" : 33,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# get source file name.\n\n# replace .pdf with .tex ending,\n\n# prefix source directory\n\n# and replace any ~ characters in filename with \\\\string~\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# env TEXINPUTS=${SOURCEDIRNAME}\n",
        "Line" : 53,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# Allow the programs headers to be found using #include <...>\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Now add actual tests.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Clang/G++: Don't promote warnings to errors when building the test suite.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Check whether --version and --help contain\n\n# the version in their output\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Only build and run the swap screen test on Qt5\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# On windows you cannot change the locale on a case-by-case basis.\n\n#\n\n# FIXME: Windows: Discover current locale\n\n# FIXME: Windows: Include the translation test for the current locale\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# the ENVIRONMENT property was added in 2.8.0\n",
        "Line" : 165,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 12
    }
  },
  "FileTypes" : {
    "CMAKE" : 12
  },
  "ElapsedTime" : 844
}