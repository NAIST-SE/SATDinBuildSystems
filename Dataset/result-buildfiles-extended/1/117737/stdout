{
  "Repository" : "117737",
  "Revision" : "HEAD",
  "ObjectId" : "ec5f508472485bcc6b8e66aa8f20117fd6fa7db2",
  "CommitTime" : "2019-02-17T02:58:00Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "0c578b599d9bd2827faf4b6857504c24be940ad6",
      "LastModified" : "2019-01-21T02:02:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set up Product Identification parameters\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure compile-time compiler-specific flags\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# HeadSpin Configuration\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is set for both Linux and Mac builds\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# End HeadSpin Configuration\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find all 3rd-party libraries that are required\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#TODO: Not required if we aren't building the client\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#TODO: Not required if we aren't building the client\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#TODO: Not required if we aren't building the client\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#TODO: Not required if we aren't building the client\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#Precompiled Header helper macros\n",
        "Line" : 186,
        "CharPositionInLine" : 30
      },
      "11" : {
        "Text" : "# libCurl isn't smart enough to detect this for us, so we have to configure it ourselves\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Same story for expat\n",
        "Line" : 195,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#Allow us to disable certain parts of the build\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Custom dummy target for compiling all tools\n",
        "Line" : 294,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#TODO: Make the OpenSSL includes less promiscuous so this isn't needed\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "Sources/Plasma/Apps/CMakeLists.txt" : {
      "ObjectId" : "4559481f54a125cd53b51093939dd50d3e90a8cc",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/Apps/plClient/CMakeLists.txt" : {
      "ObjectId" : "3ba183870b07b2bd6f83942bb8837dc998ee5092",
      "LastModified" : "2019-01-21T02:02:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test for Python Interpreter, which will be used for extra build scripts if available\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test for Python modules needed to build resource.dat\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#target_link_libraries(plClient plClientKey)\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Sources/Plasma/Apps/plClient/external/CMakeLists.txt" : {
      "ObjectId" : "53aba3b760d707f0675e4ef2e3c456f272af9f06",
      "LastModified" : "2013-02-19T16:06:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/Apps/plCrashHandler/CMakeLists.txt" : {
      "ObjectId" : "b70d3fe34102d7338033a67732e65fdeafed07a4",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Platform specific libs\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Sources/Plasma/Apps/plFileEncrypt/CMakeLists.txt" : {
      "ObjectId" : "aa167fdfcd964ada27b7bbb39eb5f7e2599e5862",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/Apps/plFileSecure/CMakeLists.txt" : {
      "ObjectId" : "4fbeeec987a49a9dfec0b30f32c6d9f7e00873dc",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/Apps/plPageInfo/CMakeLists.txt" : {
      "ObjectId" : "c792875fbad690a122d43fadc8c98af5fd1293cf",
      "LastModified" : "2017-12-13T00:53:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/Apps/plPageOptimizer/CMakeLists.txt" : {
      "ObjectId" : "b0d5b09dccedc3d6c7c098f5dc386664e37942c9",
      "LastModified" : "2017-12-13T00:53:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/Apps/plPythonPack/CMakeLists.txt" : {
      "ObjectId" : "019e6ba6c91508bb76aa9f9580f6d6f839dcb473",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/Apps/plUruLauncher/CMakeLists.txt" : {
      "ObjectId" : "f0709bb64757c326c9ef15b03da13e700524035c",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/CMakeLists.txt" : {
      "ObjectId" : "5d749c64bd64a3c835c5812b13803aac1e665599",
      "LastModified" : "2013-02-19T16:06:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/CoreLib/CMakeLists.txt" : {
      "ObjectId" : "5535b2ef077ef4a740fe1827248742702dc9e1e3",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/FeatureLib/CMakeLists.txt" : {
      "ObjectId" : "cd690de8d9ff03dc65a23d45be57adc54a10c144",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/FeatureLib/pfAnimation/CMakeLists.txt" : {
      "ObjectId" : "36bcd4f36cac3f4d5f503fa8850faec43f51203b",
      "LastModified" : "2011-07-13T04:15:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/FeatureLib/pfAudio/CMakeLists.txt" : {
      "ObjectId" : "a5f69befa61cd756d33b8d1b3cb78ded2f6c0e90",
      "LastModified" : "2011-07-13T04:15:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#include_directories(../../PubUtilLib/inc)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Sources/Plasma/FeatureLib/pfCCR/CMakeLists.txt" : {
      "ObjectId" : "a303d39f36c2ebaea6f727dd638e3e97ac168ff0",
      "LastModified" : "2011-07-13T04:15:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/FeatureLib/pfCamera/CMakeLists.txt" : {
      "ObjectId" : "5b0c80f280b65a106fbeb93e3c9a4d1e9782139e",
      "LastModified" : "2011-07-13T04:15:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/FeatureLib/pfCharacter/CMakeLists.txt" : {
      "ObjectId" : "7b94bca70dd64e405df1c055abade4a6d1bc3647",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/FeatureLib/pfConditional/CMakeLists.txt" : {
      "ObjectId" : "d4fae2631296fe903b210a20f0335625d9338c60",
      "LastModified" : "2011-07-13T04:15:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/FeatureLib/pfConsole/CMakeLists.txt" : {
      "ObjectId" : "e8b2c3dd00c257ee0708a3e3f47c9d2df0746c2b",
      "LastModified" : "2011-07-13T04:15:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/FeatureLib/pfConsoleCore/CMakeLists.txt" : {
      "ObjectId" : "c54c31a0795dfd7b3f505210f172093dfec70d56",
      "LastModified" : "2011-07-13T04:15:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/FeatureLib/pfCrashHandler/CMakeLists.txt" : {
      "ObjectId" : "9915a600e27cec6b89f9fe7da285f3d4724f671e",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/FeatureLib/pfGameGUIMgr/CMakeLists.txt" : {
      "ObjectId" : "729586aa88ae1383756eae8228c54c19f3cab3fd",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/FeatureLib/pfGameScoreMgr/CMakeLists.txt" : {
      "ObjectId" : "4617ffc1d03a4b598fb9f0c63dec4d82622b8be3",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/FeatureLib/pfJournalBook/CMakeLists.txt" : {
      "ObjectId" : "c780ad2183522dee9a5850ddccfb532e55f54fa3",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/FeatureLib/pfLocalizationMgr/CMakeLists.txt" : {
      "ObjectId" : "c7c095b3435c698f6d28bc57a0e712402f7cef4f",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/FeatureLib/pfMessage/CMakeLists.txt" : {
      "ObjectId" : "d2027df9fd9272594466d7690447dac0b026b03f",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/FeatureLib/pfMoviePlayer/CMakeLists.txt" : {
      "ObjectId" : "3c6961f26653c796ea05ecdf3501cd10b7700c4c",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/FeatureLib/pfPasswordStore/CMakeLists.txt" : {
      "ObjectId" : "5a6f52f2a292d763790ab616d4619129be84b7e4",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/FeatureLib/pfPatcher/CMakeLists.txt" : {
      "ObjectId" : "71a2e8dc7ab093878b93d627e4b324cbfa9e0599",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/FeatureLib/pfPython/CMakeLists.txt" : {
      "ObjectId" : "b4c606fbfeaced517e69c8182420e8d54f080287",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/FeatureLib/pfSurface/CMakeLists.txt" : {
      "ObjectId" : "7b06bc8ef863ad185ee3665ac5605184757e91d7",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/NucleusLib/CMakeLists.txt" : {
      "ObjectId" : "a1e748a9c9b34dd6a67790bdb995c0cc0988ee37",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/NucleusLib/inc/CMakeLists.txt" : {
      "ObjectId" : "3f2a7fa943678f6b6d77534103415b839c2ba231",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/NucleusLib/pnAsyncCore/CMakeLists.txt" : {
      "ObjectId" : "b5aac1f9ad02cf8dc68c14bdc33d4be3c4dc2619",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/NucleusLib/pnAsyncCoreExe/CMakeLists.txt" : {
      "ObjectId" : "7831332abd60d2d5a74af9310070bd99b214c10d",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# I would do platform specific stuff here,\n\n# but Pch.h just includes everything, so...\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# End questionable part\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Sources/Plasma/NucleusLib/pnDispatch/CMakeLists.txt" : {
      "ObjectId" : "8e6c6132804ffcaabc78a84856f7739eb7a7cc2d",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/NucleusLib/pnEncryption/CMakeLists.txt" : {
      "ObjectId" : "846969d2424d567e08b90a7825e72886aacd4f45",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/NucleusLib/pnFactory/CMakeLists.txt" : {
      "ObjectId" : "a8a243fab1c02baf78cbe5e7b1f88efb0b0ef902",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/NucleusLib/pnInputCore/CMakeLists.txt" : {
      "ObjectId" : "3865bc00d2275137aa5df34c1e410e74752de59a",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/NucleusLib/pnKeyedObject/CMakeLists.txt" : {
      "ObjectId" : "17a81544d8137f0e199bd61a967c4364e2b3127d",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/NucleusLib/pnMessage/CMakeLists.txt" : {
      "ObjectId" : "29d446cd7480db40e7c6f82e21dcbfac96d43437",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/NucleusLib/pnModifier/CMakeLists.txt" : {
      "ObjectId" : "afff98892cf0aeb5f67d9ed1db0331a1c94679cc",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/NucleusLib/pnNetBase/CMakeLists.txt" : {
      "ObjectId" : "991206cf138fd460f9c8e6201000c7853bc4dc9c",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/NucleusLib/pnNetCli/CMakeLists.txt" : {
      "ObjectId" : "42500c60ff440eb7c24a22fd5bc334e2ce295f3d",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/NucleusLib/pnNetCommon/CMakeLists.txt" : {
      "ObjectId" : "adacb3bea8c74deb818b9c4805a2744201ed0d42",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/NucleusLib/pnNetProtocol/CMakeLists.txt" : {
      "ObjectId" : "4657d3cad2a3150e04ea5ecc4d8818ecef0ec18e",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/NucleusLib/pnSceneObject/CMakeLists.txt" : {
      "ObjectId" : "d33c49c45fa166db1269e0fdfc70fdd68920e391",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/NucleusLib/pnTimer/CMakeLists.txt" : {
      "ObjectId" : "52927534652fc63a490777e317e6c758570f93da",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/NucleusLib/pnUUID/CMakeLists.txt" : {
      "ObjectId" : "ca3e40f8c35b66e50b604ed483d8781bedd7929c",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/NucleusLib/pnUtils/CMakeLists.txt" : {
      "ObjectId" : "80612e1c84f66426b2c3c35712b0f0476aafade8",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/CMakeLists.txt" : {
      "ObjectId" : "47fe21f4c3ae6103d330858586c6966556777d77",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plAgeDescription/CMakeLists.txt" : {
      "ObjectId" : "1666bfade15747e4bd8f3220a2e90f6fa3a6084b",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plAgeLoader/CMakeLists.txt" : {
      "ObjectId" : "572ce974f88bbdc8ce76b0d78e3af89d048c29c0",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plAnimation/CMakeLists.txt" : {
      "ObjectId" : "8f71ad57f3d12515c6db14fdec2ac4417224715c",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plAudible/CMakeLists.txt" : {
      "ObjectId" : "887a02561c276130df3ae614197e014eb088e6ca",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plAudio/CMakeLists.txt" : {
      "ObjectId" : "f4723c83fda76609817ba7549ec97523f4357f94",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plAudioCore/CMakeLists.txt" : {
      "ObjectId" : "be682a27ded69bc177935e2820b228affdba6dba",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We only need DirectX if we're building the Max plugin\n\n# TODO: Check if we actually need this at all\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Sources/Plasma/PubUtilLib/plAvatar/CMakeLists.txt" : {
      "ObjectId" : "b45a9a835fb414a2ed5cb7d7f206a6b8ce834c03",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plClientResMgr/CMakeLists.txt" : {
      "ObjectId" : "c26d7233954c7e6e78effd5b1af4d82111b223cc",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plClipboard/CMakeLists.txt" : {
      "ObjectId" : "4bfd65829be92fa6ba4df6ae78c2c0702de2d1a9",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plCompression/CMakeLists.txt" : {
      "ObjectId" : "5095893a403f60ba4237d0d592b2d1dcaadd7139",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plContainer/CMakeLists.txt" : {
      "ObjectId" : "e580a6442aebbd6fb77593cc8dea35b9166e924e",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plDrawable/CMakeLists.txt" : {
      "ObjectId" : "f1d083371fd31dfffda72df9afda87ca906a1903",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plFile/CMakeLists.txt" : {
      "ObjectId" : "05a735af23ef198c9574a1657f3cf673bfc7e2e5",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plGImage/CMakeLists.txt" : {
      "ObjectId" : "fbf610a8d99de8675d91a25a9763563a2365438a",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plGLight/CMakeLists.txt" : {
      "ObjectId" : "91cffd485c3fe8162f8bee6b99b3fd937369617a",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plInputCore/CMakeLists.txt" : {
      "ObjectId" : "10d501dbf345cf5277ba3f03f469868107bf01b8",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plInterp/CMakeLists.txt" : {
      "ObjectId" : "5241187cd9d36881c213c4eae09f1530e9e3b94f",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plIntersect/CMakeLists.txt" : {
      "ObjectId" : "678a96b6fe22d2b8553a465f29b4bf6cb64ae497",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plMath/CMakeLists.txt" : {
      "ObjectId" : "fc7800f3423436ec661ea460f8d3eb1d19dcb08d",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plMessage/CMakeLists.txt" : {
      "ObjectId" : "591074a1dbab0190d02c0f3b7ed304ca25199ae6",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plModifier/CMakeLists.txt" : {
      "ObjectId" : "a2cd2ee31932ea6217765c6c2e2c6231d427ad86",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plNetClient/CMakeLists.txt" : {
      "ObjectId" : "78b8cb60914f00075d50197e05f9fb192a941cfb",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plNetClientComm/CMakeLists.txt" : {
      "ObjectId" : "186c1860b76a5ad098cddc7dbea9cf091448b0eb",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plNetClientRecorder/CMakeLists.txt" : {
      "ObjectId" : "e167aeee74a5e66deb00f7fef269c6f4855a39b9",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plNetCommon/CMakeLists.txt" : {
      "ObjectId" : "44d3eabaada8de55a92a823263536d66fb7de813",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plNetGameLib/CMakeLists.txt" : {
      "ObjectId" : "6efb90e0a1a935ef4fdd6438790105ed33a28f98",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plNetMessage/CMakeLists.txt" : {
      "ObjectId" : "e142745de9c76d0fb5998fe2d7c7d703da654508",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plNetTransport/CMakeLists.txt" : {
      "ObjectId" : "a59601ae18941c8a84db54fcd666341be03bed5d",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plParticleSystem/CMakeLists.txt" : {
      "ObjectId" : "0414bb2f8d4b815809272c9b2a55126e51e5e9a7",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plPhysX/CMakeLists.txt" : {
      "ObjectId" : "710d12ab03002ca574aca0172e883107ef27ff61",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plPhysical/CMakeLists.txt" : {
      "ObjectId" : "afcf190b04da301ca0b86de3b99d71696e32ce0b",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plPipeline/CMakeLists.txt" : {
      "ObjectId" : "d61ea47ea448b389b6973b5ec779da2e9a4a876d",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plProgressMgr/CMakeLists.txt" : {
      "ObjectId" : "19a86a6f961d791f4d43f4c069fe157480322697",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plResMgr/CMakeLists.txt" : {
      "ObjectId" : "1b8d4f66e0d6c915025c85d588a5ce818ee0eadb",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plSDL/CMakeLists.txt" : {
      "ObjectId" : "3bcf5ddcbea9560893935ed952c531964ad41f4e",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plScene/CMakeLists.txt" : {
      "ObjectId" : "e33e3862b541acd162dc6a648a1fb7b17a4c4411",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plSockets/CMakeLists.txt" : {
      "ObjectId" : "94e8e63fca744f36aca004fd0db30b118c370c89",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plStatGather/CMakeLists.txt" : {
      "ObjectId" : "eb1868f47bfb12b2f744de9e87b9b267b0ba6ec3",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plStatusLog/CMakeLists.txt" : {
      "ObjectId" : "4d31c1c38edcb1e127fe2a4a995bc64d80fbd0af",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plStreamLogger/CMakeLists.txt" : {
      "ObjectId" : "887bced66559d00f400cca9f39c42c1281cdc296",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plSurface/CMakeLists.txt" : {
      "ObjectId" : "0408d369ed3426620b68d2f36ae4d2ecc427be91",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plTransform/CMakeLists.txt" : {
      "ObjectId" : "8f380e30a6e71754ab45450e0bb3c11760626efe",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plUnifiedTime/CMakeLists.txt" : {
      "ObjectId" : "eb806f3b019c81a8384d41606bf6eb31999d6109",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Plasma/PubUtilLib/plVault/CMakeLists.txt" : {
      "ObjectId" : "63bb4fdf27dd98ff13da1331ffb57d559d516ef1",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Tests/CMakeLists.txt" : {
      "ObjectId" : "856d3ca341edd813316e6578e57917b2e6ac2c93",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Tests/CoreTests/CMakeLists.txt" : {
      "ObjectId" : "8e30bb60a9a3707ffdc20c2666ab7c9472031c10",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Tests/FeatureTests/CMakeLists.txt" : {
      "ObjectId" : "293fe91e6b8b46a1c32c75df9c806907f36d86ad",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Tests/FeatureTests/pfPythonTest/CMakeLists.txt" : {
      "ObjectId" : "c9cb8d439f5e659a2b5aec537dc62eb85e92d82a",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Tests/NucleusTests/CMakeLists.txt" : {
      "ObjectId" : "56df15ee3d6c53e90cb87de8710930e55bdffc3c",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Tests/NucleusTests/pnEncryptionTest/CMakeLists.txt" : {
      "ObjectId" : "e54da41f8c010c328c6dfd856bbfb936386afa77",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Tests/PubUtilTests/CMakeLists.txt" : {
      "ObjectId" : "ad524eebe62a2072c55b4e2b7467a1b39358ca03",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Tests/PubUtilTests/plUnifiedTimeTest/CMakeLists.txt" : {
      "ObjectId" : "4d1a0498d29b52bb3bbce90a282e6689a01331a5",
      "LastModified" : "2017-01-07T01:57:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Tests/gtest-1.8.0/CMakeLists.txt" : {
      "ObjectId" : "621d0f0421543eba41e1d69f497814104bb9c6a7",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 62,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If the CMake version supports it, attach header directory information\n\n# to the targets for when we are part of a parent build (ie being pulled\n\n# in via add_subdirectory() rather than being a standalone build).\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################################\n\n#\n\n# Install rules\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 210,
        "CharPositionInLine" : 43
      },
      "22" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Visual Studio .NET 2003 does not support STL with exceptions disabled.\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# 1310 is Visual Studio .NET 2003\n",
        "Line" : 232,
        "CharPositionInLine" : 46
      },
      "26" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 27
    },
    "Sources/Tests/gtest-1.8.0/Makefile.am" : {
      "ObjectId" : "29797e4e9de4e1d5e5f93bba14288de87f623946",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "Sources/Tests/gtest-1.8.0/cmake/internal_utils.cmake" : {
      "ObjectId" : "6184bb26b6c352576e3f7582c46bf6686fcc752b",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Note: pthreads on MinGW is not supported, even if available\n\n# instead, we use windows threading primitives\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# 1400 is Visual Studio 2005\n",
        "Line" : 61,
        "CharPositionInLine" : 33
      },
      "10" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 62,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 67,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# 1500 is Visual Studio 2008\n",
        "Line" : 71,
        "CharPositionInLine" : 33
      },
      "14" : {
        "Text" : "# Conditional expression is constant.\n\n# When compiling with /W4, we get several instances of C4127\n\n# (Conditional expression is constant). In our code, we disable that\n\n# warning on a case-by-case basis. However, on Visual Studio 2005,\n\n# the warning fires on std::list. Therefore on that compiler and earlier,\n\n# we disable the warning project-wide.\n",
        "Line" : 72,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 80,
        "CharPositionInLine" : 39
      },
      "16" : {
        "Text" : "# Suppress \"unreachable code\" warning on VS 2012 and later.\n\n# http://stackoverflow.com/questions/3232669 explains the issue.\n",
        "Line" : 81,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# BigObj required for tests.\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 126,
        "CharPositionInLine" : 32
      },
      "24" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 238,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 38
    },
    "Sources/Tools/CMakeLists.txt" : {
      "ObjectId" : "6ef8d52b8bd4898c3612b682854661d71cb4bb0a",
      "LastModified" : "2017-10-19T19:00:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Max Stuff goes below here...\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Sources/Tools/MaxComponent/CMakeLists.txt" : {
      "ObjectId" : "d4f43770a530f8151d59a83f5a6dd3760b24dd34",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Tools/MaxConvert/CMakeLists.txt" : {
      "ObjectId" : "66527df062b8444d9f7852c0be28ff8ed0603ed6",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Tools/MaxExport/CMakeLists.txt" : {
      "ObjectId" : "ad8ea9a0d09cb880ee0ca568c77d61ced23c3d97",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Tools/MaxMain/CMakeLists.txt" : {
      "ObjectId" : "bcd45355ed20ba267926bce10c8ff6ffe78b989a",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Carbon copy from plClient\n\n# TODO: Maybe see if some of these can be removed?\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Sources/Tools/MaxPlasmaLights/CMakeLists.txt" : {
      "ObjectId" : "cc2af7ee7e43ca47dc83204620ef8c30d914955c",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Carbon copy from plClient\n\n# TODO: Maybe see if some of these can be removed?\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Sources/Tools/MaxPlasmaMtls/CMakeLists.txt" : {
      "ObjectId" : "4469ec9493c4c17dcd72ba5106ff627a552703e1",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sources/Tools/plFontConverter/CMakeLists.txt" : {
      "ObjectId" : "f9f0bda6c052b1161e3954a3b7e7ac43b01ecd0f",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For generated ui_*.h files\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Sources/Tools/plLocalizationEditor/CMakeLists.txt" : {
      "ObjectId" : "516eaa8752fa784be9874bef9e111bc25594d028",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For generated ui_*.h files\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Sources/Tools/plResBrowser/CMakeLists.txt" : {
      "ObjectId" : "77a132eebca369029ab58bb78e419203a7e30de1",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For generated ui_*.h files\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Sources/Tools/plShaderAssembler/CMakeLists.txt" : {
      "ObjectId" : "d3558e008ddf989d9fd22ddb9a0d6d94106e9397",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/CompilerChecks.cmake" : {
      "ObjectId" : "2b51e836831c1f4ac11f0f0664f01d282670ebbc",
      "LastModified" : "2017-10-19T19:00:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Detect Clang compiler\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Require C++11\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MSVC automatically defines -D_DEBUG when /MTd or /MDd is set, so we\n\n# need to make sure it gets added for other compilers too\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compile-time type size checks\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check for CPUID headers\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Look for a supported \"deprecated\" attribute specifier.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Look for C++11 constexpr support\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Look for C++11 override/final specifiers\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Look for C++11 noexcept specifier\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/Find3dsm.cmake" : {
      "ObjectId" : "fe59526129f334b063d912a58f15455a02779b1d",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindDirectX.cmake" : {
      "ObjectId" : "0a840639fb8704742a8c23ddb95f4ca81bbb1ba8",
      "LastModified" : "2019-02-08T05:08:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Figure out the arch for the path suffixes\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MSVC 2015 (v14) or newer need this library for backwards-compatibility\n\n# For more information: https://msdn.microsoft.com/en-us/library/bb531344.aspx\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/FindOgg.cmake" : {
      "ObjectId" : "994351862f33b0a2c772335d2aa40ec94d5b3a9f",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindOpus.cmake" : {
      "ObjectId" : "90df224bd1f5953f7dbcd4c63121b09a3b6296f6",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindPCRE.cmake" : {
      "ObjectId" : "e1d3745ff4aacff50eb31017e3a2e05cc6795309",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindPhysX.cmake" : {
      "ObjectId" : "58f58c2c2bb53f7938139796dc69a414b7a85b60",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#This isn't quite right, but we'll assume they are all at the same place.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#2.7.3 is the earliest version that can be downloaded from nVidia's archive.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindPythonModule.cmake" : {
      "ObjectId" : "d17cefb1fbbadf34e920372f65fc519d0958401e",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test for the existence of a specified Python Module\n\n#\n\n# From http://ompl.hg.sourceforge.net/hgweb/ompl/ompl/file/tip/CMakeModules/FindPython.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A module's location is usually a directory, but for binary modules\n\n# it's a .so file.\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/FindSpeex.cmake" : {
      "ObjectId" : "9e7c5323b274b272a39345f02ea905a25ed94ce6",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#It would be a good idea to eventually use pkgconfig here.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindUuid.cmake" : {
      "ObjectId" : "af803e20dddb72c2ac775af416642d19785f9432",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindVLD.cmake" : {
      "ObjectId" : "5012e4726d98ffbe6036066fa9aea9023354da7a",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindVPX.cmake" : {
      "ObjectId" : "53dadac55977ad506387c1e3811575a9384fee52",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindVorbis.cmake" : {
      "ObjectId" : "a734a027f008394db801a9e35ba7bfd82a6060f1",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/PrecompiledHeader.cmake" : {
      "ObjectId" : "16a663ae331a4559bbdfbdf8e4878f12bbd112c4",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the Pch.[h|cpp] to the appropriate sets\n\n# OT: This has to be the oddest thing I've ever written =/\n",
        "Line" : 22,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "cmake/hsCompilerSpecific.h.cmake" : {
      "ObjectId" : "665e5500136febf67e9352e89a1d88c45e62a1e0",
      "LastModified" : "2019-01-21T01:18:42Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*==LICENSE==*\n\nCyanWorlds.com Engine - MMOG client, server and tools\nCopyright (C) 2011  Cyan Worlds, Inc.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAdditional permissions under GNU GPL version 3 section 7\n\nIf you modify this Program, or any covered work, by linking or\ncombining it with any of RAD Game Tools Bink SDK, Autodesk 3ds Max SDK,\nNVIDIA PhysX SDK, Microsoft DirectX SDK, OpenSSL library, Independent\nJPEG Group JPEG library, Microsoft Windows Media SDK, or Apple QuickTime SDK\n(or a modified version of those libraries),\ncontaining parts covered by the terms of the Bink SDK EULA, 3ds Max EULA,\nPhysX SDK EULA, DirectX SDK EULA, OpenSSL and SSLeay licenses, IJG\nJPEG Library README, Windows Media SDK EULA, or QuickTime SDK EULA, the\nlicensors of this Program grant you additional\npermission to convey the resulting work. Corresponding Source for a\nnon-source form of such a combination shall include the source code for\nthe parts of OpenSSL and IJG JPEG Library used as well as that of the covered\nwork.\n\nYou can contact Cyan Worlds, Inc. by email legal@cyan.com\n or by snail mail at:\n      Cyan Worlds, Inc.\n      14617 N Newport Hwy\n      Mead, WA   99021\n\n*==LICENSE==*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 132,
    "CMAKESOURCE" : 1,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 4004
}