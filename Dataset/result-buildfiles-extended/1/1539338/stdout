{
  "Repository" : "1539338",
  "Revision" : "HEAD",
  "ObjectId" : "67451cc789350043800305951a7f6fe324b88917",
  "CommitTime" : "2018-03-04T10:21:36Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "a1276c356a70faacff29a768ead634f19a149568",
      "LastModified" : "2016-09-21T10:42:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Setup build locations.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set CMAKE_MODULE_PATH for cmake macro/function and modules\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# installation\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make relative paths absolute (needed later on)\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#make the option to build the cli documentation available if and only if the cli tools will be built\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#it's only possible to enable the long running CLI tests if testing is enabled and the CLI tools will be built.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#search for pandoc to generate man pages for the cli tools\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#the cli tools require the program_options component from boost\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# On Windows, we can only build static libraries, as the dynamic libraries would be\n\n# missing the accompanying .lib (unless the code is entirely rewritten with __declspec(dllexport) etc.)\n\n# See http://www.cmake.org/Wiki/BuildingWinDLL\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# We rely on the hdf5 libraries that are shipped with ITK, as this will reduce version conflicts.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#make sure the executables have access to the dll's created by the superbuild on windows to make them runnable even without installing & adding the isntall path to the cmd PATH\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# -------------------------------------------------------------\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# -------------------------------------------------------------\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add all targets to the build-tree export set\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Export the package for use from the build-tree\n\n# (this registers the build-tree with a global CMake-registry)\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# -------------------------------------------------------------\n\n# for the build tree\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# for the install tree\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "cmake/CMakeOSXVariables.cmake" : {
      "ObjectId" : "0c7d93511db0284cb71bca45618b175f33a9f6ec",
      "LastModified" : "2014-07-07T12:09:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# ctkBlockSetCMakeOSXVariables\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Adapted from Paraview/Superbuild/CMakeLists.txt\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Note: Change architecture *before* any enable_language() or project()\n\n#       calls so that it's set properly to detect 64-bit-ness...\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Waiting universal binaries are supported and tested, complain if\n\n# multiple architectures are specified.\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# See CMake/Modules/Platform/Darwin.cmake)\n\n#   8.x == Mac OSX 10.4 (Tiger)\n\n#   9.x == Mac OSX 10.5 (Leopard)\n\n#  10.x == Mac OSX 10.6 (Snow Leopard)\n\n#  10.x == Mac OSX 10.7 (Lion)\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Retrieve OSX target name\n",
        "Line" : 63,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 7
    },
    "cmake/FindEigen3.cmake" : {
      "ObjectId" : "9c546a05d859b18c49554d7ee7221cc486b7760e",
      "LastModified" : "2014-07-07T12:09:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/ModuleHeaderTest.cmake" : {
      "ObjectId" : "6b19d55901390355a153cd7c69364ab4cc71fd38",
      "LastModified" : "2015-01-07T08:41:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This checks HeaderTest's in each module.  A HeaderTest can be found in the\n\n# module 'test' directory in a file <module_name>HeaderTest.cxx.  This\n\n# contains a null main(), but includes all the classes in the module.  The\n\n# primary purpose of this test is to make sure there are not missing module\n\n# dependencies.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This does not force the developer to install python to be able to build Statismo.\n\n# The tests will simply not be run if python is unavailable.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The maximum number of headers in a test.  This helps limit memory issues,\n\n# and the cppcheck tests.  However, if this is not unity, there is a slight\n\n# chance that problems may be hidden.  For a complete header check, set to \"1\".\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Count how many tests we are going to get, and put the source files in\n\n# the list _outputs.\n\n# WARNING: This code is highly coupled with the BuildHeaderTest.py file\n\n# below.  Before making any logic changes here, make sure that script is not\n\n# effected.\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# We check to see if the headers are changed.  If so, remove the header test\n\n# source files so they are regenerated.\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# for string( MD5\n",
        "Line" : 59,
        "CharPositionInLine" : 49
      },
      "CommentCount" : 6
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "47da92bcd465aa19b280df4db8009f4ec148696e",
      "LastModified" : "2015-01-07T08:41:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Build the documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/CMakeLists.txt" : {
      "ObjectId" : "0561181582adf762060c77623da7f08d0f055ead",
      "LastModified" : "2014-09-23T18:24:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/ITK/CMakeLists.txt" : {
      "ObjectId" : "866f3918a0fda64c23230c83739c901744011b1c",
      "LastModified" : "2016-09-21T10:42:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#i.e. Visual Studio 2012\n",
        "Line" : 1,
        "CharPositionInLine" : 11
      },
      "1" : {
        "Text" : "# Fix for VS2012 that has _VARIADIC_MAX set to 5. Don't set too high because it increases compiler memory usage / compile-time.\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Fix for another VS2012 problem: not all TR1 options are automatically detected, therefore we force them here.\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "modules/ITK/cli/CMakeLists.txt" : {
      "ObjectId" : "52b943bb79e6827cfaf6ba1875b511edb536f0b1",
      "LastModified" : "2016-09-21T10:42:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#the idea here is to have an X.cxx and a X.md where X denotes the cli-command name.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# fix for (some?) Windows compilers which otherwise don't find utils/*.h includes\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#configuring man page install dir\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#put the directory with the manuals in the same directory as the binaries on windows\n",
        "Line" : 33,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#use cmake to find the man pages directory on *NIX\n",
        "Line" : 37,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# a '/' instead of a '\\' in the input-file's path on windows leads to pandoc failing to automatically recoginze the file format -> we have specify it manually\n",
        "Line" : 62,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#build the cli documentation by default\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#install the entire cli documentation directory\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "modules/ITK/cli/test/CMakeLists.txt" : {
      "ObjectId" : "7cd1c8c64a141214c9cc8e6e2a7a41a58aee0c10",
      "LastModified" : "2016-09-21T10:42:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Test some of the commands provided in the man pages\n\n#Not all commands for 3D deformation models will be tested because the example image data is in 2d\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#write a file containing the paths to the deformation fields/meshes to build the models.\n\n#in this test the absolute paths are used so that it's independent from the current working directory. Paths relative to the current working directory can be used as well.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "modules/ITK/examples/CMakeLists.txt" : {
      "ObjectId" : "5146d89505ed45e34d0dfb702072f908b54c55d7",
      "LastModified" : "2014-09-23T18:24:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#i.e. Visual Studio 2012\n",
        "Line" : 1,
        "CharPositionInLine" : 11
      },
      "1" : {
        "Text" : "# Fix for VS2012 that has _VARIADIC_MAX set to 5. Don't set too high because it increases compiler memory usage / compile-time.\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Fix for another VS2012 problem: not all TR1 options are automatically detected, therefore we force them here.\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "modules/ITK/tests/CMakeLists.txt" : {
      "ObjectId" : "7f40c4788bbfca2d679a17798ced8e26be5291d1",
      "LastModified" : "2016-09-21T10:42:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/ITK/wrapping/CMakeLists.txt" : {
      "ObjectId" : "e2e2b2c55cc1165a5a67d299a0978c072130d1e3",
      "LastModified" : "2014-09-23T18:24:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# name of python package\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# includes all *.wrap custom files\n",
        "Line" : 40,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 2
    },
    "modules/VTK/CMakeLists.txt" : {
      "ObjectId" : "a06829209dee2c9f4ddad8222e3a0dee7643c3c1",
      "LastModified" : "2018-01-05T15:45:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/VTK/examples/CMakeLists.txt" : {
      "ObjectId" : "720a3031f60662a42d14f08ecadd125e1369e6c6",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fix for VS2012 that has _VARIADIC_MAX set to 5. For some of the examples, this does not seem to be sufficient.\n\n#Don't set too high because it increases compiler memory usage / compile-time.\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "modules/VTK/src/CMakeLists.txt" : {
      "ObjectId" : "60e5ce966cb113932c88a6bad087a65d69d24f22",
      "LastModified" : "2014-09-23T18:24:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/VTK/tests/CMakeLists.txt" : {
      "ObjectId" : "0c08c07dabb6139a591d5a4d508deebf3959f575",
      "LastModified" : "2016-09-21T10:42:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/VTK/wrapping/CMakeLists.txt" : {
      "ObjectId" : "8b67f155d87cfaf12e0240a93c5286d030e6109d",
      "LastModified" : "2018-01-08T22:08:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# VTK material for linking.\n\n# See also the list of required modules in ../CMakeLists.txt\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# VTK 5 needs additional libraries\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# The wrapper requires access to numpy headers (see numpy.i).\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find SWIG\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Prepare the wrapping library.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "modules/core/CMakeLists.txt" : {
      "ObjectId" : "654dc98315f1bc2007d230d2c23a3659fb1e78d1",
      "LastModified" : "2016-09-21T10:42:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/core/src/CMakeLists.txt" : {
      "ObjectId" : "b3868fc8b6f495ddbc0a5579426f35feecc3898d",
      "LastModified" : "2014-09-23T18:24:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/core/tests/CMakeLists.txt" : {
      "ObjectId" : "a0869a75396c2b7bfa0061650198ea475bc45bc3",
      "LastModified" : "2016-09-21T10:42:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "superbuild/CMakeLists.txt" : {
      "ObjectId" : "3eb96783cbb1ca86953533b55b71f808fec39027",
      "LastModified" : "2016-09-21T10:42:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set CMAKE_MODULE_PATH for cmake macro/function and modules\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "superbuild/External-Boost.cmake" : {
      "ObjectId" : "2c25adbff5e3ceab665c0feb1688233746919091",
      "LastModified" : "2016-09-21T10:42:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Get and build boost\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: It IS important to download different files on different OS's:\n\n# on Unix-like systems, we need the file persmissions (only available in the .tar.gz),\n\n# while on Windows, we need CR/LF line feeds (only available in the .zip)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#VS2008\n",
        "Line" : 32,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : "#VS2010\n",
        "Line" : 34,
        "CharPositionInLine" : 32
      },
      "4" : {
        "Text" : "#VS2012\n",
        "Line" : 36,
        "CharPositionInLine" : 32
      },
      "5" : {
        "Text" : "#VS2013\n",
        "Line" : 38,
        "CharPositionInLine" : 32
      },
      "6" : {
        "Text" : "#VS2015\n",
        "Line" : 40,
        "CharPositionInLine" : 32
      },
      "CommentCount" : 7
    },
    "superbuild/External-Eigen.cmake" : {
      "ObjectId" : "96ab3523ee14ca2c166856e65110dc86af0ebd9a",
      "LastModified" : "2016-09-21T10:42:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "superbuild/External-HDF5.cmake" : {
      "ObjectId" : "d0014d75d0c7978cb76504631af5358f57511f4f",
      "LastModified" : "2017-12-14T04:43:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On Windows, find_package(HDF5) with cmake 2.8.[8,9] always ends up finding\n\n# the dlls instead of the libs. So setting the variables explicitly for\n\n# dependent projects.\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "superbuild/External-ITK.cmake" : {
      "ObjectId" : "3da4e40b1b12f8f6c4db3181c3bbff91a1f39453",
      "LastModified" : "2016-09-21T10:42:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "superbuild/External-VTK.cmake" : {
      "ObjectId" : "b655706dd196af5f1df45199fd46d9643b2eb798",
      "LastModified" : "2016-09-21T10:42:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 26
  },
  "ElapsedTime" : 1314
}