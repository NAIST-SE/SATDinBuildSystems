{
  "Repository" : "23613092",
  "Revision" : "HEAD",
  "ObjectId" : "0ae1c907970312c71f81c8656e3023772078ccba",
  "CommitTime" : "2019-03-29T08:31:39Z",
  "Files" : {
    "cmake/CMakeLists.txt" : {
      "ObjectId" : "0b3f50d3b7dd321d73c124d5536785325aac6b0f",
      "LastModified" : "2018-12-22T13:05:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#                                                                              #\n\n# This file is part of IfcOpenShell.                                           #\n\n#                                                                              #\n\n# IfcOpenShell is free software: you can redistribute it and/or modify         #\n\n# it under the terms of the Lesser GNU General Public License as published by  #\n\n# the Free Software Foundation, either version 3.0 of the License, or          #\n\n# (at your option) any later version.                                          #\n\n#                                                                              #\n\n# IfcOpenShell is distributed in the hope that it will be useful,              #\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of               #\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the                 #\n\n# Lesser GNU General Public License for more details.                          #\n\n#                                                                              #\n\n# You should have received a copy of the Lesser GNU General Public License     #\n\n# along with this program. If not, see <http://www.gnu.org/licenses/>.         #\n\n#                                                                              #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO QtViewer is deprecated ATM as it uses the 0.4 API\n\n# OPTION(BUILD_QTVIEWER \"Build IfcOpenShell Qt GUI Viewer (requires Qt 4 framework).\" OFF)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Specify where to install files\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# for *nix rpaths\n",
        "Line" : 64,
        "CharPositionInLine" : 32
      },
      "4" : {
        "Text" : "# C4521: 'identifier' : class 'type' needs to have dll-interface to be used by clients of class 'type2'\n\n# There will be couple hundreds of these so suppress them away, https://msdn.microsoft.com/en-us/library/esew7y1w.aspx\n",
        "Line" : 70,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Create cache entries if absent for environment variables\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set INSTALL_RPATH for target\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find Boost\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# filesystem is necessary for the utf-16 wpath\n",
        "Line" : 120,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Usage:\n\n# set(SOME_LIRARIES foo bar)\n\n# add_debug_variants(SOME_LIRARIES \"${SOME_LIRARIES}\" d)\n\n# \"foo bar\" -> \"optimized foo debug food optimized bar debug bard\"\n\n# or\n\n# set(SOME_LIRARIES path/foo.lib)\n\n# add_debug_variants(SOME_LIRARIES \"${SOME_LIRARIES}\" \"d\")\n\n# \"path/foo.lib\" -> \"optimized path/foo.lib debug path/food.lib\"\n\n# TODO Could be refined: take the library file extension as a parameter and\n\n# make sure the lib variable ends with not just contains it.\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# the result, \"optimized <lib> debug <lib>\", needs to be a list instead of a string\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Find Open CASCADE\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Use the found libTKernel as a template for all other OCC libraries\n\n# TODO Extract this into macro/function\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Make sure we'll handle the Windows/MSVC debug postfix convetion too.\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# OCC might require linking to Winsock depending on the version and build configuration\n",
        "Line" : 218,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Find ICU \n",
        "Line" : 223,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# NOTE icudata appears to be icudt on Windows/MSVC and icudata on others\n\n#      dl is included to resolve dlopen and friends symbols\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# TODO MinGW build would appear to be using dynamic ICU regardless of this definition.\n",
        "Line" : 246,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# required for static ICU\n",
        "Line" : 247,
        "CharPositionInLine" : 46
      },
      "19" : {
        "Text" : "# Find OpenCOLLADA\n",
        "Line" : 260,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# Use the found OpenCOLLADAFramework as a template for all other OpenCOLLADA libraries\n",
        "Line" : 296,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Make sure we'll handle the Windows/MSVC debug postfix convetion too.\n",
        "Line" : 298,
        "CharPositionInLine" : 12
      },
      "22" : {
        "Text" : "# Add release lib regardless whether release or debug found. Debug version will be appended below.\n",
        "Line" : 318,
        "CharPositionInLine" : 16
      },
      "23" : {
        "Text" : "# Make sure cross-referenced symbols between static OCC libraries get\n\n# resolved. Also add thread and rt libraries.\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# OPENCASCADE_LIBRARIES repeated three times below in order to fix cyclic dependencies - use --start-group ... --end-group instead?\n",
        "Line" : 342,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# NOTE: RelWithDebInfo and Release use O2 (= /Ox /Gl /Gy/ = Og /Oi /Ot /Oy /Ob2 /Gs /GF /Gy) by default,\n\n# with the exception with RelWithDebInfo has /Ob1 instead. /Ob2 has been observed to improve the performance\n\n# of IfcConvert significantly.\n\n# TODO Setting of /GL and /LTCG don't seem to apply for static libraries (IfcGeom, IfcParse)\n",
        "Line" : 358,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# C++\n",
        "Line" : 362,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Linker\n\n# /OPT:REF enables also /OPT:ICF and disables INCREMENTAL\n",
        "Line" : 365,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# /OPT:NOICF is recommended when /DEBUG is used (http://msdn.microsoft.com/en-us/library/xe4t6fc1.aspx)\n",
        "Line" : 368,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# GCC-like: Release should use O3 but RelWithDebInfo 02 so enforce 03. Anything other useful that could be added here?\n",
        "Line" : 373,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# Enable solution folders (free VS versions prior to 2012 don't support solution folders)\n",
        "Line" : 380,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Enforce Unicode for CRT and Win32 API calls\n",
        "Line" : 388,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# Disable warnings about unsafe C functions; we could use the safe C99 & C11 versions if we have no need for supporting old compilers.\n",
        "Line" : 390,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# required for building the big ifcXXX.objs, https://msdn.microsoft.com/en-us/library/ms173499.aspx\n",
        "Line" : 392,
        "CharPositionInLine" : 26
      },
      "34" : {
        "Text" : "# Bump up the warning level from the default 3 to 4.\n",
        "Line" : 393,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# > 2013\n",
        "Line" : 395,
        "CharPositionInLine" : 31
      },
      "36" : {
        "Text" : "# Disable overeager and false positives causing C4458 (\"declaration of 'indentifier' hides class member\"), at least for now.\n",
        "Line" : 396,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Enforce standards-conformance on VS > 2015, older Boost versions fail to compile with this    \n",
        "Line" : 399,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Link against the static VC runtime\n",
        "Line" : 403,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# TODO Make this configurable\n",
        "Line" : 404,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# -fPIC is not relevant on Windows and creates pointless warnings\n",
        "Line" : 422,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# Install pyparsing if necessary\n",
        "Line" : 453,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# Bootstrap the parser\n",
        "Line" : 475,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# Generate code\n",
        "Line" : 486,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# Prevent the schema that had just been compiled from being excluded\n",
        "Line" : 491,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# TODO Make all caps? i.e. USE_IFC2X3\n",
        "Line" : 504,
        "CharPositionInLine" : 38
      },
      "46" : {
        "Text" : "# Boost >= 1.58 requires BOOST_OPTIONAL_USE_OLD_DEFINITION_OF_NONE to build on some Linux distros.\n",
        "Line" : 509,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Detect OCC version on gcc/clang/mingw as\n\n# -std=c++11 is needed for OCCT >= 7.0.0\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# IfcParse\n",
        "Line" : 565,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# IfcGeom\n",
        "Line" : 586,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# IfcConvert\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Only set RPATHs when building shared libraries (i.e. IfcParse and\n\n# IfcGeom are dynamically linked). Not necessarily a perfect solution\n\n# but probably a good indication of whether RPATHs are necessary.\n",
        "Line" : 607,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# IfcGeomServer\n",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# CMake installation targets\n",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 54
    },
    "src/examples/CMakeLists.txt" : {
      "ObjectId" : "535dff291089817a62e9c4da11ca5490e9957361",
      "LastModified" : "2016-06-22T13:52:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#                                                                              #\n\n# This file is part of IfcOpenShell.                                           #\n\n#                                                                              #\n\n# IfcOpenShell is free software: you can redistribute it and/or modify         #\n\n# it under the terms of the Lesser GNU General Public License as published by  #\n\n# the Free Software Foundation, either version 3.0 of the License, or          #\n\n# (at your option) any later version.                                          #\n\n#                                                                              #\n\n# IfcOpenShell is distributed in the hope that it will be useful,              #\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of               #\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the                 #\n\n# Lesser GNU General Public License for more details.                          #\n\n#                                                                              #\n\n# You should have received a copy of the Lesser GNU General Public License     #\n\n# along with this program. If not, see <http://www.gnu.org/licenses/>.         #\n\n#                                                                              #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/ifcmax/CMakeLists.txt" : {
      "ObjectId" : "c9096f846fc4a3288ac21faa96d51ef370abea6b",
      "LastModified" : "2016-06-22T12:54:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#                                                                              #\n\n# This file is part of IfcOpenShell.                                           #\n\n#                                                                              #\n\n# IfcOpenShell is free software: you can redistribute it and/or modify         #\n\n# it under the terms of the Lesser GNU General Public License as published by  #\n\n# the Free Software Foundation, either version 3.0 of the License, or          #\n\n# (at your option) any later version.                                          #\n\n#                                                                              #\n\n# IfcOpenShell is distributed in the hope that it will be useful,              #\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of               #\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the                 #\n\n# Lesser GNU General Public License for more details.                          #\n\n#                                                                              #\n\n# You should have received a copy of the Lesser GNU General Public License     #\n\n# along with this program. If not, see <http://www.gnu.org/licenses/>.         #\n\n#                                                                              #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# All recent versions of 3ds Max (2014 and newer) are 64-bit only so assume lib/x64 directory\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: find the minimal subset of 3dsmax libraries to reference\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/ifcwrap/CMakeLists.txt" : {
      "ObjectId" : "2401b8d43ecda65bde849692cad0b97d10bf70e2",
      "LastModified" : "2017-10-06T14:37:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#                                                                              #\n\n# This file is part of IfcOpenShell.                                           #\n\n#                                                                              #\n\n# IfcOpenShell is free software: you can redistribute it and/or modify         #\n\n# it under the terms of the Lesser GNU General Public License as published by  #\n\n# the Free Software Foundation, either version 3.0 of the License, or          #\n\n# (at your option) any later version.                                          #\n\n#                                                                              #\n\n# IfcOpenShell is distributed in the hope that it will be useful,              #\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of               #\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the                 #\n\n# Lesser GNU General Public License for more details.                          #\n\n#                                                                              #\n\n# You should have received a copy of the Lesser GNU General Public License     #\n\n# along with this program. If not, see <http://www.gnu.org/licenses/>.         #\n\n#                                                                              #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# NOTE PYTHONLIBS_FOUND and PYTHONINTERP_FOUND cannot seem to be trusted so\n\n# we need further checks to see whether the packages were actually found or not.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOTE Workaround for most likely missing debug Python libraries on Windows (requires Python built from the source).\n\n# Python 3.5 intaller and onwards will have an option to install the debug libraries too.\n\n# NOTE PYTHON_DEBUG_LIBRARIES appears to be a deprecated variable\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On osx there is some state in the python dylib. With `-Wl,undefined,suppress` we can ignore the missing symbols at compile time.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Try to find the Python interpreter to get the site-packages\n\n# directory in which the wrapper can be installed.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/qtviewer/CMakeLists.txt" : {
      "ObjectId" : "a1649011aae621325a9895d00bc5256f86154e82",
      "LastModified" : "2016-05-15T13:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#                                                                              #\n\n# This file is part of IfcOpenShell.                                           #\n\n#                                                                              #\n\n# IfcOpenShell is free software: you can redistribute it and/or modify         #\n\n# it under the terms of the Lesser GNU General Public License as published by  #\n\n# the Free Software Foundation, either version 3.0 of the License, or          #\n\n# (at your option) any later version.                                          #\n\n#                                                                              #\n\n# IfcOpenShell is distributed in the hope that it will be useful,              #\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of               #\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the                 #\n\n# Lesser GNU General Public License for more details.                          #\n\n#                                                                              #\n\n# You should have received a copy of the Lesser GNU General Public License     #\n\n# along with this program. If not, see <http://www.gnu.org/licenses/>.         #\n\n#                                                                              #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find QT header files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find QT header files\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#http://www.qtcentre.org/wiki/index.php?title=Compiling_Qt4_apps_with_CMake\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "win/patches/88af392_adm-cmake-occt_defs_flags.cmake" : {
      "ObjectId" : "cd4c46531bc8674819dc2302f4a70351ba6951cd",
      "LastModified" : "2018-03-04T09:45:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# force option /fp:precise for Visual Studio projects.\n\n#\n\n# Note that while this option is default for MSVC compiler, Visual Studio\n\n# project can be switched later to use Intel Compiler (ICC).\n\n# Enforcing -fp:precise ensures that in such case ICC will use correct\n\n# option instead of its default -fp:fast which is harmful for OCCT.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set compiler short name and choose SSE2 option for appropriate MSVC compilers\n\n# ONLY for 32-bit\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# enable structured exceptions for MSVC\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# remove _WINDOWS flag if it exists\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# remove WIN32 flag if it exists\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# remove _WINDOWS flag if it exists\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# remove WIN32 flag if it exists\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# remove DEBUG flag if it exists\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# enable parallel compilation on MSVC 9 and above\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# generate a single response file which enlist all of the object files\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# increase compiler warnings level (-W4 for MSVC, -Wextra for GCC)\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set default release optimization option to O2 instead of O3, since in\n\n# some OCCT related examples, this gives significantly smaller binaries\n\n# at comparable performace with MinGW-w64.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# workaround bugs in mingw with vtable export\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# CLang can be used with both libstdc++ and libc++, however on OS X libstdc++ is outdated.\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Optimize size of binaries\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# IfcOpenShell begin\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# IfcOpenShell end\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "win/patches/88af392_adm-cmake-occt_toolkit.cmake" : {
      "ObjectId" : "6d27487f57436481d1be23cf6c13a1ce3505db91",
      "LastModified" : "2018-03-04T09:45:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# script for each OCCT toolkit\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# parce PACKAGES file\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get all used packages from toolkit\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TKService contains platform-dependent packages: Xw and WNT\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# do nothing\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Generate Flex and Bison files\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# flex files\n",
        "Line" : 34,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# bison files\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# header files\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# IfcOpenShell begin\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# IfcOpenShell end\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# do not append version to the filename\n",
        "Line" : 210,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# parce EXTERNLIB file\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# get CSF_ value\n",
        "Line" : 238,
        "CharPositionInLine" : 13
      },
      "14" : {
        "Text" : "# prepare a list from a string with whitespaces\n",
        "Line" : 269,
        "CharPositionInLine" : 12
      },
      "15" : {
        "Text" : "# Update list of used VTK libraries if OpenGL2 Rendering BackEnd is used.\n\n# Add VTK_OPENGL2_BACKEND definition.\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# suppress deprecation warnings inside OCCT itself for old gcc versions with unavailable Standard_DISABLE_DEPRECATION_WARNINGS\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# use Cotire to accelerate build via usage of precompiled headers\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# prevent definition of min and max macros through inclusion of Windows.h\n\n# (for cotire builds)\n",
        "Line" : 319,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# avoid warnings on deprecated names from standard C library (see strsafe.h)\n",
        "Line" : 322,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# avoid \"std::Equal1\" warning in QANCollection_Stl.cxx in debug mode\n\n# suggesting using msvc \"Checked Iterators\"\n",
        "Line" : 324,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Exclude system-provided glext.h.\n\n# These macros are already defined within OpenGl_GlFunctions.hxx,\n\n# however we have to duplicate them here for building TKOpenGl with PCH.\n",
        "Line" : 329,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# workaround for old gcc\n",
        "Line" : 335,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# unity builds are not used since they do not add speed but cause conflicts\n\n# in TKV3d\n",
        "Line" : 341,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 24
    },
    "win/patches/89aebde_adm-cmake-occt_defs_flags.cmake" : {
      "ObjectId" : "746e1f12d963ed5b1e6b1c080b6e1b780374ff7c",
      "LastModified" : "2018-03-04T09:45:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# force option /fp:precise for Visual Studio projects.\n\n#\n\n# Note that while this option is default for MSVC compiler, Visual Studio\n\n# project can be switched later to use Intel Compiler (ICC).\n\n# Enforcing -fp:precise ensures that in such case ICC will use correct\n\n# option instead of its default -fp:fast which is harmful for OCCT.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set compiler short name and choose SSE2 option for appropriate MSVC compilers\n\n# ONLY for 32-bit\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# enable structured exceptions for MSVC\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# remove _WINDOWS flag if it exists\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# remove WIN32 flag if it exists\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# remove _WINDOWS flag if it exists\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# remove WIN32 flag if it exists\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# remove DEBUG flag if it exists\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# enable parallel compilation on MSVC 9 and above\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# generate a single response file which enlist all of the object files\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# increase compiler warnings level (-W4 for MSVC, -Wextra for GCC)\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set default release optimization option to O2 instead of O3, since in\n\n# some OCCT related examples, this gives significantly smaller binaries\n\n# at comparable performace with MinGW-w64.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# workaround bugs in mingw with vtable export\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Optimize size of binaries\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# IfcOpenShell begin\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# IfcOpenShell end\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "win/patches/89aebde_adm-cmake-occt_toolkit.cmake" : {
      "ObjectId" : "495f3f964fab1bb7dc0657903667a31142295b9e",
      "LastModified" : "2018-03-04T09:45:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# script for each OCCT toolkit\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# parce PACKAGES file\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get all used packages from toolkit\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TKService contains platform-dependent packages: Xw and WNT\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# do nothing\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Generate Flex and Bison files\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# flex files\n",
        "Line" : 34,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# bison files\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# header files\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# IfcOpenShell begin\n\n# if (MSVC)\n\n#   install (FILES  ${CMAKE_BINARY_DIR}/${OS_WITH_BIT}/${COMPILER}/bind/${PROJECT_NAME}.pdb\n\n#            CONFIGURATIONS Debug\n\n#            DESTINATION \"${INSTALL_DIR_BIN}\\${OCCT_INSTALL_BIN_LETTER}\")\n\n# endif()\n\n# IfcOpenShell end\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# do not append version to the filename\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# parce EXTERNLIB file\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# get CSF_ value\n",
        "Line" : 222,
        "CharPositionInLine" : 13
      },
      "13" : {
        "Text" : "# prepare a list from a string with whitespaces\n",
        "Line" : 225,
        "CharPositionInLine" : 10
      },
      "14" : {
        "Text" : "# Update list of used VTK libraries if OpenGL2 Rendering BackEnd is used.\n\n# Add VTK_OPENGL2_BACKEND definition.\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "win/patches/occt-V7_0_0-9059ca1_occt_defs_flags.cmake" : {
      "ObjectId" : "209d92c3fa80d26d7f17b2cbd67cd821cb647a4f",
      "LastModified" : "2018-03-04T09:45:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# force option /fp:precise for Visual Studio projects.\n\n#\n\n# Note that while this option is default for MSVC compiler, Visual Studio\n\n# project can be switched later to use Intel Compiler (ICC).\n\n# Enforcing -fp:precise ensures that in such case ICC will use correct\n\n# option instead of its default -fp:fast which is harmful for OCCT.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set compiler short name and choose SSE2 option for appropriate MSVC compilers\n\n# ONLY for 32-bit\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# enable structured exceptions for MSVC\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# remove _WINDOWS flag if it exists\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# remove WIN32 flag if it exists\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# remove _WINDOWS flag if it exists\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# remove WIN32 flag if it exists\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# remove DEBUG flag if it exists\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# enable parallel compilation on MSVC 9 and above\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# generate a single response file which enlist all of the object files\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# increase compiler warnings level (-W4 for MSVC, -Wextra for GCC)\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# workaround bugs in mingw with vtable export\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Optimize size of binaries\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# IfcOpenShell begin\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# IfcOpenShell end",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "win/patches/occt-V7_0_0-9059ca1_occt_toolkit.cmake" : {
      "ObjectId" : "c69b1ef3b93bc53c9e5402b1342488467188bef3",
      "LastModified" : "2018-03-04T09:45:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# script for each OCCT toolkit\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# parce PACKAGES file\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get all used packages from toolkit\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TKService contains platform-dependent packages: Xw and WNT\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# do nothing\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Generate Flex and Bison files\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# flex files\n",
        "Line" : 30,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# bison files\n",
        "Line" : 34,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# header files\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# IfcOpenShell begin\n\n#  if (MSVC)\n\n#    install (FILES  ${CMAKE_BINARY_DIR}/${OS_WITH_BIT}/${COMPILER}/bind/${PROJECT_NAME}.pdb\n\n#             CONFIGURATIONS Debug\n\n#             DESTINATION \"${INSTALL_DIR}/${INSTALL_DIR_BIN}\\${OCCT_INSTALL_BIN_LETTER}\")\n\n#  endif()\n\n# IfcOpenShell end\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# do not append version to the filename\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# parce EXTERNLIB file\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# get CSF_ value\n",
        "Line" : 198,
        "CharPositionInLine" : 13
      },
      "13" : {
        "Text" : "# prepare a list from a string with whitespaces\n",
        "Line" : 201,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 14
    }
  },
  "FileTypes" : {
    "CMAKE" : 11
  },
  "ElapsedTime" : 1952
}