{
  "Repository" : "5233492",
  "Revision" : "HEAD",
  "ObjectId" : "0b2acb6ae512388458304a00086a1c65387f0626",
  "CommitTime" : "2014-02-27T18:23:03Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "b2c9d9814fc68369050ea020177c4db0a1fe8f7d",
      "LastModified" : "2014-01-18T16:25:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################################################\n\n#\n\n#       General\n\n#\n\n########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version de cmake minimum\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Projet bataille spatiale\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build type par défaut à Debug\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Localisation de différents dossiers\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Changement de quelques dossiers utilisés par CMake\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Change les flags de compilation\n\n# -Werror\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "########################################################################\n\n#\n\n#       Librairies\n\n#\n\n########################################################################\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# On inclut le chargement de la SFML\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "########################################################################\n\n#\n\n#       Sources\n\n#\n\n########################################################################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# On inclut les sources\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########################################################################\n\n#\n\n#       Ressources\n\n#\n\n########################################################################\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# On inclut la copie des ressources\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "build.xml" : {
      "ObjectId" : "4d503b2c5486268d76fc04a4a48d674f4689b954",
      "LastModified" : "2014-01-13T16:11:42Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Project ",
        "Line" : 3,
        "CharPositionInLine" : 17
      },
      "1" : {
        "Text" : " Init folders ",
        "Line" : 5,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : " Generate CMake Debug makefiles ",
        "Line" : 11,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : " Generate CMake Release makefiles ",
        "Line" : 20,
        "CharPositionInLine" : 43
      },
      "4" : {
        "Text" : " Generate Documentation ",
        "Line" : 29,
        "CharPositionInLine" : 33
      },
      "5" : {
        "Text" : " Clean the project ",
        "Line" : 36,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 6
    },
    "cmake/modules/FindSFML.cmake" : {
      "ObjectId" : "fa4a417bfaf35370e9be6b4d72179aaacc4328a6",
      "LastModified" : "2014-01-13T16:11:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This script locates the SFML library\n\n# ------------------------------------\n\n#\n\n# Usage\n\n# -----\n\n#\n\n# When you try to locate the SFML libraries, you must specify which modules you want to use (system, window, graphics, network, audio, main).\n\n# If none is given, the SFML_LIBRARIES variable will be empty and you'll end up linking to nothing.\n\n# example:\n\n#   find_package(SFML COMPONENTS graphics window system) // find the graphics, window and system modules\n\n#\n\n# You can enforce a specific version, either MAJOR.MINOR or only MAJOR.\n\n# If nothing is specified, the version won't be checked (ie. any version will be accepted).\n\n# example:\n\n#   find_package(SFML COMPONENTS ...)     // no specific version required\n\n#   find_package(SFML 2 COMPONENTS ...)   // any 2.x version\n\n#   find_package(SFML 2.4 COMPONENTS ...) // version 2.4 or greater\n\n#\n\n# By default, the dynamic libraries of SFML will be found. To find the static ones instead,\n\n# you must set the SFML_STATIC_LIBRARIES variable to TRUE before calling find_package(SFML ...).\n\n# In case of static linking, the SFML_STATIC macro will also be defined by this script.\n\n# example:\n\n#   set(SFML_STATIC_LIBRARIES TRUE)\n\n#   find_package(SFML 2 COMPONENTS network system)\n\n#\n\n# On Mac OS X if SFML_STATIC_LIBRARIES is not set to TRUE then by default CMake will search for frameworks unless\n\n# CMAKE_FIND_FRAMEWORK is set to \"NEVER\" for example. Please refer to CMake documentation for more details.\n\n# Moreover, keep in mind that SFML frameworks are only available as release libraries unlike dylibs which\n\n# are available for both release and debug modes.\n\n#\n\n# If SFML is not installed in a standard path, you can use the SFML_ROOT CMake (or environment) variable\n\n# to tell CMake where SFML is.\n\n#\n\n# Output\n\n# ------\n\n#\n\n# This script defines the following variables:\n\n# - For each specified module XXX (system, window, graphics, network, audio, main):\n\n#   - SFML_XXX_LIBRARY_DEBUG:   the name of the debug library of the xxx module (set to SFML_XXX_LIBRARY_RELEASE is no debug version is found)\n\n#   - SFML_XXX_LIBRARY_RELEASE: the name of the release library of the xxx module (set to SFML_XXX_LIBRARY_DEBUG is no release version is found)\n\n#   - SFML_XXX_LIBRARY:         the name of the library to link to for the xxx module (includes both debug and optimized names if necessary)\n\n#   - SFML_XXX_FOUND:           true if either the debug or release library of the xxx module is found\n\n# - SFML_LIBRARIES:   the list of all libraries corresponding to the required modules\n\n# - SFML_FOUND:       true if all the required modules are found\n\n# - SFML_INCLUDE_DIR: the path where SFML headers are located (the directory containing the SFML/Config.hpp file)\n\n#\n\n# example:\n\n#   find_package(SFML 2 COMPONENTS system window graphics audio REQUIRED)\n\n#   include_directories(${SFML_INCLUDE_DIR})\n\n#   add_executable(myapp ...)\n\n#   target_link_libraries(myapp ${SFML_LIBRARIES})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# define the SFML_STATIC macro if static build was chosen\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# deduce the libraries suffix from the options\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# find the SFML include directory\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Fink\n\n# DarwinPorts\n\n# Blastwave\n",
        "Line" : 74,
        "CharPositionInLine" : 23
      },
      "5" : {
        "Text" : "# check the version number\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# extract the major and minor version numbers from SFML/Config.hpp\n\n# we have to handle framework a little bit differently :\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# if we could extract them, compare with the requested version number\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# transform version numbers to an integer\n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# compare them\n",
        "Line" : 100,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# SFML version is < 2.0\n",
        "Line" : 105,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# find the requested modules\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# will be set to false if one of the required modules is not found\n",
        "Line" : 115,
        "CharPositionInLine" : 21
      },
      "13" : {
        "Text" : "# no suffix for sfml-main, it is always a static library\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# debug library\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# release library\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# library found\n",
        "Line" : 150,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# if both are found, set SFML_XXX_LIBRARY to contain both\n",
        "Line" : 153,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# if only one debug/release variant is found, set the other to be equal to the found one\n",
        "Line" : 159,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# debug and not release\n",
        "Line" : 161,
        "CharPositionInLine" : 12
      },
      "20" : {
        "Text" : "# release and not debug\n",
        "Line" : 166,
        "CharPositionInLine" : 12
      },
      "21" : {
        "Text" : "# library not found\n",
        "Line" : 171,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# mark as advanced\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# add to the global list of libraries\n",
        "Line" : 183,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# handle errors\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# SFML version not ok\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# include directory or library not found\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# fatal error\n",
        "Line" : 198,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# error but continue\n",
        "Line" : 201,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# handle success\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "cmake/ressources.cmake" : {
      "ObjectId" : "adc0582e94cd18dd45e77daf26e2712260dbe1d3",
      "LastModified" : "2014-01-13T16:11:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Dossier où copier les ressources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# On supprime l'éventuel dossier ressources existant\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# On copie le dossier ressources\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/sfml.cmake" : {
      "ObjectId" : "2d748bcdf528aa0fff0dd436e800863d067f02a8",
      "LastModified" : "2014-01-18T16:25:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Les composants de la SFML\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# On lie la SFML de façon dynamique ou pas\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# On ajoute quelques chemins au dossier où findSFML va chercher\n\n# selon que la SFML soit liée statiquement ou non\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# On tente de trouver la SFML\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Si elle est trouvée\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# On inclut les headers\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "cmake/source.cmake" : {
      "ObjectId" : "352dab71851de6a60a4765179f8596b45a8359a2",
      "LastModified" : "2014-02-13T13:56:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n#\n\n#       Sources\n\n#\n\n########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Includes\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Executable client \n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Executable serveur\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Exécutable Master Server\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Que compiler\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Si rien n'est à compiler, erreur\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Sources du client\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Sources du serveur\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Sources du Master\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Sources communes\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Ajout de l'exécutable client\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Ajout de l'exécutable serveur\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Ajout de l'exécutable master server\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Changement des flags selon les éxecutables pour windows\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# -mwindows pour le client\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# -mconsole pour le serveur\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# -mconsole pour le master\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 18
    },
    "src/tests/network/Makefile" : {
      "ObjectId" : "39ec021dfb490c3c8af0b682088dca0b43a91be9",
      "LastModified" : "2014-01-13T16:11:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 5,
    "MAKEFILE" : 1,
    "ANT" : 1
  },
  "ElapsedTime" : 2288
}