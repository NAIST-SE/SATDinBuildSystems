{
  "Repository" : "77531478",
  "Revision" : "HEAD",
  "ObjectId" : "915dcc207b30b8d8bfbd9d555bc66006e096270c",
  "CommitTime" : "2019-03-24T14:42:44Z",
  "Files" : {
    "Marlin/Makefile" : {
      "ObjectId" : "89f305773816f23f400abcc475988c01142c17f5",
      "LastModified" : "2019-03-20T03:48:06Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Marlin Firmware Arduino Project Makefile\n\n#\n\n# Makefile Based on:\n\n# Arduino 0011 Makefile\n\n# Arduino adaptation by mellis, eighthave, oli.keller\n\n# Marlin adaption by Daid\n\n# Marlin 2.0 support and RELOC_WORKAROUND by @marcio-ao\n\n#\n\n# This has been tested with Arduino 0022.\n\n#\n\n# This makefile allows you to build sketches from the command line\n\n# without the Arduino environment (or Java).\n\n#\n\n# Detailed instructions for using the makefile:\n\n#\n\n#  1. Modify the line containing \"ARDUINO_INSTALL_DIR\" to point to the directory that\n\n#     contains the Arduino installation (for example, under Mac OS X, this\n\n#     might be /Applications/Arduino.app/Contents/Resources/Java).\n\n#\n\n#  2. Modify the line containing \"UPLOAD_PORT\" to refer to the filename\n\n#     representing the USB or serial connection to your Arduino board\n\n#     (e.g. UPLOAD_PORT = /dev/tty.USB0).  If the exact name of this file\n\n#     changes, you can use * as a wild card (e.g. UPLOAD_PORT = /dev/tty.usb*).\n\n#\n\n#  3. Set the line containing \"MCU\" to match your board's processor.\n\n#     Older one's are atmega8 based, newer ones like Arduino Mini, Bluetooth\n\n#     or Diecimila have the atmega168.  If you're using a LilyPad Arduino,\n\n#     change F_CPU to 8000000. If you are using Gen7 electronics, you\n\n#     probably need to use 20000000. Either way, you must regenerate\n\n#     the speed lookup table with create_speed_lookuptable.py.\n\n#\n\n#  4. Type \"make\" and press enter to compile/verify your program.\n\n#\n\n#  5. Type \"make upload\", reset your Arduino board, and press enter to\n\n#     upload your program to the Arduino board.\n\n#\n\n# Note that all settings at the top of this file can be overriden from\n\n# the command line with, for example, \"make HARDWARE_MOTHERBOARD=71\"\n\n#\n\n# To compile for RAMPS (atmega2560) with Arduino 1.6.9 at root/arduino you would use...\n\n#\n\n#   make ARDUINO_VERSION=10609 AVR_TOOLS_PATH=/root/arduino/hardware/tools/avr/bin/ \\\n#   HARDWARE_MOTHERBOARD=33 ARDUINO_INSTALL_DIR=/root/arduino\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# To compile and upload simply add \"upload\" to the end of the line...\n\n#\n\n#   make ARDUINO_VERSION=10609 AVR_TOOLS_PATH=/root/arduino/hardware/tools/avr/bin/ \\\n#   HARDWARE_MOTHERBOARD=33 ARDUINO_INSTALL_DIR=/root/arduino upload\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# If uploading doesn't work try adding the parameter \"AVRDUDE_PROGRAMMER=wiring\" or\n\n# start upload manually (using stk500) like so:\n\n#\n\n#   avrdude -C /root/arduino/hardware/tools/avr/etc/avrdude.conf -v -p m2560 -c stk500 \\\n#   -U flash:w:applet/Marlin.hex:i -P /dev/ttyUSB0\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Or, try disconnecting USB to power down and then reconnecting before running avrdude.\n\n#\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This defines the board to compile for (see boards.h for your board's ID)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Arduino source install directory, and version number\n\n# On most linuxes this will be /usr/share/arduino\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The installed Libraries are in the User folder\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# You can optionally set a path to the avr-gcc tools. Requires a trailing slash. (ex: /usr/local/avr-gcc/bin)\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Programmer configuration\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# on most linuxes this will be /dev/ttyACM0 or /dev/ttyACM1\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Directory used to build files in, contains all the build files, from object files to the final hex file\n\n#on linux it is best to put an absolute path like /home/username/tmp .\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This defines whether Liquid_TWI2 support will be built\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# this defines if Wire is needed\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# this defines if U8GLIB is needed (may require RELOC_WORKAROUND)\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# this defines whether to include the Trinamic TMC2630Stepper\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "############\n\n# Try to automatically determine whether RELOC_WORKAROUND is needed based\n\n# on GCC versions:\n\n#   http://www.avrfreaks.net/comment/1789106#comment-1789106\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#ifeq ($(shell test $(CC_VER) -lt 40901 && echo 1),1)\n\n#  @echo \"This version of GCC is likely broken. Enabling relocation workaround.\"\n\n#\tRELOC_WORKAROUND = 1\n\n#endif\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "############################################################################\n\n# Below here nothing should be changed...\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Here the Arduino variant is selected by the board type\n\n# HARDWARE_VARIANT = \"arduino\", \"Sanguino\", \"Gen7\", ...\n\n# MCU = \"atmega1280\", \"Mega2560\", \"atmega2560\", \"atmega644p\", ...\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# No motherboard selected\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#\n\n# RAMPS 1.3 / 1.4 - ATmega1280, ATmega2560\n\n#\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# MEGA/RAMPS up to 1.2\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# RAMPS 1.3 (Power outputs: Hotend, Fan, Bed)\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# RAMPS 1.3 (Power outputs: Hotend0, Hotend1, Bed)\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# RAMPS 1.3 (Power outputs: Hotend, Fan0, Fan1)\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# RAMPS 1.3 (Power outputs: Hotend0, Hotend1, Fan)\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# RAMPS 1.3 (Power outputs: Spindle, Controller Fan)\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# RAMPS 1.4 (Power outputs: Hotend, Fan, Bed)\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# RAMPS 1.4 (Power outputs: Hotend0, Hotend1, Bed)\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# RAMPS 1.4 (Power outputs: Hotend, Fan0, Fan1)\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# RAMPS 1.4 (Power outputs: Hotend0, Hotend1, Fan)\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# RAMPS 1.4 (Power outputs: Spindle, Controller Fan)\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# RAMPS Plus 3DYMY (Power outputs: Hotend, Fan, Bed)\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# RAMPS Plus 3DYMY (Power outputs: Hotend0, Hotend1, Bed)\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# RAMPS Plus 3DYMY (Power outputs: Hotend, Fan0, Fan1)\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# RAMPS Plus 3DYMY (Power outputs: Hotend0, Hotend1, Fan)\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# RAMPS Plus 3DYMY (Power outputs: Spindle, Controller Fan)\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#\n\n# RAMPS Derivatives - ATmega1280, ATmega2560\n\n#\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# 3Drag Controller\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Velleman K8200 Controller (derived from 3Drag Controller)\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Velleman K8400 Controller (derived from 3Drag Controller)\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# 2PrintBeta BAM&DICE with STK drivers\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# 2PrintBeta BAM&DICE Due with STK drivers\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# MKS BASE v1.0\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# MKS v1.5 with Allegro A4982 stepper drivers\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# MKS BASE 1.0 with Heroic HR4982 stepper drivers\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# MKS GEN v1.3 or 1.4\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# MKS GEN L\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# zrib V2.0 control board (Chinese knock off RAMPS replica)\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Felix 2.0+ Electronics Board (RAMPS like)\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Invent-A-Part RigidBoard\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Invent-A-Part RigidBoard V2\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Sainsmart 2-in-1 board\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Ultimaker\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Ultimaker (Older electronics. Pre 1.5.4. This is rare)\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Azteeg X3\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Azteeg X3 Pro\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Ultimainboard 2.x (Uses TEMP_SENSOR 20)\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Rumba\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Raise3D Rumba\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Rapide Lite RL200 Rumba\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Formbot T-Rex 2 Plus\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Formbot T-Rex 3\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Formbot Raptor\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Formbot Raptor 2\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# bq ZUM Mega 3D\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# MakeBoard Mini v2.1.2 is a control board sold by MicroMake\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# TriGorilla Anycubic version 1.3 based on RAMPS EFB\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# TriGorilla Anycubic version 1.4 based on RAMPS EFB\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Creality: Ender-4, CR-8\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Creality: CR10S, CR20, CR-X\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Fysetc F6\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Duplicator i3 Plus\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# VORON\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# TRONXY V3 1.0\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "#\n\n# Other ATmega1280, ATmega2560\n\n#\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Cartesio CN Controls V11\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Cartesio CN Controls V12\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Cheaptronic v1.0\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Cheaptronic v2.0\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Makerbot Mightyboard Revision E\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Megatronics\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Megatronics v2.0\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Megatronics v3.0\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Megatronics v3.1\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Rambo\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Mini-Rambo\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Mini-Rambo 1.0a\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# Einsy Rambo\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# Einsy Retro\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# Elefu Ra Board (v3)\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# Leapfrog\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# Mega controller\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# abee Scoovo X9H\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# Geeetech GT2560 Rev B for Mecreator2\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# Geeetech GT2560 Rev. A\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# Geeetech GT2560 Rev. A+ (with auto level probe)\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# Geeetech GT2560 Rev B for A10(M/D)\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# Geeetech GT2560 Rev B for A20(M/D)\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "#\n\n# ATmega1281, ATmega2561\n\n#\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "#\n\n# Sanguinololu and Derivatives - ATmega644P, ATmega1284P\n\n#\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# Sanguinololu < 1.2\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# Sanguinololu 1.2 and above\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# Melzi\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# Melzi with ATmega1284 (MaKr3d version)\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# Melzi Creality3D board (for CR-10 etc)\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# Melzi Malyan M150 board\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "# Tronxy X5S\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "# STB V1.1\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "# Azteeg X1\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "# Anet 1.0 (Melzi clone)\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "#\n\n# Other ATmega644P, ATmega644, ATmega1284P\n\n#\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "# Gen3 Monolithic Electronics\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "# Gen3+\n",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "# Gen6\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "# Gen6 deluxe\n",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "# Gen7 custom (Alfons3 Version)\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "# Gen7 v1.1, v1.2\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "# Gen7 v1.3\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "# Gen7 v1.4\n",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "# Alpha OMCA board\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "# Final OMCA board\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "# Sethi 3D_1\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "#\n\n# Teensyduino - AT90USB1286, AT90USB1286P\n\n#\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "# Teensylu\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "125" : {
        "Text" : "# Printrboard (AT90USB1286)\n",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "# Printrboard Revision F (AT90USB1286)\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "127" : {
        "Text" : "# Brainwave (AT90USB646)\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "128" : {
        "Text" : "# Brainwave Pro (AT90USB1286)\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "129" : {
        "Text" : "# SAV Mk-I (AT90USB1286)\n",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "130" : {
        "Text" : "# Teensy++2.0 (AT90USB1286)\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "131" : {
        "Text" : "# 5DPrint D8 Driver Board\n",
        "Line" : 430,
        "CharPositionInLine" : 0
      },
      "132" : {
        "Text" : "# UltiMachine Archim1 (with DRV8825 drivers)\n",
        "Line" : 435,
        "CharPositionInLine" : 0
      },
      "133" : {
        "Text" : "# UltiMachine Archim2 (with TMC2130 drivers)\n",
        "Line" : 441,
        "CharPositionInLine" : 0
      },
      "134" : {
        "Text" : "# Be sure to regenerate speed_lookuptable.h with create_speed_lookuptable.py\n\n# if you are setting this to something other than 16MHz\n\n# Set to 16Mhz if not yet set.\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "135" : {
        "Text" : "# Set to arduino, ATmega2560 if not yet set.\n",
        "Line" : 454,
        "CharPositionInLine" : 0
      },
      "136" : {
        "Text" : "# Arduino contained the main source code for the Arduino\n\n# Libraries, the \"hardware variant\" are for boards\n\n# that derives from that, and their source are present in\n\n# the main Marlin source directory\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "137" : {
        "Text" : "# VPATH tells make to look into these directory for source files,\n\n# there is no need to specify explicit pathnames as long as the\n\n# directory is added here\n",
        "Line" : 465,
        "CharPositionInLine" : 0
      },
      "138" : {
        "Text" : "# The Makefile for previous versions of Marlin used VPATH for all\n\n# source files, but for Marlin 2.0, we use VPATH only for arduino\n\n# library files.\n",
        "Line" : 469,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "# U8glib\n",
        "Line" : 477,
        "CharPositionInLine" : 0
      },
      "140" : {
        "Text" : "# KD Edition\n",
        "Line" : 481,
        "CharPositionInLine" : 0
      },
      "141" : {
        "Text" : "#LIB_SRC += u8g_ll_api.c u8g_bitmap.c u8g_clip.c u8g_com_null.c u8g_delay.c u8g_page.c u8g_pb.c u8g_pb16h1.c u8g_rect.c u8g_state.c u8g_font.c u8g_font_data.c u8g_dev_uc1701_mini12864.c\n",
        "Line" : 577,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "#Check for Arduino 1.0.0 or higher and use the correct source files for that version\n",
        "Line" : 589,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "# Name of this Makefile (used for \"make depend\").\n",
        "Line" : 598,
        "CharPositionInLine" : 0
      },
      "144" : {
        "Text" : "# Debugging format.\n\n# Native formats for AVR-GCC's -g are stabs [default], or dwarf-2.\n\n# AVR (extended) COFF requires stabs, plus an avr-objcopy run.\n",
        "Line" : 601,
        "CharPositionInLine" : 0
      },
      "145" : {
        "Text" : "# Program settings\n",
        "Line" : 610,
        "CharPositionInLine" : 0
      },
      "146" : {
        "Text" : "# Place -D or -U options here\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "147" : {
        "Text" : "# Add all the source directories as include directories too\n",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "148" : {
        "Text" : "# Compiler flag to set the C/CPP Standard level.\n",
        "Line" : 645,
        "CharPositionInLine" : 0
      },
      "149" : {
        "Text" : "#CEXTRA = -Wa,-adhlns=$(<:.c=.lst)\n",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "150" : {
        "Text" : "#ASFLAGS = -Wa,-adhlns=$(<:.S=.lst),-gstabs\n",
        "Line" : 661,
        "CharPositionInLine" : 0
      },
      "151" : {
        "Text" : "# Programming support using avrdude. Settings and variables.\n",
        "Line" : 665,
        "CharPositionInLine" : 0
      },
      "152" : {
        "Text" : "# Since Marlin 2.0, the source files may be distributed into several\n\n# different directories, so it is necessary to find them recursively\n",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "153" : {
        "Text" : "# Define all object files.\n",
        "Line" : 683,
        "CharPositionInLine" : 0
      },
      "154" : {
        "Text" : "# Define all listing files.\n",
        "Line" : 690,
        "CharPositionInLine" : 0
      },
      "155" : {
        "Text" : "# Combine all necessary flags and optional flags.\n\n# Add target processor to flags.\n",
        "Line" : 693,
        "CharPositionInLine" : 0
      },
      "156" : {
        "Text" : "# set V=1 (eg, \"make V=1\") to print the full commands etc.\n",
        "Line" : 699,
        "CharPositionInLine" : 0
      },
      "157" : {
        "Text" : "# Create required build hierarchy if it does not exist\n",
        "Line" : 708,
        "CharPositionInLine" : 0
      },
      "158" : {
        "Text" : "# Default target.\n",
        "Line" : 712,
        "CharPositionInLine" : 0
      },
      "159" : {
        "Text" : "# Program the device.\n\n# Do not try to reset an Arduino if it's not one\n",
        "Line" : 723,
        "CharPositionInLine" : 0
      },
      "160" : {
        "Text" : "# Display size of file.\n",
        "Line" : 734,
        "CharPositionInLine" : 0
      },
      "161" : {
        "Text" : "# Convert ELF to COFF for use in debugging / simulating in AVR Studio or VMLAB.\n",
        "Line" : 745,
        "CharPositionInLine" : 0
      },
      "162" : {
        "Text" : "# Create extended listing file from ELF output file.\n",
        "Line" : 772,
        "CharPositionInLine" : 0
      },
      "163" : {
        "Text" : "# Create a symbol table from ELF output file.\n",
        "Line" : 776,
        "CharPositionInLine" : 0
      },
      "164" : {
        "Text" : "# Link: create ELF output file from library.\n",
        "Line" : 780,
        "CharPositionInLine" : 0
      },
      "165" : {
        "Text" : "# Object files that were found in \"src\" will be stored in $(BUILD_DIR)\n\n# in directories that mirror the structure of \"src\"\n",
        "Line" : 786,
        "CharPositionInLine" : 0
      },
      "166" : {
        "Text" : "# Object files for Arduino libs will be created in $(BUILD_DIR)/arduino\n",
        "Line" : 797,
        "CharPositionInLine" : 0
      },
      "167" : {
        "Text" : "# Target: clean project.\n",
        "Line" : 807,
        "CharPositionInLine" : 0
      },
      "168" : {
        "Text" : "# Automaticaly include the dependency files created by gcc\n",
        "Line" : 815,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 169
    },
    "buildroot/share/cmake/CMakeLists.txt" : {
      "ObjectId" : "1308f8bf97539b23dde1157f654acefb9fe9aea6",
      "LastModified" : "2017-09-21T00:48:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#====================================================================#\n\n# Usage under Linux:                                                 #\n\n#                                                                    #\n\n#    From Marlin/buildroot/share/cmake folder:                       #\n\n#        mkdir -p build && cd build                                  #\n\n#        cmake ..                                                    #\n\n#        make                                                        #\n\n#                                                                    #\n\n# Usage under Windows:                                               #\n\n#                                                                    #\n\n#    From Marlin/buildroot/share/cmake folder:                       #\n\n#        mkdir build && cd build                                     #\n\n#        cmake -G\"Unix Makefiles\" ..                                 #\n\n#        make                                                        #\n\n#====================================================================#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#====================================================================#\n\n# Download marlin-cmake scriptfiles if not already installed         #\n\n# and add the path to the module path                                #\n\n#====================================================================#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set to wanted marlin-cmake release tag or branch\n",
        "Line" : 23,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "#====================================================================#\n\n#  Custom path to Arduino SDK can be set here.                       #\n\n#  It can also be set from command line. eg.:                        #\n\n#  cmake .. -DARDUINO_SDK_PATH=\"/path/to/arduino-1.x.x\"              #\n\n#====================================================================#\n\n#set(ARDUINO_SDK_PATH ${CMAKE_CURRENT_LIST_DIR}/arduino-1.6.8)\n\n#set(ARDUINO_SDK_PATH /home/tom/git/BigBox-Dual-Marlin/ArduinoAddons/Arduino_1.6.x)\n\n#set(ARDUINO_SDK_PATH  /home/tom/test/arduino-1.6.11)\n\n#====================================================================#\n\n#  Set included cmake files                                          #\n\n#====================================================================#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find the intallpath of Arduino SDK\n",
        "Line" : 55,
        "CharPositionInLine" : 21
      },
      "5" : {
        "Text" : "#====================================================================#\n\n#  Set toolchain file for arduino                                    #\n\n#====================================================================#\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Arduino Toolchain\n",
        "Line" : 61,
        "CharPositionInLine" : 98
      },
      "7" : {
        "Text" : "#====================================================================#\n\n#  Setup Project                                                     #\n\n#====================================================================#\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#====================================================================#\n\n#  Register non standard hardware                                    #\n\n#====================================================================#\n\n#register_hardware_platform(/home/tom/test/Sanguino)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#====================================================================#\n\n#  Print any info                                                    #\n\n#  print_board_list()                                                #\n\n#  print_programmer_list()                                           #\n\n#  print_board_settings(mega)                                        #\n\n#====================================================================#\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#====================================================================#\n\n#  Get motherboard settings from Configuration.h                     #\n\n#  setup_motherboard(TARGET Marlin_src_folder)                       #\n\n#  Returns ${TARGET}_BOARD and ${TARGET}_CPU                         #\n\n#                                                                    #\n\n#  To set it manually:                                               #\n\n#    set(${PROJECT_NAME}_BOARD mega)                                 #\n\n#    set(${PROJECT_NAME}_CPU atmega2560)                             #\n\n#====================================================================#\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#====================================================================#\n\n#  Setup all source files                                            #\n\n#  Include Marlin.ino to compile libs not included in *.cpp files    #\n\n#====================================================================#\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#====================================================================#\n\n#  Define the port for uploading code to the Arduino                 #\n\n#  Can be set from commandline with:                                 #\n\n#    cmake .. -DUPLOAD_PORT=/dev/ttyACM0                             #\n\n#====================================================================#\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#====================================================================#\n\n#  Register arduino libraries not included in SDK                    #\n\n#====================================================================#\n\n#link_directories(/home/tom/test/ArduinoAddons) #U8glib\n\n#set(${PROJECT_NAME}_ARDLIBS U8glib)\n\n#set(U8glib_RECURSE True)\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#====================================================================#\n\n# Command to generate code arduino firmware (.hex file)              #\n\n#====================================================================#\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    }
  },
  "FileTypes" : {
    "CMAKE" : 1,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 2832
}