{
  "Repository" : "3988766",
  "Revision" : "HEAD",
  "ObjectId" : "c74bf6d889992c3cabe017ec353ca85c323107cd",
  "CommitTime" : "2015-04-03T18:49:19Z",
  "Files" : {
    "build/make/Makefile" : {
      "ObjectId" : "fc7749a5519b20a6a997755d5c33456131fced96",
      "LastModified" : "2015-03-24T06:54:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##\n\n##  Copyright (c) 2010 The WebM project authors. All Rights Reserved.\n\n##\n\n##  Use of this source code is governed by a BSD-style license\n\n##  that can be found in the LICENSE file in the root of the source\n\n##  tree. An additional intellectual property rights grant can be found\n\n##  in the file PATENTS.  All contributing project authors may\n\n##  be found in the AUTHORS file in the root of the source tree.\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If a target wasn't specified, invoke for all enabled targets.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note: md5sum is not installed on OS X, but openssl is. Openssl may not be\n\n# installed on cygwin, so we need to autodetect here.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Run configure for the user with the current toolchain.\n",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Normally, we want to build the filename from the target and the toolchain.\n\n# This disambiguates from the $(target).mk file that exists in the source tree.\n\n# However, the toolchain is part of the target in universal builds, so we\n\n# don't want to include TOOLCHAIN in that case. FAT_ARCHS is used to test\n\n# if we're in the universal case.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Cancel built-in implicit rules\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Common rules\"\n\n#\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add compiler flags for intrinsic files\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If we're in debug mode, pretend we don't have GNU strip, to fall back to\n\n# the copy implementation\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Older binutils strip global symbols not needed for relocation processing\n\n# when given --strip-unneeded. Using nm and awk to identify globals and\n\n# keep them caused command line length issues under mingw and segfaults in\n\n# test_libvpx were observed under OS/2: simply use --strip-debug.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# Utility functions\n\n#\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# Rule Templates\n\n#\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# make-3.80 has a bug with expanding large input strings to the eval function,\n\n# which was triggered in some cases by the following component of\n\n# linker_template:\n\n#   $(1): $$(call find_file, $(patsubst -l%,lib%.a,$(filter -l%,$(2))),\\\n#                           $$(patsubst -L%,%,$$(filter -L%,$$(LDFLAGS) $(2))))\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# This may be useful to revisit in the future (it tries to locate libraries\n\n# in a search path and add them as prerequisites\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Not using a pattern rule here because we don't want to generate empty\n\n# archives when they are listed as a dependency in files not responsible\n\n# for creating them.\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Not using a pattern rule here because we don't want to generate empty\n\n# archives when they are listed as a dependency in files not responsible\n\n# for creating them.\n\n#\n\n# This needs further abstraction for dealing with non-GNU linkers.\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Not using a pattern rule here because we don't want to generate empty\n\n# archives when they are listed as a dependency in files not responsible\n\n# for creating them.\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n\n# Get current configuration\n\n#\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Older versions of make don't like -include directives with no arguments\n",
        "Line" : 342,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#\n\n# Configuration dependent rules\n\n#\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# If there are any source files to be distributed, then include the build\n\n# system too.\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21,
      "Errorlog" : "line 54:60 token recognition error at: '\\2'\nline 54:64 token recognition error at: '\\1'\n"
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1605
}