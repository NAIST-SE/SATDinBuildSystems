{
  "Repository" : "3945736",
  "Revision" : "HEAD",
  "ObjectId" : "a90c2f8ab38e25c1571d9b0f4e8984bd5e884a93",
  "CommitTime" : "2019-04-02T06:20:02Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "bc01f1355bd83c7b89e9b11409d886fe78110fe2",
      "LastModified" : "2018-03-05T11:49:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake; tab-width: 2; indent-tabs-mode: nil; truncate-lines: t; compile-command: \"cmake -Wdev\" -*-\n\n# vim: set filetype=cmake autoindent tabstop=2 shiftwidth=2 noexpandtab softtabstop=2 nowrap:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################################\n\n#                                                                         #\n\n# Note: The bulk of the build system is located in the cmake/ directory.  #\n\n#       This file only contains the specializations for this particular   #\n\n#       project. Most likely you are interested in editing one of these   #\n\n#       files instead:                                                    #\n\n#                                                                         #\n\n#       dune.module                              Name and version number  #\n\n#       CMakeLists_files.cmake                   Path of source files     #\n\n#       cmake/Modules/${project}-prereqs.cmake   Dependencies             #\n\n#                                                                         #\n\n###########################################################################\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Mandatory call to project\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# guess the sibling dir\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#Try if <module-name>/<build-dir> is used\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# We are using build directories named <prefix><module-name><postfix>\n",
        "Line" : 37,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# All modules are in a common build dir\n",
        "Line" : 40,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# not the same location as most of the other projects; this hook overrides\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# project information is in dune.module. Read this file and set variables.\n\n# we cannot generate dune.module since it is read by dunecontrol before\n\n# the build starts, so it makes sense to keep the data there then.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# list of prerequisites for this particular project; this is in a\n\n# separate file (in cmake/Modules sub-directory) because it is shared\n\n# with the find module\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# read the list of components from this file (in the project directory);\n\n# it should set various lists with the names of the files to include\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# all setup common to the OPM library modules is done here\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "CMakeLists_files.cmake" : {
      "ObjectId" : "d74a54b96edbfc3ed2799b0c6d500661493f2d69",
      "LastModified" : "2015-09-30T12:53:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake; tab-width: 2; indent-tabs-mode: t; truncate-lines: t; compile-command: \"cmake -Wdev\" -*-\n\n# vim: set filetype=cmake autoindent tabstop=2 shiftwidth=2 noexpandtab softtabstop=2 nowrap:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file sets up five lists:\n\n#\tMAIN_SOURCE_FILES     List of compilation units which will be included in\n\n#\t                      the library. If it isn't on this list, it won't be\n\n#\t                      part of the library. Please try to keep it sorted to\n\n#\t                      maintain sanity.\n\n#\n\n#\tTEST_SOURCE_FILES     List of programs that will be run as unit tests.\n\n#\n\n#\tTEST_DATA_FILES       Files from the source three that should be made\n\n#\t                      available in the corresponding location in the build\n\n#\t                      tree in order to run tests there.\n\n#\n\n#\tEXAMPLE_SOURCE_FILES  Other programs that will be compiled as part of the\n\n#\t                      build, but which is not part of the library nor is\n\n#\t                      run as tests.\n\n#\n\n#\tPUBLIC_HEADER_FILES   List of public header files that should be\n\n#\t                      distributed together with the library. The source\n\n#\t                      files can of course include other files than these;\n\n#\t                      you should only add to this list if the *user* of\n\n#\t                      the library needs it.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# originally generated with the command:\n\n# find opm -name '*.c*' -printf '\\t%p\\n' | sort\n\n#list (APPEND MAIN_SOURCE_FILES)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# originally generated with the command:\n\n# find tests -name '*.cpp' -a ! -wholename '*/not-unit/*' -printf '\\t%p\\n' | sort\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# originally generated with the command:\n\n# find tests -name '*.xml' -a ! -wholename '*/not-unit/*' -printf '\\t%p\\n' | sort\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# originally generated with the command:\n\n# find tutorials examples -name '*.c*' -printf '\\t%p\\n' | sort\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# programs listed here will not only be compiled, but also marked for\n\n# installation\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# for OPM-material we do not list all headers explicitly. instead we\n\n# glob through the source tree...\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "baef861728171c47eab7b8a226641b722f64e4d5",
      "LastModified" : "2015-11-11T15:54:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this is included after opm-core_NAME is set\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "opm-material-prereqs.cmake" : {
      "ObjectId" : "ea975e39e20554bb7b0f45dc6adb01413f534f80",
      "LastModified" : "2018-05-23T06:37:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# defines that must be present in config.h for our headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# compile with C99 support if available\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# compile with C++0x/11 support if available\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# prerequisite OPM modules\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# DUNE dependency\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# valgrind client requests\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "CMAKE" : 4
  },
  "ElapsedTime" : 1265
}