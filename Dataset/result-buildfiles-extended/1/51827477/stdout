{
  "Repository" : "51827477",
  "Revision" : "HEAD",
  "ObjectId" : "99ee5c38a1a572cf44a71f37b094080d904350c4",
  "CommitTime" : "2019-04-12T19:06:50Z",
  "Files" : {
    "CC/CMakeLists.txt" : {
      "ObjectId" : "788f565b2326f1e3b90480b8d3761c15031f04f2",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Options\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# to compile CCLib only! (CMake implicitly imposes to declare a project before anything...)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Additional dependencies (only Qt in fact)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add Qt5 natvis file\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# generate the export header file\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Load advanced scripts\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Install (shared) library to specified destinations\n",
        "Line" : 87,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#default destination: /usr/lib/cloudcompare\n",
        "Line" : 93,
        "CharPositionInLine" : 71
      },
      "CommentCount" : 8
    },
    "CC/cmake/CGALSupport.cmake" : {
      "ObjectId" : "04f905184c84f3a1c144ae87ec9eecd5e3c23567",
      "LastModified" : "2019-02-16T14:52:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n# CGAL+CMake support for CloudCompare\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# implies findGMP\n",
        "Line" : 5,
        "CharPositionInLine" : 43
      },
      "2" : {
        "Text" : "# We need to get rid of CGAL CXX flags\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Take care of GMP and MPFR DLLs on Windows!\n",
        "Line" : 22,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# message(${GMP_LIBRARIES})\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# message(${GMP_LIB_FOLDER})\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Mind the quotes!\n",
        "Line" : 31,
        "CharPositionInLine" : 44
      },
      "CommentCount" : 7
    },
    "CC/cmake/FindTBB.cmake" : {
      "ObjectId" : "0a1a5bb77ff2a603b808da11d23bbea883d6d1c3",
      "LastModified" : "2018-04-22T15:07:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c) 2015 Justus Calvin\n\n# \n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n# \n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# FindTBB\n\n# -------\n\n#\n\n# Find TBB include directories and libraries.\n\n#\n\n# Usage:\n\n#\n\n#  find_package(TBB [major[.minor]] [EXACT]\n\n#               [QUIET] [REQUIRED]\n\n#               [[COMPONENTS] [components...]]\n\n#               [OPTIONAL_COMPONENTS components...]) \n\n#\n\n# where the allowed components are tbbmalloc and tbb_preview. Users may modify \n\n# the behavior of this module with the following variables:\n\n#\n\n# * TBB_ROOT_DIR          - The base directory the of TBB installation.\n\n# * TBB_INCLUDE_DIR       - The directory that contains the TBB headers files.\n\n# * TBB_LIBRARY           - The directory that contains the TBB library files.\n\n# * TBB_<library>_LIBRARY - The path of the TBB the corresponding TBB library. \n\n#                           These libraries, if specified, override the \n\n#                           corresponding library search results, where <library>\n\n#                           may be tbb, tbb_debug, tbbmalloc, tbbmalloc_debug,\n\n#                           tbb_preview, or tbb_preview_debug.\n\n# * TBB_USE_DEBUG_BUILD   - The debug version of tbb libraries, if present, will\n\n#                           be used instead of the release version.\n\n#\n\n# Users may modify the behavior of this module with the following environment\n\n# variables:\n\n#\n\n# * TBB_INSTALL_DIR \n\n# * TBBROOT\n\n# * LIBRARY_PATH\n\n#\n\n# This module will set the following variables:\n\n#\n\n# * TBB_FOUND             - Set to false, or undefined, if we haven’t found, or\n\n#                           don’t want to use TBB.\n\n# * TBB_<component>_FOUND - If False, optional <component> part of TBB sytem is\n\n#                           not available.\n\n# * TBB_VERSION           - The full version string\n\n# * TBB_VERSION_MAJOR     - The major version\n\n# * TBB_VERSION_MINOR     - The minor version\n\n# * TBB_INTERFACE_VERSION - The interface version number defined in \n\n#                           tbb/tbb_stddef.h.\n\n# * TBB_<library>_LIBRARY_RELEASE - The path of the TBB release version of \n\n#                           <library>, where <library> may be tbb, tbb_debug,\n\n#                           tbbmalloc, tbbmalloc_debug, tbb_preview, or \n\n#                           tbb_preview_debug.\n\n# * TBB_<library>_LIBRARY_DEGUG - The path of the TBB release version of \n\n#                           <library>, where <library> may be tbb, tbb_debug,\n\n#                           tbbmalloc, tbbmalloc_debug, tbb_preview, or \n\n#                           tbb_preview_debug.\n\n#\n\n# The following varibles should be used to build and link with TBB:\n\n#\n\n# * TBB_INCLUDE_DIRS        - The include directory for TBB.\n\n# * TBB_LIBRARIES           - The libraries to link against to use TBB.\n\n# * TBB_LIBRARIES_RELEASE   - The release libraries to link against to use TBB.\n\n# * TBB_LIBRARIES_DEBUG     - The debug libraries to link against to use TBB.\n\n# * TBB_DEFINITIONS         - Definitions to use when compiling code that uses\n\n#                             TBB.\n\n# * TBB_DEFINITIONS_RELEASE - Definitions to use when compiling release code that\n\n#                             uses TBB.\n\n# * TBB_DEFINITIONS_DEBUG   - Definitions to use when compiling debug code that\n\n#                             uses TBB.\n\n#\n\n# This module will also create the \"tbb\" target that may be used when building\n\n# executables and libraries.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##################################\n\n# Check the build type\n\n##################################\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "##################################\n\n# Set the TBB search directories\n\n##################################\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Define search paths based on user input and environment variables\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Define the search directories based on the current platform\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set the target architecture\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Set the TBB search library path search suffix based on the version of VC\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Add the library path search suffix for the VC independent version of TBB\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# OS X\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# TODO: Check to see which C++ library is being used by the compiler.\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# The default C++ library on OS X 10.9 and later is libc++\n",
        "Line" : 154,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Linux\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# TODO: Check compiler version to see the suffix should be <arch>/gcc4.1 or\n\n#       <arch>/gcc4.1. For now, assume that the compiler is more recent than\n\n#       gcc 4.4.x or later.\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "##################################\n\n# Find the TBB include dir\n\n##################################\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "##################################\n\n# Set version strings\n\n##################################\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "##################################\n\n# Find TBB components\n\n##################################\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Find each component\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Search for the libraries\n",
        "Line" : 211,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Mark internal variables as advanced\n",
        "Line" : 238,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "##################################\n\n# Set compile flags and libraries\n\n##################################\n",
        "Line" : 246,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "##################################\n\n# Create targets\n\n##################################\n",
        "Line" : 269,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "CMakeLists.txt" : {
      "ObjectId" : "db404f7f6de559233d5488668adf96aeaf0ee81c",
      "LastModified" : "2019-02-16T14:52:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Default debug suffix for libraries.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# One shouldn't generate the BUILD project directly in the SOURCES folder!\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default install folders\n\n# (on Windows - msvc generator - the '_debug' suffix is automatically added for debug configurations)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# RPATH Linux/Unix: (dynamic) libs are put in a subdir of prefix/lib,\n\n# since they are only used by qCC/ccViewer\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CCViewer\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Quad buffer stereo support\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define target folders\n\n# (now that ccViewer can have its own plugins, qCC and ccViewer must fall in separate folders!\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set default install folders\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# (on Windows - msvc generator - the '_debug' suffix is automatically added for debug configurations)\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Load advanced scripts\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add external libraries\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Contrib. libraries (mainly for I/O)\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Libs requested by both qCC & ccViewer\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# must always be included after CCFbo (dependency)\n\n# must always be included after qCC_db (dependency)\n",
        "Line" : 98,
        "CharPositionInLine" : 32
      },
      "14" : {
        "Text" : "# must always be included after qCC_db (dependency)\n",
        "Line" : 100,
        "CharPositionInLine" : 38
      },
      "15" : {
        "Text" : "# load plugins (potentially used by qCC and ccViewer)\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# qCC\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# CCViewer\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "ccViewer/CMakeLists.txt" : {
      "ObjectId" : "9a9cefc8ae057d24bd66e6e0804932a7f4f6fad6",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 3DX support (3dConnexion devices)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Gamepad support (requires Qt 5.7+)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# App icon with MSVC\n",
        "Line" : 42,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#to get rid of the (system) console\n",
        "Line" : 45,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Qt\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# contrib. libraries support\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# 3dConnexion devices support\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Gamepad support (requires Qt 5.7+)\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add custom preprocessor definitions\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# App icon with Code::Blocks/MinGW\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# install program\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Auxiliary files\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Export Qt dlls\n",
        "Line" : 109,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Additional auxiliary file(s)\n",
        "Line" : 113,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# Install auxiliary files\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# For Linux it's already installed in by qCC\n",
        "Line" : 118,
        "CharPositionInLine" : 19
      },
      "16" : {
        "Text" : "# Put together our App bundle on Mac OS X\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Export common shader files to all install destinations\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# For Linux it's already installed in by qCC\n",
        "Line" : 141,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 19
    },
    "ccViewer/Mac/CMakeLists.txt" : {
      "ObjectId" : "fcaa696ea0ed609d2674b84c8b8f89e49cf483f8",
      "LastModified" : "2018-04-22T15:07:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Put together our App bundle on Mac OS X\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this will install all the Qt libs and the necessary plugins\n",
        "Line" : 3,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "# install icons\n",
        "Line" : 6,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# remove any dev-machine specific lib paths\n",
        "Line" : 9,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 4
    },
    "cmake/CMakeExternalLibs.cmake" : {
      "ObjectId" : "66418f3460fa3cc3d6edfe9946825f45269a63d2",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n# Qt\n\n# ------------------------------------------------------------------------------\n\n## we will use cmake automoc feature\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find qt5 components\n\n# find_package(Qt5 COMPONENTS OpenGL Widgets Core Gui PrintSupport Concurrent REQUIRED)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in the case no Qt5Config.cmake file could be found, cmake will explicitly ask the user for the QT5_DIR containing it!\n\n# thus no need to keep additional variables and checks\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Starting with the QtCore lib, find the bin and root directories\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Apple uses frameworks - move up until we get to the base directory to set the bin directory properly\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set QT5_ROOT_PATH if it wasn't set by the user\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# turn on QStringBuilder for more efficient string construction\n\n#\tsee https://doc.qt.io/qt-5/qstring.html#more-efficient-string-construction\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n# OpenGL\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Where to find OpenGL libraries\n",
        "Line" : 62,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n# OpenMP\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Intel's Threading Building Blocks (TBB)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cmake/CMakeInclude.cmake" : {
      "ObjectId" : "2d7a43b5939b3100d937be184eac30bf94874839",
      "LastModified" : "2019-02-16T14:52:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n# helpers\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# define CMake designation of shared libraries (DLL or so) whatever the OS is\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CMake considers Dlls as RUNTIME on Windows!\n",
        "Line" : 7,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# Export Qt Dlls to specified destinations\n",
        "Line" : 13,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# 2 arguments: ARGV0 = base destination / ARGV1 = whether to add the QGamepad DLL or not\n",
        "Line" : 14,
        "CharPositionInLine" : 29
      },
      "5" : {
        "Text" : "#All Qt Dlls (release mode)\n",
        "Line" : 17,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "#standard DLLs (Qt 5)\n",
        "Line" : 20,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "#ICU DLLs\n",
        "Line" : 27,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "#first init the list with the ICU Dlls\n",
        "Line" : 28,
        "CharPositionInLine" : 58
      },
      "9" : {
        "Text" : "#specific case for the MinGW version of Qts\n",
        "Line" : 30,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "#generate full path of release Dlls\n",
        "Line" : 36,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "#message(${element})\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# for mutli-config compiler only\n",
        "Line" : 50,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "#release with debug info version\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#debug version\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#standard DLLs\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#ICU DLLs\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "#first init the list with the ICU Dlls\n",
        "Line" : 69,
        "CharPositionInLine" : 57
      },
      "18" : {
        "Text" : "#specific case for the MinGW version of Qts\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#generate full path of release Dlls\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Export Qt5 plugins to specified destinations\n",
        "Line" : 92,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# Export Qt imageformats DLLs to specified destinations\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# Install shared libraries depending on the build configuration and OS\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# 3 arguments:\n",
        "Line" : 122,
        "CharPositionInLine" : 27
      },
      "24" : {
        "Text" : "# ARGV0 = target\n\n# ARGV1 = release install destination\n\n# ARGV2 = 1 for debug install (if available)\n\n# ARGV3 = suffix (optional)\n",
        "Line" : 123,
        "CharPositionInLine" : 7
      },
      "25" : {
        "Text" : "# Copy files to the specified directory and for the active configurations\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# 2 arguments:\n",
        "Line" : 139,
        "CharPositionInLine" : 23
      },
      "27" : {
        "Text" : "# ARGV0 = files (if it's a list you have to provide the list alias quoted!)\n\n# ARGV1 = target (directory)\n",
        "Line" : 140,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# Extended 'install' command depending on the build configuration and OS\n\n# 4 arguments:\n\n#   - ARGV0 = signature\n\n#   - ARGV1 = target (warning: one project or one file at a time)\n\n#   - ARGV2 = base install destination (_debug or _withDebInfo will be automatically appended if multi-conf is supported)\n\n#   - ARGV3 = install destination suffix (optional)\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "cmake/CMakePolicies.cmake" : {
      "ObjectId" : "f679d52e7f13baf7126213cdd84e9471addeed5a",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Eliminate warnings with newer versions of CMake\n\n# We use the OLD behavior by default\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# https://cmake.org/cmake/help/v3.0/policy/CMP0020.html\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/CMakeSetCompilerOptions.cmake" : {
      "ObjectId" : "b73e1492a326d0eb749ddb5dce3d1f20a7f9dc0c",
      "LastModified" : "2018-04-22T15:07:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# You need a c++11 Compiler to build CC\n\n# When we require cmake 3.1, we can use a cleaner method:\n\n#   CXX_STANDARD & CXX_STANDARD_REQUIRED\n\n#   https://cmake.org/cmake/help/v3.1/prop_tgt/CXX_STANDARD.html\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# MinGW doesn't use fPIC\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#disable SECURE_SCL (see http://channel9.msdn.com/shows/Going+Deep/STL-Iterator-Debugging-and-Secure-SCL/)\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# disable checked iterators\n",
        "Line" : 32,
        "CharPositionInLine" : 78
      },
      "4" : {
        "Text" : "#use VLD for mem leak checking\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "common/CMakeLists.txt" : {
      "ObjectId" : "6305e2cb025df680729efcfddfd764ca967f5668",
      "LastModified" : "2019-02-16T14:52:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/3DXSupport.cmake" : {
      "ObjectId" : "b1df2cafe87ad671469ed5352e7e92d87417624c",
      "LastModified" : "2019-02-16T14:52:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n# 3dConnexion+CMake support for CloudCompare\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 3DxWare\n",
        "Line" : 8,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# link project with 3DxWare libraries\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# 1 argument: ARGV0 = project name\n",
        "Line" : 21,
        "CharPositionInLine" : 32
      },
      "4" : {
        "Text" : "#only supported on Windows for the moment!\n",
        "Line" : 23,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 5
    },
    "contrib/AllSupport.cmake" : {
      "ObjectId" : "73e064c6738317a32469e2c9896727178de1144f",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ALL 'contrib' supported libraries \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 3DXWARE (3dConnexion devices) support\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Gamepads support\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# DXF support\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# GDAL support\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# SHP support\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Oculus support\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# 2 arguments: ARGV0 = project name / ARGV1 = shared lib export base folder (optional - '_debug' will be appended for debug configuration)\n",
        "Line" : 16,
        "CharPositionInLine" : 32
      },
      "8" : {
        "Text" : "#libraries with dynamic linkage can automatically 'install' their DLLs\n",
        "Line" : 18,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "#GDAL support\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "#DXF support\n",
        "Line" : 22,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#SHP support\n",
        "Line" : 24,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#OCULUS support\n\n#target_link_OCULUS_SDK( ${ARGV0} )\n",
        "Line" : 26,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 13
    },
    "contrib/DxfLibSupport.cmake" : {
      "ObjectId" : "9de75e14b2b2c71dbc26362bb65fc85ec2790299",
      "LastModified" : "2019-02-16T14:52:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n# Dxf Lib + CMake support for CloudCompare\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set( DXF_LIB_DIR )\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Link project with dxflib library\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "contrib/GDALSupport.cmake" : {
      "ObjectId" : "d0344661afb05cb510d6abfdb6c0622f9d31b2de",
      "LastModified" : "2019-02-16T14:52:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n# GDAL support for CloudCompare\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Link project with GDAL library\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 2 arguments: ARGV0 = project name / ARGV1 = base lib export folder (optional)\n",
        "Line" : 20,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : "#install DLLs\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#mind the quotes!\n",
        "Line" : 35,
        "CharPositionInLine" : 47
      },
      "5" : {
        "Text" : "#mind the quotes!\n",
        "Line" : 36,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 6
    },
    "contrib/GamepadSupport.cmake" : {
      "ObjectId" : "a60ab894c96061ccd0034d4f698b93358c7a7740",
      "LastModified" : "2019-02-16T14:52:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n# Gamepad support for CloudCompare\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TODO: make sure that Qt version is at least 5.7 ;)\n",
        "Line" : 8,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# link project with GAMEPADS libraries (support actually ;)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# 1 argument: ARGV0 = project name\n",
        "Line" : 17,
        "CharPositionInLine" : 33
      },
      "CommentCount" : 4
    },
    "contrib/OculusSupport.cmake" : {
      "ObjectId" : "384e0451c5debd5719ce206af51649bf37c2025d",
      "LastModified" : "2019-02-16T14:52:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n# Oculus LibOVR support for CloudCompare\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Oculus SDK (LibOVR)\n",
        "Line" : 8,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Link project with LibOVR library\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# 1 argument: ARGV0 = project name\n",
        "Line" : 24,
        "CharPositionInLine" : 35
      },
      "4" : {
        "Text" : "#release/general\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "contrib/ShapeLibSupport.cmake" : {
      "ObjectId" : "36227aae8a62005af6e7848a411f114d2aec5d0e",
      "LastModified" : "2019-02-16T14:52:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n# ShapeLib + CMake support for CloudCompare\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Link project with shapelib library\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 2 arguments: ARGV0 = project name\n",
        "Line" : 12,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 3
    },
    "contrib/dxflib-3.17.0/CMakeLists.txt" : {
      "ObjectId" : "24e23127c1d0edf1cc4de1c55f6294ddee5cd309",
      "LastModified" : "2019-02-16T14:52:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CC custom (external) CMake script for Ribbonsoft's DXF Lib\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/dxflib-3.17.0/dxflib.pro" : {
      "ObjectId" : "fe4cdc413a67fc896991500b769df4ecb560cf20",
      "LastModified" : "2019-02-16T14:52:25Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "contrib/dxflib-3.17.0/examples/readwrite/test.pro" : {
      "ObjectId" : "73fa15468bd522e718c2408b32a8b19063e0495a",
      "LastModified" : "2019-02-16T14:52:25Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#include( ../../../shared.pri )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#macx {\n\n#  QMAKE_MAC_SDK=/Developer/SDKs/MacOSX10.5.sdk\n\n#  CONFIG+=x86 ppc\n\n#}\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/dxflib-3.17.0/examples/writedimension/writedimension.pro" : {
      "ObjectId" : "a2cde36691f00755bd073bac7947aa505ed4b8fa",
      "LastModified" : "2019-02-16T14:52:25Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "contrib/dxflib-3.17.0/examples/writehatch/writehatch.pro" : {
      "ObjectId" : "df217f41025d7d897d8e8ff2a3df67c0fd600640",
      "LastModified" : "2019-02-16T14:52:25Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "contrib/shapelib/CMakeLists.txt" : {
      "ObjectId" : "7bd8ad7e9c1e719ff9c332c92d2618e1dacb2411",
      "LastModified" : "2019-02-16T14:52:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/CCFbo/CMakeLists.txt" : {
      "ObjectId" : "25a5c67c36aef156f6e28f792ab9e82235a1e3bb",
      "LastModified" : "2019-02-16T14:52:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/qCC_db/CMakeLists.txt" : {
      "ObjectId" : "1f3b55fab2d6ccb432a47cc10017f6346fb95832",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Qt\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add custom preprocessor definitions\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# install (shared) lib to specified destinations\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#default destination: /usr/lib\n",
        "Line" : 30,
        "CharPositionInLine" : 74
      },
      "CommentCount" : 4
    },
    "libs/qCC_glWindow/CMakeLists.txt" : {
      "ObjectId" : "22a75555fa409ef0b9f69ba3f635125ea15db623",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OCULUS support\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add custom preprocessor definitions\n\n# set_property( TARGET ${PROJECT_NAME} APPEND PROPERTY COMPILE_DEFINITIONS )\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "libs/qCC_io/CMakeLists.txt" : {
      "ObjectId" : "d19ea719820106fffba49a9105cc20a3602b5206",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Qt\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# contrib. libraries support\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add custom preprocessor definitions\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# install (shared) lib to specified destinations\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#default destination: /usr/lib\n",
        "Line" : 47,
        "CharPositionInLine" : 74
      },
      "CommentCount" : 5
    },
    "libs/qCC_io/Tests/CMakeLists.txt" : {
      "ObjectId" : "91e269aea15ad1991be537656c4fd0cb9ac5cbc7",
      "LastModified" : "2019-02-16T14:52:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/qcustomplot/CMakeLists.txt" : {
      "ObjectId" : "5450164f32872abd465fc1dc60e63ca62bfda103",
      "LastModified" : "2019-02-16T14:52:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/3rdParty/CMakeLists.txt" : {
      "ObjectId" : "8000c62dfa6fde511b087807375ffb3ed7dadde4",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Auto add all subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in case the user generates the BUILD project in the same folder as the sources!\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "plugins/CMakeLists.txt" : {
      "ObjectId" : "a0c4d8905a5cae1ae4e0734e8d4f70115d7cc4a3",
      "LastModified" : "2019-02-16T14:52:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# reset buffers (for MacOS bundle)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/CMakePluginTpl.cmake" : {
      "ObjectId" : "d3358fd04032c1d0250bb130ff6bb6ebe14b1424",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### DEFAULT CC \"STANDARD\" PLUGIN CMAKE SCRIPT ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# force link with interface implementations\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add custom default preprocessor definitions\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Plugins need the QT_NO_DEBUG preprocessor in release!\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Qt\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# put all the plugins we build into one directory\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#GL filters and IO plugins also go the the ccViewer 'plugins' sub-folder\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#'GL filter' plugins specifics\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# copy shader dirs into our shadow build directory\n",
        "Line" : 100,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# install the shader files\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "### END OF DEFAULT CC PLUGIN CMAKE SCRIPT ###\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "plugins/core/CMakeLists.txt" : {
      "ObjectId" : "a6d314858409777e8716c66a45b58a0a76917c30",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/GL/CMakeLists.txt" : {
      "ObjectId" : "f4b0472d6812c5b000407b375bb9d2b1ed613adf",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/GL/qEDL/CMakeLists.txt" : {
      "ObjectId" : "218a16447e4f91f93bf496e8962c3989b8c64548",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CloudCompare 'EDL' plugin\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/core/GL/qEDL/src/CMakeLists.txt" : {
      "ObjectId" : "a807c87e1d55ed1a5ba9d9f6687b5767e4bcab95",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/GL/qSSAO/CMakeLists.txt" : {
      "ObjectId" : "69bdac05692068ddcef28599e899d2298b69fae9",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CloudCompare 'SSAO' plugin\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/core/GL/qSSAO/Randomkit/CMakeLists.txt" : {
      "ObjectId" : "f50d5ad2b5a892c5259474ced4a040dc37c0fa03",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add preprocessor definitions\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/core/GL/qSSAO/Randomkit/Makefile" : {
      "ObjectId" : "8edfd6af469ec26d9c88795551d5554f67ed7b7c",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Randomkit 1.6\n\n# Copyright J.S. Roy (js@jeannot.org), 2003-2006\n\n# See the LICENSE file for copyright information.\n\n# @(#) $Jeannot: Makefile,v 1.19 2006/02/20 18:57:48 js Exp $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default target\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build the randomkit library\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Test the correctness of the library\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Various examples\n\n# List primitive polynomials\n\n# On Windows, you must add getopt.o\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MC estimation of the volume of a ball\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# MC estimation of the volume of a ball using ISAAC\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# RQMC estimation of the volume of a ball\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Compile all examples\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Execute all examples\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Utilities\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Header files dependencies generated by makedepend\n\n# DO NOT DELETE\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "plugins/core/IO/CMakeLists.txt" : {
      "ObjectId" : "883b0831e8862712347916734f4a47d4c81068c9",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/IO/qAdditionalIO/CMakeLists.txt" : {
      "ObjectId" : "e8a2b8cf1abc3b6fed49d1f51a9e0c8315880fbb",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/IO/qAdditionalIO/src/CMakeLists.txt" : {
      "ObjectId" : "15e7637641319996d0a24e790d1f8d0d5d42f384",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/IO/qAdditionalIO/ui/CMakeLists.txt" : {
      "ObjectId" : "ab8581f085f4c6ab7cf4bb2f087988e050b1bc5d",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/IO/qCSVMatrixIO/CMakeLists.txt" : {
      "ObjectId" : "d99b388bf82d4ffebaf434661b78c1f4fdbc23d0",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CloudCompare CSV Matrix I/O plugin\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/core/IO/qCSVMatrixIO/src/CMakeLists.txt" : {
      "ObjectId" : "913e5f3dc7670490d22e7f490bf6dbd8af39a63d",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/IO/qCSVMatrixIO/ui/CMakeLists.txt" : {
      "ObjectId" : "b5b1db0ba34fd822ea52fa9a28a096ef90b2cfc3",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/IO/qCoreIO/CMakeLists.txt" : {
      "ObjectId" : "358bf3dab864c7d17a1a4e36d85bbab68ed74130",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/IO/qCoreIO/src/CMakeLists.txt" : {
      "ObjectId" : "3db7be352420938caa8247dead11ecbbbd0a49c1",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/IO/qCoreIO/ui/CMakeLists.txt" : {
      "ObjectId" : "bc25a0fbe57e4c707b8ea59e6678d194a8ba2bc2",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/IO/qE57IO/CMakeLists.txt" : {
      "ObjectId" : "3a695294a87ba5c6528ff8f4be066813608d08c8",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/IO/qE57IO/src/CMakeLists.txt" : {
      "ObjectId" : "cbdfa5240b376f59f1418b74dc5a15dd288e32eb",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/IO/qFBXIO/CMakeLists.txt" : {
      "ObjectId" : "2c8841b41d8990ddf251850aad6a027d3bb13763",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FBX SDK\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Link FBX\n\n# Release\n",
        "Line" : 34,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Debug\n",
        "Line" : 62,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "plugins/core/IO/qFBXIO/src/CMakeLists.txt" : {
      "ObjectId" : "c98e6199239c4a4b0c1dda12abd040cf3d055a51",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/IO/qLASFWFIO/CMakeLists.txt" : {
      "ObjectId" : "9f4b83aab6d035e4ee5716730631fb081e9c5187",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Windows only for now\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CloudCompare LAS FWF (i.e. version >= 1.3) I/O plugin\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#we need the saveLASFileDlg.ui file\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "plugins/core/IO/qLASFWFIO/LASLibSupport.cmake" : {
      "ObjectId" : "a5668ba3482aec6af04b4be248a48ad86dbb4b28",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ------------------------------\n\n# LASLib + CMake support\n\n# ------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# LASLib include directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# link project with LASLib\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# 1 argument: ARGV0 = project name\n",
        "Line" : 19,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 4
    },
    "plugins/core/IO/qPDALIO/CMakeLists.txt" : {
      "ObjectId" : "b4cdb8e2976a0c1e9c5b8b5c8fc8f831bf06f559",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PDAL library\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Plugin source\n",
        "Line" : 28,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Link PDAL\n",
        "Line" : 36,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Visual Studio 2017\n",
        "Line" : 42,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 4
    },
    "plugins/core/IO/qPDALIO/src/CMakeLists.txt" : {
      "ObjectId" : "1dc6dd99d8fbf9c8b638eb84002bf5d8cdf640b5",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/IO/qPDALIO/ui/CMakeLists.txt" : {
      "ObjectId" : "ff083c6314e21fc6a0c168acc08606fd48a1ccdb",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/IO/qPhotoscanIO/CMakeLists.txt" : {
      "ObjectId" : "cc44b7e3faad6db3ee6065adca9b9763375d4a09",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CloudCompare Photoscan I/O plugin\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Zlib\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# quazip\n",
        "Line" : 22,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "plugins/core/IO/qPhotoscanIO/src/CMakeLists.txt" : {
      "ObjectId" : "10b4d749b7b44958cda160c7c562a7f7999159a7",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/IO/qPhotoscanIO/src/contrib/QuazipLibSupport.cmake" : {
      "ObjectId" : "4d72c66db46eb564a77425fe25b6a3114f592ebb",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n# Quazip Lib + CMake support for CloudCompare\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use system zlib on unix and Qt ZLIB on Windows\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# need Qt's XML package\n\n#find_package(Qt5Xml REQUIRED)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set all include directories for in and out of source builds\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Zlib\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Qt\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Link project with quazip library\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# 1 argument: ARGV0 = project name\n",
        "Line" : 48,
        "CharPositionInLine" : 31
      },
      "8" : {
        "Text" : "#target_link_libraries( ${ARGV0} Qt5::Xml )\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "plugins/core/IO/qPhotoscanIO/src/contrib/quazip-0.7.3/CMakeLists.txt" : {
      "ObjectId" : "3d2fb550190c9a253ba0843c1dd4baed5b69daac",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMP0042: Explicitly acknowledge MACOSX_RPATH\n\n# (introduced in CMake 2.8.12, enabled by default in CMake 3.0,\n\n# and producing a warning when unset since 3.7.1)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# try Qt5 first, and prefer that if found\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# if there is no QT_ROOT, try to deduce it from Qt QtCore include\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Use system zlib on unix and Qt ZLIB on Windows\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# All build libraries are moved to this directory\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "plugins/core/IO/qPhotoscanIO/src/contrib/quazip-0.7.3/FindQuaZip.cmake" : {
      "ObjectId" : "23f4918db4f441d9b45cf9b1d65a2b7a3425429a",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# QUAZIP_FOUND               - QuaZip library was found\n\n# QUAZIP_INCLUDE_DIR         - Path to QuaZip include dir\n\n# QUAZIP_INCLUDE_DIRS        - Path to QuaZip and zlib include dir (combined from QUAZIP_INCLUDE_DIR + ZLIB_INCLUDE_DIR)\n\n# QUAZIP_LIBRARIES           - List of QuaZip libraries\n\n# QUAZIP_ZLIB_INCLUDE_DIR    - The include dir of zlib headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 9,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#     pkg_check_modules(PC_QCA2 QUIET qca2)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/core/IO/qPhotoscanIO/src/contrib/quazip-0.7.3/includes.pri" : {
      "ObjectId" : "8362f9758c141a4978bb2581ae55a8b8b2f13e72",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "plugins/core/IO/qPhotoscanIO/src/contrib/quazip-0.7.3/quazip.pri" : {
      "ObjectId" : "07cd9c043ef9ba6ddc52776b003d66d38c1aeb0d",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "plugins/core/IO/qPhotoscanIO/src/contrib/quazip-0.7.3/quazip.pro" : {
      "ObjectId" : "86d4587547e0dce330a1969bc3f68e38c4a94227",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "plugins/core/IO/qPhotoscanIO/src/contrib/quazip-0.7.3/quazip/CMakeLists.txt" : {
      "ObjectId" : "b6b8ab6e27a117a19c16d8be83dcd228536eb8db",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set all include directories for in and out of source builds\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Must be added to enable export macro\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Windows uses .lib extension for both static and shared library\n\n# *nix systems use different extensions for SHARED and STATIC library and by convention both libraries have the same name\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Link against ZLIB_LIBRARIES if needed (on Windows this variable is empty)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "plugins/core/IO/qPhotoscanIO/src/contrib/quazip-0.7.3/quazip/quazip.pri" : {
      "ObjectId" : "1a9db99b7578c662792874d198868f1304663afa",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "plugins/core/IO/qPhotoscanIO/src/contrib/quazip-0.7.3/quazip/quazip.pro" : {
      "ObjectId" : "3e10f36907c5dc19ef778186a44a56f3bf7124ad",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# The ABI version.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 1.0.0 is the first stable ABI.\n\n# The next binary incompatible change will be 2.0.0 and so on.\n\n# The existing QuaZIP policy on changing ABI requires to bump the\n\n# major version of QuaZIP itself as well. Note that there may be\n\n# other reasons for chaging the major version of QuaZIP, so\n\n# in case where there is a QuaZIP major version bump but no ABI change,\n\n# the VERSION variable will stay the same.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For example:\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# QuaZIP 1.0 is released after some 0.x, keeping binary compatibility.\n\n# VERSION stays 1.0.0.\n\n# Then some binary incompatible change is introduced. QuaZIP goes up to\n\n# 2.0, VERSION to 2.0.0.\n\n# And so on.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This one handles dllimport/dllexport directives.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# You'll need to define this one manually if using a build system other\n\n# than qmake or using QuaZIP sources directly in your project.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Input\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# workaround for qdatetime.h macro bug\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Note, on Symbian you may run into troubles with LGPL.\n\n# The point is, if your application uses some version of QuaZip,\n\n# and a newer binary compatible version of QuaZip is released, then\n\n# the users of your application must be able to relink it with the\n\n# new QuaZip version. For example, to take advantage of some QuaZip\n\n# bug fixes.\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# This is probably best achieved by building QuaZip as a static\n\n# library and providing linkable object files of your application,\n\n# so users can relink it.\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#Export headers to SDK Epoc32/include directory\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "plugins/core/Standard/CMakeLists.txt" : {
      "ObjectId" : "17e8004c5d24f1a5ca1d34c785b7aa6cbc2fa318",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/Standard/qAnimation/CMakeLists.txt" : {
      "ObjectId" : "428bda90ea4f885ed7da3989d906b049d2e49f10",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CloudCompare 'ANIMATION' plugin\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/core/Standard/qAnimation/src/CMakeLists.txt" : {
      "ObjectId" : "29c0bd67828451efdb2f12f855307f892e8eec50",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/Standard/qAnimation/src/QTFFmpegWrapper/CMakeLists.txt" : {
      "ObjectId" : "0f52d8060f55896316e5b8b50e1ab5d09902bd69",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ffmpeg support\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/core/Standard/qAnimation/src/QTFFmpegWrapper/ffmpegSupport.cmake" : {
      "ObjectId" : "bc8ed2f833824cf92a94c0fffeae53d0fb2decaa",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n# ffmpeg+CMake support for CloudCompare\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find ffmpeg\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# link project with ffmpeg libraries\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# 1 argument: ARGV0 = project name\n",
        "Line" : 26,
        "CharPositionInLine" : 31
      },
      "4" : {
        "Text" : "# manual version\n",
        "Line" : 28,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# libraries\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#unused: avdevice avfilter postproc swresample\n",
        "Line" : 33,
        "CharPositionInLine" : 68
      },
      "7" : {
        "Text" : "# Required for some C99 defines\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#set( FFMPEG_LIBRARY_FILES ${FFMPEG_LIBRARIES} CACHE STRING \"ffmpeg library files\" FORCE )\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# 1 argument: ARGV0 = destination directory\n",
        "Line" : 67,
        "CharPositionInLine" : 31
      },
      "10" : {
        "Text" : "#mind the quotes\n",
        "Line" : 88,
        "CharPositionInLine" : 38
      },
      "CommentCount" : 11
    },
    "plugins/core/Standard/qAnimation/ui/CMakeLists.txt" : {
      "ObjectId" : "27d634ef1bc458c407bfb18270375f3844cfd81d",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/Standard/qBroom/CMakeLists.txt" : {
      "ObjectId" : "102b57802f602e724fe46f48495eea822d06ee89",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#CloudCompare 'Virtual broom' plugin\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "plugins/core/Standard/qBroom/src/CMakeLists.txt" : {
      "ObjectId" : "7d83f3615d02294509163eb9f295ef94d7f4c658",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/Standard/qBroom/ui/CMakeLists.txt" : {
      "ObjectId" : "30d0151089f28bf2319554262f555918cb3c14d3",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/Standard/qCSF/CMakeLists.txt" : {
      "ObjectId" : "248828b5bfe2092bbb43a79533dd795df16f18cc",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#CloudCompare 'CSF' plugin\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "plugins/core/Standard/qCSF/src/CMakeLists.txt" : {
      "ObjectId" : "f2ac0ecb530eaa336d39ec50263f87222fcb881c",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/Standard/qCSF/ui/CMakeLists.txt" : {
      "ObjectId" : "4ec01654bf7107cfc6cbf1eb048f6252a8d66f13",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/Standard/qCanupo/CMakeLists.txt" : {
      "ObjectId" : "f02b9993b6dce2aa7d64623e2e34da50d07d91a0",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#CloudCompare 'Canupo' plugin\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "plugins/core/Standard/qCompass/CMakeLists.txt" : {
      "ObjectId" : "6711c35ca3c9c789a0412e2dcc49c494c49b3efb",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CloudCompare 'compass' plugin\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# we need includes from the main CC source dir\n",
        "Line" : 9,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#we need ccOverlay classes\n",
        "Line" : 12,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#we also need picking hub classes\n",
        "Line" : 16,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "plugins/core/Standard/qCompass/src/CMakeLists.txt" : {
      "ObjectId" : "1441932f43c833fe78c23bf55fa5527439c4419f",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/Standard/qCompass/ui/CMakeLists.txt" : {
      "ObjectId" : "961dc19676ff828a94d6df70694e9c34f87c6ba9",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/Standard/qCork/CMakeLists.txt" : {
      "ObjectId" : "8459cba6f0cdc80df83b22bbb1622e446dac7e88",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CloudCompare Mesh CSG operations plugin (based on the Cork library)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Cork lib and MPIR are needed to build this plugin\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "plugins/core/Standard/qCork/CorkSupport.cmake" : {
      "ObjectId" : "6e9fee104f55d3d637d7c6c3f62b6d8d769d7d80",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n# Quick & dirty Cork+MPIR+CMake support for CloudCompare\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Cork library (CC fork) https://github.com/cloudcompare/cork\n",
        "Line" : 5,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Link project with Cork + MPIR library\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# 1 argument: ARGV0 = project name\n",
        "Line" : 31,
        "CharPositionInLine" : 29
      },
      "4" : {
        "Text" : "#Release mode only by default\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#optional: debug mode\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# DGM: CC_CORK_SUPPORT preproc is not used\n\n#if ( CMAKE_CONFIGURATION_TYPES )\n\n#\t#Anytime we use COMPILE_DEFINITIONS_XXX we must define this policy!\n\n#\t#(and setting it outside of the function/file doesn't seem to work...)\n\n#\tcmake_policy(SET CMP0043 OLD)\n\n#\n\n#\tset_property( TARGET ${ARGV0} APPEND PROPERTY COMPILE_DEFINITIONS_RELEASE CC_CORK_SUPPORT )\n\n#\tset_property( TARGET ${ARGV0} APPEND PROPERTY COMPILE_DEFINITIONS_RELWITHDEBINFO CC_CORK_SUPPORT )\n\n#\t\n\n#\tif ( CORK_DEBUG_LIBRARY_FILE )\n\n#\t\tset_property( TARGET ${ARGV0} APPEND PROPERTY COMPILE_DEFINITIONS_DEBUG CC_CORK_SUPPORT )\n\n#\tendif()\n\n#else()\n\n#\tset_property( TARGET ${ARGV0} APPEND PROPERTY COMPILE_DEFINITIONS CC_CORK_SUPPORT )\n\n#endif()\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#if ( NOT CORK_RELEASE_LIBRARY_FILE )\n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 8
    },
    "plugins/core/Standard/qFacets/CMakeLists.txt" : {
      "ObjectId" : "3f8929461a0d0c1b5374245155b619b81ab5bad0",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CloudCompare 'FACETS' plugin\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# we need includes from the main CC source dir\n",
        "Line" : 13,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#we need Color Scale Manager and Editor importer\n",
        "Line" : 16,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#add IO support\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#add shapelib support\n",
        "Line" : 33,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "plugins/core/Standard/qFacets/src/CMakeLists.txt" : {
      "ObjectId" : "a01d3718d47605b533d723d259e8cecf78b663bc",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/Standard/qFacets/ui/CMakeLists.txt" : {
      "ObjectId" : "1bd490cf4d2d1efcdeba1d41d08d7949fb068057",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/Standard/qHPR/CMakeLists.txt" : {
      "ObjectId" : "6110d91c6e8b02f59b89e5d8c1ad84ba72064970",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CloudCompare 'HPR' plugin\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/core/Standard/qHPR/src/CMakeLists.txt" : {
      "ObjectId" : "c678db228336fa8ac8fe22d8c484fedb6f206426",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/Standard/qHPR/src/qhull/src2015.2/CMakeLists.txt" : {
      "ObjectId" : "f7832bd120bc6e517a6c6d048504b1d6646c11de",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#define global variables for use by other projects\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add preprocessor definitions\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/core/Standard/qHPR/src/qhull/src2015.2/libqhull.pro" : {
      "ObjectId" : "18005da59d6ba32e8bce4dd232ca30648e06a9de",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# libqhull.pro -- Qt project for Qhull shared library\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Order object files by frequency of execution.  Small files at end.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# libqhull/libqhull.pro and ../qhull-libqhull-src.pri have the same SOURCES and HEADERS\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/core/Standard/qHPR/ui/CMakeLists.txt" : {
      "ObjectId" : "3fd9b92e214c130f4e4618ed54cb1375405d69a6",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/Standard/qHoughNormals/CMakeLists.txt" : {
      "ObjectId" : "b2a0d7ebd629784010ca3982ccc150fc317080f6",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CloudCompare 'Hough Normals' plugin (see https://github.com/aboulch/normals_Hough)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/core/Standard/qHoughNormals/src/CMakeLists.txt" : {
      "ObjectId" : "b54256d86c60f73ea6a9ed97f802f75ce128064b",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/Standard/qHoughNormals/src/normals_Hough/CMakeLists.txt" : {
      "ObjectId" : "5b9d0dd92f4c558019e004355e989aa5ef2cb130",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################\n\n## OPENMP\n\n############################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#use openMP\n",
        "Line" : 16,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "plugins/core/Standard/qHoughNormals/ui/CMakeLists.txt" : {
      "ObjectId" : "8493371efe5902f4028cd9dc3e001c7fbd9846cb",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/Standard/qM3C2/CMakeLists.txt" : {
      "ObjectId" : "0ceffb98291b9452b2684021314cbd78141598cc",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/Standard/qM3C2/src/CMakeLists.txt" : {
      "ObjectId" : "a15426321339965347dae8aea046509b27fb1fe1",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/Standard/qM3C2/ui/CMakeLists.txt" : {
      "ObjectId" : "749cb00b5ea05b220f273afd008c9b59eeab5d3d",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/Standard/qPCL/CMakeLists.txt" : {
      "ObjectId" : "fdfb6de2896e6f944ea7d1721116bc0486b2fc4c",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CloudCompare 'PCL' bridge plugin\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#requires PCL\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#PCL bridge library\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#CloudCompare 'qPCLIO' I/O plugin (to load PCD files)\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#documentation\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#import PCL dlls (if any, WIN32 only)\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "plugins/core/Standard/qPCL/ExportPCLDlls.cmake" : {
      "ObjectId" : "d5f7f3edc7f393cad56fbf124339eecd5f42994e",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 1 argument: ARGV0 = destination directory\n",
        "Line" : 1,
        "CharPositionInLine" : 28
      },
      "1" : {
        "Text" : "#export PCL dlls (if any)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first of all check if files are in ${PCL_DIR} or ${PCL_DIR}/cmake\n\n# (not sure why but it happens on my win7 system)\n",
        "Line" : 6,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# get the last line of ${PCL_DIR}\n",
        "Line" : 8,
        "CharPositionInLine" : 50
      },
      "4" : {
        "Text" : "#trim PCL_DIR path if needed\n",
        "Line" : 10,
        "CharPositionInLine" : 50
      },
      "5" : {
        "Text" : "# now find pcl libs we need\n",
        "Line" : 13,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#release DLLs\n",
        "Line" : 17,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#mind the quotes!\n",
        "Line" : 19,
        "CharPositionInLine" : 44
      },
      "8" : {
        "Text" : "#debug DLLs\n",
        "Line" : 21,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 9
    },
    "plugins/core/Standard/qPCL/PclIO/CMakeLists.txt" : {
      "ObjectId" : "78127c1f97a61dd839d1973459f4e4ab723eaa8e",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#CloudCompare PCL I/O plugin (for PCD files)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#define the PCL_VER_1_6_OR_OLDER preprocessor to compile qPclIO with older versions of PCL\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# VERSION_GREATER Works just like \"greater or equal\"\n",
        "Line" : 19,
        "CharPositionInLine" : 37
      },
      "3" : {
        "Text" : "#for ccViewer, we also have to copy the PCL dlls! (for CloudCompare they are already copied by qPCL\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#import PCL dlls (if any, WIN32 only)\n",
        "Line" : 26,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "plugins/core/Standard/qPCL/PclUtils/CMakeLists.txt" : {
      "ObjectId" : "127d3e17440b5a25f4fef78d9a650fbd956b0ab3",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#requires PCL\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add custom preprocessor definitions\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#define the PCL_VER_1_6_OR_OLDER preprocessor to compile qPCL with older versions of PCL\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# VERSION_GREATER Works just like \"greater or equal\"\n",
        "Line" : 40,
        "CharPositionInLine" : 37
      },
      "4" : {
        "Text" : "# Luca's PCL patch support\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#from 1.7 the patch was merged\n",
        "Line" : 45,
        "CharPositionInLine" : 39
      },
      "6" : {
        "Text" : "# Qt\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "plugins/core/Standard/qPCL/doc/CMakeLists.txt" : {
      "ObjectId" : "ed938512f22b1ad3e603c82cbe5b1ff04d07d50d",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-- Add an Option to toggle the generation of the API documentation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-- Configure the Template Doxyfile for our specific project\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#-- Add a custom target to run Doxygen when ever the project is built\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#COMMAND ${DOXYGEN_EXECUTABLE} ${PROJECT_BINARY_DIR}/Doxyfile\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# IF you do NOT want the documentation to be generated EVERY time you build the project\n\n# then leave out the 'ALL' keyword from the above command.\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "plugins/core/Standard/qPCV/CMakeLists.txt" : {
      "ObjectId" : "1dc8d3fb68515f20a3d9ef6fdedc18b6ad10af5a",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CloudCompare 'PCV' plugin\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/core/Standard/qPCV/PCV/CMakeLists.txt" : {
      "ObjectId" : "8e5f27202fdb7d7100167f8f17e490650ad9cba5",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add preprocessor definitions\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/core/Standard/qPoissonRecon/CMakeLists.txt" : {
      "ObjectId" : "d804a6531fdb2ddb9ef939b65ac69078e482642a",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CloudCompare 'PoissonRecon' plugin\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/core/Standard/qRANSAC_SD/CMakeLists.txt" : {
      "ObjectId" : "c9e4e3d36b77c4f0d198a2d3995a1ad9b963f29b",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CloudCompare 'Ransac Shape Detection' plugin\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#DGM: OpenMP doesn't work with Visual at least (the process loops infinitely)\n",
        "Line" : 19,
        "CharPositionInLine" : 32
      },
      "CommentCount" : 2
    },
    "plugins/core/Standard/qRANSAC_SD/RANSAC_SD_orig/CMakeLists.txt" : {
      "ObjectId" : "0f5d41894cd8ab49b110b562bd1d405b1df2722d",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Anytime we use COMPILE_DEFINITIONS_XXX we must define this policy!\n\n#(and setting it outside of this file doesn't seem to work...)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add preprocessor definitions\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#DGM: OpenMP doesn't work with Visual at least (the process loops infinitely)\n",
        "Line" : 24,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#set_property( TARGET ${PROJECT_NAME} APPEND PROPERTY COMPILE_DEFINITIONS DOPARALLEL )\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "plugins/core/Standard/qRANSAC_SD/RANSAC_SD_orig/MiscLib/CMakeLists.txt" : {
      "ObjectId" : "7c6bb2c38b54f5de01ed578514f907653141997a",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add preprocessor definitions\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#DGM: OpenMP doesn't work with Visual at least (the process loops infinitely)\n",
        "Line" : 15,
        "CharPositionInLine" : 32
      },
      "2" : {
        "Text" : "#set_property( TARGET ${PROJECT_NAME} APPEND PROPERTY COMPILE_DEFINITIONS DOPARALLEL )\n",
        "Line" : 16,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "plugins/core/Standard/qSRA/CMakeLists.txt" : {
      "ObjectId" : "0b3ac0b8c19aed97f46c01a00a86d3e5d48cc7d8",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CloudCompare 'Surface of Revolution Analysis' plugin\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#DXF support should be enabled for this plugin! (not mandatory though)\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# we need includes from the main CC source dir\n",
        "Line" : 14,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#we need Color Scale Manager and Editor importer\n",
        "Line" : 17,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#and the ccRenderToFileDlg class\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#don't forget associated widgets(.ui)\n",
        "Line" : 24,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#DXF support\n",
        "Line" : 30,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "plugins/example/CMakeLists.txt" : {
      "ObjectId" : "06b1f4c38fa13e6661eb35d6d18afc9397ee2ce6",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/example/ExampleGLPlugin/CMakeLists.txt" : {
      "ObjectId" : "931ebdb352c5cd32081af39134fa68bfd2cbdd7a",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CloudCompare example GL plugin\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/example/ExampleIOPlugin/CMakeLists.txt" : {
      "ObjectId" : "f342179b07a88c029493a27d02640020dcf916b2",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set to include this I/O plugin in ccViewer\n",
        "Line" : 8,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "plugins/example/ExampleIOPlugin/src/CMakeLists.txt" : {
      "ObjectId" : "1ef0dfc027088f3b601612d3e5ce398d6a7901f2",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/example/ExamplePlugin/CMakeLists.txt" : {
      "ObjectId" : "919adb4d7cd9f27ef6bb2401048745ff42dab50c",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CloudCompare example for standard plugins\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# REPLACE ALL 'ExamplePlugin' OCCURENCES BY YOUR PLUGIN NAME\n\n# AND ADAPT THE CODE BELOW TO YOUR OWN NEEDS!\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add an option to CMake to control whether we build this plugin or not\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Name the plugin\n",
        "Line" : 12,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# load any subdirectories (see qAdditionalIO for an example)\n\n# add_subdirectory( LIB1 )\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# set dependencies to necessary libraries (see qPCV for an example)\n\n# target_link_libraries( ${PROJECT_NAME} LIB1 )\n\n# include_directories( ${LIB1_INCLUDE_DIR} )\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "qCC/CMakeLists.txt" : {
      "ObjectId" : "547893e4664cb1e6364185b940d71a42d95b31c0",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 3DX support (3dConnexion devices)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Gamepad support (requires Qt 5.7+)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# App icon with MSVC\n",
        "Line" : 47,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#to get rid of the (system) console\n",
        "Line" : 50,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Qt\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# contrib. libraries support\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# 3dConnexion devices support\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Gamepad support (requires Qt 5.7+)\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add custom preprocessor definitions\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# App icon with Code::Blocks/MinGW\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# install program\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Auxiliary files\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Export Qt dlls\n",
        "Line" : 116,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Additional auxiliary file(s)\n",
        "Line" : 121,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# Install auxiliary files\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Translation\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# in order to ensure that everything else is installed first, put the Mac bundling in its own subdirectory\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Shaders\n\n# Copy shader dirs into our shadow build directory\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Export common shader files to all install destinations\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "qCC/Mac/CMakeLists.txt" : {
      "ObjectId" : "d929136f553b04518b0ac64e81f7e639308dd4a5",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Put together our App bundle on Mac OS X\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this will install all the Qt libs and the necessary plugins\n",
        "Line" : 3,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "# install icons\n",
        "Line" : 6,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# remove any dev-machine specific lib paths\n",
        "Line" : 9,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 4
    },
    "qCC/db_tree/CMakeLists.txt" : {
      "ObjectId" : "e30ec8bf318e7a7201db140857bf3d312a37e1ba",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qCC/devices/3dConnexion/CMakeLists.txt" : {
      "ObjectId" : "110578ebf7d7b0a08298698d433a8be4639fec02",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qCC/devices/gamepad/CMakeLists.txt" : {
      "ObjectId" : "abaa0c336fd4f4f70f5d9a0346518e5433637f6f",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qCC/pluginManager/CMakeLists.txt" : {
      "ObjectId" : "9d069a57204f15b92e4b1499014e57fee0ccf392",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qCC/translations/CMakeLists.txt" : {
      "ObjectId" : "e2caf768dfb9c135ffcec0fca4138218072f8105",
      "LastModified" : "2019-04-05T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note that _qt5_linguisttools_install_prefix is from Qt5LinguistToolsConfig.cmake\n\n#\tand probably a private variable...\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Now handle our own .ts files\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For each language we have .ts files for, process Qt's qm files\n\n# (they need to be concatenated into one file)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Our files are named like this: CloudCompare_fr.qm\n\n# We want just the language part - \"fr\" so we can find the right files from the Qt install\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# These are the Qt files we want to add if they exist\n",
        "Line" : 32,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Now check that they exist\t\n",
        "Line" : 37,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Finally, add a command to generate the qt language file for this language\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "CMAKE" : 116,
    "QMAKE" : 10,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 2790
}