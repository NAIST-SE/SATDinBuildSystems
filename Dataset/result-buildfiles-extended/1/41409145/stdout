{
  "Repository" : "41409145",
  "Revision" : "HEAD",
  "ObjectId" : "6f8dc7667f02821343d5bb6395c13a7c314bce86",
  "CommitTime" : "2019-04-17T14:51:11Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "4816587b3da445eaef570497b176d1d4f614ff8f",
      "LastModified" : "2019-03-29T14:16:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# http://answers.ros.org/question/230877/optionally-build-a-package-with-catkin/\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Homebrew installs Qt5 (up to at least 5.9.1) in\n\n# /usr/local/qt5, ensure it can be found by CMake since\n\n# it is not in the default /usr/local prefix.\n\n# source: https://github.com/Homebrew/homebrew-core/issues/8392#issuecomment-325226494\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#########################  INSTALL ####################################\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#############################################################\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "backward-cpp/CMakeLists.txt" : {
      "ObjectId" : "852dab13e071a8251d460ec8c328e51758a19015",
      "LastModified" : "2019-02-25T22:23:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "color_widgets/CMakeLists.txt" : {
      "ObjectId" : "a875a654a8ac9478123c363a281d78da3db49988",
      "LastModified" : "2017-03-01T17:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plotter_gui/CMakeLists.txt" : {
      "ObjectId" : "0062241ce47016c625fdad5e0a1aaf0893d95e2c",
      "LastModified" : "2019-04-17T14:51:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plotter_gui/qwtconfig.pri" : {
      "ObjectId" : "748948692f49d839851e0b91e82763e1a9276750",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "################################################################\n\n# Qwt Widget Library\n\n# Copyright (C) 1997   Josef Wilgen\n\n# Copyright (C) 2002   Uwe Rathmann\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the Qwt License, Version 1.0\n\n################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "######################################################################\n\n# Install paths\n\n######################################################################\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QWT_INSTALL_PREFIX = /usr/local/qwt-$$QWT_VERSION-svn-qt-$$QT_VERSION\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# QWT_INSTALL_PREFIX = C:/Qwt-$$QWT_VERSION-svn-qt-$$QT_VERSION\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "######################################################################\n\n# Features\n\n# When building a Qwt application with qmake you might want to load\n\n# the compiler/linker flags, that are required to build a Qwt application\n\n# from qwt.prf. Therefore all you need to do is to add \"CONFIG += qwt\" \n\n# to your project file and take care, that qwt.prf can be found by qmake.\n\n# ( see http://doc.trolltech.com/4.7/qmake-advanced-usage.html#adding-new-configuration-features )\n\n# I recommend not to install the Qwt features together with the\n\n# Qt features, because you will have to reinstall the Qwt features,\n\n# with every Qt upgrade. \n\n######################################################################\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# QWT_INSTALL_FEATURES  = $$[QT_INSTALL_PREFIX]/features\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "######################################################################\n\n# Build the static/shared libraries.\n\n# If QwtDll is enabled, a shared library is built, otherwise\n\n# it will be a static library.\n\n######################################################################\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#QWT_CONFIG           += QwtDll\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "######################################################################\n\n# QwtPlot enables all classes, that are needed to use the QwtPlot \n\n# widget. \n\n######################################################################\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "######################################################################\n\n# QwtWidgets enables all classes, that are needed to use the all other\n\n# widgets (sliders, dials, ...), beside QwtPlot. \n\n######################################################################\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#QWT_CONFIG     += QwtWidgets\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "######################################################################\n\n# If you want to display svg images on the plot canvas, or\n\n# export a plot to a SVG document\n\n######################################################################\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#QWT_CONFIG     += QwtSvg\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "######################################################################\n\n# If you want to use a OpenGL plot canvas\n\n######################################################################\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "######################################################################\n\n# You can use the MathML renderer of the Qt solutions package to \n\n# enable MathML support in Qwt. Because of license implications\n\n# the ( modified ) code of the MML Widget solution is included and\n\n# linked together with the QwtMathMLTextEngine into an own library. \n\n# To use it you will have to add \"CONFIG += qwtmathml\"\n\n# to your qmake project file.\n\n######################################################################\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#QWT_CONFIG     += QwtMathML\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "######################################################################\n\n# Create and install pc files for pkg-config\n\n# See http://www.freedesktop.org/wiki/Software/pkg-config/\n\n######################################################################\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#QWT_CONFIG     += QwtPkgConfig\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 18
    },
    "plugins/DataLoadCSV/CMakeLists.txt" : {
      "ObjectId" : "71b3cdfdccb3312b87c71cfdd3061710b7d18024",
      "LastModified" : "2019-02-25T22:23:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/DataLoadULog/CMakeLists.txt" : {
      "ObjectId" : "9622c6844079625c2ae8debfec5f90bc0e28c511",
      "LastModified" : "2019-03-01T00:11:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/DataStreamSample/CMakeLists.txt" : {
      "ObjectId" : "ae261cc2e82895fb2ee1c4ba74c67d25e4df7d37",
      "LastModified" : "2019-02-25T22:23:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#QT5_WRAP_UI ( UI_SRC  ../common/selectlistdialog.ui  )\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/DataStreamWebSocket/CMakeLists.txt" : {
      "ObjectId" : "674e7833cbaf9c19bc428131b7a092a7b28fe60e",
      "LastModified" : "2019-02-25T22:23:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#QT5_WRAP_UI ( UI_SRC  ../common/selectlistdialog.ui  )\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/DataStreamWebSocket/DataStreamClientSample/client.pro" : {
      "ObjectId" : "62bf088a522637f2c048de436fec7d6637e644e6",
      "LastModified" : "2019-02-25T22:23:51Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "plugins/ROS/CMakeLists.txt" : {
      "ObjectId" : "90cd85c23a78918e1637919c8ed3349b8e9f96bb",
      "LastModified" : "2019-02-25T22:23:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Qt related stuff\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#############\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#############\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#############\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#############\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#############\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#add_dependencies(RosTopicPublisher\n\n#    ${${PROJECT_NAME}_EXPORTED_TARGETS}\n\n#    ${catkin_EXPORTED_TARGETS}\n\n#    )\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#############\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "plugins/StatePublisherZMQ/StatePublisherZMQ.pro" : {
      "ObjectId" : "84185563554dcf3b3ff109d84676db714b4a7bcd",
      "LastModified" : "2019-02-25T22:23:51Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2016-04-02T12:24:58\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qwt/qwt.pro" : {
      "ObjectId" : "1ef6c3e603f48ce0cf420b4c2222c7df89c4e29c",
      "LastModified" : "2019-02-25T22:23:51Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "################################################################\n\n# Qwt Widget Library\n\n# Copyright (C) 1997   Josef Wilgen\n\n# Copyright (C) 2002   Uwe Rathmann\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the Qwt License, Version 1.0\n\n################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qwt/qwtbuild.pri" : {
      "ObjectId" : "a8c0e988d1052082915a6a8558d867f9a6778e88",
      "LastModified" : "2019-02-25T22:23:51Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "################################################################\n\n# Qwt Widget Library\n\n# Copyright (C) 1997   Josef Wilgen\n\n# Copyright (C) 2002   Uwe Rathmann\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the Qwt License, Version 1.0\n\n################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "######################################################################\n\n# qmake internal options\n\n######################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "######################################################################\n\n# release/debug mode\n\n######################################################################\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On Windows you can't mix release and debug libraries.\n\n# The designer is built in release mode. If you like to use it\n\n# you need a release version. For your own application development you\n\n# might need a debug version. \n\n# Enable debug_and_release + build_all if you want to build both.\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# CONFIG           += separate_debug_info\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# --- optional warnings \n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# QMAKE_CXXFLAGS   *= -Wfloat-equal \n\n# QMAKE_CXXFLAGS   *= -Wshadow \n\n# QMAKE_CXXFLAGS   *= -Wpointer-arith \n\n# QMAKE_CXXFLAGS   *= -Wconversion \n\n# QMAKE_CXXFLAGS   *= -Wsign-compare \n\n# QMAKE_CXXFLAGS   *= -Wsign-conversion \n\n# QMAKE_CXXFLAGS   *= -Wlogical-op\n\n# QMAKE_CXXFLAGS   *= -Werror=format-security\n\n# QMAKE_CXXFLAGS   *= -Woverloaded-virtual\n\n# QMAKE_CXXFLAGS   *= -std=c++11\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# --- optional debug options\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# QMAKE_CXXFLAGS_DEBUG   *= -fsanitize=address -fno-omit-frame-pointer \n\n# QMAKE_CXXFLAGS_DEBUG   *= -fsanitize=address -fno-omit-frame-pointer\n\n# QMAKE_CXXFLAGS_DEBUG   *= -fsanitize=address\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# --- optional optimzations\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# qwt code doesn't check errno after calling math functions\n\n# so it is perfectly safe to disable it in favor of better performance\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# qwt code doesn't rely ( at least intends not to do )\n\n# on an exact implementation of IEEE or ISO rules/specifications\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# QMAKE_CXXFLAGS   *= -funsafe-math-optimizations \n",
        "Line" : 72,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# also enables -fno-math-errno and -funsafe-math-optimizations\n\n# QMAKE_CXXFLAGS   *= -ffast-math\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# QMAKE_CXXFLAGS_DEBUG  *= -Og # since gcc 4.8\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# QMAKE_CXXFLAGS_RELEASE  *= -O3\n\n# QMAKE_CXXFLAGS_RELEASE  *= -Ofast\n\n# QMAKE_CXXFLAGS_RELEASE  *= -Os\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# when using the gold linker ( Qt < 4.8 ) - might be \n\n# necessary on non linux systems too\n\n#QMAKE_LFLAGS += -lrt\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "#QMAKE_CXXFLAGS_RELEASE  *= -O3\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "######################################################################\n\n# paths for building qwt\n\n######################################################################\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# in case of debug_and_release object files\n\n# are built in the release and debug subdirectories\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 20
    },
    "qwt/qwtconfig.pri" : {
      "ObjectId" : "f0125dbe285a8f68836a122e08fb2a3dede2ebbe",
      "LastModified" : "2019-02-25T22:23:51Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "################################################################\n\n# Qwt Widget Library\n\n# Copyright (C) 1997   Josef Wilgen\n\n# Copyright (C) 2002   Uwe Rathmann\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the Qwt License, Version 1.0\n\n################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "######################################################################\n\n# Install paths\n\n######################################################################\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QWT_INSTALL_PREFIX = /usr/local/qwt-$$QWT_VERSION-svn-qt-$$QT_VERSION\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# QWT_INSTALL_PREFIX = C:/Qwt-$$QWT_VERSION-svn-qt-$$QT_VERSION\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "######################################################################\n\n# Designer plugin\n\n# creator/designer load designer plugins from certain default\n\n# directories ( f.e the path below QT_INSTALL_PREFIX ) and the \n\n# directories listed in the QT_PLUGIN_PATH environment variable.\n\n# When using the path below QWT_INSTALL_PREFIX you need to\n\n# add $${QWT_INSTALL_PREFIX}/plugins to QT_PLUGIN_PATH in the \n\n# runtime environment of designer/creator.\n\n######################################################################\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# linux distributors often organize the Qt installation\n\n# their way and QT_INSTALL_PREFIX doesn't offer a good\n\n# path. Also QT_INSTALL_PREFIX is only one of the default\n\n# search paths of the designer - not the Qt creator\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#QWT_INSTALL_PLUGINS   = $$[QT_INSTALL_PREFIX]/plugins/designer\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "######################################################################\n\n# Features\n\n# When building a Qwt application with qmake you might want to load\n\n# the compiler/linker flags, that are required to build a Qwt application\n\n# from qwt.prf. Therefore all you need to do is to add \"CONFIG += qwt\" \n\n# to your project file and take care, that qwt.prf can be found by qmake.\n\n# ( see http://doc.trolltech.com/4.7/qmake-advanced-usage.html#adding-new-configuration-features )\n\n# I recommend not to install the Qwt features together with the\n\n# Qt features, because you will have to reinstall the Qwt features,\n\n# with every Qt upgrade. \n\n######################################################################\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# QWT_INSTALL_FEATURES  = $$[QT_INSTALL_PREFIX]/features\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "######################################################################\n\n# Build the static/shared libraries.\n\n# If QwtDll is enabled, a shared library is built, otherwise\n\n# it will be a static library.\n\n######################################################################\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#QWT_CONFIG           += QwtDll\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "######################################################################\n\n# QwtPlot enables all classes, that are needed to use the QwtPlot \n\n# widget. \n\n######################################################################\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "######################################################################\n\n# QwtWidgets enables all classes, that are needed to use the all other\n\n# widgets (sliders, dials, ...), beside QwtPlot. \n\n######################################################################\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#QWT_CONFIG     += QwtWidgets\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "######################################################################\n\n# If you want to display svg images on the plot canvas, or\n\n# export a plot to a SVG document\n\n######################################################################\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#QWT_CONFIG     += QwtSvg\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "######################################################################\n\n# If you want to use a OpenGL plot canvas\n\n######################################################################\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "######################################################################\n\n# You can use the MathML renderer of the Qt solutions package to \n\n# enable MathML support in Qwt. Because of license implications\n\n# the ( modified ) code of the MML Widget solution is included and\n\n# linked together with the QwtMathMLTextEngine into an own library. \n\n# To use it you will have to add \"CONFIG += qwtmathml\"\n\n# to your qmake project file.\n\n######################################################################\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#QWT_CONFIG     += QwtMathML\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "######################################################################\n\n# Create and install pc files for pkg-config\n\n# See http://www.freedesktop.org/wiki/Software/pkg-config/\n\n######################################################################\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#QWT_CONFIG     += QwtPkgConfig\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 21
    },
    "qwt/qwtfunctions.pri" : {
      "ObjectId" : "45ba6b6e866f89ff2f823e64b131b6aac019fb18",
      "LastModified" : "2019-02-25T22:23:51Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "################################################################\n\n# Qwt Widget Library\n\n# Copyright (C) 1997   Josef Wilgen\n\n# Copyright (C) 2002   Uwe Rathmann\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the Qwt License, Version 1.0\n\n################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copied and modified from qt_functions.prf\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Many Linux distributions install Qwt in the same directory\n\n# as the Qt libs and thus we need to prepend the path for the local build\n\n# to avoid conflicting with the installed version.\n\n# Qt5 qmake appends ( instead of prepending ) the path to the Qt libs\n\n# to LIBS, but for Qt4 we need to use the QMAKE_LIBDIR_FLAGS.\n",
        "Line" : 49,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 3
    },
    "qwt/src/CMakeLists.txt" : {
      "ObjectId" : "c4bcbb76ec9a42f82ccca7df091b8fe5914bf302",
      "LastModified" : "2019-02-25T22:23:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_definitions( -DUSE_OPENGL )\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#qwt_plot_glcanvas.h\n\n#qwt_plot_glcanvas.cpp\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#qwt_plot_opengl_canvas.h\n\n#qwt_plot_opengl_canvas.cpp\n",
        "Line" : 197,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "qwt/src/src.pri" : {
      "ObjectId" : "cd9b7d9401b45acdaf0541dbeb96520281875b0c",
      "LastModified" : "2019-02-25T22:23:51Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "################################################################\n\n# Qwt Widget Library\n\n# Copyright (C) 1997   Josef Wilgen\n\n# Copyright (C) 2002   Uwe Rathmann\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the Qwt License, Version 1.0\n\n################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qwt/src/src.pro" : {
      "ObjectId" : "0653ae3b7556d1693d3056cbd06b0ddcb9156a4e",
      "LastModified" : "2019-02-25T22:23:51Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "################################################################\n\n# Qwt Widget Library\n\n# Copyright (C) 1997   Josef Wilgen\n\n# Copyright (C) 2002   Uwe Rathmann\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the Qwt License, Version 1.0\n\n################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# qmake project file for building the qwt libraries\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# we increase the SONAME for every minor number\n",
        "Line" : 31,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Install directives\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# there is no QMAKE_PKGCONFIG_FILE fo Qt4\n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    }
  },
  "FileTypes" : {
    "CMAKE" : 10,
    "QMAKE" : 9
  },
  "ElapsedTime" : 1610
}