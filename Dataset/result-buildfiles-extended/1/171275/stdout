{
  "Repository" : "171275",
  "Revision" : "HEAD",
  "ObjectId" : "8c4e3c5abe2dd2d6cdebe7de93a942075bf72762",
  "CommitTime" : "2019-04-09T23:47:37Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "3248e698b5e1c055a82cf800699b4c5c0bc0b1c4",
      "LastModified" : "2009-11-20T13:59:55Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "make/build.xml" : {
      "ObjectId" : "79ec607eda91ee3e6462223918b3b7d1e896c8b3",
      "LastModified" : "2019-04-09T23:47:37Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n   - Ant build for GlueGen and corresponding ANT tasks. Also builds\n   - JOGL-specific BuildStaticGLInfo and its corresponding ANT task.\n   -\n   - This build has been tested with ANT 1.6.2 and ANTLR 2.7.4.\n   -\n   - Public targets:\n   -   all:  clean and build GlueGen and GlueGen Ant task\n   -   clean:  clean all built\n  ",
        "Line" : 11,
        "CharPositionInLine" : 6
      },
      "1" : {
        "Text" : " Create the classpath for compiling GlueGen. \n         This requires the user-defined \"antlr.jar\" property. ",
        "Line" : 31,
        "CharPositionInLine" : 66
      },
      "2" : {
        "Text" : " Create the classpath for compiling Android only stuff. ",
        "Line" : 39,
        "CharPositionInLine" : 68
      },
      "3" : {
        "Text" : " Create the classpath for compiling GlueGen. \n         This requires the user-defined \"antlr.jar\" property. ",
        "Line" : 45,
        "CharPositionInLine" : 66
      },
      "4" : {
        "Text" : " Declare all paths and user defined variables. ",
        "Line" : 53,
        "CharPositionInLine" : 59
      },
      "5" : {
        "Text" : " property name=\"javadoc.link\" value=\"http://java.sun.com/j2se/1.4.2/docs/api/\" /",
        "Line" : 55,
        "CharPositionInLine" : 92
      },
      "6" : {
        "Text" : " property name=\"javadoc.link\" value=\"http://download.oracle.com/javase/1.5.0/docs/api/\" /",
        "Line" : 56,
        "CharPositionInLine" : 101
      },
      "7" : {
        "Text" : " The source and build directories. ",
        "Line" : 59,
        "CharPositionInLine" : 47
      },
      "8" : {
        "Text" : " fallback ",
        "Line" : 81,
        "CharPositionInLine" : 77
      },
      "9" : {
        "Text" : " fallback ",
        "Line" : 86,
        "CharPositionInLine" : 77
      },
      "10" : {
        "Text" : " NOTE:  this MUST be relative for FileSet ",
        "Line" : 96,
        "CharPositionInLine" : 114
      },
      "11" : {
        "Text" : " The generated source directories. ",
        "Line" : 98,
        "CharPositionInLine" : 47
      },
      "12" : {
        "Text" : " The compiler output directories. ",
        "Line" : 103,
        "CharPositionInLine" : 46
      },
      "13" : {
        "Text" : " Call the external config validator script to make sure the config is ok and consistent ",
        "Line" : 109,
        "CharPositionInLine" : 100
      },
      "14" : {
        "Text" : " Create the required output directories. ",
        "Line" : 112,
        "CharPositionInLine" : 53
      },
      "15" : {
        "Text" : " Create the classpath for ANTLR.  \n         This requires the user-defined \"antlr.jar\" property. ",
        "Line" : 120,
        "CharPositionInLine" : 66
      },
      "16" : {
        "Text" : " Create the classpath for using GlueGen. ",
        "Line" : 125,
        "CharPositionInLine" : 53
      },
      "17" : {
        "Text" : " The location of the GlueGen source and the C grammar files. ",
        "Line" : 131,
        "CharPositionInLine" : 73
      },
      "18" : {
        "Text" : " The resulting location of the generated Java files from the\n      - C grammar via ANTLR. ",
        "Line" : 136,
        "CharPositionInLine" : 33
      },
      "19" : {
        "Text" : " the launcher is compiled and packaged explicit - if android ",
        "Line" : 145,
        "CharPositionInLine" : 73
      },
      "20" : {
        "Text" : " optional android classes - if android ",
        "Line" : 148,
        "CharPositionInLine" : 51
      },
      "21" : {
        "Text" : " property name=\"java.part.awt\" value=\"com/jogamp/common/util/awt/** jogamp/common/awt/**\"/",
        "Line" : 151,
        "CharPositionInLine" : 102
      },
      "22" : {
        "Text" : " Define the GlueGen task we just built ",
        "Line" : 162,
        "CharPositionInLine" : 51
      },
      "23" : {
        "Text" : " Use GlueGen to generate the source code for the ElfHeader\n       implementation. Note that to make the build process simpler (in\n       particular, the nightly builds) we do not do this every time we\n       run the build, but instead check in the generated sources to\n       the source tree. ",
        "Line" : 180,
        "CharPositionInLine" : 28
      },
      "24" : {
        "Text" : " Only to cherry pick defines -> java files\n    <gluegen src=\"stub_includes/os/elf_eh_const.h\"\n             config=\"elf-eh-const.cfg\"\n             includeRefId=\"stub.includes.fileset.os\"\n             literalInclude=\"${stub.includes.gluegen.gg}\"\n             emitter=\"com.jogamp.gluegen.JavaEmitter\"\n             debug=\"false\">\n      <classpath refid=\"gluegen.classpath\" />\n    </gluegen>\n    <gluegen src=\"stub_includes/os/elf_sh_const.h\"\n             config=\"elf-sh-const.cfg\"\n             includeRefId=\"stub.includes.fileset.os\"\n             literalInclude=\"${stub.includes.gluegen.gg}\"\n             emitter=\"com.jogamp.gluegen.JavaEmitter\"\n             debug=\"false\">\n      <classpath refid=\"gluegen.classpath\" />\n    </gluegen> ",
        "Line" : 210,
        "CharPositionInLine" : 19
      },
      "25" : {
        "Text" : " ================================================================== ",
        "Line" : 213,
        "CharPositionInLine" : 80
      },
      "26" : {
        "Text" : " \n       - Compile the native C code for GlueGen's dynamic linker interface.\n      ",
        "Line" : 216,
        "CharPositionInLine" : 10
      },
      "27" : {
        "Text" : " FIXME: this is a hack; the cpptask should have an option to change the\n           suffix or at least understand the override from .so to .dll ",
        "Line" : 420,
        "CharPositionInLine" : 75
      },
      "28" : {
        "Text" : " exec mt, the Microsoft Manifest Tool, to include DLL manifests in order to resolve the location of msvcr80.dll ",
        "Line" : 429,
        "CharPositionInLine" : 126
      },
      "29" : {
        "Text" : " TODO: versioninfo  companyname=\"java.net\"\n                      legalcopyright=\"Copyright\"\n                      productname=\"GlueGen\" \n                      productversion=\"x.y.z\"\n                      description=\"Description\"\n                      fileversion=\"x.y.z\" \n                      filecomments=\"File Comment\" /",
        "Line" : 487,
        "CharPositionInLine" : 55
      },
      "30" : {
        "Text" : " Produce duplicates for different configurations, since non-native-jar aliasing (Bug 1023/Bug 1024) ",
        "Line" : 546,
        "CharPositionInLine" : 114
      },
      "31" : {
        "Text" : " ================================================================== ",
        "Line" : 550,
        "CharPositionInLine" : 78
      },
      "32" : {
        "Text" : "\n    - Build GlueGen.\n    ",
        "Line" : 553,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : " Int*Maps ",
        "Line" : 556,
        "CharPositionInLine" : 22
      },
      "34" : {
        "Text" : " Long*Maps ",
        "Line" : 573,
        "CharPositionInLine" : 23
      },
      "35" : {
        "Text" : " substitutes certain token in IntIntHashmap to create new primitive HasmMap",
        "Line" : 601,
        "CharPositionInLine" : 87
      },
      "36" : {
        "Text" : " no clue why we have to do this twice... otherwise it will only replace one token per line ",
        "Line" : 612,
        "CharPositionInLine" : 107
      },
      "37" : {
        "Text" : " IntegerStack ",
        "Line" : 621,
        "CharPositionInLine" : 26
      },
      "38" : {
        "Text" : "\n    - Using ANTLR generate the specified Java files.\n    -\n    - @param target the grammar file to process\n    - @param output.dir the directory to write the generated files to.  If\n    -        the directory does not exist, it will be created.\n    ",
        "Line" : 685,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : " Generate the Java files ",
        "Line" : 687,
        "CharPositionInLine" : 37
      },
      "40" : {
        "Text" : "\n    - Using ANTLR generate the specified Java files with an overridden\n    - grammar file.\n    -\n    - @param target the grammar file to process\n    - @param override the overridding grammar file\n    - @param output.dir the directory to write the generated files to.  If\n    -        the directory does not exist, it will be created.\n   ",
        "Line" : 701,
        "CharPositionInLine" : 7
      },
      "41" : {
        "Text" : " Generate the Java files ",
        "Line" : 703,
        "CharPositionInLine" : 37
      },
      "42" : {
        "Text" : " Because ANTLR looks for importVocab files in the current\n         working directory, it likes to have all of its files,\n         including supergrammars, in one place, so copy all of the\n         grammars to the output directory up front so we don't put\n         temporary files into the source tree ",
        "Line" : 714,
        "CharPositionInLine" : 50
      },
      "43" : {
        "Text" : " Generate the Java files from the C grammar using ANTLR. ",
        "Line" : 728,
        "CharPositionInLine" : 69
      },
      "44" : {
        "Text" : " Build GlueGen using the generated Java files along with the\n      - original source. ",
        "Line" : 758,
        "CharPositionInLine" : 29
      },
      "45" : {
        "Text" : " Compile gluegen-rt first ",
        "Line" : 760,
        "CharPositionInLine" : 38
      },
      "46" : {
        "Text" : " make non-java code available in classpath ",
        "Line" : 776,
        "CharPositionInLine" : 55
      },
      "47" : {
        "Text" : " Compile gluegen (compile time).\n\n         Uses host.rt.jar, since we require 'com.sun.tools.doclets.Taglet',\n         w/o it breaks build on OSX w/ Java6 compiler. \n         Surprisingly it works on other platforms, which seems to pick classes\n         outside of the 'bootclasspath'.\n      ",
        "Line" : 789,
        "CharPositionInLine" : 10
      },
      "48" : {
        "Text" : " Build gluegen.jar. ",
        "Line" : 838,
        "CharPositionInLine" : 32
      },
      "49" : {
        "Text" : " Build gluegen-rt.jar. ",
        "Line" : 891,
        "CharPositionInLine" : 35
      },
      "50" : {
        "Text" : " copy file=\"Manifest-rt-alt\"\n          tofile=\"${build}/Manifest-rt-alt.temp\"\n          overwrite=\"true\">\n        <filterset>\n            <filter token=\"VERSION\" value=\"${jogamp.version}\"/>\n            <filter token=\"BUILD_VERSION\" value=\"${gluegen.version}\"/>\n            <filter token=\"SCM_BRANCH\" value=\"${gluegen.build.branch}\"/>\n            <filter token=\"SCM_COMMIT\" value=\"${gluegen.build.commit}\"/>\n            <filter token=\"SHA_SOURCES\" value=\"${gluegen.build.sha.sources}\"/>\n            <filter token=\"SHA_CLASSES\" value=\"${gluegen.build.sha.classes}\"/>\n            <filter token=\"SHA_CLASSES_THIS\" value=\"${gluegen.build.sha.classes.gluegen-rt-alt}\"/>\n            <filter token=\"SHA_NATIVES\" value=\"${gluegen.build.sha.natives}\"/>\n            <filter token=\"SHA_NATIVES_THIS\" value=\"0\"/>\n            <filter token=\"BASEVERSION\" value=\"${jogamp.version.base}\"/>\n            <filter token=\"JAR_CODEBASE_TAG\" value=\"${jogamp.jar.codebase}\"/>\n        </filterset>\n    </copy ",
        "Line" : 922,
        "CharPositionInLine" : 15
      },
      "51" : {
        "Text" : " Build gluegen-rt-alt.jar. ",
        "Line" : 923,
        "CharPositionInLine" : 39
      },
      "52" : {
        "Text" : " jar destfile=\"${build}/gluegen-rt-alt.jar\" manifest=\"${build}/Manifest-rt-alt.temp\">\n      <fileset dir=\"${classes}\">\n        <include name=\"com/jogamp/gluegen/runtime/*.class\" />\n        <include name=\"com/jogamp/common/**\" />\n        <include name=\"jogamp/common/**\" />\n        <exclude name=\"${jogamp-android-launcher.classes}\" />\n        <exclude name=\"${java.part.android}\" />\n        <exclude name=\"${java.part.jcpp}\" />\n      </fileset>\n      <fileset dir=\"resources/assets\">\n        <include name=\"**\" />\n      </fileset>\n    </jar ",
        "Line" : 936,
        "CharPositionInLine" : 14
      },
      "53" : {
        "Text" : " Copy antlr.jar into build directory for convenience so\n         gluegen.jar can be run via \"java -jar\". antlr.jar is\n         referenced via a Class-Path entry in the Manifest of\n         gluegen.jar. ",
        "Line" : 977,
        "CharPositionInLine" : 26
      },
      "54" : {
        "Text" : " copy a jnlp with empty codebase into build folder for local testing \n         overwrite property in gluegen.proerpties if desired             ",
        "Line" : 981,
        "CharPositionInLine" : 77
      },
      "55" : {
        "Text" : "compile gluegen-rt-android last",
        "Line" : 992,
        "CharPositionInLine" : 43
      },
      "56" : {
        "Text" : " Build gluegen-rt-android.jar. ",
        "Line" : 1047,
        "CharPositionInLine" : 43
      },
      "57" : {
        "Text" : " jvmarg value=\"-Djogamp.debug.SHASum\"/ ",
        "Line" : 1084,
        "CharPositionInLine" : 55
      },
      "58" : {
        "Text" : " Build the general public Javadoc in the target folder hierarchy javadoc/gluegen/javadoc ",
        "Line" : 1255,
        "CharPositionInLine" : 101
      },
      "59" : {
        "Text" : " ================================================================== ",
        "Line" : 1278,
        "CharPositionInLine" : 80
      },
      "60" : {
        "Text" : "\n       - Build the per-platform binary zip archive for developers.\n       - This must be called after all of the build targets complete.\n      ",
        "Line" : 1282,
        "CharPositionInLine" : 10
      },
      "61" : {
        "Text" : "delete includeEmptyDirs=\"true\" quiet=\"true\" failonerror=\"false\">\n            <fileset dir=\"${build}\" includes=\"gluegen-java-src.zip\" />\n        </delete",
        "Line" : 1287,
        "CharPositionInLine" : 20
      },
      "62" : {
        "Text" : " Clean up after ourselves ",
        "Line" : 1326,
        "CharPositionInLine" : 42
      },
      "63" : {
        "Text" : " Put  the files created by target gluegen.build from\n         build directory to maven repository, local or remote\n         (targets maven.install and maven.deploy.snapshot respectively)",
        "Line" : 1332,
        "CharPositionInLine" : 75
      },
      "CommentCount" : 64
    },
    "test/TestOneJar_InJar/jogamp01/build.xml" : {
      "ObjectId" : "e1a4b2485f99264e8f3308ee264be6e66d795fe3",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Hook into One-Jar project ",
        "Line" : 4,
        "CharPositionInLine" : 39
      },
      "1" : {
        "Text" : " Will be ignored if available above ",
        "Line" : 6,
        "CharPositionInLine" : 48
      },
      "2" : {
        "Text" : " Uses Invoker to set up a JUnit test bridge ",
        "Line" : 54,
        "CharPositionInLine" : 64
      },
      "3" : {
        "Text" : " Build the One-Jar ",
        "Line" : 59,
        "CharPositionInLine" : 31
      },
      "4" : {
        "Text" : " Test the distribution ",
        "Line" : 92,
        "CharPositionInLine" : 35
      },
      "5" : {
        "Text" : " Uses Invoker to set up a JUnit test bridge ",
        "Line" : 109,
        "CharPositionInLine" : 64
      },
      "CommentCount" : 6
    },
    "test/junit/com/jogamp/gluegen/build.xml" : {
      "ObjectId" : "95617be24292c62fad37719b2ee09e9c8fa026e3",
      "LastModified" : "2010-11-07T03:35:47Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Pull in GlueGen cpptasks build file ",
        "Line" : 17,
        "CharPositionInLine" : 49
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1,
    "ANT" : 3
  },
  "ElapsedTime" : 2220
}