{
  "Repository" : "2422346",
  "Revision" : "HEAD",
  "ObjectId" : "74b3cf9e3008a9b857d231c6c69fe6b4fd1ba667",
  "CommitTime" : "2015-08-06T18:14:09Z",
  "Files" : {
    "pom.xml" : {
      "ObjectId" : "4729db4b311df234a0f9b964a578b1ac8e16d7c1",
      "LastModified" : "2015-08-03T14:08:58Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " 3.1.0.GA ",
        "Line" : 22,
        "CharPositionInLine" : 67
      },
      "1" : {
        "Text" : " SPRING ",
        "Line" : 43,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : " HELPERS ",
        "Line" : 62,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : " LOGGING ",
        "Line" : 93,
        "CharPositionInLine" : 19
      },
      "4" : {
        "Text" : " slf4j-api could be pulled in via transative\n\t\tdependencies, but it's always a better idea to explicitly\n\t\tinclude an artifact in the pom if your code is explicitly\n\t\tusing classes from that artifact ",
        "Line" : 97,
        "CharPositionInLine" : 39
      },
      "5" : {
        "Text" : " We'll use log4j as our backend. ",
        "Line" : 103,
        "CharPositionInLine" : 43
      },
      "6" : {
        "Text" : " Spring uses Commons Logging, so this will\n\t\t     reroute those calls through slf4j ",
        "Line" : 115,
        "CharPositionInLine" : 45
      },
      "7" : {
        "Text" : " Maven doesn't have a global exclusion mechanism,\n\t\tbut marking as 'Provided' like below achieves the same goal ",
        "Line" : 122,
        "CharPositionInLine" : 66
      },
      "8" : {
        "Text" : " XML ",
        "Line" : 130,
        "CharPositionInLine" : 15
      },
      "9" : {
        "Text" : " SERVLET ",
        "Line" : 137,
        "CharPositionInLine" : 19
      },
      "10" : {
        "Text" : "DATABASE ",
        "Line" : 164,
        "CharPositionInLine" : 19
      },
      "11" : {
        "Text" : " this driver is needed during normal runtime as well ",
        "Line" : 196,
        "CharPositionInLine" : 64
      },
      "12" : {
        "Text" : " \n\t\t\t<scope>test</scope>\n\t\t\t ",
        "Line" : 199,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : " TESTING ",
        "Line" : 202,
        "CharPositionInLine" : 19
      },
      "14" : {
        "Text" : " mutation testing to quantify unit test effectiveness ",
        "Line" : 221,
        "CharPositionInLine" : 64
      },
      "15" : {
        "Text" : " I think this may not be needed when you include PIT\n\t\tin the plugins section ",
        "Line" : 223,
        "CharPositionInLine" : 29
      },
      "16" : {
        "Text" : " \n\t\t<dependency>\n\t\t\t<groupId>org.pitest</groupId>\n\t\t\t<artifactId>pitest</artifactId>\n\t\t\t<version>1.1.6</version>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t\t ",
        "Line" : 231,
        "CharPositionInLine" : 7
      },
      "17" : {
        "Text" : " should be explicit, default is 1.5 or something stupid ",
        "Line" : 242,
        "CharPositionInLine" : 69
      },
      "18" : {
        "Text" : " mutation testing to quantify unit test effectiveness ",
        "Line" : 247,
        "CharPositionInLine" : 65
      },
      "19" : {
        "Text" : " The current latest version is 1.1.6, however\n\t\t\t\tthat version seems to have a bug where it hangs\n\t\t\t\twithout ever generating any report output ",
        "Line" : 253,
        "CharPositionInLine" : 50
      },
      "CommentCount" : 20
    }
  },
  "FileTypes" : {
    "MAVEN" : 1
  },
  "ElapsedTime" : 739
}