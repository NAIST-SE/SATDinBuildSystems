{
  "Repository" : "6375858",
  "Revision" : "HEAD",
  "ObjectId" : "0e22259ffca62d66c16a4e279e729d26ccbc95cb",
  "CommitTime" : "2019-04-12T16:19:34Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "c146e239c5191ec63403ac1d152e653fa9737ea5",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# ComPWA - A Common framework for Partial Wave Analysis\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# CMake configuration\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Which target should be build by default?\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Config options\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Setting policy CMP0060 to the new version enforces that libraries are linked\n\n# using their full path. That should help in case that multiple versions of a\n\n# library (e.g. boost) are installed on a system\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Configure RPATH\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Additonal compile flags for various compilers\n\n# ${CMAKE_CXX_COMPILER_ID} can be one of {GNU Clang AppleClang Intel MSVC}\n\n# - verbose output on loop vectorization\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# using Clang or AppleClang\n",
        "Line" : 54,
        "CharPositionInLine" : 48
      },
      "10" : {
        "Text" : "#set(CMAKE_CXX_FLAGS\n\n#    \"${CMAKE_CXX_FLAGS} -Rpass-analysis=loop-vectorize -Rpass=loop-vectorize\")\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# using GCC\n",
        "Line" : 57,
        "CharPositionInLine" : 51
      },
      "12" : {
        "Text" : "# gcc 4.8/4.9 have for example no full regex implementation \n\n# and will cause runtime errors\n\n# full c++11 support is only given in gcc 5.1\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#set(CMAKE_CXX_FLAGS\n\n#    \"${CMAKE_CXX_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=1\")\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# using Intel C++\n",
        "Line" : 67,
        "CharPositionInLine" : 53
      },
      "15" : {
        "Text" : "# nothing here\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Enable all warnings\n\n# This is not good code, in the sense that its not portable (across compilers)\n\n# The portable way using target_compile_options is just so inconvienient, that\n\n# we use this for now. \n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Enable -fPIC flag\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Setting name prefix for libraries\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Code Coverage Configuration\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\n\n# External dependencies\n\n#\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Setting RPATH instead of RUNPATH\n\n# RPATH is search before LD_LIBRARY_PATH at runtime\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# not Clang or AppleClang\n",
        "Line" : 108,
        "CharPositionInLine" : 53
      },
      "23" : {
        "Text" : "# Link libstdc++ statically\n\n# set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -static-libstdc++ -static-libgcc\")\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "#\n\n# Boost unit_test_framework and serialization are used throughout the software\n\n# so that they are a requirement\n\n#\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Link boost statically\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Examples, Geneva\n",
        "Line" : 133,
        "CharPositionInLine" : 18
      },
      "27" : {
        "Text" : "# Geneva\n",
        "Line" : 134,
        "CharPositionInLine" : 13
      },
      "28" : {
        "Text" : "# Find python3\n\n# unfortunately there is a change in the interface of CMake at version 12\n\n# in which the PythonInterp gets deprecated and FindPython3 should be used\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Geneva minimizer module (optional)\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Third party libraries included in the repository\n\n# - easyloggingpp, pybind11, qft++, TBB, parallelSTL, EvtGen\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Setting ComPWA source dir as include directory\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\n\n# Enable target 'test'\n\n#\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\n\n# Submodules\n\n#\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    },
    "Core/CMakeLists.txt" : {
      "ObjectId" : "2cb47118865d6ef750f81020f0d786a9b291f8d9",
      "LastModified" : "2019-03-25T01:02:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################\n\n# ComPWA Core library #\n\n#######################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# TESTING\n\n#\n\n# Testing routines are stored in separate directory\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Run through each source\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Extract the filename without an extension (NAME_WE)\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#Add compile target\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Link to Boost libraries AND your targets and dependencies\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Move testing binaries into a testBin directory\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Copy input files for test programs - we assume they have the name\n\n# ${testName}-input*. Multiple files can be copied.\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Finally add it to test execution -\n\n# Notice the WORKING_DIRECTORY and COMMAND\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "Data/AsciiReader/CMakeLists.txt" : {
      "ObjectId" : "d02ae553da946f93b2859e3700df7e0d8cb4b881",
      "LastModified" : "2019-03-25T01:02:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create AsciiReader library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Install\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Data/CMakeLists.txt" : {
      "ObjectId" : "a13d27b9aadebc2b16c956cd2f78ee75af78fe26",
      "LastModified" : "2019-03-25T01:02:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Data/RootIO/CMakeLists.txt" : {
      "ObjectId" : "af62d49b8d43c261ab70a8e9d4db4ec9e2baad3e",
      "LastModified" : "2019-03-27T05:50:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# target_include_directories(RootDataIO\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# PUBLIC ${CMAKE_CURRENT_SOURCE_DIR} ${ROOT_INCLUDE_DIR}\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# )\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Install\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# TESTING\n\n#\n\n# Testing routines are stored in separate directory\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Estimator/CMakeLists.txt" : {
      "ObjectId" : "5619468e28596ce2a22bf3c4d8f25427e5404a61",
      "LastModified" : "2019-03-25T01:02:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create Estimator libraries.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Estimator/ChiOneD/CMakeLists.txt" : {
      "ObjectId" : "eaa9defb40ba0099f786efa07b0a5d6cd9706e74",
      "LastModified" : "2019-03-25T01:02:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create ChiOneD library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Install\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Estimator/MinLogLH/CMakeLists.txt" : {
      "ObjectId" : "1c4e5a5457e5a62f2d8a406f9f65a80ef455511d",
      "LastModified" : "2019-03-25T01:02:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create MinLogLH library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Estimator/test/CMakeLists.txt" : {
      "ObjectId" : "50a8fb647783e3d5a2a25b4c6f4895a34c7c7f76",
      "LastModified" : "2019-03-27T05:50:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/CMakeLists.txt" : {
      "ObjectId" : "37903ad54c6f14abc103e14987f6f8bbd43420ec",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory( DalitzAnalysis_D0KsKK )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_subdirectory( EvtGen )\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# test subdirectories\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Examples/DalitzAnalysis_D0KsKK/CMakeLists.txt" : {
      "ObjectId" : "4844a77b4bce5002dabc4f3d9c1b726e2656cd7e",
      "LastModified" : "2019-03-25T01:02:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##########################################################\n\n# Create executable for Dalitz plot analysis of D0->KsKK #\n\n##########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure all necessary targets are build\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Examples/DalitzFit/CMakeLists.txt" : {
      "ObjectId" : "5f81ba80df99257489fdd2eb02e1526d81945cb4",
      "LastModified" : "2019-03-25T01:02:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################\n\n# Create executable for Dalitz plot fit of J/psi -> ypipi #\n\n###########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# FindBoost\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#pthread - We need it here, no ideo why!\n",
        "Line" : 26,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 3
    },
    "Examples/EvtGen/CMakeLists.txt" : {
      "ObjectId" : "3665cd32b2710242bd2d5a81d316da0ba6116a2e",
      "LastModified" : "2019-03-25T01:02:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################\n\n# Create executable for Dalitz plot fit of J/psi -> ypipi #\n\n###########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Examples/SimFit/CMakeLists.txt" : {
      "ObjectId" : "24017e506bccf5e9bc3f2175d8a6057acf1e1557",
      "LastModified" : "2019-03-25T01:02:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/test/FitTest/CMakeLists.txt" : {
      "ObjectId" : "774647b1a31adbb0e873db108faadf6cfc39b2c4",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Extract the filename without an extension (NAME_WE)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Add compile target\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Link to Boost libraries AND your targets and dependencies\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Move testing binaries into a testBin directory\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Finally add it to test execution -\n\n# Notice the WORKING_DIRECTORY and COMMAND\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Optimizer/CMakeLists.txt" : {
      "ObjectId" : "2203b65bdf96a4be132e1efa29e319e08b7b1b95",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Optimizer/Geneva/CMakeLists.txt" : {
      "ObjectId" : "408e1a5b389612d492805521e0fadf56d8e077cb",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Geneva minimizer module. Check first if library is available.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Optimizer/Minuit2/CMakeLists.txt" : {
      "ObjectId" : "8e6eb6e9695b3d2d9cf8ea869504bcbe16051e96",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################################\n\n# Create Minuit2 interface library #\n\n####################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Install\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Optimizer/test/CMakeLists.txt" : {
      "ObjectId" : "2c57ec5c81f8e020d228caa09a71d433eaf2fe80",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Physics/CMakeLists.txt" : {
      "ObjectId" : "f9368cf887ad155456a2ac21e8403a4f8857bcf8",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_subdirectory(ExpertSystem)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Physics/Dynamics/CMakeLists.txt" : {
      "ObjectId" : "94a460baf47306bd0c33b24ad8743333fada7bf9",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################\n\n# Create Dynamics library #\n\n################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Install\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# TESTING\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Physics/Dynamics/test/CMakeLists.txt" : {
      "ObjectId" : "9ed7e4733d0d00ae3f144089676f40b230673ffa",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# --------------------FormFactorDecorator -------------------- #      \n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Move testing binaries into a testBin directory\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Physics/EvtGen/CMakeLists.txt" : {
      "ObjectId" : "b7cddde88c0f0828c4ab8cbf914aa023719682bf",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create EvtGen library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#INTERFACE\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Physics/HelicityFormalism/CMakeLists.txt" : {
      "ObjectId" : "95d6a7d37f5cbcbcc5f128edfe44f42d97606847",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################\n\n# Helicity Formalism library #\n\n##############################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# SHARED Library\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install headers\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# TESTING\n\n#\n\n# Testing routines are stored in separate directory\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Physics/HelicityFormalism/test/CMakeLists.txt" : {
      "ObjectId" : "3647914b8cde3fe66ba0e970a8ab17434f8fd650",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -------------------- Model Function Tree Tests -------------------- #      \n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Move testing binaries into a testBin directory\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# -------------------- Helicity Angle Test -------------------- #      \n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Move testing binaries into a testBin directory\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# -------------------- Helicity Angles Correctness Test -------------------- # \n",
        "Line" : 47,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Move testing binaries into a testBin directory\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# -------------------- Helicity Kinematics Tests -------------------- # \n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Move testing binaries into a testBin directory\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "ThirdParty/CMakeLists.txt" : {
      "ObjectId" : "a387f786de3997bc61bf68de6691cae9fb2aec4b",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get system-wide TBB\n\n# System-wide search must be commented out here since pstl's \n\n# FindTBB.cmake is buggy and does not work if find_package( TBB ) \n\n# were called before \n\n#find_package( TBB 2018 )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If no system-wide version is found, use the local one\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We do not care about compiler warnings of thirdparty dependencies\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The fork github.com/wjakob/tbb does unfortunatly not properly export \n\n# its targets\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# The export command above is executed after(!) find_package. Therefore we\n\n# have to create a dummy TBBConfig.cmake file to fool find_library. This \n\n# will be overwritten later\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# We need to set some variables in order to trick the CONFIG mode of pstl's\n\n# FindTBB.cmake\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "ThirdParty/EvtGen/CMakeLists.txt" : {
      "ObjectId" : "c6c92eef63c3b5fb8ea419afe65403e250d77ef2",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create EvtGen library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ThirdParty/backward-cpp/BackwardConfig.cmake" : {
      "ObjectId" : "6cff86c1bdfd8f507275882a752aa58f0e0fa281",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# BackwardMacros.cmake\n\n# Copyright 2013 Google Inc. All Rights Reserved.\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# OPTIONS\n\n###############################################################################\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# CONFIGS\n\n###############################################################################\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# find libdw\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# find libbfd\n",
        "Line" : 61,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# find libdwarf\n",
        "Line" : 74,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# If we attempt to link against static bfd, make sure to link its dependencies, too\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Expand each definition in BACKWARD_DEFINITIONS to its own cmake var and export\n\n# to outer scope\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "ThirdParty/backward-cpp/CMakeLists.txt" : {
      "ObjectId" : "08399a4ac6a3e31f691e1a2626a916a7eefcca6e",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CMakeLists.txt\n\n# Copyright 2013 Google Inc. All Rights Reserved.\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check if compiler is nvcc or nvcc_wrapper\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set CXX standard\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# GNU CXX extensions are not supported by nvcc\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "###############################################################################\n\n# COMPILER FLAGS\n\n###############################################################################\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###############################################################################\n\n# BACKWARD OBJECT\n\n###############################################################################\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###############################################################################\n\n# BACKWARD LIBRARY (Includes backward.cpp)\n\n###############################################################################\n\n#option(BACKWARD_SHARED \"Build dynamic backward-cpp shared lib\" OFF)\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#if(BACKWARD_SHARED)\n\n#    set(libtype SHARED)\n\n#endif()\n\n#add_library(backward ${libtype} backward.cpp)\n\n#target_compile_definitions(backward PUBLIC ${BACKWARD_DEFINITIONS})\n\n#target_include_directories(backward PUBLIC ${BACKWARD_INCLUDE_DIRS})\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###############################################################################\n\n# TESTS\n\n###############################################################################\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Tests without backward.cpp\n",
        "Line" : 98,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Tests with backward.cpp\n",
        "Line" : 110,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 11
    },
    "ThirdParty/backward-cpp/test_package/CMakeLists.txt" : {
      "ObjectId" : "90cf19028eb9f4f08357df38c23dd66c8e120a86",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/easyloggingpp/CMakeLists.txt" : {
      "ObjectId" : "be3a7a4b27a7ea20ff2baec3333838a71b4a4e26",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Easyloggingpp - Logging library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create object file\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ThirdParty/pybind11/CMakeLists.txt" : {
      "ObjectId" : "a72d7dc4c36a0e799464fa7031cd03146451f831",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt -- Build system for the pybind11 modules\n\n#\n\n# Copyright (c) 2015 Wenzel Jakob <wenzel@inf.ethz.ch>\n\n#\n\n# All rights reserved. Use of this source code is governed by a\n\n# BSD-style license that can be found in the LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cmake warns if loaded from a min-3.0-required parent dir, so silence the warning:\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# CMake versions < 3.4.0 do not support try_compile/pthread checks without C as active language.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check if pybind11 is being used directly or via add_subdirectory\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Cache variables so pybind11_add_module can be used in parent projects\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# NB: when adding a header don't forget to also add it to setup.py\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# extract project version from source\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# CMake >= 3.0\n",
        "Line" : 95,
        "CharPositionInLine" : 42
      },
      "8" : {
        "Text" : "# Build an interface library target:\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# to match exported target\n",
        "Line" : 98,
        "CharPositionInLine" : 50
      },
      "10" : {
        "Text" : "# GNUInstallDirs \"DATADIR\" wrong here; CMake search path wants \"share\".\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Remove CMAKE_SIZEOF_VOID_P from ConfigVersion.cmake since the library does\n\n# not depend on architecture specific settings or libraries.\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "ThirdParty/pybind11/tests/CMakeLists.txt" : {
      "ObjectId" : "523262977357edb95507f2189ab27d9e6cf286be",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt -- Build system for the pybind11 test suite\n\n#\n\n# Copyright (c) 2015 Wenzel Jakob <wenzel@inf.ethz.ch>\n\n#\n\n# All rights reserved. Use of this source code is governed by a\n\n# BSD-style license that can be found in the LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We're being loaded directly, i.e. not via add_subdirectory, so make this\n\n# work as its own project and load the pybind11Config to get the tools we need\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Full set of test files (you can override these; see below)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Invoking cmake with something like:\n\n#     cmake -DPYBIND11_TEST_OVERRIDE=\"test_callbacks.cpp;test_picking.cpp\" ..\n\n# lets you override the tests that get compiled and run.  You can restore to all tests with:\n\n#     cmake -DPYBIND11_TEST_OVERRIDE= ..\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Contains the set of test files that require pybind11_cross_module_tests to be\n\n# built; if none of these are built (i.e. because TEST_OVERRIDE is used and\n\n# doesn't include them) the second module doesn't get built.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check if Eigen is available; if not, remove from PYBIND11_TEST_FILES (but\n\n# keep it in PYBIND11_PYTEST_FILES, so that we get the \"eigen is not installed\"\n\n# skip message).\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Try loading via newer Eigen's Eigen3Config first (bypassing tools/FindEigen3.cmake).\n\n# Eigen 3.3.1+ exports a cmake 3.0+ target for handling dependency requirements, but also\n\n# produces a fatal error if loaded from a pre-3.0 cmake.\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Couldn't load via target, so fall back to allowing module mode finding, which will pick up\n\n# tools/FindEigen3.cmake\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Eigen 3.3.1+ cmake sets EIGEN3_VERSION_STRING (and hard codes the version when installed\n\n# rather than looking it up in the cmake script); older versions, and the\n\n# tools/FindEigen3.cmake, set EIGEN3_VERSION instead.\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Optional dependency for some tests (boost::variant is only supported with version >= 1.56)\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Compile with compiler warnings turned on\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build pybind11_cross_module_tests if any test_whatever.py are being built that require it\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Create the binding library\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Always write the output file directly into the 'tests' directory (even on MSVC)\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Make sure pytest is found or produce a fatal error\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# A single command to compile and run the tests\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Add a check target to run all the tests, starting with pytest (we add dependencies to this below)\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# The remaining tests only apply when being built as part of the pybind11 project, but not if the\n\n# tests are being built independently.\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Add a post-build comment to show the primary test suite .so size and, if a previous size, compare it:\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Test embedding the interpreter. Provides the `cpptest` target.\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Test CMake build using functions and targets from subdirectory or installed location\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "ThirdParty/pybind11/tests/test_cmake_build/CMakeLists.txt" : {
      "ObjectId" : "c9b5fcb2e72ab3cb87eff93e8a7ac3dd7f67000c",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 3.0 needed for interface library for subdirectory_target/installed_target\n\n# 3.1 needed for cmake -E env for testing\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "ThirdParty/pybind11/tests/test_cmake_build/installed_embed/CMakeLists.txt" : {
      "ObjectId" : "f7fc09c2191b45564091443f5e1b7069896738cb",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Do not treat includes from IMPORTED target as SYSTEM (Python headers in pybind11::embed).\n\n# This may be needed to resolve header conflicts, e.g. between Python release and debug headers.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ThirdParty/pybind11/tests/test_cmake_build/installed_function/CMakeLists.txt" : {
      "ObjectId" : "e0c20a8a3634ea7e33859c5009ba2c9edd1b011a",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/pybind11/tests/test_cmake_build/installed_target/CMakeLists.txt" : {
      "ObjectId" : "cd3ae6f7d84ccb6b7cf9ff58c71cd37a90d6710a",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# make sure result is, for example, test_installed_target.so, not libtest_installed_target.dylib\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do not treat includes from IMPORTED target as SYSTEM (Python headers in pybind11::module).\n\n# This may be needed to resolve header conflicts, e.g. between Python release and debug headers.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ThirdParty/pybind11/tests/test_cmake_build/subdirectory_embed/CMakeLists.txt" : {
      "ObjectId" : "88ba60dd523ce0e5ba98a3604fb91fcd4376f980",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test basic target functionality\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test custom export group -- PYBIND11_EXPORT_NAME\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ThirdParty/pybind11/tests/test_cmake_build/subdirectory_function/CMakeLists.txt" : {
      "ObjectId" : "278007aebd1c130cce62772decb6a19cd77e3fbb",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/pybind11/tests/test_cmake_build/subdirectory_target/CMakeLists.txt" : {
      "ObjectId" : "6b142d62a931a3636e4074a6d39be5a0e7052689",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# make sure result is, for example, test_installed_target.so, not libtest_installed_target.dylib\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ThirdParty/pybind11/tests/test_embed/CMakeLists.txt" : {
      "ObjectId" : "0a43e0e22eb425e85fc8c06826beb3b28b4ca346",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Dummy target on PyPy. Embedding is not supported.\n",
        "Line" : 2,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 1
    },
    "ThirdParty/pybind11/tools/FindCatch.cmake" : {
      "ObjectId" : "9d490c5aade2151ebdd8cc84509361ba1c061f84",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the Catch test framework or download it (single header)\n\n#\n\n# This is a quick module for internal use. It assumes that Catch is\n\n# REQUIRED and that a minimum version is provided (not EXACT). If\n\n# a suitable version isn't found locally, the single header file\n\n# will be downloaded and placed in the build dir: PROJECT_BINARY_DIR.\n\n#\n\n# This code sets the following variables:\n\n#  CATCH_INCLUDE_DIR      - path to catch.hpp\n\n#  CATCH_VERSION          - version number\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Extract the version number from catch.hpp\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Download the single-header version of Catch\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for catch locally\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Download the header if it wasn't found or if it's outdated\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ThirdParty/pybind11/tools/FindEigen3.cmake" : {
      "ObjectId" : "9c546a05d859b18c49554d7ee7221cc486b7760e",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "ThirdParty/pybind11/tools/FindPythonLibsNew.cmake" : {
      "ObjectId" : "ad3ed48fae50d461a08d925840d244a760f5da51",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find python libraries\n\n# This module finds the libraries corresponding to the Python interpeter\n\n# FindPythonInterp provides.\n\n# This code sets the following variables:\n\n#\n\n#  PYTHONLIBS_FOUND           - have the Python libs been found\n\n#  PYTHON_PREFIX              - path to the Python installation\n\n#  PYTHON_LIBRARIES           - path to the python library\n\n#  PYTHON_INCLUDE_DIRS        - path to where Python.h is found\n\n#  PYTHON_MODULE_EXTENSION    - lib extension, e.g. '.so' or '.pyd'\n\n#  PYTHON_MODULE_PREFIX       - lib name prefix: usually an empty string\n\n#  PYTHON_SITE_PACKAGES       - path to installation site-packages\n\n#  PYTHON_IS_DEBUG            - whether the Python interpreter is a debug build\n\n#\n\n# Thanks to talljimbo for the patch adding the 'LDVERSION' config\n\n# variable usage.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n# Copyright 2012 Continuum Analytics, Inc.\n\n#\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in the\n\n# documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n# nor the names of their contributors may be used to endorse or promote\n\n# products derived from this software without specific prior written\n\n# permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# # A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Checking for the extension makes sure that `LibsNew` was found and not just `Libs`.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use the Python interpreter to find the libs.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# According to http://stackoverflow.com/questions/646518/python-how-to-detect-debug-interpreter\n\n# testing whether sys has the gettotalrefcount function is a reliable, cross-platform\n\n# way to detect a CPython debug interpreter.\n\n#\n\n# The library suffix is from the config var LDVERSION sometimes, otherwise\n\n# VERSION. VERSION will typically be like \"2.7\" on unix, and \"27\" on windows.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Convert the process output into a list\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Make sure the Python has the same pointer-size as the chosen compiler\n\n# Skip if CMAKE_SIZEOF_VOID_P is not defined\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The built-in FindPython didn't always give the version numbers\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Make sure all directory separators are '/'\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# when run in a venv, PYTHON_PREFIX points to it. But the libraries remain in the\n\n# original python installation. They may be found relative to PYTHON_INCLUDE_DIR.\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# raise an error if the python libs are still not found.\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#message(STATUS \"Searching for Python libs in ${_PYTHON_LIBS_SEARCH}\")\n\n# Probably this needs to be more involved. It would be nice if the config\n\n# information the python interpreter itself gave us were more complete.\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# If all else fails, just set the name/version and let the linker figure out the path.\n",
        "Line" : 172,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# We use PYTHON_INCLUDE_DIR, PYTHON_LIBRARY and PYTHON_DEBUG_LIBRARY for the\n\n# cache entries because they are meant to specify the location of a single\n\n# library. We now set the variables listed by the documentation for this\n\n# module.\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "ThirdParty/pybind11/tools/pybind11Tools.cmake" : {
      "ObjectId" : "a7c471a07a38e158ab4fde3a304c53b27ca774c9",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tools/pybind11Tools.cmake -- Build system for the pybind11 modules\n\n#\n\n# Copyright (c) 2015 Wenzel Jakob <wenzel@inf.ethz.ch>\n\n#\n\n# All rights reserved. Use of this source code is governed by a\n\n# BSD-style license that can be found in the LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add a CMake parameter for choosing a desired Python version\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Checks whether the given CXX/linker flags can compile and link a cxx file.  cxxflags and\n\n# linkerflags are lists of flags to use.  The result variable is a unique variable name for each set\n\n# of flags: the compilation result will be cached base on the result variable.  If the flags work,\n\n# sets them in cxxflags_out/linkerflags_out internal cache variables (in addition to ${result}).\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal: find the appropriate link time optimization flags for this compiler\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Clang Gold plugin does not support -Os; append -O3 to MinSizeRel builds to override it\n",
        "Line" : 66,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Intel equivalent to LTO is called IPO\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# cmake only interprets libraries as linker flags when they start with a - (otherwise it\n\n# converts /LTCG to \\LTCG as if it was a Windows path).  Luckily MSVC supports passing flags\n\n# with - instead of /, even if it is a bit non-standard:\n",
        "Line" : 88,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Enable LTO flags if found, except for Debug builds\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Build a Python extension module:\n\n# pybind11_add_module(<name> [MODULE | SHARED] [EXCLUDE_FROM_ALL]\n\n#                     [NO_EXTRAS] [THIN_LTO] source1 [source2 ...])\n\n#\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# from project CMakeLists.txt\n\n# from pybind11Config\n",
        "Line" : 134,
        "CharPositionInLine" : 37
      },
      "10" : {
        "Text" : "# The prefix and extension are provided by FindPythonLibsNew.cmake\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# -fvisibility=hidden is required to allow multiple modules compiled against\n\n# different pybind versions to work properly, and for some features (e.g.\n\n# py::module_local).  We force it on everything inside the `pybind11`\n\n# namespace; also turning it on for a pybind module compilation here avoids\n\n# potential warnings or issues from having mixed hidden/non-hidden types.\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Link against the Python shared library on Windows\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# It's quite common to have multiple copies of the same Python version\n\n# installed on one's system. E.g.: one copy from the OS and another copy\n\n# that's statically linked into an application like Blender or Maya.\n\n# If we link our plugin library against the OS Python here and import it\n\n# into Blender or Maya later on, this will cause segfaults when multiple\n\n# conflicting Python instances are active at the same time (even when they\n\n# are of the same version).\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Windows is not affected by this issue since it handles DLL imports\n\n# differently. The solution for Linux and Mac OS is simple: we just don't\n\n# link against the Python library. The resulting shared library will have\n\n# missing symbols, but that's perfectly fine -- they will be resolved at\n\n# import time.\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Suppress CMake >= 3.0 warning for shared libraries\n",
        "Line" : 170,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Make sure C++11/14 are enabled\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Strip unnecessary sections of the binary on Linux/Mac OS\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# /MP enables multithreaded builds (relevant when there are many files), /bigobj is\n\n# needed for bigger binding projects due to the limit to 64k addressable sections\n",
        "Line" : 198,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 19
    },
    "ThirdParty/qft++/CMakeLists.txt" : {
      "ObjectId" : "3e48d4b05842f52f46e27fc0629cb3aa10995852",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################\n\n# Create qft++ library #\n\n########################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Install\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Tools/Adapters/CMakeLists.txt" : {
      "ObjectId" : "3f58645bd89517bce6958a46216bc03e70f4b7fd",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Tools/CMakeLists.txt" : {
      "ObjectId" : "33757e3318cb77042af97977ed69bff568d55f55",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#################\n\n# Tools Library #\n\n#################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if all requirements are found. Skip modules otherwise.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Disable warnings. Due to the pstl dependency we see all the warnings from that.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Install\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add_subdirectory(PythonInterface)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Tools/Plotting/CMakeLists.txt" : {
      "ObjectId" : "52a3cc8f272f2d93fe57a71e7db69e57e469db13",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################\n\n# Plotting Library #\n\n####################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Tools/test/CMakeLists.txt" : {
      "ObjectId" : "25a7ec89184bc51bc21fc603375ea11dbdfc3edb",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check if all requirements are found\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if all requirements are found\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindBoost.cmake" : {
      "ObjectId" : "1771d1bc060519e23606e57e1a478ace55c120b8",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindBoost\n\n# ---------\n\n#\n\n# Find Boost include dirs and libraries\n\n#\n\n# Use this module by invoking find_package with the form::\n\n#\n\n#   find_package(Boost\n\n#     [version] [EXACT]      # Minimum or EXACT version e.g. 1.67.0\n\n#     [REQUIRED]             # Fail with error if Boost is not found\n\n#     [COMPONENTS <libs>...] # Boost libraries by their canonical name\n\n#                            # e.g. \"date_time\" for \"libboost_date_time\"\n\n#     [OPTIONAL_COMPONENTS <libs>...]\n\n#                            # Optional Boost libraries by their canonical name)\n\n#     )                      # e.g. \"date_time\" for \"libboost_date_time\"\n\n#\n\n# This module finds headers and requested component libraries OR a CMake\n\n# package configuration file provided by a \"Boost CMake\" build.  For the\n\n# latter case skip to the \"Boost CMake\" section below.  For the former\n\n# case results are reported in variables::\n\n#\n\n#   Boost_FOUND            - True if headers and requested libraries were found\n\n#   Boost_INCLUDE_DIRS     - Boost include directories\n\n#   Boost_LIBRARY_DIRS     - Link directories for Boost libraries\n\n#   Boost_LIBRARIES        - Boost component libraries to be linked\n\n#   Boost_<C>_FOUND        - True if component <C> was found (<C> is upper-case)\n\n#   Boost_<C>_LIBRARY      - Libraries to link for component <C> (may include\n\n#                            target_link_libraries debug/optimized keywords)\n\n#   Boost_VERSION          - BOOST_VERSION value from boost/version.hpp\n\n#   Boost_LIB_VERSION      - Version string appended to library filenames\n\n#   Boost_MAJOR_VERSION    - Boost major version number (X in X.y.z)\n\n#   Boost_MINOR_VERSION    - Boost minor version number (Y in x.Y.z)\n\n#   Boost_SUBMINOR_VERSION - Boost subminor version number (Z in x.y.Z)\n\n#   Boost_LIB_DIAGNOSTIC_DEFINITIONS (Windows)\n\n#                          - Pass to add_definitions() to have diagnostic\n\n#                            information about Boost's automatic linking\n\n#                            displayed during compilation\n\n#\n\n# Note that Boost Python components require a Python version suffix\n\n# (Boost 1.67 and later), e.g. ``python36`` or ``python27`` for the\n\n# versions built against Python 3.6 and 2.7, respectively.  This also\n\n# applies to additional components using Python including\n\n# ``mpi_python`` and ``numpy``.  Earlier Boost releases may use\n\n# distribution-specific suffixes such as ``2``, ``3`` or ``2.7``.\n\n# These may also be used as suffixes, but note that they are not\n\n# portable.\n\n#\n\n# This module reads hints about search locations from variables::\n\n#\n\n#   BOOST_ROOT             - Preferred installation prefix\n\n#    (or BOOSTROOT)\n\n#   BOOST_INCLUDEDIR       - Preferred include directory e.g. <prefix>/include\n\n#   BOOST_LIBRARYDIR       - Preferred library directory e.g. <prefix>/lib\n\n#   Boost_NO_SYSTEM_PATHS  - Set to ON to disable searching in locations not\n\n#                            specified by these hint variables. Default is OFF.\n\n#   Boost_ADDITIONAL_VERSIONS\n\n#                          - List of Boost versions not known to this module\n\n#                            (Boost install locations may contain the version)\n\n#\n\n# and saves search results persistently in CMake cache entries::\n\n#\n\n#   Boost_INCLUDE_DIR         - Directory containing Boost headers\n\n#   Boost_LIBRARY_DIR_RELEASE - Directory containing release Boost libraries\n\n#   Boost_LIBRARY_DIR_DEBUG   - Directory containing debug Boost libraries\n\n#   Boost_<C>_LIBRARY_DEBUG   - Component <C> library debug variant\n\n#   Boost_<C>_LIBRARY_RELEASE - Component <C> library release variant\n\n#\n\n# The following :prop_tgt:`IMPORTED` targets are also defined::\n\n#\n\n#   Boost::boost                  - Target for header-only dependencies\n\n#                                   (Boost include directory)\n\n#   Boost::<C>                    - Target for specific component dependency\n\n#                                   (shared or static library); <C> is lower-\n\n#                                   case\n\n#   Boost::diagnostic_definitions - interface target to enable diagnostic\n\n#                                   information about Boost's automatic linking\n\n#                                   during compilation (adds BOOST_LIB_DIAGNOSTIC)\n\n#   Boost::disable_autolinking    - interface target to disable automatic\n\n#                                   linking with MSVC (adds BOOST_ALL_NO_LIB)\n\n#   Boost::dynamic_linking        - interface target to enable dynamic linking\n\n#                                   linking with MSVC (adds BOOST_ALL_DYN_LINK)\n\n#\n\n# Implicit dependencies such as Boost::filesystem requiring\n\n# Boost::system will be automatically detected and satisfied, even\n\n# if system is not specified when using find_package and if\n\n# Boost::system is not added to target_link_libraries.  If using\n\n# Boost::thread, then Threads::Threads will also be added automatically.\n\n#\n\n# It is important to note that the imported targets behave differently\n\n# than variables created by this module: multiple calls to\n\n# find_package(Boost) in the same directory or sub-directories with\n\n# different options (e.g. static or shared) will not override the\n\n# values of the targets created by the first call.\n\n#\n\n# Users may set these hints or results as cache entries.  Projects\n\n# should not read these entries directly but instead use the above\n\n# result variables.  Note that some hint names start in upper-case\n\n# \"BOOST\".  One may specify these as environment variables if they are\n\n# not specified as CMake variables or cache entries.\n\n#\n\n# This module first searches for the Boost header files using the above\n\n# hint variables (excluding BOOST_LIBRARYDIR) and saves the result in\n\n# Boost_INCLUDE_DIR.  Then it searches for requested component libraries\n\n# using the above hints (excluding BOOST_INCLUDEDIR and\n\n# Boost_ADDITIONAL_VERSIONS), \"lib\" directories near Boost_INCLUDE_DIR,\n\n# and the library name configuration settings below.  It saves the\n\n# library directories in Boost_LIBRARY_DIR_DEBUG and\n\n# Boost_LIBRARY_DIR_RELEASE and individual library\n\n# locations in Boost_<C>_LIBRARY_DEBUG and Boost_<C>_LIBRARY_RELEASE.\n\n# When one changes settings used by previous searches in the same build\n\n# tree (excluding environment variables) this module discards previous\n\n# search results affected by the changes and searches again.\n\n#\n\n# Boost libraries come in many variants encoded in their file name.\n\n# Users or projects may tell this module which variant to find by\n\n# setting variables::\n\n#\n\n#   Boost_USE_DEBUG_LIBS     - Set to ON or OFF to specify whether to search\n\n#                              and use the debug libraries.  Default is ON.\n\n#   Boost_USE_RELEASE_LIBS   - Set to ON or OFF to specify whether to search\n\n#                              and use the release libraries.  Default is ON.\n\n#   Boost_USE_MULTITHREADED  - Set to OFF to use the non-multithreaded\n\n#                              libraries ('mt' tag).  Default is ON.\n\n#   Boost_USE_STATIC_LIBS    - Set to ON to force the use of the static\n\n#                              libraries.  Default is OFF.\n\n#   Boost_USE_STATIC_RUNTIME - Set to ON or OFF to specify whether to use\n\n#                              libraries linked statically to the C++ runtime\n\n#                              ('s' tag).  Default is platform dependent.\n\n#   Boost_USE_DEBUG_RUNTIME  - Set to ON or OFF to specify whether to use\n\n#                              libraries linked to the MS debug C++ runtime\n\n#                              ('g' tag).  Default is ON.\n\n#   Boost_USE_DEBUG_PYTHON   - Set to ON to use libraries compiled with a\n\n#                              debug Python build ('y' tag). Default is OFF.\n\n#   Boost_USE_STLPORT        - Set to ON to use libraries compiled with\n\n#                              STLPort ('p' tag).  Default is OFF.\n\n#   Boost_USE_STLPORT_DEPRECATED_NATIVE_IOSTREAMS\n\n#                            - Set to ON to use libraries compiled with\n\n#                              STLPort deprecated \"native iostreams\"\n\n#                              ('n' tag).  Default is OFF.\n\n#   Boost_COMPILER           - Set to the compiler-specific library suffix\n\n#                              (e.g. \"-gcc43\").  Default is auto-computed\n\n#                              for the C++ compiler in use.  A list may be\n\n#                              used if multiple compatible suffixes should\n\n#                              be tested for, in decreasing order of\n\n#                              preference.\n\n#   Boost_THREADAPI          - Suffix for \"thread\" component library name,\n\n#                              such as \"pthread\" or \"win32\".  Names with\n\n#                              and without this suffix will both be tried.\n\n#   Boost_NAMESPACE          - Alternate namespace used to build boost with\n\n#                              e.g. if set to \"myboost\", will search for\n\n#                              myboost_thread instead of boost_thread.\n\n#\n\n# Other variables one may set to control this module are::\n\n#\n\n#   Boost_DEBUG              - Set to ON to enable debug output from FindBoost.\n\n#                              Please enable this before filing any bug report.\n\n#   Boost_DETAILED_FAILURE_MSG\n\n#                            - Set to ON to add detailed information to the\n\n#                              failure message even when the REQUIRED option\n\n#                              is not given to the find_package call.\n\n#   Boost_REALPATH           - Set to ON to resolve symlinks for discovered\n\n#                              libraries to assist with packaging.  For example,\n\n#                              the \"system\" component library may be resolved to\n\n#                              \"/usr/lib/libboost_system.so.1.67.0\" instead of\n\n#                              \"/usr/lib/libboost_system.so\".  This does not\n\n#                              affect linking and should not be enabled unless\n\n#                              the user needs this information.\n\n#   Boost_LIBRARY_DIR        - Default value for Boost_LIBRARY_DIR_RELEASE and\n\n#                              Boost_LIBRARY_DIR_DEBUG.\n\n#\n\n# On Visual Studio and Borland compilers Boost headers request automatic\n\n# linking to corresponding libraries.  This requires matching libraries\n\n# to be linked explicitly or available in the link library search path.\n\n# In this case setting Boost_USE_STATIC_LIBS to OFF may not achieve\n\n# dynamic linking.  Boost automatic linking typically requests static\n\n# libraries with a few exceptions (such as Boost.Python).  Use::\n\n#\n\n#   add_definitions(${Boost_LIB_DIAGNOSTIC_DEFINITIONS})\n\n#\n\n# to ask Boost to report information about automatic linking requests.\n\n#\n\n# Example to find Boost headers only::\n\n#\n\n#   find_package(Boost 1.36.0)\n\n#   if(Boost_FOUND)\n\n#     include_directories(${Boost_INCLUDE_DIRS})\n\n#     add_executable(foo foo.cc)\n\n#   endif()\n\n#\n\n# Example to find Boost libraries and use imported targets::\n\n#\n\n#   find_package(Boost 1.56 REQUIRED COMPONENTS\n\n#                date_time filesystem iostreams)\n\n#   add_executable(foo foo.cc)\n\n#   target_link_libraries(foo Boost::date_time Boost::filesystem\n\n#                             Boost::iostreams)\n\n#\n\n# Example to find Boost Python 3.6 libraries and use imported targets::\n\n#\n\n#   find_package(Boost 1.67 REQUIRED COMPONENTS\n\n#                python36 numpy36)\n\n#   add_executable(foo foo.cc)\n\n#   target_link_libraries(foo Boost::python36 Boost::numpy36)\n\n#\n\n# Example to find Boost headers and some *static* (release only) libraries::\n\n#\n\n#   set(Boost_USE_STATIC_LIBS        ON)  # only find static libs\n\n#   set(Boost_USE_DEBUG_LIBS         OFF) # ignore debug libs and\n\n#   set(Boost_USE_RELEASE_LIBS       ON)  # only find release libs\n\n#   set(Boost_USE_MULTITHREADED      ON)\n\n#   set(Boost_USE_STATIC_RUNTIME    OFF)\n\n#   find_package(Boost 1.66.0 COMPONENTS date_time filesystem system ...)\n\n#   if(Boost_FOUND)\n\n#     include_directories(${Boost_INCLUDE_DIRS})\n\n#     add_executable(foo foo.cc)\n\n#     target_link_libraries(foo ${Boost_LIBRARIES})\n\n#   endif()\n\n#\n\n# Boost CMake\n\n# ^^^^^^^^^^^\n\n#\n\n# If Boost was built using the boost-cmake project it provides a package\n\n# configuration file for use with find_package's Config mode.  This\n\n# module looks for the package configuration file called\n\n# BoostConfig.cmake or boost-config.cmake and stores the result in cache\n\n# entry \"Boost_DIR\".  If found, the package configuration file is loaded\n\n# and this module returns with no further action.  See documentation of\n\n# the Boost CMake package configuration for details on what it provides.\n\n#\n\n# Set Boost_NO_BOOST_CMAKE to ON to disable the search for boost-cmake.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Save project's policies\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if IN_LIST\n",
        "Line" : 238,
        "CharPositionInLine" : 30
      },
      "4" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Before we go searching, check whether boost-cmake is available, unless the\n\n# user specifically asked NOT to search for boost-cmake.\n\n#\n\n# If Boost_DIR is set, this behaves as any find_package call would. If not,\n\n# it looks at BOOST_ROOT and BOOSTROOT to find Boost.\n\n#\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If Boost_DIR is not set, look for BOOSTROOT and BOOST_ROOT as alternatives,\n\n# since these are more conventional for Boost.\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Do the same find_package call but look specifically for the CMake version.\n\n# Note that args are passed in the Boost_FIND_xxxxx variables, so there is no\n\n# need to delegate them to this find_package call.\n",
        "Line" : 258,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# If we found boost-cmake, then we're done.  Print out what we found.\n\n# Otherwise let the rest of the module try to find it.\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Restore project's policies\n",
        "Line" : 271,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#  FindBoost functions & macros\n\n#\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "############################################\n\n#\n\n# Check the existence of the libraries.\n\n#\n\n############################################\n\n# This macro was taken directly from the FindQt4.cmake file that is included\n\n# with the CMake distribution. This is NOT my work. All work was done by the\n\n# original authors of the FindQt4.cmake file. Only minor modifications were\n\n# made to remove references to Qt and make this file more generally applicable\n\n# And ELSE/ENDIF pairs were removed for readability.\n\n#########################################################################\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# if the generator is multi-config or if CMAKE_BUILD_TYPE is set for\n\n# single-config generators, set optimized and debug libraries\n",
        "Line" : 297,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# For single-config generators where CMAKE_BUILD_TYPE has no value,\n\n# just use the release libraries\n",
        "Line" : 303,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# FIXME: This probably should be set for both cases\n",
        "Line" : 307,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# if only the release version was found, set the debug variable also to the release version\n",
        "Line" : 311,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# if only the debug version was found, set the release variable also to the debug version\n",
        "Line" : 318,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# If the debug & release library ends up being the same, omit the keywords\n",
        "Line" : 325,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Make variables changeable to the advanced user\n",
        "Line" : 340,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Detect changes in used variables.\n\n# Compares the current variable value with the last one.\n\n# In short form:\n\n# v != v_LAST                      -> CHANGED = 1\n\n# v is defined, v_LAST not         -> CHANGED = 1\n\n# v is not defined, but v_LAST is  -> CHANGED = 1\n\n# otherwise                        -> CHANGED = 0\n\n# CHANGED is returned in variable named ${changed_var}\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\n\n# Find the given library (var).\n\n# Use 'build_type' to support different lib paths for RELEASE or DEBUG builds\n\n#\n",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# If this is the first library found then save Boost_LIBRARY_DIR_[RELEASE,DEBUG].\n",
        "Line" : 386,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Try component-specific hints but do not save Boost_LIBRARY_DIR_[RELEASE,DEBUG].\n",
        "Line" : 392,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# If Boost_LIBRARY_DIR_[RELEASE,DEBUG] is known then search only there.\n",
        "Line" : 396,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\n\n# Runs compiler with \"-dumpversion\" and parses major/minor\n\n# version with a regex.\n\n#\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#\n\n# Take a list of libraries with \"thread\" in it\n\n# and prepend duplicates with \"thread_${Boost_THREADAPI}\"\n\n# at the front of the list\n\n#\n",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#\n\n# If a library is found, replace its cache entry with its REALPATH\n\n#\n",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Guesses Boost's compiler prefix used in built library names\n\n# Returns the guess by setting the variable pointed to by _ret\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Good luck!\n",
        "Line" : 477,
        "CharPositionInLine" : 59
      },
      "29" : {
        "Text" : "# yes, this is correct\n",
        "Line" : 478,
        "CharPositionInLine" : 34
      },
      "30" : {
        "Text" : "# VS 6.0 Good luck!\n",
        "Line" : 479,
        "CharPositionInLine" : 11
      },
      "31" : {
        "Text" : "# yes, this is correct\n",
        "Line" : 480,
        "CharPositionInLine" : 34
      },
      "32" : {
        "Text" : "# no GCC version encoding prior to 1.34\n",
        "Line" : 490,
        "CharPositionInLine" : 36
      },
      "33" : {
        "Text" : "# no GCC version encoding prior to 1.34\n",
        "Line" : 498,
        "CharPositionInLine" : 36
      },
      "34" : {
        "Text" : "# Determine which version of GCC we have.\n",
        "Line" : 501,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# In Boost 1.36.0 and newer, the mangled compiler name used\n\n# on Mac OS X/Darwin is \"xgcc\".\n",
        "Line" : 505,
        "CharPositionInLine" : 14
      },
      "36" : {
        "Text" : "# In Boost <= 1.35.0, there is no mangled compiler name for\n\n# the Mac OS X/Darwin version of GCC.\n",
        "Line" : 509,
        "CharPositionInLine" : 14
      },
      "37" : {
        "Text" : "# We don't know the Boost version, so assume it's\n\n# pre-1.36.0.\n",
        "Line" : 514,
        "CharPositionInLine" : 12
      },
      "38" : {
        "Text" : "# TODO at least Boost_DEBUG here?\n",
        "Line" : 524,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "#\n\n# Get component dependencies.  Requires the dependencies to have been\n\n# defined for the Boost release version.\n\n#\n\n# component - the component to check\n\n# _ret - list of library dependencies\n\n#\n",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Note: to add a new Boost release, run\n\n#\n\n#   % cmake -DBOOST_DIR=/path/to/boost/source -P Utilities/Scripts/BoostScanDeps.cmake\n\n#\n\n# The output may be added in a new block below.  If it's the same as\n\n# the previous release, simply update the version range of the block\n\n# for the previous release.  Also check if any new components have\n\n# been added, and add any new components to\n\n# _Boost_COMPONENT_HEADERS.\n\n#\n\n# This information was originally generated by running\n\n# BoostScanDeps.cmake against every boost release to date supported\n\n# by FindBoost:\n\n#\n\n#   % for version in /path/to/boost/sources/*\n\n#     do\n\n#       cmake -DBOOST_DIR=$version -P Utilities/Scripts/BoostScanDeps.cmake\n\n#     done\n\n#\n\n# The output was then updated by search and replace with these regexes:\n\n#\n\n# - Strip message(STATUS) prefix dashes\n\n#   s;^-- ;;\n\n# - Indent\n\n#   s;^set(;    set(;;\n\n# - Add conditionals\n\n#   s;Scanning /path/to/boost/sources/boost_\\(.*\\)_\\(.*\\)_\\(.*);  elseif(NOT Boost_VERSION VERSION_LESS \\10\\20\\3 AND Boost_VERSION VERSION_LESS xxxx);\n\n#\n\n# This results in the logic seen below, but will require the xxxx\n\n# replacing with the following Boost release version (or the next\n\n# minor version to be released, e.g. 1.59 was the latest at the time\n\n# of writing, making 1.60 the next, so 106000 is the needed version\n\n# number).  Identical consecutive releases were then merged together\n\n# by updating the end range of the first block and removing the\n\n# following redundant blocks.\n\n#\n\n# Running the script against all historical releases should be\n\n# required only if the BoostScanDeps.cmake script logic is changed.\n\n# The addition of a new release should only require it to be run\n\n# against the new release.\n",
        "Line" : 538,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Handle Python version suffixes\n",
        "Line" : 579,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# message(STATUS \"Dependencies for Boost::${component}: ${_boost_DEPS_STRING}\")\n",
        "Line" : 851,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "#\n\n# Get component headers.  This is the primary header (or headers) for\n\n# a given component, and is used to check that the headers are present\n\n# as well as the library itself as an extra sanity check of the build\n\n# environment.\n\n#\n\n# component - the component to check\n\n# _hdrs\n\n#\n",
        "Line" : 854,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Handle Python version suffixes\n",
        "Line" : 864,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Note: new boost components will require adding here.  The header\n\n# must be present in all versions of Boost providing a library.\n",
        "Line" : 870,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# message(STATUS \"Headers for Boost::${component}: ${_boost_HDRS_STRING}\")\n",
        "Line" : 924,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "#\n\n# Determine if any missing dependencies require adding to the component list.\n\n#\n\n# Sets _Boost_${COMPONENT}_DEPENDENCIES for each required component,\n\n# plus _Boost_IMPORTED_TARGETS (TRUE if imported targets should be\n\n# defined; FALSE if dependency information is unavailable).\n\n#\n\n# componentvar - the component list variable name\n\n# extravar - the indirect dependency list variable name\n\n#\n\n#\n",
        "Line" : 927,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# _boost_unprocessed_components - list of components requiring processing\n\n# _boost_processed_components - components already processed (or currently being processed)\n\n# _boost_new_components - new components discovered for future processing\n\n#\n",
        "Line" : 939,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "#\n\n# Some boost libraries may require particular set of compler features.\n\n# The very first one was `boost::fiber` introduced in Boost 1.62.\n\n# One can check required compiler features of it in\n\n# `${Boost_ROOT}/libs/fiber/build/Jamfile.v2`.\n\n#\n",
        "Line" : 970,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Boost >= 1.62 and < 1.67\n",
        "Line" : 977,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "#\n\n# Update library search directory hint variable with paths used by prebuilt boost binaries.\n\n#\n\n# Prebuilt windows binaries (https://sourceforge.net/projects/boost/files/boost-binaries/)\n\n# have library directories named using MSVC compiler version and architecture.\n\n# This function would append corresponding directories if MSVC is a current compiler,\n\n# so having `BOOST_ROOT` would be enough to specify to find everything.\n\n#\n",
        "Line" : 997,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#\n\n# End functions/macros\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1032,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# main.\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1037,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# If the user sets Boost_LIBRARY_DIR, use it as the default for both\n\n# configurations.\n",
        "Line" : 1042,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Check the version of Boost against the requested version.\n",
        "Line" : 1064,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# The version may appear in a directory with or without the patch\n\n# level, even when the patch level is non-zero.\n",
        "Line" : 1070,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# The user has not requested an exact version.  Among known\n\n# versions, find those that are acceptable to the user request.\n\n#\n\n# Note: When adding a new Boost release, also update the dependency\n\n# information in _Boost_COMPONENT_DEPENDENCIES and\n\n# _Boost_COMPONENT_HEADERS.  See the instructions at the top of\n\n# _Boost_COMPONENT_DEPENDENCIES.\n",
        "Line" : 1076,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Select acceptable versions.\n",
        "Line" : 1097,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# This version is high enough.\n",
        "Line" : 1100,
        "CharPositionInLine" : 8
      },
      "60" : {
        "Text" : "# This version is a short-form for the requested version with\n\n# the patch level dropped.\n",
        "Line" : 1103,
        "CharPositionInLine" : 8
      },
      "61" : {
        "Text" : "# Any version is acceptable.\n",
        "Line" : 1109,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# The reason that we failed to find Boost. This will be set to a\n\n# user-friendly message when we fail to find some necessary piece of\n\n# Boost.\n",
        "Line" : 1114,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Output some of their choices\n",
        "Line" : 1120,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# Supply Boost_LIB_DIAGNOSTIC_DEFINITIONS as a convenience target. It\n\n# will only contain any interface definitions on WIN32, but is created\n\n# on all platforms to keep end user code free from platform dependent\n\n# code.  Also provide convenience targets to disable autolinking and\n\n# enable dynamic linking.\n",
        "Line" : 1135,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# In windows, automatic linking is performed, so you do not have\n\n# to specify the libraries.  If you are linking to a dynamic\n\n# runtime, then you can choose to link to either a static or a\n\n# dynamic Boost library, the default is to do a static link.  You\n\n# can alter this for a specific library \"whatever\" by defining\n\n# BOOST_WHATEVER_DYN_LINK to force Boost library \"whatever\" to be\n\n# linked dynamically.  Alternatively you can force all Boost\n\n# libraries to dynamic link by defining BOOST_ALL_DYN_LINK.\n",
        "Line" : 1146,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# This feature can be disabled for Boost library \"whatever\" by\n\n# defining BOOST_WHATEVER_NO_LIB, or for all of Boost by defining\n\n# BOOST_ALL_NO_LIB.\n",
        "Line" : 1155,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# If you want to observe which libraries are being linked against\n\n# then defining BOOST_LIB_DIAGNOSTIC will cause the auto-linking\n\n# code to emit a #pragma message each time a library is selected\n\n# for linking.\n",
        "Line" : 1159,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# Collect environment variable inputs as hints.  Do not consider changes.\n",
        "Line" : 1176,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Collect inputs and cached results.  Detect changes since the last run.\n",
        "Line" : 1189,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Search for Boost include DIR\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1211,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Clear Boost_INCLUDE_DIR if it did not change but other input affecting the\n\n# location did.  We will find a new one based on the new inputs.\n",
        "Line" : 1217,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Try to find Boost by stepping backwards through the Boost versions\n\n# we know about.\n\n# Build a list of path suffixes for each version.\n",
        "Line" : 1253,
        "CharPositionInLine" : 2
      },
      "73" : {
        "Text" : "# Add in a path suffix, based on the required version, ideally\n\n# we could read this from version.hpp, but for that to work we'd\n\n# need to know the include dir already\n",
        "Line" : 1258,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "# Transform 1.35 => 1_35 and 1.36.0 => 1_36_0\n",
        "Line" : 1263,
        "CharPositionInLine" : 4
      },
      "75" : {
        "Text" : "# Look for a standard boost header file.\n",
        "Line" : 1290,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Extract version information from version.hpp\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1298,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Set Boost_FOUND based only on header location and version.\n\n# It will be updated below for component libraries.\n",
        "Line" : 1302,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Extract Boost_VERSION and Boost_LIB_VERSION from version.hpp\n",
        "Line" : 1310,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# Set Boost_FOUND based on requested version.\n",
        "Line" : 1336,
        "CharPositionInLine" : 4
      },
      "80" : {
        "Text" : "# State that we found a version of Boost that is too new or too old.\n",
        "Line" : 1349,
        "CharPositionInLine" : 6
      },
      "81" : {
        "Text" : "# Caller will accept any Boost version.\n",
        "Line" : 1362,
        "CharPositionInLine" : 4
      },
      "82" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Prefix initialization\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1371,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Suffix initialization and compiler suffix detection.\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1385,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Setting some more suffixes for the library\n",
        "Line" : 1402,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Attempt to guess the compiler suffix\n\n# NOTE: this is not perfect yet, if you experience any issues\n\n# please report them and use the Boost_COMPILER variable\n\n# to work around the problems.\n",
        "Line" : 1410,
        "CharPositionInLine" : 2
      },
      "86" : {
        "Text" : "#======================\n\n# Systematically build up the Boost ABI tag for the 'tagged' and 'versioned' layouts\n\n# http://boost.org/doc/libs/1_66_0/more/getting_started/windows.html#library-naming\n\n# http://boost.org/doc/libs/1_66_0/boost/config/auto_link.hpp\n\n# http://boost.org/doc/libs/1_66_0/tools/build/src/tools/common.jam\n\n# http://boost.org/doc/libs/1_66_0/boostcpp.jam\n",
        "Line" : 1430,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Key       Use this library when:\n\n#  s        linking statically to the C++ standard library and\n\n#           compiler runtime support libraries.\n",
        "Line" : 1438,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "#  g        using debug versions of the standard and runtime\n\n#           support libraries\n",
        "Line" : 1445,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "#  y        using special debug build of python\n",
        "Line" : 1454,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "#  d        using a debug version of your code\n",
        "Line" : 1458,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "#  p        using the STLport standard library rather than the\n\n#           default one supplied with your compiler\n",
        "Line" : 1460,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "#  n        using the STLport deprecated \"native iostreams\" feature\n\n#           removed from the documentation in 1.43.0 but still present in\n\n#           boost/config/auto_link.hpp\n",
        "Line" : 1466,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "#  -x86     Architecture and address model tag\n\n#           First character is the architecture, then word-size, either 32 or 64\n\n#           Only used in 'versioned' layout, added in Boost 1.66.0\n",
        "Line" : 1474,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# {CMAKE_CXX_COMPILER_ARCHITECTURE_ID} is not currently set for all compilers\n",
        "Line" : 1478,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# This needs to be kept in-sync with the section of CMakePlatformId.h.in\n\n# inside 'defined(_WIN32) && defined(_MSC_VER)'\n",
        "Line" : 1481,
        "CharPositionInLine" : 2
      },
      "96" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Begin finding boost libraries\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1508,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# Clear Boost_LIBRARY_DIR_${c} if it did not change but other input affecting the\n\n# location did.  We will find a new one based on the new inputs.\n",
        "Line" : 1517,
        "CharPositionInLine" : 2
      },
      "98" : {
        "Text" : "# If Boost_LIBRARY_DIR_[RELEASE,DEBUG] is set, prefer its value.\n",
        "Line" : 1523,
        "CharPositionInLine" : 2
      },
      "99" : {
        "Text" : "# Support preference of static libs by adjusting CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 1572,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# We want to use the tag inline below without risking double dashes\n",
        "Line" : 1582,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# The previous behavior of FindBoost when Boost_USE_STATIC_LIBS was enabled\n\n# on WIN32 was to:\n\n#  1. Search for static libs compiled against a SHARED C++ standard runtime library (use if found)\n\n#  2. Search for static libs compiled against a STATIC C++ standard runtime library (use if found)\n\n# We maintain this behavior since changing it could break people's builds.\n\n# To disable the ambiguous behavior, the user need only\n\n# set Boost_USE_STATIC_RUNTIME either ON or OFF.\n",
        "Line" : 1594,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# On versions < 1.35, remove the System library from the considered list\n\n# since it wasn't added until 1.35.\n",
        "Line" : 1608,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# Additional components may be required via component dependencies.\n\n# Add any missing components to the list.\n",
        "Line" : 1616,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# If thread is required, get the thread libs as a dependency\n",
        "Line" : 1620,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# If the user changed any of our control inputs flush previous results.\n",
        "Line" : 1631,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# Compute component-specific hints.\n",
        "Line" : 1650,
        "CharPositionInLine" : 2
      },
      "107" : {
        "Text" : "# Handle Python version suffixes\n",
        "Line" : 1663,
        "CharPositionInLine" : 2
      },
      "108" : {
        "Text" : "# Boost >= 1.67\n",
        "Line" : 1677,
        "CharPositionInLine" : 4
      },
      "109" : {
        "Text" : "# Debian/Ubuntu (Some versions omit the 2 and/or 3 from the suffix)\n",
        "Line" : 1679,
        "CharPositionInLine" : 4
      },
      "110" : {
        "Text" : "# Gentoo\n",
        "Line" : 1682,
        "CharPositionInLine" : 4
      },
      "111" : {
        "Text" : "# RPMs\n",
        "Line" : 1684,
        "CharPositionInLine" : 4
      },
      "112" : {
        "Text" : "# Boost < 1.67\n",
        "Line" : 1688,
        "CharPositionInLine" : 4
      },
      "113" : {
        "Text" : "# Consolidate and report component-specific hints.\n",
        "Line" : 1692,
        "CharPositionInLine" : 2
      },
      "114" : {
        "Text" : "#\n\n# Find headers\n\n#\n",
        "Line" : 1710,
        "CharPositionInLine" : 2
      },
      "115" : {
        "Text" : "# Look for a standard boost header file.\n",
        "Line" : 1714,
        "CharPositionInLine" : 2
      },
      "116" : {
        "Text" : "#\n\n# Find RELEASE libraries\n\n#\n",
        "Line" : 1726,
        "CharPositionInLine" : 2
      },
      "117" : {
        "Text" : "# if Boost_LIBRARY_DIR_RELEASE is not defined,\n\n# but Boost_LIBRARY_DIR_DEBUG is, look there first for RELEASE libs\n",
        "Line" : 1760,
        "CharPositionInLine" : 2
      },
      "118" : {
        "Text" : "# Avoid passing backslashes to _Boost_FIND_LIBRARY due to macro re-parsing.\n",
        "Line" : 1766,
        "CharPositionInLine" : 2
      },
      "119" : {
        "Text" : "#\n\n# Find DEBUG libraries\n\n#\n",
        "Line" : 1778,
        "CharPositionInLine" : 2
      },
      "120" : {
        "Text" : "# if Boost_LIBRARY_DIR_DEBUG is not defined,\n\n# but Boost_LIBRARY_DIR_RELEASE is, look there first for DEBUG libs\n",
        "Line" : 1813,
        "CharPositionInLine" : 2
      },
      "121" : {
        "Text" : "# Avoid passing backslashes to _Boost_FIND_LIBRARY due to macro re-parsing.\n",
        "Line" : 1819,
        "CharPositionInLine" : 2
      },
      "122" : {
        "Text" : "# Check if component requires some compiler features\n",
        "Line" : 1838,
        "CharPositionInLine" : 2
      },
      "123" : {
        "Text" : "# Restore the original find library ordering\n",
        "Line" : 1843,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  End finding boost libraries\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1848,
        "CharPositionInLine" : 0
      },
      "125" : {
        "Text" : "# The above setting of Boost_FOUND was based only on the header files.\n\n# Update it for the requested component libraries.\n",
        "Line" : 1864,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "# The headers were found.  Check for requested component libs.\n",
        "Line" : 1867,
        "CharPositionInLine" : 2
      },
      "127" : {
        "Text" : "# Optional indirect dependencies are not counted as missing.\n",
        "Line" : 1878,
        "CharPositionInLine" : 4
      },
      "128" : {
        "Text" : "# We were unable to find some libraries, so generate a sensible\n\n# error message that lists the libraries we were unable to find.\n",
        "Line" : 1888,
        "CharPositionInLine" : 4
      },
      "129" : {
        "Text" : "# Compatibility Code for backwards compatibility with CMake\n\n# 2.4's FindBoost module.\n",
        "Line" : 1915,
        "CharPositionInLine" : 4
      },
      "130" : {
        "Text" : "# Look for the boost library path.\n\n# Note that the user may not have installed any libraries\n\n# so it is quite possible the Boost_LIBRARY_DIRS may not exist.\n",
        "Line" : 1918,
        "CharPositionInLine" : 4
      },
      "131" : {
        "Text" : "# Strip off the trailing \"/include\" in the path.\n",
        "Line" : 1928,
        "CharPositionInLine" : 6
      },
      "132" : {
        "Text" : "# Boost headers were not found so no components were found.\n",
        "Line" : 1946,
        "CharPositionInLine" : 2
      },
      "133" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Add imported targets\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1953,
        "CharPositionInLine" : 0
      },
      "134" : {
        "Text" : "# For header-only libraries\n",
        "Line" : 1958,
        "CharPositionInLine" : 2
      },
      "135" : {
        "Text" : "# Even if Boost_USE_STATIC_LIBS is OFF, we might have static\n\n# libraries as a result.\n",
        "Line" : 1974,
        "CharPositionInLine" : 10
      },
      "136" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Notification to end user about what was found\n\n# ------------------------------------------------------------------------\n",
        "Line" : 2021,
        "CharPositionInLine" : 0
      },
      "137" : {
        "Text" : "# we opt not to automatically output Boost_ERROR_REASON here as\n\n# it could be quite lengthy and somewhat imposing in its requests\n\n# Since Boost is not always a required dependency we'll leave this\n\n# up to the end-user.\n",
        "Line" : 2047,
        "CharPositionInLine" : 6
      },
      "138" : {
        "Text" : "# Configure display of cache entries in GUI.\n",
        "Line" : 2060,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "# Record last used values of input variables so we can\n\n# detect on the next run if the user changed them.\n",
        "Line" : 2075,
        "CharPositionInLine" : 0
      },
      "140" : {
        "Text" : "# Maintain a persistent list of components requested anywhere since\n\n# the last flush.\n",
        "Line" : 2088,
        "CharPositionInLine" : 0
      },
      "141" : {
        "Text" : "# Restore project's policies\n",
        "Line" : 2097,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 142
    },
    "cmake/Modules/FindComPWA.cmake" : {
      "ObjectId" : "5527a0f345f327b41478a04dd01ea3ce270041aa",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module accepts the following variables as hints for the search:\n\n#\n\n# ComPWA_ROOT       - The ComPWA installation prefix where to search for libraries and includes\n\n# ComPWA_INCLUDEDIR - The directory where the ComPWA includes may be found\n\n# ComPWA_LIBRARYDIR - The directory where the ComPWA libraries may be found\n\n#\n\n# This module defines the following variables as result of the search:\n\n#\n\n# ComPWA_INCLUDE_DIR          - The directory below which the ComPWA includes may be found\n\n# ComPWA_LIBRARY_DIR          - The directory below which the ComPWA libraries may be found\n\n#\n\n# ComPWA_LIBRARIES            - A list containing the ComPWA library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ComPWA_FOUND                - TRUE if ComPWA is found\n\n#\n\n#\n\n# Example usages: FIND_PACKAGE(ComPWA) or FIND_PACKAGE(ComPWA REQUIRED)\n\n#\n\n# For this file the cmake version of FindBoost.cmake was used as a template and inspiration. \n\n###############################################################################\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Module for handling standard arguments given through FIND_PACKAGE()\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# library prefix\n",
        "Line" : 27,
        "CharPositionInLine" : 31
      },
      "4" : {
        "Text" : "# If the CMake variables are not set, we check and use the corresponding\n\n# environment variables\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The more specific variables take precedence over the more generic ones\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Setting FOUND based in include directory\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Check some files to make sure we found to correct\n\n# directory\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# The above setting of ComPWA_FOUND was based only on the header files.\n\n# Update it for the requested component libraries.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The headers were found.  Check for requested component libs.\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Optional indirect dependencies are not counted as missing.\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# We were unable to find some libraries, so generate a sensible\n\n# error message that lists the libraries we were unable to find.\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# set(compwalibs Core DataReader RootReader Minuit2IF MinLogLH Tools qft++ HelicityFormalism DecayDynamics)\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# message( STATUS \"ComPWA_${COMPONENT}_LIBRARY ComPWA_${COMPONENT} HINTS ${ComPWA_LIBRARY_DIR}\")\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#list(REMOVE_ITEM ComPWA_FIND_COMPONENTS ${COMPONENT})\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Add imported targets\n\n# ------------------------------------------------------------------------\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Notification to end user about what was found\n\n# ------------------------------------------------------------------------\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# No components specified\n",
        "Line" : 158,
        "CharPositionInLine" : 35
      },
      "18" : {
        "Text" : "# we opt not to automatically output ComPWA_ERROR_REASON here as\n\n# it could be quite lengthy and somewhat imposing in its requests\n\n# Since ComPWA is not always a required dependency we'll leave this\n\n# up to the end-user.\n",
        "Line" : 180,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 19
    },
    "cmake/Modules/FindGeneva.cmake" : {
      "ObjectId" : "8429dc2afafd6be15e9f8bc3127f8d609a01b07e",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#\n\n# Copyright (C) Gemfony scientific UG (haftungsbeschraenkt)\n\n#\n\n# See the AUTHORS file in the top-level directory for a list of authors.\n\n#\n\n# Contact: contact [at] gemfony (dot) eu\n\n#\n\n# This file is part of the Geneva library collection.\n\n#\n\n# Geneva was developed with kind support from Karlsruhe Institute of\n\n# Technology (KIT) and Steinbuch Centre for Computing (SCC). Further\n\n# information about KIT and SCC can be found at http://www.kit.edu/english\n\n# and http://scc.kit.edu .\n\n#\n\n# Geneva is free software: you can redistribute and/or modify it under\n\n# the terms of version 3 of the GNU Affero General Public License\n\n# as published by the Free Software Foundation.\n\n#\n\n# Geneva is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\n# GNU Affero General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Affero General Public License\n\n# along with the Geneva library. If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n# For further information on Gemfony scientific and Geneva, visit\n\n# http://www.gemfony.eu .\n\n#\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# This file is part of the Geneva library collection's build system.\n\n# Its purpose is to find the Geneva libraries and include files for\n\n# building Geneva applications.\n\n#\n\n# This module accepts the following variables as hints for the search:\n\n#\n\n# GENEVA_ROOT       - The Geneva installation prefix where to search for libraries and includes\n\n# GENEVA_INCLUDEDIR - The directory where the Geneva includes may be found\n\n# GENEVA_LIBRARYDIR - The directory where the Geneva libraries may be found\n\n#\n\n#\n\n# This module defines the following variables as result of the search:\n\n#\n\n# GENEVA_INCLUDE_DIR          - The directory below which the Geneva includes may be found\n\n# GENEVA_LIBRARY_DIR          - The directory below which the Geneva libraries may be found\n\n#\n\n# GENEVA_COMMON_LIBRARY       - Points to the library with common functionality needed by all parts of Geneva\n\n# GENEVA_HAP_LIBRARY          - Points to the library for random number generation\n\n# GENEVA_COURTIER_LIBRARY     - Points to the library for parallel/distributed computing\n\n# GENEVA_OPTIMIZATION_LIBRARY - Points to the main geneva library itself, the optimization library\n\n# GENEVA_INDIVIDUAL_LIBRARY   - Points to the library of sample individuals\n\n#\n\n# GENEVA_LIBRARIES            - A list containing all the Geneva libraries mentioned above\n\n# GENEVA_LIBS                 - A list containing the names (not the paths!) of all the libraries found\n\n#\n\n# GENEVA_VERSION              - The Geneva version found by this module\n\n# GENEVA_TESTING              - TRUE if the Geneva libraries found were built with testing support\n\n#\n\n# GENEVA_FOUND                - TRUE if all of the required Geneva components were found\n\n#\n\n#\n\n# Example usages: FIND_PACKAGE(Geneva) or FIND_PACKAGE(Geneva REQUIRED)\n\n#\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Module for handling standard arguments given through FIND_PACKAGE()\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###############################################################################\n\n# Analyze first the recieved variables\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If the CMake variables are not set, we check and use the corresponding\n\n# environment variables\n\n#IF ((NOT GENEVA_ROOT) AND ENV{GENEVA_ROOT})\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#ENDIF ()\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The more specific variables take precedence over the more generic ones\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###############################################################################\n\n# Check if some default locations are available to be used as backup\n\n# alternatives in case the hint variables are empty\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###############################################################################\n\n# Find the include directories. We search for a single include\n\n# directory only and assume that the others can be found at the\n\n# same level\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enforce a search order, making sure we first search in the given\n\n# location, and only if not found we search the normal system paths\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Check that the path was indeed found\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "###############################################################################\n\n# Find the libraries and set the related variables\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Note: libraries are listed in order of decreasing dependencies, which\n\n# allows to use the GENEVA_LIBRARIES variable for linking with all of\n\n# them as a block without linking order issues (hopefully)\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Enforce a search order, making sure we first search in the given\n\n# location, and only if not found we search the normal system paths\n",
        "Line" : 157,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# We rather use more readable variable names for the optimization libraries...\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "###############################################################################\n\n# Check that all files and directories were properly found\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This function sets the <PKG>_FOUND variable if all the given variables\n\n# contain valid values. To declare Geneva as \"FOUND\" we need at least the\n\n# 'common' library.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "###############################################################################\n\n# Check that the versions found are consistent\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Read the Geneva version string, which is of the form '#define GENEVA_VERSION 0150'\n",
        "Line" : 225,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# Remove the initial 0\n",
        "Line" : 243,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "###############################################################################\n\n# Determine if Geneva was built with testing support\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "###############################################################################\n\n# Report the results\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "###############################################################################\n\n# Done\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "cmake/Modules/FindMinuit2.cmake" : {
      "ObjectId" : "39c19f377f992b4296998c4405305a3e769d1003",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module accepts the following variables as hints for the search:\n\n#\n\n# MINUIT2_ROOT       - The Minuit2 installation prefix where to search for libraries and includes\n\n# MINUIT2_INCLUDEDIR - The directory where the Minuit2 includes may be found\n\n# MINUIT2_LIBRARYDIR - The directory where the Minuit2 libraries may be found\n\n#\n\n# This module defines the following variables as result of the search:\n\n#\n\n# MINUIT2_INCLUDE_DIR          - The directory below which the Minuit2 includes may be found\n\n# MINUIT2_LIBRARY_DIR          - The directory below which the Minuit2 libraries may be found\n\n#\n\n# MINUIT2_LIBRARIES            - A list containing the Minuit2 library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Minuit2_FOUND                - TRUE if Minuit2 is found\n\n#\n\n#\n\n# Example usages: FIND_PACKAGE(Minuit2) or FIND_PACKAGE(Minuit2 REQUIRED)\n\n#\n\n###############################################################################\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Module for handling standard arguments given through FIND_PACKAGE()\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If the CMake variables are not set, we check and use the corresponding\n\n# environment variables\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The more specific variables take precedence over the more generic ones\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Try to find Minuit2 within the ROOT installation\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Sets Minuit2_FOUND to true if all variabels are defined\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Report some results\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#ELSE()\n",
        "Line" : 76,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "#MESSAGE(STATUS \"Minuit2 installation could not be found!\")\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "cmake/Modules/FindROOT.cmake" : {
      "ObjectId" : "ed6f52ec3013602995add187143185a624cf87e4",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Finds ROOT instalation\n\n# This module sets up ROOT information\n\n# It defines:\n\n# ROOT_FOUND             If the ROOT is found\n\n# ROOT_INCLUDE_DIR       PATH to the include directory\n\n# ROOT_INCLUDE_DIRS      PATH to the include directories (not cached)\n\n# ROOT_LIBRARIES         Most common libraries\n\n# ROOT_<name>_LIBRARY    Full path to the library <name>\n\n# ROOT_LIBRARY_DIR       PATH to the library directory\n\n# ROOT_ETC_DIR           PATH to the etc directory\n\n# ROOT_DEFINITIONS       Compiler definitions\n\n# ROOT_CXX_FLAGS         Compiler flags to used by client packages\n\n# ROOT_C_FLAGS           Compiler flags to used by client packages\n\n# ROOT_EXE_LINKER_FLAGS  Linker flags to used by client packages\n\n#\n\n# Updated by K. Smith (ksmith37@nd.edu) to properly handle\n\n#  dependencies in ROOT_GENERATE_DICTIONARY\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Add imported targets\n\n# ------------------------------------------------------------------------\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# message(STATUS \"  ${COMPONENT}\")\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Even if ROOT_USE_STATIC_LIBS is OFF, we might have static\n\n# libraries as a result.\n",
        "Line" : 123,
        "CharPositionInLine" : 10
      },
      "4" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# function ROOT_GENERATE_DICTIONARY( dictionary\n\n#                                    header1 header2 ...\n\n#                                    LINKDEF linkdef1 ...\n\n#                                    OPTIONS opt1...)\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---Get the list of include directories------------------\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#---Get the list of header files-------------------------\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Is this header a globbing expression?\n",
        "Line" : 190,
        "CharPositionInLine" : 29
      },
      "8" : {
        "Text" : "# skip LinkDefs from globbing result\n",
        "Line" : 193,
        "CharPositionInLine" : 34
      },
      "9" : {
        "Text" : "#---Get LinkDef.h file------------------------------------\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#---call rootcling------------------------------------------\n",
        "Line" : 210,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# function REFLEX_GENERATE_DICTIONARY(dictionary\n\n#                                     header1 header2 ...\n\n#                                     SELECTION selectionfile ...\n\n#                                     OPTIONS opt1...)\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---Get the list of header files-------------------------\n",
        "Line" : 226,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#---Get Selection file------------------------------------\n",
        "Line" : 238,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#---Get the list of include directories------------------\n",
        "Line" : 244,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#---Get preprocessor definitions--------------------------\n",
        "Line" : 250,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#---Nanes and others---------------------------------------\n",
        "Line" : 255,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#set(gccxmlopts \"--gccxmlopt=\\'--gccxml-cxxflags -m64 \\'\")\n",
        "Line" : 260,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#set(rootmapname ${dictionary}Dict.rootmap)\n\n#set(rootmapopts --rootmap=${rootmapname} --rootmap-lib=${libprefix}${dictionary}Dict)\n\n#---Check GCCXML and get path-----------------------------\n",
        "Line" : 263,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#---Actual command----------------------------------------\n",
        "Line" : 271,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 20
    },
    "cmake/Modules/FindTBB.cmake" : {
      "ObjectId" : "1e0c09cd4e04927a05e36167fa12835f63803dbb",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c) 2015 Justus Calvin\n\n# \n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n# \n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# FindTBB\n\n# -------\n\n#\n\n# Find TBB include directories and libraries.\n\n#\n\n# Usage:\n\n#\n\n#  find_package(TBB [major[.minor]] [EXACT]\n\n#               [QUIET] [REQUIRED]\n\n#               [[COMPONENTS] [components...]]\n\n#               [OPTIONAL_COMPONENTS components...]) \n\n#\n\n# where the allowed components are tbbmalloc and tbb_preview. Users may modify \n\n# the behavior of this module with the following variables:\n\n#\n\n# * TBB_ROOT_DIR          - The base directory the of TBB installation.\n\n# * TBB_INCLUDE_DIR       - The directory that contains the TBB headers files.\n\n# * TBB_LIBRARY           - The directory that contains the TBB library files.\n\n# * TBB_<library>_LIBRARY - The path of the TBB the corresponding TBB library. \n\n#                           These libraries, if specified, override the \n\n#                           corresponding library search results, where <library>\n\n#                           may be tbb, tbb_debug, tbbmalloc, tbbmalloc_debug,\n\n#                           tbb_preview, or tbb_preview_debug.\n\n# * TBB_USE_DEBUG_BUILD   - The debug version of tbb libraries, if present, will\n\n#                           be used instead of the release version.\n\n#\n\n# Users may modify the behavior of this module with the following environment\n\n# variables:\n\n#\n\n# * TBB_INSTALL_DIR \n\n# * TBBROOT\n\n# * LIBRARY_PATH\n\n#\n\n# This module will set the following variables:\n\n#\n\n# * TBB_FOUND             - Set to false, or undefined, if we haven’t found, or\n\n#                           don’t want to use TBB.\n\n# * TBB_<component>_FOUND - If False, optional <component> part of TBB sytem is\n\n#                           not available.\n\n# * TBB_VERSION           - The full version string\n\n# * TBB_VERSION_MAJOR     - The major version\n\n# * TBB_VERSION_MINOR     - The minor version\n\n# * TBB_INTERFACE_VERSION - The interface version number defined in \n\n#                           tbb/tbb_stddef.h.\n\n# * TBB_<library>_LIBRARY_RELEASE - The path of the TBB release version of \n\n#                           <library>, where <library> may be tbb, tbb_debug,\n\n#                           tbbmalloc, tbbmalloc_debug, tbb_preview, or \n\n#                           tbb_preview_debug.\n\n# * TBB_<library>_LIBRARY_DEGUG - The path of the TBB release version of \n\n#                           <library>, where <library> may be tbb, tbb_debug,\n\n#                           tbbmalloc, tbbmalloc_debug, tbb_preview, or \n\n#                           tbb_preview_debug.\n\n#\n\n# The following varibles should be used to build and link with TBB:\n\n#\n\n# * TBB_INCLUDE_DIRS        - The include directory for TBB.\n\n# * TBB_LIBRARIES           - The libraries to link against to use TBB.\n\n# * TBB_LIBRARIES_RELEASE   - The release libraries to link against to use TBB.\n\n# * TBB_LIBRARIES_DEBUG     - The debug libraries to link against to use TBB.\n\n# * TBB_DEFINITIONS         - Definitions to use when compiling code that uses\n\n#                             TBB.\n\n# * TBB_DEFINITIONS_RELEASE - Definitions to use when compiling release code that\n\n#                             uses TBB.\n\n# * TBB_DEFINITIONS_DEBUG   - Definitions to use when compiling debug code that\n\n#                             uses TBB.\n\n#\n\n# This module will also create the \"tbb\" target that may be used when building\n\n# executables and libraries.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##################################\n\n# Check the build type\n\n##################################\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "##################################\n\n# Set the TBB search directories\n\n##################################\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Define search paths based on user input and environment variables\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Define the search directories based on the current platform\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set the target architecture\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Set the TBB search library path search suffix based on the version of VC\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Add the library path search suffix for the VC independent version of TBB\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# OS X\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# TODO: Check to see which C++ library is being used by the compiler.\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# The default C++ library on OS X 10.9 and later is libc++\n",
        "Line" : 154,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Linux\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# TODO: Check compiler version to see the suffix should be <arch>/gcc4.1 or\n\n#       <arch>/gcc4.1. For now, assume that the compiler is more recent than\n\n#       gcc 4.4.x or later.\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "##################################\n\n# Find the TBB include dir\n\n##################################\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "##################################\n\n# Set version strings\n\n##################################\n",
        "Line" : 183,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "##################################\n\n# Find TBB components\n\n##################################\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Find each component\n",
        "Line" : 208,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Search for the libraries\n",
        "Line" : 212,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Mark internal variables as advanced\n",
        "Line" : 239,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "##################################\n\n# Set compile flags and libraries\n\n##################################\n",
        "Line" : 247,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "##################################\n\n# Create targets\n\n##################################\n",
        "Line" : 270,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "doc/Makefile" : {
      "ObjectId" : "6e64518c0daaf2fec2cbd2a5b45f05f9a2a17959",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Minimal makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put it first so that \"make\" without argument is like \"make help\".\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Catch-all target: route all unknown targets to Sphinx using the new\n\n# \"make mode\" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "pycompwa/CMakeLists.txt" : {
      "ObjectId" : "517622ce4729fada6df813dcf07621f7dba1ba2f",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy to build directory\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Copy files of the installable pycompwa module to \n\n# ${CMAKE_INSTALL_PREFIX}/share/ComPWA/pycompwa. \n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Automatic installation of the python module probably not adequate since \n\n# the user could use venv, custom path etc.\n\n# install(CODE \"execute_process(COMMAND ${Python3_EXECUTABLE} ${SETUP_PY} \"\n\n#              \"install --user WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})\")\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# ... give some hints on how to install the module\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "pycompwa/PythonInterface/CMakeLists.txt" : {
      "ObjectId" : "9696160c2960f332716a2dd671c7c0479679c395",
      "LastModified" : "2019-04-11T11:05:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create python module for ComPWA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Install\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 58,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 2341
}