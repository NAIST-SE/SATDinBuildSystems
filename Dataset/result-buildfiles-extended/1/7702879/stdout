{
  "Repository" : "7702879",
  "Revision" : "HEAD",
  "ObjectId" : "333290c32403ce11e7117f826a6348c3a8e6c125",
  "CommitTime" : "2019-01-07T21:58:19Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "52a30f223eba9a8062f2b60a9a0aacf55b9cbbb1",
      "LastModified" : "2018-09-26T21:58:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Numenta Platform for Intelligent Computing (NuPIC)\n\n# Copyright (C) 2015-2017, Numenta, Inc.  Unless you have purchased from\n\n# Numenta, Inc. a separate commercial license for this software code, the\n\n# following terms and conditions apply:\n\n#\n\n# This program is free software: you can redistribute it and/or modify\n\n# it under the terms of the GNU Affero Public License version 3 as\n\n# published by the Free Software Foundation.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU Affero Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Affero Public License\n\n# along with this program.  If not, see http://www.gnu.org/licenses.\n\n#\n\n# http://numenta.org/licenses/\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if( POLICY CMP0046 )\n\n#   cmake_policy(VERSION 3.3)\n\n#   # The new policy for add_dependencies is to now error if a dependency target\n\n#   # is not found. The old policy didn't care and continued through configuration\n\n#   cmake_policy(SET CMP0046 OLD)\n\n# endif()\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if( POLICY CMP0054 )\n\n#   # The OLD behavior for this policy is to dereference variables and interpret\n\n#   # keywords even if they are quoted or bracketed. The NEW behavior is to not\n\n#   # dereference variables or interpret keywords that have been quoted or bracketed.\n\n#   cmake_policy(SET CMP0054 OLD)\n\n# endif()\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Global NuPIC CMake options\n\n#\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Identify platform name.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define a platform suffix, eg ${PLATFORM}${BITNESS}${PLATFORM_SUFFIX}\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Make sure we can link against any specified paths.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Determine common toolchain settings, compiler and link flags\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Set up builds of external dependencies and get their exports.\n\n# (see individual external/*.cmake modules for exported settings and functions)\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Now build nupic_core project.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "CommonCompilerConfig.cmake" : {
      "ObjectId" : "a2b2a534cc1d9b10cd15fc1fe358d7b87d6e614b",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Numenta Platform for Intelligent Computing (NuPIC)\n\n# Copyright (C) 2013-2016, Numenta, Inc.  Unless you have purchased from\n\n# Numenta, Inc. a separate commercial license for this software code, the\n\n# following terms and conditions apply:\n\n#\n\n# This program is free software: you can redistribute it and/or modify\n\n# it under the terms of the GNU Affero Public License version 3 as\n\n# published by the Free Software Foundation.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU Affero Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Affero Public License\n\n# along with this program.  If not, see http://www.gnu.org/licenses.\n\n#\n\n# http://numenta.org/licenses/\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configures common compiler/linker/loader settings for internal and external\n\n# sources.\n\n#\n\n# NOTE SETTINGS THAT ARE SPECIFIC TO THIS OR THAT MODULE DO NOT BELONG HERE.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# INPUTS:\n\n#\n\n# PLATFORM: lowercase ${CMAKE_SYSTEM_NAME}\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# OUTPUTS:\n\n#\n\n# BITNESS: Platform bitness: 32 or 64\n\n#\n\n# COMMON_COMPILER_DEFINITIONS: list of -D define flags for the compilation of\n\n#                               source files; e.g., for cmake `add_definitions()`\n\n# COMMON_COMPILER_DEFINITIONS_STR: string variant of COMMON_COMPILER_DEFINITIONS\n\n#\n\n# EXTERNAL_C_FLAGS_UNOPTIMIZED: string of C flags without explicit optimization flags for 3rd-party sources\n\n#\n\n# EXTERNAL_C_FLAGS_OPTIMIZED: EXTERNAL_C_FLAGS_UNOPTIMIZED plus optimizations\n\n#\n\n# EXTERNAL_CXX_FLAGS_UNOPTIMIZED: string of C++ flags without explicit optimization flags for 3rd-party sources.\n\n#\n\n# EXTERNAL_LINKER_FLAGS_UNOPTIMIZED: string of linker flags for linking 3rd-party executables\n\n#                      and shared libraries (DLLs) without explicit optimization\n\n#                      settings. This property is for use with\n\n#                      EXTERNAL_C_FLAGS_UNOPTIMIZED and EXTERNAL_CXX_FLAGS_UNOPTIMIZED\n\n#\n\n# EXTERNAL_LINKER_FLAGS_OPTIMIZED: string of linker flags for linking 3rd-party executables\n\n#                      and shared libraries (DLLs) with optimizations that are\n\n#                      compatible with EXTERNAL_C_FLAGS_OPTIMIZED and EXTERNAL_CXX_FLAGS_OPTIMIZED\n\n#\n\n# EXTERNAL_STATICLIB_CMAKE_DEFINITIONS_OPTIMIZED: list of -D cmake definitions corresponding to\n\n#                      EXTERNAL_C_FLAGS_OPTIMIZED (e. g. use of gcc-ar and gcc-ranlib wrappers for gcc >= 4.9\n\n#                      in combination with Link Time Optimization)\n\n#\n\n# EXTERNAL_STATICLIB_CONFIGURE_DEFINITIONS_OPTIMIZED: variant of\n\n#                      EXTERNAL_STATICLIB_CMAKE_DEFINITIONS_OPTIMIZED used for\n\n#                      configure-based builds\n\n#\n\n# INTERNAL_CXX_FLAGS_OPTIMIZED: string of C++ flags with explicit optimization flags for internal sources\n\n#\n\n# INTERNAL_LINKER_FLAGS_OPTIMIZED: string of linker flags for linking internal executables\n\n#                      and shared libraries (DLLs) with optimizations that are\n\n#                      compatible with INTERNAL_CXX_FLAGS_OPTIMIZED\n\n#\n\n# PYEXT_LINKER_FLAGS_OPTIMIZED: string of linker flags for linking python extension\n\n#                      shared libraries (DLLs) with optimizations that are\n\n#                      compatible with EXTERNAL_CXX_FLAGS_OPTIMIZED.\n\n#\n\n# CMAKE_AR: Name of archiving tool (ar) for static libraries. See cmake documentation\n\n#\n\n# CMAKE_RANLIB: Name of randomizing tool (ranlib) for static libraries. See cmake documentation\n\n#\n\n# CMAKE_LINKER: updated, if needed; use ld.gold if available. See cmake\n\n#               documentation\n\n#\n\n# NOTE The XXX_OPTIMIZED flags are quite aggresive - if your code misbehaves for\n\n# strange reasons, try compiling without them.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# NOTE much of the code below was factored out from src/CMakeLists.txt\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Init exported properties\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Identify platform \"bitness\".\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Check memory limits (in megabytes)\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Python bindings (particularly mathPYTHON_wrap.cxx) requires more than\n\n# 1GB of memory for compiling with GCC. Send a warning if available memory\n\n# (physical plus virtual(swap)) is less than 1GB\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Compiler `-D*` definitions\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# or UNIX like (i.e. APPLE and CYGWIN)\n",
        "Line" : 140,
        "CharPositionInLine" : 9
      },
      "11" : {
        "Text" : "#\n\n# Set linker (ld)\n\n# use ld.gold if available\n\n#\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# Determine stdlib settings\n\n#\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# NOTE When building manylinux python extensions, we want the static\n\n# libstdc++ due to differences in c++ ABI between the older toolchain in the\n\n# manylinux Docker image and libstdc++ in newer linux distros that is\n\n# compiled with the c++11 ABI. for example, with shared libstdc++, the\n\n# manylinux-built extension is unable to catch std::ios::failure exception\n\n# raised by the shared libstdc++.so while running on Ubuntu 16.04.\n",
        "Line" : 186,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# NOTE We need to use shared libgcc to be able to throw and catch exceptions\n\n# across different shared libraries, as may be the case when our python\n\n# extensions runtime-link to capnproto symbols in pycapnp's extension.\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#\n\n# Determine Optimization flags here\n\n# These are quite aggresive flags, if your code misbehaves for strange reasons,\n\n# try compiling without them.\n\n#\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#TODO use -Ofast instead of -O3\n",
        "Line" : 212,
        "CharPositionInLine" : 62
      },
      "17" : {
        "Text" : "# NOTE -flto must go together in both cc and ld flags; also, it's presently incompatible\n\n# with the -g option in at least some GNU compilers (saw in `man gcc` on Ubuntu)\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#TODO fix LTO for clang\n",
        "Line" : 223,
        "CharPositionInLine" : 97
      },
      "19" : {
        "Text" : "#TODO LTO for clang too\n",
        "Line" : 224,
        "CharPositionInLine" : 64
      },
      "20" : {
        "Text" : "#\n\n# compiler specific settings and warnings here\n\n#\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# MS Visual C\n",
        "Line" : 242,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# LLVM Clang / Gnu GCC\n",
        "Line" : 252,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Hide all symbols in DLLs except the ones with explicit visibility;\n\n# see https://gcc.gnu.org/wiki/Visibility\n",
        "Line" : 256,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Don't allow undefined symbols when linking executables\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Don't force python extensions to link to specific libpython during build:\n\n# python symbols are made available to extensions atomatically once loaded\n\n#\n\n# NOTE Windows DLLs are shared executables with their own main; they require\n\n# all symbols to resolve at link time.\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Compatibility with gcc >= 4.9 which requires the use of gcc's own wrappers for\n\n# ar and ranlib in combination with LTO works also with LTO disabled\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# EXTERNAL_STATICLIB_CMAKE_DEFINITIONS_OPTIMIZED duplicates settings for\n\n# CMAKE_AR and CMAKE_RANLIB. This is a workaround for a CMAKE bug\n\n# (https://gitlab.kitware.com/cmake/cmake/issues/15547) that prevents\n\n# the correct propagation of CMAKE_AR and CMAKE_RANLIB variables to all\n\n# externals\n",
        "Line" : 316,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# And ditto for externals that use the configure-based build system\n",
        "Line" : 324,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "#\n\n# Set up Debug vs. Release options\n\n#\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Enable diagnostic features of standard class templates, including ability\n\n# to examine containers in gdb.\n\n# See https://gcc.gnu.org/onlinedocs/libstdc++/manual/debug_mode_using.html\n",
        "Line" : 344,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# NOTE: debug mode is immature in Clang, and values of _LIBCPP_DEBUG above 0\n\n# require  the debug build of libc++ to be present at linktime on OS X.\n",
        "Line" : 349,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Disable optimizations\n",
        "Line" : 354,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "#\n\n# Assemble compiler and linker properties\n\n#\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Settings for internal nupic.core code\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Settings for third-party code and code generated by 3rd-party tools (e.g., Swig bindings)\n\n# (NOTE we omit the explicit compiler warning-related flags here to avoid\n\n#  polluting build output with warnings from code that we don't control)\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#\n\n# Provide a string variant of the COMMON_COMPILER_DEFINITIONS list\n\n#\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37
    },
    "docs/Makefile" : {
      "ObjectId" : "153da49e24f8ef70dc89c2fd0a71e39dbb1a840c",
      "LastModified" : "2017-03-02T19:42:42Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "external/Apr1Lib.cmake" : {
      "ObjectId" : "57d2554cc12c7395a9db0e361b9389f136f555db",
      "LastModified" : "2017-03-02T19:42:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Numenta Platform for Intelligent Computing (NuPIC)\n\n# Copyright (C) 2016, Numenta, Inc.  Unless you have purchased from\n\n# Numenta, Inc. a separate commercial license for this software code, the\n\n# following terms and conditions apply:\n\n#\n\n# This program is free software: you can redistribute it and/or modify\n\n# it under the terms of the GNU Affero Public License version 3 as\n\n# published by the Free Software Foundation.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU Affero Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Affero Public License\n\n# along with this program.  If not, see http://www.gnu.org/licenses.\n\n#\n\n# http://numenta.org/licenses/\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Creates ExternalProject for building the apr-1 static library\n\n# (apache public runtime)\n\n#\n\n# OUTPUT VARIABLES:\n\n#\n\n#   APR1_STATIC_LIB_TARGET: name of static library target that contains all\n\n#                           of the apr-1 library objects.\n\n#   APR1_STATIC_LIB_INC_DIR: directory of installed apr-1 lib headers\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for MERGE_STATIC_LIBRARIES\n",
        "Line" : 31,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : "# Output static library target for linking and dependencies\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Export directory of installed apr-1 lib headers\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Path to static apr-1 lib installed by external project\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOTE -DCOM_NO_WINDOWS_H fixes a bunch of OLE-related build errors on Win32\n\n# (reference: https://bz.apache.org/bugzilla/show_bug.cgi?id=56342)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Location of apr sources\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Get it built!\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# NOT UNIX - i.e., Windows\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# TODO Figure out what to do with INSTALL_PDB. We disabled it because\n\n# our manual INSTALL_COMMAND was not finding the pdb file and failing.\n",
        "Line" : 94,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "#LOG_INSTALL 1\n",
        "Line" : 104,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "#\n\n# Add step to organize generic and architecture-specific apr headers under\n\n# include/apr-1 subdirectory\n\n# NOTE the unix configure-based installation does that and nupic.core\n\n#      depends on this include directory organization.\n\n#\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#LOG 1\n",
        "Line" : 120,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Move the installed ${APR1_STATIC_LIB_INC_DIR}/*.h to\n\n# ${APR1_STATIC_LIB_INC_DIR}/apr-1\n",
        "Line" : 122,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Copy <SOURCE_DIR>/include/arch to ${APR1_STATIC_LIB_INC_DIR}/apr-1 as\n\n# expected by nupic.core\n",
        "Line" : 128,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "#\n\n# Add step to patch apr-1 sources\n\n#\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Patch file path\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#LOG 1\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Wrap external project-generated static library in an `add_library` target.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "external/AprUtil1Lib.cmake" : {
      "ObjectId" : "2a388519fb996d92acf6412685ed1fe499cea280",
      "LastModified" : "2017-03-02T19:42:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Numenta Platform for Intelligent Computing (NuPIC)\n\n# Copyright (C) 2016, Numenta, Inc.  Unless you have purchased from\n\n# Numenta, Inc. a separate commercial license for this software code, the\n\n# following terms and conditions apply:\n\n#\n\n# This program is free software: you can redistribute it and/or modify\n\n# it under the terms of the GNU Affero Public License version 3 as\n\n# published by the Free Software Foundation.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU Affero Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Affero Public License\n\n# along with this program.  If not, see http://www.gnu.org/licenses.\n\n#\n\n# http://numenta.org/licenses/\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Creates ExternalProject for building the aprutil-1 static library\n\n# (apache public runtime utilities)\n\n#\n\n# OUTPUT VARIABLES:\n\n#\n\n#   APRUTIL1_STATIC_LIB_TARGET: name of static library target that contains all\n\n#                               of the aprutil-1 library objects.\n\n#   APRUTIL1_STATIC_LIB_INC_DIR: directory of installed aprutil-1 lib headers\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for MERGE_STATIC_LIBRARIES\n",
        "Line" : 31,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : "# Output static library target for linking and dependencies\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Export directory of installed aprutil-1 lib headers to parent\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Path to static aprutil-1 lib installed by external project\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOTE -DCOM_NO_WINDOWS_H fixes a bunch of OLE-related build errors in apr-1\n\n# on Win32 (reference: https://bz.apache.org/bugzilla/show_bug.cgi?id=56342)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# NOT UNIX - i.e., Windows\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# TODO Figure out what to do with INSTALL_PDB. We disabled it because\n\n# our manual INSTALL_COMMAND was not finding the pdb file and failing.\n",
        "Line" : 95,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "#LOG_INSTALL 1\n",
        "Line" : 108,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "#\n\n# Add step to organize apr-util headers under include/apr-1 subdirectory\n\n# NOTE the unix configure-based installation does that and nupic.core\n\n#      depends on this include directory organization.\n\n#\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#LOG 1\n",
        "Line" : 123,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Move the installed ${APRUTIL1_STATIC_LIB_INC_DIR}/*.h to\n\n# ${APRUTIL1_STATIC_LIB_INC_DIR}/apr-1\n",
        "Line" : 125,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "#\n\n# Add step to patch aprutil-1 sources\n\n#\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Patch file path\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#LOG 1\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Wrap external project-generated static library in an `add_library` target.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "external/CMakeLists.txt" : {
      "ObjectId" : "5562fbefeec53da2353bc4391cc49a574d895190",
      "LastModified" : "2018-03-13T18:06:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Numenta Platform for Intelligent Computing (NuPIC)\n\n# Copyright (C) 2015, Numenta, Inc.  Unless you have purchased from\n\n# Numenta, Inc. a separate commercial license for this software code, the\n\n# following terms and conditions apply:\n\n#\n\n# This program is free software: you can redistribute it and/or modify\n\n# it under the terms of the GNU Affero Public License version 3 as\n\n# published by the Free Software Foundation.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU Affero Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Affero Public License\n\n# along with this program.  If not, see http://www.gnu.org/licenses.\n\n#\n\n# http://numenta.org/licenses/\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Shorter aliases for static library prefix and suffix.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the library prefix path.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is the include path.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The full prefix path for binaries.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# AprUtil1Lib MUST be imported after Apr1Lib due to depencies on exported\n\n# properties\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add vendored prebuilt library include paths.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Convenience variable that wraps all external include directories.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "external/CapnProto.cmake" : {
      "ObjectId" : "186201e609a9f6ca7f209c3d9eee70f2f758567c",
      "LastModified" : "2017-10-04T22:15:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Numenta Platform for Intelligent Computing (NuPIC)\n\n# Copyright (C) 2015, Numenta, Inc.  Unless you have purchased from\n\n# Numenta, Inc. a separate commercial license for this software code, the\n\n# following terms and conditions apply:\n\n#\n\n# This program is free software: you can redistribute it and/or modify\n\n# it under the terms of the GNU Affero Public License version 3 as\n\n# published by the Free Software Foundation.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU Affero Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Affero Public License\n\n# along with this program.  If not, see http://www.gnu.org/licenses.\n\n#\n\n# http://numenta.org/licenses/\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build Cap'n Proto from source.\n\n#\n\n# OUTPUT VARIABLES:\n\n#\n\n#   CAPNP_STATIC_LIB_TARGET: name of static library target that contains all of\n\n#                            capnproto library objects.\n\n#\n\n#   CAPNP_INCLUDE_DIRS\n\n#   CAPNP_EXECUTABLE\n\n#   CAPNPC_CXX_EXECUTABLE\n\n#   CAPNP_CMAKE_DEFINITIONS: informational; platform-specific cmake defintions\n\n#                            used by capnproto build\n\n#   CAPNP_COMPILER_DEFINITIONS: list of -D compiler defintions needed by apps\n\n#                               that are built against this library (e.g.,\n\n#                               -DCAPNP_LITE)\n\n#   CAPNP_BINARIES:          Binaries location\n\n#\n\n# EXPORTED FUNCTIONS:\n\n#\n\n#   CREATE_CAPNPC_COMMAND: Create a custom command that runs the capnp compiler.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for MERGE_STATIC_LIBRARIES\n",
        "Line" : 43,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : "# Output static library target for linking and dependencies\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# NOTE nupic.core's swig wraps depend on the macro CAPNP_LITE to have a value\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# NOTE Capnproto link fails with segfault on Travis and Ubuntu when using\n\n# a combination -flto optimization together with -O2\n\n# Reference https://github.com/sandstorm-io/capnproto/issues/300\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Print diagnostic info to debug whether -fuse-linker-plugin is being suppressed\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Merge capnproto-generated static libraries into a single static library.\n\n# This creates an `add_library` static library target that serves as the\n\n# abstraction to all of capnproto library objects\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Install prebuilt Cap'n Proto compilers for Windows\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Create a custom command that runs the capnp compiler on ${SPEC_FILES} and\n\n# generates ${OUTPUT_FILES} in directory ${TARGET_DIR}\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Set the relevant variables in the parent scope.\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Install headers and libraries.\n\n## TODO It's confusing that these same INC and LIB installation steps are duplicated\n\n##      in src/CMakeLists.txt\n\n#foreach (INCLUDE_DIR ${CAPNP_INCLUDE_DIRS})\n\n#  install(DIRECTORY ${INCLUDE_DIR}/kj\n\n#          DESTINATION include/)\n\n#  install(DIRECTORY ${INCLUDE_DIR}/capnp\n\n#          DESTINATION include/)\n\n#endforeach ()\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "external/MoveFilesToNewDir.cmake" : {
      "ObjectId" : "fc00e5b239582a385133a300df194fdce37c3f85",
      "LastModified" : "2017-03-02T19:42:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Numenta Platform for Intelligent Computing (NuPIC)\n\n# Copyright (C) 2016, Numenta, Inc.  Unless you have purchased from\n\n# Numenta, Inc. a separate commercial license for this software code, the\n\n# following terms and conditions apply:\n\n#\n\n# This program is free software: you can redistribute it and/or modify\n\n# it under the terms of the GNU Affero Public License version 3 as\n\n# published by the Free Software Foundation.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU Affero Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Affero Public License\n\n# along with this program.  If not, see http://www.gnu.org/licenses.\n\n#\n\n# http://numenta.org/licenses/\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Moves files to destination directory, creating the destination directory if\n\n# needed.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ARGS:\n\n#\n\n#  GLOBBING_EXPR\n\n#  DEST_DIR_PATH\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "external/Swig.cmake" : {
      "ObjectId" : "bcf9a1e18647f926b889f1c7e32f3e50b28e7ad3",
      "LastModified" : "2018-03-21T15:46:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Numenta Platform for Intelligent Computing (NuPIC)\n\n# Copyright (C) 2015, Numenta, Inc.  Unless you have purchased from\n\n# Numenta, Inc. a separate commercial license for this software code, the\n\n# following terms and conditions apply:\n\n#\n\n# This program is free software: you can redistribute it and/or modify\n\n# it under the terms of the GNU Affero Public License version 3 as\n\n# published by the Free Software Foundation.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU Affero Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Affero Public License\n\n# along with this program.  If not, see http://www.gnu.org/licenses.\n\n#\n\n# http://numenta.org/licenses/\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set up Swig\n\n#\n\n# OUTPUT VARIABLES:\n\n#\n\n#   SWIG_EXECUTABLE: the path to the swig executable as defined by FindSWIG.\n\n#   SWIG_DIR: the directory where swig is installed (.i files, etc.) as defined\n\n#             by FindSWIG.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build Swig from source on non-Windows (e.g., Linux and OS X)\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "external/YamlCppLib.cmake" : {
      "ObjectId" : "c20cdffffbf905313370049e70209fc285f7ad39",
      "LastModified" : "2017-03-02T19:42:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Numenta Platform for Intelligent Computing (NuPIC)\n\n# Copyright (C) 2016, Numenta, Inc.  Unless you have purchased from\n\n# Numenta, Inc. a separate commercial license for this software code, the\n\n# following terms and conditions apply:\n\n#\n\n# This program is free software: you can redistribute it and/or modify\n\n# it under the terms of the GNU Affero Public License version 3 as\n\n# published by the Free Software Foundation.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU Affero Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Affero Public License\n\n# along with this program.  If not, see http://www.gnu.org/licenses.\n\n#\n\n# http://numenta.org/licenses/\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Creates ExternalProject for building the yaml-cpp static library\n\n#\n\n# OUTPUT VARIABLES:\n\n#\n\n#   YAML_CPP_STATIC_LIB_TARGET: name of static library target that contains all\n\n#                               of yaml-cpp library objects.\n\n#   YAML_CPP_STATIC_LIB_INC_DIR: directory of installed yaml-cpp lib headers\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for MERGE_STATIC_LIBRARIES\n",
        "Line" : 30,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : "# Output static library target for linking and dependencies\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Export directory of installed yaml-cpp lib headers to parent\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Path to static yaml-cpp installed by external project\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Wrap external project-generated static library in an `add_library` target.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "external/YamlLib.cmake" : {
      "ObjectId" : "7b2d782566aea9632726bfc0fa0ce33dc4cdacec",
      "LastModified" : "2017-03-02T19:42:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Numenta Platform for Intelligent Computing (NuPIC)\n\n# Copyright (C) 2016, Numenta, Inc.  Unless you have purchased from\n\n# Numenta, Inc. a separate commercial license for this software code, the\n\n# following terms and conditions apply:\n\n#\n\n# This program is free software: you can redistribute it and/or modify\n\n# it under the terms of the GNU Affero Public License version 3 as\n\n# published by the Free Software Foundation.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU Affero Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Affero Public License\n\n# along with this program.  If not, see http://www.gnu.org/licenses.\n\n#\n\n# http://numenta.org/licenses/\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Creates ExternalProject for building yaml lib static library\n\n#\n\n# OUTPUT VARIABLES:\n\n#\n\n#   YAML_STATIC_LIB_TARGET: name of static library target that contains all\n\n#                           of yaml library objects.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for MERGE_STATIC_LIBRARIES\n",
        "Line" : 29,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : "# Output static library target for linking and dependencies\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# NOTE Yaml lib doesn't have an install target and leaves artifacts in build dir\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Path to static yaml installed by external project\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOTE Yaml provides no rule for install\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Wrap external project-generated static library in an `add_library` target.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "external/Zlib.cmake" : {
      "ObjectId" : "4a18de89fb66c553cd761d479ae63fd5cd022aff",
      "LastModified" : "2017-03-02T19:42:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Numenta Platform for Intelligent Computing (NuPIC)\n\n# Copyright (C) 2016, Numenta, Inc.  Unless you have purchased from\n\n# Numenta, Inc. a separate commercial license for this software code, the\n\n# following terms and conditions apply:\n\n#\n\n# This program is free software: you can redistribute it and/or modify\n\n# it under the terms of the GNU Affero Public License version 3 as\n\n# published by the Free Software Foundation.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU Affero Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Affero Public License\n\n# along with this program.  If not, see http://www.gnu.org/licenses.\n\n#\n\n# http://numenta.org/licenses/\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Creates ExternalProject for building z lib static library\n\n#\n\n# OUTPUT VARIABLES:\n\n#\n\n#   Z_STATIC_LIB_TARGET: name of static library target that contains all\n\n#                        of the z library objects.\n\n#   Z_STATIC_LIB_INC_DIR: directory of installed z lib headers\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for MERGE_STATIC_LIBRARIES\n",
        "Line" : 30,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : "# Output static library target for linking and dependencies\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Export directory of installed z lib headers to parent\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Path to static z lib installed by external project\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Wrap external project-generated static library in an `add_library` target.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "43b512f32691f9e531ca48a98a0990a661da751f",
      "LastModified" : "2018-09-27T03:35:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Numenta Platform for Intelligent Computing (NuPIC)\n\n# Copyright (C) 2013-2015, Numenta, Inc.  Unless you have purchased from\n\n# Numenta, Inc. a separate commercial license for this software code, the\n\n# following terms and conditions apply:\n\n#\n\n# This program is free software: you can redistribute it and/or modify\n\n# it under the terms of the GNU Affero Public License version 3 as\n\n# published by the Free Software Foundation.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU Affero Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Affero Public License\n\n# along with this program.  If not, see http://www.gnu.org/licenses.\n\n#\n\n# http://numenta.org/licenses/\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# toggle for cmake debug\n",
        "Line" : 26,
        "CharPositionInLine" : 32
      },
      "2" : {
        "Text" : "# if( POLICY CMP0046 )\n\n#   cmake_policy(VERSION 3.3)\n\n#   # The new policy for add_dependencies is to now error if a dependency target\n\n#   # is not found. The old policy didn't care and continued through configuration\n\n#   cmake_policy(SET CMP0046 OLD)\n\n# endif()\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if( POLICY CMP0054 )\n\n#   # The OLD behavior for this policy is to dereference variables and interpret\n\n#   # keywords even if they are quoted or bracketed. The NEW behavior is to not\n\n#   # dereference variables or interpret keywords that have been quoted or bracketed.\n\n#   cmake_policy(SET CMP0054 OLD)\n\n# endif()\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# NuPIC CMake options\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Set up compile flags for internal sources and for swig-generated sources\n\n#\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is for GCC 4.8.x\n\n# http://stackoverflow.com/questions/10660524/error-building-boost-1-49-0-with-gcc-4-7-0\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#\n\n# Compiler definitions specific to nupic.core code\n\n#\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Find Python Interp, min. v2.7\n\n# And NumPy core directory\n\n#\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Quick way to fixup directory paths to NumPy\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# Setup include paths\n\n#\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# Let CMake know where all of the external files are.\n\n#\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# Extract current git sha and record in nupic/Version.hpp\n\n#\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# Setup gtest\n\n#\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# Locate Python artifacts\n\n#\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# Python support\n\n#\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# List all .capnp files here. The C++ files will be generated and included\n\n# when compiling later on.\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Create custom command for generating C++ code from .capnp schema files.\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# Common system libraries for shared libraries and executables\n\n#\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\n\n# Setup nupic_core_solo static library, consisting of our own sources;\n\n#\n\n# this is an intermediate archive that will be merged with external static\n\n# libraries in a subsequent step to produce the nupic_core \"combined\" static\n\n# library.\n\n#\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# nupic_core_solo sources depend on headers installed by these external projects\n",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# TODO: Create a target that doesn't include the generated capnp schema files\n\n# since we don't want to run iwyu on them and iwyu can only be applied to\n\n# CMake targets (not source files directly).\n",
        "Line" : 390,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "#\n\n# Create the nupic_core \"combined\" static library by merging nupic_core_solo\n\n# with our external static libraries\n\n#\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# for MERGE_STATIC_LIBRARIES\n",
        "Line" : 403,
        "CharPositionInLine" : 31
      },
      "24" : {
        "Text" : "# Create a top-level library target for the combined static lib\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#\n\n# Build tests of the nupic_core \"combined\" static library\n\n#\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Common libs for test executables\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#\n\n# Setup test_cpp_region\n\n#\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\n\n# Setup test_py_region\n\n#\n",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#\n\n# Setup test_connections_performance\n\n#\n",
        "Line" : 467,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\n\n# Setup helloregion example\n\n#\n",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\n\n# Setup prototest example\n\n#\n",
        "Line" : 496,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\n\n# Setup HelloSP_TP example\n\n#\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\n\n# Setup gtests\n\n#\n",
        "Line" : 519,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#\n\n# tests_all just calls other targets\n\n#\n\n# TODO This doesn't seem to have any effect; it's probably because the DEPENDS\n\n# of add_custom_target must be files, not other high-level targets. If really\n\n# need to run these tests during build, then either the individual\n\n# add_custom_target of the individual test runners should be declared with the\n\n# ALL option, or tests_all target whould be declared without DEPENDS, and\n\n# add_dependencies should be used to set it's dependencies on the custom targets\n\n# of the inidividual test runners.\n",
        "Line" : 587,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#\n\n# Use SWIG to generate Python extensions.\n\n#\n",
        "Line" : 604,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Set the output location for the language modules that are created.\n",
        "Line" : 610,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Make sure the directory exists for the generated C++ files.\n",
        "Line" : 613,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# TODO ZZZ set COMPILE_FLAGS on swig targets\n",
        "Line" : 616,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# SWIG options from:\n\n# https://github.com/swig/swig/blob/master/Source/Modules/python.cxx#L111\n",
        "Line" : 618,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Tell swig which command-line options to use, allowing user to override\n",
        "Line" : 653,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Set up linker flags for python extension shared libraries\n",
        "Line" : 656,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# NOTE Non-Windows Python extensions shouldn't be linking against libpython;\n\n# symbols should be available automatically when python loads the extension.\n\n#\n",
        "Line" : 659,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Common dependencies for our python extensions for use with\n\n# SWIG_MODULE_name_EXTRA_DEPS\n\n# Make sure we don't execute the swig executable before it is built\n",
        "Line" : 666,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# NOTE Windows DLLs are shared executables with their own main; they require\n\n# all symbols to resolve at link time, so we have to add libpython for this\n\n# platform\n\n#\n\n# NOTE On Windows nupic.bindings builds we presently build self-contained\n\n# CAPNP_LITE, and Windows nupic/nupic.bindings presently has no\n\n# dependency on pycapnp.\n",
        "Line" : 671,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Add a custom command to the Swig target to prepend boilerplate to the\n\n# swig-generated python proxy module\n\n# ${CMAKE_SWIG_OUTDIR}/${MODULE_NAME}.py.\n\n#\n\n# :param MODULE_NAME: the custom command will be added to the target\n\n#   corresponding to this Swig module name.\n",
        "Line" : 691,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# Create a nupic.bindings swig extension target with the given Swig module\n\n# name. Also, if PY_EXTENSIONS_DIR is specified, request\n\n# installation of the extension library and python proxy module.\n\n#\n\n# The real target name is ${SWIG_MODULE_${MODULE_NAME}_REAL_NAME}.\n",
        "Line" : 715,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# Regenerate SWIG bindings if any headers change.\n",
        "Line" : 727,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "#\n\n# Create custom command for generating files from SWIG\n\n#\n",
        "Line" : 730,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# Note: swig_add_module outputs ${swig_generated_file_fullname}\n",
        "Line" : 734,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# Create an export map and update extra dependencies and link flags. This\n\n# export map prevents runtime-link preemption of statically-linked\n\n# libraries, such as -static-libstdc++, and limits the shared object's\n\n# symbol visibility to only the python extension's init function. NOTE Not\n\n# sure what, if anything, to do for MSVC at this time.\n",
        "Line" : 757,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# list(APPEND extra_deps \"${export_map_file}\")\n",
        "Line" : 772,
        "CharPositionInLine" : 6
      },
      "52" : {
        "Text" : "# If a path is specified, copy extensions files to proper location.\n",
        "Line" : 788,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# Algorithms\n",
        "Line" : 805,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Engine\n",
        "Line" : 808,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Math\n",
        "Line" : 811,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# NUPIC_BUILD_PYEXT_MODULES\n",
        "Line" : 814,
        "CharPositionInLine" : 8
      },
      "57" : {
        "Text" : "#\n\n# Install targets into CMAKE_INSTALL_PREFIX\n\n#\n",
        "Line" : 817,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Version.hpp is also used by the nupic.bindings release/deployment system\n",
        "Line" : 834,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "#\n\n# `make package` results in\n\n# nupic_core-${NUPIC_CORE_VERSION}-${PLATFORM}${BITNESS}${PLATFORM_SUFFIX}.tar.gz binary release\n\n#\n",
        "Line" : 906,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 60
    },
    "src/CombineUnixArchives.cmake" : {
      "ObjectId" : "17fad37a3aa6a796902de8bf3c7d9908593aa0ca",
      "LastModified" : "2017-05-03T05:13:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Numenta Platform for Intelligent Computing (NuPIC)\n\n# Copyright (C) 2016, Numenta, Inc.  Unless you have purchased from\n\n# Numenta, Inc. a separate commercial license for this software code, the\n\n# following terms and conditions apply:\n\n#\n\n# This program is free software: you can redistribute it and/or modify\n\n# it under the terms of the GNU Affero Public License version 3 as\n\n# published by the Free Software Foundation.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU Affero Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Affero Public License\n\n# along with this program.  If not, see http://www.gnu.org/licenses.\n\n#\n\n# http://numenta.org/licenses/\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Combine multiple Unix static libraries into a single static library.\n\n#\n\n# This script is intended to be invoked via `${CMAKE_COMMAND} -DLIB_TARGET= ...`.\n\n#\n\n# ARGS:\n\n#\n\n#   LIB_TARGET: target name of resulting static library (passed to add_library)\n\n#   TARGET_LOCATION: Full path to the target library\n\n#   SRC_LIB_LOCATIONS: List of source static library paths\n\n#   LIST_SEPARATOR: separator string that separates paths in\n\n#     SRC_LIB_LOCATIONS; NOTE with cmake 2.8.11+, caller could use the generator\n\n#     \"$<SEMICOLON>\" in SRC_LIB_LOCATIONS, and this arg would be unnecessary.\n\n#   BINARY_DIR: The value of ${CMAKE_CURRENT_BINARY_DIR} from caller\n\n#   CMAKE_AR: The value of ${CMAKE_AR} from caller\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Extract archives into individual directories to avoid object file collisions\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Create working directory for current source lib\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Extract objects from current source lib\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Accumulate objects\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Linux or OS X\n",
        "Line" : 79,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# i.e., Windows with MINGW toolchain\n",
        "Line" : 82,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Prepend source lib name to object name to help prevent collisions during\n\n# subsequent archive extractions. This helps guard against obj file\n\n# overwrites during object extraction in cases where the same object name\n\n# existed in two different source archives, but does not prevent the issue\n\n# if same-named objects exist in one archive.\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Use relative paths to work around too-long command failure when building\n\n# on Windows in AppVeyor\n",
        "Line" : 104,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Generate the target static library from all source objects\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Remove scratch directory\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "src/ConcatTwoFiles.cmake" : {
      "ObjectId" : "5eaa0356109ce1d67074c46b95423afb3bf9dda4",
      "LastModified" : "2017-03-02T19:42:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Numenta Platform for Intelligent Computing (NuPIC)\n\n# Copyright (C) 2016, Numenta, Inc.  Unless you have purchased from\n\n# Numenta, Inc. a separate commercial license for this software code, the\n\n# following terms and conditions apply:\n\n#\n\n# This program is free software: you can redistribute it and/or modify\n\n# it under the terms of the GNU Affero Public License version 3 as\n\n# published by the Free Software Foundation.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU Affero Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Affero Public License\n\n# along with this program.  If not, see http://www.gnu.org/licenses.\n\n#\n\n# http://numenta.org/licenses/\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Concatenates two files into a target file, overwriting target file if already\n\n# exists; either of the source files may be the same path as the target file.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This script is intended to be invoked via `${CMAKE_COMMAND} -DSRC_FILE_1= ...`.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ARGS:\n\n#\n\n#  SRC_FILE_1: path of first source file; may be same as TARGET_FILE.\n\n#  SRC_FILE_2: path of second source file; may be same as TARGET_FILE.\n\n#  TARGET_FILE: path of target file.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/NupicLibraryUtils.cmake" : {
      "ObjectId" : "62d47f11b50aec11a1fbfee14abad417723109da",
      "LastModified" : "2018-03-13T18:06:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Numenta Platform for Intelligent Computing (NuPIC)\n\n# Copyright (C) 2016, Numenta, Inc.  Unless you have purchased from\n\n# Numenta, Inc. a separate commercial license for this software code, the\n\n# following terms and conditions apply:\n\n#\n\n# This program is free software: you can redistribute it and/or modify\n\n# it under the terms of the GNU Affero Public License version 3 as\n\n# published by the Free Software Foundation.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU Affero Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Affero Public License\n\n# along with this program.  If not, see http://www.gnu.org/licenses.\n\n#\n\n# http://numenta.org/licenses/\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Utilities for manipulating libraries\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# function MERGE_STATIC_LIBRARIES\n\n#\n\n# Generate a new static library target that will merge the objects\n\n# of the given static libraries.\n\n#\n\n# :param LIB_TARGET: the name to use for the new library target to be\n\n#   passed verbatim as the target arg to `ADD_LIBRARY`\n\n#\n\n# :param STATIC_LIBS: a list of static libraries to be merge. The\n\n#   elements of this list may be a combination of archive file paths and\n\n#   static library target names (i.e., those defined here via\n\n#   add_library(xyz STATIC ...)).\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We need at least one source file for ADD_LIBRARY\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Define a static lib containing the dummy source file; we will subsequently\n\n# add a post-build custom step that will add the objects from the given static\n\n# libraries\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Assuming a path of an externally-generated static library\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Assuming a cmake static library target\n",
        "Line" : 68,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Collect its link interface\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Transfer link interface of source libraries to target\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Force relink whenever any of the source libraries change\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Merge the archives\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# pass source libs to lib.exe via STATIC_LIBRARY_FLAGS target property\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# UNIX OR MSYS OR MINGW: use post-build command to extract objects from\n\n# source libs and repack them for the target library\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# NOTE With cmake 2.8.11+, we could use \"$<SEMICOLON>\", but default Travis\n\n# environment is configured with cmake 2.8.7\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 14
    }
  },
  "FileTypes" : {
    "CMAKE" : 15,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 4689
}