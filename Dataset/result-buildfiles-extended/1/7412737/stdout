{
  "Repository" : "7412737",
  "Revision" : "HEAD",
  "ObjectId" : "c610905537401aea6b19ff7aad4b2c6e00bc5770",
  "CommitTime" : "2019-04-19T05:23:14Z",
  "Files" : {
    "dev/AVR/libraries/VirtualWireModified/Makefile" : {
      "ObjectId" : "fb53d5c385c412a92707973f34c278dbc2988111",
      "LastModified" : "2016-02-20T00:34:01Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile\n\n#\n\n# Makefile for the Arduino VirtualWire project\n\n#\n\n# Author: Mike McCauley (mikem@airspayce.com)\n\n# Copyright (C) 2011 Mike McCauley\n\n# $Id: Makefile,v 1.1 2013/01/14 06:49:29 mikem Exp mikem $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dont forget to also change the version at the top of RF22.h:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dev/AVR/libraries/z_third_party_Adafruit-GFX-Library/fontconvert/Makefile" : {
      "ObjectId" : "47f5a0e15a5a1587cd379507a1b5cfc8bbd9299f",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "dev/AVR/sketches/TinyReflowController/TINY-REFLOW-CONTROLLER.pro" : {
      "ObjectId" : "a6c290fffeaf46baac48ae1c4ff1378fa60b5ed4",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/AVR/util/third-party/MicroAPRS/Makefile" : {
      "ObjectId" : "b09526d01d96106c0423c0b1b0e30525fe05d835",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# AVR Sample makefile written by Eric B. Weddington, JÃ¶rg Wunsch, et al.\n\n# Modified (bringing often-changed options to the top) by Elliot Williams\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make all = Make software and program\n\n# make clean = Clean out built project files.\n\n# make program = Download the hex file to the device, using avrdude.  Please\n\n#                customize the avrdude settings below first!\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Microcontroller Type\n\n#MCU = atmega1284p\n\n#MCU = atmega644p\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Programming hardware: type avrdude -c ?\n\n# to get a full listing.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# not really needed for usb \n",
        "Line" : 22,
        "CharPositionInLine" : 27
      },
      "6" : {
        "Text" : "#AVRDUDE_PORT = /dev/parport0           # linux\n\n# AVRDUDE_PORT = lpt1\t\t       # windows\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "############# Don't need to change below here for most purposes  (Elliot)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Optimization level, can be [0, 1, 2, 3, s]. 0 turns off optimization.\n\n# (Note: 3 is not always the best optimization level. See avr-libc FAQ.)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Output format. (can be srec, ihex, binary)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n#SRC = $(TARGET).c\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# If there is more than one source file, append them above, or modify and\n\n# uncomment the following:\n\n#SRC += foo.c bar.c\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# You can also wrap lines by appending a backslash to the end of the line:\n\n#SRC += baz.c \\\n#xyzzy.c\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# List Assembler source files here.\n\n# Make them always end in a capital .S.  Files ending in a lowercase .s\n\n# will not be considered source files but generated files (assembler\n\n# output from the compiler), and will be deleted upon \"make clean\"!\n\n# Even though the DOS/Win* filesystem matches both .s and .S the same,\n\n# it will preserve the spelling of the filenames, and gcc itself does\n\n# care about how the name is spelled on its command-line.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#     Each directory must be seperated by a space.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Optional compiler flags.\n\n#  -g:        generate debugging information (for GDB, or for COFF conversion)\n\n#  -O*:       optimization level\n\n#  -f...:     tuning, see gcc manual and avr-libc documentation\n\n#  -Wall...:  warning level\n\n#  -Wa,...:   tell GCC to pass this to the assembler.\n\n#    -ahlms:  create assembler listing\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Set a \"language standard\" compiler flag.\n\n#   Unremark just one line below to set the language standard to use.\n\n#   gnu99 = C99 + GNU extensions. See GCC manual for more information.\n\n#CFLAGS += -std=c89\n\n#CFLAGS += -std=gnu89\n\n#CFLAGS += -std=c99\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Optional assembler flags.\n\n#  -Wa,...:   tell GCC to pass this to the assembler.\n\n#  -ahlms:    create listing\n\n#  -gstabs:   have the assembler create line number information; note that\n\n#             for use in COFF files, additional information about filenames\n\n#             and function names needs to be present in the assembler source\n\n#             files -- see avr-libc docs [FIXME: not yet described there]\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Optional linker flags.\n\n#  -Wl,...:   tell GCC to pass this to linker.\n\n#  -Map:      create map file\n\n#  --cref:    add cross reference to  map file\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Additional libraries\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Minimalistic printf version\n\n#LDFLAGS += -Wl,-u,vfprintf -lprintf_min\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Floating point printf version (requires -lm below)\n\n#LDFLAGS += -Wl,-u,vfprintf -lprintf_flt\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# -lm = math library\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Programming support using avrdude. Settings and variables.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#AVRDUDE_WRITE_EEPROM = -U eeprom:w:$(TARGET).eep\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Uncomment the following if you want avrdude's erase cycle counter.\n\n# Note that this counter needs to be initialized first using -Yn,\n\n# see avrdude manual.\n\n#AVRDUDE_ERASE += -y\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Uncomment the following if you do /not/ wish a verification to be\n\n# performed after programming the device.\n\n#AVRDUDE_FLAGS += -V\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Increase verbosity level.  Please use this when submitting bug\n\n# reports about avrdude. See <http://savannah.nongnu.org/projects/avrdude> \n\n# to submit bug reports.\n\n#AVRDUDE_FLAGS += -v -v\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#Run while cable attached or don't\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#keep chip disabled while cable attached\n",
        "Line" : 142,
        "CharPositionInLine" : 26
      },
      "30" : {
        "Text" : "#AVRDUDE_FLAGS += -E noreset\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#AVRDUDE_WRITE_FLASH = -U lfuse:w:0x04:m #run with 8 Mhz clock\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#AVRDUDE_WRITE_FLASH = -U lfuse:w:0x21:m #run with 1 Mhz clock #default clock mode\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#AVRDUDE_WRITE_FLASH = -U lfuse:w:0x01:m #run with 1 Mhz clock no start up time\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# ---------------------------------------------------------------------------\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Define programs and commands.\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Programming support using avrdude.\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Define Messages\n\n# English\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Define all object files.\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Define all listing files.\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Combine all necessary flags and optional flags.\n\n# Add target processor to flags.\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Default target: make program!\n\n#all: begin gccversion sizebefore $(TARGET).elf $(TARGET).hex $(TARGET).eep \\\n#\t$(TARGET).lss $(TARGET).sym sizeafter finished end\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#\t$(AVRDUDE) $(AVRDUDE_FLAGS) $(AVRDUDE_WRITE_FLASH) $(AVRDUDE_WRITE_EEPROM)\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Eye candy.\n\n# AVR Studio 3.x does not check make's exit code but relies on\n\n# the following magic strings to be generated by the compile job.\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Display size of file.\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Display compiler version information.\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Convert ELF to COFF for use in debugging / simulating in\n\n# AVR Studio or VMLAB.\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\t@echo\n\n#\t@echo $(MSG_COFF) $(TARGET).cof\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#\t@echo\n\n#\t@echo $(MSG_EXTENDED_COFF) $(TARGET).cof\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Program the device.  \n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Create final output files (.hex, .eep) from ELF output file.\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#\t@echo\n\n#\t@echo $(MSG_FLASH) $@\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#\t@echo\n\n#\t@echo $(MSG_EEPROM) $@\n\n#\t@echo Not generating any EEPROM images\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Create extended listing file from ELF output file.\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "#\t@echo\n\n#\t@echo $(MSG_EXTENDED_LISTING) $@\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Create a symbol table from ELF output file.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#\t@echo\n\n#\t@echo $(MSG_SYMBOL_TABLE) $@\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Link: create ELF output file from object files.\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Compile: create object files from C source files.\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Compile: create assembler files from C source files.\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Assemble: create object files from assembler source files.\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Target: clean project.\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Automatically generate C source code dependencies. \n\n# (Code originally taken from the GNU make user manual and modified \n\n# (See README.txt Credits).)\n\n#\n\n# Note that this will work with sh (bash) and sed that is shipped with WinAVR\n\n# (see the SHELL variable defined above).\n\n# This may not work with other shells or other seds.\n\n#\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Remove the '-' if you want to see the dependency files generated.\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Listing of phony targets.\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 65,
      "Errorlog" : "line 369:25 token recognition error at: '\\1'\nline 369:30 token recognition error at: '\\1'\n"
    },
    "dev/Eagle/projects/HABTracker1/HABTracker1.pro" : {
      "ObjectId" : "fd0b9180c42d4661d22dfce4977aaa1b92af0232",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/Eagle/projects/HeartBlinkerSimplified/HeartBlinkerSimplified.pro" : {
      "ObjectId" : "bc14465e807a75205a2f17fc67fcab49439f2995",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/Eagle/projects/PrototypeRadioBox1/PrototypeRadioBox1.pro" : {
      "ObjectId" : "de4ec9080d587ec7f42eff1cbe618c753e13ea90",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/KiCad/projects/BreakoutCAP1188/BreakoutCAP1188.pro" : {
      "ObjectId" : "781450c6830f7270ebc844a2001dd59725df6c52",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/KiCad/projects/BreakoutLTC3105/BreakoutLTC3105.pro" : {
      "ObjectId" : "152769cb7209ca4e1fc17e8154dad5ded6b9d8e4",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/KiCad/projects/BreakoutSI4463/BreakoutSI4463.pro" : {
      "ObjectId" : "2f3ab3aed6e777fcfd98b13c887b0caff1251e5b",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/KiCad/projects/BreakoutSI4463PRO/BreakoutSI4463PRO.pro" : {
      "ObjectId" : "64e8da08df6a0ef21d911900b052cbd98a2cf028",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/KiCad/projects/BreakoutTPS6120X/BreakoutTPS6120X.pro" : {
      "ObjectId" : "c70364979fd181409e4b6002ea91952865a79ea3",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/KiCad/projects/BreakoutTPS6120XWithLayout/BreakoutTPS6120XWithLayout.pro" : {
      "ObjectId" : "63b5912f11a8788dc8e334ed5af6dd75f1f46695",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/KiCad/projects/BreakoutUblox/BreakoutUblox.pro" : {
      "ObjectId" : "bdd25ea280f2b54be58bffdda67c4c834396e760",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/KiCad/projects/DemoBoard1/DemoBoard1.pro" : {
      "ObjectId" : "e9e26be876f3ab8a24df51088b7f6c8fdd44fb9d",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/KiCad/projects/EvilEye/EvilEye.pro" : {
      "ObjectId" : "6598830647baf3fd8015e370aad177b8649486e5",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/KiCad/projects/EvilEye/rescue-backup/EvilEye-2018-10-15-18-19-47.pro" : {
      "ObjectId" : "c67239c61fbf8e5ec4b7caba95030b9c64d69225",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/KiCad/projects/EvilEye/rescue-backup/EvilEye-2018-10-15-21-43-13.pro" : {
      "ObjectId" : "9d073c34a00e8acb709ab02316ab1edb18437601",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/KiCad/projects/ModuleSolarToStorageLTC3105/ModuleSolarToStorageLTC3105.pro" : {
      "ObjectId" : "84150f42e7a8227113b11bbc8d9dd60fff2c5895",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/KiCad/projects/ModuleSolarToStorageTunableLTC3105/ModuleSolarToStorageTunableLTC3105.pro" : {
      "ObjectId" : "0be2c7943708d601862c884f71d1ff7964700dd8",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/KiCad/projects/PicoTracker1/PicoTracker1.pro" : {
      "ObjectId" : "aebcb1fdae1e2e3aa8bce85c4a646a5aa575a5f4",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/KiCad/projects/PicoTracker1Rev2/PicoTracker1Rev2.pro" : {
      "ObjectId" : "aebcb1fdae1e2e3aa8bce85c4a646a5aa575a5f4",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/KiCad/projects/PicoTrackerWSPR1/PicoTrackerWSPR1.pro" : {
      "ObjectId" : "d5a26bc6eeedecdd8268d81b41e2e7b1ef753c80",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/KiCad/projects/PicoTrackerWSPR1Rev2/PicoTrackerWSPR1Rev2.pro" : {
      "ObjectId" : "386b699c52a23b09d5c3d6df32ada84fa695a83e",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/KiCad/projects/PicoTrackerWSPR1Rev3/PicoTrackerWSPR1Rev3.pro" : {
      "ObjectId" : "de49631deaad9b7127c1337f29fb135003a2775a",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/KiCad/template/MyTemplate/MyTemplate.pro" : {
      "ObjectId" : "152769cb7209ca4e1fc17e8154dad5ded6b9d8e4",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dev/Web/chat/install/libs/setuptools-12.0.4/docs/Makefile" : {
      "ObjectId" : "30bf10a930f084877b9b19d035651687e5a875de",
      "LastModified" : "2019-04-03T23:49:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "QMAKE" : 23,
    "MAKEFILE" : 4
  },
  "ElapsedTime" : 2579
}