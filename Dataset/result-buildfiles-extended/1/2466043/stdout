{
  "Repository" : "2466043",
  "Revision" : "HEAD",
  "ObjectId" : "2681812ff8d25c9f0f4b7cbedac158cfca93e015",
  "CommitTime" : "2018-05-08T21:58:51Z",
  "Files" : {
    "pro/FReD.pro" : {
      "ObjectId" : "2faf5176e3955817c12d564b22af187ba886d0a4",
      "LastModified" : "2015-01-21T22:20:08Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "pro/angleWave.pro" : {
      "ObjectId" : "5ba42e72f0709f802fb0efe08d1cc9bb2307d632",
      "LastModified" : "2015-01-21T22:20:08Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "pro/annulize.pro" : {
      "ObjectId" : "5d4bedd49ed18826d7c76cbe335a3bad99ec13b8",
      "LastModified" : "2015-01-21T22:20:08Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "pro/appetize.pro" : {
      "ObjectId" : "c278aeff4dad92db58683c30be1c40dba5ce9d50",
      "LastModified" : "2015-01-21T22:20:08Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "pro/bc_continuum.pro" : {
      "ObjectId" : "d3612e15ee3e7cca3621d8c57b444f991ba77ccb",
      "LastModified" : "2015-08-31T22:05:15Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "pro/bc_continuum_alldust.pro" : {
      "ObjectId" : "d3210808a4ed1865972b2c07c74aaac96d47f02d",
      "LastModified" : "2016-01-08T22:49:22Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "pro/bc_continuum_allz.pro" : {
      "ObjectId" : "6d84dcb9d9e46fe8ffc5a2b4554aa15bc6505d42",
      "LastModified" : "2015-08-31T22:05:15Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "pro/bc_continuum_allz2.pro" : {
      "ObjectId" : "5ba5d4c2b29a0f9e0fed86926186d1cfbab4ab88",
      "LastModified" : "2017-05-08T14:05:54Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "pro/bc_continuum_allz2_vel.pro" : {
      "ObjectId" : "c56717ea6e27690892077bd216971a57c08bb4d1",
      "LastModified" : "2016-01-27T22:52:15Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "pro/bc_continuum_sky.pro" : {
      "ObjectId" : "c5dc41edd4c7ad2423783d0fdf71fb51b445e1b5",
      "LastModified" : "2016-01-08T22:49:22Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "pro/bc_continuum_tau.pro" : {
      "ObjectId" : "fb9331bcc58c19ddb8f7d4f54ea9970e38ae6a55",
      "LastModified" : "2016-06-24T20:03:07Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "pro/bc_dfk_models.pro" : {
      "ObjectId" : "048d917ef19f51ed1783756141ff4c0e209e56d1",
      "LastModified" : "2018-05-08T21:52:41Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0,
      "Errorlog" : "line 109:54 token recognition error at: '\",gg,$\\n                                      format='(F7.3,A6,F7.3,A10,I1,A10,I1)'), /norm\\n\\n            hline, median(spec[nwl])\\n            vline, m.wave[nwl[0]]\\n            vline, m.wave[nwl[-1]]\\n         endif\\n         \\n         print, ff, gg-1 + zz*numdfk\\n         print, size(m.age, /dimensions)\\n         m.age[ff, gg-1 + zz*numdfk] = dfkage\\n         m.norm[ff, gg-1 + zz*numdfk] = median(spec[nwl])\\n         m.Z[ff,gg-1 + zz*numdfk] = Z[zz]\\n         m.flux[ff,*,gg-1 + zz*numdfk] = spec / median(spec[nwl])\\n         \\n      endfor\\n   endfor\\nendfor\\nmwrfits, m, output, /create\\nif keyword_set(plot) then dfpsclose\\n\\nend\\n\u0000'\n"
    },
    "pro/bc_mcombine.pro" : {
      "ObjectId" : "1800eae5d20919a98050476dd5551e6dd7c1f793",
      "LastModified" : "2015-08-31T22:05:15Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# (a[1:*]*1000.)\n",
        "Line" : 34,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 1
    },
    "pro/bc_mcombine_alldust.pro" : {
      "ObjectId" : "04948bf4a7eb42c5afc42f73e53579cbf83d8399",
      "LastModified" : "2016-01-08T22:49:22Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# (-1*a[1:10]))\n",
        "Line" : 42,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : "# (a[11:*] * light_factor)\n",
        "Line" : 46,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 2
    },
    "pro/bc_mcombine_allz.pro" : {
      "ObjectId" : "e5eb6b271fdba71b1b520f58c77b24199277be99",
      "LastModified" : "2015-08-31T22:05:15Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# (a[11:*] * 1.)\n",
        "Line" : 45,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 1
    },
    "pro/bc_mcombine_allz2.pro" : {
      "ObjectId" : "d1b84e05efcfa05bbe6f64cafc9e82f69db8dfce",
      "LastModified" : "2016-03-01T19:42:44Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# (a[2:*] * light_factor)\n",
        "Line" : 35,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 1
    },
    "pro/bc_mcombine_allz2_vel.pro" : {
      "ObjectId" : "16afb88edc20b15f3c979260b3c0457e9f8d2ec8",
      "LastModified" : "2016-03-01T19:42:44Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "pro/bc_mcombine_sky.pro" : {
      "ObjectId" : "c713f381e134af512d4211a79b35f424a7c43a72",
      "LastModified" : "2016-03-01T19:42:44Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# (a[3:*] * 1000.)\n",
        "Line" : 34,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 1
    },
    "pro/bc_plot.pro" : {
      "ObjectId" : "81cb17259cc2fbff90b19035a27555f262025bfa",
      "LastModified" : "2016-03-01T19:42:44Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "pro/bc_simple_models_allz.pro" : {
      "ObjectId" : "3555ec81631c2601de6b74c191ec9f8b444e65a3",
      "LastModified" : "2016-03-01T19:42:44Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0,
      "Errorlog" : "line 14:22 token recognition error at: '\"153B)+'!X'\\n; Ages in Gyr\\n\\nif n_elements(age) eq 0 then $\\n   age=[0.005, 0.025, 0.100, 0.286, 0.640, 0.904, 1.434, 2.500, 5.000, 10.000]\\n\\nisedpath = '/usr/users/tremonti/models/Padova1994/chabrier/'\\n\\n; Set up log-lambda wavelength grid\\nnpix = round((alog10(8500) - alog10(3400)) / 1e-4)\\nlogwl = findgen(npix) * 1e-4 + alog10(3400)\\n\\ntmp = im_read_bc03(isedpath=isedpath, metallicity=0, age=age,$\\n                   minwave=3400, maxwave=8500, bc03_extras=ssp_extras)\\n\\n; Define output structure\\nm = {wave: 10.0^logwl, flux: fltarr(npix, n_elements(age), 6), age: tmp.age, $\\n     id: string('All metallicities, Chabrier IMF',format='(A4,I1,A14)'), $\\n     norm: fltarr(n_elements(age), 6), m_remaining: fltarr(n_elements(age),6)}\\n\\n; normalization wavelengths\\nnwl = where(m.wave gt 5450 and m.wave lt 5550)\\n\\nfor zz = 0, 5 do begin\\n   bc03 = im_read_bc03(isedpath=isedpath, metallicity=zz, age=age,$\\n                       minwave=3400, maxwave=8500, bc03_extras=ssp_extras)\\n\\n; Interpolate to log-lambda & normalize\\n   for ii = 0, n_elements(age) - 1 do begin\\n      linterp, bc03.wave, bc03.flux[*,ii], m.wave, spec\\n      \\n      print, min(spec), max(spec), mean(spec), age[ii]\\n      plot, m.wave, spec, xtitle='Wavelength ( '+angstrom+' )', $\\n            ytitle = string('F!D!X',lambda,'!N (L',sunsymbol(),$\\n                            '/M',sunsymbol(),' ',angstrom,')')\\n\\n      xyouts, 0.5, 0.98, string(age[ii],' Gyr',format='(F7.3,A4)'), /norm\\n      hline, median(spec[nwl])\\n      vline, m.wave[nwl[0]]\\n      vline, m.wave[nwl[-1]]\\n      m.norm[ii,zz] = median(spec[nwl])\\n      spec = spec / median(spec[nwl]) ; normalize at 5500 A\\n      m.flux[*,ii,zz] = spec\\n      junk = min(abs(bc03.age/1e9 - age[ii]), idx)\\n      m.m_remaining[ii,zz] = ssp_extras[idx].m_\\n   endfor\\nendfor\\n\\nprint, m.norm\\nmwrfits, m, output, /create\\nif keyword_set(plot) then dfpsclose\\n\\nend\\n\u0000'\n"
    },
    "pro/bc_simple_models_allz2.pro" : {
      "ObjectId" : "baba9962c487e2ecd41d7c94518ef98d6894be1b",
      "LastModified" : "2016-03-01T19:42:44Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0,
      "Errorlog" : "line 14:22 token recognition error at: '\"153B)+'!X'\\n; Ages in Gyr\\n\\nZ_arr = [0.0001, 0.0004, 0.004, 0.008, 0.02, 0.05]/0.02\\n\\nif n_elements(age) eq 0 then $\\n   age=[0.005, 0.025, 0.100, 0.286, 0.640, 0.904, 1.434, 2.500, 5.000, 10.000]\\n\\nisedpath = '/usr/users/tremonti/models/Padova1994/chabrier/'\\n\\n; Set up log-lambda wavelength grid\\nnpix = round((alog10(8500) - alog10(3400)) / 1e-4)\\nlogwl = findgen(npix) * 1e-4 + alog10(3400)\\n\\ntmp = im_read_bc03(isedpath=isedpath, metallicity=0, age=age,$\\n                   minwave=3400, maxwave=8500, bc03_extras=ssp_extras)\\n\\n; Define output structure\\nm = {wave: 10.0^logwl, flux: fltarr(npix, n_elements(age) * 6), $\\n     age: [age,age,age,age,age,age]*1e9, Z: fltarr(n_elements(age) * 6), $\\n     id: string('All metallicities, Chabrier IMF',format='(A4,I1,A14)'), $\\n     norm: fltarr(n_elements(age) * 6), m_remaining: fltarr(n_elements(age)*6)}\\n\\n; normalization wavelengths\\nnwl = where(m.wave gt 5450 and m.wave lt 5550)\\n\\nfor zz = 0, 5 do begin\\n   bc03 = im_read_bc03(isedpath=isedpath, metallicity=zz, age=age,$\\n                       minwave=3400, maxwave=8500, bc03_extras=ssp_extras)\\n\\n; Interpolate to log-lambda & normalize\\n   for ii = 0, n_elements(age) - 1 do begin\\n      linterp, bc03.wave, bc03.flux[*,ii], m.wave, spec\\n      \\n      print, min(spec), max(spec), mean(spec), age[ii]\\n      plot, m.wave, spec, xtitle='Wavelength ( '+angstrom+' )', $\\n            ytitle = string('F!D!X',lambda,'!N (L',sunsymbol(),$\\n                            '/M',sunsymbol(),' ',angstrom,')')\\n\\n      xyouts, 0.5, 0.98, string(age[ii],' Gyr, ', Z_arr[zz], ' Z/Z_sol',$\\n                                format='(F7.3,A6,F7.3,A8)'), /norm\\n      hline, median(spec[nwl])\\n      vline, m.wave[nwl[0]]\\n      vline, m.wave[nwl[-1]]\\n      m.norm[ii+(n_elements(age) * zz)] = median(spec[nwl])\\n      spec = spec / median(spec[nwl]) ; normalize at 5500 A\\n      m.flux[*,ii+(n_elements(age) * zz)] = spec\\n      m.Z[ii + (n_elements(age) * zz)] = Z_arr[zz]\\n      junk = min(abs(bc03.age/1e9 - age[ii]), idx)\\n      m.m_remaining[ii+(n_elements(age) * zz)] = ssp_extras[idx].m_\\n   endfor\\nendfor\\n\\nprint, m.norm\\nmwrfits, m, output, /create\\nif keyword_set(plot) then dfpsclose\\n\\nend\\n\u0000'\n"
    },
    "pro/bc_simple_models_allz2_vardisp.pro" : {
      "ObjectId" : "d94b250dc474ee18aa384bcf1456872733533be4",
      "LastModified" : "2016-03-01T19:42:44Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0,
      "Errorlog" : "line 106:85 token recognition error at: '\",$\\n                                   format='(F7.3,A6,F7.3,A10,I1,A2)'), /norm\\n         hline, median(spec[nwl])\\n         vline, m.wave[nwl[0]]\\n         vline, m.wave[nwl[-1]]\\n         m.norm[ff, ii+(n_elements(age) * zz)] = median(spec[nwl])\\n         spec = spec / median(spec[nwl]) ; normalize at 5500 A\\n         m.flux[ff,*,ii+(n_elements(age) * zz)] = spec\\n         m.Z[ff, ii + (n_elements(age) * zz)] = Z_arr[zz]\\n         junk = min(abs(bc03.age/1e9 - age[ii]), idx)\\n         m.m_remaining[ff, ii+(n_elements(age) * zz)] = ssp_extras[idx].m_\\n      endfor\\n   endfor\\nendfor\\nprint, m.norm\\nmwrfits, m, output, /create\\nif keyword_set(plot) then dfpsclose\\n\\nend\\n\u0000'\n"
    },
    "pro/bc_simple_models_dfk.pro" : {
      "ObjectId" : "4b4dda0e25acbc8e4c60141d2f26d68239d1f9c6",
      "LastModified" : "2016-03-01T19:42:44Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0,
      "Errorlog" : "line 103:85 token recognition error at: '\",$\\n                                   format='(F7.3,A6,F7.3,A10,I1,A2)'), /norm\\n         hline, median(spec[nwl])\\n         vline, m.wave[nwl[0]]\\n         vline, m.wave[nwl[-1]]\\n         m.norm[ff, ii+(n_elements(age) * zz)] = median(spec[nwl])\\n         spec = spec / median(spec[nwl]) ; normalize at 5500 A\\n         m.flux[ff,*,ii+(n_elements(age) * zz)] = spec\\n         m.Z[ff, ii + (n_elements(age) * zz)] = Z_arr[zz]\\n         \\n      endfor\\n   endfor\\nendfor\\nprint, m.norm\\nmwrfits, m, output, /create\\nif keyword_set(plot) then dfpsclose\\n\\nend\\n\u0000'\n"
    },
    "pro/bc_simple_models_sky.pro" : {
      "ObjectId" : "a477d1e0113d9c642ee22d8baac4b7dabb821161",
      "LastModified" : "2016-03-01T19:42:44Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0,
      "Errorlog" : "line 16:22 token recognition error at: '\"153B)+'!X'\\n; Ages in Gyr\\n\\nif n_elements(age) eq 0 then $\\n   age=[0.005, 0.025, 0.100, 0.286, 0.640, 0.904, 1.434, 2.500, 5.000, 10.000]\\n\\nisedpath = '/usr/users/tremonti/models/Padova1994/chabrier/'\\n\\nbc03 = im_read_bc03(isedpath=isedpath, metallicity=metallicity, age=age,$\\n                    minwave=3400, maxwave=8500, bc03_extras=ssp_extras)\\n\\n; Set up log-lambda wavelength grid\\nnpix = round((alog10(8500) - alog10(3400)) / 1e-4)\\nlogwl = findgen(npix) * 1e-4 + alog10(3400)\\n\\n; Define output structure\\nm = {wave: 10.0^logwl, flux: fltarr(npix, n_elements(age)+1), age: bc03.age, $\\n     id: string('Z = ',metallicity,', Chabrier IMF',format='(A4,I1,A14)'), $\\n     skynorm: 0.0D, norm: fltarr(n_elements(age)), m_remaining: fltarr(n_elements(age))}\\n\\n; normalization wavelengths\\nnwl = where(m.wave gt 5450 and m.wave lt 5550)\\n\\n; Read in the sky spectrum\\nsdata = mrdfits(skyfile,0,shead)\\nfor ss = 0, n_elements(shead) - 1 do begin\\n   if strpos(shead[ss], 'CDELT1') GE 0 then begin \\n      cdelt = float((strsplit(shead[ss],'=',/extract))[1])\\n      print, 'FOUND CDELT1'\\n   endif\\n   if strpos(shead[ss], 'CRVAL1') GE 0 then begin\\n      crval = float((strsplit(shead[ss],'=',/extract))[1])\\n      print, 'FOUND CRVAL'\\n   endif\\nendfor\\n\\nswave = findgen(n_elements(sdata))*cdelt + crval\\nlinterp, swave, sdata, m.wave, sspec\\nplot, m.wave, sspec, xtitle='Wavelength ( '+angstrom+' )', $\\n      ytitle = string('F!D!X',lambda,'!N (L',sunsymbol(),$\\n                      '/M',sunsymbol(),' ',angstrom,')')\\nxyouts, 0.5, 0.98, 'SKY', /norm\\n\\nhline, median(sspec[nwl])\\nvline, m.wave[nwl[0]]\\nvline, m.wave[nwl[-1]]\\nm.skynorm = median(sspec[nwl])\\nsspec = sspec / m.skynorm\\nm.flux[*,0] = sspec\\n\\n\\n; Interpolate to log-lambda & normalize\\nfor ii = 0, n_elements(age) - 1 do begin\\n   linterp, bc03.wave, bc03.flux[*,ii], m.wave, spec\\n   \\n   print, min(spec), max(spec), mean(spec), age[ii]\\n   plot, m.wave, spec, xtitle='Wavelength ( '+angstrom+' )', $\\n         ytitle = string('F!D!X',lambda,'!N (L',sunsymbol(),$\\n                         '/M',sunsymbol(),' ',angstrom,')')\\n\\n   xyouts, 0.5, 0.98, string(age[ii],' Gyr',format='(F7.3,A4)'), /norm\\n   hline, median(spec[nwl])\\n   vline, m.wave[nwl[0]]\\n   vline, m.wave[nwl[-1]]\\n   m.norm[ii] = median(spec[nwl])\\n   spec = spec / median(spec[nwl]) ; normalize at 5500 A\\n   m.flux[*,ii+1] = spec\\n   junk = min(abs(bc03.age/1e9 - age[ii]), idx)\\n   m.m_remaining[ii] = ssp_extras[idx].m_\\nendfor\\n\\nprint, m.norm\\nmwrfits, m, output, /create\\nif keyword_set(plot) then dfpsclose\\n\\nend\\n\u0000'\n"
    },
    "pro/bc_tau_combine.pro" : {
      "ObjectId" : "5e4150555e088d8ae256f9328839b65fad0fba63",
      "LastModified" : "2016-03-01T19:42:44Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# mass\n",
        "Line" : 61,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 1
    },
    "pro/brightSurf.pro" : {
      "ObjectId" : "1b7a75f4c97cd987a0f6260bfcde89e195b7015a",
      "LastModified" : "2016-03-01T19:42:44Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "pro/centroid.pro" : {
      "ObjectId" : "b23e871b3d8d97bac1d52095dc8bea2244fee3ac",
      "LastModified" : "2016-03-01T19:42:44Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "pro/do_simple.pro" : {
      "ObjectId" : "f67bc04dbc017a90117268344267fec0954fedde",
      "LastModified" : "2016-03-01T19:42:44Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Generated on ',systime()\n",
        "Line" : 70,
        "CharPositionInLine" : 14
      },
      "1" : {
        "Text" : "# Fiber Num',colarr,'MMWA [Gyr]','MLWA [Gyr]',$\n",
        "Line" : 74,
        "CharPositionInLine" : 14
      },
      "2" : {
        "Text" : "# Fiber Num',colarr,'MMWA [Gyr]','MLWA [Gyr]',$\n",
        "Line" : 85,
        "CharPositionInLine" : 21
      },
      "3" : {
        "Text" : "#'\n",
        "Line" : 88,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 4
    },
    "pro/do_simple_alldust.pro" : {
      "ObjectId" : "d3d61dd927885a2a60c551a39a11787f41ce5124",
      "LastModified" : "2016-03-01T19:42:44Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Generated on ',systime()\n",
        "Line" : 71,
        "CharPositionInLine" : 14
      },
      "1" : {
        "Text" : "# Fiber Num',colarr,tauarr,'MMWA [Gyr]','MLWA [Gyr]',$\n",
        "Line" : 75,
        "CharPositionInLine" : 14
      },
      "2" : {
        "Text" : "#'\n",
        "Line" : 78,
        "CharPositionInLine" : 14
      },
      "3" : {
        "Text" : "# Fiber Num',colarr,'MMWA [Gyr]','MLWA [Gyr]',$\n",
        "Line" : 87,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : "#'\n",
        "Line" : 90,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 5
    },
    "pro/do_simple_allz.pro" : {
      "ObjectId" : "c327d20ef610947479eee5685db903ce583b2ea4",
      "LastModified" : "2016-03-01T19:42:44Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Generated on ',systime()\n",
        "Line" : 71,
        "CharPositionInLine" : 14
      },
      "1" : {
        "Text" : "# Fiber Num',colarr,Zarr,'MMWA [Gyr]','MLWA [Gyr]',$\n",
        "Line" : 75,
        "CharPositionInLine" : 14
      },
      "2" : {
        "Text" : "#'\n",
        "Line" : 78,
        "CharPositionInLine" : 14
      },
      "3" : {
        "Text" : "# Fiber Num',colarr,'MMWA [Gyr]','MLWA [Gyr]',$\n",
        "Line" : 87,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : "#'\n",
        "Line" : 90,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 5
    },
    "pro/do_simple_allz2.pro" : {
      "ObjectId" : "06076b0a29d21b1cc99546ea99a68e07aaddbcec",
      "LastModified" : "2017-05-08T14:05:54Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Generated on ',systime()\n",
        "Line" : 95,
        "CharPositionInLine" : 14
      },
      "1" : {
        "Text" : "# Fiber Num',colarr,'MMWA [Gyr]','MLWA [Gyr]',$\n",
        "Line" : 99,
        "CharPositionInLine" : 14
      },
      "2" : {
        "Text" : "#'\n",
        "Line" : 103,
        "CharPositionInLine" : 14
      },
      "3" : {
        "Text" : "# Fiber Num',colarr,'MMWA [Gyr]','MLWA [Gyr]',$\n",
        "Line" : 167,
        "CharPositionInLine" : 24
      },
      "4" : {
        "Text" : "#'\n",
        "Line" : 171,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 5
    },
    "pro/do_simple_allz2_vel.pro" : {
      "ObjectId" : "4688656343fcab49dae6bcc2c7aa3385c53aaa37",
      "LastModified" : "2017-05-08T14:05:54Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Fiber Num','V_sys','S/N','Chisq',$\n",
        "Line" : 80,
        "CharPositionInLine" : 14
      },
      "1" : {
        "Text" : "#'\n",
        "Line" : 83,
        "CharPositionInLine" : 14
      },
      "2" : {
        "Text" : "# Fiber Num',colarr,'MMWA [Gyr]','MLWA [Gyr]',$\n",
        "Line" : 132,
        "CharPositionInLine" : 27
      },
      "3" : {
        "Text" : "#'\n",
        "Line" : 136,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 4
    },
    "pro/do_simple_allz2mc.pro" : {
      "ObjectId" : "5872292e9c8cb7fece8133009ca9419fe99094b4",
      "LastModified" : "2018-05-08T21:53:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Generated on ',systime()\n",
        "Line" : 103,
        "CharPositionInLine" : 14
      },
      "1" : {
        "Text" : "# Fiber Num',colarr,'MMWA [Gyr]','MLWA [Gyr]',$\n",
        "Line" : 107,
        "CharPositionInLine" : 14
      },
      "2" : {
        "Text" : "#'\n",
        "Line" : 111,
        "CharPositionInLine" : 14
      },
      "3" : {
        "Text" : "# Fiber Num',colarr,'MMWA [Gyr]','MLWA [Gyr]',$\n",
        "Line" : 187,
        "CharPositionInLine" : 24
      },
      "4" : {
        "Text" : "#'\n",
        "Line" : 191,
        "CharPositionInLine" : 24
      },
      "5" : {
        "Text" : "# Blue_free: ', tcoef.bluefree\n",
        "Line" : 281,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 6
    },
    "pro/do_simple_sky.pro" : {
      "ObjectId" : "1f3df3b86419d26a0094746ab3af999042d221f5",
      "LastModified" : "2016-03-01T19:42:44Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Generated on ',systime()\n",
        "Line" : 70,
        "CharPositionInLine" : 14
      },
      "1" : {
        "Text" : "# Fiber Num',colarr,'MMWA [Gyr]','MLWA [Gyr]',$\n",
        "Line" : 74,
        "CharPositionInLine" : 14
      },
      "2" : {
        "Text" : "# Fiber Num',colarr,'MMWA [Gyr]','MLWA [Gyr]',$\n",
        "Line" : 85,
        "CharPositionInLine" : 21
      },
      "3" : {
        "Text" : "#'\n",
        "Line" : 88,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 4
    },
    "pro/do_simple_tau.pro" : {
      "ObjectId" : "720815c29f990c9e277747e1e94c022ae9849912",
      "LastModified" : "2017-05-08T14:05:54Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Generated on ',systime()\n",
        "Line" : 72,
        "CharPositionInLine" : 14
      },
      "1" : {
        "Text" : "# Fiber Num',colarr,'MMWA [Gyr]','MLWA [Gyr]',$\n",
        "Line" : 76,
        "CharPositionInLine" : 14
      },
      "2" : {
        "Text" : "#'\n",
        "Line" : 79,
        "CharPositionInLine" : 14
      },
      "3" : {
        "Text" : "# Fiber Num',colarr,'MMWA [Gyr]','MLWA [Gyr]',$\n",
        "Line" : 88,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : "#'\n",
        "Line" : 91,
        "CharPositionInLine" : 21
      },
      "5" : {
        "Text" : "#########', vd\n",
        "Line" : 154,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 6
    },
    "pro/fatAngel.pro" : {
      "ObjectId" : "1e92a07b3b94c58f347fd83a71014d8ca1d798c4",
      "LastModified" : "2016-03-01T19:42:44Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "pro/fatAngel1.0.pro" : {
      "ObjectId" : "adfa3ada06db91f7055ff0abc614d9fdd12f3df0",
      "LastModified" : "2016-03-01T19:42:44Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#_of_peaks,peak1_location,peak2_location,...]\n",
        "Line" : 55,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 1
    },
    "pro/fsps_dfk_models.pro" : {
      "ObjectId" : "96e2777263e0b6eb28faa10d3c544cac8aac53a1",
      "LastModified" : "2017-05-08T14:05:54Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0,
      "Errorlog" : "line 141:51 token recognition error at: '\",gg,$\\n                                   format='(F7.3,A6,F7.3,A10,I1,A10,I1)'), /norm\\n         \\n         hline, median(spec[nwl])\\n         vline, m.wave[nwl[0]]\\n         vline, m.wave[nwl[-1]]\\n         \\n         m.age[ff, gg + zz*numdfk] = dfkage*1e9\\n         m.norm[ff, gg + zz*numdfk] = median(spec[nwl])\\n         m.Z[ff,gg + zz*numdfk] = Z[zz]\\n         m.flux[ff,*,gg + zz*numdfk] = spec / median(spec[nwl])\\n         \\n      endfor\\n   endfor\\nendfor\\nmwrfits, m, output, /create\\nif keyword_set(plot) then dfpsclose\\n\\nend\\n\u0000'\n"
    },
    "pro/goodfits.pro" : {
      "ObjectId" : "8a138d6e857c8113e027a8c104e329c851852c1b",
      "LastModified" : "2017-05-08T14:05:54Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "pro/hangTen.pro" : {
      "ObjectId" : "d37b93f5bab8c421ae5d234abfea5fb107be5382",
      "LastModified" : "2017-05-08T14:05:54Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "pro/ma_dfk_models.pro" : {
      "ObjectId" : "50a57c273bf76d8be0d7e8aed5cfd5b7b8bf9feb",
      "LastModified" : "2017-05-08T14:05:54Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0,
      "Errorlog" : "line 148:51 token recognition error at: '\",gg,$\\n                                   format='(F7.3,A6,F7.3,A10,I1,A10,I1)'), /norm\\n         \\n         hline, median(spec[nwl])\\n         vline, m.wave[nwl[0]]\\n         vline, m.wave[nwl[-1]]\\n         \\n         m.age[ff, gg + zz*numdfk] = dfkage*1e9\\n         m.norm[ff, gg + zz*numdfk] = median(spec[nwl])\\n         m.Z[ff,gg + zz*numdfk] = Z[zz]\\n         m.flux[ff,*,gg + zz*numdfk] = spec / median(spec[nwl])\\n         \\n      endfor\\n   endfor\\nendfor\\nmwrfits, m, output, /create\\nif keyword_set(plot) then dfpsclose\\n\\nend\\n\u0000'\n"
    },
    "pro/ma_simple_models.pro" : {
      "ObjectId" : "ede4d7b1d7253c7b5f05f68993b005e1a2857732",
      "LastModified" : "2017-05-08T14:05:54Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0,
      "Errorlog" : "line 10:22 token recognition error at: '\"153B)+'!X'\\n\\nmodelpaths = ['/d/monk/eigenbrot/WIYN/14B-0456/anal/DFK/MA11/MA11_models/raw/ssp_M11_MILES.chaz10m4.rhb',$\\n              '/d/monk/eigenbrot/WIYN/14B-0456/anal/DFK/MA11/MA11_models/raw/ssp_M11_MILES.chaz0001.rhb',$\\n              '/d/monk/eigenbrot/WIYN/14B-0456/anal/DFK/MA11/MA11_models/raw/ssp_M11_MILES.chaz001',$\\n              '/d/monk/eigenbrot/WIYN/14B-0456/anal/DFK/MA11/MA11_models/raw/ssp_M11_MILES_revisednearIRslope.chaz002',$\\n              '/d/monk/eigenbrot/WIYN/14B-0456/anal/DFK/MA11/MA11_models/raw/ssp_M11_MILES.chaz004']\\n\\nZ_arr = [0.0001, 0.001, 0.01, 0.02, 0.04]/0.02\\n\\n; Set up log-lambda wavelength grid\\nnpix = round((alog10(8500) - alog10(3400)) / 1e-4)\\nlogwl = findgen(npix) * 1e-4 + alog10(3400)\\n\\nzid = where(Z*0.02/0.02 eq Z_arr)\\nprint, 'Zid: ', zid\\nprint, 'Reading ',modelpaths[zid]\\nreadcol, string(modelpaths[zid],format='(A)'), Mage, MZ, Mwave, Mflux\\n\\nMage *= 1e9\\n\\n;Put us in L_sol units\\nMflux = Mflux / 3.826e33\\n\\nuniA = Mage[uniq(Mage, sort(Mage))]\\nnssp = n_elements(uniA)\\n\\n; Define output structure\\nm = {wave: 10.0^logwl, flux: fltarr(npix, nssp), $\\n     age: uniA, Z: Z, $\\n     id: string('Ma11 models, MILES, Chabrier IMF',format='(A30)'), $\\n     norm: fltarr(nssp)}\\n\\n; normalization wavelengths\\nnwl = where(m.wave gt 5450 and m.wave lt 5550)\\n\\n;Get singular wavelength vector\\nwid = where(Mage eq Mage[0])\\nFwave = Mwave[wid]\\nnwave = n_elements(Fwave)\\n\\nfor ii = 0, nssp - 1 do begin\\n   aid = where(Mage eq uniA[ii])\\n   linterp, Fwave, Mflux[aid], m.wave, spec\\n   plot, m.wave, spec, xtitle='Wavelength ( '+angstrom+' )', $\\n         ytitle = string('F!D!X',lambda,'!N (L',sunsymbol(),$\\n                         '/M',sunsymbol(),' ',angstrom,')')\\n   xyouts, 0.5, 0.98, string(uniA[ii]/1e9,' Gyr',format='(F7.3,A4)'), /norm\\n   hline, median(spec[nwl])\\n   vline, m.wave[nwl[0]]\\n   vline, m.wave[nwl[-1]]\\n   m.norm[ii] = median(spec[nwl])\\n   spec = spec / median(spec[nwl]) ; normalize at 5500 A\\n   m.flux[*,ii] = spec\\nendfor\\n\\nmwrfits, m, output, /create\\nif keyword_set(plot) then dfpsclose\\n\\nend\\n\u0000'\n"
    },
    "pro/mode.pro" : {
      "ObjectId" : "401579e245bb57742b1b6c9404ae58602cd9b2c1",
      "LastModified" : "2017-05-08T14:05:54Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "pro/numPeaks.pro" : {
      "ObjectId" : "8dd22982035ef977e8350c936b8c35590ddbdd08",
      "LastModified" : "2017-05-08T14:05:54Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "pro/scisterine.pro" : {
      "ObjectId" : "6aade4e9f9d5063b997948abc0866b918660176a",
      "LastModified" : "2017-05-08T14:05:54Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "pro/simple_make_parinfo.pro" : {
      "ObjectId" : "99f9a8ee6bf5f5150a41cc4b78afcf40c62c7e74",
      "LastModified" : "2018-05-08T21:58:51Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "QMAKE" : 46
  },
  "ElapsedTime" : 1001
}