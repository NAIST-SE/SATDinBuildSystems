{
  "Repository" : "60710799",
  "Revision" : "HEAD",
  "ObjectId" : "734af661c6bda054609fdd4959eb1ee50858817b",
  "CommitTime" : "2019-04-18T13:00:11Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "6dc6df55811c7f3174493573b2450edaa5c1bbd2",
      "LastModified" : "2019-03-22T21:57:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note: this is a header only library. If you have an older CMake than 3.4,\n\n# just add the CLI11/include directory and that's all you need to do.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure users don't get warnings on a tested (3.4 to 3.13) version\n\n# of CMake. For most of the policies, the new version is better (hence the change).\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Read in the line containing the version\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Pick out just the version\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add the project\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Only if built as the main project\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# User settable\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Be moderately paranoid with flags\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Add clang-tidy if available\n",
        "Line" : 43,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Allow dependent options\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Allow IDE's to group targets into folders\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# To see in IDE, must be listed for target\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Duplicated because CMake adds the current source dir if you don't.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Make add_subdirectory work like find_package\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This folder should be installed\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Make an export target\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Use find_package on the installed package\n\n# Since we have no custom code, we can directly write this\n\n# to Config.cmake (otherwise we'd have a custom config and would\n\n# import Targets.cmake\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Add the version in a CMake readable way\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# These installs only make sense for a local project\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Make version available in the install\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Install the export target as a file\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Use find_package on the installed package\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Register in the user cmake package registry\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Single file test\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Packaging support\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# CPack collects *everything* except what's listed here.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "cmake/AddGoogletest.cmake" : {
      "ObjectId" : "12eb621dfd23b41b5e1ad883b58292829158cbb0",
      "LastModified" : "2019-03-22T21:57:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n#\n\n# Downloads GTest and provides a helper macro to add tests. Add make check, as well, which\n\n# gives output on failed tests without having to set an environment variable.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# older version of google tests doesn't support MSYS so needs this flag to compile\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target must already exist\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/CodeCoverage.cmake" : {
      "ObjectId" : "a1b7b86074b8ab1cf6b16665fce4c53541b54ed8",
      "LastModified" : "2018-04-30T12:17:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012 - 2017, Lars Bilke\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without modification,\n\n# are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice, this\n\n#    list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its contributors\n\n#    may be used to endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# CHANGES:\n\n#\n\n# 2012-01-31, Lars Bilke\n\n# - Enable Code Coverage\n\n#\n\n# 2013-09-17, Joakim SÃ¶derberg\n\n# - Added support for Clang.\n\n# - Some additional usage instructions.\n\n#\n\n# 2016-02-03, Lars Bilke\n\n# - Refactored functions to use named parameters\n\n#\n\n# 2017-06-02, Lars Bilke\n\n# - Merged with modified version from github.com/ufz/ogs\n\n#\n\n#\n\n# USAGE:\n\n#\n\n# 1. Copy this file into your cmake modules path.\n\n#\n\n# 2. Add the following line to your CMakeLists.txt:\n\n#      include(CodeCoverage)\n\n#\n\n# 3. Append necessary compiler flags:\n\n#      APPEND_COVERAGE_COMPILER_FLAGS()\n\n#\n\n# 4. If you need to exclude additional directories from the report, specify them\n\n#    using the COVERAGE_EXCLUDES variable before calling SETUP_TARGET_FOR_COVERAGE.\n\n#    Example:\n\n#      set(COVERAGE_EXCLUDES 'dir1/*' 'dir2/*')\n\n#\n\n# 5. Use the functions described below to create a custom make target which\n\n#    runs your test executable and produces a code coverage report.\n\n#\n\n# 6. Build a Debug build:\n\n#      cmake -DCMAKE_BUILD_TYPE=Debug ..\n\n#      make\n\n#      make my_coverage_target\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check prereqs\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOT GCOV_PATH\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\"\n",
        "Line" : 117,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Defines a target for running and collection code coverage information\n\n# Builds dependencies, runs the given executable and outputs reports.\n\n# NOTE! The executable should always have a ZERO as exit code otherwise\n\n# the coverage generation will not complete.\n\n#\n\n# SETUP_TARGET_FOR_COVERAGE(\n\n#     NAME testrunner_coverage                    # New target name\n\n#     EXECUTABLE testrunner -j ${PROCESSOR_COUNT} # Executable in PROJECT_BINARY_DIR\n\n#     DEPENDENCIES testrunner                     # Dependencies to build first\n\n# )\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 144,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 148,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# Setup target\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 153,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Create baseline to make sure untouched files show up in the report\n",
        "Line" : 155,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Run tests\n",
        "Line" : 158,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 161,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# add baseline counters\n",
        "Line" : 163,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Show where to find the lcov info report\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 180,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE\n",
        "Line" : 186,
        "CharPositionInLine" : 14
      },
      "16" : {
        "Text" : "# Defines a target for running and collection code coverage information\n\n# Builds dependencies, runs the given executable and outputs reports.\n\n# NOTE! The executable should always have a ZERO as exit code otherwise\n\n# the coverage generation will not complete.\n\n#\n\n# SETUP_TARGET_FOR_COVERAGE_COBERTURA(\n\n#     NAME ctest_coverage                    # New target name\n\n#     EXECUTABLE ctest -j ${PROCESSOR_COUNT} # Executable in PROJECT_BINARY_DIR\n\n#     DEPENDENCIES executable_target         # Dependencies to build first\n\n# )\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# NOT SIMPLE_PYTHON_EXECUTABLE\n",
        "Line" : 207,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# NOT GCOVR_PATH\n",
        "Line" : 211,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "# Combine excludes to several -e arguments\n",
        "Line" : 213,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Run tests\n",
        "Line" : 221,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Running gcovr\n",
        "Line" : 224,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 232,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE_COBERTURA\n",
        "Line" : 238,
        "CharPositionInLine" : 14
      },
      "24" : {
        "Text" : "# APPEND_COVERAGE_COMPILER_FLAGS\n",
        "Line" : 244,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 25
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "c1731f67d0d7f07290c26cf3d38af93d716ee112",
      "LastModified" : "2019-04-11T10:04:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test shows that the help prints out for unnamed subcommands\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "examples/subcom_in_files/CMakeLists.txt" : {
      "ObjectId" : "74ba5dd32c03e5fa6653cbc3a0800c40182caf4b",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test_package/CMakeLists.txt" : {
      "ObjectId" : "48f6d9903248c09c1c897f5266dab257f42907e2",
      "LastModified" : "2018-04-30T12:17:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "ec1f931a2c18d1f2d8946a9b647e8d8474058a5e",
      "LastModified" : "2019-03-22T21:57:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If submodule is available, add sanitizers\n\n# Set SANITIZE_ADDRESS, SANITIZE_MEMORY, SANITIZE_THREAD or SANITIZE_UNDEFINED\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Only affects current directory, so safe\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add -Wno-deprecated-declarations to DeprecatedTest\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Link test (build error if inlines missing)\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add informational printout\n\n# Force this to be in a standard location so CTest can find it\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Adding this printout to CTest\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add boost to test boost::optional if available\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Enforce Boost::Optional even if __has_include is missing on your compiler\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    }
  },
  "FileTypes" : {
    "CMAKE" : 7
  },
  "ElapsedTime" : 938
}