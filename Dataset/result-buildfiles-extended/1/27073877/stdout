{
  "Repository" : "27073877",
  "Revision" : "HEAD",
  "ObjectId" : "957cb7197b2bff78d3afb22ad95e092f89afb0a6",
  "CommitTime" : "2018-02-01T14:09:58Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "7715a8ea3b061d8361feeace54f602b299ef7ab1",
      "LastModified" : "2017-11-10T08:07:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/msgpack-c/CMakeLists.txt" : {
      "ObjectId" : "7a9b241490133a9241d0c324ad8239249be0a3c2",
      "LastModified" : "2016-10-27T06:57:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# only find static libs\n",
        "Line" : 78,
        "CharPositionInLine" : 41
      },
      "1" : {
        "Text" : "# MEMORYCHECK_COMMAND_OPTIONS needs to place prior to CTEST_MEMORYCHECK_COMMAND\n",
        "Line" : 279,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Doxygen\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "keyvi/3rdparty/msgpack-c/Makefile.am" : {
      "ObjectId" : "66bf217110c1cc2b9a6c7bd63d424fc91d34b203",
      "LastModified" : "2016-10-27T06:57:29Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/msgpack-c/example/CMakeLists.txt" : {
      "ObjectId" : "e447d1a259690414dd84f6b7cb8528595a9c98f5",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/msgpack-c/example/boost/CMakeLists.txt" : {
      "ObjectId" : "46eb04bc6b63d640fa5a1c928be46d228bcd8c50",
      "LastModified" : "2016-10-27T06:57:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/msgpack-c/example/c/CMakeLists.txt" : {
      "ObjectId" : "d9386ea90fbbb8d151f9cf22e8a519ad6da3707c",
      "LastModified" : "2016-10-27T06:57:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/msgpack-c/example/cpp03/CMakeLists.txt" : {
      "ObjectId" : "1e5c02a2ad391ffd7c7289b247f53d0aa5f59a9d",
      "LastModified" : "2016-10-27T06:57:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/msgpack-c/example/cpp11/CMakeLists.txt" : {
      "ObjectId" : "4ddd4f625f316f45ddcf3a375485aa29a80a1b54",
      "LastModified" : "2016-10-27T06:57:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/msgpack-c/src/Makefile.am" : {
      "ObjectId" : "c8b649b4d54e21a238084bae9cf688953e66d623",
      "LastModified" : "2016-10-27T06:57:29Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# For C++\n\n#\n\n# The C++ parts of msgpack-c is a header only library,\n\n# so there is no libraries.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For C\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#AM_CPPFLAGS = -I../include\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -version-info CURRENT:REVISION:AGE\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "keyvi/3rdparty/msgpack-c/test/CMakeLists.txt" : {
      "ObjectId" : "5dfbbe44c102f86ef7ad123c8b49bbbdf4e4abb5",
      "LastModified" : "2016-10-27T06:57:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/msgpack-c/test/Makefile.am" : {
      "ObjectId" : "3ce6a56865f38843a7af5946ff6f437fe4407d4d",
      "LastModified" : "2016-10-27T06:57:29Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/rapidjson/CMakeLists.txt" : {
      "ObjectId" : "8ccda4be6dde249fad4dea0f8feb4814940e4e6d",
      "LastModified" : "2016-10-27T06:57:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# detect Apple's Clang\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# compile in release with debug info mode by default\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build all binaries in a separate directory\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#FIXME: x86 is -march=native, but doesn't mean every arch is this option. To keep original project's compatibility, I leave this except POWER.\n",
        "Line" : 56,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#FIXME: x86 is -march=native, but doesn't mean every arch is this option. To keep original project's compatibility, I leave this except POWER.\n",
        "Line" : 85,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "#add extra search paths for libraries and includes\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# required for VS2012 due to missing support for variadic templates\n",
        "Line" : 137,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# pkg-config\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Following patterns are for excluding the intermediate/object files\n\n# from an install of in-source CMake build.\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Provide config and version files to be used by other applications\n\n# ===============================\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# cmake-modules\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "keyvi/3rdparty/rapidjson/CMakeModules/FindGTestSrc.cmake" : {
      "ObjectId" : "f3cb8c99089b97e3a877849c97928c07ae6d20f9",
      "LastModified" : "2016-10-27T06:57:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Debian installs gtest include directory in /usr/include, thus need to look\n\n# for include directory separately from source directory.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "keyvi/3rdparty/rapidjson/doc/CMakeLists.txt" : {
      "ObjectId" : "c1f165a37addc77b551ac10e92a6b68d3a905cdd",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/rapidjson/example/CMakeLists.txt" : {
      "ObjectId" : "4d448ccc0f455e63266c1403ccf9b15c34b699cb",
      "LastModified" : "2016-10-27T06:57:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/rapidjson/test/CMakeLists.txt" : {
      "ObjectId" : "11c1b04c7d16473878eb4ed0224206e1ba4e149a",
      "LastModified" : "2016-10-27T06:57:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/rapidjson/test/perftest/CMakeLists.txt" : {
      "ObjectId" : "c33aae469a3f50c9ede1ae9a3c19211275660a20",
      "LastModified" : "2016-10-27T06:57:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/rapidjson/test/unittest/CMakeLists.txt" : {
      "ObjectId" : "b3204d6c8d6fde5a9e3680aaf4b8291cbd7f670e",
      "LastModified" : "2016-10-27T06:57:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If the user is running a newer version of Clang that includes the\n\n# -Wdouble-promotion, we will ignore that warning.\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Force to always compile with /W4\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Force to always compile with /WX\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Not running SIMD.* unit test cases for Valgrind\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "keyvi/3rdparty/tpie/CMakeLists.txt" : {
      "ObjectId" : "2bdfee60b9eb701d957baafdb0b2fcb50dc04dcb",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# doc/CMakeLists.txt uses configure_file behavior from CMake 2.8\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### CONFIG.H Checks:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#### Dependencies\n\n## Boost\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Ryan Pavlik's Git revision description helper\n\n# http://stackoverflow.com/a/4318642\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Snappy\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#### Installation paths\n\n#Default paths\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# There is a bug in NSI that does not handle full unix paths properly. Make\n\n# sure there is at least one set of four (4) backlasshes.\n\n#set(CPACK_PACKAGE_ICON \"${CMake_SOURCE_DIR}/Utilities/Release\\\\\\\\InstallIcon.bmp\")\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "keyvi/3rdparty/tpie/apps/CMakeLists.txt" : {
      "ObjectId" : "367725afe3c531f5c08580681b5d4c70faee560c",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(matrix)\n\n#add_subdirectory(rtree)\n\n#add_subdirectory(bkdtree)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "keyvi/3rdparty/tpie/apps/bkdtree/CMakeLists.txt" : {
      "ObjectId" : "c446ef2cc3eddc362359d93191924bdc4cbb939f",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/tpie/apps/convex_hull/CMakeLists.txt" : {
      "ObjectId" : "4e3ba96e6f2d261f2ada079468c6d7835402d530",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/tpie/apps/matrix/CMakeLists.txt" : {
      "ObjectId" : "385a0eb768393a0e564b18f2faab94ebef3b0880",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/tpie/apps/merge_fractions/CMakeLists.txt" : {
      "ObjectId" : "53a0af6bb8a75daa174feacbd0790beea38398e8",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/tpie/apps/pipelining_datastructures/CMakeLists.txt" : {
      "ObjectId" : "9d8a8ecc41e7092c9cc63d9de8628c0a329efda3",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/tpie/apps/pipelining_passive_sorter/CMakeLists.txt" : {
      "ObjectId" : "21f56eb853bb8a928d1c22ea7505ad424b39c8d2",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/tpie/apps/rtree/CMakeLists.txt" : {
      "ObjectId" : "9ad4c2cfcfafe4fb80a52f95c7fabc295ade959a",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/tpie/apps/unique/CMakeLists.txt" : {
      "ObjectId" : "fff8f966fbf8fd06c0424780d9f9602cc13c7d48",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/tpie/cmake_modules/FindSnappy.cmake" : {
      "ObjectId" : "18b6f1ca96325951777025b26ebd5bd21545e675",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Snappy, a fast compressor/decompressor\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "keyvi/3rdparty/tpie/cmake_modules/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "c6ac204c390f0040f2ae97977fbbd18309760759",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# TPIE NOTE\n\n# GetGitRevisionDescription.cmake\n\n# is made by Ryan Pavlik, https://github.com/rpavlik/cmake-modules\n\n# The below file is imported from his cmake-modules project at GitHub\n\n# Version b922e06179\n\n#\n\n# LICENSE\n\n# Boost Software License - Version 1.0 - August 17th, 2003\n\n#\n\n# Permission is hereby granted, free of charge, to any person or organization\n\n# obtaining a copy of the software and accompanying documentation covered by\n\n# this license (the \"Software\") to use, reproduce, display, distribute,\n\n# execute, and transmit the Software, and to prepare derivative works of the\n\n# Software, and to permit third-parties to whom the Software is furnished to\n\n# do so, all subject to the following:\n\n#\n\n# The copyright notices in the Software and this entire statement, including\n\n# the above license grant, this restriction and the following disclaimer,\n\n# must be included in all copies of the Software, in whole or in part, and\n\n# all derivative works of the Software, unless such copies or derivative\n\n# works are solely in the form of machine-executable object code generated by\n\n# a source language processor.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\n\n# SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\n\n# FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\n\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 78,
        "CharPositionInLine" : 32
      },
      "4" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 82,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 130,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 138,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "keyvi/3rdparty/tpie/cmake_modules/LibFindMacros.cmake" : {
      "ObjectId" : "9c5824f7a921cc07036c160392e210f6fa0e8810",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version 1.0 (2013-04-12)\n\n# Public Domain, originally written by Lasse Kärkkäinen <tronic@zi.fi>\n\n# Published at http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Works the same as find_package, but forwards the \"REQUIRED\" and \"QUIET\" arguments\n\n# used for the current package. For this to work, the first parameter must be the\n\n# prefix of the current package, then the prefix of the new package etc, which are\n\n# passed to find_package.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CMake developers made the UsePkgConfig system deprecated in the same release (2.6)\n\n# where they added pkg_check_modules. Consequently I need to support both in my scripts\n\n# to avoid those deprecated warnings. Here's a helper that does just that.\n\n# Works identically to pkg_check_modules, except that no checks are needed prior to use.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Skip processing if already processed during this run\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Start with the assumption that the library was found\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Process all includes and set _FOUND to false if any are missing\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Process all libraries and set _FOUND to false if any are missing\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Print message and/or exit on fatal error\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "keyvi/3rdparty/tpie/doc/CMakeLists.txt" : {
      "ObjectId" : "d29432470da7bf5783bf223c5e9fca8d3843cbc3",
      "LastModified" : "2016-10-27T06:57:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Path to output doxygen configuration file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Search for doxygen\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#If Doxygen is present, add docs custom target\n\n#that executes doxygen\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#This variable is automatically replaced when configuring Doxyfile.in.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#CMake should process the Doxyfile.in file replacing\n\n#variables placing the result in the build directory\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "keyvi/3rdparty/tpie/doc/Makefile" : {
      "ObjectId" : "1b14070c7d1768b219e72f5625179bd6f0366853",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/tpie/doc/olddoc/FindTPIE.cmake" : {
      "ObjectId" : "1402e6f35cc781f173bc4ee3f09dde1536869cfa",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find TPIE\n\n# Once done this will define\n\n#\n\n#  TPIE_FOUND - system has TPIE\n\n#  TPIE_INCLUDE_DIR - the Tpie include directory\n\n#  TPIE_LIBRARIES - Link these to use Tpie\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "keyvi/3rdparty/tpie/doc/olddoc/Makefile" : {
      "ObjectId" : "85ff412893dd8585e571bd4487d3833c66953abc",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#LATEX = latex\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#DVIPS = dvips -Pamz -Pcmz\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#tpie.pdf: tpie.ps\n\n#\t$(PS2PDF) $<\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "keyvi/3rdparty/tpie/example/CMakeLists.txt" : {
      "ObjectId" : "cbb34ee089576061058bcbc69e9479d2ad97743f",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/tpie/share/tpie/tpie-config.cmake" : {
      "ObjectId" : "0847d23bb52da4d284f154adee66a48b9b7e1999",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2011, The TPIE development team\n\n# \n\n# This file is part of TPIE.\n\n# \n\n# TPIE is free software: you can redistribute it and/or modify it under\n\n# the terms of the GNU Lesser General Public License as published by the\n\n# Free Software Foundation, either version 3 of the License, or (at your\n\n# option) any later version.\n\n# \n\n# TPIE is distributed in the hope that it will be useful, but WITHOUT ANY\n\n# WARRANTY; without even the implied warranty of MERCHANTABILITY or\n\n# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public\n\n# License for more details.\n\n# \n\n# You should have received a copy of the GNU Lesser General Public License\n\n# along with TPIE.  If not, see <http://www.gnu.org/licenses/>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "keyvi/3rdparty/tpie/test/CMakeLists.txt" : {
      "ObjectId" : "484333099e2538f51695c2ca59e656734437214c",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/tpie/test/speed_regression/CMakeLists.txt" : {
      "ObjectId" : "1eca953d7a6abe045673da82a3dbd956cbb16d08",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/tpie/test/unit/CMakeLists.txt" : {
      "ObjectId" : "954d003e758a95a73bcb0985b865ff5dafd5c08c",
      "LastModified" : "2016-10-27T06:57:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/tpie/tpie/CMakeLists.txt" : {
      "ObjectId" : "fab41812383a4593a5da484888f3162e69d0fc99",
      "LastModified" : "2016-10-27T06:57:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "keyvi/3rdparty/tpie/tpie/config.h.cmake" : {
      "ObjectId" : "e9ecb5462f3c05029783308501a06a79217a8473",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "// On Solaris, _SC_PAGE_SIZE is called _SC_PAGE_SIZE.  Here's a quick\n// fix.",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "//disable windows crt security and deprecation warnings",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "// recent visual studio versions gives heaps of compilation\n// warnings about security issues with fopen/strcpy and the like\n// this disables these warnings.",
        "Line" : 42,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "// We know that visual studio does not know what to do with throw() \n// but realy dont care",
        "Line" : 47,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "// We know that we are casting ints to bool",
        "Line" : 51,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "//We use boost filesystem v3 from boost v1.47 and onwards\n//(boost v 1.50 dropped fs v2 altogether)",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "keyvi/3rdparty/xchange/CMakeLists.txt" : {
      "ObjectId" : "6cc7052cc545595feb4fe377e0afa50ad2a66175",
      "LastModified" : "2016-01-14T12:32:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 37,
    "CMAKESOURCE" : 1,
    "MAKEFILE" : 2,
    "AUTOMAKE" : 3
  },
  "ElapsedTime" : 1599
}