{
  "Repository" : "12641232",
  "Revision" : "HEAD",
  "ObjectId" : "8eba410284b1f5c2a7dc4aae64af0653cb5c74d4",
  "CommitTime" : "2019-04-11T17:27:03Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "3cd1d8bdb82dee89a62d401d19cf8f67f5b70a94",
      "LastModified" : "2018-10-31T20:55:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##---------------------------------------------------------------------------##\n\n## DataTransferKit/CMakeLists.txt\n\n## Stuart R. Slattery\n\n##---------------------------------------------------------------------------##\n\n## TriBITS package file for the DataTransferKit package\n\n##---------------------------------------------------------------------------##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##---------------------------------------------------------------------------##\n\n## Define the package\n\n##---------------------------------------------------------------------------##\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##---------------------------------------------------------------------------##\n\n## Explicit template instantiation\n\n##---------------------------------------------------------------------------##\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Setup the same ETI as Tpetra but do not set global ordinal types as\n\n# additional scalar types.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# check tpetra variables are defined.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set the eti types\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# start with the empty list\n",
        "Line" : 30,
        "CharPositionInLine" : 40
      },
      "7" : {
        "Text" : "# not in the list of integer types\n",
        "Line" : 33,
        "CharPositionInLine" : 32
      },
      "8" : {
        "Text" : "# make the eti variables globally accessible\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##---------------------------------------------------------------------------##\n\n## ETI\n\n##---------------------------------------------------------------------------##\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##---------------------------------------------------------------------------##\n\n## Set the path to the DTKData directory.\n\n##---------------------------------------------------------------------------##\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Search for one of the mesh files in the DTKData directory\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Get the location of the mesh file\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Strip \"/exodus\" from the path\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "##---------------------------------------------------------------------------##\n\n## Print the revision number to stdout\n\n##---------------------------------------------------------------------------##\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Design-by-Contract\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##---------------------------------------------------------------------------##\n\n## Set extra parameters (before calling CONFIGURE_FILE)\n\n##---------------------------------------------------------------------------##\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Check for netcdf so we can use it in the tests.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##---------------------------------------------------------------------------##\n\n## Do standard postprocessing\n\n##---------------------------------------------------------------------------##\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "##---------------------------------------------------------------------------##\n\n## Check C++ code style using clang-format\n\n##---------------------------------------------------------------------------##\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##---------------------------------------------------------------------------##\n\n## Build the documentation published on http://datatransferkit.readthedocs.org\n\n##---------------------------------------------------------------------------##\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "##---------------------------------------------------------------------------##\n\n## Generate the Doxygen documentation\n\n##---------------------------------------------------------------------------##\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##---------------------------------------------------------------------------##\n\n## Generate a .ycm_extra_conf.py file for use with YouCompleteMe\n\n##---------------------------------------------------------------------------##\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##---------------------------------------------------------------------------##\n\n## end of DataTransferKit/CMakeLists.txt\n\n##---------------------------------------------------------------------------##\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "PackagesList.cmake" : {
      "ObjectId" : "bec9369128c4ce61b0fe8a3a6fd3be44cb862a20",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See documentation in Trilinos preCopyrightTrilinos/ExtraExternalRepositories.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "TPLsList.cmake" : {
      "ObjectId" : "2a4f1e2866a8c6e1f7c31dd929d393749f3ab75a",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Extra add-on TPLs\n\n#\n\n# For a description of the fields, see:\n\n#\n\n#   Trilinos/cmake/TrilinosTPLs.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# NOTE: Above, the paths to the FindTPL<TPLNAME> modules (with an implicit\n\n# *.cmake extension) are relative to the Trilinos/cmake/TPLs directory.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Version.cmake" : {
      "ObjectId" : "faa5864e0e21edcee0b0af8dde78a4fbeb2550fe",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Change to 'OFF' for a release\n",
        "Line" : 5,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 1
    },
    "cmake/CodeCompletion.cmake" : {
      "ObjectId" : "81ebac10c047b656e74c5f6e65ac42e5394ab35a",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/CodeFormat.cmake" : {
      "ObjectId" : "9cba9b77a39b6540e33e48fdbb329c3c8cf019ef",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check that the version of clang-format is the correct one\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add a custom target that applies the C++ code formatting style to the source\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add a test that checks the code is formatted properly\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/Dependencies.cmake" : {
      "ObjectId" : "c97d608d55e9e86a13538505dff7c77b95288d31",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# BoostOrg is listed twice to have -isystem added to the include directories for the TPL when compiling the tests.\n\n# This is a known limitation of TriBITS (c.f. https://tribits.org/doc/TribitsDevelopersGuide.html#project-name-tpl-system-include-dirs)\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "cmake/ETI.cmake" : {
      "ObjectId" : "777e8285dde8d5265b22e1a07febe6348ec4227b",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Function that follows the Tpetra convention for mangling C++ types\n\n# so that they can be used as C preprocessor macro arguments.\n\n#\n\n# TYPE_MANGLED_OUT [out] The mangled type name.\n\n#\n\n# TYPE_IN [in] The type to mangle.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Spaces (as in \"long long\") get squished out.\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Function that turns a valid Scalar, LocalOrdinal, or GlobalOrdinal\n\n# template parameter into a macro name (all caps, with no white space\n\n# and no punctuation other than underscore).\n\n#\n\n# NAME_OUT [out] The mangled type name.\n\n#\n\n# NAME_IN [in] The type to mangle.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# __float128 is a special case; we remove the __ from the macro name.\n",
        "Line" : 26,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Convert to upper case, convert double colons to underscores,\n\n# and hope for the best.\n\n#\n\n# It would be nice if CMake were consistent about where output\n\n# arguments go.  Alas, this is not to be.  TOUPPER puts the\n\n# output argument last; REPLACE puts it after the search and\n\n# substitute strings, before the input string.\n",
        "Line" : 37,
        "CharPositionInLine" : 16
      },
      "5" : {
        "Text" : "# Whether the input SC (Scalar) type is a valid GO (GlobalOrdinal) type.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Now would be a good chance to break from the loop, if I knew\n\n# how to do that.\n",
        "Line" : 60,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# Function that turns a valid Node template parameter into a macro\n\n# name (all caps, with no white space and no punctuation other than\n\n# underscore).\n\n#\n\n# NAME_OUT [out] The mangled type name.\n\n#\n\n# NAME_IN [in] The type to mangle.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Extract the Kokkos execution space (KOKKOS_EXEC_SPACE) from the Node name.\n",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Special case: Threads.  The macro name unfortunately differs\n\n# from the execution space name in a way that doesn't fit the\n\n# pattern of the other execution spaces.\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# The other cases (Cuda, Serial, OpenMP) are easy.\n",
        "Line" : 92,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "# Function that turns Scalar (SC) and GlobalOrdinal (GO) type names\n\n# into an expression for asking DTK whether to build for that\n\n# Scalar type.\n\n#\n\n# SC_MACRO_EXPR [out] Expression for asking DTK whether to build\n\n#   for that Scalar type.\n\n#\n\n# SC [in] Original name of the Scalar type.\n\n#\n\n# GO [in] Original name of the GlobalOrdinal type.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# SC_MACRO_NAME [in] Macro-name version of SC.  The\n\n#   DTK_SLG_MACRO_NAME function (see above) implements the\n\n#   conversion process from the original name to the macro name.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# SC = int,char and SC = GO are special cases.  DTK doesn't have\n\n# macros for these cases.  That means the expression is empty.\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#MESSAGE(STATUS \">> >> SC = ${SC}, SC_MACRO_EXPR_TMP = ${SC_MACRO_EXPR_TMP}\")\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Set the output argument.\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Function to generate one .cpp file for the given template parameter.\n\n# This is meant to be called by\n\n# DTK_PROCESS_ALL_N_TEMPLATES.  This function takes the names\n\n# already mangled, to avoid unnecessary string processing overhead.\n\n#\n\n# OUTPUT_FILE [out] Name of the generated .cpp file.\n\n#\n\n# TEMPLATE_FILE [in] Name of the input .tmpl \"template\" file.  This\n\n#   function does string substitution in that file, using the input\n\n#   arguments of this function.\n\n#\n\n# CLASS_NAME [in] Name of the DTK class (without namespace\n\n#   qualifiers; must live in the DataTransferKit namespace)\n\n#\n\n# CLASS_MACRO_NAME [in] Name of the DTK class, suitably mangled for\n\n#   use in a macro name.\n\n#\n\n# NT_MANGLED_NAME [in] Name of the Node (NT) type, mangled for use\n\n#   as a macro argument (e.g., spaces and colons removed).\n\n#\n\n# NT_MACRO_NAME [in] Name of Node (NT) type, mangled for\n\n#   use as a macro argument.\n\n#\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Function to generate .cpp files for ETI of a DTK class, over all\n\n# enabled and Node template arameters.\n\n#\n\n# OUTPUT_FILES [out] List of the generated .cpp files.\n\n#\n\n# TEMPLATE_FILE [in] Name of the input .tmpl \"template\" file.  This\n\n#   function does string substitution in that file, using the input\n\n#   arguments of this function.\n\n#\n\n# CLASS_NAME [in] Name of the DTK class (without namespace\n\n#   qualifiers; must live in the DTK namespace)\n\n#\n\n# CLASS_MACRO_NAME [in] Name of the DTK class, suitably mangled for\n\n#   use in a macro name.\n\n#\n\n# NODE_TYPES [in] All Node types over which to do ETI for the given\n\n#   class.\n\n#\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# NT\n",
        "Line" : 195,
        "CharPositionInLine" : 17
      },
      "19" : {
        "Text" : "# This is the standard CMake idiom for setting an output variable so\n\n# that the caller can see the result.\n",
        "Line" : 197,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 20
    },
    "cmake/ExplicitInstantiationSupport.cmake" : {
      "ObjectId" : "86e1588757d46244ce64ce985ce04adb66b81ed8",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DataTransferKit ETI type fields. S, LO, GO, N correspond to the four\n\n# template parameters of most Tpetra classes: Scalar, LocalOrdinal,\n\n# GlobalOrdinal, and Node.  DataTransferKit shares these with Tpetra, because\n\n# DataTransferKit only works with Tpetra linear algebra objects.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set up a pattern that excludes all complex Scalar types.\n\n# TriBITS' ETI system knows how to interpret this pattern.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TriBITS' ETI system expects a set of types to be a string, delimited\n\n# by |.  Each template parameter (e.g., Scalar, LocalOrdinal, ...) has\n\n# its own set.  The JOIN commands below set up those lists.  We use\n\n# the following sets that DataTransferKit defines:\n\n#\n\n# Scalar: DataTransferKit_ETI_SCALARS\n\n# LocalOrdinal: DataTransferKit_ETI_LORDS\n\n# GlobalOrdinal: DataTransferKit_ETI_GORDS\n\n# Node: DataTransferKit_ETI_NODES\n\n#\n\n# Note that the Scalar set from Tpetra includes the Scalar =\n\n# GlobalOrdinal case.  However, DataTransferKit's CMake logic excludes this,\n\n# so we don't have to worry about it here.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Construct the \"type expansion\" string that TriBITS' ETI system\n\n# expects.  Even if ETI is OFF, we will use this to generate macros\n\n# for instantiating tests.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Generate the instantiation macros.  These go into\n\n# DataTransferKit_ETIHelperMacros.h, which is generated from\n\n# DataTransferKit_ETIHelperMacros.h.in (in this directory).\n\n#\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Generate \"mangled\" typedefs.  Macros sometimes get grumpy when types\n\n# have spaces, colons, or angle brackets in them.  This includes types\n\n# like \"long long\" or \"std::complex<double>\".  Thus, we define\n\n# typedefs that remove the offending characters.  The typedefs also\n\n# get written to the generated header file.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Generate the header file ${PACKAGE_NAME}_ETIHelperMacros.h, from the file\n\n# ${PACKAGE_NAME}_ETIHelperMacros.h.in\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/FindSphinx.cmake" : {
      "ObjectId" : "3b1d1f38696db189bbc4f46e85bb9e4b0cd87ff4",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/RepositoryDependenciesSetup.cmake" : {
      "ObjectId" : "75aba6258f1d5c883bbea277c9bbdc0483f07beb",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/TPLs/FindTPLBoostOrg.cmake" : {
      "ObjectId" : "275c9657610c5d02767bf4913fd710285f083bbd",
      "LastModified" : "2019-04-04T17:51:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use CMake FindBoost module to check version is sufficient\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "docker/jenkins/Makefile" : {
      "ObjectId" : "37becd568f18bfc092c6d92d90099edd8d5eb7ff",
      "LastModified" : "2019-01-24T23:00:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "docs/CMakeLists.txt" : {
      "ObjectId" : "0ea4b8397840804b1583c74e14027428f74fe90f",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "docs/doxygen/CMakeLists.txt" : {
      "ObjectId" : "1fc2da39c67825b7e8da08bb6a72bfc5994a8910",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "packages/Benchmarks/CMakeLists.txt" : {
      "ObjectId" : "ca1634ffd7dd675f857b4b34e83ea7a6215f981b",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "packages/Benchmarks/HybridTransport/CMakeLists.txt" : {
      "ObjectId" : "b15710154557ea05170e87c439093dae95eaec96",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "packages/Benchmarks/HybridTransport/src/CMakeLists.txt" : {
      "ObjectId" : "d7acc5d29f4878ef13dea27d5ee2e5b5eee14673",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Must glob the binary dir last to get all of the auto-generated headers\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# C) Define the targets for package's library(s)\n\n#\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We need to set the linker language explicitly here for CUDA builds.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "packages/Benchmarks/HybridTransport/test/CMakeLists.txt" : {
      "ObjectId" : "011c682da8deed420214153711d8baa3f878d568",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ##---------------------------------------------------------------------------##\n\n# ## TESTS\n\n# ##---------------------------------------------------------------------------##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "packages/CMakeLists.txt" : {
      "ObjectId" : "757ab96f879ae171e46b1b6ea6503099d161df97",
      "LastModified" : "2019-04-09T19:43:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need to set the linker language explicitly here for CUDA builds.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "packages/Discretization/CMakeLists.txt" : {
      "ObjectId" : "b15710154557ea05170e87c439093dae95eaec96",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "packages/Discretization/src/CMakeLists.txt" : {
      "ObjectId" : "7ebe223cbfb80626a23502186d517ba4539e0f8f",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Must glob the binary dir last to get all of the auto-generated headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Explicitly instantiate classes.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generate ETI .cpp files for DataTransferKit::PointInCell.\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Generate ETI .cpp files for DataTransferKit::PointSearch.\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Generate ETI .cpp files for DataTransferKit::Interpolation.\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\n\n# C) Define the targets for package's library(s)\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# We need to set the linker language explicitly here for CUDA builds.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "packages/Discretization/test/CMakeLists.txt" : {
      "ObjectId" : "9f1c2dc86cd195c74820630bac36db58aa6a735f",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##---------------------------------------------------------------------------##\n\n## TESTS\n\n##---------------------------------------------------------------------------##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "packages/Interface/CMakeLists.txt" : {
      "ObjectId" : "e0d58ec6ed1225c3f0158e33cf37d1225b6b7386",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable unlimited-length lines and C-like preprocessing\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#TRIBITS_ADD_EXAMPLE_DIRECTORIES(example)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "packages/Interface/src/CMakeLists.txt" : {
      "ObjectId" : "f38fd62e5359a703d29c8db9b064c7b950c9d33b",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# A) Define the header and source files (and directories)\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Must glob the binary dir last to get all of the auto-generated headers\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# B) Define the targets for package's library(s)\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We need to set the linker language explicitly here for CUDA builds.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "packages/Interface/test/CMakeLists.txt" : {
      "ObjectId" : "ce4509dc0230240c52dba668896a118d2fa0450b",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##---------------------------------------------------------------------------##\n\n## TESTS\n\n##---------------------------------------------------------------------------##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "packages/MapFactory/CMakeLists.txt" : {
      "ObjectId" : "4642492a5475da746926625569d508c7f7e96fed",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TRIBITS_ADD_EXAMPLE_DIRECTORIES(examples)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "packages/MapFactory/src/CMakeLists.txt" : {
      "ObjectId" : "c32a6a1bc574d38bf5ee61bd98fc319569e03fac",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Must glob the binary dir last to get all of the auto-generated headers\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# C) Define the targets for package's library(s)\n\n#\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We need to set the linker language explicitly here for CUDA builds.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "packages/MapFactory/test/CMakeLists.txt" : {
      "ObjectId" : "fc04502eebe76ff8c182a6c52d4a9f5cbf271c11",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##---------------------------------------------------------------------------##\n\n## TESTS\n\n##---------------------------------------------------------------------------##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "packages/Meshfree/CMakeLists.txt" : {
      "ObjectId" : "b15710154557ea05170e87c439093dae95eaec96",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "packages/Meshfree/src/CMakeLists.txt" : {
      "ObjectId" : "71495c2661cd84273004a8672c672b69f57d3dff",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# A) Package-specific configuration options\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# B) Define the header and source files (and directories)\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Must glob the binary dir last to get all of the auto-generated headers\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Explicitly instantiate classes.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Generate ETI .cpp files for DataTransferKit::NearestNeighborOperator\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Generate ETI .cpp files for DataTransferKit::MovingLeastSquaresOperator\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#\n\n# C) Define the targets for package's library(s)\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We need to set the linker language explicitly here for CUDA builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "packages/Meshfree/test/CMakeLists.txt" : {
      "ObjectId" : "758510b5d56552708c3a8f7f176b7d76db0bb0cd",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##---------------------------------------------------------------------------##\n\n## TESTS\n\n##---------------------------------------------------------------------------##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "packages/Search/CMakeLists.txt" : {
      "ObjectId" : "6f174b0ff7ad7d285e609d1bd80aa57d0f231732",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "packages/Search/examples/CMakeLists.txt" : {
      "ObjectId" : "6a5ac7a487f73df5611ede2feaf8ad41f17892df",
      "LastModified" : "2019-03-21T22:01:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "packages/Search/examples/bvh_driver/CMakeLists.txt" : {
      "ObjectId" : "b81ba0466337ec6fb230209fcdfa36f87eecce93",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##---------------------------------------------------------------------------##\n\n## EXAMPLES\n\n##---------------------------------------------------------------------------##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We require version 1.4.0 or higher but the format used by Google benchmark is\n\n# wrong and thus, we cannot check the version during the configuration step.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "packages/Search/examples/distributed_tree_driver/CMakeLists.txt" : {
      "ObjectId" : "eb6a57a602fa0d4f8dcd9f37b96e978b0236588b",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##---------------------------------------------------------------------------##\n\n## EXAMPLES\n\n##---------------------------------------------------------------------------##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "packages/Search/examples/viz/CMakeLists.txt" : {
      "ObjectId" : "3c2e8a34870dbdde3d8a27d6a9b74005b11632e4",
      "LastModified" : "2019-04-08T19:06:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "packages/Search/src/CMakeLists.txt" : {
      "ObjectId" : "8d265b4b1761fc49d4cadc94f2804a5d464e056b",
      "LastModified" : "2019-03-21T22:01:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need to set the linker language explicitly here for CUDA builds.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "packages/Search/test/CMakeLists.txt" : {
      "ObjectId" : "0e826dcd2f6307afef144c01a3fd2859644db241",
      "LastModified" : "2019-04-09T15:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##---------------------------------------------------------------------------##\n\n## TESTS\n\n##---------------------------------------------------------------------------##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO link Boost::dynamic_linking interface target to enable dynamic linking\n\n# (adds BOOST_ALL_DYN_LINK)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "packages/Utils/CMakeLists.txt" : {
      "ObjectId" : "b15710154557ea05170e87c439093dae95eaec96",
      "LastModified" : "2019-01-23T15:47:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "packages/Utils/src/CMakeLists.txt" : {
      "ObjectId" : "034cda61abdd62bb025aa3a322548db6160eee24",
      "LastModified" : "2019-04-04T17:51:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the latter to find config\n",
        "Line" : 28,
        "CharPositionInLine" : 73
      },
      "CommentCount" : 1
    },
    "packages/Utils/test/CMakeLists.txt" : {
      "ObjectId" : "68149cadb0c37801ebcb1ebd60d7c38df9681ef7",
      "LastModified" : "2019-04-04T17:51:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 41,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 783
}