{
  "Repository" : "11340964",
  "Revision" : "HEAD",
  "ObjectId" : "1fc064d586cb89cef9ca700c6e47c5c245ffeaa1",
  "CommitTime" : "2019-04-15T09:34:58Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "2d6ea4a9bafc272b41d4c32919e0bc27732ae71c",
      "LastModified" : "2019-02-13T23:58:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2018, Data61\n\n# Commonwealth Scientific and Industrial Research Organisation (CSIRO)\n\n# ABN 41 687 119 230.\n\n#\n\n# This software may be distributed and modified according to the terms of\n\n# the BSD 2-Clause license. Note that NO WARRANTY is provided.\n\n# See \"LICENSE_BSD2.txt\" for details.\n\n#\n\n# @TAG(DATA61_BSD)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include all the other projects\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "camkes-top-level.cmake" : {
      "ObjectId" : "a2b38cf18562cf9be3b1e02ca961f401b1623f29",
      "LastModified" : "2019-02-13T23:58:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2018, Data61\n\n# Commonwealth Scientific and Industrial Research Organisation (CSIRO)\n\n# ABN 41 687 119 230.\n\n#\n\n# This software may be distributed and modified according to the terms of\n\n# the BSD 2-Clause license. Note that NO WARRANTY is provided.\n\n# See \"LICENSE_BSD2.txt\" for details.\n\n#\n\n# @TAG(DATA61_BSD)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is expected to be the root CMakeLists file for a CAmkES based project and symlinked\n\n# to the top level directory. Although it is also fine, and expected, that some systems\n\n# may need to define their own root CMakeLists file. Hopefully the comments here provide\n\n# enough guidance for how to do this.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include the base. As per the comment above, we expect to be in the root directory and\n\n# so we do not need to declare a specific kernel directory\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Now define our CAmkES extensions\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include all the other projects\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Should be done adding targets, can now generate the root server and the global configuration\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "camkes.cmake" : {
      "ObjectId" : "8902c117aed27fd2afc5892bc9bcc43a37eedc9a",
      "LastModified" : "2019-04-01T05:23:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2018, Data61\n\n# Commonwealth Scientific and Industrial Research Organisation (CSIRO)\n\n# ABN 41 687 119 230.\n\n#\n\n# This software may be distributed and modified according to the terms of\n\n# the BSD 2-Clause license. Note that NO WARRANTY is provided.\n\n# See \"LICENSE_BSD2.txt\" for details.\n\n#\n\n# @TAG(DATA61_BSD)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These options are not declared with the config_* system because they only need to exist\n\n# in the build system, and not appear in a configuration library\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Default to 0 as this is the index assigned to the BSP (Boot Strap Processor) by seL4\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Save the path to to python-capdl whilst we know it (unless it was already specified)\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Require the CapDL tool\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use the camkes script to determine the location of other things\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build the environment expected by camkes\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Save camkes tool commands\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Search for a FMT tool for reformatting generated CAmkES C files\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Find the sponge tool, or emulate it\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Find the Isabelle theory pre-process for formatting theory files\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# CAmkES defines its own heaps and for this to work muslcsys must not be configured to\n\n# use a static morecore. We make the morecore dynamic by setting the size to 0\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# This is called from the context of a CAmkES application that has decided what the 'root'\n\n# application is. This function will effectively generate a rule for building the final\n\n# rootserver image\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Option arguments\n",
        "Line" : 268,
        "CharPositionInLine" : 11
      },
      "14" : {
        "Text" : "# Single arguments\n",
        "Line" : 269,
        "CharPositionInLine" : 24
      },
      "15" : {
        "Text" : "# Multiple aguments\n",
        "Line" : 270,
        "CharPositionInLine" : 33
      },
      "16" : {
        "Text" : "# Stash this request as a global property. The main CAmkES build file will call\n\n# GenerateCAmkESRootserver later once all the build scripts are processed\n",
        "Line" : 272,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Called to actually generate the definitions for the CAmkES rootserver. Due to its\n\n# use of properties for some configuration it needs to be run after all other build\n\n# scripts, typically by the main CAmkES build file\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Retrieve properties from the declare call above\n",
        "Line" : 296,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Get an absolute reference to the ADL source\n",
        "Line" : 307,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Declare a common CAMKES_FLAGS that we will need to give to every invocation of camkes\n",
        "Line" : 309,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Find the dts to use\n",
        "Line" : 315,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# no dts file set, try to find the default\n",
        "Line" : 317,
        "CharPositionInLine" : 12
      },
      "23" : {
        "Text" : "# Retrieve any extra import paths\n",
        "Line" : 336,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Retrieve any template paths\n",
        "Line" : 341,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# We set a property to indicate that we have done execute_process (which happens during the\n\n# generation phase. This just allows us to do some debugging and detect cases where options\n\n# are changed *after* this point that would have affected the execute_process\n",
        "Line" : 384,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Internal helper function for setting camkes component properties\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Option arguments\n",
        "Line" : 394,
        "CharPositionInLine" : 11
      },
      "28" : {
        "Text" : "# Single arguments\n",
        "Line" : 395,
        "CharPositionInLine" : 61
      },
      "29" : {
        "Text" : "# Multiple aguments\n",
        "Line" : 396,
        "CharPositionInLine" : 95
      },
      "30" : {
        "Text" : "# Declare a target that we will set properties on\n",
        "Line" : 398,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Get absolute paths for the includes and sources\n",
        "Line" : 402,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Overwrite any previous CakeML heap or stack size\n",
        "Line" : 431,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# This is called by CAmkES components to declare information needed for the camkes-gen.cmake to\n\n# actually build them. Can be called multiple times to append additional information.\n",
        "Line" : 443,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Declare built-in components that are constructed from templates and have no source files\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Extend a particular instantiation of a CAmkES component with additional information. This takes\n\n# similar arguments to DeclareCAmkESComponent and all of the declared includes, flags etc also\n\n# apply to the sources from DeclareCAmkESComponent. The includes provided here will be passed\n\n# prior to the original includes allowing for overriding. This can be called multiple times for the\n\n# same instance to repeatedly extend it. Similar flags will be placed after.\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Helper function for adding additional import paths. Largely it exists to allow list\n\n# files to give relative paths and have them automatically expanded to absolute paths\n\n# We add the import paths to a property, instead of a target, since we need to use\n\n# it in an `execute_process` above, which cannot take generator expressions\n",
        "Line" : 462,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Ensure we haven't generated the camkes-gen.cmake yet\n",
        "Line" : 467,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Add an import path but only if it exists\n",
        "Line" : 478,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Ensure we haven't generated the camkes-gen.cmake yet\n",
        "Line" : 488,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# Function to add an include path to the c preprocessor when running over\n\n# camkes ADL files (example.camkes).\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 41
    },
    "camkes/templates/camkes-gen.cmake" : {
      "ObjectId" : "beec5f6a7dd47a18bc26a4357572d6b7c853e937",
      "LastModified" : "2019-03-27T07:13:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2018, Data61\n\n# Commonwealth Scientific and Industrial Research Organisation (CSIRO)\n\n# ABN 41 687 119 230.\n\n#\n\n# This software may be distributed and modified according to the terms of\n\n# the BSD 2-Clause license. Note that NO WARRANTY is provided.\n\n# See \"LICENSE_BSD2.txt\" for details.\n\n#\n\n# @TAG(DATA61_BSD)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# /*? macros.generated_file_notice() ?*/\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include the CapDL tools build helpers, we will need this later one when generating capDL targets\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define names for tools we will use\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Declare our 'core' CAmkES libraries. These are the libraries that are considered minimal for the\n\n# glue code that is linked to camkes applications to run\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The main function generated by CAmkES does not conform to the standard main\n\n# signatures, so disable warnings for this.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The terms 'group' and 'address space' are currently synonymous. We can\n\n# derive the groups by collecting all the instances' address spaces.\n\n#*/\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# We build up a list of all the generated items that we want to construct a single\n\n# camkes invocation\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Helper function for declaring a generated file\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# generate command\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Reflow generated files if requested\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Append the item and outfile\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Pass along base name for verification templates\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Add to the sources list if it's a source file\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Always add to the list of generated files\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Generate all the files declared previously. object_state_op is either\n\n# load- or save-object-state, depending on whether the object state has\n\n# already been built.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Calculate the string length of ${CMAKE_BINARY_DIR} + 1 to do a hacky relative\n\n# path calculation when editing our generated depfile.  This is because, we need\n\n# to calculate the depfile path depending on the top level build directory, but\n\n# the tool generating the depfile only knows the current subdirectory and doesn't\n\n# get told the top level one.\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# For some reason, ninja only accepts relative targets.\n\n# We truncate the first `strlen` chars which takes off the CMAKE_BINARY_DIR from the depfile.\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# This pulls in miscellaneous dependencies \n\n# which is used by the camkes tool\n",
        "Line" : 136,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "# Any additional dependencies from the files\n",
        "Line" : 139,
        "CharPositionInLine" : 12
      },
      "20" : {
        "Text" : "# helper for appending lists of generator expressions\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# determine if there is anything in the original list OR the new list, and use that to deteremine\n\n# whether or not to put a semicolon between the two\n",
        "Line" : 159,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Helper for constructing a generator expression that evalutes to the provided value if it exists,\n\n# or to a default value.\n\n# if maybe_value is the empty string\n\n#  evaluate to the contents of default\n\n# else\n\n#  evaluate to the contents of maybe_value\n\n# Both 'default' and 'maybe_value' can themselves be generator expressions, allow for chaining usages of\n\n# this together to build nested ORs.\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# A target for each binary that we need to build\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Variable for collecting generated files\n",
        "Line" : 181,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# If no instance target exists declare it to simplify the logic of the generator expressions\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Retrieve the static sources for the component\n",
        "Line" : 190,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Retrieve the static headers for the component. Ensure instance headers are placed first\n",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Generate camkes header\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Generated different entry points for the instance\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Generate connectors for this instance\n",
        "Line" : 225,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Add a rule to generate the header if this connector has a header template\n",
        "Line" : 231,
        "CharPositionInLine" : 16
      },
      "32" : {
        "Text" : "# Add a rule to generate the header if this connector has a header template\n",
        "Line" : 245,
        "CharPositionInLine" : 16
      },
      "33" : {
        "Text" : "# Generate our linker script\n",
        "Line" : 252,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Create a target for all our generated files\n",
        "Line" : 255,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Build the actual binary\n",
        "Line" : 258,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# If COMPONENT_LINKER_LANGUAGE is set on the component target, set the LINKER_LANGUAGE of the executable\n",
        "Line" : 265,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Build any CakeML library\n",
        "Line" : 270,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Pull heap/stack size from component expression OR instances expression OR default to an arbitrary 50\n\n# The order here is important as we want the instance property to be able to override the component property\n",
        "Line" : 272,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# Additional directories for the HOL build to depend on\n",
        "Line" : 278,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# Depend upon core camkes libraries\n",
        "Line" : 294,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# Depend upon additional libraries\n",
        "Line" : 296,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# Depend upon target that creates the generated source files\n",
        "Line" : 298,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# Set our CAmkES specific additional link flags\n",
        "Line" : 300,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# Add extra flags specified by the user\n",
        "Line" : 303,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# Only incrementally link if this instance is going on to become part of a\n\n# group.\n\n# TODO: we care about being grouped elsewhere as well. generalize this\n",
        "Line" : 306,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# We need to apply objcopy to each component instance's ELF before we link them\n\n# into a flattened binary in order to avoid symbol collision. Note that when we\n\n# mangle symbols, we use the prefix 'camkes ' to avoid colliding with any\n\n# user-provided symbols.\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Brace yourself. This is going to be a bumpy ride.\n",
        "Line" : 334,
        "CharPositionInLine" : 8
      },
      "48" : {
        "Text" : "# Use a dummy impossible symbol of the empty string here, because\n\n# marking one symbol as 'keep global' causes all others to be demoted\n\n# to local. This allows us to avoid symbol collisions from\n\n# user-provided symbols.\n\n#*/\n",
        "Line" : 336,
        "CharPositionInLine" : 14
      },
      "49" : {
        "Text" : "# Rename the entry point to avoid symbol conflicts when we are\n\n# colocated with other components. Note that we will still use this as\n\n# the entry point.\n\n#*/\n",
        "Line" : 343,
        "CharPositionInLine" : 14
      },
      "50" : {
        "Text" : "# For all 'from' connection ends (calls to unresolved symbols),\n\n# rename the symbols so they will correctly link to the\n\n# implementations provided by the 'to' side.\n\n#*/\n",
        "Line" : 351,
        "CharPositionInLine" : 22
      },
      "51" : {
        "Text" : "# For all 'to' connection ends (implementations of procedures),\n\n# rename the symbols so they will be found during the next\n\n# linking stage. Note we need to mark them as 'keep global' or\n\n# they will not be visible during the next link.\n\n#*/\n",
        "Line" : 362,
        "CharPositionInLine" : 22
      },
      "52" : {
        "Text" : "# Some toolchains insert exception handling infrastructure whether we ask\n\n# for it or not. The preceding `objcopy` step breaks references in\n\n# implicit `.eh_frame`s and friends, which then goes on to cause a linker\n\n# warning. Rather than attempt some complicated gymnastics to repair these\n\n# references, we just strip the exception handling pieces. To further\n\n# complicate the process, some architectures require an `.eh_frame` and\n\n# attempting to remove it causes errors. To handle this we just blindly\n\n# try to remove it and mask errors. We can't do this unconditionally in\n\n# the preceding `objcopy` because it fails when our toolchain has *not*\n\n# inserted exception handling pieces or when we're targeting an\n\n# architecture that requires `.eh_frame`.\n",
        "Line" : 383,
        "CharPositionInLine" : 12
      },
      "53" : {
        "Text" : "# TODO target for dependencies\n",
        "Line" : 401,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# Define the linker we used for instances groups. This is just C linking but without crt objects\n\n# or any other libraries, we just want the flags to generate the correct binary type\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Finally link together the instances in the different groups */\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Find all the instances that are part of this group */\n",
        "Line" : 410,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# Define the copies as objects in case we need to link them into a group and\n\n# we would like cmake to not attempt to compile them\n",
        "Line" : 418,
        "CharPositionInLine" : 12
      },
      "58" : {
        "Text" : "# Use a custom linker definition that will not include crt objects\n",
        "Line" : 428,
        "CharPositionInLine" : 8
      },
      "59" : {
        "Text" : "# Note that we deliberately give groups a\n\n# broken entry point so that, if they are incorrectly loaded without correct\n\n# initial instruction pointers, threads will immediately fault\n",
        "Line" : 430,
        "CharPositionInLine" : 8
      },
      "60" : {
        "Text" : "# Generate our targets up to this point\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# CapDL generation. Aside from depending upon the CAmkES specifications themselves, it\n\n# depends upon the copied instance binaries\n\n# First define the capDL spec generation from CAmkES\n",
        "Line" : 457,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Invoke the parse-capDL tool to turn the CDL spec into a C spec\n",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Ask the CapDL tool to generate an image with our given copied/mangled instances\n",
        "Line" : 469,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Dependency on the C_SPEC and ELFs are added automatically, we just have to add the target\n\n# dependencies\n",
        "Line" : 476,
        "CharPositionInLine" : 8
      },
      "65" : {
        "Text" : "# Generate Isabelle theory scripts if needed\n",
        "Line" : 484,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Base name for Isabelle theories. We derive this from the app name,\n\n# but mangled to ensure that it is a valid identifier.\n",
        "Line" : 486,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# Generated theory names. These must be consistent with the templates.\n",
        "Line" : 490,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# ROOT file\n",
        "Line" : 496,
        "CharPositionInLine" : 4
      },
      "69" : {
        "Text" : "# Generate these theory files as part of overall build\n\n# FIXME: hack?\n",
        "Line" : 500,
        "CharPositionInLine" : 4
      },
      "70" : {
        "Text" : "# Isabelle capDL spec\n",
        "Line" : 504,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "# ADL spec\n",
        "Line" : 518,
        "CharPositionInLine" : 4
      },
      "72" : {
        "Text" : "# CDL refinement proof\n",
        "Line" : 523,
        "CharPositionInLine" : 4
      },
      "73" : {
        "Text" : "# Ensure we generated all the files we intended to, this is just sanity checking\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 74
    },
    "components/components.cmake" : {
      "ObjectId" : "c9e9b6745212e322d9ba7de787d89ed09eda1a73",
      "LastModified" : "2019-02-13T23:58:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2018, Data61\n\n# Commonwealth Scientific and Industrial Research Organisation (CSIRO)\n\n# ABN 41 687 119 230.\n\n#\n\n# This software may be distributed and modified according to the terms of\n\n# the BSD 2-Clause license. Note that NO WARRANTY is provided.\n\n# See \"LICENSE_BSD2.txt\" for details.\n\n#\n\n# @TAG(DATA61_BSD)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# import all available components\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "components/mach/exynos/mach/CMakeLists.txt" : {
      "ObjectId" : "dd4205026899921888db583bbe61c4095c6a3583",
      "LastModified" : "2019-02-13T23:58:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2018, Data61\n\n# Commonwealth Scientific and Industrial Research Organisation (CSIRO)\n\n# ABN 41 687 119 230.\n\n#\n\n# This software may be distributed and modified according to the terms of\n\n# the BSD 2-Clause license. Note that NO WARRANTY is provided.\n\n# See \"LICENSE_BSD2.txt\" for details.\n\n#\n\n# @TAG(DATA61_BSD)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "components/mach/imx/mach/CMakeLists.txt" : {
      "ObjectId" : "4e2af3e1773c0ebf4acf2d17c9eb4723ae73c959",
      "LastModified" : "2019-02-13T23:58:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2018, Data61\n\n# Commonwealth Scientific and Industrial Research Organisation (CSIRO)\n\n# ABN 41 687 119 230.\n\n#\n\n# This software may be distributed and modified according to the terms of\n\n# the BSD 2-Clause license. Note that NO WARRANTY is provided.\n\n# See \"LICENSE_BSD2.txt\" for details.\n\n#\n\n# @TAG(DATA61_BSD)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "components/mach/zynq/mach/CMakeLists.txt" : {
      "ObjectId" : "c18b3cb0062a2d993fc2a076a4fe5dcc68debdba",
      "LastModified" : "2019-02-13T23:58:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2018, Data61\n\n# Commonwealth Scientific and Industrial Research Organisation (CSIRO)\n\n# ABN 41 687 119 230.\n\n#\n\n# This software may be distributed and modified according to the terms of\n\n# the BSD 2-Clause license. Note that NO WARRANTY is provided.\n\n# See \"LICENSE_BSD2.txt\" for details.\n\n#\n\n# @TAG(DATA61_BSD)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "components/plat/pc99/plat/CMakeLists.txt" : {
      "ObjectId" : "60f06c493460810870ebcbad35a9d885754d0495",
      "LastModified" : "2019-02-13T23:58:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2018, Data61\n\n# Commonwealth Scientific and Industrial Research Organisation (CSIRO)\n\n# ABN 41 687 119 230.\n\n#\n\n# This software may be distributed and modified according to the terms of\n\n# the BSD 2-Clause license. Note that NO WARRANTY is provided.\n\n# See \"LICENSE_BSD2.txt\" for details.\n\n#\n\n# @TAG(DATA61_BSD)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "docs/Makefile" : {
      "ObjectId" : "71684f6c30d76eadab2068afcf3a2b45af5fc6af",
      "LastModified" : "2019-02-13T23:58:38Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright 2017, Data61\n\n# Commonwealth Scientific and Industrial Research Organisation (CSIRO)\n\n# ABN 41 687 119 230.\n\n#\n\n# This software may be distributed and modified according to the terms of\n\n# the BSD 2-Clause license. Note that NO WARRANTY is provided.\n\n# See \"LICENSE_BSD2.txt\" for details.\n\n#\n\n# @TAG(DATA61_BSD)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libcamkescakeml/CMakeLists.txt" : {
      "ObjectId" : "8acbccd873ad0e3b74ea90fbbb43d7d7bd1a1dff",
      "LastModified" : "2019-02-13T23:58:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2018, Data61\n\n# Commonwealth Scientific and Industrial Research Organisation (CSIRO)\n\n# ABN 41 687 119 230.\n\n#\n\n# This software may be distributed and modified according to the terms of\n\n# the BSD 2-Clause license. Note that NO WARRANTY is provided.\n\n# See \"LICENSE_BSD2.txt\" for details.\n\n#\n\n# @TAG(DATA61_BSD)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libsel4camkes/CMakeLists.txt" : {
      "ObjectId" : "cd60c85d8dec1331a6692b1b2f9c71a54625e519",
      "LastModified" : "2019-04-15T09:34:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2018, Data61\n\n# Commonwealth Scientific and Industrial Research Organisation (CSIRO)\n\n# ABN 41 687 119 230.\n\n#\n\n# This software may be distributed and modified according to the terms of\n\n# the BSD 2-Clause license. Note that NO WARRANTY is provided.\n\n# See \"LICENSE_BSD2.txt\" for details.\n\n#\n\n# @TAG(DATA61_BSD)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "object_sizes/CMakeLists.txt" : {
      "ObjectId" : "11306d0da50721fa69fe99725469b12badff863d",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2018, Data61\n\n# Commonwealth Scientific and Industrial Research Organisation (CSIRO)\n\n# ABN 41 687 119 230.\n\n#\n\n# This software may be distributed and modified according to the terms of\n\n# the BSD 2-Clause license. Note that NO WARRANTY is provided.\n\n# See \"LICENSE_BSD2.txt\" for details.\n\n#\n\n# @TAG(DATA61_BSD)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 12,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1110
}