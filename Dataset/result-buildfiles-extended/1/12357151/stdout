{
  "Repository" : "12357151",
  "Revision" : "HEAD",
  "ObjectId" : "9dfd390912a0d16cadc55cf6d89f51435ee827b7",
  "CommitTime" : "2019-04-15T21:33:29Z",
  "Files" : {
    "pcommon/CMakeLists.txt" : {
      "ObjectId" : "d41425cf90736893aa0938bda049871a25c64a90",
      "LastModified" : "2019-01-25T01:58:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# FILE         :  CMakeLists.txt\n\n#\n\n# COPYRIGHT    :  Yakov Markovitch, 2014-2018\n\n#                 See LICENSE for information on usage/redistribution.\n\n#\n\n# DESCRIPTION  :  CMake script for building pcommon library\n\n#\n\n# PROGRAMMED BY:  Yakov Markovitch\n\n# CREATION DATE:  29 Aug 2014\n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We have some custom .cmake scripts in pcommon/config\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n# Platform sources subdirectory\n\n################################################################################\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++14 required\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "pcommon/config/Findcppunit.cmake" : {
      "ObjectId" : "7fb99c5dff95b5696965cbfecf96803d55f9f97b",
      "LastModified" : "2017-03-21T13:08:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find cppunit includes and library\n\n#\n\n# This module defines\n\n#  cppunit_INCLUDE_DIRS\n\n#  cppunit_LIBRARIES, the libraries to link against to use cppunit.\n\n#  cppunit_LIBRARY_DIRS, the location of the libraries\n\n#  cppunit_FOUND, If false, do not try to use cppunit\n\n#\n\n# Copyright Â© 2007, Matt Williams\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Windows\n",
        "Line" : 16,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : "#Unix\n",
        "Line" : 35,
        "CharPositionInLine" : 9
      },
      "3" : {
        "Text" : "#Do some preparation\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "pcommon/config/Findlibdw.cmake" : {
      "ObjectId" : "eabd08daed1132fd52b9e0218183f45ca6f64c33",
      "LastModified" : "2017-09-13T18:54:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find libdw, the elfutils' suite library for handling DWARF debugging format\n\n#\n\n#  LIBDW_FOUND       - system has libdw development package\n\n#  LIBDW_INCLUDE_DIR - the libdw include directory\n\n#  LIBDW_LIBRARIES   - Link these to use libdw\n\n#  LIBDW_DEFINITIONS - Compiler switches required for using libdw\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Show the LIBDW_INCLUDE_DIR and LIBDW_LIBRARIES variables only in the advanced view\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "pcommon/config/Findlibelf.cmake" : {
      "ObjectId" : "06f5550c699548a63d8dd26a0f0ccf18c03cfc6d",
      "LastModified" : "2017-09-18T09:46:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libelf\n\n# Once done this will define\n\n#\n\n#  LIBELF_FOUND - system has libelf\n\n#  LIBELF_INCLUDE_DIRS - the libelf include directory\n\n#  LIBELF_LIBRARIES - Link these to use libelf\n\n#  LIBELF_DEFINITIONS - Compiler switches required for using libelf\n\n#\n\n#  Copyright (c) 2008 Bernhard Walle <bernhard.walle@gmx.de>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBELF_FOUND to TRUE if all listed variables are TRUE\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "pcommon/config/Findlibunwind.cmake" : {
      "ObjectId" : "5324c0137ed2e856f02ea7dd760f7251c0b34400",
      "LastModified" : "2017-09-18T09:46:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libunwind\n\n#\n\n#  LIBUNWIND_FOUND - system has libunwind\n\n#  LIBUNWIND_INCLUDE_DIR - the libunwind include directory\n\n#  LIBUNWIND_LIBRARIES - Link these to use libunwind\n\n#  LIBUNWIND_DEFINITIONS - Compiler switches required for using libunwind\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# show the LIBUNWIND_INCLUDE_DIR and LIBUNWIND_LIBRARIES variables only in the advanced view\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "pcommon/config/pcommon.cmake" : {
      "ObjectId" : "eed2a07dff8f5cef19f501793b56eb944f87aaac",
      "LastModified" : "2018-10-01T19:55:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# FILE         :  pcommon.cmake\n\n# COPYRIGHT    :  Yakov Markovitch, 2014-2016\n\n#                 See LICENSE for information on usage/redistribution.\n\n#\n\n# DESCRIPTION  :  pcommon CMake module implementing various basic CMake utilities\n\n#\n\n# PROGRAMMED BY:  Yakov Markovitch\n\n# CREATION DATE:  5 Sep 2014\n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do not implicitly dereference IF arguments corresponding to variables.\n\n# Dereference variables only explicitly, like ${VAR}\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n# set_global(var)\n\n# Force setting CACHE INTERNAL (\"global\") variable ${var}\n\n# If no value specified, delete ${var} from the cache\n\n################################################################################\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################################################\n\n# A family for set manipulation macros\n\n# set_diff\n\n# set_union\n\n################################################################################\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Hack: create a local variable in a macro scope\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "################################################################################\n\n# Join elements of list ${var} into a string using ${delim} delimiter and assign\n\n# the result to ${var}\n\n# Does not attempt to remove duplicate arguments already existing in ${var}.\n\n################################################################################\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "################################################################################\n\n# Add arguments not found in ${var} to the end of ${var}\n\n# Does not attempt to remove duplicate arguments already existing in ${var}.\n\n################################################################################\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create a separated list of the arguments\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "################################################################################\n\n# Print all defined variables (debugging macro)\n\n################################################################################\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "################################################################################\n\n# Adds generated file target <target> by copying <source> file to the <target> file\n\n# and substituting variable values referenced as @VAR@ in the input file content.\n\n#\n\n# Each variable reference will be replaced with the current value of the variable,\n\n# or the empty string if the variable is not defined.\n\n#\n\n# The path to the <source> is relative to CMAKE_CURRENT_SOURCE_DIR.\n\n# The path to the <target> is relative to CMAKE_CURRENT_BINARY_DIR.\n\n################################################################################\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "################################################################################\n\n# CMake does not allow linking OBJECT libraries for usage requirements\n\n################################################################################\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "################################################################################\n\n# Recursively get interface libraries\n\n################################################################################\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "################################################################################\n\n#\n\n# Global variables\n\n#\n\n################################################################################\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "################################################################################\n\n# Portable C/C++ compiler options\n\n################################################################################\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "################################################################################\n\n# Portable COMMAND arguments for using in add_custom_command and execute_process\n\n################################################################################\n\n# cmake\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# mv from to\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# cp from to\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# rm file1 [file2 ...]\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# echo\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# echo -n (no endline)\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# cat file\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "################################################################################\n\n# Unittest handling\n\n################################################################################\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "################################################################################\n\n# unittest(<name>\n\n#          [SOURCES [source1...]]\n\n#          [LIBS [lib1...]]\n\n#          [DEFS [def1...]]\n\n#          [OPTS [opt1...]])\n\n#\n\n# Add an executable unittest target called <name>.\n\n# The target is built:\n\n#   - from <name>.cpp if there are no [source1 ...] files specified or\n\n#   - from the source files listed in the command invocation.\n\n#\n\n# unittest(foo) builds executable target foo from source file foo.cpp\n\n#\n\n# unittest(foo SOURCES bar.cpp quux.cpp) builds executable target foo from sources\n\n# bar.cpp and quux.cpp\n\n#\n\n# Use set_project_link_libraries() to specify libraries and build requirements\n\n# for _all_ the unittests in the project directory.\n\n################################################################################\n\n#\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# No options\n\n# No one_value_keywords\n",
        "Line" : 270,
        "CharPositionInLine" : 7
      },
      "24" : {
        "Text" : "# Unittest executable\n",
        "Line" : 295,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# All unittests depend on pcommon and cppunit libraries\n",
        "Line" : 298,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "################################################################################\n\n# add_adhoc_executable(<name> [source1 ...])\n\n#\n\n# Add an executable target called <name>, built from <name>.cpp\n\n#\n\n# Use set_project_link_libraries() to specify libraries and build requirements\n\n# for _all_ the ad-hoc executables in the project directory.\n\n################################################################################\n\n#\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Unittest executable\n",
        "Line" : 374,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# All unittests depend on pcommon and cppunit libraries\n",
        "Line" : 377,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "################################################################################\n\n# set_project_link_libraries([library-target-1 ...])\n\n#\n\n# Specify libraries to use when linking all targets specified by unitest() or\n\n# add_adhoc_executable() for the project directory the set_project_link_libraries()\n\n# is called in.\n\n#\n\n# Since usage requirements from linked library targets are propagated and affect\n\n# compilation of target sources, it is possible to set common build requirements\n\n# through INTERFACE-only \"libraries\".\n\n################################################################################\n\n#\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Apply requirements specified by set_project_link_libraries\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# No options\n\n# No one_value_keywords\n",
        "Line" : 408,
        "CharPositionInLine" : 11
      },
      "32" : {
        "Text" : "#\n\n# Prepare\n\n#\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "pcommon/config/put_status.cmake" : {
      "ObjectId" : "df625c3992587d5eb1d1559e9484050513a8102f",
      "LastModified" : "2017-09-18T09:46:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Do not implicitly dereference IF arguments corresponding to variables.\n\n# Dereference variables only explicitly, like ${VAR}\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "pcommon/unittests/CMakeLists.txt" : {
      "ObjectId" : "ccda59b0ea61be91b7811db41458a1f2ec76e14b",
      "LastModified" : "2019-03-29T20:34:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# FILE         :  CMakeLists.txt\n\n# COPYRIGHT    :  Yakov Markovitch, 2014-2018\n\n#                 See LICENSE for information on usage/redistribution.\n\n#\n\n# DESCRIPTION  :  pcommon unittests build script\n\n#\n\n# PROGRAMMED BY:  Yakov Markovitch\n\n# CREATION DATE:  11 Sep 2014\n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test cfgparser first, to ensure diagnostics log configuration is functioning properly\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test test the most basic functionality used throughout the library\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Test the library\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#unittest(unittest_smartptr)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#unittest(unittest_cdsqueue)\n\n#unittest(unittest_cdscrq)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "pcommon/unittests/unittest.cmake" : {
      "ObjectId" : "d31df81e6ecb00acdecbba24ddbbf43aa6d66f39",
      "LastModified" : "2017-09-18T09:46:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##*/}\n",
        "Line" : 4,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 1
    },
    "pcomn_cmdline/CMakeLists.txt" : {
      "ObjectId" : "f3710cc47c69937f0739346d9e2ab64c52f2ee8d",
      "LastModified" : "2017-11-29T19:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# FILE         :  CMakeLists.txt\n\n# COPYRIGHT    :  Yakov Markovitch, 2017\n\n#                 See LICENSE for information on usage/redistribution.\n\n#\n\n# DESCRIPTION  :  pcomn_cmdline library build script\n\n# PROGRAMMED BY:  Yakov Markovitch\n\n# CREATION DATE:  29 Nov 2017\n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "pcomn_net/CMakeLists.txt" : {
      "ObjectId" : "84101c26e610f62d13ab274895fe508382cc3f0e",
      "LastModified" : "2017-09-18T09:46:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# FILE         :  CMakeLists.txt\n\n# COPYRIGHT    :  Yakov Markovitch, 2014-2016\n\n#                 See LICENSE for information on usage/redistribution.\n\n#\n\n# DESCRIPTION  :  netreach library build script\n\n#\n\n# PROGRAMMED BY:  Yakov Markovitch\n\n# CREATION DATE:  8 Sep 2014\n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "pcomn_shell/CMakeLists.txt" : {
      "ObjectId" : "c7e859f27df9f9f58535e4f27b56f08bf684a70c",
      "LastModified" : "2018-04-11T17:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# FILE         :  CMakeLists.txt\n\n# COPYRIGHT    :  Yakov Markovitch, 2017\n\n#                 See LICENSE for information on usage/redistribution.\n\n#\n\n# DESCRIPTION  :  pcomn_cmdline library build script\n\n# PROGRAMMED BY:  Yakov Markovitch\n\n# CREATION DATE:  29 Nov 2017\n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 12
  },
  "ElapsedTime" : 1152
}