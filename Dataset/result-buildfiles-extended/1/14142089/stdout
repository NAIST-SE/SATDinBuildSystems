{
  "Repository" : "14142089",
  "Revision" : "HEAD",
  "ObjectId" : "16760e834b0942129bc34e706080fcec9ed9469e",
  "CommitTime" : "2019-04-16T22:16:05Z",
  "Files" : {
    "CMake/BeginEndNamespace.cmake" : {
      "ObjectId" : "51d65874deef43771cd4d2e5856e5afd46c17197",
      "LastModified" : "2013-11-19T14:25:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A macro to turn a string specifying a namespace\n\n# into strings that open and close the namespace.\n\n# Example:\n\n#   begin_end_namespace(\"std\" BEGIN_NS END_NS)\n\n# will set BEGIN_NS to \"namespace std {\"\n\n# and END_NS to \"} /* namespace std */\".\n\n#\n\n# This macro handles the case of nested namespaces\n\n# such as std::tr1.\n\n#\n\n# Leading and trailing double-colons are not allowed.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/CheckCopyright.cmake" : {
      "ObjectId" : "6639f922faca83b3171f454ca898b3fd35842bca",
      "LastModified" : "2018-09-27T13:45:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##=============================================================================\n\n##\n\n##  Copyright (c) Kitware, Inc.\n\n##  All rights reserved.\n\n##  See LICENSE.txt for details.\n\n##\n\n##  This software is distributed WITHOUT ANY WARRANTY; without even\n\n##  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n##  PURPOSE.  See the above copyright notice for more information.\n\n##\n\n##=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## This CMake script checks source files for the appropriate copyright\n\n## statement, which is stored in:\n\n## smtk_SOURCE_DIR/CMake/CopyrightStatement.txt\n\n## To run this script, execute CMake as follows:\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Escapes ';' characters (list delimiters) and splits the given string into\n\n# a list of its lines without newlines.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Read in copyright statement file.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remove trailing whitespace and ending lines.  They are sometimes hard to\n\n# see or remove in editors.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get a list of lines in the copyright statement.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Comment regular expression characters that we want to match literally.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Print an error concerning the missing copyright in the given file.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Condition the copyright statement\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Check the given file for the appropriate copyright statement.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Read in the first 2000 characters of the file and split into lines.\n\n# This is roughly equivalent to the file STRINGS command except that we\n\n# also escape semicolons (list separators) in the input, which the file\n\n# STRINGS command does not currently do.\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Check each copyright line.\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# My original algorithm tried to check the order by removing items from\n\n# header_lines as they were encountered.  Unfortunately, CMake 2.8's\n\n# list REMOVE_AT command removed the escaping on the ; in one of the\n\n# header_line's items and cause the compare to fail.\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 13
    },
    "CMake/Conda.cmake" : {
      "ObjectId" : "d6094e40e9696f582ddb385ac88d84d196d1ab39",
      "LastModified" : "2018-10-22T15:24:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For packaging by conda-build\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# For developer builds\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Ignore problems linking executable tests\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/CondaToolchain.cmake" : {
      "ObjectId" : "2eb5d4a980003c0c1d648c3b00d964b2117895ec",
      "LastModified" : "2018-10-22T15:24:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/EncodeStringFunctions.cmake" : {
      "ObjectId" : "3a807d439d14186638404a487c6a288f9115d6af",
      "LastModified" : "2018-10-22T15:24:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Given a string representing an XML file, extract all of the include items and\n\n# replace them with the contents of the file being included.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# First, grab all of the xml elements describing included files\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# For each xml element...\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# ...extract the attribute with the include file name...\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# ...and extract the substring that contains the bare file name.\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Locate the included file so we can expand it. Check the list of include\n\n# directories, but do not use find_file() as that caches results.\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# If we cannot locate the include file, leave the include directive in the\n\n# xml description.\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Read the dependency file\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Add the file name to the list of included files\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Recursively expand the dependency xml string\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Pop the file name\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Replace the include element with the contents of the included file.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Example:\n\n#   configureFileAsCVariable(\"foo.xml\" \"bar.cxx\" \"operatorSpec\")\n\n# would read \"foo.xml\", escape it as a C string, and write the\n\n# assigment:\n\n#   static const char operatorSpec[] = \"...\";\n\n# into bar.cxx (where \"...\" is the encoded contents of \"foo.xml\").\n\n#\n\n# When srcFileName does not exist, then dstFileName will be\n\n# removed so that missing files are more easily spotted.\n\n# Note that since this configuration is done when CMake runs\n\n# you must re-run CMake in order to regenerate the file.\n\n#\n\n# The dstFileName file will not be overwritten unless the encoded\n\n# string or variable name differs, in order to avoid recompiling\n\n# dependent files unneccessarily.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Example:\n\n#   configureFileAsPyVariable(\"foo.xml\" \"bar.py\" \"operatorSpec\")\n\n# would read \"foo.xml\" and write the assigment:\n\n#   operatorSpec = '''\n\n#   ...\n\n#   '''\n\n# into bar.py (where \"...\" is the encoded contents of \"foo.xml\").\n\n#\n\n# When srcFileName does not exist, then dstFileName will be\n\n# removed so that missing files are more easily spotted.\n\n# Note that since this configuration is done when CMake runs\n\n# you must re-run CMake in order to regenerate the file.\n\n#\n\n# The dstFileName file will not be overwritten unless the encoded\n\n# string or variable name differs, in order to avoid recompiling\n\n# dependent files unneccessarily.\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "CMake/FindDocutils.cmake" : {
      "ObjectId" : "3ab9d054fa3c046315e2b904a56a30a5486b9d85",
      "LastModified" : "2018-10-22T15:24:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2013 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n# names, trademarks, service marks, or product names of the Licensor\n\n# and its affiliates, except as required to comply with Section 4(c) of\n\n# the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find the restructured text to HTML converter\n\n#\n\n# Once done this will define\n\n#\n\n# DOCUTILS_FOUND - System has Docutils\n\n#\n\n# RST2HTML_EXECUTABLE\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find the version\n\n#message(\"RST2HTML_EXECUTABLE: ${RST2HTML_EXECUTABLE}\")\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(\"VERSION_STRING \\\"${VERSION_STRING}\\\"\")\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# ex : rst2html (Docutils 0.6 [release], Python 2.6.6, on linux2)\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# isolate the 3rd. word in the string\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# remove white space\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#message(\"VERSION_STRING ${VERSION_STRING}\")\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# If Docutils version fails, explicitly unset RST2HTML_EXECUTABLE\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "CMake/FindHashFunctor.cmake" : {
      "ObjectId" : "60b2dd52776723fed879415ab148007c4a42b173",
      "LastModified" : "2018-10-22T15:24:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This sets the 5 variable names passed to\n\n# values which identify where hash<X> lives\n\n# on your system and how to specialize it\n\n# to compute hashes of your own class instances.\n\n#\n\n# HASH_FUN_H - the header file containing hash<X>\n\n# HASH_FUN_NAMESPACE - the namespace containing hash<X>\n\n# BEGIN_HASH_NS - C++ code to open the namespace\n\n# END_HASH_NS - C++ code to close the namespace\n\n# HASH_SPECIALIZATION - \"1\" or \"2\" depending on how\n\n#    hash should be specialized (see below).\n\n#\n\n# When HASH_SPECIALIZATION is 1 (STRUCT), you should specialize like so:\n\n#     #include ${HASH_FUN_H}\n\n#     class foo {\n\n#     };\n\n#\n\n#     ${BEGIN_HASH_NS}\n\n#       template<>\n\n#       struct hash<foo> {\n\n#         size_t operator() (const foo& f)\n\n#         { return /*something*/; }\n\n#       };\n\n#     ${END_HASH_NS}\n\n#\n\n# When HASH_SPECIALIZATION is 2 (CAST), you should specialize like so:\n\n#    #include ${HASH_FUN_H}\n\n#    class foo {\n\n#    };\n\n#\n\n#    ${BEGIN_HASH_NS}\n\n#      template<>\n\n#      inline size_t hash<foo>::operator() (foo f)\n\n#        { return 0; }\n\n#\n\n#      template<>\n\n#      inline size_t hash<const foo&>::operator() (const foo& f)\n\n#        { return 0; }\n\n#    ${END_HASH_NS}\n\n#\n\n# Note that in case 2 (CAST), you must provide both <foo> and\n\n# <const foo&> specializations.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(\"Tried ${CMAKE_CURRENT_BINARY_DIR}/_cmHashFun${_tmpf}.cxx got ${HASH_SPECIALIZATION_IS_STRUCT} ${_result}\")\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# (NOT HASH_SPECIALIZATION_IS_STRUCT)\n",
        "Line" : 103,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 3
    },
    "CMake/FindPVPythonEnvironment.cmake" : {
      "ObjectId" : "64a79d83d094c924be5a0e7c5f02c5c3872f0e29",
      "LastModified" : "2018-10-22T15:24:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find paraview\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# On some operating systems and in certain configurations, ParaView creates a\n\n# launcher for each of its executables. The launcher is responsible for setting\n\n# up the appropriate environment and then launching the real executable. When a\n\n# launcher is not available, it is likely because the rpath for the real\n\n# executable has been set to accomplish the task of configuring the environment.\n\n# We first check if ParaView has a launcher for pvpython, and fall back to using\n\n# the real pvpython.\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Access the location of ParaView's pvpython\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Execute a python script that prints the correct PYTHONPATH for ParaView.\n\n#\n\n# NOTE: pvpython currently outputs to standard error. As a workaround, we\n\n# capture both standard out and standard error for PYTHONPATH (at least one of\n\n# them should be right!).\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ParaView may have a verbose input. We search from the end of the output stream\n\n# for the keyword \"PARAVIEW_PYTHONPATH=\" and take the rest of the output up to a\n\n# newline character as ParaView's python path.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/FindSphinx.cmake" : {
      "ObjectId" : "d676f0dc8472c8fa8ef2e5def3ee6544a359bd75",
      "LastModified" : "2018-12-20T18:00:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - This module looks for Sphinx\n\n# Find the Sphinx documentation generator\n\n#\n\n# This modules defines\n\n# SPHINX_EXECUTABLE\n\n# SPHINX_FOUND\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindSymbolInHeaderNamespace.cmake" : {
      "ObjectId" : "cf47e8cce9cd8fb67ce387ed30fca963c5b1f068",
      "LastModified" : "2018-10-22T15:24:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find_symbol_in_header_namespace(\n\n#  HEADER_OUT NAMESPACE_OUT\n\n#  \"CODE\" SNIPPET_IN\n\n#  \"HEADERS\" HEADERS_IN\n\n#  \"NAMESPACES\" NAMESPACES_IN\n\n#  \"SUMMARY\" SUMMARY_IN)\n\n#\n\n# Search for a header file that will allow ${SNIPPET_IN} to compile.\n\n# Each header in the HEADERS_IN list is considered. If found, then\n\n# attempts will be made to compile SNIPPET_IN after including that header.\n\n# The first successful compilation terminates the search.\n\n#\n\n# The code SNIPPET_IN may contain the word NAMESPACE, which will be\n\n# replaced with one of the entries in NAMESPACES_IN using a preprocessor\n\n# macro until the snippet compiles or the list is exhausted.\n\n#\n\n# The snippet may prove compilable in several namespaces, so this macro\n\n# returns two values *and* sets them as CACHE variables:\n\n#   HEADER_OUT    - The name of the header file which allows the snippet to compile.\n\n#   NAMESPACE_OUT - The namespace (including \"::\") which allows the snippet to compile.\n\n#\n\n# Note that if ${HEADER_OUT} is already a non-empty string, the test is not run.\n\n# Upon return, if a combination of header and namespace were identified,\n\n# then cache variables for HEADER_OUT and NAMESPACE_OUT will be set.\n\n#\n\n# The SUMMARY_IN value is used for informational messages and in the\n\n# descriptions of the cache variables.\n\n#\n\n# Example:\n\n#    find_symbol_in_header_namespace( HASH_FUN_H HASH_FUN_NAMESPACE\n\n#      CODE\n\n#        \"int h = NAMESPACE hash<int>()(42);\"\n\n#      HEADERS\n\n#        \"functional\"\n\n#        \"tr1/functional\"\n\n#        \"ext/hash_fun.h\"\n\n#        \"ext/stl_hash_fun.h\"\n\n#        \"hash_fun.h\"\n\n#        \"stl_hash_fun.h\"\n\n#        \"stl/_hash_fun.h\"\n\n#      NAMESPACES\n\n#        \"\"\n\n#        \"std\"\n\n#        \"stdext\"\n\n#        \"__gnu_cxx\"\n\n#      SUMMARY \"hash\")\n\n# This example will set CACHE variables HASH_FUN_H and HASH_FUN_NAMESPACE\n\n# to \"ext/hash_fun.h\" and \"__gnu_cxx\" (respectively) on OS X 10.8;\n\n# to \"functional\" and \"std\" (respectively) on OS X 10.9;\n\n# and so on for each platform where \"hash\" is provided by one of the HEADERS\n\n# in one of the listed NAMESPACES.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Require names for output variables\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Now, only try to find the symbol if the header is *not* defined\n\n# in the cache. Done in order to save time, which could be expensive\n\n# as there could be many TRY_COMPILE calls.\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#message(\"Tried ${_inc} with ${_ns} result ${_found_symbol_ns} \")\n\n#message(\"Tried ${_inc} with ${_ns} result ${_found_symbol_ns}   \\\"${_result}\\\"\")\n",
        "Line" : 88,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 4
    },
    "CMake/Function.cmake" : {
      "ObjectId" : "d763fa4acaedffb9fecd762f9eaa538db562e85e",
      "LastModified" : "2018-10-22T15:24:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This function will determine which namespace\n\n# to pull the C++-11 \"function\", \"bind\", and\n\n# \"placeholders\" functionality from.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# unsets ${found}\n",
        "Line" : 79,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 2
    },
    "CMake/SMTKCoverage.cmake" : {
      "ObjectId" : "094322d10ff56ce145708cc078b58fe349a90f2b",
      "LastModified" : "2018-10-22T15:24:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=========================================================================\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.  See the above copyright notice for more information.\n\n#\n\n#=========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This code has been adapted from remus (https://gitlab.kitware.com/cmb/remus)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Add option for enabling gcov coverage\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#We're setting the CXX flags and C flags beacuse they're propagated down\n\n#independent of build type.\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "CMake/SMTKMacros.cmake" : {
      "ObjectId" : "6b881fdfe91a1b72179bf1a617075608109ac09b",
      "LastModified" : "2018-10-22T15:24:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=========================================================================\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.  See the above copyright notice for more information.\n\n#\n\n#=========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Utility to build a kit name from the current directory.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Optional second argument to get dir_prefix.\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Computes the name for the header Test Build cxx file given a header file. If\n\n# the operating system is Windows and if the include path is too long, a hash of\n\n# the path is used in the cxx name.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Builds a source file and an executable that does nothing other than\n\n# compile the given header files.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#    set(src ${CMAKE_CURRENT_BINARY_DIR}/TestBuild_${name}_${headername}${suffix})\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# target_link_libraries(TestBuild_${name} sysTools)\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#include the build directory for the export header\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#also link against the associated library so we build properly\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Declare a list of header files.  Will make sure the header files get\n\n# compiled and show up in an IDE. Also makes sure we install the headers\n\n# into the include folder\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Declare a list of header files.  Will make sure the header files get\n\n# compiled and show up in an IDE.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Declare a library as needed to be installed\n\n# supports the signature\n\n#  smtk_install_library(target [DEPENDS <targets>])\n\n# which allows you to export a target that has dependencies\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#generate an export header and create an install target for it\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Builds a source file and an executable that does nothing other than\n\n# compile the given header files.\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Builds source groups for the smtk files so that they show up nicely in\n\n# Visual Studio.\n\n# this function will set also set two variable in the parent scope.\n\n# they will be ${source_dir}Srcs and ${source_dir}Headers. So for\n\n# example if you call smtk_source_group(model) we will set the vars:\n\n#   modelSrcs and modelHeaders\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# create implementation for a new ui view interface\n\n# ADD_SMTK_UI_VIEW(\n\n#    OUTIFACES\n\n#    OUTSRCS\n\n#    CLASS_NAME classname\n\n#    [VIEW_NAME viewname]\n\n#\n\n#  CLASS_NAME: is the name of the class that implements a qtBaseView\n\n#  VIEW_NAME: option to a name of the view which will be registered to ui-manager\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "CMake/SMTKOperationXML.cmake" : {
      "ObjectId" : "048336f78a004b3b411b949b63da8588c5b486cd",
      "LastModified" : "2018-10-22T15:24:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Given a list of filenames (opSpecs) containing XML descriptions of\n\n# operations, configure C++ source that encodes the XML as a string.\n\n# Includes in the xml that resolve to accessible files are replaced by\n\n# the injection of the included file's contents. Query paths for included\n\n# files are passed to this macro with the flag INCLUDE_DIRS.\n\n# The resulting files are placed in the current binary directory and\n\n# appended to genFiles.\n\n# smtk_operation_xml(\n\n#   <xml> <output_variable>\n\n#   INCLUDE_DIRS <path_to_include_directories>\n\n#   )\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Given a list of filenames (opSpecs) containing XML descriptions of\n\n# operations, configure Python source that encodes the XML as a string.\n\n# Includes in the xml that resolve to accessible files are replaced by\n\n# the injection of the included file's contents. Query paths for included\n\n# files are passed to this macro with the flag INCLUDE_DIRS.\n\n# The resulting files are placed in the current binary directory and\n\n# appended to genFiles.\n\n# smtk_pyoperation_xml(\n\n#   <xml> <output_variable>\n\n#   INCLUDE_DIRS <path_to_include_directories>\n\n#   )\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/SMTKPluginMacros.cmake" : {
      "ObjectId" : "cf957e6b2c010aceb9ef51dc38caaddc5038b213",
      "LastModified" : "2019-03-06T21:56:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=========================================================================\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.  See the above copyright notice for more information.\n\n#\n\n#=========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SMTK plugins are extensions of ParaView plugins that allow for the automatic\n\n# registration of components to SMTK managers. They are created using the\n\n# function \"add_smtk_plugin\", which requires the developer to explicitly list\n\n# a registration class \"known as a Registrar\" and a list of SMTK manager types\n\n# to which the plugin registers. SMTK plugins can be introduced to a\n\n# ParaView-based application in several ways. The consuming project can\n\n#\n\n# 1) list the plugins in a configuration file that is subsequently read at\n\n# runtime, deferring the inclusion of plugins to the application's runtime. This\n\n# approach requires plugins to reside in certain locations that the application\n\n# is expected to look, but facilitates the presentation of a plugin to the user\n\n# without automatically loading the plugin. For this approach, a consuming\n\n# project can call \"generate_smtk_plugin_config_file\" to convert the list of\n\n# smtk plugin targets (which can be a part of the project or imported from\n\n# another project) described by the global property \"SMTK_PLUGINS\" into a\n\n# configuration file. The consuming project can also\n\n#\n\n# 2) directly link plugins into the application. This approach pushes the\n\n# requirement of locating plugins to be a build-time dependency, which can be\n\n# advantageous for packaging. Plugins that are directly linked to an application\n\n# cannot be disabled, however (i.e. the target property ENABLED_BY_DEFAULT is\n\n# ignored, as it is true for all plugins). To use this approach, a consuming\n\n# project can call \"generate_smtk_plugin_library\" to to use the list of smtk\n\n# plugin targets (which can be a part of the project or imported from another\n\n# project) described by the global property \"SMTK_PLUGINS\" to generate a library\n\n# against which the application can link to directly incorporate the associated\n\n# plugins.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Enable an SMTK plugin by default\n\n#\n\n# enable_smtk_plugin_by_default(target choice)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Append a property to the plugin target that conveys whether or not the\n\n# plugin should be loaded by default\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Mark the property for export (so consuming libraries can access it)\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# create a plugin\n\n#  ENABLED_BY_DEFAULT is an option to indicate whether or not the plugin should\n\n#    be loaded by default. This only applies when plugins are loaded via a\n\n#    plugin list at runtime (as opposed to directly linking to plugins).\n\n#  REGISTRAR is used to register the plugin\n\n#  REGISTRAR_HEADER is the include file for the registrar (if unset, a file name\n\n#    is inferred from the REGISTRAR value)\n\n#  MANAGERS is a list of managers to which the plugin can register\n\n#  LIBRARIES is a list of libraries against which the plugin must link\n\n#  LIBRARIES_PRIVATE is a list of libraries against which the plugin must\n\n#    privately link\n\n#\n\n#  All other arguments are forwarded to add_paraview_plugin()\n\n#\n\n# add_smtk_plugin(Name Version\n\n#     [ENABLED_BY_DEFAULT]\n\n#     [REGISTRAR registrar]\n\n#     [REGISTRAR_HEADER headerfile]\n\n#     [MANAGERS list of managers used]\n\n#     [LIBRARIES list of required libraries]\n\n#     [LIBRARIES list of required private libraries]\n\n#  )\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# We need to add the current value of VTK_MODULES_DIR to the module path\n\n# so that when the plugins are built all the modules can be found. Otherwise,\n\n# modules that aren't loaded as direct dependencies of CMB modules will\n\n# not be found.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# create a plugin config file including all of the plugins generated by this\n\n# project.\n\n#  PLUGIN_CONFIG_FILE_NAME is the name of the file to create\n\n#  RELATIVE_DIRECTORY is a directory relative to which plugin locations should\n\n#    be described.\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# create a library that directly links smtk plugins into a consuming\n\n# application. The function creates a library target ${PLUGIN_LIBRARY_TARGET}\n\n# and two header files (defined at parent scope in the list\n\n# ${${PLUGIN_LIBRARY_TARGET}_HEADERS}). All targets contained in the\n\n# ${SMTK_PLUGINS} list will be linked into the target library, and these plugins\n\n# can be loaded by a consuming application by including the generated header\n\n# file Initialize${PLUGIN_LIBRARY_TARGET}.h and by calling the generated methods\n\n# smtk::extension::paraview::initialize${PLUGIN_LIBRARY_TARGET}() and\n\n# smtk::extension::paraview::load${PLUGIN_LIBRARY_TARGET}().\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# We need to add the current value of VTK_MODULES_DIR to the module path\n\n# so that when the plugins are built all the modules can be found. Otherwise,\n\n# modules that aren't loaded as direct dependencies of CMB modules will\n\n# not be found.\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Construct fields to populate the generated source files for the plugin\n\n# library.\n",
        "Line" : 190,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Generate a unique export symbol for the plugin library.\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Generate the header file that declares the two methods defined in the plugin\n\n# library.\n",
        "Line" : 202,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Generate the source file that implements the abovementioned methods.\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Include the components from ParaView necessary for directly linking plugins\n\n# into an application.\n",
        "Line" : 211,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Construct the library.\n",
        "Line" : 218,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# During the build phase, include the binary directory that contains the\n\n# generated header file.\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Link against all of the smtk plugins.\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Generate an export header using the symbol defined in\n\n# ${SMTK_PLUGIN_LIBRARY_EXPORT}.\n",
        "Line" : 233,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Construct a list of generated headers for the plugin library that is\n\n# accessible at parent scope. That way, consuming applications can install\n\n# these header files where appropriate.\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 20
    },
    "CMake/SMTKPluginTestingMacros.cmake" : {
      "ObjectId" : "c1f5c6c5509c4b1dd49ee36d1024a0728466a1b7",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=========================================================================\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.  See the above copyright notice for more information.\n\n#\n\n#=========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# smtk_test_plugin <plugin_file>\n\n#\n\n# add a test that builds and tests the smtk plugin as described in the test\n\n# plugin file.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If on Windows, force response file usage. The command line gets way too long\n\n# on Windows without this. Once VTK_USE_FILE and PARAVIEW_USE_FILE are gone,\n\n# this can be removed.\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Create a testing directory for the plugin based off of its hashed file name.\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Set up a source directory for the plugin.\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Set up a build directory for the plugin.\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Download the contract file into the source directory.\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Check result for success\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Derive a test name from the contract file name.\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Add a test that builds and tests the plugin, but does not install it.\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# If on Windows, pass the environment PATH to the test.\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# We need to add this smtk's binary directory to the path so the plugin\n\n# tests can find our newly built SMTK binaries.\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# We need to escape semicolons so they won't be erased from the path when\n\n# resolved by the test's cmake instance.\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Finally, append the path to the test's environment.\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# On all operating systems we pass the environment PYTHONPATH to the test.\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# We need to add this smtk's build directory to the pythonpath so the plugin\n\n# tests can find our newly built SMTK python modules.\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# We need to escape semicolons so they won't be erased from the pythonpath\n\n# when resolved by the test's cmake instance.\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Finally, append the pythonpath to the test's environment.\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "CMake/SMTKTestingMacros.cmake" : {
      "ObjectId" : "8fd062035fd647927db7b2413f1348be14a91281",
      "LastModified" : "2019-02-05T14:33:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Declare unit tests Usage:\n\n#\n\n# smtk_unit_tests(\n\n#   LABEL <prefix for all unit tests>\n\n#   SOURCES <test_source_list>\n\n#   SOURCES_REQUIRE_DATA <test_sources_that_require_SMTK_DATA_DIR>\n\n#   EXTRA_SOURCES <helper_source_files>\n\n#   LIBRARIES <dependent_library_list>\n\n#   )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#no sources don't make a target\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#we use UnitTests_ so that it is an unique key to exclude from coverage\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "CMake/resource-manager-state.cmake" : {
      "ObjectId" : "73459080f6f2bfa7a1f94e6d2b0c8358110ae85a",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is provided with SMTK as an example of how to configure a plugin\n\n# contract file. In general, SMTK should not contain these files. Instead, the\n\n# dashboard computer that runs SMTK tests should be passed a list of URLs for\n\n# plugin contract test files during its configuration.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If on Windows, force response file usage. The command line gets way too long\n\n# on Windows without this. Once VTK_USE_FILE and PARAVIEW_USE_FILE are gone,\n\n# this can be removed.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/smtkVTKModules.cmake" : {
      "ObjectId" : "47e13ef89fbc332a8694a349437f8d54ff7175b0",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These macros are borrowed from ParaviewPlugins.cmake.\n\n# The pv-plugin and pv-cs related stuff were removed.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# locates module.cmake files under the current source directory and registers\n\n# them as modules. All identified modules are treated as enabled and are built.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# this is needed to ensure that the PYTHON_INCLUDE_DIRS variable is set when\n\n# we process the plugins.\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# sort the modules based on depedencies. This will endup bringing in\n\n# VTK-modules too. We raise errors if required VTK modules are not already\n\n# enabled.\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# this is a VTK module and must have already been enabled. Otherwise raise\n\n# error.\n",
        "Line" : 41,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# this macro is used to setup the environment for loading/building VTK modules\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Setup enviroment to build VTK modules outside of VTK source tree.\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Currently, VTK's FindPythonLibs.cmake sets the above variables, but\n\n# CMake's FindPythonLibs.cmake does not. An issue has been made for VTK\n\n# to update its FindPythonLibs to reflect the parameters of the newer\n\n# CMake version (see https://gitlab.kitware.com/vtk/vtk/issues/16848).\n\n# Until this is resolved, we manually set these legacy parameters here.\n",
        "Line" : 100,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# load information about existing modules.\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "CMake/smtkVersion.cmake" : {
      "ObjectId" : "323d4642403eb8643435617e79f6e2add82776eb",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We require smtk's version information to be included the CMake Project\n\n# declaration in order to properly include smtk versions when using smtk as an\n\n# SDK. We therefore do not have access to the variable ${PROJECT_SOURCE_DIR}\n\n# at the time smtkVersion.cmake is read. We therefore use\n\n# ${CMAKE_CURRENT_SOURCE_DIR}, since smtkVersion.cmake is called at the top\n\n# level of smtk's build. We also guard against subsequent calls to\n\n# smtkVersion.cmake elsewhere in the build setup where\n\n# ${CMAKE_CURRENT_SOURCE_DIR} may no longer be set to the top level directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To be thorough, we should split the label into \"-prerelease+metadata\"\n\n# and, if prerelease is specified, use it in determining precedence\n\n# according to semantic versioning rules at http://semver.org/ .\n\n# For now, just make the information available as a label:\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMakeLists.txt" : {
      "ObjectId" : "55acb7f9443a134cdae9f7435ebb8d5ffa8762a9",
      "LastModified" : "2019-04-05T01:21:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#If the user/superbuild hasn't explicitly stated what c++ standard to use\n\n#require C++11\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if we are in conda environment\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n# SMTK version number\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Remove smtkTargets.cmake at the beginning of each CMake run; each time\n\n# a library is declared below, the file is appended and we do not want\n\n# to keep appending over multiple runs\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Add our Cmake directory to the module search path\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "################################################################################\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Include GNU install directory module to detect where to install\n\n# files on Linux/Unix systems (e.g., lib vs lib64)\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Include export header so that we can easily expose symbols\n\n# in dynamic libraries\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Include cmake code that builds automatic header tests,\n\n# makes targets for unit tests, and makes it easier to generate\n\n# export install targets\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Include cmake code that generates and installs smtk plugins\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# include cmake code that allows for easier testing of SMTK classes\n\n# and also provides helpers around create_test_sourcelist\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add options for performing code coverage tests.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Include mechanism for determining function and bind support\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Include mechanism for determining how to specialize hash<X>()\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "################################################################################\n\n## Paths for output\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Force LIBRARY_OUTPUT_PATH to be a cache variable, whether it was already defined or not.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Set the directory where the binaries will be stored\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Set the directory where cmake configuration files are installed. The\n\n# convention for this directory's location is OS-dependent. See\n\n# https://cmake.org/cmake/help/v3.13/command/find_package.html section \"Search\n\n# Procedure\" for more information.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "################################################################################\n\n# Options that the user controls\n\n################################################################################\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Option to build Qt ui compoments for attributes\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Provide system packagers with the ability to install SMTK\n\n# to the system's Python site package directory. The default\n\n# is off so that people building relocatable bundles (such as\n\n# CMB) can distribute their own Python interpreter with\n\n# internal packages (e.g., as part of a Mac \".app\" bundle).\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# SMTK uses the vxl library for terrain extraction. It also depends on VTK and ParaView.\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# When SMTK_RELOCATABLE_INSTALL=OFF we add to smtkConfig.cmake\n\n# set(SMTK_PREFIX_PATH \"${CMAKE_PREFIX_PATH}\")\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# SMTK_BUILD_DOCUMENTATION is an enumerated option:\n\n# never  == No documentation, and no documentation tools are required.\n\n# manual == Only build when requested; documentation tools (doxygen and\n\n#           sphinx) must be located during configuration.\n\n# always == Build documentation as part of the default target; documentation\n\n#           tools are required. This is useful for automated builds that\n\n#           need \"make; make install\" to work, since installation will fail\n\n#           if no documentation is built.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "################################################################################\n\n# Testing Related Settings\n\n################################################################################\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#turn on ctest if we want testing\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Do not report some warnings from generated code to the dashboard:\n",
        "Line" : 219,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Add a test to check for the copyright statment in all source:\n",
        "Line" : 224,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# On some *nix distributions, RPath has been deprecated in favor for RunPath. One\n\n# difference between these concepts is that RunPath is not inherited. This causes\n\n# issues with locating libraries without manually setting LD_LIBRARY_PATH when the\n\n# indirect dependency is in a nonstandard location. This flag switches the compiler\n\n# to use RPath in favor of RunPath.\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "################################################################################\n\n# Boost Related Settings\n\n################################################################################\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Boost is required for boost::uuids::uuid and, depending\n\n# on the platform, for filesystem support.\n\n#setup if we should use boost static libraries based on if we are\n\n#building static or shared. We need to match boosts library type to ours so\n\n#that we handle symbol visibility properly, plus at the same time we have\n\n#to understand that on some platforms or builds we will only have the static\n\n#libraries so we need to handle that when presented\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#if boost is installed as a system library on a machine, we will never\n\n#be able to set the superbuild to use the custom boost version. The solution\n\n#is that when doing a system\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List of Boost features used:\n\n# * Date Time\n\n# * Filesystem\n\n# * String algorithms\n\n# * UUID Generation\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Some c++ compilers do not support regex, so we may need Boost's regex library.\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#we definitely do not need regex support\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#we definitely need regex support\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#we may need regex support, but rather than try-compile let's just use boost\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#setup windows exception handling so we can compile properly with boost\n\n#enabled\n",
        "Line" : 294,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "#quiet warnings about printf being potentially unsafe\n",
        "Line" : 297,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "#quiet warnings about truncating decorated name\n",
        "Line" : 299,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Setting this ensures that \"make install\" will leave rpaths to external\n\n# libraries (not part of the build-tree e.g. Qt, ffmpeg, etc.) intact on\n\n# \"make install\". This ensures that one can install a version of ParaView on the\n\n# build machine without any issues. If this not desired, simply specify\n\n# CMAKE_INSTALL_RPATH_USE_LINK_PATH when configuring and \"make install\" will\n\n# strip all rpaths, which is default behavior.\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "################################################################################\n\n# JSON Related Settings\n\n################################################################################\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "################################################################################\n\n# PEGTL Related Settings\n\n################################################################################\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "################################################################################\n\n# Moab Related Settings\n\n################################################################################\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Moab is required for building smtk::mesh, as it is the default storage\n\n# format for meshes.\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "################################################################################\n\n# Qt Related Settings\n\n################################################################################\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "################################################################################\n\n# NOTE: This has be before any find_package(VTK), because currently ParaView\n\n# and VTK can NOT be easily switched due to modules and macros intermixed\n\n################################################################################\n\n################################################################################\n\n# Look for Discrete session discrete model modules\n\n################################################################################\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# include ParaView and ensure it is using the OpenGL2 backend\n",
        "Line" : 346,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "################################################################################\n\n# Thread Related Settings\n\n################################################################################\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "################################################################################\n\n# VTK Related Settings\n\n################################################################################\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Find the package here so environment variables are set, but\n\n# be careful not to include the VTK_USE_FILE until inside\n\n# a subdirectory that requires it; otherwise the list of include\n\n# paths can become too long for some platforms.\n",
        "Line" : 360,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "################################################################################\n\n# Remus related settings\n\n################################################################################\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "################################################################################\n\n# Build third party libraries\n\n################################################################################\n",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "################################################################################\n\n# Wrapping Related Settings\n\n################################################################################\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Initialize SMTK_PYTHON_MODULEDIR.\n\n# This stores the location where we'll install SMTK's Python modules.\n\n# Note that SMTK_PYTHON_MODULEDIR may be provided if SMTK is being\n\n# built as a submodule or as part of a superbuild.\n",
        "Line" : 401,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# pybind11 version 2.3 not currently available from conda-forge\n",
        "Line" : 423,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# Set up environment variables needed to import the python modules for tests.\n",
        "Line" : 437,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# find PARAVIEW_PYTHONPATH by querying pvpython, rather than relying on it\n\n# to be set by ParaView.\n",
        "Line" : 443,
        "CharPositionInLine" : 6
      },
      "58" : {
        "Text" : "# TODO: VTK needs to export a variable for this\n",
        "Line" : 457,
        "CharPositionInLine" : 6
      },
      "59" : {
        "Text" : "# Test the PYTHONPATH passed in.\n",
        "Line" : 499,
        "CharPositionInLine" : 6
      },
      "60" : {
        "Text" : "# Add to the list of paths required for modules.\n",
        "Line" : 522,
        "CharPositionInLine" : 6
      },
      "61" : {
        "Text" : "# Add to the list of paths required for modules.\n",
        "Line" : 528,
        "CharPositionInLine" : 6
      },
      "62" : {
        "Text" : "# Add the path to the build tree's compiled modules, prioritizing it over\n\n# the other directories (since the other directories will likely include the\n\n# location of the module's install).\n",
        "Line" : 544,
        "CharPositionInLine" : 4
      },
      "63" : {
        "Text" : "# Remove duplicates.\n",
        "Line" : 556,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "################################################################################\n\n# Determine function\n\n################################################################################\n",
        "Line" : 593,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "################################################################################\n\n# Determine hash<X> specialization\n\n################################################################################\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "################################################################################\n\n# Save compile-time options for use by other packages\n\n################################################################################\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "################################################################################\n\n# Install Related Settings\n\n################################################################################\n",
        "Line" : 645,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Copy file needed by SMTKPluginMacros.cmake into the build directory so\n\n# consuming projects can build against SMTK's build tree\n",
        "Line" : 649,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Install rules for SMTK macros usable by external packages:\n",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "################################################################################\n\n# Include Dirs Settings\n\n################################################################################\n",
        "Line" : 673,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Add the current directory so we can include files like: <smtk/internal/Test.h>\n\n# Save the include directories in a variable so that VTK modules\n\n# (inside the extension/vtk and session/discrete directories) can reuse them.\n",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "################################################################################\n\n# Finally build smtk\n\n################################################################################\n",
        "Line" : 693,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# On Mac OS X, set the dir. included as part of the installed library's path:\n",
        "Line" : 697,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Build SMTK Applications\n",
        "Line" : 704,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "################################################################################\n\n# Install a package targets file\n\n#\n\n# Setup the exports for the library when used from an installed location\n",
        "Line" : 709,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "################################################################################\n\n# Create a build directory package configuration file\n\n#\n\n# Setup the config file for exports that stores what other thirdparty\n\n# packages we need to search for ( MOAB, Remus, etc ) for when using the\n\n# build version of smtk\n\n#\n\n# Required to happen before we include the docs directory\n",
        "Line" : 721,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Set a prefix path that consuming projects can use to find smtk's dependencies\n",
        "Line" : 730,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Boost can be found by its BOOST_ROOT variable.\n",
        "Line" : 733,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Qt5 is primarily found by setting Qt5_DIR. We key off of this variable to\n\n# identify Qt5's prefix path\n",
        "Line" : 740,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# ParaView's SDK is still a WIP. Until it is in place, key off of the\n\n# ParaView_DIR (ParaView's build directory).\n",
        "Line" : 746,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "################################################################################\n\n# Create an install package configuration file\n\n#\n\n# Setup the config file for exports that stores what other thirdparty\n\n# packages we need to search for ( MOAB, Remus, etc ) for when using the\n\n# install version of smtk\n",
        "Line" : 774,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# If we are performing a relocatable install, we must erase the hard-coded\n\n# install paths we set in smtk_prefix_path before constructing the install\n\n# package configuration file\n",
        "Line" : 781,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "################################################################################\n\n# Build documentation\n\n# This also includes tutorials and other documentation that has its\n\n# source checked against SMTK libraries, so it must come after those\n\n# targets have been declared.\n\n################################################################################\n",
        "Line" : 808,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "################################################################################\n\n# Test plugins\n\n#\n\n# By adding a plugin contract file URL to SMTK_PLUGIN_CONTRACT_FILE_URLS, the\n\n# user can construct a list of plugins that will be built  and tested along with\n\n# smtk's unit tests. See <PROJECT_SOURCE_DIR>/CMake/resource-manager-state.cmake\n\n# for an example of a plugin contract file.\n\n################################################################################\n",
        "Line" : 819,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 85
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "617e834735f4f0c006eac8e9a8b6611fbddda882",
      "LastModified" : "2019-02-05T14:33:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n\n## # The following are required to uses Dart and the Cdash dashboard\n\n##   ENABLE_TESTING()\n\n##   INCLUDE(CTest)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "applications/CMakeLists.txt" : {
      "ObjectId" : "6fd88d8318590e0ab0077bd144bfb168c7720947",
      "LastModified" : "2019-02-05T14:33:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "applications/TemplateEditor/CMakeLists.txt" : {
      "ObjectId" : "aa8fb502cb0fbda8dac92bc0e2ebf59657e8347c",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ==============================================================================\n\n# Source\n\n# ==============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt UI files\n\n# ------------\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Source files\n\n# ------------\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ==============================================================================\n\n# Application\n\n# ==============================================================================\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ==============================================================================\n\n# Install\n\n# ==============================================================================\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Required for MACOSX_BUNDLE\n",
        "Line" : 83,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 6
    },
    "conda/moab.cmake" : {
      "ObjectId" : "2f747a7daed8a8a270344b500a294e0883472c02",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CURL_LIBRARY \"${path_prefix}/lib/libcurl${CMAKE_SHARED_LIBRARY_SUFFIX}\" CACHE PATH \"Initial cache\")\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(NETCDF_ROOT \"${path_prefix}/lib/cmake/netCDF\" CACHE PATH \"Initial cache\")\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dont build any moab tools\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "abdaeb954e98dc7d2f423532d4e4a1cb57a2269a",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####### SMTK Documentation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Reference Documentation\n\n#\n\n# If we have doxygen, create reference API documentation for SMTK.\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## End-user Documentation\n\n#\n\n# If we have rst2html, create the user's guide for SMTK\n\n# as an HTML document.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define a macro for processing reStructuredText files\n\n# if docutils were found.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Reasonable default\n",
        "Line" : 48,
        "CharPositionInLine" : 59
      },
      "5" : {
        "Text" : "# Reasonable default\n",
        "Line" : 51,
        "CharPositionInLine" : 58
      },
      "6" : {
        "Text" : "# Generate HTML version of docs\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# must be \"manual\"\n",
        "Line" : 72,
        "CharPositionInLine" : 11
      },
      "8" : {
        "Text" : "# Need doxygen docs built if possible\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Add the top-level reStructuredText file.\n\n# All others are included by it.\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "## Tutorial Documentation\n\n#\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "doc/tutorials/CMakeLists.txt" : {
      "ObjectId" : "da1ad60484ea985a30de391aad0dd7f9a46337bc",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Now add tutorial directories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To build an smtk-dependent cxx project, the following variables are used to\n\n# find smtk and its dependent packages\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doc/tutorials/add_a_session/CMakeLists.txt" : {
      "ObjectId" : "c95e337a2e939eb1a8b6e634d9349cab55ec674e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make sure we can include the resulting file:\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Testing must be enabled to build this tutorial\n\n# because it depends on smtkCoreModelTesting.\n\n#if (SMTK_ENABLE_TESTING)\n\n#  add_executable(add_a_session add_a_session.cxx)\n\n#  target_link_libraries(add_a_session smtkCore smtkCoreModelTesting)\n\n#  if (SMTK_ENABLE_CGM_SESSION)\n\n#    target_link_libraries(add_a_session smtkCGMSession)\n\n#  endif (SMTK_ENABLE_CGM_SESSION)\n\n#  add_test(NAME tut-add_a_session COMMAND add_a_session)\n\n#endif()\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doc/tutorials/cxx_first_steps/CMakeLists.txt" : {
      "ObjectId" : "b699c1530ed9598eaa77e4e80937f04a17eb6427",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ++ 1 ++\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -- 1 --\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doc/tutorials/debugging_python_tests/CMakeLists.txt" : {
      "ObjectId" : "3afc777ccaeba1bd71acfc013a465b66571b128f",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/implement_an_operator/CMakeLists.txt" : {
      "ObjectId" : "43ab1205ef2cd960b41c53a99ff84653c713dace",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this is probably not the right way to do this, but we need the path to SMTK's\n\n# include directory so EncodeStringFunctions.cmake finds things.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ++ 1 ++\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# defines smtk_operation_xml()\n",
        "Line" : 18,
        "CharPositionInLine" : 26
      },
      "3" : {
        "Text" : "# The smtk_operation_xml() function writes a file to the current\n\n# binary directory sharing the same name as the input file\n\n# but with \"_xml.h\" replacing the file extension. For this\n\n# example, that filename is \"implement_an_operator_xml.h\".\n\n# smtk_operation_xml() appends the exact filename to the\n\n# \"operatorXML\" variable.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Make sure we can include the resulting file:\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -- 1 --\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "doc/tutorials/python_first_steps/CMakeLists.txt" : {
      "ObjectId" : "4b26c99182198fe64dce27766e1e618bb8fc56a3",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/CMakeLists.txt" : {
      "ObjectId" : "3ab0411f52170ffeeade481986d09f48da87cc65",
      "LastModified" : "2019-04-05T01:21:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Each subdirectory exports variables naming header and source files\n\n# to its parent scope (this CMakeLists.txt) which we combine into\n\n# the smtkCore library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For code to optionally include ImportPythonOperator\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Set position-independent flag when other project libs are shared.\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# On Mac OS X, link to the Foundation framework\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#install the library and exports the library when used from a build tree\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "################################################################################\n\n# setup install rules\n\n################################################################################\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "################################################################################\n\n# Generate Python wrapping of the smtkCore library\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#only install PythonAutoInit.h if pybind11 is enabled, since it directly\n\n#includes pybind11 headers\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# This variable needs to be set for vtk_module to find its python module\n\n# output dir\n\n#\n\n# TODO: these variables must be treated differently when building with\n\n# VisualStudio; see VTK's treatment of these variables for the correct\n\n# handling of that case.\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "################################################################################\n\n# Build smtk extensions\n\n# Add libraries that extend other projects to have support for SMTK.\n\n# For example extension/vtk allows you to show smtk models in VTK.\n\n################################################################################\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "################################################################################\n\n# Build model sessions\n\n# Now that the main components of smtk have been built we can build\n\n# any custom model session sessions that the user has enabled.\n\n################################################################################\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "################################################################################\n\n# Build smtk default plugin initialization\n\n# At this point, all plugins that are built by smtk core have been\n\n# configured. We then aggregate the plugin targets and construct a\n\n# single library for initializing them in a ParaView-derived application.\n\n################################################################################\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "smtk/attribute/CMakeLists.txt" : {
      "ObjectId" : "dc568729c3a28dc57d1b4dd99582dc0458a0a6da",
      "LastModified" : "2019-03-01T17:47:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#construct operator inputs\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#install the headers\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/attribute/pybind11/CMakeLists.txt" : {
      "ObjectId" : "960a1e1e567635d0700f02d44cfa075cad074fcf",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install library\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create and install module __init__.py\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/attribute/testing/CMakeLists.txt" : {
      "ObjectId" : "83305da3a2914ab6d4dec88c168fc7037bd7553e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/attribute/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "24254359b351558e5f69eb7b488bb4afb0493d38",
      "LastModified" : "2019-03-07T16:24:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Tests that require SMTK_DATA_DIR\n\n################################################################################\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n# New tests using smtk test harness\n\n################################################################################\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/attribute/testing/python/CMakeLists.txt" : {
      "ObjectId" : "e95a834c36b44ca04441e0a13256b57753e443ba",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests that don't use command line args\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tests that use command line args\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Tests that require SMTK_DATA_DIR\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# New-style tests that use smtk.testing.TestCase\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "smtk/common/CMakeLists.txt" : {
      "ObjectId" : "3911d6aeab94acf7a6d338cfc77caaa78ce0428a",
      "LastModified" : "2019-03-12T14:21:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set up sources to build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate the version header using CMake variables.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#install the headers\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "smtk/common/pybind11/CMakeLists.txt" : {
      "ObjectId" : "4bf90598c98fcbc00fc115b068bc13d4562d6eae",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install library\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create and install module __init__.py\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/common/testing/CMakeLists.txt" : {
      "ObjectId" : "83305da3a2914ab6d4dec88c168fc7037bd7553e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/common/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "e919e86d74720b85761b500cbb408dbf764c550b",
      "LastModified" : "2019-04-05T01:21:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# New tests using smtk test harness\n\n################################################################################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/common/testing/python/CMakeLists.txt" : {
      "ObjectId" : "5fd34e95dc25b88ab2da552085880e2fce07ba99",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/extension/CMakeLists.txt" : {
      "ObjectId" : "0926bde2806620a55af33b98a54ed4fc7001299a",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the Qt GUI code if enabled\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add mesh operator if Remus is enabled.\n\n#this needs to be above vtk_smtk_setup_module_environment as that\n\n#pollutes the link libraries, and causes the remus plugin to depend\n\n#on libraries it doesn't require\n\n#if (SMTK_ENABLE_REMUS_SUPPORT)\n\n#  add_subdirectory(remus)\n\n#endif()\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add operators that use Delaunay 2d meshing\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add VTK library to render SMTK geometry and interact with ParaView-based apps if enabled.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Only include the ParaView use-file in subdirectories\n\n# that require ParaView include paths.\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Only include the VTK use-file in subdirectories\n\n# that require VTK include paths. Otherwise, command\n\n# lines get too long on some platforms.\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# We need the COMPONENTS argument so that this will work\n\n# with both standalone VTK or Paraview-VTK\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Don't add the VTK or other subdirectories as they use the\n\n# vtk_module_library() macro and vtk/module.cmake file.\n\n# The pv_process_modules() macro finds all subdirectories\n\n# containing a module.cmake file automatically.\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# These are converters to allow importing of vtk data into smtk mesh system.\n\n# We keep this out of the common vtk model for 2 primary reasons.\n\n# The primary being is that this library is focused on bringing data into\n\n# smtk, not rendering, and secondly we don't want to require vtk rendering\n\n#to be linked for IO routines.\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Add the cumulus UI if Qt support and cumulus enabled\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "smtk/extension/cumulus/CMakeLists.txt" : {
      "ObjectId" : "575e9833a712cf718532816b496eae93c20d21fa",
      "LastModified" : "2019-02-05T14:33:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Mandatory girder file browser files\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Optional girder file browser files (for stand-alone executable)\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Mandatory girder file browser files\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Optional girder file browser files (for stand-alone executable)\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#add moc files\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Mandatory girder file browser files\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Optional girder file browser files (for stand-alone executable)\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#resource files\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#extension library\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#install headers\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#we need to add the location of the moc files to the include dir\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#publicly link to smtkCore\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#install the library and exports\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#standalone cumulus executable\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#standalone girder file browser executable for debugging\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "smtk/extension/delaunay/CMakeLists.txt" : {
      "ObjectId" : "8a4a999058e879c08c6785bc87458f584930ad73",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if (SMTK_ENABLE_REMUS_SUPPORT)\n\n#  add_subdirectory(worker)\n\n#endif()\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/extension/delaunay/plugin/CMakeLists.txt" : {
      "ObjectId" : "d083a04dfd7c060b9940a88759d1c081dbef8963",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need to add the current value of VTK_MODULES_DIR to the module path\n\n# so that when the plugins are built all the modules can be found. Otherwise,\n\n# modules that aren't loaded as direct dependencies of CMB modules will\n\n# not be found.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "smtk/extension/delaunay/pybind11/CMakeLists.txt" : {
      "ObjectId" : "0840a4b59be6c88f379de794742e937a13943c58",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install library\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create and install module __init__.py\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/extension/delaunay/testing/CMakeLists.txt" : {
      "ObjectId" : "83305da3a2914ab6d4dec88c168fc7037bd7553e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/extension/delaunay/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "fb4fe68c32c51020fe0b4d48d38b8847549f96fb",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n#\n\n#  Copyright (c) Kitware, Inc.\n\n#  All rights reserved.\n\n#  See LICENSE.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.  See the above copyright notice for more information.\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/extension/delaunay/testing/python/CMakeLists.txt" : {
      "ObjectId" : "568c0814031c4c3424176e9f7c8ef76aebb0e24b",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/extension/delaunay/worker/CMakeLists.txt" : {
      "ObjectId" : "25d7e24d565c66aaa20900b3cbf053f9f7dabfcf",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#on windows you want to tell boost to only link to the libs it needs\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#setup the workers to run in the build directory\n\n#########################################################################\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#setup the workers to be installed and run from the installed directory\n\n#########################################################################\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "smtk/extension/delaunay/worker/pybind11/CMakeLists.txt" : {
      "ObjectId" : "2ae24e8fe85a3000e209a8bf026f9bac0b01a487",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install library\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create and install module __init__.py\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/extension/delaunay/worker/testing/CMakeLists.txt" : {
      "ObjectId" : "83305da3a2914ab6d4dec88c168fc7037bd7553e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/extension/delaunay/worker/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "cdf575a67d7aa1dd2a09feae6e97f28fa6394c08",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Build the Delaunay worker test executable, this integrates\n\n#a remus client and server and verifies that the mesh worker behaves properly\n\n#########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/extension/delaunay/worker/testing/python/CMakeLists.txt" : {
      "ObjectId" : "cf639047b875dc9af05944f630cd69caa4c597cd",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: figure out why active test only works on OS X\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/extension/matplotlib/CMakeLists.txt" : {
      "ObjectId" : "1d97fd214a8cacf2428b20671490e2042b1d133f",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/extension/matplotlib/plugin/CMakeLists.txt" : {
      "ObjectId" : "3347025cc595a46bb91f5154f2d81b344f963e2e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need to add the current value of VTK_MODULES_DIR to the module path\n\n# so that when the plugins are built all the modules can be found. Otherwise,\n\n# modules that aren't loaded as direct dependencies of CMB modules will\n\n# not be found.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "smtk/extension/matplotlib/testing/CMakeLists.txt" : {
      "ObjectId" : "230048877770881682dae035ffc0b405b7478129",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/extension/matplotlib/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "fa2da37a5ccf4cd385b896895b7de4e6bddeb997",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n#\n\n#  Copyright (c) Kitware, Inc.\n\n#  All rights reserved.\n\n#  See LICENSE.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.  See the above copyright notice for more information.\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include pybind and python directories\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add hooks to the data and scratch directories\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We use VTK to perform an image comparison. If it is not present, the check is skipped\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add compile definitions to force linking to implementation modules\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Do not enable VTK integration for testing\n\n#  target_compile_definitions(RenderMesh PRIVATE \"USE_VTK=1\")\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "smtk/extension/matplotlib/testing/python/CMakeLists.txt" : {
      "ObjectId" : "81d719cf8c507858819e290b894a0f6a7901ae7b",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/extension/opencv/CMakeLists.txt" : {
      "ObjectId" : "212d441be36349d3b56047708862c23f31565eee",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The import operator is only available if there is VTK\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Don't add the VTK or other subdirectories as they use the\n\n# vtk_module_library() macro and vtk/module.cmake file.\n\n# The vtk_smtk_process_modules() macro finds all subdirectories\n\n# containing a module.cmake file automatically.\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#vtk targets don't specify an include directory through usage-requirements, so\n\n#we manually add them here\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Install the library and exports the library when used from a build tree\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Install the headers\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "smtk/extension/opencv/plugin/CMakeLists.txt" : {
      "ObjectId" : "b9eda99aaf66a2b17566198ac686cd87bccfe82c",
      "LastModified" : "2019-04-16T12:34:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need to add the current value of VTK_MODULES_DIR to the module path\n\n# so that when the plugins are built all the modules can be found. Otherwise,\n\n# modules that aren't loaded as direct dependencies of CMB modules will\n\n# not be found.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/extension/opencv/qt/CMakeLists.txt" : {
      "ObjectId" : "c17b0b2b6bb891ac4a6c6a670d1b27d5a34b4bf8",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#install the headers\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#install the library and exports the library when used from a build tree\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Link *everything* in this directory to VTK modules\n\n# This is required for the TestBuild targets.\n\n# We must test whether each of the targets below exist\n\n# because they are required when built into VTK but\n\n# may not be present, especially since the OpenGL2\n\n# backend became available.\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "smtk/extension/opencv/vtk/CMakeLists.txt" : {
      "ObjectId" : "de15cd6c45da0f6d090dd722934bdbbe2458a47d",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Link explicitly to vtkSMTKOperationsExt, which can't be set in module.cmake\n\n#because this is invoked by separate vtk_smtk_process_modules in polygon session\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ... and make header compilation tests link properly:\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ... and install the export header\n\n#has to be after the vtk_module_library\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "smtk/extension/opencv/vtk/module.cmake" : {
      "ObjectId" : "23d4a39f41360a55118c7bd0452fa9d363713eb8",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test for targets that might be required or\n\n# might not exist.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/extension/paraview/CMakeLists.txt" : {
      "ObjectId" : "ce92db8f061a1684f66bfa737f590c76f3c58100",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Build widgets\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/extension/paraview/appcomponents/CMakeLists.txt" : {
      "ObjectId" : "b2bb6e26a351b13d2575d38cb40cb3aa3daf9d31",
      "LastModified" : "2019-04-16T12:34:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n# This directory contains 2 targets:\n\n# + smtkPQComponentsExt, containing non-Qt (unwrapped) classes and Qt classes\n\n# + smtkPQComponentsPlugin, a plugin exposing the above with an autostart object\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set up sources to build\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# One feature of pqSMTKSaveOnCloseResourceBehavior is the construction of a\n\n# prompt to save all resources upon closing the main window. This feature uses\n\n# parts of ParaView that were added just after the tagging of 5.6.0. To support\n\n# both pre- and post-5.6.0, we set a local compiler definition to enable this\n\n# feature if the detected ParaView contains the features we need.\n\n#\n\n# TODO: In the future, ParaView will have a means of differentiating between the\n\n# latest tagged branch and master. When that happens, we can replace this logic\n\n# with a ParaView version check to see if our ParaView is greater than 5.6.0.\n\n# Until then, we simply look for the header file associated with the feature we\n\n# want.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#install the headers\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Need to add the location of the moc files to the include dirs:\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#set smtkPQComponentsExt to publicly link to smtkCore\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Server-side stuff because some stuff uses GetClientSideObject()\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Once the ParaView in CMB's superbuild includes commit\n\n# SHA:000b6db4985a73899feb973185d8f60a2ef85f60 (03/20/2018), this macro can be\n\n# replaced by ParaView's \"add_pqproxy\" macro.\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# don't add\n",
        "Line" : 257,
        "CharPositionInLine" : 68
      },
      "9" : {
        "Text" : "# the extra \"Implementation\" here.\n",
        "Line" : 258,
        "CharPositionInLine" : 40
      },
      "10" : {
        "Text" : "#install the library and exports the library when used from a build tree\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "smtk/extension/paraview/operators/CMakeLists.txt" : {
      "ObjectId" : "aeec360ddb17105115c558eec4f07bb1e40ff727",
      "LastModified" : "2019-04-16T12:34:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set up sources to build\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#install the headers\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#we need to add the location of the moc files to the include dir for smtkPQWidgetExt\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set smtkPQOperationViewsExt to publicly link to smtkCore\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Generate the ParaView plugin code for each view class\n\n# added to the smtkPQOperationViewsExt library above:\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#install the library and exports the library when used from a build tree\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "smtk/extension/paraview/pluginsupport/CMakeLists.txt" : {
      "ObjectId" : "ae612b117f1f33e8c9196722a23f6b6497ce6045",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need to add the current value of VTK_MODULES_DIR to the module path\n\n# so that when the plugins are built all the modules can be found. Otherwise,\n\n# modules that aren't loaded as direct dependencies of CMB modules will\n\n# not be found.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/extension/paraview/pluginsupport/pybind11/CMakeLists.txt" : {
      "ObjectId" : "7925074470caf84611e9e9578bd7f6281abde432",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install library\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create and install module __init__.py\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/extension/paraview/pluginsupport/testing/CMakeLists.txt" : {
      "ObjectId" : "c4f62932a8940a8ab020d22f0adbbe07f13b6b6a",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n#\n\n#  Copyright (c) Kitware, Inc.\n\n#  All rights reserved.\n\n#  See LICENSE.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.  See the above copyright notice for more information.\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/extension/paraview/pluginsupport/testing/python/CMakeLists.txt" : {
      "ObjectId" : "80cd21ca2c0c8c7ffea013eef429ae4d63d7b99b",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n#\n\n#  Copyright (c) Kitware, Inc.\n\n#  All rights reserved.\n\n#  See LICENSE.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.  See the above copyright notice for more information.\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/extension/paraview/pybind11/CMakeLists.txt" : {
      "ObjectId" : "f5331afa6c832afb35c73c5233679a580a30ab6a",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/extension/paraview/server/CMakeLists.txt" : {
      "ObjectId" : "872b8a83a92d293850c45fd84293e22c89637fb1",
      "LastModified" : "2019-04-16T12:34:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set up sources to build\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the server plugin adds vtkCMBGeometryReader as a source, so we need the\n\n# vtk module that contains it (vtkSMTKReaderExt) listed as add_paraview_plugin's\n\n# CS_KITS parameter. We also must link against the client-server wrapping\n\n# library for this module (vtkSMTKReaderExtCS).\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# vtkLIDARReader\n\n# vtkTerrainExtractionFilter, vtkLIDARElevationFilter\n",
        "Line" : 77,
        "CharPositionInLine" : 21
      },
      "3" : {
        "Text" : "# Generate a ParaView plugin\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install the library and exports the library when used from a build tree\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install the headers\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "smtk/extension/paraview/server/testing/CMakeLists.txt" : {
      "ObjectId" : "c4f62932a8940a8ab020d22f0adbbe07f13b6b6a",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n#\n\n#  Copyright (c) Kitware, Inc.\n\n#  All rights reserved.\n\n#  See LICENSE.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.  See the above copyright notice for more information.\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/extension/paraview/server/testing/python/CMakeLists.txt" : {
      "ObjectId" : "4af6f0d8d2e6e1ca410de6d1ed6bffff5986fdc9",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n#\n\n#  Copyright (c) Kitware, Inc.\n\n#  All rights reserved.\n\n#  See LICENSE.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.  See the above copyright notice for more information.\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/extension/paraview/widgets/CMakeLists.txt" : {
      "ObjectId" : "247e5abafb427cb78e5209ce675acd5a1de2734d",
      "LastModified" : "2019-04-16T12:34:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# smtk views that need vtk support\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set up sources to build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#install the headers\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Need to add the location of the moc files to the include dirs:\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set smtkPQWidgetsExt to publicly link to smtkCore\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#install the library and exports the library when used from a build tree\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "smtk/extension/pybind11/CMakeLists.txt" : {
      "ObjectId" : "372df37be9e0ec0a01284237900ce80b064b5717",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/extension/qt/CMakeLists.txt" : {
      "ObjectId" : "f3908adb28ea43aaa4a8724d4b1d819fba5283cc",
      "LastModified" : "2019-04-16T12:34:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set up sources to build\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#qtModelView.cxx\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#qtModelView.h\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#install the headers\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#we need to add the location of the moc files to the include dir for qtsmtk\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#set smtkQtExt to publicly link to smtkCore\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#install the library and exports the library when used from a build tree\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "smtk/extension/qt/examples/CMakeLists.txt" : {
      "ObjectId" : "8e0b9300c35e379e4e9db9c2db7d2ca7931a71dc",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/extension/qt/examples/cxx/CMakeLists.txt" : {
      "ObjectId" : "ca323b36d149f5a7a3ca39f04d06c2b8c79d134a",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n## Create browseModel to test browsing model entity tree:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n\n## Create an application to test attribute editing\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add in the attribute preview executable\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##\n\n## Test model browsing (for crashes only, not behavior)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "smtk/extension/qt/testing/CMakeLists.txt" : {
      "ObjectId" : "df1d8dd937a6e8c3cc14204738cf8be67c3e88fc",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TODO: fix testing with local test classes on Windows\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/extension/qt/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "d148c264657b8c6281961b53f8dc6f3fa246b302",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n#\n\n#  Copyright (c) Kitware, Inc.\n\n#  All rights reserved.\n\n#  See LICENSE.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.  See the above copyright notice for more information.\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/extension/remus/CMakeLists.txt" : {
      "ObjectId" : "a6564d2cfddb80a6abd424b9c8c5af9491107b24",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# disables: warning C4273: inconsistent dll linkage\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "smtk/extension/remus/plugin/CMakeLists.txt" : {
      "ObjectId" : "9f2108fa237efe4cac5609a4ce8a0ce0a6e07d3f",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need to add the current value of VTK_MODULES_DIR to the module path\n\n# so that when the plugins are built all the modules can be found. Otherwise,\n\n# modules that aren't loaded as direct dependencies of CMB modules will\n\n# not be found.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "smtk/extension/remus/pybind11/CMakeLists.txt" : {
      "ObjectId" : "e68ffc53877ebfeefb1cdc363ea8ec3836538ef7",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install library\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create and install module __init__.py\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/extension/vtk/CMakeLists.txt" : {
      "ObjectId" : "bce8aaa238e60ac65464a232a247b7edb6a1437f",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/extension/vtk/filter/CMakeLists.txt" : {
      "ObjectId" : "d0b61d5270852e0424b3edb651eaf29b9d6c6fe5",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ... and make header compilation tests link properly:\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ... and install the export header\n\n#has to be after the vtk_module_library\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/extension/vtk/filter/module.cmake" : {
      "ObjectId" : "82fa98f5111afb510165bafd2a827144b975e905",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/extension/vtk/io/CMakeLists.txt" : {
      "ObjectId" : "6a8238b07be79f13ce46c8daa034d56d1ba1a964",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For terrain extraction\n",
        "Line" : 4,
        "CharPositionInLine" : 24
      },
      "1" : {
        "Text" : "# For terrain extraction\n",
        "Line" : 15,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "#install the headers\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ... and make header compilation tests link properly:\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "smtk/extension/vtk/io/pybind11/CMakeLists.txt" : {
      "ObjectId" : "bc8fa5a3b230c313f6ca26d138bdd41b88ef0f16",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install library\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create and install module __init__.py\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/extension/vtk/io/testing/CMakeLists.txt" : {
      "ObjectId" : "83305da3a2914ab6d4dec88c168fc7037bd7553e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/extension/vtk/io/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "933dd65f81a526f45a4931508921dffb80a78330",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n#\n\n#  Copyright (c) Kitware, Inc.\n\n#  All rights reserved.\n\n#  See LICENSE.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.  See the above copyright notice for more information.\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/extension/vtk/io/testing/python/CMakeLists.txt" : {
      "ObjectId" : "a6bf9fc5465971a081b374b048bbff370b6c03e8",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n#\n\n#  Copyright (c) Kitware, Inc.\n\n#  All rights reserved.\n\n#  See LICENSE.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.  See the above copyright notice for more information.\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/extension/vtk/meshing/CMakeLists.txt" : {
      "ObjectId" : "d48350e7767d8be3d7995544f502a98fd9c77333",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# no wrapping for sources\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Remus is needed\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# ... and make header compilation tests link properly:\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ... and install the export header\n\n#has to be after the vtk_module_library\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "smtk/extension/vtk/meshing/module.cmake" : {
      "ObjectId" : "d5a9e07de04b9ae857d6c9810db76c0b7a7b8449",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test for targets that might be required or\n\n# might not exist.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if there is Remus, add map file reader and support files.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/extension/vtk/operators/CMakeLists.txt" : {
      "ObjectId" : "0a2df5fc3ca4eafe2a5dfdfafc8c0e2116f89dd1",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ... and make header compilation tests link properly:\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ... and install the export header\n\n#has to be after the vtk_module_library\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Potentially wrap in Python using VTK's wrapping methods.\n\n# This makes the filters available for use with other VTK-wrapped filters.\n\n#if (SMTK_ENABLE_PYTHON_WRAPPING AND VTK_WRAP_PYTHON)\n\n# vtk_smtk_wrap_module_python3(${vtk-module} \"${headers}\")\n\n#endif()\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "smtk/extension/vtk/operators/module.cmake" : {
      "ObjectId" : "cd912b45216ef194061bec3f3f553a31144ab992",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/extension/vtk/operators/plugin/CMakeLists.txt" : {
      "ObjectId" : "c68ebddee8d04c4736963b275b496795117eecd5",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need to add the current value of VTK_MODULES_DIR to the module path\n\n# so that when the plugins are built all the modules can be found. Otherwise,\n\n# modules that aren't loaded as direct dependencies of CMB modules will\n\n# not be found.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "smtk/extension/vtk/operators/testing/CMakeLists.txt" : {
      "ObjectId" : "8e0b9300c35e379e4e9db9c2db7d2ca7931a71dc",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/extension/vtk/operators/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "adf59ebf98252fe79d8de5020cdcb5d6cdf676e4",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test of polygon session's delete operator with success\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# test of polygon session's delete operator with failure\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "smtk/extension/vtk/pybind11/CMakeLists.txt" : {
      "ObjectId" : "db9ba8d6e2164babe7f8f8504777b0197f208397",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/extension/vtk/reader/CMakeLists.txt" : {
      "ObjectId" : "4aa7f4a0c78e12f3ba8a67f8884d5de5280a7963",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Required for support of shapefiles, which is required to construct\n\n# the gdal wrapper classes needed by cmb.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    vtkCMBReaderHelperFunctions.cxx\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if there is Remus, add map file reader and support files.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Remus is needed\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# no wrapping for sources\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Remus is needed\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Link GDAL and Add a compiler definition to the target\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ... and make header compilation tests link properly:\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ... and install the export header\n\n#has to be after the vtk_module_library\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "smtk/extension/vtk/reader/module.cmake" : {
      "ObjectId" : "5748fd8265984e884272355cb60c5dd6b5224550",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/extension/vtk/reader/testing/CMakeLists.txt" : {
      "ObjectId" : "8e0b9300c35e379e4e9db9c2db7d2ca7931a71dc",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/extension/vtk/reader/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "0887b7e6dc549278ff3d002052643fe7f0279eca",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n#\n\n#  Copyright (c) Kitware, Inc.\n\n#  All rights reserved.\n\n#  See LICENSE.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.  See the above copyright notice for more information.\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add compile definitions to force linking to implementation modules\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/extension/vtk/source/CMakeLists.txt" : {
      "ObjectId" : "c828c7baf239ba3315ebe37ce946708bdbe9f133",
      "LastModified" : "2019-04-16T12:34:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add compile definitions to force linking to implementation modules\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Don't do VTK header test. It is broken at the moment.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#has to be after the vtk_module_library\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Link *everything* in this directory to VTK modules\n\n# This is required for the TestBuild targets.\n\n# We must test whether each of the targets below exist\n\n# because they are required when built into VTK but\n\n# may not be present, especially since the OpenGL2\n\n# backend became available.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#install the headers\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ... and make header compilation tests link properly:\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Potentially wrap in Python using VTK's wrapping methods.\n\n# This makes the filters available for use with other VTK-wrapped filters.\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# By default, VTK python modules are built in\n\n# ${VTK_BUILD_PYTHON_MODULES_DIR}/vtkmodules. We reset this value after it has been\n\n# set because it makes more sense for us to maintain parity betwen the build and\n\n# install locations.\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "smtk/extension/vtk/source/module.cmake" : {
      "ObjectId" : "04aed841be917a63bdb476df4b66bb9d4b846c54",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# for vtkImageSpacingFlip in vtkModelAuxiliaryGeometry\n",
        "Line" : 1,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : "# Test for targets that might be required or\n\n# might not exist.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/extension/vtk/source/pybind11/CMakeLists.txt" : {
      "ObjectId" : "417c4106d0105da3aa3cfbc767c69b01625a1691",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install library\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create and install module __init__.py\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/extension/vtk/source/testing/CMakeLists.txt" : {
      "ObjectId" : "8e0b9300c35e379e4e9db9c2db7d2ca7931a71dc",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/extension/vtk/source/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "58a30fee594c30fa78bfd181d739a89b4f989953",
      "LastModified" : "2019-04-16T12:34:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Only run tests if the data directory exists\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/extension/vtk/widgets/CMakeLists.txt" : {
      "ObjectId" : "a110dac15f64051c2ee77955f82962f5976fa941",
      "LastModified" : "2019-04-16T12:34:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test for targets that might be required or\n\n# might not exist.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add compile definitions to force linking to implementation modules\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Don't do VTK header test. It is broken at the moment.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#has to be after the vtk_module_library\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#install the headers\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ... and make header compilation tests link properly:\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Potentially wrap in Python using VTK's wrapping methods.\n\n# This makes the filters available for use with other VTK-wrapped filters.\n\n#if (SMTK_ENABLE_PYTHON_WRAPPING AND VTK_WRAP_PYTHON)\n\n#  vtk_smtk_wrap_module_python3(${vtk-module} \"${VTKLibHeaders}\")\n\n#endif()\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "smtk/extension/vtk/widgets/module.cmake" : {
      "ObjectId" : "1d41d5b6265265211b4b1af8dfaa31e4446766e8",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test for targets that might be required or\n\n# might not exist.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/extension/vxl/CMakeLists.txt" : {
      "ObjectId" : "b54fcea15551d415d9199fbb35a5a8c6cf82c2ec",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Build vxl\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/extension/vxl/operators/CMakeLists.txt" : {
      "ObjectId" : "a8d62b5347e3a5bbdf97a958c6fb1b51d91d11e9",
      "LastModified" : "2019-04-16T12:34:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#include(${PARAVIEW_USE_FILE})\n\n#include(ParaViewPlugins)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set up sources to build\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#install the headers\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#we need to add the location of the moc files to the include dir for smtkVXLWidgetExt\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set smtkVXLOperationViewsExt to publicly link to smtkCore\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Generate the ParaView plugin code for each view class\n\n# added to the smtkVXLOperationViewsExt library above:\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#SERVER_MANAGER_XML smconfig.xml\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#install the library and exports the library when used from a build tree\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "smtk/extension/vxl/vtk/CMakeLists.txt" : {
      "ObjectId" : "c0401b6eaab6d0f3a01836d13275050459c26e64",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# vtkLIDARReader\n",
        "Line" : 34,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : "# vtkLIDARWriter\n",
        "Line" : 36,
        "CharPositionInLine" : 14
      },
      "2" : {
        "Text" : "# ... and make header compilation tests link properly:\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ... and install the export header\n\n#has to be after the vtk_module_library\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "smtk/extension/vxl/vtk/module.cmake" : {
      "ObjectId" : "26ad0c37e007d810a2519234e3c5464a3efbe648",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/extension/vxl/widgets/CMakeLists.txt" : {
      "ObjectId" : "e8d6bf9c1bad252615e0d0b9d00e368ceb8f9e02",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#install the headers\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#install the library and exports the library when used from a build tree\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Link *everything* in this directory to VTK modules\n\n# This is required for the TestBuild targets.\n\n# We must test whether each of the targets below exist\n\n# because they are required when built into VTK but\n\n# may not be present, especially since the OpenGL2\n\n# backend became available.\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "smtk/io/CMakeLists.txt" : {
      "ObjectId" : "d0f073a43a499b6434c369bd1545ad4256bda1ca",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set up sources to build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#XmlDocV1Parser.h\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# mesh-related I/O\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#install the headers\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "smtk/io/pybind11/CMakeLists.txt" : {
      "ObjectId" : "84bd62fe295fda1139e98b4eda7d778b61a066a6",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install library\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create and install module __init__.py\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/io/testing/CMakeLists.txt" : {
      "ObjectId" : "83305da3a2914ab6d4dec88c168fc7037bd7553e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/io/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "dde4592ae53c9a30437c0b63026ad8d7f69c1465",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ResourceSetWriterTest uses input files in SMTKTestData\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/io/testing/python/CMakeLists.txt" : {
      "ObjectId" : "b7c2758595fbf3921dd1858942095925c34059c9",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Additional tests that require SMTK_DATA_DIR\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/mesh/CMakeLists.txt" : {
      "ObjectId" : "e86579f02045ffc74ae6b180c1e2bd9aba739b38",
      "LastModified" : "2019-04-16T12:34:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set up sources to build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Limit the amount of headers for each backend we install. These should be\n\n#implementation details users of smtk don't get access to ( outside the interface )\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#install the headers\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "smtk/mesh/pybind11/CMakeLists.txt" : {
      "ObjectId" : "ccbbe150bf85405d4e145a1714bbc79388aead8b",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install library\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create and install module __init__.py\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/mesh/testing/CMakeLists.txt" : {
      "ObjectId" : "18e1bdc4052807fce5d5e75f29732b823757e263",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/mesh/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "286e77b5c26588a6190d187a7598aea17508d1fe",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n#\n\n#  Copyright (c) Kitware, Inc.\n\n#  All rights reserved.\n\n#  See LICENSE.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.  See the above copyright notice for more information.\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  UnitTestReadWriteHandles.cxx\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/mesh/testing/python/CMakeLists.txt" : {
      "ObjectId" : "26a013c6a1838a3a6c2fb966a604ca6b66b9c6e6",
      "LastModified" : "2019-04-16T12:34:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tests that require SMTK_DATA_DIR\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#only run these tests if we have a valid data directory and we have a moab\n\n#built with hdf5\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if (SMTK_ENABLE_POLYGON_SESSION)\n\n#  add_executable(testRuntimePyOperation TestRuntimePyOperation.cxx)\n\n#  target_compile_definitions(testRuntimePyOperation PRIVATE \"SMTK_DATA_DIR=\\\"${SMTK_DATA_DIR}\\\"\")\n\n#  target_link_libraries(testRuntimePyOperation smtkCore smtkDelaunayExt smtkPolygonSession ${Boost_LIBRARIES})\n\n#    add_test(NAME testMyElevateMesh\n\n#      COMMAND $<TARGET_FILE:testRuntimePyOperation>\n\n#      \"${CMAKE_CURRENT_SOURCE_DIR}/my_elevate_mesh.py\")\n\n#    set_tests_properties(testMyElevateMesh PROPERTIES LABELS \"Mesh\" ENVIRONMENT PYTHONDONTWRITEBYTECODE=1)\n\n#endif()\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "smtk/model/CMakeLists.txt" : {
      "ObjectId" : "2d8b0c04020bab7b3d86ae547539f6c83df996b0",
      "LastModified" : "2019-04-16T12:34:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set up sources to build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#install the headers\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/model/pybind11/CMakeLists.txt" : {
      "ObjectId" : "fdeb42d92e34849da995cdd574be4d953589566c",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install library\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create and install module __init__.py\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/model/testing/CMakeLists.txt" : {
      "ObjectId" : "83305da3a2914ab6d4dec88c168fc7037bd7553e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/model/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "859a0ac4bf3d06d66f0027a19e7094acc1838d5c",
      "LastModified" : "2019-04-16T12:34:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Make a library of some utility functions for tests to use:\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n# Tools and demos\n\n################################################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n# Tests\n\n################################################################################\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#add_executable(unitOperation unitOperation.cxx)\n\n#smtk_operation_xml( \"${CMAKE_CURRENT_SOURCE_DIR}/unitOutcomeOperation.sbt\" unitOperationXML)\n\n#target_include_directories(unitOperation PRIVATE \"${CMAKE_CURRENT_BINARY_DIR}\")\n\n#target_link_libraries(unitOperation smtkCore smtkCoreModelTesting)\n\n#add_test(NAME unitOperation COMMAND unitOperation)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_executable(unitDefaultSession unitDefaultSession.cxx)\n\n#smtk_operation_xml( \"${CMAKE_CURRENT_SOURCE_DIR}/unitForwardingOperation.sbt\" unitOperationXML)\n\n#target_include_directories(unitDefaultSession PRIVATE \"${CMAKE_CURRENT_BINARY_DIR}\")\n\n#target_link_libraries(unitDefaultSession smtkCore smtkCoreModelTesting)\n\n#add_test(NAME unitDefaultSession COMMAND unitDefaultSession)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#add_test(NAME benchmarkModel COMMAND benchmarkModel)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "################################################################################\n\n# Tests that require SMTK_DATA_DIR\n\n################################################################################\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# SOURCES ${unit_tests}\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "smtk/model/testing/python/CMakeLists.txt" : {
      "ObjectId" : "6dd50752e7d25d89bfe3400bda5f8811755f18f8",
      "LastModified" : "2019-04-16T12:34:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Additional tests that require SMTK_DATA_DIR\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/operation/CMakeLists.txt" : {
      "ObjectId" : "37b73f194023159d69ac8532792727475153899b",
      "LastModified" : "2019-04-16T12:34:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#install the headers\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#also install the xml files\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/operation/pybind11/CMakeLists.txt" : {
      "ObjectId" : "05d0338344d2ecf8749c510eb8c4553231edf8c5",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install library\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install PyOperation header\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create and install module __init__.py\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "smtk/operation/testing/CMakeLists.txt" : {
      "ObjectId" : "83305da3a2914ab6d4dec88c168fc7037bd7553e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/operation/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "97dbc4aad9a09543b093abc3d09ebcc5f43e74b4",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/operation/testing/python/CMakeLists.txt" : {
      "ObjectId" : "02177004a0ba67ae3bde5fbbee6e4c54aa319518",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tests that require SMTK_DATA_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#only run these tests if we have a valid data directory and we have a moab\n\n#built with hdf5\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/plugin/CMakeLists.txt" : {
      "ObjectId" : "675db7c87a1d77f43db950068ad96d942a4ef1f4",
      "LastModified" : "2019-04-16T12:34:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/project/CMakeLists.txt" : {
      "ObjectId" : "1893611f75eac92dfa67c1a89175a4647cebbf86",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set up sources to build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install the headers\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/project/pybind11/CMakeLists.txt" : {
      "ObjectId" : "85ffd054ce8c13e377b9d0c16ef376c3223ed474",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install library\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create and install module __init__.py\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/project/testing/CMakeLists.txt" : {
      "ObjectId" : "dbb086df6b6f65dd1a2fea9213002743d42e7eae",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/project/testing/python/CMakeLists.txt" : {
      "ObjectId" : "1947bb603198b5c18641581baa576c0e6e7b5a66",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Project Manager test using Mesh Session\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/pybind11/CMakeLists.txt" : {
      "ObjectId" : "99f0c1872c57775ea036b2514aba7b66bbfeaaa4",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/resource/CMakeLists.txt" : {
      "ObjectId" : "baf63817a8610ea28e9f6d09023503fd2008b711",
      "LastModified" : "2019-04-16T12:34:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set up sources to build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#install the headers\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/resource/pybind11/CMakeLists.txt" : {
      "ObjectId" : "5baf4064f655ee9582fcd4c4bc240245f9a58265",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install library\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create and install module __init__.py\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/resource/testing/CMakeLists.txt" : {
      "ObjectId" : "83305da3a2914ab6d4dec88c168fc7037bd7553e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/resource/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "768ca85ea6765c9f30cf5a06f13fa245f446c4e9",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Make a library of some utility functions for tests to use:\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n# Tests\n\n################################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/resource/testing/python/CMakeLists.txt" : {
      "ObjectId" : "cf3e8ad0b971c756f5df762ca6c3218f6c826dd7",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Additional tests that require SMTK_DATA_DIR\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/session/CMakeLists.txt" : {
      "ObjectId" : "61693a673dcfb86015b855a898ea19978e9b09e8",
      "LastModified" : "2019-04-16T12:34:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Initialize flags for configuring Pybind11 session module\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n# Build Discrete session\n\n################################################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n# Build Boost.Polygon session\n\n################################################################################\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################################################\n\n# Build smtk::mesh session\n\n################################################################################\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################################################\n\n# Build Multiscale session\n\n################################################################################\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "################################################################################\n\n# Build VTK session\n\n################################################################################\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "################################################################################\n\n# Build Oscillator session\n\n################################################################################\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "smtk/session/discrete/CMakeLists.txt" : {
      "ObjectId" : "af1671a19988b854b64f359023f86ef6d8a86f4a",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if using paraview we need to explicitly look for vtkIOGDAL\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Only include the VTK use-file in subdirectories\n\n# that require VTK include paths. Otherwise, command\n\n# lines get too long on some platforms.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Don't add the VTK or other subdirectories as they use the\n\n# vtk_module_library() macro and vtk/module.cmake file.\n\n# The pv_process_modules() macro finds all subdirectories\n\n# containing a module.cmake file automatically.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build vtk moab reader before session\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set smtkDiscreteSession to publicly link to smtkCore and privately to vtkSMTKDiscreteModel\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install the headers.\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#install the library and exports the library when used from a build tree\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "smtk/session/discrete/kernel/CMake/DiscreteModelMacros.cmake" : {
      "ObjectId" : "7427ea12ae69db52daee1b7cbbc6f9bd58ad6e98",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create cmb-kit glue code for a server manager extension\n\n# so that the kit can be used as a library for other plugins\n\n# This macro will create both vtk{KIT} and vtk{KIT}CS libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Cache some CMake variables.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# The VTK may be submodule of Paraview.\n\n#  IF(PARAVIEW_BUILD_SHARED_LIBS OR BUILD_SHARED_LIBS)\n\n#    SET(LIBTYPE SHARED)\n\n#  ELSE(PARAVIEW_BUILD_SHARED_LIBS OR BUILD_SHARED_LIBS)\n\n#    SET(LIBTYPE STATIC)\n\n#  ENDIF(PARAVIEW_BUILD_SHARED_LIBS OR BUILD_SHARED_LIBS)\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Build as shared\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Create the library.\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Reset some CMake variable\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "smtk/session/discrete/kernel/CMakeLists.txt" : {
      "ObjectId" : "d90dd487d5c5ced72d9466054a0ed0e2092cbd5a",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The configured header file used to pass CMake settings to the source code.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# UUID stuff. Probably don't need all of it\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# rpcrt4 -> UuidCreate\n\n#snmpapi -> getting MAC address\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Check if header file exists and add it to the list.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Need these headers for GetMacAddress in vtkKWEUUID\n\n# Tricky as you need to figure out the proper order to test the inclusion of files\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Avoid polluting Win32 cmakecache\n",
        "Line" : 33,
        "CharPositionInLine" : 9
      },
      "6" : {
        "Text" : "# Test if os defines a length for sockaddr\n\n# only doing the test when we have sys/socket\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###############################################################################\n\n###############################################################################\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#vtkDiscreteModelWrapper.cxx\n",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Disable manifests for plugins on Windows so that they do not need to resolve their dependencies.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# install the headers\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ... and make header compilation tests link properly:\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# This module currently has source files located in its sub directories,\n\n# so it will not be CS wrapped properly, and generate a lot of warning at CMake configure time.\n\n# Therefore we disable CS wrapping until the issue with source files in sub directories is addressed.\n\n# vtk_add_cs_wrapping(${vtk-module})\n\n# smtk_install_library(${vtk-module}CS)\n",
        "Line" : 247,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 13
    },
    "smtk/session/discrete/kernel/module.cmake" : {
      "ObjectId" : "723a4347c764050268584626cb3265d2280bc8bc",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test for targets that might be required or\n\n# might not exist.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/session/discrete/legacycmb/CMBModel/CMakeLists.txt" : {
      "ObjectId" : "7853363afe2cc2f3e83aaf135377680c43464e83",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This class should really be in ${Plugin_Src_Files},\n\n# but it is linked from SimBuilderMeshPlugin\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#vtkCmbModelDeliveryFilter.cxx\n\n#vtkCmbModelSelectionConverter.cxx\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Disable manifests for plugins on Windows so that they do not need to resolve their dependencies.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# build the ParaView plugin\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "smtk/session/discrete/legacycmb/CMBModel/Plugin/CMakeLists.txt" : {
      "ObjectId" : "56105ce15779e6207ae4c3585b8689b5cddf2c5e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need this to call \"vtkCmbDiscreteModelCS_Initialize(pm->GetInterpreter())\"\n\n# so that the vtkProcessModule's interpreter is exposed to these classes\n\n# NOTE: This will not work in real cliet-server mode. According to Utkarsh,\n\n# more magic needs to happen for client-server mode to work\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#required can't use automoc here since plugin macros will attempt moccing too\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/session/discrete/legacycmb/CMBModel/Testing/CMakeLists.txt" : {
      "ObjectId" : "09816ddc96082bf335523a2d92bc2dc64086e982",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/session/discrete/legacycmb/SimBuilderMesh/CMakeLists.txt" : {
      "ObjectId" : "2fc28c4ff8409ee7b8cdb77d2c695d845dace13e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Disable manifests for plugins on Windows so that they do not need to resolve their dependencies.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# we unset the pv-plugin variable because that will bring in stuff\n\n# which we don't want brought in for client-server library initialization\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Linking against vtkCmbDiscreteModelCS is because vtkCMBMeshWrapper::SetModelWrapper()\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "smtk/session/discrete/legacycmb/SimBuilderMesh/Testing/CMakeLists.txt" : {
      "ObjectId" : "f1cfd5edf338c9c2f209f557e7ad4b6a9f73394e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/session/discrete/moabreader/CMake/FindCGM.cmake" : {
      "ObjectId" : "236ea7f7eeb771af4984a956f9534b5ad620b121",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindCGM.cmake\n\n#\n\n# If you set the CGM_CFG CMake variable to point to a file named \"cgm.make\"\n\n# (produced by CGM as part of any build or install), then the script will\n\n# locate CGM assets for your package to use.\n\n#\n\n# This script defines the following CMake variables:\n\n#   CGM_FOUND         defined when CGM is located, false otherwise\n\n#   CGM_INCLUDE_DIRS  directories containing CGM headers\n\n#   CGM_DEFINES       preprocessor definitions you should add to source files\n\n#   CGM_LIBRARIES     paths to CGM library and its dependencies\n\n#\n\n# Note that this script does not produce CGM_VERSION as that information\n\n# is not available in the \"cgm.make\" configuration file that CGM creates.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n\n## Replace line continuations ('\\' at EOL) so we don't have to parse them later\n\n##\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "##\n\n## Find include directories\n\n##\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Only use include directories specified by the *last*\n\n# occurrence of CGM_INT_INCLUDE in the config file:\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Alternately, one might:\n\n#list(APPEND CGM_INCLUDE_DIRS \"${_CGM_INC}\")\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#message(\"CGM_INCLUDE_DIRS=\\\"${CGM_INCLUDE_DIRS}\\\"\")\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "##\n\n## Find preprocessor definitions\n\n##\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "##\n\n## Find CGM library directory(-ies)\n\n##\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "##\n\n## Now add dependent library directories to CGM_LIB_DIRS\n\n##\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#message(\"${CGM_LIB_DIRS}\")\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "##\n\n## Find the CGM library and its dependencies\n\n##\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Cannot quote since it contains semicolons:\n",
        "Line" : 96,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "#message(\"Lib \\\"${_CGM_LIB}\\\" @ \\\"${_CGM_LIB_LOC}\\\" paths \\\"${CGM_LIB_DIRS}\\\"\")\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#message(\"Libs ${CGM_LIBRARIES}\")\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "##\n\n## Kill temporary variables\n\n##\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 15
    },
    "smtk/session/discrete/moabreader/CMakeLists.txt" : {
      "ObjectId" : "f547d77f5f370ccea4ceca9461e3819769c58b69",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#link agianst the discrete Model library and moab\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install the headers.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#install the library and exports the library when used from a build tree\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "smtk/session/discrete/operation/testing/CMakeLists.txt" : {
      "ObjectId" : "8e0b9300c35e379e4e9db9c2db7d2ca7931a71dc",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/session/discrete/operation/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "4f27662d4d26764eac7e82f60fd9f65679ac34f5",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/session/discrete/pybind11/CMakeLists.txt" : {
      "ObjectId" : "ac064da955910486b9c86b822a2f29bbbb0ef239",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install library\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create and install module __init__.py\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/session/discrete/testing/CMakeLists.txt" : {
      "ObjectId" : "83305da3a2914ab6d4dec88c168fc7037bd7553e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/session/discrete/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "241b96aaaccbb5664308ffcc9800307be3d2a059",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/session/discrete/testing/python/CMakeLists.txt" : {
      "ObjectId" : "2ab73ed59deabd37839bc63f5344e0a5de2b5d8d",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  discreteModeling\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Additional tests that require SMTK_DATA_DIR\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/session/mesh/CMakeLists.txt" : {
      "ObjectId" : "1313333f6b9212a1b31cee0b2ade2f86249e87bf",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#install the library and exports the library when used from a build tree\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Operations which have XML descriptions in separate files\n\n# need to have it encoded as a string in a header.\n\n# We do not need the path to the generated header (appended\n\n# to meshOperationXML) since the operators themselves include\n\n# the header in their implementations.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install the headers\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "smtk/session/mesh/pybind11/CMakeLists.txt" : {
      "ObjectId" : "5d9e40eaba4a7282167a8d6dcc2af491e489ed0c",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install library\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create and install module __init__.py\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/session/mesh/testing/CMakeLists.txt" : {
      "ObjectId" : "83305da3a2914ab6d4dec88c168fc7037bd7553e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/session/mesh/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "316860bede6b2bdc36744b6c60d925021e5444df",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n#\n\n#  Copyright (c) Kitware, Inc.\n\n#  All rights reserved.\n\n#  See LICENSE.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.  See the above copyright notice for more information.\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/session/mesh/testing/python/CMakeLists.txt" : {
      "ObjectId" : "d5f7d0f38f6317d363238eb76f1ac5de1a3c78ff",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tests that require SMTK_DATA_DIR\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#only run these tests if we have a valid data directory and we have a moab\n\n#built with hdf5\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/session/multiscale/CMakeLists.txt" : {
      "ObjectId" : "c6a1c28f583722533b640e95392369ac466dba63",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Only include the VTK use-file in subdirectories\n\n# that require VTK include paths. Otherwise, command\n\n# lines get too long on some platforms.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set smtkMultiscaleSession to publicly link to smtkCore and VTK\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add compile definitions and include directories\n\n#set_property(TARGET smtkMultiscaleSession APPEND PROPERTY COMPILE_FLAGS ${MULTISCALE_DEFINES})\n\n#set_property(TARGET smtkMultiscaleSession APPEND PROPERTY INCLUDE_DIRECTORIES ${MULTISCALE_INCLUDE_DIRS})\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#install the library and exports the library when used from a build tree\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Operations which have XML descriptions in separate files\n\n# need to have it encoded as a string in a header.\n\n# We do not need the path to the generated header (appended\n\n# to multiscaleOperationXML) since the operators themselves include\n\n# the header in their implementations.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install the headers\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "smtk/session/multiscale/pybind11/CMakeLists.txt" : {
      "ObjectId" : "6cd0d1c54822ce62ace6ef4622d199f2ac685b8d",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install library\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create and install module __init__.py\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/session/multiscale/testing/CMakeLists.txt" : {
      "ObjectId" : "8e0b9300c35e379e4e9db9c2db7d2ca7931a71dc",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/session/multiscale/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "05e16ca835f0065d945ad450ce5eb0cbaab3205f",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n#\n\n#  Copyright (c) Kitware, Inc.\n\n#  All rights reserved.\n\n#  See LICENSE.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.  See the above copyright notice for more information.\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# All tests for this session require VTK imported as a module from the embedded\n\n# python interpreter.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# All tests for this session require the variable <AFRL_DIR> to be set.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "smtk/session/oscillator/CMakeLists.txt" : {
      "ObjectId" : "8ae2289a19a6c1bc53c634f73cfb57856f13bbc8",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# operators/Delete.cxx\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# operators/Delete.h\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Operators which have XML descriptions in separate files\n\n# need to have it encoded as a string in a header.\n\n# We do not need the path to the generated header (appended\n\n# to oscillatorOperatorXML) since the operators themselves include\n\n# the header in their implementations.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# smtk_operation_xml(\"${CMAKE_CURRENT_SOURCE_DIR}/operators/Delete.sbt\" oscillatorOperatorXML)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is not an operation but a simulation attribute. However, we can use\n\n# the XML encoding the same way:\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install the headers\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#if (SMTK_ENABLE_QT_SUPPORT)\n\n#  add_subdirectory(qt)\n\n#endif()\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# add_subdirectory(pybind11)\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "smtk/session/oscillator/plugin/CMakeLists.txt" : {
      "ObjectId" : "78eebc5a1fb7f429bf85accd0f2a4375f58050bb",
      "LastModified" : "2019-04-16T12:34:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need to add the current value of VTK_MODULES_DIR to the module path\n\n# so that when the plugins are built all the modules can be found. Otherwise,\n\n# modules that aren't loaded as direct dependencies of CMB modules will\n\n# not be found.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install the headers\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# qt5_wrap_cpp(mocs ${hdrs})\n\n# qt5_wrap_ui(uisrc ${qtui})\n\n#\n\n# source_group(\"Qt_Source\" FILES ${srcs} )\n\n# source_group(\"Qt_Generated\" FILES ${mocs} ${uisrc})\n\n# source_group(\"Qt_Header\" FILES ${hdrs})\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We must add custom views in the plugin dir instead of qt dir\n\n# due to the fact that the add_smtk_ui_view macro assumes files\n\n# are in the same dir.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# smtkQtOscillatorSession\n\n# Qt5::Core\n\n# Qt5::Widgets\n\n# vtkjsoncpp\n\n# vtkPVServerManagerApplication\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "smtk/session/oscillator/testing/CMakeLists.txt" : {
      "ObjectId" : "83305da3a2914ab6d4dec88c168fc7037bd7553e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/session/oscillator/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "917a1ecc70b54cd952969fe7d712d09ddf03e687",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n#\n\n#  Copyright (c) Kitware, Inc.\n\n#  All rights reserved.\n\n#  See LICENSE.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.  See the above copyright notice for more information.\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set (unit_tests)\n\n#\n\n# set (unit_tests_which_require_data)\n\n#\n\n# smtk_unit_tests(\n\n#   LABEL \"oscillator session\"\n\n#   SOURCES ${unit_tests}\n\n#   SOURCES_REQUIRE_DATA ${unit_tests_which_require_data}\n\n#   LIBRARIES smtkCore smtkOscillatorSession)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/session/oscillator/testing/python/CMakeLists.txt" : {
      "ObjectId" : "7bfda5d9ca349710c9a1942953eb6ad33b102e9f",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Tests that require SMTK_DATA_DIR\n\n# set(smtkOscillatorPythonDataTests)\n\n#\n\n## Only run these tests if we have a valid data directory\n\n# if (SMTK_DATA_DIR)\n\n#   foreach (test ${smtkOscillatorPythonDataTests})\n\n#     smtk_add_test_python(${test}Py ${test}.py\n\n#       --data-dir=${SMTK_DATA_DIR} )\n\n#     set_tests_properties( ${test}Py PROPERTIES LABELS \"oscillator session\" )\n\n#   endforeach()\n\n# endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/session/polygon/CMakeLists.txt" : {
      "ObjectId" : "32b0a60d2de9e183dfdc6973416ab9e21efe1f1d",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The import operator is only available if there is VTK\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Don't add the VTK or other subdirectories as they use the\n\n# vtk_module_library() macro and vtk/module.cmake file.\n\n# The vtk_smtk_process_modules() macro finds all subdirectories\n\n# containing a module.cmake file automatically.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#vtk targets don't specify an include directory through usage-requirements, so\n\n#we manually add them here\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install the library and exports the library when used from a build tree\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install the headers\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "smtk/session/polygon/plugin/CMakeLists.txt" : {
      "ObjectId" : "83b596628690d279195b5b5be2dadfe7baebcf7a",
      "LastModified" : "2019-04-16T12:34:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need to add the current value of VTK_MODULES_DIR to the module path\n\n# so that when the plugins are built all the modules can be found. Otherwise,\n\n# modules that aren't loaded as direct dependencies of CMB modules will\n\n# not be found.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#qt5_wrap_cpp(UI_SRCS qtPolygonEdgeOperationView.ui)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/session/polygon/pybind11/CMakeLists.txt" : {
      "ObjectId" : "9b8a3eb51916b1f3f946a9b9cebefac69114b8eb",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install library\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create and install module __init__.py\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/session/polygon/qt/CMakeLists.txt" : {
      "ObjectId" : "20419ceb822cb6c146cd2956191b351d0f0c5cc3",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set up sources to build\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#install the headers\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Need to add the location of the moc files to the include dirs:\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set smtkPolygonQtExt to publicly link to smtkCore\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#install the library and exports the library when used from a build tree\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "smtk/session/polygon/testing/CMakeLists.txt" : {
      "ObjectId" : "83305da3a2914ab6d4dec88c168fc7037bd7553e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/session/polygon/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "f4b16053df6e663d43538bf7cd8057ee0fed4f2d",
      "LastModified" : "2019-04-16T20:08:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n#\n\n#  Copyright (c) Kitware, Inc.\n\n#  All rights reserved.\n\n#  See LICENSE.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even\n\n#  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#  PURPOSE.  See the above copyright notice for more information.\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/session/polygon/testing/python/CMakeLists.txt" : {
      "ObjectId" : "f494e647ff1a7a85b62b4160c0a29144528d5f78",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Additional tests that require SMTK_DATA_DIR\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#polygonImport\n\n#polygonReadFile\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "smtk/session/polygon/vtk/CMakeLists.txt" : {
      "ObjectId" : "3e5a2f4d92303868fca7e17b315ab22c14dc0a04",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Link explicitly to vtkSMTKOperationsExt, which can't be set in module.cmake\n\n#because this is invoked by separate vtk_smtk_process_modules in polygon session\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ... and make header compilation tests link properly:\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ... and install the export header\n\n#has to be after the vtk_module_library\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Potentially wrap in Python using VTK's wrapping methods.\n\n# This makes the filters available for use with other VTK-wrapped filters.\n\n#if (SMTK_ENABLE_PYTHON_WRAPPING AND VTK_WRAP_PYTHON)\n\n#  vtk_smtk_wrap_module_python3(${vtk-module} \"${headers}\")\n\n#endif()\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "smtk/session/polygon/vtk/module.cmake" : {
      "ObjectId" : "4b7731d6349c114db3cc5a79f7dd6aae5a773887",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test for targets that might be required or\n\n# might not exist.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/session/pybind11/CMakeLists.txt" : {
      "ObjectId" : "6f449fa98c1dc9ccbaa947f1048b6142ffee35cc",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/session/vtk/CMakeLists.txt" : {
      "ObjectId" : "1e00f644d44a7374ab9593bd193dee7825810771",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Only include the VTK use-file in subdirectories\n\n# that require VTK include paths. Otherwise, command\n\n# lines get too long on some platforms.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set smtkVTKSession to publicly link to smtkCore and VTK\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#vtk targets don't specify an include directory through usage-requirements, so\n\n#we manually add them here\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#install the library and exports the library when used from a build tree\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Operations which have XML descriptions in separate files\n\n# need to have it encoded as a string in a header.\n\n# We do not need the path to the generated header (appended\n\n# to vtkOperationXML) since the operations themselves include\n\n# the header in their implementations.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install the headers\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "smtk/session/vtk/pybind11/CMakeLists.txt" : {
      "ObjectId" : "ec3bd1b5193097c92428e898971fbf40b087a675",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install library\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create and install module __init__.py\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/session/vtk/testing/CMakeLists.txt" : {
      "ObjectId" : "83305da3a2914ab6d4dec88c168fc7037bd7553e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/session/vtk/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "d2d9f2f8dce5efbcaf1ea2eb488fc38413eabe5d",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/session/vtk/testing/python/CMakeLists.txt" : {
      "ObjectId" : "9797f38e9f199d25130240cbf977733e14ccf00d",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Empty for now.\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Additional tests that require SMTK_DATA_DIR\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/simulation/CMakeLists.txt" : {
      "ObjectId" : "eb66250d9575cf0756d8c6a74f714f941b2d5bd3",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set up sources to build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#install the headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/simulation/pybind11/CMakeLists.txt" : {
      "ObjectId" : "8e5bdd60c36b525dd62a98e47756f60052ef2766",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install library\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create and install module __init__.py\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/simulation/testing/CMakeLists.txt" : {
      "ObjectId" : "8e0b9300c35e379e4e9db9c2db7d2ca7931a71dc",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/simulation/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/view/CMakeLists.txt" : {
      "ObjectId" : "6288f610d2f7a1335602f3b3ebb5d03993a6bd43",
      "LastModified" : "2019-04-16T12:34:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set up sources to build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ComponentsByTypeGenerator.cxx\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#ComponentsByTypeGenerator.h\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#install the headers\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "smtk/view/pybind11/CMakeLists.txt" : {
      "ObjectId" : "ac1d4d0066014ecd10dce8789f5ffbe5a12c92df",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install library\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create and install module __init__.py\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/view/testing/CMakeLists.txt" : {
      "ObjectId" : "83305da3a2914ab6d4dec88c168fc7037bd7553e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/view/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "d3b0ad44720272cfc74d42fac0c8fc2f4e0f9a2e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/view/testing/python/CMakeLists.txt" : {
      "ObjectId" : "7856eaa093f995648d8fc2015bb7e8413a079c5e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Additional tests that require SMTK_DATA_DIR\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/workflow/CMakeLists.txt" : {
      "ObjectId" : "4489070d0f033f274dd9b473d66e12f2035cc787",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(pybind11)\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Install the headers\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "smtk/workflow/testing/CMakeLists.txt" : {
      "ObjectId" : "83305da3a2914ab6d4dec88c168fc7037bd7553e",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "smtk/workflow/testing/cxx/CMakeLists.txt" : {
      "ObjectId" : "a4a1e434e30f32835e0dbfc536ff45f861368c84",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  unitOperationFilterSort.cxx\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "smtk/workflow/testing/python/CMakeLists.txt" : {
      "ObjectId" : "2907045cc2a88141412885f7f38c40f38af52fb4",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Additional tests that require SMTK_DATA_DIR\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    unitOperatorFilterSort\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "thirdparty/CMakeLists.txt" : {
      "ObjectId" : "9a851d8380ffb64991f6fbcc5b9e983c441caf38",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# disable warning flags for cJSON. This is optional because we should be\n\n# continually pushing updates to cJSON, rather than just using it. For the\n\n# sanity of our own dashboards, though, it is nice to be able to distinguish\n\n# between cJSON's warnings and our own.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# disables: warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# disables: warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead.\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#if(SMTK_ENABLE_OPENCV)\n\n#  set(Delaunay_USE_OPENCV ON)\n\n#endif()\n\n#if(SMTK_ENABLE_VTK_SUPPORT)\n\n#  set(Delaunay_USE_VTK ON)\n\n#endif()\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# disable warning flags for delaunay.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# disables: warning C4251: dll-interface warnings involving stl\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "thirdparty/cJSON/CMakeLists.txt" : {
      "ObjectId" : "ecf42cd0097baa59bc0d96f71f022929df43f6c3",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set position-independent flag when other project libs are shared.\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "thirdparty/pugixml/scripts/CMakeLists.txt" : {
      "ObjectId" : "6270ae55c957ae3135501481e3fd09190df7bdf3",
      "LastModified" : "2019-01-04T22:51:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pre-defines standard install locations on *nix systems.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 213
  },
  "ElapsedTime" : 3657
}