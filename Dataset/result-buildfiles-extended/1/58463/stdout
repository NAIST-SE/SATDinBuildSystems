{
  "Repository" : "58463",
  "Revision" : "HEAD",
  "ObjectId" : "cb46ec965b0110a394b912f7e0a39f865b42a9a5",
  "CommitTime" : "2017-06-17T13:38:46Z",
  "Files" : {
    "cmake/FindALUT.cmake" : {
      "ObjectId" : "fd6c1e5c831294fda5a394229d42131d5d21311b",
      "LastModified" : "2009-09-27T00:33:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate FreeAlut\n\n# This module defines\n\n#  ALUT_LIBRARY\n\n#  ALUT_FOUND, if false, do not try to link to Alut\n\n#  ALUT_INCLUDE_DIR, where to find the headers\n\n#\n\n# $ALUTDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$ALUTDIR\n\n# used in building Alut.\n\n#\n\n# Created by Eric Wing. This was influenced by the FindSDL.cmake module.\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# ALUT_LIBRARY to override this selection.\n\n# Tiger will include OpenAL as part of the System.\n\n# But for now, we have to look around.\n\n# Other (Unix) systems should be able to utilize the non-framework paths.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tiger\n",
        "Line" : 22,
        "CharPositionInLine" : 54
      },
      "2" : {
        "Text" : "# Tardis specific hack\n",
        "Line" : 23,
        "CharPositionInLine" : 36
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 30,
        "CharPositionInLine" : 15
      },
      "4" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 33,
        "CharPositionInLine" : 24
      },
      "5" : {
        "Text" : "# Blastwave\n",
        "Line" : 36,
        "CharPositionInLine" : 20
      },
      "6" : {
        "Text" : "# I'm not sure if I should do a special casing for Apple. It is\n\n# unlikely that other Unix systems will find the framework path.\n\n# But if they do ([Next|Open|GNU]Step?),\n\n# do they want the -framework option also?\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# String is in default search path, don't need to use -F\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# String is not /Library/Frameworks, need to use -F\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Clear the temp variable so nobody can see it\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "cmake/FindBluez.cmake" : {
      "ObjectId" : "fad581d1cd68a9f86f241825da68f1a24d89fa16",
      "LastModified" : "2009-08-25T22:58:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Bluez library\n\n# This module defines\n\n#  BLUEZ_INCLUDE_DIR, where to find bluetooth.h\n\n#  BLUEZ_LIBRARIES, the libraries needed to use Bluez.\n\n#  BLUEZ_FOUND, If false, do not try to use Bluez.\n\n#\n\n# Copyright (c) 2007, Michal Cihar, <michal@cihar.com>\n\n#\n\n# vim: expandtab sw=4 ts=4 sts=4:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindBox2D.cmake" : {
      "ObjectId" : "5a83307261b52d70362480012a485475c70407fc",
      "LastModified" : "2012-12-10T10:52:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Box2D library\n\n# This module defines\n\n# BOX2D_LIBRARY, the name of the library to link against\n\n# BOX2D_FOUND, if false, do not try to link to Box2D\n\n# BOX2D_INCLUDE_DIR, where to find Box2D headers\n\n#\n\n# Created by Sven-Hendrik Haase. Based on the FindZLIB.cmake module.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Could add \"general\" keyword, but it is optional\n",
        "Line" : 25,
        "CharPositionInLine" : 61
      },
      "3" : {
        "Text" : "# Per-recommendation\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set BOX2D_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindBullet.cmake" : {
      "ObjectId" : "aa21e6d95f05fe64359e6c8cbec4b5836fcf6030",
      "LastModified" : "2009-10-21T13:04:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find BULLET\n\n# Find the native BULLET headers and libraries.\n\n#\n\n#  BULLET_INCLUDE_DIR -  where to find ode.h, etc.\n\n#  BULLET_LIBRARIES    - List of libraries when using BULLET.\n\n#  BULLET_FOUND        - True if BULLET found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the library.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Copy the results to the output variables.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Report the results.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindLibnotifymm.cmake" : {
      "ObjectId" : "ef7ef9596bcabdee4a599097e3582cc2494ad819",
      "LastModified" : "2009-08-25T22:58:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate libnotifymm\n\n# This module defines\n\n# LIBNOTIFYMM_LIBRARY\n\n# LIBNOTIFYMM_FOUND, if false, do not try to link to libnotifymm\n\n# LIBNOTIFYMM_INCLUDE_DIR, where to find the headers\n\n#\n\n# $LIBNOTIFYMM_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$LIBNOTIFYMM_DIR\n\n#\n\n# Created by Chris Pilkington\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sorry, but libnotifymm includes are broken\n\n# libnotifymm-1.0/libnotifymm.h includes libnotifymm/init.h, libnotifymm/notify.h and libnotifymm/notification.h which exist in a sub directory\n\n# I don't get why they don't just call libnotifymm-1.0 libnotifymm and get rid of the sub directory\n\n# Anyway, my solution for the moment is:\n\n# Move the contents of libnotifymm-1.0/libnotifymm/ to libnotifymm-1.0/\n\n# Rename libnotifymm-1.0/ to libnotifymm/\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 30,
        "CharPositionInLine" : 16
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 31,
        "CharPositionInLine" : 23
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 32,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 5
    },
    "cmake/FindODE.cmake" : {
      "ObjectId" : "bd6b99d41433e4de3256a3e685350472c556e7cc",
      "LastModified" : "2009-08-25T22:58:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate ode\n\n# This module defines\n\n# ODE_LIBRARY\n\n# ODE_FOUND, if false, do not try to link to ode \n\n# ODE_INCLUDE_DIR, where to find the headers\n\n#\n\n# $ODE_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$ODE_DIR\n\n#\n\n# Created by David Guthrie.  Based on code by Robert Osfield \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 23,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 24,
        "CharPositionInLine" : 23
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 25,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 4
    },
    "cmake/FindOggVorbis.cmake" : {
      "ObjectId" : "3e20b09066792ecc8b06da02a956ee150a49a386",
      "LastModified" : "2009-08-25T22:58:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the OggVorbis libraries\n\n# Once done this will define\n\n#\n\n#  OGGVORBIS_FOUND - system has OggVorbis\n\n#  OGGVORBIS_VERSION - set either to 1 or 2\n\n#  OGGVORBIS_INCLUDE_DIR - the OggVorbis include directory\n\n#  OGGVORBIS_LIBRARIES - The libraries needed to use OggVorbis\n\n#  OGG_LIBRARY         - The Ogg library\n\n#  VORBIS_LIBRARY      - The Vorbis library\n\n#  VORBISFILE_LIBRARY  - The VorbisFile library\n\n#  VORBISENC_LIBRARY   - The VorbisEnc library\n\n# Copyright (c) 2006, Richard Laerkaeng, <richard at goteborg.utfors.se>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#check_include_files(vorbis/vorbisfile.h HAVE_VORBISFILE_H)\n\n#check_library_exists(ogg ogg_page_version \"\" HAVE_LIBOGG)\n\n#check_library_exists(vorbis vorbis_info_init \"\" HAVE_LIBVORBIS)\n\n#check_library_exists(vorbisfile ov_open \"\" HAVE_LIBVORBISFILE)\n\n#check_library_exists(vorbisenc vorbis_info_clear \"\" HAVE_LIBVORBISENC)\n\n#check_library_exists(vorbis vorbis_bitrate_addblock \"\" HAVE_LIBVORBISENC2)\n\n#if (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE AND HAVE_LIBVORBISENC)\n\n#    message(STATUS \"Ogg/Vorbis found\")\n\n#    set (VORBIS_LIBS \"-lvorbis -logg\")\n\n#    set (VORBISFILE_LIBS \"-lvorbisfile\")\n\n#    set (VORBISENC_LIBS \"-lvorbisenc\")\n\n#    set (OGGVORBIS_FOUND TRUE)\n\n#    if (HAVE_LIBVORBISENC2)\n\n#        set (HAVE_VORBIS 2)\n\n#    else (HAVE_LIBVORBISENC2)\n\n#        set (HAVE_VORBIS 1)\n\n#    endif (HAVE_LIBVORBISENC2)\n\n#else (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE AND HAVE_LIBVORBISENC)\n\n#    message(STATUS \"Ogg/Vorbis not found\")\n\n#endif (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE AND HAVE_LIBVORBISENC)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindXDG-basedir.cmake" : {
      "ObjectId" : "a2d28d38bc23d6abf6a5ea8b9dd913c4e3725a5d",
      "LastModified" : "2012-12-10T10:52:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate libxdg-basedir\n\n# This module defines\n\n# LIBXDGBASEDIR_LIBRARY\n\n# LIBXDGBASEDIR_FOUND, if false, do not try to link to libxdg-basedir\n\n# LIBXDGBASEDIR_INCLUDE_DIR, where to find the headers\n\n#\n\n# $LIBXDGBASEDIR_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$LIBXDGBASEDIR_DIR\n\n#\n\n# Created by Chris Pilkington\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 21,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 22,
        "CharPositionInLine" : 23
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 23,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 4
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "c635225ed025b1b7e20c3559719405e64a606467",
      "LastModified" : "2016-08-12T13:08:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the project name\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add definitions, compiler switches, etc.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Files from library directory\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#list all source files here\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Some of the libraries have different names than their Find*.cmake name\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#need to link to some other libraries ? just add them here\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "CMAKE" : 9
  },
  "ElapsedTime" : 1355
}