{
  "Repository" : "3815621",
  "Revision" : "HEAD",
  "ObjectId" : "db7c4520c87d61bccdc05b05c54e7e50bdfd8d14",
  "CommitTime" : "2017-04-10T14:58:11Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "e37f4f0ac5a30193d5397e5bd7706136e808d217",
      "LastModified" : "2017-04-10T09:22:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# local environment\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set minimum cmake version\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# mac-specific settings\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Xcode-specific settings\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#find dune-common and set the module path\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#include the dune macros\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# start a dune project with information from dune.module\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# macros from dune-xt\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#these should be split into all+hmm+msfem parts\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# error_calc\n",
        "Line" : 70,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "#\n",
        "Line" : 75,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "#disable most warnings from dependent modules, except gdt,stuff\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "cmake/modules/AddMETISFlags.cmake" : {
      "ObjectId" : "b0f4bde3cf10ff3b8d9327da00c9e31b2ca04ed0",
      "LastModified" : "2013-10-25T08:53:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Module providing convenience functions for using METIS\n\n#\n\n# Provides the following functions:\n\n#\n\n# add_dune_metis_flags(target1 target2 ...)\n\n#\n\n# Adds the necessary flags to compile and link the targets with ParMETIS support.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/CMakeLists.txt" : {
      "ObjectId" : "2432306d3d9e995c8ac462ade7000cbe9a794c6e",
      "LastModified" : "2013-10-25T08:53:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/CheckEmplace.cmake" : {
      "ObjectId" : "539b50eac23415036d8622efbc4a107e100e3347",
      "LastModified" : "2014-05-13T16:24:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Module that checks whether std::map::emplace is available.\n\n#\n\n# Sets the follwing variable:\n\n#\n\n# HAVE_EMPLACE                     True if map::emplace is available\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check whether map::emplace exists\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/DuneMultiscaleMacros.cmake" : {
      "ObjectId" : "d1e951f7635565f75e9a62651a63a34a7a914393",
      "LastModified" : "2016-09-05T12:38:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/FindFFTW.cmake" : {
      "ObjectId" : "83348cbae0e2329be5917ded2c9e973ed1c0f695",
      "LastModified" : "2016-09-05T12:38:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the FFTW library\n\n#\n\n# Usage:\n\n#   find_package(FFTW [REQUIRED] [QUIET] )\n\n#   NOTE: this only fnids and uses the DOUBLE precision variant\n\n#     \n\n# It sets the following variables:\n\n#   FFTW_FOUND               ... true if fftw is found on the system\n\n#   FFTW_LIBRARIES           ... full path to fftw library\n\n#   FFTW_INCLUDES            ... fftw include directory\n\n#\n\n# The following variables will be checked by the function\n\n#   FFTW_USE_STATIC_LIBS    ... if true, only static libraries are found\n\n#   FFTW_ROOT               ... if set, the libraries are exclusively searched\n\n#                               under this path\n\n#   FFTW_LIBRARY            ... fftw library to use\n\n#   FFTW_INCLUDE_DIR        ... fftw include directory\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#If environment variable FFTWDIR is specified, it has same effect as FFTW_ROOT\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if we can use PkgConfig\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Determine from PKG\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Check whether to search static or dynamic libs\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#find libs\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#find includes\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "cmake/modules/FindPETSc.cmake" : {
      "ObjectId" : "fd60ee59143be8686eeb882733d0eacdd14822d7",
      "LastModified" : "2014-05-13T16:24:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Downloaded from https://github.com/jedbrown/cmake-modules/blob/master/FindPETSc.cmake\n\n# Last update 2012/09/20\n\n# Licenced under CMake's BSD Licence\n\n#\n\n#\n\n#\n\n# - Try to find PETSc\n\n# Once done this will define\n\n#\n\n#  PETSC_FOUND        - system has PETSc\n\n#  PETSC_INCLUDES     - the PETSc include directories\n\n#  PETSC_LIBRARIES    - Link these to use PETSc\n\n#  PETSC_COMPILER     - Compiler used by PETSc, helpful to find a compatible MPI\n\n#  PETSC_DEFINITIONS  - Compiler switches for using PETSc\n\n#  PETSC_MPIEXEC      - Executable for running MPI programs\n\n#  PETSC_VERSION      - Version string (MAJOR.MINOR.SUBMINOR)\n\n#\n\n#  Usage:\n\n#  find_package(PETSc COMPONENTS CXX)  - required if build --with-clanguage=C++ --with-c-support=0\n\n#  find_package(PETSc COMPONENTS C)    - standard behavior of checking build using a C compiler\n\n#  find_package(PETSc)                 - same as above\n\n#\n\n# Setting these changes the behavior of the search\n\n#  PETSC_DIR - directory in which PETSc resides\n\n#  PETSC_ARCH - build architecture\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Right now, this is designed for compatability with the --with-clanguage option, so\n\n# only allow one item in the components list.\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# This is a stub for allowing multiple components should that time ever come. Perhaps\n\n# to also test Fortran bindings?\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# break line into three fields (the first is always \"#define\")\n",
        "Line" : 60,
        "CharPositionInLine" : 53
      },
      "4" : {
        "Text" : "# Also in local scope so we have access below\n",
        "Line" : 64,
        "CharPositionInLine" : 34
      },
      "5" : {
        "Text" : "# make dev version compare higher than any patch level of a released version\n",
        "Line" : 69,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Debian\n",
        "Line" : 80,
        "CharPositionInLine" : 118
      },
      "7" : {
        "Text" : "# If set, use environment variable first\n\n# Debian defaults\n",
        "Line" : 88,
        "CharPositionInLine" : 39
      },
      "8" : {
        "Text" : "# Determine whether the PETSc layout is old-style (through 2.3.3) or\n\n# new-style (>= 3.0.0)\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# > 2.3.3\n",
        "Line" : 115,
        "CharPositionInLine" : 63
      },
      "10" : {
        "Text" : "# <= 2.3.3\n",
        "Line" : 118,
        "CharPositionInLine" : 63
      },
      "11" : {
        "Text" : "# Put variables into environment since they are needed to get\n\n# configuration (petscvariables) in the PETSc makefile\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# A temporary makefile to probe the PETSc configuration\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# We are done with the temporary Makefile, calling PETSC_GET_VARIABLE after this point is invalid!\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Extract include paths and libraries from compile command line\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Clear any stale value, if we got here, we need to find it again\n",
        "Line" : 167,
        "CharPositionInLine" : 76
      },
      "16" : {
        "Text" : "# Look for petscvec first, if it doesn't exist, we must be using single-library\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# libpetscsys is called libpetsc prior to 3.1 (when single-library was introduced)\n",
        "Line" : 176,
        "CharPositionInLine" : 47
      },
      "18" : {
        "Text" : "# There is no libpetscvec\n",
        "Line" : 193,
        "CharPositionInLine" : 70
      },
      "19" : {
        "Text" : "# Minimal includes fail, see if just adding full includes fixes it\n",
        "Line" : 250,
        "CharPositionInLine" : 29
      },
      "20" : {
        "Text" : "# It does, we just need all the includes (\n",
        "Line" : 252,
        "CharPositionInLine" : 33
      },
      "21" : {
        "Text" : "# We are going to need to link the external libs explicitly\n",
        "Line" : 255,
        "CharPositionInLine" : 35
      },
      "22" : {
        "Text" : "# It looks like we really need everything, should have listened to Matt\n",
        "Line" : 265,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# We fail anyways\n",
        "Line" : 268,
        "CharPositionInLine" : 22
      },
      "24" : {
        "Text" : "# We fail anyways\n",
        "Line" : 270,
        "CharPositionInLine" : 24
      },
      "25" : {
        "Text" : "# We do an out-of-source build so __FILE__ will be an absolute path, hence __INSDIR__ is superfluous\n",
        "Line" : 277,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Sometimes this can be used to assist FindMPI.cmake\n",
        "Line" : 283,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Note that we have forced values for all these choices.  If you\n\n# change these, you are telling the system to trust you that they\n\n# work.  It is likely that you will end up with a broken build.\n",
        "Line" : 288,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 28
    },
    "cmake/modules/FindPackageMultipass.cmake" : {
      "ObjectId" : "485a7451d06cccbef42b6ab88e5f1d7910c9e733",
      "LastModified" : "2014-05-13T16:24:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Downloaded from https://github.com/jedbrown/cmake-modules/blob/master/FindPackageMultipass.cmake\n\n# Last update 2012/09/20\n\n# Licenced under CMake's BSD Licence\n\n#\n\n#\n\n# PackageMultipass - this module defines two macros\n\n#\n\n# FIND_PACKAGE_MULTIPASS (Name CURRENT\n\n# STATES VAR0 VAR1 ...\n\n# DEPENDENTS DEP0 DEP1 ...)\n\n#\n\n# This function creates a cache entry <UPPERCASED-Name>_CURRENT which\n\n# the user can set to \"NO\" to trigger a reconfiguration of the package.\n\n# The first time this function is called, the values of\n\n# <UPPERCASED-Name>_VAR0, ... are saved. If <UPPERCASED-Name>_CURRENT\n\n# is false or if any STATE has changed since the last time\n\n# FIND_PACKAGE_MULTIPASS() was called, then CURRENT will be set to \"NO\",\n\n# otherwise CURRENT will be \"YES\". IF not CURRENT, then\n\n# <UPPERCASED-Name>_DEP0, ... will be FORCED to NOTFOUND.\n\n# Example:\n\n# find_path (FOO_DIR include/foo.h)\n\n# FIND_PACKAGE_MULTIPASS (Foo foo_current\n\n# STATES DIR\n\n# DEPENDENTS INCLUDES LIBRARIES)\n\n# if (NOT foo_current)\n\n# # Make temporary files, run programs, etc, to determine FOO_INCLUDES and FOO_LIBRARIES\n\n# endif (NOT foo_current)\n\n#\n\n# MULTIPASS_SOURCE_RUNS (Name INCLUDES LIBRARIES SOURCE RUNS LANGUAGE)\n\n# Always runs the given test, use this when you need to re-run tests\n\n# because parent variables have made old cache entries stale. The LANGUAGE\n\n# variable is either C or CXX indicating which compiler the test should\n\n# use.\n\n# MULTIPASS_C_SOURCE_RUNS (Name INCLUDES LIBRARIES SOURCE RUNS)\n\n# DEPRECATED! This is only included for backwards compatability. Use\n\n# the more general MULTIPASS_SOURCE_RUNS instead.\n\n# Always runs the given test, use this when you need to re-run tests\n\n# because parent variables have made old cache entries stale.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The name of the stored value for the given state\n",
        "Line" : 51,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# Clear all the dependent variables so that the module can reset them\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# This is a ridiculous hack. CHECK_${language}_SOURCE_* thinks that if the\n\n# *name* of the return variable doesn't change, then the test does\n\n# not need to be re-run. We keep an internal count which we\n\n# increment to guarantee that every test name is unique. If we've\n\n# gotten here, then the configuration has changed enough that the\n\n# test *needs* to be rerun.\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Why can't I add to a cache variable?\n",
        "Line" : 96,
        "CharPositionInLine" : 49
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindSuiteSparse.cmake" : {
      "ObjectId" : "7a13d9832f32bb2e560d5067bcfb5df74b3c5efb",
      "LastModified" : "2015-03-20T15:39:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ceres Solver - A fast non-linear least squares minimizer\n\n# Copyright 2013 Google Inc. All rights reserved.\n\n# http://code.google.com/p/ceres-solver/\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice,\n\n#   this list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the name of Google Inc. nor the names of its contributors may be\n\n#   used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Author: alexs.mac@gmail.com (Alex Stewart)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FindSuiteSparse.cmake - Find SuiteSparse libraries & dependencies.\n\n#\n\n# This module defines the following variables:\n\n#\n\n# SUITESPARSE_FOUND: TRUE iff SuiteSparse and all dependencies have been found.\n\n# SUITESPARSE_INCLUDE_DIRS: Include directories for all SuiteSparse components.\n\n# SUITESPARSE_LIBRARIES: Libraries for all SuiteSparse component libraries and\n\n#                        dependencies.\n\n# SUITESPARSE_VERSION: Extracted from UFconfig.h (<= v3) or\n\n#                      SuiteSparse_config.h (>= v4).\n\n# SUITESPARSE_MAIN_VERSION: Equal to 4 if SUITESPARSE_VERSION = 4.2.1\n\n# SUITESPARSE_SUB_VERSION: Equal to 2 if SUITESPARSE_VERSION = 4.2.1\n\n# SUITESPARSE_SUBSUB_VERSION: Equal to 1 if SUITESPARSE_VERSION = 4.2.1\n\n#\n\n# SUITESPARSE_IS_BROKEN_SHARED_LINKING_UBUNTU_SYSTEM_VERSION: TRUE iff running\n\n#     on Ubuntu, SUITESPARSE_VERSION is 3.4.0 and found SuiteSparse is a system\n\n#     install, in which case found version of SuiteSparse cannot be used to link\n\n#     a shared library due to a bug (static linking is unaffected).\n\n#\n\n# The following variables control the behaviour of this module:\n\n#\n\n# SUITESPARSE_INCLUDE_DIR_HINTS: List of additional directories in which to\n\n#                                search for SuiteSparse includes,\n\n#                                e.g: /timbuktu/include.\n\n# SUITESPARSE_LIBRARY_DIR_HINTS: List of additional directories in which to\n\n#                                search for SuiteSparse libraries,\n\n#                                e.g: /timbuktu/lib.\n\n#\n\n# The following variables define the presence / includes & libraries for the\n\n# SuiteSparse components searched for, the SUITESPARSE_XX variables are the\n\n# union of the variables for all components.\n\n#\n\n# == Symmetric Approximate Minimum Degree (AMD)\n\n# AMD_FOUND\n\n# AMD_INCLUDE_DIR\n\n# AMD_LIBRARY\n\n#\n\n# == Constrained Approximate Minimum Degree (CAMD)\n\n# CAMD_FOUND\n\n# CAMD_INCLUDE_DIR\n\n# CAMD_LIBRARY\n\n#\n\n# == Column Approximate Minimum Degree (COLAMD)\n\n# COLAMD_FOUND\n\n# COLAMD_INCLUDE_DIR\n\n# COLAMD_LIBRARY\n\n#\n\n# Constrained Column Approximate Minimum Degree (CCOLAMD)\n\n# CCOLAMD_FOUND\n\n# CCOLAMD_INCLUDE_DIR\n\n# CCOLAMD_LIBRARY\n\n#\n\n# == Sparse Supernodal Cholesky Factorization and Update/Downdate (CHOLMOD)\n\n# CHOLMOD_FOUND\n\n# CHOLMOD_INCLUDE_DIR\n\n# CHOLMOD_LIBRARY\n\n#\n\n# == Multifrontal Sparse QR (SuiteSparseQR)\n\n# SUITESPARSEQR_FOUND\n\n# SUITESPARSEQR_INCLUDE_DIR\n\n# SUITESPARSEQR_LIBRARY\n\n#\n\n# == Common configuration for all but CSparse (SuiteSparse version >= 4).\n\n# SUITESPARSE_CONFIG_FOUND\n\n# SUITESPARSE_CONFIG_INCLUDE_DIR\n\n# SUITESPARSE_CONFIG_LIBRARY\n\n#\n\n# == Common configuration for all but CSparse (SuiteSparse version < 4).\n\n# UFCONFIG_FOUND\n\n# UFCONFIG_INCLUDE_DIR\n\n#\n\n# Optional SuiteSparse Dependencies:\n\n#\n\n# == Serial Graph Partitioning and Fill-reducing Matrix Ordering (METIS)\n\n# METIS_FOUND\n\n# METIS_LIBRARY\n\n#\n\n# == Intel Thread Building Blocks (TBB)\n\n# TBB_FOUND\n\n# TBB_LIBRARIES\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Called if we failed to find SuiteSparse or any of it's required dependencies,\n\n# unsets all public (designed to be used externally) variables and reports\n\n# error message at priority depending upon [REQUIRED/QUIET/<NONE>] argument.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Note <package>_FIND_[REQUIRED/QUIETLY] variables defined by FindPackage()\n\n# use the camelcase library name, not uppercase.\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Neither QUIETLY nor REQUIRED, use WARNING which emits a message\n\n# but continues configuration and allows generation.\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Specify search directories for include files and libraries (this is the union\n\n# of the search directories for all OSs).  Search user-specified hint\n\n# directories first if supplied, and search user-installed locations first\n\n# so that we prefer user installs to system installs where both exist.\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Mac OS X\n\n# Mac OS X\n",
        "Line" : 144,
        "CharPositionInLine" : 30
      },
      "7" : {
        "Text" : "# Ubuntu\n",
        "Line" : 148,
        "CharPositionInLine" : 27
      },
      "8" : {
        "Text" : "# Mac OS X\n\n# Mac OS X\n",
        "Line" : 153,
        "CharPositionInLine" : 26
      },
      "9" : {
        "Text" : "# Ubuntu\n",
        "Line" : 157,
        "CharPositionInLine" : 23
      },
      "10" : {
        "Text" : "# BLAS.\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# LAPACK.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# AMD.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# CAMD.\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# COLAMD.\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# CCOLAMD.\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# CHOLMOD.\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# SuiteSparseQR.\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# SuiteSparseQR may be compiled with Intel Threading Building Blocks,\n\n# we assume that if TBB is installed, SuiteSparseQR was compiled with\n\n# support for it, this will do no harm if it wasn't.\n",
        "Line" : 307,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Append TBB malloc library to TBB libraries list whilst retaining\n\n# any CMake generated help string (cache variable).\n",
        "Line" : 329,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Add the TBB libraries to the SuiteSparseQR libraries (the only\n\n# libraries to optionally depend on TBB).\n",
        "Line" : 335,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# If we cannot find all required TBB components do not include it as\n\n# a dependency.\n",
        "Line" : 340,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# UFconfig / SuiteSparse_config.\n\n#\n\n# If SuiteSparse version is >= 4 then SuiteSparse_config is required.\n\n# For SuiteSparse 3, UFconfig.h is required.\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# SuiteSparse_config (SuiteSparse version >= 4) requires librt library for\n\n# timing by default when compiled on Linux or Unix, but not on OSX (which\n\n# does not have librt).\n",
        "Line" : 382,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Extract the SuiteSparse version from the appropriate header (UFconfig.h for\n\n# <= v3, SuiteSparse_config.h for >= v4).\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# SuiteSparse version <= 3.\n",
        "Line" : 418,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# This is on a single line s/t CMake does not interpret it as a list of\n\n# elements and insert ';' separators which would result in 4.;2.;1 nonsense.\n",
        "Line" : 443,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# SuiteSparse version >= 4.\n",
        "Line" : 451,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# This is on a single line s/t CMake does not interpret it as a list of\n\n# elements and insert ';' separators which would result in 4.;2.;1 nonsense.\n",
        "Line" : 477,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Only mark SuiteSparse as found if all required dependencies have been found.\n",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Handle config separately, as otherwise at least one of them will be set\n\n# to NOTFOUND which would cause any check on SUITESPARSE_INCLUDE_DIRS to fail.\n",
        "Line" : 504,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# As SuiteSparse includes are often all in the same directory, remove any\n\n# repetitions.\n",
        "Line" : 514,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Important: The ordering of these libraries is *NOT* arbitrary, as these\n\n# could potentially be static libraries their link ordering is important.\n",
        "Line" : 518,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Determine if we are running on Ubuntu with the package install of SuiteSparse\n\n# which is broken and does not support linking a shared library.\n",
        "Line" : 540,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Any even moderately recent Ubuntu release (likely to be affected by\n\n# this bug) should have lsb_release, if it isn't present we are likely\n\n# on a different Linux distribution (should be fine).\n",
        "Line" : 547,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# We are on Ubuntu, and the SuiteSparse version matches the broken\n\n# system install version and is a system install.\n",
        "Line" : 557,
        "CharPositionInLine" : 6
      },
      "36" : {
        "Text" : "# Handle REQUIRED and QUIET arguments to FIND_PACKAGE\n",
        "Line" : 569,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# A change to CMake after release 2.8.10.2 means that\n\n# FindPackageHandleStandardArgs() unsets <LibraryName>_FOUND without checking\n\n# if it is one of the variables passed whose existence & validity is verified\n\n# by FindPackageHandleStandardArgs() in conjunction with handling the REQUIRED\n\n# and QUIET optional arguments, as such we use an intermediary variable.\n",
        "Line" : 571,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "cmake/modules/ResolveCompilerPaths.cmake" : {
      "ObjectId" : "f9be1335429607fcc2bbe9255a303bc19ca7a1d2",
      "LastModified" : "2014-05-13T16:24:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Downloaded from https://github.com/jedbrown/cmake-modules/blob/master/ResolveCompilerPaths.cmake\n\n# Last update 2012/09/20\n\n# Licenced under CMake's BSD Licence\n\n#\n\n## ResolveCompilerPaths - this module defines two macros\n\n#\n\n# RESOLVE_LIBRARIES (XXX_LIBRARIES LINK_LINE)\n\n# This macro is intended to be used by FindXXX.cmake modules.\n\n# It parses a compiler link line and resolves all libraries\n\n# (-lfoo) using the library path contexts (-L/path) in scope.\n\n# The result in XXX_LIBRARIES is the list of fully resolved libs.\n\n# Example:\n\n#\n\n# RESOLVE_LIBRARIES (FOO_LIBRARIES \"-L/A -la -L/B -lb -lc -ld\")\n\n#\n\n# will be resolved to\n\n#\n\n# FOO_LIBRARIES:STRING=\"/A/liba.so;/B/libb.so;/A/libc.so;/usr/lib/libd.so\"\n\n#\n\n# if the filesystem looks like\n\n#\n\n# /A: liba.so libc.so\n\n# /B: liba.so libb.so\n\n# /usr/lib: liba.so libb.so libc.so libd.so\n\n#\n\n# and /usr/lib is a system directory.\n\n#\n\n# Note: If RESOLVE_LIBRARIES() resolves a link line differently from\n\n# the native linker, there is a bug in this macro (please report it).\n\n#\n\n# RESOLVE_INCLUDES (XXX_INCLUDES INCLUDE_LINE)\n\n# This macro is intended to be used by FindXXX.cmake modules.\n\n# It parses a compile line and resolves all includes\n\n# (-I/path/to/include) to a list of directories. Other flags are ignored.\n\n# Example:\n\n#\n\n# RESOLVE_INCLUDES (FOO_INCLUDES \"-I/A -DBAR='\\\"irrelevant -I/string here\\\"' -I/B\")\n\n#\n\n# will be resolved to\n\n#\n\n# FOO_INCLUDES:STRING=\"/A;/B\"\n\n#\n\n# assuming both directories exist.\n\n# Note: as currently implemented, the -I/string will be picked up mistakenly (cry, cry)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If it's a library path, add it to the list\n",
        "Line" : 52,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# It's a library, resolve the path by looking in the list and then (by default) in system directories\n",
        "Line" : 57,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# We have an absolute path, add root to the search path\n",
        "Line" : 60,
        "CharPositionInLine" : 30
      },
      "4" : {
        "Text" : "# only the LAST occurence of each library is required since there should be no circular dependencies\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "config.h.cmake" : {
      "ObjectId" : "2fa4817c0deee4ce41c029ab8e8901e31fd3d6f6",
      "LastModified" : "2016-09-05T12:38:13Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* begin dune-multiscale */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* Define to the version of dune-multiscale */",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Define to the major version of dune-multiscale */",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Define to the minor version of dune-multiscale */",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Define to the revision of dune-multiscale */",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* the git tag / commit we build from */",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* end dune-multiscale */",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "3090d394e6002f5cff8d69de17cb268e8447010e",
      "LastModified" : "2014-05-13T16:24:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/doxygen/CMakeLists.txt" : {
      "ObjectId" : "208ae545b693ccfaf4d30759362e0da05d21c1cc",
      "LastModified" : "2014-05-13T16:24:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create Doxyfile.in and Doxyfile, and doxygen documentation\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dune/CMakeLists.txt" : {
      "ObjectId" : "d912d44aed1ce422ea62f9f4be1888e87b3d3b43",
      "LastModified" : "2014-05-13T16:24:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include not needed for CMake\n\n# include $(top_srcdir)/am/global-rules\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dune/multiscale/CMakeLists.txt" : {
      "ObjectId" : "79bd45119ed637f5e4f0535b4497cd72d225f986",
      "LastModified" : "2014-05-13T16:24:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/multiscale/test/CMakeLists.txt" : {
      "ObjectId" : "6e0496e80d2fc3b60b68f831b40d1241ca41d5b8",
      "LastModified" : "2016-09-05T12:38:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 15,
    "CMAKESOURCE" : 1
  },
  "ElapsedTime" : 1564
}