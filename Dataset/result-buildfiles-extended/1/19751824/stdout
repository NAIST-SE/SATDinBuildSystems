{
  "Repository" : "19751824",
  "Revision" : "HEAD",
  "ObjectId" : "761ed4c76bcf366219c872d3d256fac2195f7cbb",
  "CommitTime" : "2019-04-16T14:24:55Z",
  "Files" : {
    "app/app.pro" : {
      "ObjectId" : "501e1d41ab94a25c35f923242ca7e320d99aaf57",
      "LastModified" : "2018-10-24T11:48:37Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#RC_FILE = resources.rc\n\n#RC_ICONS += ../src/icons/app_icon_16.ico\n\n#RC_ICONS += ../src/icons/app_icon_24.ico\n\n#RC_ICONS += ../src/icons/app_icon_32.ico\n\n#RC_ICONS += ../src/icons/app_icon_64.ico\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#RC_ICONS += ../src/icons/app_icon_256.ico\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "crystalTestFrameworkApp.pro" : {
      "ObjectId" : "462566377308020456cf506a5b0468ac8a9aa202",
      "LastModified" : "2019-04-03T14:35:11Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2015-05-07T17:15:19\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SUBDIRS += tests\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#src.depends = comModules/mocklayer/appPlugin\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "defaults.pri" : {
      "ObjectId" : "87f297add2da95598607080cc2c35b497d8c6295",
      "LastModified" : "2019-04-03T14:35:11Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#error(\"fill in the correct path for linux\")\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#message($$LIBS)\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#message($$INCLUDEPATH)\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#  message(Win32 64bit)\n",
        "Line" : 70,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# message(Win32 32bit)\n",
        "Line" : 74,
        "CharPositionInLine" : 7
      },
      "5" : {
        "Text" : "#QMAKE_CXXFLAGS += -Werror\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-Wno-error=noexcept-type unsupported\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#QMAKE_CXXFLAGS_DEBUG += -fsanitize=undefined,address\n\n#QMAKE_CXXFLAGS_DEBUG += -static-libasan -static-libubsan #some day windows will support a reasonable development environment ...\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "libs/qwt/travis_qwtconfig.pri" : {
      "ObjectId" : "67237904e451c01493afc4f0e332013233d71e7d",
      "LastModified" : "2018-10-24T11:48:37Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "################################################################\n\n# Qwt Widget Library\n\n# Copyright (C) 1997   Josef Wilgen\n\n# Copyright (C) 2002   Uwe Rathmann\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the Qwt License, Version 1.0\n\n################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "######################################################################\n\n# Install paths\n\n######################################################################\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QWT_INSTALL_PREFIX = /usr/local/qwt-$$QWT_VERSION-svn-qt-$$QT_VERSION\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# QWT_INSTALL_PREFIX = C:/Qwt-$$QWT_VERSION-svn-qt-$$QT_VERSION\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "######################################################################\n\n# Designer plugin\n\n# creator/designer load designer plugins from certain default\n\n# directories ( f.e the path below QT_INSTALL_PREFIX ) and the\n\n# directories listed in the QT_PLUGIN_PATH environment variable.\n\n# When using the path below QWT_INSTALL_PREFIX you need to\n\n# add $${QWT_INSTALL_PREFIX}/plugins to QT_PLUGIN_PATH in the\n\n# runtime environment of designer/creator.\n\n######################################################################\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#QWT_INSTALL_PLUGINS   = $${QWT_INSTALL_PREFIX}/plugins/designer\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# linux distributors often organize the Qt installation\n\n# their way and QT_INSTALL_PREFIX doesn't offer a good\n\n# path. Also QT_INSTALL_PREFIX is only one of the default\n\n# search paths of the designer - not the Qt creator\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#QWT_INSTALL_PLUGINS   = $$[QT_INSTALL_PREFIX]/plugins/designer\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "######################################################################\n\n# Features\n\n# When building a Qwt application with qmake you might want to load\n\n# the compiler/linker flags, that are required to build a Qwt application\n\n# from qwt.prf. Therefore all you need to do is to add \"CONFIG += qwt\"\n\n# to your project file and take care, that qwt.prf can be found by qmake.\n\n# ( see http://doc.trolltech.com/4.7/qmake-advanced-usage.html#adding-new-configuration-features )\n\n# I recommend not to install the Qwt features together with the\n\n# Qt features, because you will have to reinstall the Qwt features,\n\n# with every Qt upgrade.\n\n######################################################################\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# QWT_INSTALL_FEATURES  = $$[QT_INSTALL_PREFIX]/features\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "######################################################################\n\n# Build the static/shared libraries.\n\n# If QwtDll is enabled, a shared library is built, otherwise\n\n# it will be a static library.\n\n######################################################################\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#QWT_CONFIG           += QwtDll\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "######################################################################\n\n# QwtPlot enables all classes, that are needed to use the QwtPlot\n\n# widget. \n\n######################################################################\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "######################################################################\n\n# QwtWidgets enables all classes, that are needed to use the all other\n\n# widgets (sliders, dials, ...), beside QwtPlot.\n\n######################################################################\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "######################################################################\n\n# If you want to display svg images on the plot canvas, or\n\n# export a plot to a SVG document\n\n######################################################################\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "######################################################################\n\n# If you want to use a OpenGL plot canvas\n\n######################################################################\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "######################################################################\n\n# You can use the MathML renderer of the Qt solutions package to\n\n# enable MathML support in Qwt. Because of license implications\n\n# the ( modified ) code of the MML Widget solution is included and\n\n# linked together with the QwtMathMLTextEngine into an own library.\n\n# To use it you will have to add \"CONFIG += qwtmathml\"\n\n# to your qmake project file.\n\n######################################################################\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#QWT_CONFIG     += QwtMathML\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "######################################################################\n\n# If you want to build the Qwt designer plugin,\n\n# enable the line below.\n\n# Otherwise you have to build it from the designer directory.\n\n######################################################################\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#QWT_CONFIG     += QwtDesigner\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "######################################################################\n\n# Compile all Qwt classes into the designer plugin instead\n\n# of linking it against the shared Qwt library. Has no effect\n\n# when QwtDesigner or QwtDll are not both enabled.\n\n#\n\n# On systems where rpath is supported ( all Unixoids ) the\n\n# location of the installed Qwt library is compiled into the plugin,\n\n# but on Windows it might be easier to have a self contained\n\n# plugin to avoid any hassle with configuring the runtime\n\n# environment of the designer/creator.\n\n######################################################################\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "######################################################################\n\n# If you want to auto build the examples, enable the line below\n\n# Otherwise you have to build them from the examples directory.\n\n######################################################################\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#QWT_CONFIG     += QwtExamples\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "######################################################################\n\n# The playground is primarily intended for the Qwt development\n\n# to explore and test new features. Nevertheless you might find\n\n# ideas or code snippets that help for application development\n\n# If you want to auto build the applications in playground, enable\n\n# the line below.\n\n# Otherwise you have to build them from the playground directory.\n\n######################################################################\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#QWT_CONFIG     += QwtPlayground\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "######################################################################\n\n# When Qt has been built as framework qmake wants\n\n# to link frameworks instead of regular libs\n\n######################################################################\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "######################################################################\n\n# Create and install pc files for pkg-config\n\n# See http://www.freedesktop.org/wiki/Software/pkg-config/\n\n######################################################################\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#QWT_CONFIG     += QwtPkgConfig\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 28
    },
    "libs/travis_limereport.pro" : {
      "ObjectId" : "09fac16f168a255e54c1e288a05f34680f46dd24",
      "LastModified" : "2018-10-24T11:48:37Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/src.pro" : {
      "ObjectId" : "b7389a0e63cc852a2c574950713776e2f42b242f",
      "LastModified" : "2019-04-03T14:35:11Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#QMAKE_CXXFLAGS += --time-report\n\n#QMAKE_CXXFLAGS += -flto\n\n#QMAKE_LFLAGS += -fno-use-linker-plugin -flto\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/tests.pro" : {
      "ObjectId" : "fa9ec69202ab3bedc70dbfee6d4b5d06cf78c1b0",
      "LastModified" : "2019-04-03T14:35:11Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#copies scripts into builds\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#runtests.commands = $$RUNTEST\n\n#runtests.depends = copydata\n\n#TEST1=\"123\"\n\n#TEST2=\"123\"\n\n#message($$TEST1)\n\n#message($$TEST2)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#!equals(TEST1, $$TEST2) {\n\n#    message(\"not equal\")\n\n#}else{\n\n#   message(\"equal\")\n\n#}\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#avoid cp: ‘xx/scripts’ and ‘xx/scripts’ are the same file\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "QMAKE" : 7
  },
  "ElapsedTime" : 1072
}