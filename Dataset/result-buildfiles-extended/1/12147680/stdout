{
  "Repository" : "12147680",
  "Revision" : "HEAD",
  "ObjectId" : "0416159809f843b05fad0fe0be6b8da363f915fe",
  "CommitTime" : "2019-04-15T11:53:32Z",
  "Files" : {
    "build.xml" : {
      "ObjectId" : "af99d55ffcdb72331175d7cbbb3cfcf47ff53d55",
      "LastModified" : "2014-05-23T15:46:11Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " *Do not use any later versions than 2.4.12 due to [a bug in Phing](http://www.phing.info/trac/ticket/958)*. ",
        "Line" : 3,
        "CharPositionInLine" : 117
      },
      "1" : {
        "Text" : " ## Main targets ",
        "Line" : 6,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : " ### Build project\n\nDo a complete build of the project by verifying code consistency and and\nperforming static analysis of the code.\n\nThis is the default build target.\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : " ### Load properties\n\nLoads a set of project specific properties from a `.properties` file.\n\nThese properties contain information regarding the individual project and/or\nenvironment such as which version of Drupal you are using, how to create a\ndatabase and the names of your custom modules.\n\nAll available properties are described and set to a default value in `build.default.properties`.\nYou should create your own properties file by copying the `build.default.properties` file to the root\ndirectory, rename it `build.properties` and modify it according to your project.\n\nBoth property files are loaded so your custom `build.properties` file should\nonly contain properties where you want to override the default value e.g. set\nyour custom module code prefix or use a special version of one of the build\ntools. ",
        "Line" : 53,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : " Use condition instead of unless property as we cannot unset properties in Phing ",
        "Line" : 61,
        "CharPositionInLine" : 93
      },
      "5" : {
        "Text" : " `istrue` evaluates to true is value is not set we need to check\n             `isset` as well ",
        "Line" : 65,
        "CharPositionInLine" : 33
      },
      "6" : {
        "Text" : " By default Jenkins runs Phing from the directory containing the build\nfile.  If this file is located in a subdirectory - e.g. when using Phing Drupal as a submodule - we need to reset the project basedir and reload properties.\n\nNB: This only works if the subdirectory is directly within the Drupal\nroot directory. ",
        "Line" : 74,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : " If `build.properties` exists then assume we have a\n               project root directory ",
        "Line" : 77,
        "CharPositionInLine" : 42
      },
      "8" : {
        "Text" : " By default use default properties file\n             `build.default.properties` ",
        "Line" : 86,
        "CharPositionInLine" : 44
      },
      "9" : {
        "Text" : " Load the default properties.\n             Override in case `load-properties` are called multiple times. ",
        "Line" : 90,
        "CharPositionInLine" : 79
      },
      "10" : {
        "Text" : " Allow override using `build.properties` in build file\n             directory ",
        "Line" : 94,
        "CharPositionInLine" : 27
      },
      "11" : {
        "Text" : " Allow override using `build.properties` in project base\n             directory ",
        "Line" : 99,
        "CharPositionInLine" : 27
      },
      "12" : {
        "Text" : " Load the overriding properties. ",
        "Line" : 104,
        "CharPositionInLine" : 49
      },
      "13" : {
        "Text" : " Set property to prevent unnecessary additional invocations of this target ",
        "Line" : 107,
        "CharPositionInLine" : 91
      },
      "14" : {
        "Text" : " ### Rebuilds the TM profile using Drush make ",
        "Line" : 118,
        "CharPositionInLine" : 56
      },
      "15" : {
        "Text" : " Removes all files of the Drupal installation ",
        "Line" : 131,
        "CharPositionInLine" : 56
      },
      "16" : {
        "Text" : " ### Setup directories\n\nDefine working directories - where the individual parts of the build are and\nshould be located. These are used in other targets.\n\nThis is part of the initialization of the build. This target should only be\ncalled from `init` target. ",
        "Line" : 153,
        "CharPositionInLine" : 31
      },
      "17" : {
        "Text" : " ### Setup permissions\n\nSet permissions for certain files correctly after it has been built. This is\nrequired to support using the site after it has been built e.g. for conducting\ntests and site allow it to be rebuilt later on.\n\nBy default the built site will be owned by the Jenkins user and allow\nothers to read. We allow read, write and execute access for all to give users\nsuch as apache running the webserver the necessary permissions. ",
        "Line" : 175,
        "CharPositionInLine" : 68
      },
      "18" : {
        "Text" : " Allow write access to files directory. ",
        "Line" : 178,
        "CharPositionInLine" : 54
      },
      "19" : {
        "Text" : " If the build uses SQLite then we update permissions to the\n           database file and the directory containing the file. ",
        "Line" : 188,
        "CharPositionInLine" : 68
      },
      "20" : {
        "Text" : " ### Install a Drupal site\n\nThis initializes a Drupal site using a installation profile.\n\nConfiguration of which installation profile and database to use in done in\n`build.properties`. ",
        "Line" : 207,
        "CharPositionInLine" : 24
      },
      "21" : {
        "Text" : " Revert features so all configuration is guaranteed to be in place. Since features 2.0 this is necessary ",
        "Line" : 220,
        "CharPositionInLine" : 117
      },
      "22" : {
        "Text" : " Enable RewriteBase in .htaccess if the installation is to be\nexposed through Apache with virtual document root as clean urls are enabled\nby default.\n\nKeep legacy support for drupal.make.rewritebase when this was handled as a\npart of make target.",
        "Line" : 231,
        "CharPositionInLine" : 24
      },
      "23" : {
        "Text" : " Set property to prevent target from being executed multiple times ",
        "Line" : 249,
        "CharPositionInLine" : 79
      },
      "24" : {
        "Text" : " ### Run migrate procedures ",
        "Line" : 253,
        "CharPositionInLine" : 38
      },
      "25" : {
        "Text" : " Enable migrate and migrate_ui ",
        "Line" : 257,
        "CharPositionInLine" : 43
      },
      "26" : {
        "Text" : " Register automatically again. Sometimes migrate tasks are not properly registered on a fresh install. ",
        "Line" : 264,
        "CharPositionInLine" : 119
      },
      "27" : {
        "Text" : " Revert features before running migrations so all configuration is guaranteed to be in place ",
        "Line" : 270,
        "CharPositionInLine" : 109
      },
      "28" : {
        "Text" : " Migrate all. Here we assume we do have the migrate module enabled, but this is part of our standard stack. ",
        "Line" : 273,
        "CharPositionInLine" : 124
      },
      "29" : {
        "Text" : " ### Configure masquerade ",
        "Line" : 281,
        "CharPositionInLine" : 36
      },
      "30" : {
        "Text" : " Little trick to automatically configure masquerade to show quick switches for two users. Very useful for quick role testing. ",
        "Line" : 285,
        "CharPositionInLine" : 138
      },
      "31" : {
        "Text" : " ### Check features state ",
        "Line" : 292,
        "CharPositionInLine" : 36
      },
      "32" : {
        "Text" : " ### Clear all caches ",
        "Line" : 299,
        "CharPositionInLine" : 32
      },
      "33" : {
        "Text" : " ### Update DB ",
        "Line" : 307,
        "CharPositionInLine" : 25
      },
      "34" : {
        "Text" : " ### Update DB ",
        "Line" : 314,
        "CharPositionInLine" : 25
      },
      "35" : {
        "Text" : " ### Enable dev mode ",
        "Line" : 324,
        "CharPositionInLine" : 31
      },
      "36" : {
        "Text" : " ### Clone a git repository ",
        "Line" : 333,
        "CharPositionInLine" : 38
      },
      "37" : {
        "Text" : " Only clone if repository does not exist already ",
        "Line" : 335,
        "CharPositionInLine" : 61
      },
      "38" : {
        "Text" : " Set revision to HEAD if not already defined ",
        "Line" : 339,
        "CharPositionInLine" : 61
      },
      "39" : {
        "Text" : " The [`gitclone` task](http://www.phing.info/docs/guide/stable/chapters/appendixes/AppendixC-OptionalTasks.html#GitCloneTask)\n             does not seem to work. Use exec instead. ",
        "Line" : 344,
        "CharPositionInLine" : 58
      },
      "40" : {
        "Text" : " ### Setup Phing Drush integration ",
        "Line" : 351,
        "CharPositionInLine" : 45
      },
      "41" : {
        "Text" : " Clone the project ",
        "Line" : 354,
        "CharPositionInLine" : 31
      },
      "42" : {
        "Text" : " Register as custom Phing task ",
        "Line" : 364,
        "CharPositionInLine" : 43
      },
      "43" : {
        "Text" : " Run drush from the project Drupal directory ",
        "Line" : 368,
        "CharPositionInLine" : 57
      },
      "CommentCount" : 44
    },
    "sites/all/modules/contrib/proj4js/lib/proj4js/build/build.xml" : {
      "ObjectId" : "cad196ea41d37b645cf08cabc3d72dc846fa07e2",
      "LastModified" : "2014-12-04T11:23:48Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "*************************************************************************\nFilename        :   build.xml\nProject         :   proj4js\nDocument Type   :   XML\nPurpose         :   build file for ant tool\n\nAuthor     Date            Description\nM.Adair    17-Dec-2001     initial version copied from mapbuilder\n\n$Id: build.xml 2955 2007-07-09 12:12:27Z steven $\n***************************************************************************",
        "Line" : 12,
        "CharPositionInLine" : 79
      },
      "1" : {
        "Text" : "\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : " A \"project\" describes a set of targets that may be requested\n     when Ant is executed.  The \"default\" attribute defines the\n     target which is executed if no specific target is requested,\n     and the \"basedir\" attribute defines the current working directory\n     from which Ant executes the requested task.  This is normally\n     set to the current working directory.\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : " ===================== Property Definitions =========================== ",
        "Line" : 23,
        "CharPositionInLine" : 80
      },
      "4" : {
        "Text" : "\n  Each of the following properties are used in the build script.\n  Values for these properties are set by the first place they are\n  defined, from the following list:\n\n  * Definitions on the \"ant\" command line (ant -Dfoo=bar compile).\n\n  * Definitions from a \"build.properties\" file in the top level\n    source directory of this application.\n\n  * Definitions from a \"build.properties\" file in the developer's\n    home directory.\n\n  * Default definitions in this build.xml file.\n\n  You will note below that property values can be composed based on the\n  contents of previously defined properties.  This is a powerful technique\n  that helps you minimize the number of changes required when your development\n  environment is modified.  Note that property composition is allowed within\n  \"build.properties\" files as well as in the \"build.xml\" script.\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : " ==================== File and Directory Names ======================== ",
        "Line" : 49,
        "CharPositionInLine" : 80
      },
      "6" : {
        "Text" : "\n\n  These properties generally define file and directory names (or paths) that\n  affect where the build process stores its outputs.\n\n  app.name             Base name of this application, used to\n                       construct filenames and directories.\n                       Defaults to \"myapp\".\n\n  app.path             Context path to which this application should be\n                       deployed (defaults to \"/\" plus the value of the\n                       \"app.name\" property).\n\n  app.version          Version number of this iteration of the application.\n\n  build.home           The directory into which the \"prepare\" and\n                       \"compile\" targets will generate their output.\n                       Defaults to \"build\".\n\n  dist.home            The name of the base directory in which\n                       distribution files are created.\n                       Defaults to \"dist\".\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : " ==================== Prepare Target ================================== ",
        "Line" : 83,
        "CharPositionInLine" : 80
      },
      "8" : {
        "Text" : "\n  The \"prepare\" target is used to create the \"build\" destination directory,\n  and copy the static contents of your web application to it.  If you need\n  to copy static files from external dependencies, you can customize the\n  contents of this task.\n\n  Normally, this task is executed indirectly when needed.\n\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : " Create build directories as needed ",
        "Line" : 95,
        "CharPositionInLine" : 48
      },
      "10" : {
        "Text" : " Copy static content of the mapbuilder project  ",
        "Line" : 97,
        "CharPositionInLine" : 60
      },
      "11" : {
        "Text" : " ==================== Clean Target ==================================== ",
        "Line" : 116,
        "CharPositionInLine" : 80
      },
      "12" : {
        "Text" : "\n\n  The \"clean\" target deletes any previous \"build\" and \"dist\" directory,\n  so that you can be ensured the application can be built from scratch.\n\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : " ==================== Documentation =================================== ",
        "Line" : 130,
        "CharPositionInLine" : 80
      },
      "14" : {
        "Text" : " ==================== Dist Target ===================================== ",
        "Line" : 144,
        "CharPositionInLine" : 80
      },
      "15" : {
        "Text" : "\n  The \"dist\" target creates the zip file distribution for the Apache/PHP\n  environment.\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : " Create application zip file ",
        "Line" : 153,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 17
    },
    "sites/all/modules/custom/tm_status_updates/includes/vendor/guzzlehttp/promises/Makefile" : {
      "ObjectId" : "8d5b3ef95eb4679a3998176bcc96fa88f5d60cdd",
      "LastModified" : "2016-06-22T10:02:04Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sites/all/modules/custom/tm_status_updates/includes/vendor/guzzlehttp/psr7/Makefile" : {
      "ObjectId" : "8b00b43e6a42c089c4907fbfcd0d02487e3222c5",
      "LastModified" : "2016-06-22T10:02:04Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 2,
    "ANT" : 2
  },
  "ElapsedTime" : 7166
}