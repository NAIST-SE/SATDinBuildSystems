{
  "Repository" : "109284",
  "Revision" : "HEAD",
  "ObjectId" : "b3879343bcba47a23c2dc6983bcbf562f9e8771d",
  "CommitTime" : "2014-05-07T04:06:03Z",
  "Files" : {
    "input/cmake_install.cmake" : {
      "ObjectId" : "e69383f9a5fa40b5848495feedc0d2d0b44ef5b2",
      "LastModified" : "2014-05-07T04:03:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install script for directory: /Users/khuff/repos/cyder/src/Input\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the install prefix\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the install configuration name.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the component getting installed.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/CMake/CyclusModuleMacros.cmake" : {
      "ObjectId" : "636e98218eaddb322e4f2514a47ed3d393c2948b",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build the libraries from the CYDER_SRC source files\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Link the libraries to libcycluscore \n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "src/CMake/FindGlib.cmake" : {
      "ObjectId" : "f1986c97d8625ca8b1702b4e7bfc05e5799d657b",
      "LastModified" : "2012-10-24T16:10:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Glib even if pkg-config is not working (eg. cross compiling to Windows)\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/CMake/FindGlibmm.cmake" : {
      "ObjectId" : "3a5968db5439ac7ef5a0a1c3160cb51cef5a4ae0",
      "LastModified" : "2012-10-24T16:10:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Glibmm-2.4\n\n# Once done, this will define\n\n#\n\n#  Glibmm_FOUND - system has Glibmm\n\n#  Glibmm_INCLUDE_DIRS - the Glibmm include directories\n\n#  Glibmm_LIBRARIES - link these to use Glibmm\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Main include dir\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Glib-related libraries also use a separate config header, which is in lib dir\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# find lib\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/CMake/FindLibXML++.cmake" : {
      "ObjectId" : "4727bf84385762d4920cfe19fdc1dc595ff0b37b",
      "LastModified" : "2012-10-24T16:10:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibXML++ 2.6\n\n# Once done, this will define\n\n#\n\n#  LibXML++_FOUND - system has LibXML++\n\n#  LibXML++_INCLUDE_DIRS - the LibXML++ include directories\n\n#  LibXML++_LIBRARIES - link these to use LibXML++\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Main include dir\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Glib-related libraries also use a separate config header, which is in lib dir\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# find lib\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# # Finally the library itself\n\n# find_library(LibXML++_LIBRARY\n\n#   NAMES xml++-2.6\n\n#   PATHS ${LibXML++_PKGCONF_LIBRARY_DIRS}\n\n# )\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/CMake/FindSigC++.cmake" : {
      "ObjectId" : "6601bf629532004012446b00c0269f4c964bcaaa",
      "LastModified" : "2012-10-24T16:10:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find SigC++-2.0\n\n# Once done, this will define\n\n#\n\n#  SigC++_FOUND - system has SigC++\n\n#  SigC++_INCLUDE_DIRS - the SigC++ include directories\n\n#  SigC++_LIBRARIES - link these to use SigC++\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Main include dir\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Glib-related libraries also use a separate config header, which is in lib dir\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# find lib\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/CMake/FindSqlite3.cmake" : {
      "ObjectId" : "0eccec2252e3bfadcd0eb5061219935fb1f61786",
      "LastModified" : "2012-10-24T16:10:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - find Sqlite 3\n\n# SQLITE3_INCLUDE_DIR - Where to find Sqlite 3 header files (directory)\n\n# SQLITE3_LIBRARIES - Sqlite 3 libraries\n\n# SQLITE3_LIBRARY_RELEASE - Where the release library is\n\n# SQLITE3_LIBRARY_DEBUG - Where the debug library is\n\n# SQLITE3_FOUND - Set to TRUE if we found everything (library, includes and executable)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2010 Pau Garcia i Quiles, <pgquiles@elpauer.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n\n# Generated by CModuler, a CMake Module Generator - http://gitorious.org/cmoduler\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if the generator supports configuration types then set\n\n# optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value\n",
        "Line" : 30,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# if there are no configuration types and CMAKE_BUILD_TYPE has no value\n\n# then just use the release libraries\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "src/CMake/Findcycluscore.cmake" : {
      "ObjectId" : "e8feaa40d29092e973fa7a3e77519461a3658ca8",
      "LastModified" : "2012-10-24T16:10:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  CYCLUS_CORE_FOUND - system has the Cyclus Core library\n\n#  CYCLUS_CORE_INCLUDE_DIR - the Cyclus include directory\n\n#  CYCLUS_CORE_LIBRARIES - The libraries needed to use the Cyclus Core Library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header files\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the root dir to the hints\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for the header files\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Look for the library\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Look for the library\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Copy the results to the output variables.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Report the results.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/CMake/LibFindMacros.cmake" : {
      "ObjectId" : "69975c51be3f9c5e0ff372a4424f8de3b580ee88",
      "LastModified" : "2012-10-24T16:10:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Works the same as find_package, but forwards the \"REQUIRED\" and \"QUIET\" arguments\n\n# used for the current package. For this to work, the first parameter must be the\n\n# prefix of the current package, then the prefix of the new package etc, which are\n\n# passed to find_package.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake developers made the UsePkgConfig system deprecated in the same release (2.6)\n\n# where they added pkg_check_modules. Consequently I need to support both in my scripts\n\n# to avoid those deprecated warnings. Here's a helper that does just that.\n\n# Works identically to pkg_check_modules, except that no checks are needed prior to use.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Skip processing if already processed during this run\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Start with the assumption that the library was found\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Process all includes and set _FOUND to false if any are missing\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Process all libraries and set _FOUND to false if any are missing\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Print message and/or exit on fatal error\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "src/CMake/SelectLibraryConfigurations.cmake" : {
      "ObjectId" : "205c01d36ab3a8d0185017e731b039e845414337",
      "LastModified" : "2012-10-24T16:10:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# select_library_configurations( basename )\n\n#\n\n# This macro takes a library base name as an argument, and will choose good\n\n# values for basename_LIBRARY, basename_LIBRARIES, basename_LIBRARY_DEBUG, and\n\n# basename_LIBRARY_RELEASE depending on what has been found and set.  If only\n\n# basename_LIBRARY_RELEASE is defined, basename_LIBRARY, basename_LIBRARY_DEBUG,\n\n# and basename_LIBRARY_RELEASE will be set to the release value.  If only\n\n# basename_LIBRARY_DEBUG is defined, then basename_LIBRARY,\n\n# basename_LIBRARY_DEBUG and basename_LIBRARY_RELEASE will take the debug value. \n\n#\n\n# If the generator supports configuration types, then basename_LIBRARY and\n\n# basename_LIBRARIES will be set with debug and optimized flags specifying the\n\n# library to be used for the given configuration.  If no build type has been set\n\n# or the generator in use does not support configuration types, then\n\n# basename_LIBRARY and basename_LIBRARIES will take only the release values.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2009 Will Dicharry <wdicharry@stellarscience.com>\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This macro was adapted from the FindQt4 CMake module and is maintained by Will\n\n# Dicharry <wdicharry@stellarscience.com>.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Utility macro to check if one variable exists while another doesn't, and set\n\n# one that doesn't exist to the one that exists.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if only the release version was found, set the debug to be the release\n\n# version.\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# if only the debug version was found, set the release value to be the\n\n# debug value.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# if the generator supports configuration types or CMAKE_BUILD_TYPE\n\n# is set, then set optimized and debug options.\n",
        "Line" : 54,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# If there are no configuration types or build type, just use\n\n# the release version\n",
        "Line" : 64,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 8
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "d30672311368c00fbcb817da8218d775fbd12c7a",
      "LastModified" : "2013-05-05T21:04:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This project name is cyder\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Direct any out-of-source builds to this directory\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Direct any binary installation paths to this directory\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This makes all the libraries build as SHARED\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Setup build locations.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# the RPATH to be used when installing, but only if it's not a system directory\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Tell CMake where the modules are\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Debian installs useful LibXML2 files to /usr/include/libxml2/libxml\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Find LibXML++ and dependencies\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Find Sqlite3\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Find cycluscore\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Include the boost header files and the program_options library\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# include the model directories\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# include all the directories we just found\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This is the directory that holds the doxygen doxyfile template (doxy.conf.in)\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# If doxygen exists, use the doc/CMakeLists.txt file for further instructions. \n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ------------------------- Add the Models -----------------------------------\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# ------------------------- Google Test -----------------------------------\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Be sure to clear these each time\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# The gtest include file directories.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Alerts CMake to any tests we need to worry about\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Create an executable for all the gtests\n\n# Options for testing\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# The pthreads library is available.\n",
        "Line" : 188,
        "CharPositionInLine" : 29
      },
      "26" : {
        "Text" : "# Build CyderUnitTestDriver\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Here we add all the tests\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Here we set some components for installation with cpack\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Here's where we package it with CPack\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#required\n",
        "Line" : 220,
        "CharPositionInLine" : 57
      },
      "31" : {
        "Text" : "#SET(CPACK_PACKAGE_VERSION_PATCH \"2\") # should use commit number here  ?\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "src/Input/CMakeLists.txt" : {
      "ObjectId" : "5c9d4894f733266d0f41ec7e234c36fd37f06466",
      "LastModified" : "2013-03-21T15:51:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Testing/CMakeLists.txt" : {
      "ObjectId" : "cdfc684db0bf57062d0ab955eebf4ba50fdf260a",
      "LastModified" : "2013-05-05T21:04:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find tests generated in the binary directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To add a new file, just add it to this list.  Any GoogleTests inside will be automatically\n\n# added to ctest.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add all the tests by parsing the source code\n\n# This macro searches for GoogleTest macros and adds them as tests automatically\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add the generated tests\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Find all test lists\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Convert the C++ code into a short test name\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Add all the remaining tests to CTest's test list\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "src/doc/CMakeLists.txt" : {
      "ObjectId" : "30a40818d8de92cc099cf7ab67bdaa529bd8f0da",
      "LastModified" : "2012-10-24T16:10:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build file for CMake in order to generate the documentation.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ---------------------------------\n\n# Check for Doxygen\n\n# ---------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Some doxyfile settings to be configured into the template doxy.conf.in\n",
        "Line" : 21,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "src/post_install/CMakeLists.txt" : {
      "ObjectId" : "67c5db44e7253a018b35cfd753260947e4206dd5",
      "LastModified" : "2012-10-24T16:10:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 15
  },
  "ElapsedTime" : 1063
}