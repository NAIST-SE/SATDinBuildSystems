{
  "Repository" : "3581769",
  "Revision" : "HEAD",
  "ObjectId" : "85fce383b2f6885c60b2e72637f7036c25d6208c",
  "CommitTime" : "2019-04-16T07:53:20Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "c81ed30fc61b7e2f566cb41be598c23f7dcb2b93",
      "LastModified" : "2018-01-02T14:17:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set up project\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# general stuff\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# guess build tree of dune-common\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#find dune-common and set the module path\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#include the dune macros\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# start a dune project with information from dune.module\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# finalize the dune project, e.g. generating config.h etc.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/modules/AddARPACKPPFlags.cmake" : {
      "ObjectId" : "c404548340bd6d93cb14b74102fb5b5a0dd667e4",
      "LastModified" : "2018-02-15T09:32:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines the functions to use ARPACKPP\n\n#\n\n# .. cmake_function:: add_dune_arpackpp_flags\n\n#\n\n#    .. cmake_param:: targets\n\n#       :positional:\n\n#       :single:\n\n#       :required:\n\n#\n\n#       A list of targets to use ARPACKPP with.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/AddSuperLUFlags.cmake" : {
      "ObjectId" : "44d00a73d85ab516c5e31445d0adbc7263ab551a",
      "LastModified" : "2015-10-15T13:25:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines the functions to use SuperLU\n\n#\n\n# .. cmake_function:: add_dune_superlu_flags\n\n#\n\n#    .. cmake_param:: targets\n\n#       :positional:\n\n#       :single:\n\n#       :required:\n\n#\n\n#       A list of targets to use SuperLU with.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/CMakeLists.txt" : {
      "ObjectId" : "1ce8f8812d32cfe7680cac78afac8b9c14d912c9",
      "LastModified" : "2015-08-18T08:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/DuneIstlMacros.cmake" : {
      "ObjectId" : "58752621604be5e4318192b2dbbd0869d235c7ff",
      "LastModified" : "2018-11-07T14:00:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# .. cmake_module::\n\n#\n\n#    This modules content is executed whenever a module required or suggests dune-istl!\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# enable / disable backwards compatibility w.r.t. category\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindARPACK.cmake" : {
      "ObjectId" : "9dbfd103099e016f41acfd4fae80ed5d7e019960",
      "LastModified" : "2018-02-15T09:32:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# .. cmake_module::\n\n#\n\n#    Module that checks whether ARPACK is available and usable.\n\n#\n\n#    Variables used by this module which you may want to set:\n\n#\n\n#    :ref:`ARPACK_ROOT`\n\n#       Path list to search for ARPACK.\n\n#\n\n#    Sets the following variables:\n\n#\n\n#    :code:`ARPACK_FOUND`\n\n#       True if ARPACK available.\n\n#\n\n#    :code:`ARPACK_LIBRARIES`\n\n#       Link against these libraries to use ARPACK.\n\n#\n\n# .. cmake_variable:: ARPACK_ROOT\n\n#\n\n#    You may set this variable to have :ref:`FindARPACK` look\n\n#    for the ARPACK package in the given path before inspecting\n\n#    system paths.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check for Fortran support which is required by ARPACK\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# log errornous result\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# look for library, only at positions given by the user\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# look for library files, including default paths\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# check header usability\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# we need if clauses here because variable is set variable-NOTFOUND if the\n\n# searches above were not successful; without them CMake print errors like:\n\n# \"CMake Error: The following variables are used in this project, but they\n\n# are set to NOTFOUND. Please set them or make sure they are set and tested\n\n# correctly in the CMake files.\"\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# end of header usability check\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# behave like a CMake module is supposed to behave\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# hide the introduced cmake cached variables in cmake GUIs\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# if headers are found, store results\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# log result\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# log errornous result\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# text for feature summary\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "cmake/modules/FindARPACKPP.cmake" : {
      "ObjectId" : "42b103b278340cb933fde3a3229520947cac26cc",
      "LastModified" : "2018-02-15T09:32:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# .. cmake_module::\n\n#\n\n#    Module that checks whether ARPACK++ is available and usable.\n\n#\n\n#    Variables used by this module which you may want to set:\n\n#\n\n#    :ref:`ARPACKPP_ROOT`\n\n#       Path list to search for ARPACK++.\n\n#\n\n#    Sets the following variables:\n\n#\n\n#    :code:`ARPACKPP_FOUND`\n\n#       True if ARPACK++ available.\n\n#\n\n#    :code:`ARPACKPP_INCLUDE_DIRS`\n\n#       Path to the ARPACK++ include directories.\n\n#\n\n#    :code:`ARPACKPP_LIBRARIES`\n\n#       Link against these libraries to use ARPACK++.\n\n#\n\n# .. cmake_variable:: ARPACKPP_ROOT\n\n#\n\n#    You may set this variable to have :ref:`FindARPACKPP` look\n\n#    for the ARPACKPP package in the given path before inspecting\n\n#    system paths.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find ARPACK which is required by ARPACK++\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# look for header files, only at positions given by the user\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# look for header files, including default paths\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The arpack++ package in Debian also includes a shared library that we have\n\n# to link to. Other versions of arpack++ are header-only.\n\n# Thus we will later use the arpack++ shared library if found and just ignore\n\n# it if it was not found.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# check header usability\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# we need if clauses here because variable is set variable-NOTFOUND if the\n\n# searches above were not successful; without them CMake print errors like:\n\n# \"CMake Error: The following variables are used in this project, but they\n\n# are set to NOTFOUND. Please set them or make sure they are set and tested\n\n# correctly in the CMake files.\"\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# end of header usability check\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# behave like a CMake module is supposed to behave\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# hide the introduced cmake cached variables in cmake GUIs\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# if headers are found, store results\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# log result\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# the following is a pretty roundabout way of setting include directories, but it's the\n\n# only way we can force -isystem. And we want the compiler to treat ARPACK++ as a system\n\n# library to avoid scaring our users with the horrible warnings triggered by the bitrotted\n\n# ARPACK++ sources.\n\n#\n\n# For this to work, only set the COMPILE_OPTIONS (those replaced COMPILE_FLAGS a while ago), never\n\n# the INCLUDE_DIRECTORIES!\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# log errornous result\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# set HAVE_ARPACKPP for config.h\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# register all ARPACK++ related flags\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# text for feature summary\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "cmake/modules/FindSuperLU.cmake" : {
      "ObjectId" : "35c7f9608abb57c8e0ef2df8899b4897e53365e4",
      "LastModified" : "2018-11-07T14:00:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# .. cmake_module::\n\n#\n\n#    Module that checks whether SuperLU is available and usable.\n\n#    SuperLU must be 4.0 or newer.\n\n#\n\n#    Variables used by this module which you may want to set:\n\n#\n\n#    :ref:`SUPERLU_ROOT`\n\n#       Path list to search for SuperLU\n\n#\n\n#    Sets the follwing variables:\n\n#\n\n#    :code:`SUPERLU_FOUND`\n\n#       True if SuperLU available and usable.\n\n#\n\n#    :code:`SUPERLU_MIN_VERSION_4`\n\n#       True if SuperLU version >= 4.0.\n\n#\n\n#    :code:`SUPERLU_MIN_VERSION_4_3`\n\n#       True if SuperLU version >= 4.3.\n\n#\n\n#    :code:`SUPERLU_MIN_VERSION_5`\n\n#       True if SuperLU version >= 5.0.\n\n#\n\n#    :code:`SUPERLU_WITH_VERSION`\n\n#       Human readable string containing version information.\n\n#\n\n#    :code:`SUPERLU_INCLUDE_DIRS`\n\n#       Path to the SuperLU include dirs.\n\n#\n\n#    :code:`SUPERLU_LIBRARIES`\n\n#       Name to the SuperLU library.\n\n#\n\n# .. cmake_variable:: SUPERLU_ROOT\n\n#\n\n#    You may set this variable to have :ref:`FindSuperLU` look\n\n#    for the SuperLU package in the given path before inspecting\n\n#    system paths.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# look for header files, only at positions given by the user\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# look for header files, including default paths\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# look for library, only at positions given by the user\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# look for library files, including default paths\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# check version specific macros\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# we need if clauses here because variable is set variable-NOTFOUND\n\n# if the searches above were not successful\n\n# Without them CMake print errors like:\n\n# \"CMake Error: The following variables are used in this project, but they are set to NOTFOUND.\n\n# Please set them or make sure they are set and tested correctly in the CMake files:\"\n\n#\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# check wether version is new enough >= 4.0\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# check whether version is at least 4.3\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# check whether version is at least 5.0\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# behave like a CMake module is supposed to behave\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# if both headers and library are found, store results\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# log result\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# log errornous result\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# set HAVE_SUPERLU for config.h\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# register all superlu related flags\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# text for feature summary\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "config.h.cmake" : {
      "ObjectId" : "713cab90fa86f4d1fd50e1e6431d3fbab56e0670",
      "LastModified" : "2018-02-15T09:32:56Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* begin dune-istl\n   put the definitions for config.h specific to\n   your project here. Everything above will be\n   overwritten\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* begin private */\n/* Name of package */",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Define to the address where bug reports for this package should be sent. */",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Define to the full name of this package. */",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Define to the full name and version of this package. */",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Define to the one symbol short name of this package. */",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Define to the home page for this package. */",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Define to the version of this package. */",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* end private */",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Define to ENABLE_SUPERLU if the SuperLU library is available */",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Define to the integer type that SuperLU was compiled for\n   See e.g. what int_t is defined to in slu_sdefs.h */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Define to 1 if header slu_sdefs.h is there. */",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Define to 1 if header slu_ddefs.h is there. */",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Define to 1 if header slu_cdefs.h is there. */",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Define to 1 if header slu_zdefs.h is there. */",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Define to ENABLE_ARPACKPP if the ARPACK++ library is available */",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Define to 0 as all versions since SuperLu 4.0 do no longer provide it that way. */",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* define to 1 if SuperLU header slu_ddefs.h contains SLU_DOUBLE */",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* define to 1 if SuperLU dgssvx takes a GlobalLU_t parameter */",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Define to the version of dune-istl */",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Define to the major version of dune-istl */",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Define to the minor version of dune-istl */",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Define to the revision of dune-istl */",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Enable/Disable the backwards compatibility of the category enum/method in dune-istl solvers, preconditioner, etc. */",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* end dune-istl\n   Everything below here will be overwritten\n*/",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "27fb32e985405d4d6683b37c6f6bb0c41d34bc2f",
      "LastModified" : "2019-03-05T22:13:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/doxygen/CMakeLists.txt" : {
      "ObjectId" : "0f65f1ba5d597b9463f51d0cb5c045e77cd8daab",
      "LastModified" : "2012-04-30T13:59:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shortcut for creating the Doxyfile.in and Doxyfile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dune/CMakeLists.txt" : {
      "ObjectId" : "e93d9cba6bc17643f35959eaac7fb9c7afe603a3",
      "LastModified" : "2012-04-30T12:04:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/istl/CMakeLists.txt" : {
      "ObjectId" : "ba25465dfd946f9a523beecf60d6b83885f7b9fe",
      "LastModified" : "2019-03-05T22:13:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#install headers\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dune/istl/eigenvalue/CMakeLists.txt" : {
      "ObjectId" : "f6b863c3a9b066118c1f5f31addf8cebfbe4637e",
      "LastModified" : "2018-02-15T09:32:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#install headers\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dune/istl/eigenvalue/test/CMakeLists.txt" : {
      "ObjectId" : "3511413b57cfb3f17080ee386e0b38201ce0f06e",
      "LastModified" : "2018-02-15T09:32:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/istl/paamg/CMakeLists.txt" : {
      "ObjectId" : "4bf5dc147676e62e028dd54a794876c24375b6d5",
      "LastModified" : "2019-03-05T22:13:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#install headers\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dune/istl/paamg/test/CMakeLists.txt" : {
      "ObjectId" : "3f371f83ce9c7698c68e1eda6ce4d880a4cee80c",
      "LastModified" : "2018-02-15T09:32:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add an executable without SuperLU/UMFPack\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These tests need MPI, even though they are only run sequentially\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dune/istl/test/CMakeLists.txt" : {
      "ObjectId" : "50217e1a03ce8e5f4662828968621cb1a1932c32",
      "LastModified" : "2019-03-24T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# install the test tools as we want to support testing 3rd-party vectors and matrices with an installed dune-istl\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SuperLU tests\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# SuiteSparse tests\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MPI tests\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/CMakeLists.txt" : {
      "ObjectId" : "9611bd22ba93a6911644441bc8ba41bc321cef8e",
      "LastModified" : "2013-04-29T16:24:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 18,
    "CMAKESOURCE" : 1
  },
  "ElapsedTime" : 2397
}