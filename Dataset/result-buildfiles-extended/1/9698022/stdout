{
  "Repository" : "9698022",
  "Revision" : "HEAD",
  "ObjectId" : "c0c79809229ada4a970cc81d519d6fad772ac6e3",
  "CommitTime" : "2019-04-20T09:15:02Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "fa01ed08bb28ccd1eaa0c5c492a1c0b137583fc8",
      "LastModified" : "2018-02-14T04:48:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# global cmake configuration file for ALPSCore\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# # TODO: should probably a bit more fine-grained\n\n# # Is expected to be taken care of by ALPS_CXX_STD, which works transitively\n\n# set(CMAKE_CXX_STANDARD 11)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include cmake scripts from common/cmake directory\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# check that compiler version is OK.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# take care of compiler-specific tweaks\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ALPS_GLOBAL_BUILD means building project all at once\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Documentation\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# not to spawn make doc jobs for each module\n",
        "Line" : 41,
        "CharPositionInLine" : 27
      },
      "8" : {
        "Text" : "# enable Testing\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#defined in common/cmake\n",
        "Line" : 50,
        "CharPositionInLine" : 29
      },
      "10" : {
        "Text" : "# Normalize the list of disabled modules (aka packages)\n\n# FIXME: this inconsistent dual-naming \"${module}\" vs \"alps-${module}\" should go away!\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# each module is defined as a cmake project in a subdirectory\n\n# also add to utilities/include/config.hpp.in under \"Available ALPSCore components\"\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Doxygen building is a function to prevent namespace damage\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# to provide name for the documentation \n",
        "Line" : 78,
        "CharPositionInLine" : 49
      },
      "14" : {
        "Text" : "# unset(_am_building_documentation CACHE)\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# miscellaneous operations\n\n# Create the main config file\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Create the main *.hpp config file\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# create module file for lmod manager \n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "accumulators/CMakeLists.txt" : {
      "ObjectId" : "bd680498d23d2f2b46670bea262bc784b52631a0",
      "LastModified" : "2018-02-22T00:22:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# alps-accumulators cmake configuration script.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# project name\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add common modules from ../common/cmake\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add common definitions, if being configured independently\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "accumulators/test/CMakeLists.txt" : {
      "ObjectId" : "92e86ed6f5d249374b3792cdeafc0c89bfc62eb1",
      "LastModified" : "2018-08-20T17:29:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME!! Incorporate in the corresponding test\n",
        "Line" : 35,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : "#add tests for MPI\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "alea/CMakeLists.txt" : {
      "ObjectId" : "7fa094b09a63dd4c7874e68b41bf8c6391d2be5a",
      "LastModified" : "2018-10-22T23:07:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# alps-accumulators cmake configuration script.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# project name\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add common modules from ../common/cmake\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add common definitions, if being configured independently\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "alea/test/CMakeLists.txt" : {
      "ObjectId" : "b9b82d6d0ac7c4df41be0dff1a431bc620d3f583",
      "LastModified" : "2018-11-05T19:08:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add tests for MPI\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "common/cmake/ALPSCommonModuleDefinitions.cmake" : {
      "ObjectId" : "b04db76ec4b817b0f24e51458c4e1f109ec5c110",
      "LastModified" : "2018-10-22T23:07:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Provide common definitions for building alps modules \n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do not forget to adjust as needed!\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Disable in-source builds\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Ignore special meaning of PackageName_ROOT variables (since CMake 3.12)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# RPATH fix\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#policy update CMP0042\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Do Release-with-debug build by default\n\n#If it is not set, remove it from the cache\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This option is checked, e.g., when adding -DBOOST_DISABLE_ASSERTS.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# GF uses boost::multi_array, to supress extra checks we need to define extra flags,\n\n# otherwise codes will slow down to a crawl.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Build static XOR shared \n\n# Defines ALPS_BUILD_TYPE=STATIC|DYNAMIC .\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# We do not want those variables in cache:\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Special case: just go after BUILD_SHARED_LIBS, everything else is default.\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# << user will likely override it\n",
        "Line" : 95,
        "CharPositionInLine" : 59
      },
      "13" : {
        "Text" : "# Set ALPS_ROOT as a hint for standalone component builds\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Some macros\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# add includes and libs for each module\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# usage: add_boost(component1 component2...)\n",
        "Line" : 118,
        "CharPositionInLine" : 17
      },
      "17" : {
        "Text" : "#set(Boost_USE_STATIC_RUNTIME    OFF)\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Remember Boost version\n",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Remember Boost location hints\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Usage: add_alps_package(pkgname1 pkgname2...)\n\n# Sets variable ${PROJECT_NAME}_DEPENDS\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# this is needed to compile tests (FIXME: why?)\n",
        "Line" : 186,
        "CharPositionInLine" : 64
      },
      "22" : {
        "Text" : "# message(STATUS \"DEBUG: found as an ALPSCore component\")\n",
        "Line" : 192,
        "CharPositionInLine" : 14
      },
      "23" : {
        "Text" : "# message(STATUS \"DEBUG: could not find ALPSCore, searching for the component directly\")\n",
        "Line" : 195,
        "CharPositionInLine" : 14
      },
      "24" : {
        "Text" : "# Imported targets returned by find_package() contain info about include dirs, no need to assign them\n",
        "Line" : 198,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "# Usage: add_this_package(srcs... EXTRA extra_srcs...)\n\n# The `srcs` are source file names in directory \"src/\"\n\n# After `EXTRA`, `extra_srcs` are added verbatim\n\n# Defines ${PROJECT_NAME} target\n\n# Exports alps::${PROJECT_NAME} target\n\n# Defines internal cache variable ALPS_HAVE_ALPS_${MODULE} (where MODULE=upcase(PROJECT_NAME))\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# This is needed to compile tests:\n",
        "Line" : 214,
        "CharPositionInLine" : 3
      },
      "27" : {
        "Text" : "# Generate pkg-config file\n",
        "Line" : 291,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Function: generates main ALPSCore config\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Function: generates package-specific CMake configs\n\n# Arguments: [DEPENDS <list-of-dependencies>] [EXPORTS <list-of-exported-targets>]\n\n# If no <list-of-dependencies> are present, the contents of ${PROJECT_NAME}_DEPENDS is used\n\n# If no exported targets are present, alps::${PROJECT_NAME} is assumed.\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# arg parsing helper\n",
        "Line" : 312,
        "CharPositionInLine" : 33
      },
      "CommentCount" : 31
    },
    "common/cmake/ALPSCompilerTweaks.cmake" : {
      "ObjectId" : "20ded2416a0611fd0a1a1293d6fdb6b9e6b55064",
      "LastModified" : "2016-09-01T18:25:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check compiler version and add specific options, if needed\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "common/cmake/ALPSCompilerVersionCheck.cmake" : {
      "ObjectId" : "85b66472dc8c6e74439163fccde864316c3e75d5",
      "LastModified" : "2018-10-22T23:07:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to guess the flags needed for the current compiler to activate a given C++ standard\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Check for minimum compiler version and throw error if we know the compiler doesn't work\n\n# Warn if we can't test for it.\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for some experimental compilers the version parser fails and we need to skip the version test altogether\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#we can probably support older versions but nobody has any left to test\n",
        "Line" : 35,
        "CharPositionInLine" : 56
      },
      "4" : {
        "Text" : "# ensure the var is read from cache, if any\n",
        "Line" : 52,
        "CharPositionInLine" : 20
      },
      "5" : {
        "Text" : "# Does CMake know how to use C++XX for this compiler?\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "common/cmake/ALPSEnableEigen.cmake" : {
      "ObjectId" : "85826a598fa033d7cfee3247451d7aedf746965f",
      "LastModified" : "2018-10-22T23:07:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# enable using Eigen\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Function to download a resource using CMake file() built-in\n\n# Arguments:\n\n#  url      : URL to download\n\n#  destfile : where to download to\n\n#  ntries   : how many times to try\n\n#  statvar  : name of the variable to store status (0 == Success)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Function to download a resource using wget\n\n# Arguments:\n\n#  url      : URL to download\n\n#  destfile : where to download to\n\n#  ntries   : how many times to try\n\n#  statvar  : name of the variable to store status (0 == Success)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Function to download a resource using curl\n\n# Arguments:\n\n#  url      : URL to download\n\n#  destfile : where to download to\n\n#  ntries   : how many times to try\n\n#  statvar  : name of the variable to store status (0 == Success)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check if the gzip file is readable and in proper format (e.g., not empty)\n\n# Arguments:\n\n#   filename : name of the file to check\n\n#   ok_var   : name of the variable to return the status (TRUE if the file is OK)\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add eigen to the current module (target ${PROJECT_NAME})\n\n# Sets EIGEN3_VERSION variable in the parent scope\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CAUTION, the message contains significant spaces in seemingly-empty lines.\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# CAUTION, the message contains significant spaces in seemingly-empty lines.\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# CMake 3.3+ would use Eigen3_FOUND\n",
        "Line" : 151,
        "CharPositionInLine" : 60
      },
      "9" : {
        "Text" : "# Here EIGEN3_INCLUDE_DIR is set, find_package() will only check the version \n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# CMake 3.3+ would use Eigen3_FOUND\n",
        "Line" : 242,
        "CharPositionInLine" : 26
      },
      "11" : {
        "Text" : "# assertion\n",
        "Line" : 258,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# CMake 3.3+ would use Eigen3_FOUND\n",
        "Line" : 259,
        "CharPositionInLine" : 46
      },
      "CommentCount" : 13
    },
    "common/cmake/ALPSEnableMPI.cmake" : {
      "ObjectId" : "95b36da17d65f0d99053522978a141aa1145b004",
      "LastModified" : "2018-10-22T23:07:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This cmake script enables MPI support in ALPSCore.\n\n# It is done in the following way\n\n# 1. Check the CXX compiler for MPI support.\n\n# 2. If CXX doesn't support MPI - try to find the MPI compiler,\n\n#    check it for being the same compiler as CXX,\n\n#    and add libraries and headers to the target ${PROJECT_NAME}\n\n# 3. Otherwise disable MPI \n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# configurable option\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# try compiling sample mpi code \n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# CXX Compiler doesn't support MPI - try to locate it\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# check that the versions of compilers are the same\n",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "common/cmake/ALPSEnableTests.cmake" : {
      "ObjectId" : "6dc9ef7aa5c085a997f5eca79372edbd34dde181",
      "LastModified" : "2019-02-04T15:56:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This cmake script adds test to a project from the 'test' directory in the ALPS module\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check xml output\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find gtest or otherwise fetch it into the build_dir/gtest\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set (gtest_root ${ALPS_ROOT_DIR}/../common/deps/gtest-1.7.0)\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Hack to suppress all warnings in gtest\n",
        "Line" : 16,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# FIXME: this is actually gcc/clang/icc specific\n",
        "Line" : 19,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# export gtest variables\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# enable testing with gtest - fetch it if needed\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# set (LINK_TEST  ${GTEST_MAIN_LIBRARIES}) \n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# internal function to build a test executable\n\n# MAIN|NOMAIN TARGET <target_name> EXE <exe_name> SRCS <src1> <src2>...\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# custom function to add test with xml output and linked to gtest\n\n# arg0 - test (assume the source is ${test}.cpp)\n\n# optional arg: NOMAIN: do not link libgtest_main containing main()\n\n# optional arg: MAIN: do link libgtest_main containing main()\n\n# optional arg: PARTEST: run test in parallel using N processes, where N is run-time value of environment variable ALPS_TEST_MPI_NPROC\n\n#               (or 1 if the variable is not set) (FIXME: make this a configurable constant!)\n\n# optional arg: COMPILEFAIL: expect compilation failure as positive test outcome\n\n# optional arg: SRCS source1 source2... : additional source files\n\n# Affected by: ${PROJECT_NAME}_DEPENDS variable.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# FIXME: if compiler supports MPI directly, the MPIEXEC program is not deduced!\n\n# FIXME: in the MPI test command, POSIX shell is assumed\n",
        "Line" : 124,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 12
    },
    "common/cmake/FindEigen3.cmake" : {
      "ObjectId" : "533265bf63827b2f19c904236448c2b79637ca02",
      "LastModified" : "2017-11-06T18:56:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n\n#\n\n# This module reads hints about search locations from \n\n# the following enviroment variables:\n\n#\n\n# EIGEN3_ROOT\n\n# EIGEN3_ROOT_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n\n# Modified by Alexander Gaenko, October 2017\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# search first if an Eigen3Config.cmake is available in the system,\n\n# if successful this would set EIGEN3_INCLUDE_DIR and the rest of\n\n# the script will work as usual\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "common/cmake/UseDoxygen.cmake" : {
      "ObjectId" : "79d6d4381d24b85e86da3883c3170508f75c426d",
      "LastModified" : "2018-10-22T23:07:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Run Doxygen\n\n#\n\n# Adds a doxygen target that runs doxygen to generate the html\n\n# and optionally the LaTeX API documentation.\n\n# The doxygen target is added to the doc target as a dependency.\n\n# i.e.: the API documentation is built with:\n\n#  make doc\n\n#\n\n# USAGE: GLOBAL INSTALL\n\n#\n\n# Install it with:\n\n#  cmake ./ && sudo make install\n\n# Add the following to the CMakeLists.txt of your project:\n\n#  include(UseDoxygen OPTIONAL)\n\n# Optionally copy Doxyfile.in in the directory of CMakeLists.txt and edit it.\n\n#\n\n# USAGE: INCLUDE IN PROJECT\n\n#\n\n#  set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR})\n\n#  include(UseDoxygen)\n\n# Add the Doxyfile.in and UseDoxygen.cmake files to the projects source directory.\n\n#\n\n#\n\n# CONFIGURATION\n\n#\n\n# To configure Doxygen you can edit Doxyfile.in and set some variables in cmake.\n\n# Variables you may define are:\n\n#  DOXYFILE_SOURCE_DIR - Path where the Doxygen input files are.\n\n#  \tDefaults to the current source directory.\n\n#  DOXYFILE_EXTRA_SOURCES - Additional source diretories/files for Doxygen to scan.\n\n#  \tThe Paths should be in double quotes and separated by space. e.g.:\n\n#  \t \"${CMAKE_CURRENT_BINARY_DIR}/foo.c\" \"${CMAKE_CURRENT_BINARY_DIR}/bar/\"\n\n#  \n\n#  DOXYFILE_OUTPUT_DIR - Path where the Doxygen output is stored.\n\n#  \tDefaults to \"${CMAKE_CURRENT_BINARY_DIR}/doc\".\n\n#  \n\n#  DOXYFILE_LATEX - ON/OFF; Set to \"ON\" if you want the LaTeX documentation\n\n#  \tto be built.\n\n#  DOXYFILE_LATEX_DIR - Directory relative to DOXYFILE_OUTPUT_DIR where\n\n#  \tthe Doxygen LaTeX output is stored. Defaults to \"latex\".\n\n#  \n\n#  DOXYFILE_HTML_DIR - Directory relative to DOXYFILE_OUTPUT_DIR where\n\n#  \tthe Doxygen html output is stored. Defaults to \"html\".\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Copyright (c) 2009, 2010, 2011 Tobias Rautenkranz <tobias@rautenkranz.ch>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## LaTeX\n",
        "Line" : 106,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "common/deps/gtest-1.7.0/CMakeLists.txt" : {
      "ObjectId" : "57470c84f3af0772c411bbb8bbbb41b515747ecd",
      "LastModified" : "2018-10-22T23:07:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 52,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# The C++ Standard specifies tuple_element<int, class>.\n\n# Yet MSVC 10's <utility> declares tuple_element<size_t, class>.\n\n# That declaration conflicts with our own standard-conforming\n\n# tuple implementation.  Therefore using our own tuple with\n\n# MSVC 10 doesn't compile.\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "common/deps/gtest-1.7.0/Makefile.am" : {
      "ObjectId" : "9c96b42572ca943d5fb4d4303842f12a545e8523",
      "LastModified" : "2018-10-22T23:07:59Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "common/deps/gtest-1.7.0/cmake/internal_utils.cmake" : {
      "ObjectId" : "8cb21894cebacd5bdfb598c8663a5be50325d70f",
      "LastModified" : "2018-10-22T23:07:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 107,
        "CharPositionInLine" : 32
      },
      "17" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 31
    },
    "common/deps/gtest-1.7.0/make/Makefile" : {
      "ObjectId" : "9ac74493ba55246597e90b898fae847ae358eab5",
      "LastModified" : "2018-10-22T23:07:59Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building Google Test and using it in user\n\n# tests.  Please tweak it to suit your environment and project.  You\n\n# may want to move it to your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GTEST_HEADERS, which you can use in your own targets\n\n# but shouldn't modify.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test's header directory as a system directory, such that\n\n# the compiler doesn't generate warnings in Google Test headers.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Builds gtest.a and gtest_main.a.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For simplicity and to avoid depending on Google Test's\n\n# implementation details, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Test\n\n# compiles fast and for ordinary users its source rarely changes.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Builds a sample test.  A test should link with either gtest.a or\n\n# gtest_main.a, depending on whether it defines its own main()\n\n# function.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "common/deps/gtest-1.7.0/scripts/test/Makefile" : {
      "ObjectId" : "cdff584637b7a6e9df1fa43ce8f588c43815e561",
      "LastModified" : "2018-10-22T23:07:59Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A Makefile for fusing Google Test and building a sample test against it.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make check  - makes everything and runs the built sample test.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Points to the root of fused Google Test, relative to where this file is.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paths to the fused gtest files.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find the sample test.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find gtest_main.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# We have no idea here whether pthreads is available in the system, so\n\n# disable its use.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "common/deps/iniparser/CMakeLists.txt" : {
      "ObjectId" : "1d2ce0eb1294d99f4067aafaf0fd829bc7eac0f8",
      "LastModified" : "2018-10-22T23:07:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "gf/CMakeLists.txt" : {
      "ObjectId" : "30653cb9790a9d90910cef269672efa112026490",
      "LastModified" : "2018-10-22T23:07:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### gftools cmake configuration\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# gftools use only CXX compiler \n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find additional cmake module in cmake dir\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add common definitions, if being configured independently\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# A gentle reminder for a developer that uses -DCMAKE_BUILD_TYPE=Debug\n\n# (does not really try to analyze compilation flags)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "gf/test/CMakeLists.txt" : {
      "ObjectId" : "cd007e3f1266ff011fdc6cd996634df3e9282d96",
      "LastModified" : "2018-10-22T23:07:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hdf5/CMakeLists.txt" : {
      "ObjectId" : "c4d154a5ba1552884932a7c2a67be7519c43f974",
      "LastModified" : "2018-10-22T23:07:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# alps-hdf5 cmake configuration script.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# define project name\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add common modules from ../common/cmake\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add common definitions, if being configured independently\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "hdf5/test/CMakeLists.txt" : {
      "ObjectId" : "7a1510a6be5b4ec150f5de05027ba004745103b6",
      "LastModified" : "2018-10-22T23:07:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this one was commented out. Any idea why?\n",
        "Line" : 22,
        "CharPositionInLine" : 13
      },
      "1" : {
        "Text" : "# TODO: fix szip and attribute dependence ...\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#    if (SZIP_FOUND)\n\n#        configure_file(hdf5_io.cpp.in ${PROJECT_BINARY_DIR}/hdf5/test/hdf5_dz${test_name}.cpp)\n\n#        alps_add_gtest(hdf5_d${test_name} ${PROJECT_BINARY_DIR}/hdf5/test)\n\n#        SET_TARGET_PROPERTIES(hdf5_dz${test_name} PROPERTIES COMPILE_FLAGS \"-DSZIP_COMPRESS=true\")\n\n#    endif (SZIP_FOUND)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#configure_file(hdf5_io.cpp.in ${PROJECT_BINARY_DIR}/hdf5/test/hdf5_a${test_name}.cpp)\n\n#alps_add_gtest(hdf5_a${test_name} ${PROJECT_BINARY_DIR}/hdf5/test)\n\n#SET_TARGET_PROPERTIES(hdf5_a${test_name} PROPERTIES COMPILE_FLAGS \"-DIS_ATTRIBUTE=true\")\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "mc/CMakeLists.txt" : {
      "ObjectId" : "8b75f2f811ca988963373461a17f46005992a9ad",
      "LastModified" : "2018-10-22T23:07:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# alps-mc cmake configuration script.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# define project name\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add common modules from ../common/cmake\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add common definitions, if being configured independently\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "mc/test/CMakeLists.txt" : {
      "ObjectId" : "2b28fd6081be1cf0d3562c7ad59bea50f6dee5f1",
      "LastModified" : "2018-10-22T23:07:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add tests for MPI\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "params/CMakeLists.txt" : {
      "ObjectId" : "03236d6a88a74290764effdf6eae9dc4e87d4ab6",
      "LastModified" : "2019-04-15T15:47:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# alps-params cmake configuration script.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# define project name\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add common modules from ../common/cmake\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add common definitions, if being configured independently\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The `EXTRA` is a workaround against a misfeature in CMake 3.1\n\n#  not allowing $<TARGET_OBJECTS:tgt> in `target_sources()`\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# FIXME: is it necessary or CMake can figure it out?\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# This does not work in CMake 3.1:\n\n# target_sources(${PROJECT_NAME} PRIVATE $<TARGET_OBJECTS:libiniparser>)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "params/test/CMakeLists.txt" : {
      "ObjectId" : "b43b626197a0e774ddb3b4881c61adb1eda5941a",
      "LastModified" : "2019-04-15T15:47:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tutorials/CMakeLists.txt" : {
      "ObjectId" : "e9d7e5ac4d769eb69fa82db0504bf8a76d6e26cc",
      "LastModified" : "2019-04-15T15:47:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tutorials/accumulators/compare_accumulators/CMakeLists.txt" : {
      "ObjectId" : "e4be87e10d3d5cc71479998c006bb29d7ab80841",
      "LastModified" : "2018-10-22T23:07:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Not strictly necessary, but will create executables that are\n\n# aware of ALPSCore location\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Request the ALPSCore package with `accumulators` components.\n\n# The ALPSCore package must be installed in some standard place (like /usr/local),\n\n# or somewhere in your PATH. \n\n# Otherwise, point ALPSCore_DIR environment variable to the ALPScore installation tree.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use ALPSCore_LIBRARIES variable to link to ALPSCore \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tutorials/accumulators/hdf5_accumulators/CMakeLists.txt" : {
      "ObjectId" : "ea7cd344ca28e198b6e5375c338599573351cc27",
      "LastModified" : "2018-10-22T23:07:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Not strictly necessary, but will create executables that are\n\n# aware of ALPSCore location\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Request the ALPSCore package with `accumulators` components.\n\n# The ALPSCore package must be installed in some standard place (like /usr/local),\n\n# or somewhere in your PATH. \n\n# Otherwise, point ALPSCore_DIR environment variable to the ALPScore installation tree.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use ALPSCore_LIBRARIES variable to link to ALPSCore \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tutorials/alea/uncertainty_prop/CMakeLists.txt" : {
      "ObjectId" : "1db4ba0b4ca186d97f915de08ee03d7066c3c87d",
      "LastModified" : "2019-04-15T15:47:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Not strictly necessary, but will create executables that are\n\n# aware of ALPSCore location\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Request the ALPSCore package with `alea` component.  It must be installed\n\n#   - either in a standard system path `/usr`\n\n#   - somewhere in your $PATH\n\n#   - in the directory corresponding to $ALPSCore_DIR\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use ALPSCore_LIBRARIES variable to link to ALPSCore\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tutorials/gf/CMakeLists.txt" : {
      "ObjectId" : "af69072bf9daa44f19bf488daa2ee9d870ef46be",
      "LastModified" : "2019-04-15T15:47:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a minimal CMake file that illustrates how to use GF component\n\n# in project that uses ALPSCore\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# we need at least cmake version 3.1\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the project is called 'gf', and it is a C++ project\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the project relies on the ALPSCore package. If ALPSCore is not found\n\n# automatically, specify its location using:\n\n# export ALPSCore_DIR=/location/to/ALPSCORE/\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# we only have one cpp file: it's called gf.cpp\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use ALPSCore_LIBRARIES variable to link to ALPSCore\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tutorials/hdf5/custom_hdf5/CMakeLists.txt" : {
      "ObjectId" : "0dead5d769397632751dce74425ae5782aef12d1",
      "LastModified" : "2019-04-15T15:47:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Not strictly necessary, but will create executables that are\n\n# aware of ALPSCore location\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Request the ALPSCore package with `hdf5` components.\n\n# The ALPSCore package must be installed in some standard place (like /usr/local),\n\n# or somewhere in your PATH. \n\n# Otherwise, point ALPSCore_DIR environment variable to the ALPScore installation tree.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use ALPSCore_LIBRARIES variable to link to ALPSCore \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tutorials/hdf5/simple_hdf5/CMakeLists.txt" : {
      "ObjectId" : "0f43dbf6947235d98491b06d7911736629021ae3",
      "LastModified" : "2019-04-15T15:47:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Not strictly necessary, but will create executables that are\n\n# aware of ALPSCore location\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Request the ALPSCore package with `hdf5` components.\n\n# The ALPSCore package must be installed in some standard place (like /usr/local),\n\n# or somewhere in your PATH. \n\n# Otherwise, point ALPSCore_DIR environment variable to the ALPScore installation tree.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use ALPSCore_LIBRARIES variable to link to ALPSCore \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tutorials/linking/CMakeLists.txt" : {
      "ObjectId" : "3ddfe0ad68f2a191cd69741519876d75e247549f",
      "LastModified" : "2019-04-15T15:47:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a minimal CMake file that illustrates how to link your\n\n# project to ALPSCore\n\n# Several additional options are possible (or even recommended), \n\n# this tutorial only illustrates the minimal options\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# we need at least cmake version 3.1\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the project is called 'linking', and it is a C++ project\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the project relies on the ALPSCore package. If ALPSCore is not found\n\n# automatically, specify its location using:\n\n# export ALPSCore_DIR=/location/to/ALPSCORE/\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# we only have one cpp file: it's called linking.cpp\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use ALPSCore_LIBRARIES variable to link to ALPSCore \n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tutorials/many_points/process/CMakeLists.txt" : {
      "ObjectId" : "33b276cd8b042114241c74784168d5aa0e396471",
      "LastModified" : "2019-04-15T15:47:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tutorials/mc/ising2_mc/CMakeLists.txt" : {
      "ObjectId" : "a65bb484be7c7180b9b5f3a6434fdb06f9b35ef9",
      "LastModified" : "2019-04-15T15:47:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Request the ALPSCore package (with all components)\n\n# The ALPSCore package must be installed in some\n\n# standard place (like /usr/local),\n\n# or somewhere in your PATH. \n\n# Otherwise, point ALPSCore_DIR environment variable\n\n# to the ALPScore installation tree.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use ALPSCore_LIBRARIES variable to link to ALPSCore \n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tutorials/mc/ising_mc/CMakeLists.txt" : {
      "ObjectId" : "96c41a942fa6dd26c1e0f0dbbd51cec4930cca70",
      "LastModified" : "2019-04-15T15:47:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Not strictly necessary, but will create executables that are\n\n# aware of ALPSCore location\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Request the ALPSCore package with `parms` components.\n\n# The ALPSCore package must be installed in some standard place (like /usr/local),\n\n# or somewhere in your PATH. \n\n# Otherwise, point ALPSCore_DIR environment variable to the ALPScore installation tree.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use ALPSCore_LIBRARIES variable to link to ALPSCore \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tutorials/mc/simple_mc/CMakeLists.txt" : {
      "ObjectId" : "0eb3d9715bcc8abcbbedf5312ffff7093eb0d304",
      "LastModified" : "2019-04-15T15:47:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Not strictly necessary, but will create executables that are\n\n# aware of ALPSCore location\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Request the ALPSCore package with `parms` components.\n\n# The ALPSCore package must be installed in some standard place (like /usr/local),\n\n# or somewhere in your PATH. \n\n# Otherwise, point ALPSCore_DIR environment variable to the ALPScore installation tree.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use ALPSCore_LIBRARIES variable to link to ALPSCore \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tutorials/mc/simple_mc_mpi/CMakeLists.txt" : {
      "ObjectId" : "a6959aa43f4f997225cde07f20a66302f115f6a6",
      "LastModified" : "2019-04-15T15:47:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Not strictly necessary, but will create executables that are\n\n# aware of ALPSCore location\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Request the ALPSCore package with `parms` components.\n\n# The ALPSCore package must be installed in some standard place (like /usr/local),\n\n# or somewhere in your PATH. \n\n# Otherwise, point ALPSCore_DIR environment variable to the ALPScore installation tree.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if your ALPSCore is compiled with MPI support.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use ALPSCore_LIBRARIES variable to link to ALPSCore \n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tutorials/mpi/CMakeLists.txt" : {
      "ObjectId" : "858a1cc93cad7bd1e3c8c828192b95ddfbee7f62",
      "LastModified" : "2019-04-15T15:47:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Not strictly necessary, but will create executables that are\n\n# aware of ALPSCore location\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Request the ALPSCore package\n\n# The ALPSCore package must be installed in some standard place (like /usr/local),\n\n# or somewhere in your PATH. \n\n# Otherwise, point ALPSCore_DIR environment variable to the ALPScore installation tree.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check that ALPSCore is built with MPI support\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use ALPSCore_LIBRARIES variable to link to ALPSCore\n\n# Note that we do not request MPI library: ALPSCore provides it as a transitive dependency\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tutorials/params/cmd_params/CMakeLists.txt" : {
      "ObjectId" : "72ae9d28ac67d60ae538bc07e687320472ff4ee4",
      "LastModified" : "2019-04-15T15:47:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Not strictly necessary, but will create executables that are\n\n# aware of ALPSCore location\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Request the ALPSCore package with `params` components.\n\n# The ALPSCore package must be installed in some standard place (like /usr/local),\n\n# or somewhere in your PATH. \n\n# Otherwise, point ALPSCore_DIR environment variable to the ALPScore installation tree.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use ALPSCore_LIBRARIES variable to link to ALPSCore \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tutorials/params/code_params/CMakeLists.txt" : {
      "ObjectId" : "a4c12b3ef22aadc3ce2901cbf252152fe535bb69",
      "LastModified" : "2019-04-15T15:47:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Not strictly necessary, but will create executables that are\n\n# aware of ALPSCore location\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Request the ALPSCore package with `params` components.\n\n# The ALPSCore package must be installed in some standard place (like /usr/local),\n\n# or somewhere in your PATH. \n\n# Otherwise, point ALPSCore_DIR environment variable to the ALPScore installation tree.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use ALPSCore_LIBRARIES variable to link to ALPSCore \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tutorials/params/hdf5_params/CMakeLists.txt" : {
      "ObjectId" : "dcaaa1cb49aec728605fb3f1f6db8b597c9040ed",
      "LastModified" : "2019-04-15T15:47:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Not strictly necessary, but will create executables that are\n\n# aware of ALPSCore location\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Request the ALPSCore package with `params` components.\n\n# The ALPSCore package must be installed in some standard place (like /usr/local),\n\n# or somewhere in your PATH. \n\n# Otherwise, point ALPSCore_DIR environment variable to the ALPScore installation tree.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use ALPSCore_LIBRARIES variable to link to ALPSCore \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tutorials/params/ini_params/CMakeLists.txt" : {
      "ObjectId" : "4c42d6239bbb43f918712899f707e997e03f4058",
      "LastModified" : "2019-04-15T15:47:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Not strictly necessary, but will create executables that are\n\n# aware of ALPSCore location\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Request the ALPSCore package with `params` components.\n\n# The ALPSCore package must be installed in some standard place (like /usr/local),\n\n# or somewhere in your PATH. \n\n# Otherwise, point ALPSCore_DIR environment variable to the ALPScore installation tree.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use ALPSCore_LIBRARIES variable to link to ALPSCore \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tutorials/use_boost/CMakeLists.txt" : {
      "ObjectId" : "9e4930fe99be01b39cbf8a741bd48117901ead20",
      "LastModified" : "2019-04-15T15:47:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a minimal CMake file that illustrates how to use Boost\n\n# in project that uses ALPSCore\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# we need at least cmake version 3.1\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the project is called 'use_boost', and it is a C++ project\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the project relies on the ALPSCore package. If ALPSCore is not found\n\n# automatically, specify its location using:\n\n# export ALPSCore_DIR=/location/to/ALPSCORE/\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if our code only uses header-only Boost, nothing special to be done:\n\n# we only have one cpp file: it's called use_boost_header.cpp\n\n# and it generates a program called \"use_boost_header\"\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use ALPSCore_LIBRARIES variable to link to ALPSCore \n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If our code uses some Boost library, we will need to ask CMake to find it.\n\n# We should ask CMake to find the same Boost version\n\n# that ALPSCore used.\n\n# Let's ask for \"filesystem\" package (which itself depends on \"system\")\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Our executable \"use_boost_fs\" is made from a single source file \"use_boost_fs.cpp\"\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ...and it depends on Boost libraries and ALPSCore\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "tutorials/use_eigen/CMakeLists.txt" : {
      "ObjectId" : "57807e8a72bb3217f2b9393721aaaa0a383d58e3",
      "LastModified" : "2019-04-15T15:47:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a minimal CMake file that illustrates how to use Eigen\n\n# in project that uses ALPSCore\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# we need at least cmake version 3.1\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the project is called 'use_eigen', and it is a C++ project\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the project relies on the ALPSCore package. If ALPSCore is not found\n\n# automatically, specify its location using:\n\n# export ALPSCore_DIR=/location/to/ALPSCORE/\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# check if Eigen is present:\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# we only have one cpp file: it's called use_eigen.cpp\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Use ALPSCore_LIBRARIES variable to link to ALPSCore \n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "utilities/CMakeLists.txt" : {
      "ObjectId" : "18a73a73eaa4dd9a5a7737b078a6d410c73f3e18",
      "LastModified" : "2019-04-15T15:47:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# alps-utilities cmake configuration script.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# define project name\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add common modules from ../common/cmake\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add common definitions, if being configured independently\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# copyright //FIXME\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "utilities/test/CMakeLists.txt" : {
      "ObjectId" : "877e94acdc21b3b6863f276408e585c65c4c2693",
      "LastModified" : "2019-04-15T15:47:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Testing \"compilation failure test\" machinery\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 46,
    "MAKEFILE" : 2,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 1858
}