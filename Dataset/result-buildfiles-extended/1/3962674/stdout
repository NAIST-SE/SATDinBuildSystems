{
  "Repository" : "3962674",
  "Revision" : "HEAD",
  "ObjectId" : "49c59e5ada6c90b4faf72d3020df9cd0df5384fe",
  "CommitTime" : "2018-01-27T17:26:29Z",
  "Files" : {
    "contrib/bitcoin-qt.pro" : {
      "ObjectId" : "3a72d10f4732b80e50d943d9d600e8d38b9957b9",
      "LastModified" : "2017-11-22T20:44:59Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "fastcoin-qt.pro" : {
      "ObjectId" : "96df411b3e7933580d279e621987f8214b354b48",
      "LastModified" : "2018-01-25T13:55:38Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# for boost 1.37, add -mt to the boost libraries\n\n# use: qmake BOOST_LIB_SUFFIX=-mt\n\n# for boost thread win32 with _win32 sufix\n\n# use: BOOST_THREAD_LIB_SUFFIX=_win32-...\n\n# or when linking against a specific BerkelyDB version: BDB_LIB_SUFFIX=-4.8\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependency library locations can be customized with:\n\n#    BOOST_INCLUDE_PATH, BOOST_LIB_PATH, BDB_INCLUDE_PATH,\n\n#    BDB_LIB_PATH, OPENSSL_INCLUDE_PATH and OPENSSL_LIB_PATH respectively\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use: qmake \"RELEASE=1\"\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Mac: compile for maximum compatibility (10.5, 32-bit)\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Linux: static link and extra security (see: https://wiki.debian.org/Hardening)\n",
        "Line" : 34,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# for extra security against potential buffer overflows: enable GCCs Stack Smashing Protection\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Exclude on Windows cross compile with MinGW 4.2.x, as it will result in a non-working executable!\n\n# This can be enabled for Windows, when we switch to MinGW >= 4.4.x.\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# for extra security (see: https://wiki.debian.org/Hardening): this flag is GCC compiler-specific\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# for extra security on Windows: enable ASLR and DEP via GCC linker flags\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# on Windows: enable GCC large address aware linker flag\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# i686-w64-mingw32\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# use: qmake \"USE_QRCODE=1\"\n\n# libqrencode (http://fukuchi.org/works/qrencode/index.en.html) must be installed for support\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# use: qmake \"USE_UPNP=1\" ( enabled by default; default)\n\n#  or: qmake \"USE_UPNP=0\" (disabled by default)\n\n#  or: qmake \"USE_UPNP=-\" (not supported)\n\n# miniupnpc (http://miniupnp.free.fr/files/) must be installed for support\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# use: qmake \"USE_DBUS=1\"\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# use: qmake \"USE_IPV6=1\" ( enabled by default; default)\n\n#  or: qmake \"USE_IPV6=0\" (disabled by default)\n\n#  or: qmake \"USE_IPV6=-\" (not supported)\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# we use QMAKE_CXXFLAGS_RELEASE even without RELEASE=1 because we use RELEASE to indicate linking preferences not -O preferences\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# make an educated guess about what the ranlib command is called\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Gross ugly hack that depends on qmake internals, unfortunately there is no other way to do it.\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# regenerate src/build.h\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Input\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Todo: Remove this line when switching to Qt5, as that option was removed\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# for lrelease/lupdate\n\n# also add new translations to src/qt/bitcoin.qrc under translations/\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# automatically build translations, so they can be included in resource file\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# \"Other files\" to show in Qt Creator\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# platform specific defaults, if not overridden on command line\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# At least qmake's win32-g++-cross profile is missing the -lmingwthrd\n\n# thread-safety flag. GCC has -mthreads to enable this, but it doesn't\n\n# work with static linking. -lmingwthrd must come BEFORE -lmingw, so\n\n# it is prepended to QMAKE_LIBS_QT_ENTRY.\n\n# It can be turned off with MINGW_THREAD_BUGFIX=0, just in case it causes\n\n# any problems on some untested qmake profile now or in the future.\n",
        "Line" : 401,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# _FILE_OFFSET_BITS=64 lets 32-bit fopen transparently support large files.\n",
        "Line" : 414,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Set libraries and includes at end, to use platform-defined defaults if not overridden\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# -lgdi32 has to happen after -lcrypto (see  #681)\n",
        "Line" : 432,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Linux: turn dynamic linking back on for c/c++ runtime libraries\n",
        "Line" : 440,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 30
    },
    "share/qt/protobuf.pri" : {
      "ObjectId" : "bdb5bff035095fb6a404c956c8910fd13f44d83f",
      "LastModified" : "2018-01-25T13:55:38Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Based on: http://code.google.com/p/ostinato/source/browse/protobuf.pri\n\n#\n\n# Qt qmake integration with Google Protocol Buffers compiler protoc\n\n#\n\n# To compile protocol buffers with qt qmake, specify PROTOS variable and\n\n# include this file\n\n#\n\n# Example:\n\n# PROTOS = a.proto b.proto\n\n# include(protobuf.pri)\n\n#\n\n# Set PROTO_PATH if you need to set the protoc --proto_path search path\n\n# Set PROTOC to the path to the protoc compiler if it is not in your $PATH\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/leveldb/Makefile" : {
      "ObjectId" : "20c9c4f28751a716e6279940d723e357ba1f088c",
      "LastModified" : "2018-01-25T14:34:02Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n\n# Use of this source code is governed by a BSD-style license that can be\n\n# found in the LICENSE file. See the AUTHORS file for names of contributors.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------\n\n# Uncomment exactly one of the lines labelled (A), (B), and (C) below\n\n# to switch between compilation modes.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# (A) Production use (optimized mode)\n",
        "Line" : 9,
        "CharPositionInLine" : 26
      },
      "3" : {
        "Text" : "# OPT ?= -g2              # (B) Debug mode, w/ full line-level debugging symbols\n\n# OPT ?= -O2 -g2 -DNDEBUG # (C) Profiling mode: opt, but w/debugging symbols\n\n#-----------------------------------------------\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# detect what platform we're building on\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this file is generated by the previous line to set build flags and sources\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Should we build shared libraries?\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update db.h if you change these.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# PLATFORM_SHARED_EXT\n",
        "Line" : 88,
        "CharPositionInLine" : 7
      },
      "9" : {
        "Text" : "# For iOS, create universal object files to be used on both the simulator and\n\n# a device.\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "src/qt/test/Makefile" : {
      "ObjectId" : "a02f86b62ac9b38ec85b266c6205b0485557e3a5",
      "LastModified" : "2018-01-25T13:55:38Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/test/Makefile" : {
      "ObjectId" : "87bf73fec98d99ed7421093bfde8528d3ced4ddb",
      "LastModified" : "2018-01-25T13:55:38Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "QMAKE" : 3,
    "MAKEFILE" : 3
  },
  "ElapsedTime" : 2129
}