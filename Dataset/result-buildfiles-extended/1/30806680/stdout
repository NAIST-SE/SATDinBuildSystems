{
  "Repository" : "30806680",
  "Revision" : "HEAD",
  "ObjectId" : "31da62615604e43dda8a2b01bc88d30e7b7d910f",
  "CommitTime" : "2018-11-02T16:44:07Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "5deb3646ff0dde6ff57e6ee16a0ed80615c7d903",
      "LastModified" : "2018-10-29T16:41:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the C++0x or C++11 flag\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We have to set _WIN32_WINNT for Asio\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Windows 10\n",
        "Line" : 38,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : "# Windows 8.1\n",
        "Line" : 40,
        "CharPositionInLine" : 46
      },
      "4" : {
        "Text" : "# Windows 8\n",
        "Line" : 42,
        "CharPositionInLine" : 46
      },
      "5" : {
        "Text" : "# Windows 7\n",
        "Line" : 44,
        "CharPositionInLine" : 46
      },
      "6" : {
        "Text" : "# Windows Vista\n",
        "Line" : 46,
        "CharPositionInLine" : 46
      },
      "7" : {
        "Text" : "# Windows XP (5.1)\n",
        "Line" : 48,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 8
    },
    "FindDCMTK.cmake" : {
      "ObjectId" : "8415cb4f3fae57f6db90e2316eb621fe3a79a3a7",
      "LastModified" : "2016-04-27T08:52:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find DCMTK\n\n# Once done this will define\n\n#  DCMTK_FOUND - System has DCMTK\n\n#  DCMTK_INCLUDE_DIRS - The DCMTK include directories\n\n#  DCMTK_LIBRARY_DIRS - The DCMTK link directories\n\n#  DCMTK_LIBRARIES - The libraries needed to use DCMTK\n\n#  DCMTK_DEFINITIONS - Compiler switches required for using DCMTK\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set DCMTK_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "FindICU.cmake" : {
      "ObjectId" : "f9ce7e26f3b43c89b49e367a46ebb3fdf1c64531",
      "LastModified" : "2017-02-20T15:03:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find ICU\n\n# Once done this will define\n\n#  ICU_FOUND - System has ICU\n\n#  ICU_INCLUDE_DIRS - The ICU include directories\n\n#  ICU_LIBRARIES - The libraries needed to use ICU\n\n#  ICU_DEFINITIONS - Compiler switches required for using ICU\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get version\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set ICU_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "FindJsonCpp.cmake" : {
      "ObjectId" : "5f6c57c8250a0b602c8ffd3795299fcf4661cdc2",
      "LastModified" : "2015-12-22T11:42:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find JsonCpp\n\n# Once done this will define\n\n#  JsonCpp_FOUND - System has JsonCpp\n\n#  JsonCpp_INCLUDE_DIRS - The JsonCpp include directories\n\n#  JsonCpp_LIBRARIES - The libraries needed to use JsonCpp\n\n#  JsonCpp_DEFINITIONS - Compiler switches required for using JsonCpp\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set JsonCpp_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "applications/CMakeLists.txt" : {
      "ObjectId" : "79780564d17c09112beb78f900604fdb413c3872",
      "LastModified" : "2018-02-16T15:05:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/functions.cmake" : {
      "ObjectId" : "48697f01b37bb15a6c70b418e1910b1775e75013",
      "LastModified" : "2017-02-20T15:03:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Group files by their folder\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Beautify fileGroup (HEADER_FILES -> Header Files)\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Replace underscores with spaces\n",
        "Line" : 4,
        "CharPositionInLine" : 55
      },
      "3" : {
        "Text" : "# To lower\n",
        "Line" : 5,
        "CharPositionInLine" : 52
      },
      "4" : {
        "Text" : "# Split each word\n",
        "Line" : 7,
        "CharPositionInLine" : 73
      },
      "5" : {
        "Text" : "# Set to upper the first letter of each word\n",
        "Line" : 8,
        "CharPositionInLine" : 53
      },
      "6" : {
        "Text" : "# Put each file in the correct group\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Get the file name\n",
        "Line" : 21,
        "CharPositionInLine" : 56
      },
      "8" : {
        "Text" : "# Get the folder relative to the current one\n",
        "Line" : 22,
        "CharPositionInLine" : 74
      },
      "9" : {
        "Text" : "# Remove the file name\n",
        "Line" : 23,
        "CharPositionInLine" : 62
      },
      "10" : {
        "Text" : "# Parse the remaining directories hierarchy\n",
        "Line" : 25,
        "CharPositionInLine" : 35
      },
      "11" : {
        "Text" : "# Remove trailing slash\n",
        "Line" : 26,
        "CharPositionInLine" : 64
      },
      "12" : {
        "Text" : "# Forward to backward slashes\n",
        "Line" : 27,
        "CharPositionInLine" : 62
      },
      "13" : {
        "Text" : "# Put together the entire group name\n",
        "Line" : 28,
        "CharPositionInLine" : 58
      },
      "14" : {
        "Text" : "# Put the file in this group\n",
        "Line" : 30,
        "CharPositionInLine" : 59
      },
      "CommentCount" : 15
    },
    "documentation/Makefile" : {
      "ObjectId" : "25256e3906cdab0860c8cfb2fc0a31266d8485d9",
      "LastModified" : "2018-01-17T15:17:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Minimal makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put it first so that \"make\" without argument is like \"make help\".\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Catch-all target: route all unknown targets to Sphinx using the new\n\n# \"make mode\" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "1401a899506b900b7b4b7919f4aaf3d08b7cab6a",
      "LastModified" : "2018-01-17T15:17:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/cpp/CMakeLists.txt" : {
      "ObjectId" : "c9d6f0c7d36e68022fa6ea95a368a142dad0e888",
      "LastModified" : "2018-01-17T15:17:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/js/CMakeLists.txt" : {
      "ObjectId" : "03b8090b27e66661eeecbd26beb72556d2878f1b",
      "LastModified" : "2018-01-17T15:17:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/python/CMakeLists.txt" : {
      "ObjectId" : "c45cf144e33f94f11cb2a9f8d29114a2d391cfc4",
      "LastModified" : "2018-01-17T15:17:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "fd1059134d484476069f55b42b3cfe32a21d5953",
      "LastModified" : "2018-11-01T21:59:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Regroup files by folder\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# WARNING Need to link with bcrypt explicitely, \n\n# cf. https://github.com/boostorg/uuid/issues/68#issuecomment-430173245\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Not sure why iphlpapi is not linked.\n",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "192cce491948cfe14e1a5942b560684190abb259",
      "LastModified" : "2018-11-01T21:59:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/tools/CMakeLists.txt" : {
      "ObjectId" : "e3ec9c1006c7bbcb9e83fc64f2d051f52190f5f1",
      "LastModified" : "2018-01-17T15:17:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/js/CMakeLists.txt" : {
      "ObjectId" : "287eff606871ee26c86f8dca29f6c0ba03441665",
      "LastModified" : "2018-11-01T21:59:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/python/CMakeLists.txt" : {
      "ObjectId" : "c0bb7928982e5b077c49c78aab9d92e49a01757c",
      "LastModified" : "2018-11-01T21:59:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 15,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1291
}