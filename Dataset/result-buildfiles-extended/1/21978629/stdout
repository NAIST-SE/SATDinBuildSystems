{
  "Repository" : "21978629",
  "Revision" : "HEAD",
  "ObjectId" : "52b0903aef417d2fd406518ad2f60e4ade4447e5",
  "CommitTime" : "2019-03-01T14:02:18Z",
  "Files" : {
    "3rdparty/CMakeLists.txt" : {
      "ObjectId" : "a6c3c8250351c8c662d9ccb10e0722948f4be374",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# External libraries\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/KHR/CMakeLists.txt" : {
      "ObjectId" : "25fac3a7a1385b8619003da175a4655004ad3411",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# External dependencies\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Library name and options\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Sources\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set(source_path  \"${CMAKE_CURRENT_SOURCE_DIR}/source\")\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Create library\n\n#\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build library\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Export library for downstream projects\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# Project options\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# none allowed, since interface library (header-only)\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# Include directories\n\n#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# Libraries\n\n#\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# target_link_libraries(${target}\n\n#     INTERFACE\n\n# )\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# Compile definitions\n\n#\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# target_compile_definitions(${target}\n\n#     INTERFACE\n\n# )\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n\n# Compile options\n\n#\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# target_compile_options(${target}\n\n#     INTERFACE\n\n#     ${DEFAULT_COMPILE_OPTIONS}\n\n# )\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\n\n# Linker options\n\n#\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# target_link_libraries(${target}\n\n#     INTERFACE\n\n#     ${DEFAULT_LINKER_OPTIONS}\n\n# )\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\n\n# Target Health\n\n#\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# perform_health_checks(\n\n#     ${target}\n\n#     ${sources}\n\n# )\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Library\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Header files\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# CMake config\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 27
    },
    "CMakeLists.txt" : {
      "ObjectId" : "9eb02bb1adc731be595902c909869f4e468bcf45",
      "LastModified" : "2019-02-08T10:56:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \r\n\n# CMake options\r\n\n# \r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake version\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\r\n\n# Configure CMake environment\r\n\n#\r\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Register general cmake commands\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set policies\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ENABLE CMP0054: Only interpret if() arguments as variables or keywords when unquoted.\r\n\n# ENABLE CMP0042: MACOSX_RPATH is enabled by default.\r\n\n# ENABLE CMP0063: Honor visibility properties for all target types.\r\n\n# ENABLE CMP0072: FindOpenGL prefers GLVND by default when available.\r\n\n# ENABLE CMP0077: option() honors normal variables.\r\n",
        "Line" : 17,
        "CharPositionInLine" : 24
      },
      "6" : {
        "Text" : "# Include cmake modules\r\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This module is only available with CMake >=3.1, so check whether it could be found\r\n\n# BUT in CMake 3.1 this module doesn't recognize AppleClang as compiler, so just use it as of CMake 3.2\r\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Include custom cmake modules\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \r\n\n# Project description and (meta) information\r\n\n# \r\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Get git revision\r\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Meta information about the project\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \r\n\n# Project configuration options\r\n\n# \r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Project options\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# \r\n\n# Declare project\r\n\n# \r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Generate folders for IDE targets (e.g., VisualStudio solutions)\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Declare project\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Set output directories\r\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Create version file\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# \r\n\n# Compiler settings and options\r\n\n# \r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\r\n\n# Project Health Check Setup\r\n\n#\r\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Add cmake-init template check cmake targets\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Configure health check tools\r\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# \r\n\n# Deployment/installation setup\r\n\n# \r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Get project name\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Check for system dir install\r\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Installation paths\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Install into the system (/usr/bin or /usr/local/bin)\r\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# /usr/[local]/share/<project>\r\n\n# /usr/[local]/share/<project>/cmake\r\n\n# /usr/[local]/share/<project>\r\n\n# /usr/[local]/share/<project>\r\n\n# /usr/[local]/bin\r\n\n# /usr/[local]/lib\r\n\n# /usr/[local]/lib\r\n\n# /usr/[local]/include\r\n\n# /usr/[local]/share/doc/<project>\r\n\n# /usr/[local]/share/applications\r\n\n# /usr/[local]/share/pixmaps\r\n\n# /etc/init (upstart init scripts)\r\n",
        "Line" : 141,
        "CharPositionInLine" : 52
      },
      "29" : {
        "Text" : "# Install into local directory\r\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# ./\r\n\n# ./cmake\r\n\n# ./\r\n\n# ./\r\n\n# ./\r\n\n# ./lib\r\n\n# ./lib\r\n\n# ./include\r\n\n# ./doc\r\n\n# ./misc\r\n\n# ./misc\r\n\n# ./misc\r\n",
        "Line" : 155,
        "CharPositionInLine" : 52
      },
      "31" : {
        "Text" : "# Set runtime path\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Add absolute path to all dependencies for BUILD\r\n\n# Use CMAKE_INSTALL_RPATH for INSTALL\r\n\n# Do NOT add path to dependencies for INSTALL\r\n",
        "Line" : 170,
        "CharPositionInLine" : 45
      },
      "33" : {
        "Text" : "# Find libraries relative to binary\r\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# \r\n\n# Project modules\r\n\n# \r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# \r\n\n# Deployment (global project files)\r\n\n# \r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Install version file\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Install cmake find script for the project\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Install the project meta files\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Install runtime data\r\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 40
    },
    "cmake/CheckTemplate.cmake" : {
      "ObjectId" : "6f695902fa622d2a948320723137ca18ab41a4c9",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Get cmake-init latest commit SHA on master\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Get latest cmake-init commit on this repository\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# APPLIED_CMAKE_INIT_SHA can be set by parent script\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# [TODO]: Get from git commit list (see cmake_init/source/scripts/check_template.sh)\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/ClangTidy.cmake" : {
      "ObjectId" : "3e01032b9128be70d9032c2327784938e611ea02",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Function to register a target for clang-tidy\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/CompileOptions.cmake" : {
      "ObjectId" : "0483f7dbe42140f38f84c49682d7a2523e481a3a",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Platform and architecture setup\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get upper case system name\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Determine architecture (32/64 bit)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Not available before CMake 3.1; see below for manual command line argument addition\n",
        "Line" : 22,
        "CharPositionInLine" : 33
      },
      "5" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# MSVC compiler options\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Calling any one of the potentially unsafe methods in the Standard C++ Library\n\n# Calling any one of the potentially unsafe methods in the CRT Library\n",
        "Line" : 55,
        "CharPositionInLine" : 33
      },
      "10" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# MSVC compiler options\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# -> build with multiple processes\n\n# -> warning level 4\n",
        "Line" : 71,
        "CharPositionInLine" : 22
      },
      "13" : {
        "Text" : "# /WX         # -> treat warnings as errors\n",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# -> disable warning: 'identifier': class 'type' needs to have dll-interface to be used by clients of class 'type2'\n\n# -> disable warning: 'identifier': symbol will be dynamically initialized (implementation limitation)\n",
        "Line" : 74,
        "CharPositionInLine" : 22
      },
      "15" : {
        "Text" : "# /wd4201     # -> disable warning: nonstandard extension used: nameless struct/union (caused by GLM)\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# -> disable warning: conditional expression is constant (caused by Qt)\n",
        "Line" : 77,
        "CharPositionInLine" : 22
      },
      "17" : {
        "Text" : "# /Zm114      # -> Memory size for precompiled headers (insufficient for msvc 2013)\n",
        "Line" : 79,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# -> Memory size for precompiled headers\n",
        "Line" : 80,
        "CharPositionInLine" : 22
      },
      "19" : {
        "Text" : "#$<$<CONFIG:Debug>:\n\n#/RTCc         # -> value is assigned to a smaller data type and results in a data loss\n\n#>\n",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# -> whole program global optimization\n\n# -> buffer security check: no \n\n# -> whole program optimization: enable link-time code generation (disables Zi)\n\n# -> enable string pooling\n",
        "Line" : 87,
        "CharPositionInLine" : 22
      },
      "21" : {
        "Text" : "# No manual c++11 enable for MSVC as all supported MSVC versions for cmake-init have C++11 implicitly enabled (MSVC >=2013)\n",
        "Line" : 93,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# GCC and Clang compiler options\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#-fno-exceptions # since we use stl and stl is intended to use exceptions, exceptions should not be disabled\n",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# -Wreturn-stack-address # gives false positives\n",
        "Line" : 133,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "# Required for CMake < 3.1; should be removed if minimum required CMake version is raised.\n",
        "Line" : 140,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Use pthreads on mingw and linux\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "cmake/ComponentInstall.cmake" : {
      "ObjectId" : "8606060cfa7501481e643d4ee72537b948416ecf",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Execute cmake_install.cmake wrapper that allows to pass both DESTDIR and COMPONENT environment variable\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Cppcheck.cmake" : {
      "ObjectId" : "1f9ac05b17515ff692f7d1dd3aab0f2105d0c813",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Function to register a target for cppcheck\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Custom.cmake" : {
      "ObjectId" : "700491cc79717f9692f3b4743a105ae73b585a4f",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set policy if policy is available\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define function \"source_group_by_path with three mandatory arguments (PARENT_PATH, REGEX, GROUP, ...)\n\n# to group source files in folders (e.g. for MSVC solutions).\n\n#\n\n# Example:\n\n# source_group_by_path(\"${CMAKE_CURRENT_SOURCE_DIR}/src\" \"\\\\\\\\.h$|\\\\\\\\.inl$|\\\\\\\\.cpp$|\\\\\\\\.c$|\\\\\\\\.ui$|\\\\\\\\.qrc$\" \"Source Files\" ${sources})\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Function that extract entries matching a given regex from a list.\n\n# ${OUTPUT} will store the list of matching filenames.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindGLEW.cmake" : {
      "ObjectId" : "de6c6b79c9e54a0b0dc52fdec70e24184ac074a6",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GLEW_FOUND\n\n# GLEW_INCLUDE_DIR\n\n# GLEW_LIBRARY\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GLEW_BINARY (win32 only)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# authors prefered choice for development\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/Findclang_tidy.cmake" : {
      "ObjectId" : "e77fca9e83fa605027700b9b0436b318ad9a086e",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Findclang_tidy results:\n\n# clang_tidy_FOUND\n\n# clang_tidy_EXECUTABLE\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Findcppcheck.cmake" : {
      "ObjectId" : "b833859d54e2a414f2b3151a81598ec89060c243",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Findcppcheck results:\n\n# cppcheck_FOUND\n\n# cppcheck_EXECUTABLE\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/GenerateTemplateExportHeader.cmake" : {
      "ObjectId" : "7f8ea8801c25524ae6d9d2635c1cc71ccf398a45",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Creates an export header similar to generate_export_header, but for templates.\n\n# The main difference is that for MSVC, templates must not get exported.\n\n# When the file ${export_file} is included in source code, the macro ${target_id}_TEMPLATE_API\n\n# may get used to define public visibility for templates on GCC and Clang platforms.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "9fd2efbb3d2915eea441e112064df3d7ebb3cef4",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 36
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#   (ARGN MATCHES \"||\") OR\n\n#   (ARGN MATCHES \"\\\\;\"))\n\n#   message(\"Please report the following error to the project!\")\n\n#   message(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "cmake/HealthCheck.cmake" : {
      "ObjectId" : "8df8b9a311c58ec5b1417f428067748df0b88940",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Function to register a target for enabled health checks\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable or disable cppcheck for health checks\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Enable or disable clang-tidy for health checks\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Configure cmake target to check for cmake-init template\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/RuntimeDependencies.cmake" : {
      "ObjectId" : "7568b2744017a1517010224f9c15d2a998c51a28",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Default dependencies for the runtime-package\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install 3rd-party runtime dependencies into runtime-component\n\n# install(FILES ... COMPONENT runtime)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \n\n# Full dependencies for self-contained packages\n\n# \n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install 3rd-party runtime dependencies into runtime-component\n\n# install(FILES ... COMPONENT runtime)\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "deploy/CMakeLists.txt" : {
      "ObjectId" : "e38853f4510a69d7c64538b60043b19679a34e2b",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Target 'pack'\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install additional runtime dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \n\n# Packages\n\n# \n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Target 'component_install'\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deploy/packages/pack-glbinding.cmake" : {
      "ObjectId" : "fc9e5b8653608e9504127247e679f73667204fc3",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \r\n\n# Check if cpack is available\r\n\n# \r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \r\n\n# Output packages\r\n\n# \r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Windows installer\r\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# System installation packages for unix systems\r\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#elseif(\"${CMAKE_SYSTEM_NAME}\" MATCHES \"Darwin\")\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MacOS X disk image\r\n\n# At the moment, DMG generator and CPACK_INCLUDE_TOPLEVEL_DIRECTORY=ON do not work together.\r\n\n# Therefore, we disable dmg images for MacOS until we've found a solution\r\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#   set(OPTION_PACK_GENERATOR \"DragNDrop\" CACHE STRING \"Package targets\")\r\n\n#   set(PACK_COMPONENT_INSTALL OFF)\r\n\n#   set(PACK_INCLUDE_TOPDIR ON)\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Default (portable package for any platform)\r\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# \r\n\n# Package components\r\n\n# \r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \r\n\n# Initialize CPack\r\n\n# \r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Reset CPack configuration\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Find cpack executable\r\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set install prefix\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Package project\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Name of package project\r\n\n# Name of root project that is to be installed\r\n",
        "Line" : 124,
        "CharPositionInLine" : 41
      },
      "15" : {
        "Text" : "# Package information\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Package specific options\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# \r\n\n# Package information\r\n\n# \r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# set(CPACK_PACKAGE_ICON                       \"${PROJECT_SOURCE_DIR}/deploy/images/logo.bmp\")\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# \r\n\n# NSIS package\r\n\n# \r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Fix icon path\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# NOTE: for using MUI (UN)WELCOME images we suggest to replace nsis defaults,\r\n\n# since there is currently no way to do so without manipulating the installer template (which we won't).\r\n\n# http://public.kitware.com/pipermail/cmake-developers/2013-January/006243.html\r\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# SO the following only works for the installer icon, not for the welcome image.\r\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# NSIS requires \"\\\\\" - escaped backslash to work properly. We probably won't rely on this feature, \r\n\n# so just replacing / with \\\\ manually.\r\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "#file(TO_NATIVE_PATH \"${CPACK_PACKAGE_ICON}\" CPACK_PACKAGE_ICON) \r\n",
        "Line" : 173,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Fix installation path for x64 builds\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# http://public.kitware.com/Bug/view.php?id=9094\r\n",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Package options\r\n\n# set(CPACK_NSIS_DISPLAY_NAME  \"${package_name}-${META_VERSION}\")\r\n\n# set(CPACK_NSIS_MUI_ICON      \"${PROJECT_SOURCE_DIR}/deploy/images/logo.ico\")\r\n\n# set(CPACK_NSIS_MUI_UNIICON   \"${PROJECT_SOURCE_DIR}/deploy/images/logo.ico\")\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Optional Preliminaries (i.e., silent Visual Studio Redistributable install)\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# \r\n\n# Debian package\r\n\n# \r\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#set(CPACK_DEBIAN_PACKAGE_DEPENDS       \"libc6 (>= 2.3.1-6), libgcc1 (>= 1:3.4.2-12)\")\r\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#set(CPACK_DEBIAN_PACKAGE_RECOMMENDS    \"\")\r\n\n#set(CPACK_DEBIAN_PACKAGE_SUGGESTS      \"\")\r\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# \r\n\n# RPM package\r\n\n# \r\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#set(CPACK_RPM_SPEC_INSTALL_POST                      \"\")\r\n\n#set(CPACK_RPM_SPEC_MORE_DEFINE                       \"\")\r\n\n#set(CPACK_RPM_USER_BINARY_SPECFILE                   \"\")\r\n\n#set(CPACK_RPM_GENERATE_USER_BINARY_SPECFILE_TEMPLATE \"\")\r\n\n#set(CPACK_RPM_<POST/PRE>_<UN>INSTALL_SCRIPT_FILE     \"\")\r\n\n#set(CPACK_RPM_PACKAGE_DEBUG                          1)\r\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# \r\n\n# Archives (zip, tgz, ...)\r\n\n# \r\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# \r\n\n# Execute CPack\r\n\n# \r\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# \r\n\n# Package target\r\n\n# \r\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Create target\r\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Set dependencies\r\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 39
    },
    "docs/CMakeLists.txt" : {
      "ObjectId" : "47ae1b10d45fff5a4d0d788af9a2f88a57b0a127",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Target 'docs'\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Documentation\n\n# \n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "docs/api-docs/CMakeLists.txt" : {
      "ObjectId" : "70fd45c470d804d886ebe9577292833bffc2a8fc",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Find doxygen\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Target name\n\n# \n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \n\n# Input file\n\n# \n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# \n\n# Create documentation\n\n# \n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set project variables\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get filename and path of doxyfile\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Configure doxyfile (if it is a real doxyfile already, it should simply copy the file)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Invoke doxygen\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ToDO, configure doxygen to use source as is\n",
        "Line" : 53,
        "CharPositionInLine" : 89
      },
      "9" : {
        "Text" : "# Declare target\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "glbinding-config.cmake" : {
      "ObjectId" : "03fc5051ed596f129a5e964642e8d2e2e772e711",
      "LastModified" : "2019-02-08T10:33:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This config script tries to locate the project either in its source tree\n\n# or from an install location.\n\n# \n\n# Please adjust the list of submodules to search for.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# List of modules\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Macro to search for a specific module\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Macro to search for all modules\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Try install location\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Try common build locations\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Signal success/failure to CMake\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "source/CMakeLists.txt" : {
      "ObjectId" : "d29d856f1c528a52f526058150c8183b2861c724",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Configuration for all sub-projects\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate version-header\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \n\n# Sub-projects\n\n# \n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Libraries\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tools\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Examples\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Tests\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Deploy generated headers\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "source/examples/CMakeLists.txt" : {
      "ObjectId" : "3f66f5486e003c029b8f5f7ca05dc1b7c10a74d0",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \r\n\n# Configuration for all sub-projects\r\n\n# \r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# External packages\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \r\n\n# Sub-projects\r\n\n# \r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Examples\r\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "source/examples/callbacks/CMakeLists.txt" : {
      "ObjectId" : "c48eb99777a9e0f190e195839534dca05b7df601",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \r\n\n# External dependencies\r\n\n# \r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \r\n\n# Executable name and options\r\n\n# \r\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \r\n\n# Sources\r\n\n# \r\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \r\n\n# Create executable\r\n\n# \r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build executable\r\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create namespaced alias\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \r\n\n# Project options\r\n\n# \r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \r\n\n# Include directories\r\n\n# \r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \r\n\n# Libraries\r\n\n# \r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \r\n\n# Compile definitions\r\n\n# \r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \r\n\n# Compile options\r\n\n# \r\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \r\n\n# Linker options\r\n\n# \r\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\r\n\n# Target Health\r\n\n#\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# \r\n\n# Deployment\r\n\n# \r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Executable\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "source/examples/comparison/CMakeLists.txt" : {
      "ObjectId" : "68b2065835175a182cf3f4e2f38270450fb21e02",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \r\n\n# External dependencies\r\n\n# \r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \r\n\n# Executable name and options\r\n\n# \r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\r\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \r\n\n# Sources\r\n\n# \r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \r\n\n# Create executable\r\n\n# \r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build executable\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create namespaced alias\r\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \r\n\n# Project options\r\n\n# \r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \r\n\n# Include directories\r\n\n# \r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \r\n\n# Libraries\r\n\n# \r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \r\n\n# Compile definitions\r\n\n# \r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \r\n\n# Compile options\r\n\n# \r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \r\n\n# Linker options\r\n\n# \r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\r\n\n# Target Health\r\n\n#\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# \r\n\n# Deployment\r\n\n# \r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Executable\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "source/examples/cubescape-log/CMakeLists.txt" : {
      "ObjectId" : "7dbf5e74110a232b0866df71765c4b401efa1004",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \r\n\n# External dependencies\r\n\n# \r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \r\n\n# Executable name and options\r\n\n# \r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \r\n\n# Sources\r\n\n# \r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \r\n\n# Create executable\r\n\n# \r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build executable\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create namespaced alias\r\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \r\n\n# Project options\r\n\n# \r\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \r\n\n# Include directories\r\n\n# \r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \r\n\n# Libraries\r\n\n# \r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \r\n\n# Compile definitions\r\n\n# \r\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \r\n\n# Compile options\r\n\n# \r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \r\n\n# Linker options\r\n\n# \r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\r\n\n# Target Health\r\n\n#\r\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# \r\n\n# Deployment\r\n\n# \r\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Executable\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "source/examples/cubescape-qt/CMakeLists.txt" : {
      "ObjectId" : "01e6509d941d78dda790b8eb00c88c3ea419546c",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \r\n\n# External dependencies\r\n\n# \r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable automoc\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ENABLE CMP0020: Automatically link Qt executables to qtmain target on Windows.\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# \r\n\n# Library name and options\r\n\n# \r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target name\r\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Exit here if required dependencies are not met\r\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \r\n\n# Sources\r\n\n# \r\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \r\n\n# Create executable\r\n\n# \r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Build executable\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Create namespaced alias\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \r\n\n# Project options\r\n\n# \r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \r\n\n# Include directories\r\n\n# \r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# for UIC generated headers\r\n",
        "Line" : 97,
        "CharPositionInLine" : 32
      },
      "13" : {
        "Text" : "# \r\n\n# Libraries\r\n\n# \r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# \r\n\n# Compile definitions\r\n\n# \r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# \r\n\n# Compile options\r\n\n# \r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# \r\n\n# Linker options\r\n\n# \r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\r\n\n# Target Health\r\n\n#\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# \r\n\n# Deployment\r\n\n# \r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Executable\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "source/examples/cubescape/CMakeLists.txt" : {
      "ObjectId" : "86aec49cb5fd1d622891bd2dce15dce6d5dd4601",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \r\n\n# External dependencies\r\n\n# \r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \r\n\n# Executable name and options\r\n\n# \r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \r\n\n# Sources\r\n\n# \r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \r\n\n# Create executable\r\n\n# \r\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build executable\r\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create namespaced alias\r\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \r\n\n# Project options\r\n\n# \r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \r\n\n# Include directories\r\n\n# \r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \r\n\n# Libraries\r\n\n# \r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \r\n\n# Compile definitions\r\n\n# \r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \r\n\n# Compile options\r\n\n# \r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \r\n\n# Linker options\r\n\n# \r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\r\n\n# Target Health\r\n\n#\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# \r\n\n# Deployment\r\n\n# \r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Executable\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "source/glbinding-aux/CMakeLists.txt" : {
      "ObjectId" : "61cc1661f36560be2b710aa7b4f10d09f2e6eb09",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find_package(OpenGL REQUIRED)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \n\n# Library name and options\n\n# \n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Target name\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set API export file and macro\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# KHR binding\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# add featured headers\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# KHR binding\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Group source files\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \n\n# Create library\n\n# \n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# since we use stl and stl is intended to use exceptions, exceptions should not be disabled\n\n#if (\"${CMAKE_CXX_COMPILER_ID}\" MATCHES \"MSVC\")\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# workaround for removing default flags \n\n# string(REPLACE \"/EHsc\" \"\" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS}) \n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#endif ()\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Build library\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Export library for downstream projects\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Create API export header\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Create feature detection header\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#\n\n# Target Health\n\n#\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Library\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Header files\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Generated header files\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# CMake config\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "source/glbinding/CMakeLists.txt" : {
      "ObjectId" : "65ec4acba99d60168f2b22ec18f388d5354b15a2",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find_package(OpenGL REQUIRED)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \n\n# Library name and options\n\n# \n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Target name\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set API export file and macro\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# KHR binding\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# add featured headers\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# KHR binding\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# use splitted function and binding sources on windows compilers (e.g., mingw, msvc) and clang\n\n# also use them for GCC for reduced project setup complexity\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# on msvc use private (non-api) per file precompiled headers on those grouped sources\n",
        "Line" : 136,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Group source files\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Create library\n\n# \n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# since we use stl and stl is intended to use exceptions, exceptions should not be disabled\n\n#if (\"${CMAKE_CXX_COMPILER_ID}\" MATCHES \"MSVC\")\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# workaround for removing default flags \n\n# string(REPLACE \"/EHsc\" \"\" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS}) \n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#endif ()\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Build library\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Export library for downstream projects\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Create API export header\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Create feature detection header\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# since we use stl and stl is intended to use exceptions, exceptions should not be disabled\n\n# furthermore, this flag is not officially supported\n\n#$<$<CXX_COMPILER_ID:MSVC>:_HAS_EXCEPTIONS=0> \n",
        "Line" : 264,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#\n\n# Precompiled Header Configuration\n\n#\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# on msvc use private (non-api) per file precompiled headers on those grouped sources\n",
        "Line" : 310,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# set_source_files_properties(${source_path}/gl/functions_pch.cpp PROPERTIES COMPILE_FLAGS /Yc\"functions_pch.h\")\n",
        "Line" : 313,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "#\n\n# Target Health\n\n#\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Library\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Header files\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Generated header files\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# CMake config\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "source/tests/CMakeLists.txt" : {
      "ObjectId" : "743fe94b31d84aff70e9706e575833b016508398",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Configure test project and environment\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Meta information about the project\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Declare project\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set policies\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ENABLE  CMP0054: Only interpret if() arguments as variables or keywords when unquoted.\n\n# ENABLE  CMP0042: MACOSX_RPATH is enabled by default.\n\n# ENABLE  CMP0063: Honor visibility properties for all target types.\n\n# DISABLE CMP0037: Target names should not be reserved and should match a validity pattern.\n",
        "Line" : 15,
        "CharPositionInLine" : 24
      },
      "5" : {
        "Text" : "# Compiler settings and options\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Function: Build test and add command to execute it via target 'test'\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build gmock\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create interface library to link against gmock\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Target 'test'\n\n# \n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Tests\n\n# \n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "source/tests/glbinding-test/CMakeLists.txt" : {
      "ObjectId" : "847aeafea2e67a77f6188e7c823334686d09eb73",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Executable name and options\n\n# \n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# regession tests\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# \n\n# Create executable\n\n# \n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build executable\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "source/tests/googletest/CMakeLists.txt" : {
      "ObjectId" : "f8a97faaeb8a843e76b3664d73fa0f5d91345143",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Note that googlemock target already builds googletest\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/tests/googletest/googlemock/CMakeLists.txt" : {
      "ObjectId" : "449225ad0cd7452efc783517d463aed70a72d80b",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Mock.\n\n#\n\n# To run the tests for Google Mock itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A directory to find Google Test sources.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Google Test also calls hermetic setup functions from add_subdirectory,\n\n# although its changes will not affect things at the current scope.\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gmock_SOURCE_DIR} and to the root binary directory as\n\n# ${gmock_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Instructs CMake to process Google Test's CMakeLists.txt and add its\n\n# targets to the current scope.  We are placing Google Test's binary\n\n# directory in a subdirectory of our own as VC compilation may break\n\n# if they are the same (the default).\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Although Google Test's CMakeLists.txt calls this function, the\n\n# changes there don't affect the current scope.  Therefore we have to\n\n# call it again here.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# from ${gtest_dir}/cmake/internal_utils.cmake\n",
        "Line" : 62,
        "CharPositionInLine" : 30
      },
      "10" : {
        "Text" : "# Adds Google Mock's and Google Test's header directories to the search path.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This directory is needed to build directly from Google\n\n# Test sources.\n",
        "Line" : 68,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n\n# VS 2015     14           1900            std::tuple\n\n# VS 2017     15           >= 1910         std::tuple\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gmock & gmock_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Google Mock libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that Google Mock can be compiled by\n\n# a user aggressive about warnings.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# If the CMake version supports it, attach header directory information\n\n# to the targets for when we are part of a parent build (ie being pulled\n\n# in via add_subdirectory() rather than being a standalone build).\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########################################################################\n\n#\n\n# Install rules\n\n# if(INSTALL_GMOCK)\n\n#   install(TARGETS gmock gmock_main\n\n#     RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}\n\n#     LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}\n\n#     ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})\n\n#   install(DIRECTORY ${gmock_SOURCE_DIR}/include/gmock\n\n#     DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#   # configure and install pkgconfig files\n\n#   configure_file(\n\n#     cmake/gmock.pc.in\n\n#     \"${CMAKE_BINARY_DIR}/gmock.pc\"\n\n#     @ONLY)\n\n#   configure_file(\n\n#     cmake/gmock_main.pc.in\n\n#     \"${CMAKE_BINARY_DIR}/gmock_main.pc\"\n\n#     @ONLY)\n\n#   install(FILES \"${CMAKE_BINARY_DIR}/gmock.pc\" \"${CMAKE_BINARY_DIR}/gmock_main.pc\"\n\n#     DESTINATION \"${CMAKE_INSTALL_LIBDIR}/pkgconfig\")\n\n# endif()\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "########################################################################\n\n#\n\n# Google Mock's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Mock itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gmock_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgmock_build_tests=ON flag when running cmake.\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# gmock_all_test is commented to save time building and running tests.\n\n# Uncomment if necessary.\n\n# cxx_test(gmock_all_test gmock_main)\n",
        "Line" : 179,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 183,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 192,
        "CharPositionInLine" : 43
      },
      "24" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Tests that a binary can be built with Google Mock as a shared library.  On\n\n# some system configurations, it may not possible to run the binary without\n\n# knowing more details about the system configurations. We do not try to run\n\n# this binary. To get a more robust shared library coverage, configure with\n\n# -DBUILD_SHARED_LIBS=ON.\n",
        "Line" : 212,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 223,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 27
    },
    "source/tests/googletest/googlemock/Makefile.am" : {
      "ObjectId" : "9adbc5163dd7191a14a887a384fb5d6d2956b44d",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We may need to build our internally packaged gtest. If so, it will be\n\n# included in the 'subdirs' variable.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is generated by the configure script, so clean it for distribution.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build rules for tests. Automake's naming for some of these variables isn't\n\n# terribly obvious, so this is a brief reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This exercises all major components of Google Mock.  It also\n\n# verifies that libgmock works.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This tests using Google Mock in multiple translation units.  It also\n\n# verifies that libgmock_main and libgmock work.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Tests that fused gmock files compile and work.\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Google Mock source files that we don't compile directly.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C++ tests that we don't compile using autotools.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Python tests, which we don't run using autotools.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Nonstandard package files for distribution.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Pump scripts for generating Google Mock headers.\n\n# TODO(chandlerc@google.com): automate the generation of *.h from *.h.pump.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Script for fusing Google Mock and Google Test source files.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# The Google Mock Generator tool from the cppclean project.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Script for diagnosing compiler errors in programs that use Google\n\n# Mock.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# CMake scripts.\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Microsoft Visual Studio 2005 projects.\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Microsoft Visual Studio 2010 projects.\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# gmock_test.cc does not really depend on files generated by the\n\n# fused-gmock-internal rule.  However, gmock_test.o does, and it is\n\n# important to include test/gmock_test.cc as part of this rule in order to\n\n# prevent compiling gmock_test.o until all dependent files have been\n\n# generated.\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# TODO(vladl@google.com): Find a way to add Google Tests's sources here.\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Mock can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "source/tests/googletest/googlemock/make/Makefile" : {
      "ObjectId" : "7c13e05fa961dd3a37ee05def12de08ce0e86a88",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building both Google Mock and Google Test and\n\n# using them in user tests.  This file is self-contained, so you don't\n\n# need to use the Makefile in Google Test's source tree.  Please tweak\n\n# it to suit your environment and project.  You may want to move it to\n\n# your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GMOCK_HEADERS and GTEST_HEADERS, which you can use\n\n# in your own targets but shouldn't modify.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file, or if you want to use\n\n# a copy of Google Test at a different location.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Points to the root of Google Mock, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test and Google Mock's header directories as system\n\n# directories, such that the compiler doesn't generate warnings in\n\n# these headers.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# All Google Mock headers. Note that all Google Test headers are\n\n# included here too, as they are #included by Google Mock headers.\n\n# Usually you shouldn't change this definition.\t\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Builds gmock.a and gmock_main.a.  These libraries contain both\n\n# Google Mock and Google Test.  A test should link with either gmock.a\n\n# or gmock_main.a, depending on whether it defines its own main()\n\n# function.  It's fine if your test only uses features from Google\n\n# Test (and not Google Mock).\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# For simplicity and to avoid depending on implementation details of\n\n# Google Mock and Google Test, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Mock and\n\n# Google Test compile fast and for ordinary users their source rarely\n\n# changes.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Builds a sample test.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "source/tests/googletest/googletest/CMakeLists.txt" : {
      "ObjectId" : "9ef4048afe8418220da03a12c8d5016d3663277a",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Visibility\n",
        "Line" : 58,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 74,
        "CharPositionInLine" : 30
      },
      "9" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n\n# VS 2015     14           1900            std::tuple\n\n# VS 2017     15           >= 1910         std::tuple\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If the CMake version supports it, attach header directory information\n\n# to the targets for when we are part of a parent build (ie being pulled\n\n# in via add_subdirectory() rather than being a standalone build).\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################################\n\n#\n\n# Install rules\n\n# if(INSTALL_GTEST)\n\n#   install(TARGETS gtest gtest_main\n\n#     RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}\n\n#     ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}\n\n#     LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})\n\n#   install(DIRECTORY ${gtest_SOURCE_DIR}/include/gtest\n\n#     DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#   # configure and install pkgconfig files\n\n#   configure_file(\n\n#     cmake/gtest.pc.in\n\n#     \"${CMAKE_BINARY_DIR}/gtest.pc\"\n\n#     @ONLY)\n\n#   configure_file(\n\n#     cmake/gtest_main.pc.in\n\n#     \"${CMAKE_BINARY_DIR}/gtest_main.pc\"\n\n#     @ONLY)\n\n#   install(FILES \"${CMAKE_BINARY_DIR}/gtest.pc\" \"${CMAKE_BINARY_DIR}/gtest_main.pc\"\n\n#     DESTINATION \"${CMAKE_INSTALL_LIBDIR}/pkgconfig\")\n\n# endif()\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 212,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 241,
        "CharPositionInLine" : 43
      },
      "23" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 242,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Visual Studio .NET 2003 does not support STL with exceptions disabled.\n",
        "Line" : 262,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# 1310 is Visual Studio .NET 2003\n",
        "Line" : 263,
        "CharPositionInLine" : 46
      },
      "27" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 299,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 28
    },
    "source/tests/googletest/googletest/Makefile.am" : {
      "ObjectId" : "dbc004de6008f90fba9d726316ef504247822714",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Build rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "source/tests/googletest/googletest/cmake/internal_utils.cmake" : {
      "ObjectId" : "c54bc94fe298fe16d4513315f19ed82beacaa6ff",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Note: pthreads on MinGW is not supported, even if available\n\n# instead, we use windows threading primitives\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# 1400 is Visual Studio 2005\n",
        "Line" : 66,
        "CharPositionInLine" : 33
      },
      "10" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 67,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 70,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 72,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# 1500 is Visual Studio 2008\n",
        "Line" : 76,
        "CharPositionInLine" : 33
      },
      "14" : {
        "Text" : "# Conditional expression is constant.\n\n# When compiling with /W4, we get several instances of C4127\n\n# (Conditional expression is constant). In our code, we disable that\n\n# warning on a case-by-case basis. However, on Visual Studio 2005,\n\n# the warning fires on std::list. Therefore on that compiler and earlier,\n\n# we disable the warning project-wide.\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 85,
        "CharPositionInLine" : 39
      },
      "16" : {
        "Text" : "# Suppress \"unreachable code\" warning on VS 2012 and later.\n\n# http://stackoverflow.com/questions/3232669 explains the issue.\n",
        "Line" : 86,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# The pthreads library is available and allowed?\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 186,
        "CharPositionInLine" : 48
      },
      "30" : {
        "Text" : "# BigObj required for tests.\n",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Multi-configuration build generators as for Visual Studio save\n\n# output in a subdirectory of CMAKE_CURRENT_BINARY_DIR (Debug,\n\n# Release etc.), so we have to provide it here.\n",
        "Line" : 247,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# Single-configuration build generators like Makefile generators\n\n# don't have subdirs below CMAKE_CURRENT_BINARY_DIR.\n",
        "Line" : 255,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# ${CMAKE_CURRENT_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 263,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 40
    },
    "source/tests/googletest/googletest/make/Makefile" : {
      "ObjectId" : "9ac74493ba55246597e90b898fae847ae358eab5",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building Google Test and using it in user\n\n# tests.  Please tweak it to suit your environment and project.  You\n\n# may want to move it to your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GTEST_HEADERS, which you can use in your own targets\n\n# but shouldn't modify.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test's header directory as a system directory, such that\n\n# the compiler doesn't generate warnings in Google Test headers.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Builds gtest.a and gtest_main.a.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For simplicity and to avoid depending on Google Test's\n\n# implementation details, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Test\n\n# compiles fast and for ordinary users its source rarely changes.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Builds a sample test.  A test should link with either gtest.a or\n\n# gtest_main.a, depending on whether it defines its own main()\n\n# function.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "source/tests/googletest/googletest/scripts/test/Makefile" : {
      "ObjectId" : "cdff584637b7a6e9df1fa43ce8f588c43815e561",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A Makefile for fusing Google Test and building a sample test against it.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make check  - makes everything and runs the built sample test.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Points to the root of fused Google Test, relative to where this file is.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paths to the fused gtest files.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find the sample test.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find gtest_main.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# We have no idea here whether pthreads is available in the system, so\n\n# disable its use.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "source/tools/CMakeLists.txt" : {
      "ObjectId" : "649fd42f426e7f63e11d2ce58b23e765678e21bb",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tools\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/tools/glcontexts/CMakeLists.txt" : {
      "ObjectId" : "ed214f830933e89d3f0e0895692b208a6597a0db",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Executable name and options\n\n# \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n\n# Create executable\n\n# \n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build executable\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# Target Health\n\n#\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Executable\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "source/tools/glfunctions/CMakeLists.txt" : {
      "ObjectId" : "ae9b8a0f0edbb92f552da2e15f6caaad20b40f66",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Executable name and options\n\n# \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n\n# Create executable\n\n# \n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build executable\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# Target Health\n\n#\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Executable\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "source/tools/glinfo/CMakeLists.txt" : {
      "ObjectId" : "9b364e8d18b0734f1bf253188ed684514252f4f9",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Executable name and options\n\n# \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n\n# Create executable\n\n# \n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build executable\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# Target Health\n\n#\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Executable\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "source/tools/glisdeprecated/CMakeLists.txt" : {
      "ObjectId" : "97cd3d2afbd723d1f0daedf932f8f027faa73372",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Executable name and options\n\n# \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n\n# Create executable\n\n# \n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build executable\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# Target Health\n\n#\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Executable\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "source/tools/glmeta/CMakeLists.txt" : {
      "ObjectId" : "4ea0e64451513a61becaf7178e405e4e8bca7198",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Executable name and options\n\n# \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \n\n# Create executable\n\n# \n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build executable\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# Target Health\n\n#\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Executable\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "source/tools/glqueries/CMakeLists.txt" : {
      "ObjectId" : "42d3f177a98f69f247329dc411b0247e9a4b89a4",
      "LastModified" : "2019-02-08T10:27:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# External dependencies\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Executable name and options\n\n# \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target name\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exit here if required dependencies are not met\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \n\n# Sources\n\n# \n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n\n# Create executable\n\n# \n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build executable\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create namespaced alias\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Project options\n\n# \n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \n\n# Include directories\n\n# \n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# Libraries\n\n# \n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \n\n# Compile definitions\n\n# \n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# Compile options\n\n# \n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# Linker options\n\n# \n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# Target Health\n\n#\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# \n\n# Deployment\n\n# \n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Executable\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    }
  },
  "FileTypes" : {
    "CMAKE" : 43,
    "MAKEFILE" : 3,
    "AUTOMAKE" : 2
  },
  "ElapsedTime" : 1388
}