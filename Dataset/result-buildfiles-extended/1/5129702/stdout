{
  "Repository" : "5129702",
  "Revision" : "HEAD",
  "ObjectId" : "ddc313a1035bda629064d51357510511ffebdc96",
  "CommitTime" : "2019-03-11T13:13:53Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "e7a6eef7ce57e55ac5cc178537c18f19ba21b2d8",
      "LastModified" : "2019-03-11T13:13:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#don't need SDL2\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#hardcoded path to SDL2 on windows\n",
        "Line" : 17,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#for minizip.c\n",
        "Line" : 73,
        "CharPositionInLine" : 52
      },
      "CommentCount" : 3
    },
    "cmake/FindSDL2.cmake" : {
      "ObjectId" : "737d60ce5aa46fca8f1a9d11db99159cb87fa7be",
      "LastModified" : "2016-01-11T19:44:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 74,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 75,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 76,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For SDL2main\n",
        "Line" : 128,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 135,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 145,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# For MinGW library\n",
        "Line" : 152,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 157,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 159,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "examples/Demo/proj.cmake/CMakeLists.txt" : {
      "ObjectId" : "2754ac2a5a3fea5bcea7d89bb34b09e16077cee2",
      "LastModified" : "2018-09-26T19:53:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#disable console mode for VC++\n",
        "Line" : 16,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 1
    },
    "examples/DemoBox2D/proj.cmake/CMakeLists.txt" : {
      "ObjectId" : "e3319f7d50d139ffc457e913f7bea37a1dd872b1",
      "LastModified" : "2018-09-26T19:53:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#disable console mode for VC++\n",
        "Line" : 24,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 1
    },
    "examples/Game/part1/proj.cmake/CMakeLists.txt" : {
      "ObjectId" : "35c756220c698615d6583500b95a2671a51c7cbb",
      "LastModified" : "2018-09-26T19:53:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#disable console mode for VC++\n",
        "Line" : 16,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 1
    },
    "examples/Game/part2/proj.cmake/CMakeLists.txt" : {
      "ObjectId" : "659f827e0210655f174a5448f4d29821c3a983b0",
      "LastModified" : "2018-09-26T19:53:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#disable console mode for VC++\n",
        "Line" : 16,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 1
    },
    "examples/Game/part3/proj.cmake/CMakeLists.txt" : {
      "ObjectId" : "b0228f1c6542833a713540c73e1225aff46342d9",
      "LastModified" : "2018-09-26T19:53:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#disable console mode for VC++\n",
        "Line" : 16,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 1
    },
    "examples/Game/part4/proj.cmake/CMakeLists.txt" : {
      "ObjectId" : "696ea574d903617a34d7d5cd7be5f59d3a1cb31e",
      "LastModified" : "2018-09-26T19:53:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#disable console mode for VC++\n",
        "Line" : 16,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 1
    },
    "examples/Game/part5/proj.cmake/CMakeLists.txt" : {
      "ObjectId" : "013e53fd54639e3ac03bbaf5b8d741179c5658ca",
      "LastModified" : "2018-09-26T19:53:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#disable console mode for VC++\n",
        "Line" : 16,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 1
    },
    "examples/HelloWorld/proj.cmake/CMakeLists.txt" : {
      "ObjectId" : "272a15efef0cc88b36f012e060d6ac05fd89d606",
      "LastModified" : "2018-09-26T19:53:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#disable console mode for VC++\n",
        "Line" : 16,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 1
    },
    "examples/Match3/proj.cmake/CMakeLists.txt" : {
      "ObjectId" : "25abfd785982d2b93ca337254c7310b301f781ef",
      "LastModified" : "2018-09-26T19:53:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#disable console mode for VC++\n",
        "Line" : 16,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 1
    },
    "oxygine/SDL/android/extension/build.xml" : {
      "ObjectId" : "cf44ed13db427722efcbdcad918e55ba9fbb816d",
      "LastModified" : "2016-01-11T19:44:44Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "oxygine/SDL/android/lib/build.xml" : {
      "ObjectId" : "69da7c3c3791088077eb521209e69b0f9dc974fa",
      "LastModified" : "2016-01-11T19:44:44Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "oxygine/SDL/qt/oxygine-framework/oxygine-framework.pro" : {
      "ObjectId" : "d9efe0a27b93b2444dad15ca723632c8ab072058",
      "LastModified" : "2016-09-20T05:56:58Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-03-20T19:06:13\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/templates/proj.cmake/CMakeLists.txt" : {
      "ObjectId" : "6cc7361aadaeb3f9013f7f06f4e2cf7076a32340",
      "LastModified" : "2018-09-26T19:53:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#disable console mode for VC++\n",
        "Line" : 16,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 12,
    "QMAKE" : 1,
    "ANT" : 2
  },
  "ElapsedTime" : 3753
}