{
  "Repository" : "12208029",
  "Revision" : "HEAD",
  "ObjectId" : "44c052bdb69aaf26d7010074547356c80e55421a",
  "CommitTime" : "2018-12-31T16:30:07Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "d97ee073ca22501ea825013d3716433adfa9a031",
      "LastModified" : "2018-11-10T08:21:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Options\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GCC-7: 128-bit atomics support is implemented via libatomic on amd64\n\n#        see https://gcc.gnu.org/ml/gcc/2017-01/msg00167.html\n\n# Maybe, it will be changed in future\n",
        "Line" : 119,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Component names for separate distribution in rpms, debs etc.\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### FOR PACKAGING in RPM, TGZ, DEB, NSYS...###############################################################################\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TGZ specific\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# RPM specific\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# DEB specific\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# NSYS specific\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Components grouping for Mac OS X and Windows installers\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "build/cmake/TargetArch.cmake" : {
      "ObjectId" : "026eace0767245b0b11775c2c6911114f281a670",
      "LastModified" : "2017-03-27T21:28:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Source: https://github.com/axr/solar-cmake\n\n# Based on the Qt 5 processor detection code, so should be very accurate\n\n# https://qt.gitorious.org/qt/qtbase/blobs/master/src/corelib/global/qprocessordetection.h\n\n# Currently handles arm (v5, v6, v7), x86 (32/64), ia64, and ppc (32/64)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Regarding POWER/PowerPC, just as is noted in the Qt source,\n\n# \"There are many more known variants/revisions that we do not handle/detect.\"\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set ppc_support to TRUE before including this file or ppc and ppc64\n\n# will be treated as invalid architectures since they are no longer supported by Apple\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On OS X we use CMAKE_OSX_ARCHITECTURES *if* it was set\n\n# First let's normalize the order of the values\n",
        "Line" : 62,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Note that it's not possible to compile PowerPC applications if you are using\n\n# the OS X SDK version 10.6 or later - you'll need 10.4/10.5 for that, so we\n\n# disable it by default\n\n# See this page for more information:\n\n# http://stackoverflow.com/questions/5333490/how-can-we-restore-ppc-ppc64-as-well-as-full-10-4-10-5-sdk-support-to-xcode-4\n",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Architecture defaults to i386 or ppc on OS X 10.5 and earlier, depending on the CPU type detected at runtime.\n\n# On OS X 10.6+ the default is x86_64 if the CPU supports it, i386 otherwise.\n",
        "Line" : 71,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Now add all the architectures in our normalized order\n",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Detect the architecture in a rather creative way...\n\n# This compiles a small C program which is a series of ifdefs that selects a\n\n# particular #error preprocessor directive whose message string contains the\n\n# target architecture. The program will always fail to compile (both because\n\n# file is not a valid C program, and obviously because of the presence of the\n\n# #error preprocessor directives... but by exploiting the preprocessor in this\n\n# way, we can detect the correct target architecture even when cross-compiling,\n\n# since the program itself never needs to be run (only the compiler/preprocessor)\n",
        "Line" : 109,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Parse the architecture name from the compiler output\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Get rid of the value marker leaving just the architecture name\n",
        "Line" : 129,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# If we are compiling with an unknown architecture this variable should\n\n# already be set to \"unknown\" but in the case that it's empty (i.e. due\n\n# to a typo in the code), then set it to unknown\n",
        "Line" : 132,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 11
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "10834088c5f4786a75aac4e357897a61fb094976",
      "LastModified" : "2018-01-20T17:08:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   gcc 4.8 - 6: disable noise -Wunused-local-typedefs\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Check if gtest INSTANTIATE_TEST_CASE_P macro supports 4th arg\n\n# The optional last argument to INSTANTIATE_TEST_CASE_P allows the user\n\n# to specify a function or functor that generates custom test name suffixes\n\n# based on the test parameters. The function should accept one argument of\n\n# type testing::TestParamInfo<class ParamType>, and return std::string.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if there is byteswap.h (needed for cityhash)\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/stress/CMakeLists.txt" : {
      "ObjectId" : "f269711a8ea84a707fb3082afd688d325f2e6da1",
      "LastModified" : "2017-08-19T08:32:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/stress/freelist/CMakeLists.txt" : {
      "ObjectId" : "525d52083b2372b8a9b3e51ab7aa9fafb3bfa56c",
      "LastModified" : "2017-08-19T08:32:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/stress/map/CMakeLists.txt" : {
      "ObjectId" : "90f8011167b3b3fb10ef96f1443903c7a43cd621",
      "LastModified" : "2017-03-27T21:28:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/stress/map/del3/CMakeLists.txt" : {
      "ObjectId" : "cae3c9fdff462fca300c8d97ac3958c688a0b776",
      "LastModified" : "2017-08-19T08:32:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/stress/map/delodd/CMakeLists.txt" : {
      "ObjectId" : "ca0859f8806d7e48411f045f4fab0a74eeed4d16",
      "LastModified" : "2017-08-19T08:32:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/stress/map/find_string/CMakeLists.txt" : {
      "ObjectId" : "9b18ed56fbb163d91691af2c094238bc986cf03c",
      "LastModified" : "2017-08-19T08:32:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/stress/map/insdel_func/CMakeLists.txt" : {
      "ObjectId" : "66021097dfcbbf616346356e078210df8c532b93",
      "LastModified" : "2017-08-19T08:32:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/stress/map/insdel_item_int/CMakeLists.txt" : {
      "ObjectId" : "e1c1a2036e2ae80d6220da80aba024352c442b56",
      "LastModified" : "2017-08-19T08:32:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/stress/map/insdel_string/CMakeLists.txt" : {
      "ObjectId" : "b4b38eebe3f0ab369164668af9cd53b70bffb0ba",
      "LastModified" : "2017-08-19T08:32:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/stress/map/insdelfind/CMakeLists.txt" : {
      "ObjectId" : "31683852091c3c7af60cd729b53bd2dab8374ea3",
      "LastModified" : "2017-08-19T08:32:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/stress/map/iter_erase/CMakeLists.txt" : {
      "ObjectId" : "476db2177c19cba3d8c868a1f1fe13b61542680a",
      "LastModified" : "2017-08-19T08:32:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/stress/map/minmax/CMakeLists.txt" : {
      "ObjectId" : "174195d5bf73da059c0fd35b605bdd9af7955119",
      "LastModified" : "2017-08-19T08:32:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/stress/pqueue/CMakeLists.txt" : {
      "ObjectId" : "0c2c0e5fc0017f72265fa9be55998ab1760dd94a",
      "LastModified" : "2017-08-19T08:32:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/stress/queue/CMakeLists.txt" : {
      "ObjectId" : "a074aceed2322a951bd53f072e2c6676744dd5d8",
      "LastModified" : "2017-08-19T08:32:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# stress-queue-pop\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# stress-queue-push\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# stress-queue-push-pop\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# stress-queue-random\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# stress-queue-bounded\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# stress-spsc-queue\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# stress-queue\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "test/stress/set/CMakeLists.txt" : {
      "ObjectId" : "e8a618e9708bd0e5184bb44f6753064328af1d40",
      "LastModified" : "2017-03-27T21:28:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/stress/set/del3/CMakeLists.txt" : {
      "ObjectId" : "40aec3c0de5eaf0b82b8f00bef0f355cbd924bd5",
      "LastModified" : "2017-08-19T08:32:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/stress/set/delodd/CMakeLists.txt" : {
      "ObjectId" : "d16782a2312d3d39e216bc6f0496244eae9cea4c",
      "LastModified" : "2017-08-19T08:32:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/stress/set/insdel_find/CMakeLists.txt" : {
      "ObjectId" : "2d0ceb77ff4af306d175b73074326fdf68721986",
      "LastModified" : "2017-08-19T08:32:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/stress/set/insdel_func/CMakeLists.txt" : {
      "ObjectId" : "43f4d3a02ef4a22a578aee50899cd4b48af31184",
      "LastModified" : "2017-08-19T08:32:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/stress/set/insdel_string/CMakeLists.txt" : {
      "ObjectId" : "57b0d56a26c578d155fb5955915a2eed44fc9d28",
      "LastModified" : "2017-08-19T08:32:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/stress/set/iter_erase/CMakeLists.txt" : {
      "ObjectId" : "4a474d7b064df3f912f333d6b445c3c8ef0449a9",
      "LastModified" : "2017-08-19T08:32:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/stress/set/iteration/CMakeLists.txt" : {
      "ObjectId" : "be9a2571b5db1ea5d543db14a4b0c61d39cadf76",
      "LastModified" : "2017-08-19T08:32:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/stress/stack/CMakeLists.txt" : {
      "ObjectId" : "0bf3c1c14fe835b826194dd0fbd6a637a28e0cf6",
      "LastModified" : "2017-08-19T08:32:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/unit/CMakeLists.txt" : {
      "ObjectId" : "f28d4921ec1edb4866cc53ac10e48df856f3937e",
      "LastModified" : "2017-03-27T21:28:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/unit/deque/CMakeLists.txt" : {
      "ObjectId" : "cf8fb8076aa66b3212a7d791352385a846c8da6f",
      "LastModified" : "2017-03-27T21:28:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/unit/intrusive-list/CMakeLists.txt" : {
      "ObjectId" : "3e588164b26443e6dea1f24cc38469de2586f73a",
      "LastModified" : "2017-03-27T21:28:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# intrusive::MichaelList\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# intrusive::LazyList\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# intrusive::IterableList\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/unit/intrusive-set/CMakeLists.txt" : {
      "ObjectId" : "fa62df2bec685bcd0ef92c6634961b21069bf525",
      "LastModified" : "2017-10-27T10:30:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# intrusive::FeldmanHashSet\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# intrusive::MichaelHashSet<MichaelList>\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# intrusive::MichaelHashSet<LazyList>\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# intrusive::MichaelHashSet<IterableList>\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# intrusive::SkipListSet\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# intrusive::SplitListSet<MichaelList>\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# intrusive::SplitListSet<LazyList>\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# intrusive::SplitListSet<IterableList>\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "test/unit/list/CMakeLists.txt" : {
      "ObjectId" : "643abb3d551f10ef1507b7f99fac1335642c99ab",
      "LastModified" : "2017-03-27T21:28:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# IterableList\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# LazyList\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MichaelList\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/unit/map/CMakeLists.txt" : {
      "ObjectId" : "35d5d421832605c3e3ce698892f3a22a34929e0b",
      "LastModified" : "2017-10-27T10:30:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FeldmanHashMap unit test\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MichaelHashMap<MichaelList> unit test\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MichaelHashMap<IterableList> unit test\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MichaelHashMap<LazyList> unit test\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# SkipListMap unit test\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# SplitListMap<MichaelList> unit test\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# SplitListMap<IterableList> unit test\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# SplitListMap<LazyList> unit test\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "test/unit/misc/CMakeLists.txt" : {
      "ObjectId" : "b027d967eabca6f64d0d62d086a81c59982700e6",
      "LastModified" : "2018-04-01T07:43:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/unit/pqueue/CMakeLists.txt" : {
      "ObjectId" : "95a22191b23cfa5d8bb90a80093e271469d04ec6",
      "LastModified" : "2017-03-27T21:28:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/unit/queue/CMakeLists.txt" : {
      "ObjectId" : "aea3e81f434c207a928f21847c76558b349202b7",
      "LastModified" : "2018-04-01T07:43:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/unit/set/CMakeLists.txt" : {
      "ObjectId" : "0487d66170c5bb98e46a3891d2dda77b66ae0273",
      "LastModified" : "2018-04-01T07:43:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FeldmanHashSet\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MichaelSet<MichaelList>\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MichaelSet<IterableList>\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MichaelSet<LazyList>\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# SkipListSet\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# SplitListSet<MichaelList>\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# SplitListSet<LazyList>\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# SplitListSet<IterableList>\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "test/unit/stack/CMakeLists.txt" : {
      "ObjectId" : "2a35488cc02cca056d0016ea18039c23e21ec142",
      "LastModified" : "2017-03-27T21:28:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/unit/striped-map/CMakeLists.txt" : {
      "ObjectId" : "98a1d5f17629a7377ab2e577d20b91e2fc49e65a",
      "LastModified" : "2017-03-27T21:28:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/unit/striped-set/CMakeLists.txt" : {
      "ObjectId" : "228bab1b496985a8802251069204302c4c50495e",
      "LastModified" : "2017-03-27T21:28:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/unit/tree/CMakeLists.txt" : {
      "ObjectId" : "3f0e473eee0bd8c3c2bb20b59951ba27b53704f4",
      "LastModified" : "2017-03-27T21:28:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 40
  },
  "ElapsedTime" : 4125
}