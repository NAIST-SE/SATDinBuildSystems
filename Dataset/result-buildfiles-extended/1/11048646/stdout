{
  "Repository" : "11048646",
  "Revision" : "HEAD",
  "ObjectId" : "0ba23c93083abc20aee81a6f5f1ce7b4130c5962",
  "CommitTime" : "2018-08-08T08:05:32Z",
  "Files" : {
    "cocos2d/CMakeLists.txt" : {
      "ObjectId" : "a41a53c12de82749f45502f951c2f6b8a2f8a002",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#/****************************************************************************\n\n# Copyright (c) 2013 cocos2d-x.org\n\n# Copyright (c) 2014 martell malone\n\n# Copyright (c) 2015-2017 Chukong Technologies Inc.\n\n#\n\n# http://www.cocos2d-x.org\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n\n# ****************************************************************************/\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It ensures that when Find*.cmake files included from cmake's Modules dir\n\n# include another *.cmake file with relative path, that file will be included\n\n# also from cmake's Modules dir, to not clash with per-project files.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use new behaviour with cmake >= 3.1:\n\n# Only interpret if() arguments as variables or keywords when unquoted.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The version number\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# define some variables\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# architecture\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# CMAKE_BUILD_TYPE has precedence over DEBUG_MODE\n\n# Still supporting DEBUG_MODE for backwards compatibility\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# SelectModule() is a macro to select building modules\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# set compiler options\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Adds cocos2d-x external folder to the list of valid include/library paths when cross-compiling and using prebuilds\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# build cpp-empty-test\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# build cpp-tests\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Scripting\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# build lua tests\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "## JS\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# build js tests\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "cocos2d/README.cmake" : {
      "ObjectId" : "edbe073c196695871c7ba120e60b62199dd2b39c",
      "LastModified" : "2014-12-19T13:20:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/cmake/AndroidNdkGdb.cmake" : {
      "ObjectId" : "76d3869df68f9449b75c559947d279e655f57f87",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014, Pavel Rojtberg\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice,\n\n# this list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n# this list of conditions and the following disclaimer in the documentation\n\n# and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its\n\n# contributors may be used to endorse or promote products derived from this\n\n# software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n# Usage:\n\n# 1. place AndroidNdkGdb.cmake somewhere inside ${CMAKE_MODULE_PATH}\n\n# 2. inside your project add\n\n#\n\n#    include(AndroidNdkGdb)\n\n#    android_ndk_gdb_enable()\n\n#    # for each target\n\n#    add_library(MyLibrary ...)\n\n#    android_ndk_gdb_debuggable(MyLibrary)    \n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add gdbserver and general gdb configuration to project\n\n# also create a mininal NDK skeleton so ndk-gdb finds the paths\n\n#\n\n# the optional parameter defines the path to the android project.\n\n# uses PROJECT_BINARY_DIR by default.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# create custom target that depends on the real target so it gets executed afterwards\n",
        "Line" : 49,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# 1. generate essential Android Makefiles\n",
        "Line" : 61,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# 2. generate gdb.setup\n",
        "Line" : 70,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# 3. copy gdbserver executable\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# register a target for remote debugging\n\n# copies the debug version to NDK_GDB_SOLIB_PATH then strips symbols of original\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# create custom target that depends on the real target so it gets executed afterwards\n",
        "Line" : 86,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# 4. copy lib to obj\n",
        "Line" : 89,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# 5. strip symbols\n",
        "Line" : 92,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 11
    },
    "cocos2d/cmake/AndroidNdkModules.cmake" : {
      "ObjectId" : "ba4232e18c6648fa2be9d2327296b722004c08d9",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014, Pavel Rojtberg\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice,\n\n# this list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n# this list of conditions and the following disclaimer in the documentation\n\n# and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its\n\n# contributors may be used to endorse or promote products derived from this\n\n# software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cocos2d/cmake/Modules/BuildModules.cmake" : {
      "ObjectId" : "3cc876f299d9951359d525baa5b112bff56ed219",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# desktop platforms\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#TODO: implement correct schema for pass cocos2d specific requirements to projects\n",
        "Line" : 8,
        "CharPositionInLine" : 5
      },
      "2" : {
        "Text" : "# because FindOpenAL.cmake set include dir for '#include <al.h>' for portability (not for '#include <AL/al.h>'\n",
        "Line" : 30,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# Freetype required on all platforms\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# WebP required if used\n",
        "Line" : 38,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Chipmunk\n",
        "Line" : 43,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Box2d (not prebuilded, exists as source)\n",
        "Line" : 50,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# actually Box2D in next line is not a library, it is target exported from Box2DConfig.cmake\n",
        "Line" : 58,
        "CharPositionInLine" : 5
      },
      "8" : {
        "Text" : "# Bullet\n",
        "Line" : 66,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Recast (not prebuilded, exists as source)\n",
        "Line" : 74,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Tinyxml2 (not prebuilded, exists as source)\n",
        "Line" : 87,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# libjpeg\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# minizip (we try to migrate to minizip from https://github.com/nmoinvaz/minizip)\n\n# only msys2 currently provides package for this variant, all other\n\n# dists have packages from zlib, thats very old for us.\n\n# moreover our embedded version modified to quick provide\n\n# functionality needed by cocos.\n",
        "Line" : 101,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "#TODO: hack! should be in external/unzip/CMakeLists.txt\n",
        "Line" : 107,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "# double check that we have needed functions\n",
        "Line" : 115,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "# flatbuffers\n",
        "Line" : 129,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# xxhash\n",
        "Line" : 138,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# libcocos2d.a\n",
        "Line" : 147,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 18
    },
    "cocos2d/cmake/Modules/CMakeParseArguments.cmake" : {
      "ObjectId" : "4248176ad66488c41a2c1a6104c3bbb53765747a",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# CMakeParseArguments\n\n# -------------------\n\n#\n\n#\n\n#\n\n# CMAKE_PARSE_ARGUMENTS(<prefix> <options> <one_value_keywords>\n\n# <multi_value_keywords> args...)\n\n#\n\n# CMAKE_PARSE_ARGUMENTS() is intended to be used in macros or functions\n\n# for parsing the arguments given to that macro or function.  It\n\n# processes the arguments and defines a set of variables which hold the\n\n# values of the respective options.\n\n#\n\n# The <options> argument contains all options for the respective macro,\n\n# i.e.  keywords which can be used when calling the macro without any\n\n# value following, like e.g.  the OPTIONAL keyword of the install()\n\n# command.\n\n#\n\n# The <one_value_keywords> argument contains all keywords for this macro\n\n# which are followed by one value, like e.g.  DESTINATION keyword of the\n\n# install() command.\n\n#\n\n# The <multi_value_keywords> argument contains all keywords for this\n\n# macro which can be followed by more than one value, like e.g.  the\n\n# TARGETS or FILES keywords of the install() command.\n\n#\n\n# When done, CMAKE_PARSE_ARGUMENTS() will have defined for each of the\n\n# keywords listed in <options>, <one_value_keywords> and\n\n# <multi_value_keywords> a variable composed of the given <prefix>\n\n# followed by \"_\" and the name of the respective keyword.  These\n\n# variables will then hold the respective value from the argument list.\n\n# For the <options> keywords this will be TRUE or FALSE.\n\n#\n\n# All remaining arguments are collected in a variable\n\n# <prefix>_UNPARSED_ARGUMENTS, this can be checked afterwards to see\n\n# whether your macro was called with unrecognized parameters.\n\n#\n\n# As an example here a my_install() macro, which takes similar arguments\n\n# as the real install() command:\n\n#\n\n# ::\n\n#\n\n#    function(MY_INSTALL)\n\n#      set(options OPTIONAL FAST)\n\n#      set(oneValueArgs DESTINATION RENAME)\n\n#      set(multiValueArgs TARGETS CONFIGURATIONS)\n\n#      cmake_parse_arguments(MY_INSTALL \"${options}\" \"${oneValueArgs}\" \"${multiValueArgs}\" ${ARGN} )\n\n#      ...\n\n#\n\n#\n\n#\n\n# Assume my_install() has been called like this:\n\n#\n\n# ::\n\n#\n\n#    my_install(TARGETS foo bar DESTINATION bin OPTIONAL blub)\n\n#\n\n#\n\n#\n\n# After the cmake_parse_arguments() call the macro will have set the\n\n# following variables:\n\n#\n\n# ::\n\n#\n\n#    MY_INSTALL_OPTIONAL = TRUE\n\n#    MY_INSTALL_FAST = FALSE (this option was not used when calling my_install()\n\n#    MY_INSTALL_DESTINATION = \"bin\"\n\n#    MY_INSTALL_RENAME = \"\" (was not used)\n\n#    MY_INSTALL_TARGETS = \"foo;bar\"\n\n#    MY_INSTALL_CONFIGURATIONS = \"\" (was not used)\n\n#    MY_INSTALL_UNPARSED_ARGUMENTS = \"blub\" (no value expected after \"OPTIONAL\"\n\n#\n\n#\n\n#\n\n# You can then continue and process these variables.\n\n#\n\n# Keywords terminate lists of values, e.g.  if directly after a\n\n# one_value_keyword another recognized keyword follows, this is\n\n# interpreted as the beginning of the new option.  E.g.\n\n# my_install(TARGETS foo DESTINATION OPTIONAL) would result in\n\n# MY_INSTALL_DESTINATION set to \"OPTIONAL\", but MY_INSTALL_DESTINATION\n\n# would be empty and MY_INSTALL_OPTIONAL would be set to TRUE therefor.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first set all result variables to empty/FALSE\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# now iterate over all arguments and fill the result variables\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 122,
        "CharPositionInLine" : 57
      },
      "5" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 123,
        "CharPositionInLine" : 63
      },
      "6" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 124,
        "CharPositionInLine" : 61
      },
      "7" : {
        "Text" : "# propagate the result variables to the caller:\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "cocos2d/cmake/Modules/CocosBuildHelpers.cmake" : {
      "ObjectId" : "9dddfee50f0eea4f94bd5d55e838849bebea7ea3",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cocos_find_package(pkg args...)\n\n# works same as find_package, but do additional care to properly find\n\n# prebuilt libs for cocos\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cocos_use_pkg(pkg) function.\n\n# This function applies standard package variables (after find_package(pkg) call) to current scope\n\n# Recognized variables: <pkg>_INCLUDE_DIRS, <pkg>_LIBRARIES, <pkg>_LIBRARY_DIRS\n\n# Also if BUILD_SHARED_LIBS variable off, it is try to use <pkg>_STATIC_* vars before\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# backward compat with old package-find scripts\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#cmake has some strange defaults, this should help us a lot\n\n#Please use them everywhere\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#WINDOWS \t= \tWindows Desktop\n\n#WINRT \t\t= \tWindows RT\n\n#WP8 \t  \t= \tWindows Phone 8\n\n#ANDROID    =\tAndroid\n\n#IOS\t\t=\tiOS\n\n#MACOSX\t\t=\tMacOS X\n\n#LINUX      =   Linux\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cocos2d/cmake/Modules/CocosUsePrebuiltLibs.cmake" : {
      "ObjectId" : "f5a9ab387d570767e57022134047958b72ac3b47",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CocosUsePrebuiltLibs - sets external libs variables to link with\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# START CONFIG\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# sequence is important\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# order: curl, ssl, crypto\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We use MSVC instead of WINDOWS because it can be mingw that can't use our prebuilt libs\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# END CONFIG\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# auto-prefix is uppercased name\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# find all include paths\n",
        "Line" : 173,
        "CharPositionInLine" : 10
      },
      "8" : {
        "Text" : "#message(STATUS \"${_lib} ${_prefix}_INCLUDE_DIRS: ${${_prefix}_INCLUDE_DIRS}\")\n",
        "Line" : 191,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# find all libs\n",
        "Line" : 205,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 10
    },
    "cocos2d/cmake/Modules/FindCURL.cmake" : {
      "ObjectId" : "e286d78712f4360f64922c9d369857b1077d89b3",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindCURL\n\n# --------\n\n#\n\n# Find curl\n\n#\n\n# Find the native CURL headers and libraries.\n\n#\n\n# ::\n\n#\n\n#   CURL_INCLUDE_DIRS   - where to find curl/curl.h, etc.\n\n#   CURL_LIBRARIES      - List of libraries when using curl.\n\n#   CURL_FOUND          - True if curl found.\n\n#   CURL_VERSION_STRING - the version of curl found (since CMake 2.8.8)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2012 Rolf Eike Beer <eike@sf-mail.de>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Windows MSVC prebuilts:\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Windows older \"Win32 - MSVC\" prebuilts (libcurl.lib, e.g. libcurl-7.15.5-win32-msvc.zip):\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Look for the library (sorted from most current/relevant entry to least).\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Windows MSVC prebuilts:\n",
        "Line" : 54,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Windows older \"Win32 - MSVC\" prebuilts (libcurl.lib, e.g. libcurl-7.15.5-win32-msvc.zip):\n",
        "Line" : 58,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 8
    },
    "cocos2d/cmake/Modules/FindChipmunk.cmake" : {
      "ObjectId" : "6fd591734dcd57fbcaf2251f952558fd10397098",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindChipmunk\n\n# ------------\n\n#\n\n# Locate Chipmunk library\n\n#\n\n# This module defines\n\n#\n\n# ::\n\n#\n\n#   CHIPMUNK_LIBRARIES, the library to link against\n\n#   CHIPMUNK_FOUND, if false, do not try to link to Chipmunk \n\n#   CHIPMUNK_INCLUDE_DIRS, where to find headers.\n\n#   This is the concatenation of the paths:\n\n#   CHIPMUNK_INCLUDE_DIR\n\n#\n\n#=============================================================================\n\n# Copyright 2014-2014 Martell Malone\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 39,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 40,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 41,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# include the math library for Unix\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# For Windows and Mac, don't need to explicitly include the math library\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set CHIPMUNK_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cocos2d/cmake/Modules/FindFMOD.cmake" : {
      "ObjectId" : "f14a9a4d5c19c93283ba78751bf68368948d35d1",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindFMOD\n\n# ------------\n\n#\n\n# Locate FMOD Ex library\n\n#\n\n# This module defines\n\n#\n\n# ::\n\n#\n\n#   FMOD_LIBRARIES, the library to link against\n\n#   FMOD_FOUND, if false, do not try to link to fmodex\n\n#   FMOD_INCLUDE_DIRS, where to find headers.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 24,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 25,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 26,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# Fink\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 39,
        "CharPositionInLine" : 13
      },
      "6" : {
        "Text" : "# Blastwave\n",
        "Line" : 40,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 7
    },
    "cocos2d/cmake/Modules/FindFontconfig.cmake" : {
      "ObjectId" : "19d7f6c53a8b3f0fa7147126aa98254018a9cd08",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindFontconfig\n\n# --------------\n\n#\n\n# Locate Fontconfig library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cocos2d/cmake/Modules/FindFreetype.cmake" : {
      "ObjectId" : "7935a937901eeed8f263548a15dc274b7e41da10",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindFreetype\n\n# ------------\n\n#\n\n# Locate FreeType library\n\n#\n\n# This module defines\n\n#\n\n# ::\n\n#\n\n#   FREETYPE_LIBRARIES, the library to link against\n\n#   FREETYPE_FOUND, if false, do not try to link to FREETYPE\n\n#   FREETYPE_INCLUDE_DIRS, where to find headers.\n\n#   FREETYPE_VERSION_STRING, the version of freetype found (since CMake 2.8.8)\n\n#   This is the concatenation of the paths:\n\n#   FREETYPE_INCLUDE_DIR_ft2build\n\n#   FREETYPE_INCLUDE_DIR_freetype2\n\n#\n\n#\n\n#\n\n# $FREETYPE_DIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$FREETYPE_DIR used in building FREETYPE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Created by Eric Wing.\n\n# Modifications by Alexander Neundorf.\n\n# This file has been renamed to \"FindFreetype.cmake\" instead of the correct\n\n# \"FindFreeType.cmake\" in order to be compatible with the one from KDE4, Alex.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Try find freetype for our arch in external folder\n\n#todo: fix location of freetype includes for linux android on cocos prebuilt repo\n\n#i.e we should not need to include an extra dir of /freetype2\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Try pkg-config first (because it provided deps info)\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Ugh, FreeType seems to use some #include trickery which\n\n# makes this harder than it should be. It looks like they\n\n# put ft2build.h in a common/easier-to-find location which\n\n# then contains a #include to a more specific header in a\n\n# more specific location (#include <freetype/config/ftheader.h>).\n\n# Then from there, they need to set a bunch of #define's\n\n# so you can do something like:\n\n# #include FT_FREETYPE_H\n\n# Unfortunately, using CMake's mechanisms like include_directories()\n\n# wants explicit full paths and this trickery doesn't work too well.\n\n# I'm going to attempt to cut out the middleman and hope\n\n# everything still works.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set the user variables\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set FREETYPE_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cocos2d/cmake/Modules/FindGLFW3.cmake" : {
      "ObjectId" : "e82dd406854648bcf2722daa199ec52a5171bd29",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindGLFW3\n\n# ------------\n\n#\n\n# Locate glfw3 library\n\n#\n\n# This module defines\n\n#\n\n# ::\n\n#\n\n#   GLFW3_LIBRARIES, the library to link against\n\n#   GLFW3_FOUND, if false, do not try to link to FREETYPE\n\n#   GLFW3_INCLUDE_DIRS, where to find headers.\n\n#   This is the concatenation of the paths:\n\n#   GLFW3_INCLUDE_DIR\n\n#\n\n#=============================================================================\n\n# Copyright 2014-2014 Martell Malone\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# glfw has special requirements for linking (from docs: http://www.glfw.org/docs/latest/build.html)\n\n# MINGW or MSVC + static \"glfw3\" -> link: opengl32, gdi32 (plus glu32 if use GLU)\n\n# MINGW or MSVC + dynamic \"glfw3dll\" (but this not true ;) -> -DGLFW_DLL link: no\n\n# UNIX + static -> pkg-config --static --libs\n\n# UNIX + dynamic -> pkg-config --libs\n\n# So... if we find dynamic version, no problems, but if we find static, we need to determine deps\n\n#  but cmake can't simply say to us what kind of library it found. So we try to find static version\n\n#  first, and then if nothing found, we repeat search for dynamic\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Save some global stuff that we change, to revert after work has been done\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# add /usr/local/lib/pkgconfig to pkg-config search path (some linuxes do not do that, but glfw installs to taht prefix by default)\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# now try to find glfw with pkg-config\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# try to find static library\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# also we include glfw3.h header, not GLFW/glfw3.h :(\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# glfw3 is static\n",
        "Line" : 70,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# We also need to add any other LDFLAGS, but with additional fixup for Apple frameworks :(\n",
        "Line" : 74,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# glfw3 is dynamic\n",
        "Line" : 99,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Restore global stuff\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# fallback if pkg-config method not work\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Fink\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 127,
        "CharPositionInLine" : 15
      },
      "14" : {
        "Text" : "# Blastwave\n",
        "Line" : 128,
        "CharPositionInLine" : 13
      },
      "CommentCount" : 15
    },
    "cocos2d/cmake/Modules/FindGTK3.cmake" : {
      "ObjectId" : "11e8429611a4079170f53e898a2ab71d569731af",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GTK3\n\n#\n\n# $Id: FindGTK3.cmake 39970 2011-11-21 15:39:25Z jmayer $\n\n#\n\n# Once done this will define\n\n#\n\n#  GTK3_FOUND - System has GTK3\n\n#  GTK3_INCLUDE_DIRS - The GTK3 include directory\n\n#  GTK3_LIBRARIES - The libraries needed to use GTK3\n\n#  GTK3_DEFINITIONS - Compiler switches required for using GTK3\n\n#=============================================================================\n\n# Copyright 2011 Duncan Mac-Vicar P. <duncan@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file COPYING-CMAKE-SCRIPTS for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MESSAGE(STATUS \"PC_GTK3_LIBRARIES: ${PC_GTK3_LIBRARIES}\")\n\n# MESSAGE(STATUS \"PC_GTK3_LIBRARY_DIRS: ${PC_GTK3_LIBRARY_DIRS}\")\n\n# MESSAGE(STATUS \"PC_GTK3_LDFLAGS: ${PC_GTK3_LDFLAGS}\")\n\n# MESSAGE(STATUS \"PC_GTK3_LDFLAGS_OTHER: ${PC_GTK3_LDFLAGS_OTHER}\")\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#FIND_PATH(GTK3_INCLUDE_DIR NAMES \"gtk/gtk.h\"\n\n#   HINTS\n\n#   ${PC_GTK3_INCLUDEDIR}\n\n#   ${PC_GTK3_INCLUDE_DIRS}\n\n#   PATH_SUFFIXES \"gtk-3.0\"\n\n#   )\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#FIND_LIBRARY(GTK3_LIBRARIES NAMES gtk-3 gtk3\n\n#   HINTS\n\n#   ${PC_GTK3_LIBDIR}\n\n#   ${PC_GTK3_LIBRARY_DIRS}\n\n#   )\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set GTK3_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cocos2d/cmake/Modules/FindJPEG.cmake" : {
      "ObjectId" : "54acdd9ae7599cd3ced15e3af005dce853ef8db3",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindJPEG\n\n# --------\n\n#\n\n# Find JPEG\n\n#\n\n# Find the native JPEG includes and library This module defines\n\n#\n\n# ::\n\n#\n\n#   JPEG_INCLUDE_DIRS, where to find jpeglib.h, etc.\n\n#   JPEG_LIBRARIES, the libraries needed to use JPEG.\n\n#   JPEG_FOUND, If false, do not try to use JPEG.\n\n#\n\n# also defined, but not for general use are\n\n#\n\n# ::\n\n#\n\n#   JPEG_LIBRARY, where to find the JPEG library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set JPEG_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cocos2d/cmake/Modules/FindMINIZIP.cmake" : {
      "ObjectId" : "93efa3595d299ffc276e670c14c56c3241ec1e01",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindMINIZIP\n\n# ------------\n\n#\n\n# Locate minizip library (from zlib package)\n\n#\n\n# This module defines\n\n#\n\n# ::\n\n#\n\n#   MINIZIP_LIBRARIES, the library to link against\n\n#   MINIZIP_FOUND, if false, do not try to link to fmodex\n\n#   MINIZIP_INCLUDE_DIRS, where to find headers.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try pkg-config first\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 33,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 34,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 35,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# Fink\n",
        "Line" : 47,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 48,
        "CharPositionInLine" : 13
      },
      "7" : {
        "Text" : "# Blastwave\n",
        "Line" : 49,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 8
    },
    "cocos2d/cmake/Modules/FindMPG123.cmake" : {
      "ObjectId" : "61e450a2c21689e4f22d1f92f0fc2b51129d2107",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find mpg123\n\n# Find the native mpg123 includes and libraries\n\n#\n\n#  MPG123_INCLUDE_DIRS - where to find mpg123.h, etc.\n\n#  MPG123_LIBRARIES    - List of libraries when using mpg123.\n\n#  MPG123_FOUND        - True if mpg123 found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cocos2d/cmake/Modules/FindOgg.cmake" : {
      "ObjectId" : "a3c06d254653977f2e895d2344dad34c7f31dd6b",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find ogg\n\n# Find the native ogg includes and libraries\n\n#\n\n#  OGG_INCLUDE_DIRS - where to find ogg.h, etc.\n\n#  OGG_LIBRARIES    - List of libraries when using ogg.\n\n#  OGG_FOUND        - True if ogg found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MSVC built ogg may be named ogg_static.\n\n# The provided project files name the library with the lib prefix.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set OGG_FOUND\n\n# to TRUE if all listed variables are TRUE.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cocos2d/cmake/Modules/FindPNG.cmake" : {
      "ObjectId" : "a83d9e9ee373e0801b9607399dd0df5fdf522638",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindPNG\n\n# -------\n\n#\n\n# Find the native PNG includes and library\n\n#\n\n#\n\n#\n\n# This module searches libpng, the library for working with PNG images.\n\n#\n\n# It defines the following variables\n\n#\n\n# ::\n\n#\n\n#   PNG_INCLUDE_DIRS, where to find png.h, etc.\n\n#   PNG_LIBRARIES, the libraries to link against to use PNG.\n\n#   PNG_DEFINITIONS - You should add_definitons(${PNG_DEFINITIONS}) before compiling code that includes png library files.\n\n#   PNG_FOUND, If false, do not try to use PNG.\n\n#   PNG_VERSION_STRING - the version of the PNG library found (since CMake 2.8.8)\n\n#\n\n# Also defined, but not for general use are\n\n#\n\n# ::\n\n#\n\n#   PNG_LIBRARY, where to find the PNG library.\n\n#\n\n# For backward compatiblity the variable PNG_INCLUDE_DIR is also set.\n\n# It has the same value as PNG_INCLUDE_DIRS.\n\n#\n\n# Since PNG depends on the ZLib compression library, none of the above\n\n# will be defined unless ZLib can be found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2002-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 60,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 61,
        "CharPositionInLine" : 15
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 62,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "# For compatiblity with versions prior to this multi-config search, honor\n\n# any PNG_LIBRARY that is already specified and skip the search.\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set by select_library_configurations(), but we want the one from\n\n# find_package_handle_standard_args() below.\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# png.h includes zlib.h. Sigh.\n",
        "Line" : 130,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# for backward compatiblity\n",
        "Line" : 132,
        "CharPositionInLine" : 48
      },
      "9" : {
        "Text" : "# No need to define PNG_USE_DLL here, because it's default for Cygwin.\n",
        "Line" : 137,
        "CharPositionInLine" : 11
      },
      "10" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PNG_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cocos2d/cmake/Modules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "d03041852de88c0e31e4ffd17cc055b284407ca7",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindPackageHandleStandardArgs\n\n# -----------------------------\n\n#\n\n#\n\n#\n\n# FIND_PACKAGE_HANDLE_STANDARD_ARGS(<name> ...  )\n\n#\n\n# This function is intended to be used in FindXXX.cmake modules files.\n\n# It handles the REQUIRED, QUIET and version-related arguments to\n\n# find_package().  It also sets the <packagename>_FOUND variable.  The\n\n# package is considered found if all variables <var1>...  listed contain\n\n# valid results, e.g.  valid filepaths.\n\n#\n\n# There are two modes of this function.  The first argument in both\n\n# modes is the name of the Find-module where it is called (in original\n\n# casing).\n\n#\n\n# The first simple mode looks like this:\n\n#\n\n# ::\n\n#\n\n#     FIND_PACKAGE_HANDLE_STANDARD_ARGS(<name> (DEFAULT_MSG|\"Custom failure message\") <var1>...<varN> )\n\n#\n\n# If the variables <var1> to <varN> are all valid, then\n\n# <UPPERCASED_NAME>_FOUND will be set to TRUE.  If DEFAULT_MSG is given\n\n# as second argument, then the function will generate itself useful\n\n# success and error messages.  You can also supply a custom error\n\n# message for the failure case.  This is not recommended.\n\n#\n\n# The second mode is more powerful and also supports version checking:\n\n#\n\n# ::\n\n#\n\n#     FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME [FOUND_VAR <resultVar>]\n\n#                                            [REQUIRED_VARS <var1>...<varN>]\n\n#                                            [VERSION_VAR   <versionvar>]\n\n#                                            [HANDLE_COMPONENTS]\n\n#                                            [CONFIG_MODE]\n\n#                                            [FAIL_MESSAGE \"Custom failure message\"] )\n\n#\n\n#\n\n#\n\n# In this mode, the name of the result-variable can be set either to\n\n# either <UPPERCASED_NAME>_FOUND or <OriginalCase_Name>_FOUND using the\n\n# FOUND_VAR option.  Other names for the result-variable are not\n\n# allowed.  So for a Find-module named FindFooBar.cmake, the two\n\n# possible names are FooBar_FOUND and FOOBAR_FOUND.  It is recommended\n\n# to use the original case version.  If the FOUND_VAR option is not\n\n# used, the default is <UPPERCASED_NAME>_FOUND.\n\n#\n\n# As in the simple mode, if <var1> through <varN> are all valid,\n\n# <packagename>_FOUND will be set to TRUE.  After REQUIRED_VARS the\n\n# variables which are required for this package are listed.  Following\n\n# VERSION_VAR the name of the variable can be specified which holds the\n\n# version of the package which has been found.  If this is done, this\n\n# version will be checked against the (potentially) specified required\n\n# version used in the find_package() call.  The EXACT keyword is also\n\n# handled.  The default messages include information about the required\n\n# version and the version which has been actually found, both if the\n\n# version is ok or not.  If the package supports components, use the\n\n# HANDLE_COMPONENTS option to enable handling them.  In this case,\n\n# find_package_handle_standard_args() will report which components have\n\n# been found and which are missing, and the <packagename>_FOUND variable\n\n# will be set to FALSE if any of the required components (i.e.  not the\n\n# ones listed after OPTIONAL_COMPONENTS) are missing.  Use the option\n\n# CONFIG_MODE if your FindXXX.cmake module is a wrapper for a\n\n# find_package(...  NO_MODULE) call.  In this case VERSION_VAR will be\n\n# set to <NAME>_VERSION and the macro will automatically check whether\n\n# the Config module was found.  Via FAIL_MESSAGE a custom failure\n\n# message can be specified, if this is not used, the default message\n\n# will be displayed.\n\n#\n\n# Example for mode 1:\n\n#\n\n# ::\n\n#\n\n#     find_package_handle_standard_args(LibXml2  DEFAULT_MSG  LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR)\n\n#\n\n#\n\n#\n\n# LibXml2 is considered to be found, if both LIBXML2_LIBRARY and\n\n# LIBXML2_INCLUDE_DIR are valid.  Then also LIBXML2_FOUND is set to\n\n# TRUE.  If it is not found and REQUIRED was used, it fails with\n\n# FATAL_ERROR, independent whether QUIET was used or not.  If it is\n\n# found, success will be reported, including the content of <var1>.  On\n\n# repeated Cmake runs, the same message won't be printed again.\n\n#\n\n# Example for mode 2:\n\n#\n\n# ::\n\n#\n\n#     find_package_handle_standard_args(LibXslt FOUND_VAR LibXslt_FOUND\n\n#                                              REQUIRED_VARS LibXslt_LIBRARIES LibXslt_INCLUDE_DIRS\n\n#                                              VERSION_VAR LibXslt_VERSION_STRING)\n\n#\n\n# In this case, LibXslt is considered to be found if the variable(s)\n\n# listed after REQUIRED_VAR are all valid, i.e.  LibXslt_LIBRARIES and\n\n# LibXslt_INCLUDE_DIRS in this case.  The result will then be stored in\n\n# LibXslt_FOUND .  Also the version of LibXslt will be checked by using\n\n# the version contained in LibXslt_VERSION_STRING.  Since no\n\n# FAIL_MESSAGE is given, the default messages will be printed.\n\n#\n\n# Another example for mode 2:\n\n#\n\n# ::\n\n#\n\n#     find_package(Automoc4 QUIET NO_MODULE HINTS /opt/automoc4)\n\n#     find_package_handle_standard_args(Automoc4  CONFIG_MODE)\n\n#\n\n# In this case, FindAutmoc4.cmake wraps a call to find_package(Automoc4\n\n# NO_MODULE) and adds an additional search directory for automoc4.  Here\n\n# the result will be stored in AUTOMOC4_FOUND.  The following\n\n# FIND_PACKAGE_HANDLE_STANDARD_ARGS() call produces a proper\n\n# success/error message.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# internal helper macro\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# internal helper macro to generate the failure message when used in CONFIG_MODE:\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# <name>_CONFIG is set, but FOUND is false, this means that some other of the REQUIRED_VARS was not found:\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If _CONSIDERED_CONFIGS is set, the config-file has been found, but no suitable version.\n\n# List them all in the error message:\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Simple case: No Config-file was found at all:\n",
        "Line" : 168,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# set up the arguments for CMAKE_PARSE_ARGUMENTS and check whether we are in\n\n# new extended or in the \"old\" mode:\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# now that we collected all arguments, process them\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# In config-mode, we rely on the variable <package>_CONFIG, which is set by find_package()\n\n# when it successfully found the config-file, including version checking:\n",
        "Line" : 208,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# collect all variables which were not found, so they can be printed, so the\n\n# user knows better what went wrong (#6375)\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# check if all passed variables are valid\n",
        "Line" : 239,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# component handling\n",
        "Line" : 253,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# version handling:\n",
        "Line" : 284,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# exact version required\n",
        "Line" : 292,
        "CharPositionInLine" : 44
      },
      "15" : {
        "Text" : "# minimum version specified:\n",
        "Line" : 300,
        "CharPositionInLine" : 17
      },
      "16" : {
        "Text" : "# if the package was not found, but a version was given, add that to the output:\n",
        "Line" : 311,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# print the result:\n",
        "Line" : 332,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "cocos2d/cmake/Modules/FindPackageMessage.cmake" : {
      "ObjectId" : "b6a58e427d143f8c3c65ac89668eb826990b3f6f",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindPackageMessage\n\n# ------------------\n\n#\n\n#\n\n#\n\n# FIND_PACKAGE_MESSAGE(<name> \"message for user\" \"find result details\")\n\n#\n\n# This macro is intended to be used in FindXXX.cmake modules files.  It\n\n# will print a message once for each unique find result.  This is useful\n\n# for telling the user where a package was found.  The first argument\n\n# specifies the name (XXX) of the package.  The second argument\n\n# specifies the message to display.  The third argument lists details\n\n# about the find result so that if they change the message will be\n\n# displayed again.  The macro also obeys the QUIET argument to the\n\n# find_package command.\n\n#\n\n# Example:\n\n#\n\n# ::\n\n#\n\n#   if(X11_FOUND)\n\n#     FIND_PACKAGE_MESSAGE(X11 \"Found X11: ${X11_X11_LIB}\"\n\n#       \"[${X11_X11_LIB}][${X11_INCLUDE_DIR}]\")\n\n#   else()\n\n#    ...\n\n#   endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2008-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Avoid printing a message repeatedly for the same find result.\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The message has not yet been printed.\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Save the find details in the cache to avoid printing the same\n\n# message again.\n",
        "Line" : 51,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "cocos2d/cmake/Modules/FindPkgConfig.cmake" : {
      "ObjectId" : "e6fdefe8c1cf6a6e3a779e14d728734bfff58e6c",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindPkgConfig\n\n# -------------\n\n#\n\n# a pkg-config module for CMake\n\n#\n\n#\n\n#\n\n# Usage:\n\n#\n\n# ::\n\n#\n\n#    pkg_check_modules(<PREFIX> [REQUIRED] [QUIET] <MODULE> [<MODULE>]*)\n\n#      checks for all the given modules\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    pkg_search_module(<PREFIX> [REQUIRED] [QUIET] <MODULE> [<MODULE>]*)\n\n#      checks for given modules and uses the first working one\n\n#\n\n#\n\n#\n\n# When the 'REQUIRED' argument was set, macros will fail with an error\n\n# when module(s) could not be found\n\n#\n\n# When the 'QUIET' argument is set, no status messages will be printed.\n\n#\n\n# It sets the following variables:\n\n#\n\n# ::\n\n#\n\n#    PKG_CONFIG_FOUND          ... if pkg-config executable was found\n\n#    PKG_CONFIG_EXECUTABLE     ... pathname of the pkg-config program\n\n#    PKG_CONFIG_VERSION_STRING ... the version of the pkg-config program found\n\n#                                  (since CMake 2.8.8)\n\n#\n\n#\n\n#\n\n# For the following variables two sets of values exist; first one is the\n\n# common one and has the given PREFIX.  The second set contains flags\n\n# which are given out when pkgconfig was called with the '--static'\n\n# option.\n\n#\n\n# ::\n\n#\n\n#    <XPREFIX>_FOUND          ... set to 1 if module(s) exist\n\n#    <XPREFIX>_LIBRARIES      ... only the libraries (w/o the '-l')\n\n#    <XPREFIX>_LIBRARY_DIRS   ... the paths of the libraries (w/o the '-L')\n\n#    <XPREFIX>_LDFLAGS        ... all required linker flags\n\n#    <XPREFIX>_LDFLAGS_OTHER  ... all other linker flags\n\n#    <XPREFIX>_INCLUDE_DIRS   ... the '-I' preprocessor flags (w/o the '-I')\n\n#    <XPREFIX>_CFLAGS         ... all required cflags\n\n#    <XPREFIX>_CFLAGS_OTHER   ... the other compiler flags\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    <XPREFIX> = <PREFIX>        for common case\n\n#    <XPREFIX> = <PREFIX>_STATIC for static linking\n\n#\n\n#\n\n#\n\n# There are some special variables whose prefix depends on the count of\n\n# given modules.  When there is only one module, <PREFIX> stays\n\n# unchanged.  When there are multiple modules, the prefix will be\n\n# changed to <PREFIX>_<MODNAME>:\n\n#\n\n# ::\n\n#\n\n#    <XPREFIX>_VERSION    ... version of the module\n\n#    <XPREFIX>_PREFIX     ... prefix-directory of the module\n\n#    <XPREFIX>_INCLUDEDIR ... include-dir of the module\n\n#    <XPREFIX>_LIBDIR     ... lib-dir of the module\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    <XPREFIX> = <PREFIX>  when |MODULES| == 1, else\n\n#    <XPREFIX> = <PREFIX>_<MODNAME>\n\n#\n\n#\n\n#\n\n# A <MODULE> parameter can have the following formats:\n\n#\n\n# ::\n\n#\n\n#    {MODNAME}            ... matches any version\n\n#    {MODNAME}>={VERSION} ... at least version <VERSION> is required\n\n#    {MODNAME}={VERSION}  ... exactly version <VERSION> is required\n\n#    {MODNAME}<={VERSION} ... modules must not be newer than <VERSION>\n\n#\n\n#\n\n#\n\n# Examples\n\n#\n\n# ::\n\n#\n\n#    pkg_check_modules (GLIB2   glib-2.0)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    pkg_check_modules (GLIB2   glib-2.0>=2.10)\n\n#      requires at least version 2.10 of glib2 and defines e.g.\n\n#        GLIB2_VERSION=2.10.3\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    pkg_check_modules (FOO     glib-2.0>=2.10 gtk+-2.0)\n\n#      requires both glib2 and gtk2, and defines e.g.\n\n#        FOO_glib-2.0_VERSION=2.10.3\n\n#        FOO_gtk+-2.0_VERSION=2.8.20\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    pkg_check_modules (XRENDER REQUIRED xrender)\n\n#      defines e.g.:\n\n#        XRENDER_LIBRARIES=Xrender;X11\n\n#        XRENDER_STATIC_LIBRARIES=Xrender;X11;pthread;Xau;Xdmcp\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    pkg_search_module (BAR     libxml-2.0 libxml2 libxml>=2)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Enrico Scholz <enrico.scholz@informatik.tu-chemnitz.de>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Common stuff ####\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is needed because the module name is \"PkgConfig\" but the name of\n\n# this variable has always been PKG_CONFIG_FOUND so this isn't automatically\n\n# handled by FPHSA.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Unsets the given variables\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Invokes pkgconfig, cleans up the result and sets variables\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#message(STATUS \"  ${_varname} ... ${_pkgconfig_invoke_result}\")\n",
        "Line" : 204,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Invokes pkgconfig two times; once without '--static' and once with\n\n# '--static'\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Splits given arguments into options and a package list\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# create a better addressable variable of the modules and calculate its size\n",
        "Line" : 259,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# give out status message telling checked module\n",
        "Line" : 264,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# iterate through module list and check whether they exist and match the required version\n",
        "Line" : 276,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# check whether version is given\n",
        "Line" : 280,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# handle the operands\n",
        "Line" : 291,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# create the final query which is of the format:\n\n# * --atleast-version <version> <pkg-name>\n\n# * --exact-version <version> <pkg-name>\n\n# * --max-version <version> <pkg-name>\n\n# * --exists <pkg-name>\n",
        "Line" : 304,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# execute the query\n",
        "Line" : 323,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# evaluate result and tell failures\n",
        "Line" : 328,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# fail when requested\n",
        "Line" : 339,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# when we are here, we checked whether requested modules\n\n# exist. Now, go through them and set variables\n",
        "Line" : 344,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# iterate through all modules again and set individual variables\n",
        "Line" : 350,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# handle case when there is only one package required\n",
        "Line" : 352,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# set variables which are combined for multiple modules\n",
        "Line" : 369,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "###\n\n### User visible macros start here\n\n###\n",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "###\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# check cached value\n",
        "Line" : 392,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "###\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# check cached value\n",
        "Line" : 403,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# iterate through all modules and stop at the first working one.\n",
        "Line" : 412,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "### Local Variables:\n\n### mode: cmake\n\n### End:\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "cocos2d/cmake/Modules/FindRecast.cmake" : {
      "ObjectId" : "d87b3bfbc8d813f1bb942c658377c7bfca1d7183",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindRecast\n\n# ------------\n\n#\n\n# Locate RECAST library\n\n#\n\n# This module defines\n\n#\n\n# ::\n\n#\n\n#   RECAST_LIBRARIES, the library to link against\n\n#   RECAST_FOUND, the libraries needed to use RECAST\n\n#   RECAST_INCLUDE_DIRS, where to find headers.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cocos2d/cmake/Modules/FindSQLite3.cmake" : {
      "ObjectId" : "5d138537208c8254c32904879671b56b5f9076c3",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find SQLite3\n\n#\n\n#  SQLITE3_INCLUDE_DIRS - where to find sqlite3.h header.\n\n#  SQLITE3_LIBRARIES    - List of SQLite3 libraries.\n\n#  SQLITE3_FOUND        - True if SQLite3 found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#these next two are needed by the CocosBuildHelpers cocos_find_package macro\n",
        "Line" : 37,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "cocos2d/cmake/Modules/FindTIFF.cmake" : {
      "ObjectId" : "e5475a2701c9b0ed7b69099810de2c083b3d981b",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindTIFF\n\n# --------\n\n#\n\n# Find TIFF library\n\n#\n\n# Find the native TIFF includes and library This module defines\n\n#\n\n# ::\n\n#\n\n#   TIFF_INCLUDE_DIR, where to find tiff.h, etc.\n\n#   TIFF_LIBRARIES, libraries to link against to use TIFF.\n\n#   TIFF_FOUND, If false, do not try to use TIFF.\n\n#\n\n# also defined, but not for general use are\n\n#\n\n# ::\n\n#\n\n#   TIFF_LIBRARY, where to find the TIFF library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2002-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 44,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 45,
        "CharPositionInLine" : 15
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 46,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set TIFF_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cocos2d/cmake/Modules/FindTinyXML2.cmake" : {
      "ObjectId" : "eb9ba957c9fc57fbb7d208023682cd0b85090b8c",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindTinyXML2\n\n# ------------\n\n#\n\n# Locate tinyxml2 library\n\n#\n\n# This module defines\n\n#\n\n# ::\n\n#\n\n#   TINYXML2_LIBRARIES, the library to link against\n\n#   TINYXML2_FOUND, if false, do not try to link to tinyxml2\n\n#   TINYXML2_INCLUDE_DIRS, where to find headers.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 24,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 25,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 26,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 4
    },
    "cocos2d/cmake/Modules/FindVorbis.cmake" : {
      "ObjectId" : "163dda6fa66891a480fab857a9a53ba9ce8033bc",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find vorbis\n\n# Find the native vorbis includes and libraries\n\n#\n\n#  VORBIS_INCLUDE_DIRS - where to find vorbis.h, etc.\n\n#  VORBIS_LIBRARIES    - List of libraries when using vorbis(file).\n\n#  VORBIS_FOUND        - True if vorbis found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MSVC built vorbis may be named vorbis_static\n\n# The provided project files name the library with the lib prefix.\n",
        "Line" : 11,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set VORBIS_FOUND\n\n# to TRUE if all listed variables are TRUE.\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "cocos2d/cmake/Modules/FindWEBSOCKETS.cmake" : {
      "ObjectId" : "475d16775331e94eba98b1cb2eac401232a9cd1e",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindWEBSOCKETS\n\n# --------\n\n#\n\n# Find websockets library\n\n#\n\n# ::\n\n#\n\n#   WEBSOCKETS_INCLUDE_DIRS, where to find libwebsockets.h.\n\n#   WEBSOCKETS_LIBRARIES, the libraries needed to use WEBSOCKETS.\n\n#   WEBSOCKETS_FOUND, If false, do not try to use WEBSOCKETS.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 22,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 23,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 24,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 4
    },
    "cocos2d/cmake/Modules/FindWebP.cmake" : {
      "ObjectId" : "f7b140b979f768d0fbdf816d6db6a906dea76bf7",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindWebP\n\n# ------------\n\n#\n\n# Locate webp library\n\n#\n\n# This module defines\n\n#\n\n# ::\n\n#\n\n#   WEBP_LIBRARIES, the library to link against\n\n#   WEBP_FOUND, if false, do not try to link to FREETYPE\n\n#   WEBP_INCLUDE_DIRS, where to find headers.\n\n#   This is the concatenation of the paths:\n\n#   WEBP_INCLUDE_DIR\n\n#\n\n#=============================================================================\n\n# Copyright 2014-2014 Martell Malone\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 39,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 40,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 41,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set WEBP_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cocos2d/cmake/Modules/Findflatbuffers.cmake" : {
      "ObjectId" : "f6302e53cf0772159581021def3a1542d456de8e",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# Findflatbuffers\n\n# ------------\n\n#\n\n# Locate flatbuffers library\n\n#\n\n# This module defines\n\n#\n\n# ::\n\n#\n\n#   FLATBUFFERS_LIBRARIES, the library to link against\n\n#   FLATBUFFERS_FOUND, the libraries needed to use flatbuffers\n\n#   FLATBUFFERS_INCLUDE_DIRS, where to find headers.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cocos2d/cmake/Modules/Findxxhash.cmake" : {
      "ObjectId" : "034a694864415276b7001b831a76f891490cad0c",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# Findxxhash\n\n# ------------\n\n#\n\n# Locate xxhash library\n\n#\n\n# This module defines\n\n#\n\n# ::\n\n#\n\n#   XXHASH_LIBRARIES, the library to link against\n\n#   XXHASH_FOUND, the libraries needed to use flatbuffers\n\n#   XXHASH_INCLUDE_DIRS, where to find headers.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cocos2d/cmake/Modules/SelectLibraryConfigurations.cmake" : {
      "ObjectId" : "d7108562b1bdee824723f15ade932d4564495371",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# SelectLibraryConfigurations\n\n# ---------------------------\n\n#\n\n#\n\n#\n\n# select_library_configurations( basename )\n\n#\n\n# This macro takes a library base name as an argument, and will choose\n\n# good values for basename_LIBRARY, basename_LIBRARIES,\n\n# basename_LIBRARY_DEBUG, and basename_LIBRARY_RELEASE depending on what\n\n# has been found and set.  If only basename_LIBRARY_RELEASE is defined,\n\n# basename_LIBRARY will be set to the release value, and\n\n# basename_LIBRARY_DEBUG will be set to basename_LIBRARY_DEBUG-NOTFOUND.\n\n# If only basename_LIBRARY_DEBUG is defined, then basename_LIBRARY will\n\n# take the debug value, and basename_LIBRARY_RELEASE will be set to\n\n# basename_LIBRARY_RELEASE-NOTFOUND.\n\n#\n\n# If the generator supports configuration types, then basename_LIBRARY\n\n# and basename_LIBRARIES will be set with debug and optimized flags\n\n# specifying the library to be used for the given configuration.  If no\n\n# build type has been set or the generator in use does not support\n\n# configuration types, then basename_LIBRARY and basename_LIBRARIES will\n\n# take only the release value, or the debug value if the release one is\n\n# not set.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Will Dicharry <wdicharry@stellarscience.com>\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This macro was adapted from the FindQt4 CMake module and is maintained by Will\n\n# Dicharry <wdicharry@stellarscience.com>.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if the generator supports configuration types or CMAKE_BUILD_TYPE\n\n# is set, then set optimized and debug options.\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "cocos2d/cmake/Modules/SelectModule.cmake" : {
      "ObjectId" : "7b6dc1b6a033b27e793b42ecef478d17f4278ea3",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: fix test samples for MSVC\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "cocos2d/cmake/Modules/SetCompilerOptions.cmake" : {
      "ObjectId" : "7d4801c54da1a612b37a8371c1e01801bb3e2346",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# definitions for chipmunk\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# without this chipmunk will try to use apple defined geometry types, that conflicts with cocos\n",
        "Line" : 9,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "# definitions for box2d\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# definitions for bullet\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# definitions for recast\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Compiler options\n",
        "Line" : 39,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Use inline debug info (/Z7) format. Or internal error may occur.\n\n# Errors looks like: \"xmemory0(592): error C3130: Internal Compiler Error: failed to write injected code block to PDB\"\n",
        "Line" : 45,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# Some macro definitions\n",
        "Line" : 62,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "#add_definitions(-DGLEW_STATIC)\n",
        "Line" : 91,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 9
    },
    "cocos2d/cmake/android.toolchain.cmake" : {
      "ObjectId" : "41b3127fd6b2b2d40b97aad3ab8b4be0adc26cbe",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2010-2011, Ethan Rublee\n\n# Copyright (c) 2011-2014, Andrey Kamaev\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1.  Redistributions of source code must retain the above copyright notice,\n\n#     this list of conditions and the following disclaimer.\n\n#\n\n# 2.  Redistributions in binary form must reproduce the above copyright notice,\n\n#     this list of conditions and the following disclaimer in the documentation\n\n#     and/or other materials provided with the distribution.\n\n#\n\n# 3.  Neither the name of the copyright holder nor the names of its\n\n#     contributors may be used to endorse or promote products derived from this\n\n#     software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n#  Android CMake toolchain file, for use with the Android NDK r5-r10d\n\n#  Requires cmake 2.6.3 or newer (2.8.9 or newer is recommended).\n\n#  See home page: https://github.com/taka-no-me/android-cmake\n\n#\n\n#  Usage Linux:\n\n#   $ export ANDROID_NDK=/absolute/path/to/the/android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Windows:\n\n#     You need native port of make to build your project.\n\n#     Android NDK r7 (and newer) already has make.exe on board.\n\n#     For older NDK you have to install it separately.\n\n#     For example, this one: http://gnuwin32.sourceforge.net/packages/make.htm\n\n#\n\n#   $ SET ANDROID_NDK=C:\\absolute\\path\\to\\the\\android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake.exe -G\"MinGW Makefiles\"\n\n#       -DCMAKE_TOOLCHAIN_FILE=path\\to\\the\\android.toolchain.cmake\n\n#       -DCMAKE_MAKE_PROGRAM=\"%ANDROID_NDK%\\prebuilt\\windows\\bin\\make.exe\" ..\n\n#   $ cmake.exe --build .\n\n#\n\n#\n\n#  Options (can be set as cmake parameters: -D<option_name>=<value>):\n\n#    ANDROID_NDK=/opt/android-ndk - path to the NDK root.\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_ABI=armeabi-v7a - specifies the target Application Binary\n\n#      Interface (ABI). This option nearly matches to the APP_ABI variable\n\n#      used by ndk-build tool from Android NDK.\n\n#\n\n#      Possible targets are:\n\n#        \"armeabi\" - ARMv5TE based CPU with software floating point operations\n\n#        \"armeabi-v7a\" - ARMv7 based devices with hardware FPU instructions\n\n#            this ABI target is used by default\n\n#        \"armeabi-v7a with NEON\" - same as armeabi-v7a, but\n\n#            sets NEON as floating-point unit\n\n#        \"armeabi-v7a with VFPV3\" - same as armeabi-v7a, but\n\n#            sets VFPV3 as floating-point unit (has 32 registers instead of 16)\n\n#        \"armeabi-v6 with VFP\" - tuned for ARMv6 processors having VFP\n\n#        \"x86\" - IA-32 instruction set\n\n#        \"mips\" - MIPS32 instruction set\n\n#\n\n#      64-bit ABIs for NDK r10 and newer:\n\n#        \"arm64-v8a\" - ARMv8 AArch64 instruction set\n\n#        \"x86_64\" - Intel64 instruction set (r1)\n\n#        \"mips64\" - MIPS64 instruction set (r6)\n\n#\n\n#    ANDROID_NATIVE_API_LEVEL=android-8 - level of Android API compile for.\n\n#      Option is read-only when standalone toolchain is used.\n\n#      Note: building for \"android-L\" requires explicit configuration.\n\n#\n\n#    ANDROID_TOOLCHAIN_NAME=arm-linux-androideabi-4.9 - the name of compiler\n\n#      toolchain to be used. The list of possible values depends on the NDK\n\n#      version. For NDK r10c the possible values are:\n\n#\n\n#        * aarch64-linux-android-4.9\n\n#        * aarch64-linux-android-clang3.4\n\n#        * aarch64-linux-android-clang3.5\n\n#        * arm-linux-androideabi-4.6\n\n#        * arm-linux-androideabi-4.8\n\n#        * arm-linux-androideabi-4.9 (default)\n\n#        * arm-linux-androideabi-clang3.4\n\n#        * arm-linux-androideabi-clang3.5\n\n#        * mips64el-linux-android-4.9\n\n#        * mips64el-linux-android-clang3.4\n\n#        * mips64el-linux-android-clang3.5\n\n#        * mipsel-linux-android-4.6\n\n#        * mipsel-linux-android-4.8\n\n#        * mipsel-linux-android-4.9\n\n#        * mipsel-linux-android-clang3.4\n\n#        * mipsel-linux-android-clang3.5\n\n#        * x86-4.6\n\n#        * x86-4.8\n\n#        * x86-4.9\n\n#        * x86-clang3.4\n\n#        * x86-clang3.5\n\n#        * x86_64-4.9\n\n#        * x86_64-clang3.4\n\n#        * x86_64-clang3.5\n\n#\n\n#    ANDROID_FORCE_ARM_BUILD=OFF - set ON to generate 32-bit ARM instructions\n\n#      instead of Thumb. Is not available for \"armeabi-v6 with VFP\"\n\n#      (is forced to be ON) ABI.\n\n#\n\n#    ANDROID_NO_UNDEFINED=ON - set ON to show all undefined symbols as linker\n\n#      errors even if they are not used.\n\n#\n\n#    ANDROID_SO_UNDEFINED=OFF - set ON to allow undefined symbols in shared\n\n#      libraries. Automatically turned for NDK r5x and r6x due to GLESv2\n\n#      problems.\n\n#\n\n#    ANDROID_STL=gnustl_static - specify the runtime to use.\n\n#\n\n#      Possible values are:\n\n#        none           -> Do not configure the runtime.\n\n#        system         -> Use the default minimal system C++ runtime library.\n\n#                          Implies -fno-rtti -fno-exceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        system_re      -> Use the default minimal system C++ runtime library.\n\n#                          Implies -frtti -fexceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_static  -> Use the GAbi++ runtime as a static library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_shared  -> Use the GAbi++ runtime as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_static -> Use the STLport runtime as a static library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_shared -> Use the STLport runtime as a shared library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gnustl_static  -> Use the GNU STL as a static library.\n\n#                          Implies -frtti -fexceptions.\n\n#        gnustl_shared  -> Use the GNU STL as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7b and newer.\n\n#                          Silently degrades to gnustl_static if not available.\n\n#        c++_shared     -> Use the LLVM libc++ runtime as a shared library.\n\n#                          Implies -std=c++11.\n\n#                          Available for NDK r7b and newer.\n\n#                          Is not available for standalone toolchain.\n\n#\n\n#    ANDROID_STL_FORCE_FEATURES=ON - turn rtti and exceptions support based on\n\n#      chosen runtime. If disabled, then the user is responsible for settings\n\n#      these options.\n\n#\n\n#  What?:\n\n#    android-cmake toolchain searches for NDK/toolchain in the following order:\n\n#      ANDROID_NDK - cmake parameter\n\n#      ANDROID_NDK - environment variable\n\n#      ANDROID_STANDALONE_TOOLCHAIN - cmake parameter\n\n#      ANDROID_STANDALONE_TOOLCHAIN - environment variable\n\n#      ANDROID_NDK - default locations\n\n#      ANDROID_STANDALONE_TOOLCHAIN - default locations\n\n#\n\n#    Make sure to do the following in your scripts:\n\n#      SET( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${my_cxx_flags}\" )\n\n#      SET( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${my_cxx_flags}\" )\n\n#    The flags will be prepopulated with critical flags, so don't loose them.\n\n#    Also be aware that toolchain also sets configuration-specific compiler\n\n#    flags and linker flags.\n\n#\n\n#    ANDROID and BUILD_ANDROID will be set to true, you may test any of these\n\n#    variables to make necessary Android-specific configuration changes.\n\n#\n\n#    Also ARMEABI or ARMEABI_V7A or X86 or MIPS or ARM64_V8A or X86_64 or MIPS64\n\n#    will be set true, mutually exclusive. NEON option will be set true\n\n#    if VFP is set to NEON.\n\n#\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# subsequent toolchain loading is not really needed\n",
        "Line" : 194,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# touch toolchain variable to suppress \"unused variable\" warning\n",
        "Line" : 199,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# inherit settings in recursive loads\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this one is important\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# this one not so much\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rpath makes low sense for Android\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# NDK search paths\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# known ABIs\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# API level defaults\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# fight against cygwin\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# remove cygwin from PATH\n",
        "Line" : 351,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# detect current host platform\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# see if we have path to Android NDK\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# see if we have path to Android standalone toolchain\n",
        "Line" : 390,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#try to find Android NDK in one of the the default locations\n",
        "Line" : 394,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#try to find Android standalone toolchain in one of the the default locations\n",
        "Line" : 408,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# remember found paths\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# try to detect change\n",
        "Line" : 436,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# android NDK layout\n",
        "Line" : 460,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# try to automatically detect the layout\n",
        "Line" : 463,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 475,
        "CharPositionInLine" : 71
      },
      "23" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 480,
        "CharPositionInLine" : 71
      },
      "24" : {
        "Text" : "# ANDROID_NDK_LAYOUT STREQUAL \"RELEASE\"\n",
        "Line" : 484,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# try to detect change of NDK\n",
        "Line" : 491,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# get all the details about standalone toolchain\n",
        "Line" : 505,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#message(\"machine: !${__machine}!\\narch: !${__arch}!\\nversion: !${__version}!\\ntoolchain: !${__toolchain}!\\n\")\n",
        "Line" : 572,
        "CharPositionInLine" : 3
      },
      "28" : {
        "Text" : "# get all the details about NDK\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# do not go through all toolchains if we know the name\n",
        "Line" : 593,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# we need clang to go after gcc\n",
        "Line" : 606,
        "CharPositionInLine" : 39
      },
      "31" : {
        "Text" : "# build list of available ABIs\n",
        "Line" : 624,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# choose target ABI\n",
        "Line" : 637,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# verify that target ABI is supported\n",
        "Line" : 639,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# set target ABI options\n",
        "Line" : 649,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# need always fallback to older platform\n",
        "Line" : 695,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# really dirty hack\n\n# it is not possible to change CMAKE_SYSTEM_PROCESSOR after the first run...\n",
        "Line" : 723,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# choose toolchain\n",
        "Line" : 736,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# choose native API level\n",
        "Line" : 785,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# adjust API level\n",
        "Line" : 789,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# validate\n",
        "Line" : 801,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# remember target ABI\n",
        "Line" : 823,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# runtime choice (STL, rtti, exceptions)\n",
        "Line" : 831,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# setup paths and STL for standalone toolchain\n",
        "Line" : 899,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# old location ( pre r8c )\n",
        "Line" : 908,
        "CharPositionInLine" : 3
      },
      "45" : {
        "Text" : "# always search static GNU STL to get the location of libsupc++.a\n",
        "Line" : 918,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# clang\n",
        "Line" : 953,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# setup paths and STL for NDK\n",
        "Line" : 977,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# do nothing\n",
        "Line" : 983,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# before r7\n",
        "Line" : 993,
        "CharPositionInLine" : 42
      },
      "50" : {
        "Text" : "# before r8d\n",
        "Line" : 1001,
        "CharPositionInLine" : 46
      },
      "51" : {
        "Text" : "# before r7\n",
        "Line" : 1006,
        "CharPositionInLine" : 42
      },
      "52" : {
        "Text" : "# gnustl binary for 4.7 compiler is buggy :(\n\n# TODO: look for right fix\n",
        "Line" : 1018,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# android support files\n",
        "Line" : 1044,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# find libsupc++.a - rtti & exceptions\n",
        "Line" : 1054,
        "CharPositionInLine" : 1
      },
      "55" : {
        "Text" : "# r8b or newer\n",
        "Line" : 1056,
        "CharPositionInLine" : 137
      },
      "56" : {
        "Text" : "# r7-r8\n",
        "Line" : 1058,
        "CharPositionInLine" : 110
      },
      "57" : {
        "Text" : "# before r7\n",
        "Line" : 1060,
        "CharPositionInLine" : 36
      },
      "58" : {
        "Text" : "# case of shared STL linkage\n",
        "Line" : 1080,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# TODO: check if .so file exists before the renaming\n",
        "Line" : 1083,
        "CharPositionInLine" : 1
      },
      "60" : {
        "Text" : "# ccache support\n",
        "Line" : 1087,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# setup the cross-compiler\n",
        "Line" : 1100,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Use gcc-ar if we have it for better LTO support.\n",
        "Line" : 1124,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# Force set compilers because standard identification works badly for us\n",
        "Line" : 1148,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# force ASM compiler (required for CMake < 2.8.5)\n",
        "Line" : 1171,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# flags and definitions\n",
        "Line" : 1187,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# try to convert path to 8.3 form\n",
        "Line" : 1193,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# quotes can break try_compile and compiler identification\n",
        "Line" : 1208,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# NDK flags\n",
        "Line" : 1215,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# always compile ARMEABI_V6 in arm mode; otherwise there is no difference from ARMEABI\n",
        "Line" : 1232,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# good/necessary when porting desktop libraries\n",
        "Line" : 1259,
        "CharPositionInLine" : 62
      },
      "71" : {
        "Text" : "# see https://android-review.googlesource.com/#/c/47564/\n",
        "Line" : 1266,
        "CharPositionInLine" : 72
      },
      "72" : {
        "Text" : "# ABI-specific flags\n",
        "Line" : 1269,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# vfp == vfpv2\n",
        "Line" : 1280,
        "CharPositionInLine" : 91
      },
      "74" : {
        "Text" : "# STL\n",
        "Line" : 1295,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# C objects:\n",
        "Line" : 1306,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# variables controlling optional build flags\n",
        "Line" : 1324,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# before r7\n",
        "Line" : 1325,
        "CharPositionInLine" : 40
      },
      "78" : {
        "Text" : "# libGLESv2.so in NDK's prior to r7 refers to missing external symbols.\n\n# So this flag option is required for all projects using OpenGL from native.\n",
        "Line" : 1326,
        "CharPositionInLine" : 1
      },
      "79" : {
        "Text" : "# linker flags\n",
        "Line" : 1346,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# this is *required* to use the following linker flags that routes around\n\n# a CPU bug in some Cortex-A8 implementations:\n",
        "Line" : 1350,
        "CharPositionInLine" : 1
      },
      "81" : {
        "Text" : "# there is some sysroot-related problem in mips linker...\n",
        "Line" : 1357,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# after r8b\n",
        "Line" : 1378,
        "CharPositionInLine" : 48
      },
      "83" : {
        "Text" : "# version 4.6\n",
        "Line" : 1386,
        "CharPositionInLine" : 8
      },
      "84" : {
        "Text" : "# cache flags\n",
        "Line" : 1408,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# put flags to cache (for debug purpose only)\n",
        "Line" : 1419,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# finish flags\n",
        "Line" : 1425,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# pie/pic\n",
        "Line" : 1442,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# configure rtti\n",
        "Line" : 1452,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# configure exceptios\n",
        "Line" : 1461,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# global includes and link directories\n",
        "Line" : 1472,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# avoid CMP0015 policy warning\n",
        "Line" : 1474,
        "CharPositionInLine" : 111
      },
      "92" : {
        "Text" : "# detect if need link crtbegin_so.o explicitly\n",
        "Line" : 1477,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# setup output directories\n",
        "Line" : 1514,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# copy shaed stl library to build directory\n",
        "Line" : 1531,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# set these global flags for cmake client scripts to change behavior\n",
        "Line" : 1543,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# where is the target environment\n",
        "Line" : 1547,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# only search for libraries and includes in the ndk toolchain\n",
        "Line" : 1550,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# macro to find packages on the host OS\n",
        "Line" : 1556,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# macro to find programs on the host OS\n",
        "Line" : 1578,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# export toolchain settings for the try_compile() command\n",
        "Line" : 1600,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# force cmake to produce / instead of \\ in build commands for Ninja generator\n",
        "Line" : 1637,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# it is a bad hack after all\n\n# CMake generates Ninja makefiles with UNIX paths only if it thinks that we are going to build with MinGW\n",
        "Line" : 1639,
        "CharPositionInLine" : 1
      },
      "103" : {
        "Text" : "# tell CMake that we are MinGW\n\n# stop recursion\n",
        "Line" : 1641,
        "CharPositionInLine" : 37
      },
      "104" : {
        "Text" : "# unset( CMAKE_COMPILER_IS_MINGW ) # can't unset because CMake does not convert back-slashes in response files without it\n",
        "Line" : 1645,
        "CharPositionInLine" : 1
      },
      "105" : {
        "Text" : "# Variables controlling behavior or set by cmake toolchain:\n\n#   ANDROID_ABI : \"armeabi-v7a\" (default), \"armeabi\", \"armeabi-v7a with NEON\", \"armeabi-v7a with VFPV3\", \"armeabi-v6 with VFP\", \"x86\", \"mips\", \"arm64-v8a\", \"x86_64\", \"mips64\"\n\n#   ANDROID_NATIVE_API_LEVEL : 3,4,5,8,9,14,15,16,17,18,19,21 (depends on NDK version)\n\n#   ANDROID_STL : c++_shared/gnustl_static/gnustl_shared/stlport_static/stlport_shared/gabi++_static/gabi++_shared/system_re/system/none\n\n#   ANDROID_FORBID_SYGWIN : ON/OFF\n\n#   ANDROID_NO_UNDEFINED : ON/OFF\n\n#   ANDROID_SO_UNDEFINED : OFF/ON  (default depends on NDK version)\n\n#   ANDROID_FUNCTION_LEVEL_LINKING : ON/OFF\n\n#   ANDROID_GOLD_LINKER : ON/OFF\n\n#   ANDROID_NOEXECSTACK : ON/OFF\n\n#   ANDROID_RELRO : ON/OFF\n\n#   ANDROID_FORCE_ARM_BUILD : ON/OFF\n\n#   ANDROID_STL_FORCE_FEATURES : ON/OFF\n\n#   ANDROID_LIBM_PATH : path to libm.so (set to something like $(TOP)/out/target/product/<product_name>/obj/lib/libm.so) to workaround unresolved `sincos`\n\n# Can be set only at the first run:\n\n#   ANDROID_NDK : path to your NDK install\n\n#   NDK_CCACHE : path to your ccache executable\n\n#   ANDROID_TOOLCHAIN_NAME : the NDK name of compiler toolchain\n\n#   ANDROID_NDK_HOST_X64 : try to use x86_64 toolchain (default for x64 host systems)\n\n#   ANDROID_NDK_LAYOUT : the inner NDK structure (RELEASE, LINARO, ANDROID)\n\n#   LIBRARY_OUTPUT_PATH_ROOT : <any valid path>\n\n#   ANDROID_STANDALONE_TOOLCHAIN\n\n#\n\n# Primary read-only variables:\n\n#   ANDROID : always TRUE\n\n#   ARMEABI : TRUE for arm v6 and older devices\n\n#   ARMEABI_V6 : TRUE for arm v6\n\n#   ARMEABI_V7A : TRUE for arm v7a\n\n#   ARM64_V8A : TRUE for arm64-v8a\n\n#   NEON : TRUE if NEON unit is enabled\n\n#   VFPV3 : TRUE if VFP version 3 is enabled\n\n#   X86 : TRUE if configured for x86\n\n#   X86_64 : TRUE if configured for x86_64\n\n#   MIPS : TRUE if configured for mips\n\n#   MIPS64 : TRUE if configured for mips64\n\n#   BUILD_WITH_ANDROID_NDK : TRUE if NDK is used\n\n#   BUILD_WITH_STANDALONE_TOOLCHAIN : TRUE if standalone toolchain is used\n\n#   ANDROID_NDK_HOST_SYSTEM_NAME : \"windows\", \"linux-x86\" or \"darwin-x86\" depending on host platform\n\n#   ANDROID_NDK_ABI_NAME : \"armeabi\", \"armeabi-v7a\", \"x86\", \"mips\", \"arm64-v8a\", \"x86_64\", \"mips64\" depending on ANDROID_ABI\n\n#   ANDROID_NDK_RELEASE : from r5 to r10d; set only for NDK\n\n#   ANDROID_NDK_RELEASE_NUM : numeric ANDROID_NDK_RELEASE version (1000*major+minor)\n\n#   ANDROID_ARCH_NAME : \"arm\", \"x86\", \"mips\", \"arm64\", \"x86_64\", \"mips64\" depending on ANDROID_ABI\n\n#   ANDROID_SYSROOT : path to the compiler sysroot\n\n#   TOOL_OS_SUFFIX : \"\" or \".exe\" depending on host platform\n\n#   ANDROID_COMPILER_IS_CLANG : TRUE if clang compiler is used\n\n#\n\n# Secondary (less stable) read-only variables:\n\n#   ANDROID_COMPILER_VERSION : GCC version used (not Clang version)\n\n#   ANDROID_CLANG_VERSION : version of clang compiler if clang is used\n\n#   ANDROID_CXX_FLAGS : C/C++ compiler flags required by Android platform\n\n#   ANDROID_SUPPORTED_ABIS : list of currently allowed values for ANDROID_ABI\n\n#   ANDROID_TOOLCHAIN_MACHINE_NAME : \"arm-linux-androideabi\", \"arm-eabi\" or \"i686-android-linux\"\n\n#   ANDROID_TOOLCHAIN_ROOT : path to the top level of toolchain (standalone or placed inside NDK)\n\n#   ANDROID_CLANG_TOOLCHAIN_ROOT : path to clang tools\n\n#   ANDROID_SUPPORTED_NATIVE_API_LEVELS : list of native API levels found inside NDK\n\n#   ANDROID_STL_INCLUDE_DIRS : stl include paths\n\n#   ANDROID_RTTI : if rtti is enabled by the runtime\n\n#   ANDROID_EXCEPTIONS : if exceptions are enabled by the runtime\n\n#   ANDROID_GCC_TOOLCHAIN_NAME : read-only, differs from ANDROID_TOOLCHAIN_NAME only if clang is used\n\n#\n\n# Defaults:\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL_${ARCH}\n\n#   ANDROID_NDK_SEARCH_PATHS\n\n#   ANDROID_SUPPORTED_ABIS_${ARCH}\n\n#   ANDROID_SUPPORTED_NDK_VERSIONS\n",
        "Line" : 1650,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 106
    },
    "cocos2d/cmake/ios.toolchain.cmake" : {
      "ObjectId" : "df2e3facabd5cfbd0ee84c8b7ff81932246c9ae5",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is based off of the Platform/Darwin.cmake and Platform/UnixPaths.cmake\n\n# files which are included with CMake 2.8.4\n\n# It has been altered for iOS development\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options:\n\n#\n\n# IOS_PLATFORM = OS (default) or SIMULATOR\n\n#   This decides if SDKS will be selected from the iPhoneOS.platform or iPhoneSimulator.platform folders\n\n#   OS - the default, used to build for iPhone and iPad physical devices, which have an arm arch.\n\n#   SIMULATOR - used to build for the Simulator platforms, which have an x86 arch.\n\n#\n\n# CMAKE_IOS_DEVELOPER_ROOT = automatic(default) or /path/to/platform/Developer folder\n\n#   By default this location is automatcially chosen based on the IOS_PLATFORM value above.\n\n#   If set manually, it will override the default location and force the user of a particular Developer Platform\n\n#\n\n# CMAKE_IOS_SDK_ROOT = automatic(default) or /path/to/platform/Developer/SDKs/SDK folder\n\n#   By default this location is automatcially chosen based on the CMAKE_IOS_DEVELOPER_ROOT value.\n\n#   In this case it will always be the most up-to-date SDK found in the CMAKE_IOS_DEVELOPER_ROOT path.\n\n#   If set manually, this will force the use of a specific SDK version\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Macros:\n\n#\n\n# set_xcode_property (TARGET XCODE_PROPERTY XCODE_VALUE)\n\n#  A convenience macro for setting xcode specific properties on targets\n\n#  example: set_xcode_property (myioslib IPHONEOS_DEPLOYMENT_TARGET \"3.1\")\n\n#\n\n# find_host_package (PROGRAM ARGS)\n\n#  A macro used to find executable programs on the host system, not within the iOS environment.\n\n#  Thanks to the android-cmake project for providing the command\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Standard settings\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Required as of cmake 2.8.10\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Determine the cmake host system version so we know where to find the iOS SDKs\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Force the compilers to gcc for iOS\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Skip the platform compiler checks for cross compiling\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# All iOS/Darwin specific settings - some may be redundant\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Hidden visibilty is required for cxx on iOS \n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# hack: if a new cmake (which uses CMAKE_INSTALL_NAME_TOOL) runs on an old build tree\n\n# (where install_name_tool was hardcoded) and where CMAKE_INSTALL_NAME_TOOL isn't in the cache\n\n# and still cmake didn't fail in CMakeFindBinUtils.cmake (because it isn't rerun)\n\n# hardcode CMAKE_INSTALL_NAME_TOOL here to install_name_tool, so it behaves as it did before, Alex\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Setup iOS platform unless specified manually with IOS_PLATFORM\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Check the platform selection and setup for developer root\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# This causes the installers to properly locate the output libraries\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# This causes the installers to properly locate the output libraries\n",
        "Line" : 108,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# Setup iOS developer location unless specified manually with CMAKE_IOS_DEVELOPER_ROOT\n\n# Note Xcode 4.3 changed the installation location, choose the most recent one available\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Find and use the most recent iOS sdk unless specified manually with CMAKE_IOS_SDK_ROOT\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Set the sysroot default to the most recent SDK\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# set the architecture for iOS \n\n# NOTE: Currently both ARCHS_STANDARD_32_BIT and ARCHS_UNIVERSAL_IPHONE_OS set armv7 only, so set both manually\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Set the find root to the iOS developer roots and to user defined paths\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# default to searching for frameworks first\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# set up the default search directories for frameworks\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# only search the iOS sdks, not the remainder of the host filesystem\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# This little macro lets you set any XCode specific property\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# This macro lets you find executable programs on the host system\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "cocos2d/cocos/2d/CMakeLists.txt" : {
      "ObjectId" : "9268255b868f5db3ded596af676027a35a0cae90",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/cocos/3d/CMakeLists.txt" : {
      "ObjectId" : "9104284f59dbcad2ba414ccf94f3a90ebdd124e9",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/cocos/CMakeLists.txt" : {
      "ObjectId" : "c06165a7909731fbcb43a6b98bc3d12f1598d1b6",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#/****************************************************************************\n\n# Copyright (c) 2013 cocos2d-x.org\n\n# Copyright (c) 2014 martell malone\n\n# Copyright (c) 2015-2017 Chukong Technologies Inc.\n\n#\n\n# http://www.cocos2d-x.org\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n\n# ****************************************************************************/\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# this CMakeLists is to generate libcocos2d.a\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#todo: provide prebuild versions of the xx libs for all platforms\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cocos2d/cocos/base/CMakeLists.txt" : {
      "ObjectId" : "81f8ec6ef8dec9935e6b4335f1c940d86fa83c57",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/cocos/deprecated/CMakeLists.txt" : {
      "ObjectId" : "9ead0b3f8186bb0e2c40e51e983779108e50f6fe",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/cocos/editor-support/cocosbuilder/CMakeLists.txt" : {
      "ObjectId" : "55a98c370b4a9341758ddf934fa7cada599c75d8",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/cocos/editor-support/cocostudio/CMakeLists.txt" : {
      "ObjectId" : "6cb08b92c2947bfcb645355d9bd0c663079dddf2",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/cocos/editor-support/spine/CMakeLists.txt" : {
      "ObjectId" : "c895956d7fb39c82a50f3f7e42f15066638d32fc",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/cocos/math/CMakeLists.txt" : {
      "ObjectId" : "235fe82c176d3ca668ef04f5dab2d31f19861947",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/cocos/navmesh/CMakeLists.txt" : {
      "ObjectId" : "142008e13772d7ed1891f94887d581cb029b467e",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/cocos/network/CMakeLists.txt" : {
      "ObjectId" : "93066502ed4d44381830147af38b628b4b51b8b5",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/cocos/physics/CMakeLists.txt" : {
      "ObjectId" : "b31b4adef5dc112797a45feb3e8807234c1657c2",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/cocos/physics3d/CMakeLists.txt" : {
      "ObjectId" : "6e685d725e04cc93ef0ab2eb214e4a9593cbfa56",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/cocos/platform/CMakeLists.txt" : {
      "ObjectId" : "a69ee4c501ecfa45bd1e3e713f914d854708b757",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#/****************************************************************************\n\n# Copyright (c) 2015-2017 Chukong Technologies Inc.\n\n#\n\n# http://www.cocos2d-x.org\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n\n# ****************************************************************************/\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#leave andatory external stuff here also\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cocos2d/cocos/platform/android/ControllerManualAdapter/build.xml" : {
      "ObjectId" : "de1fc209f19ba115938f2e84dd6b00aa2907fa7c",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 39,
        "CharPositionInLine" : 77
      },
      "3" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 42,
        "CharPositionInLine" : 36
      },
      "4" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 79,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " version-tag: 1 ",
        "Line" : 80,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 7
    },
    "cocos2d/cocos/platform/android/java/build.xml" : {
      "ObjectId" : "885e6eed8a7f298d0ae8cc775f307bceadfc4b3e",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 39,
        "CharPositionInLine" : 77
      },
      "3" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 42,
        "CharPositionInLine" : 36
      },
      "4" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 79,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " version-tag: 1 ",
        "Line" : 80,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 7
    },
    "cocos2d/cocos/platform/android/libcocos2dx-with-controller/proguard-rules.pro" : {
      "ObjectId" : "6618e280172b5a80b77f5ab1e1c3020ab5d11c22",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in E:\\developSoftware\\Android\\SDK/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cocos2d/cocos/platform/android/libcocos2dx/proguard-rules.pro" : {
      "ObjectId" : "6618e280172b5a80b77f5ab1e1c3020ab5d11c22",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in E:\\developSoftware\\Android\\SDK/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cocos2d/cocos/renderer/CMakeLists.txt" : {
      "ObjectId" : "2f8eabe58189e302b84f184c62a95ea898bfe7a5",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/cocos/scripting/js-bindings/CMakeLists.txt" : {
      "ObjectId" : "493c4a2ae7709062f671ac0118b31ffeb3aee9a2",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#/****************************************************************************\n\n# Copyright (c) 2014-2017 Chukong Technologies Inc.\n\n#\n\n# http://www.cocos2d-x.org\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n\n# ****************************************************************************/\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#platform\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Win32\n",
        "Line" : 28,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# osx or ios\n",
        "Line" : 30,
        "CharPositionInLine" : 13
      },
      "6" : {
        "Text" : "# Assume Linux\n",
        "Line" : 33,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 7
    },
    "cocos2d/cocos/scripting/lua-bindings/CMakeLists.txt" : {
      "ObjectId" : "9e3ee87e1a38753c8dabc59aab3781b455f0ed78",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# because we have -std=c99\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "cocos2d/cocos/storage/CMakeLists.txt" : {
      "ObjectId" : "c260442b3e76cfb9f60af596fa8427f3eb916241",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/cocos/ui/CMakeLists.txt" : {
      "ObjectId" : "722c7f40badae045317644a4328a9d8aca95cf64",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#todo: android UIWebViewImpl and UIVideoPlayer\n\n# will add when doing android support\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cocos2d/cocos/vr/CMakeLists.txt" : {
      "ObjectId" : "be00df03e9d6891f11a7483d0cf53d2b204e30f8",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/extensions/CMakeLists.txt" : {
      "ObjectId" : "3e64fd0657c1c187baf18bf5168a25294de9f4ab",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/external/Box2D/CMakeLists.txt" : {
      "ObjectId" : "eff3db22eb32164b5280d83240b1b5e771310e04",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/external/flatbuffers/CMakeLists.txt" : {
      "ObjectId" : "6b87c6feccee7de671f8a928db1cf3698b4ea006",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/external/jpeg/CMakeLists.txt" : {
      "ObjectId" : "a64206c5180acce3b0bfd6b9d45d3d7fc5181a1d",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/external/lua/lua/CMakeLists.txt" : {
      "ObjectId" : "81febeffb3aed6e15a14f39df3d974489ee7b3c7",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/external/lua/tolua/CMakeLists.txt" : {
      "ObjectId" : "ccede5366be541122b2430ae40eba42b5545e634",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/external/recast/CMakeLists.txt" : {
      "ObjectId" : "de9eac050b7845a083147f1f383d9f1ca1e05a27",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/external/tiff/CMakeLists.txt" : {
      "ObjectId" : "0df70c21e05aa5a1703c258600260b426d834b6f",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/external/tinyxml2/CMakeLists.txt" : {
      "ObjectId" : "f2fd32373501fa2a974f31036ee31eb0919689a9",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/external/unzip/CMakeLists.txt" : {
      "ObjectId" : "fb620e74b42b2b7893011c04945dc27ec8857f2e",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/external/webp/CMakeLists.txt" : {
      "ObjectId" : "432330aab24c9239f37f57a6d0b29119032ebf06",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/external/xxhash/CMakeLists.txt" : {
      "ObjectId" : "18f6cada0af67a22df21c49c218017f3f8664c93",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cocos2d/plugin/plugins/admob/proj.android/build.xml" : {
      "ObjectId" : "1346614904995e793047c208f2bb55b0390bd2ca",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "cocos2d/plugin/plugins/alipay/proj.android/build.xml" : {
      "ObjectId" : "401cd6fab8c8ae52cf1537e4fec47c8e0785e405",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "cocos2d/plugin/plugins/facebook/proj.android/DependProject/build.xml" : {
      "ObjectId" : "018d208beea75df22e018aa139d7322bc66a70db",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "cocos2d/plugin/plugins/facebook/proj.android/build.xml" : {
      "ObjectId" : "1a87354aed1c196a26bfe3a7c7e177701e7e8aa2",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "cocos2d/plugin/plugins/facebookads/proj.android/build.xml" : {
      "ObjectId" : "f6e154a2113e46430c622730c8ecf46743adddcb",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "cocos2d/plugin/plugins/flurry/proj.android/build.xml" : {
      "ObjectId" : "d38d66c6a9f83416d622cb094c75dd36c1aa39d1",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "cocos2d/plugin/plugins/googleplay/proj.android/build.xml" : {
      "ObjectId" : "d2ff369730372246fb841e476f708654c829570f",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "cocos2d/plugin/plugins/nd91/proj.android/build.xml" : {
      "ObjectId" : "1841ed089f120513b77d9386fbe6858cb36bbb97",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "cocos2d/plugin/plugins/qh360/proj.android/build.xml" : {
      "ObjectId" : "312e3c6bb9f117642a7524733dd78f7553b205fe",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "cocos2d/plugin/plugins/twitter/proj.android/build.xml" : {
      "ObjectId" : "10e9663ff525172936b8d4929db2ff4089072f52",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "cocos2d/plugin/plugins/uc/proj.android/build.xml" : {
      "ObjectId" : "363f87a9338f2f2f1a66943413d03e1c999ffff3",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "cocos2d/plugin/plugins/umeng/proj.android/build.xml" : {
      "ObjectId" : "3772a508b829abf2d82845b03185a068364a4d18",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "cocos2d/plugin/plugins/weibo/proj.android/build.xml" : {
      "ObjectId" : "77909e9ad86d4823f04989bc08930b4e1202ebce",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "cocos2d/plugin/protocols/proj.android/build.xml" : {
      "ObjectId" : "596b7e8cf229028e414850abb7825a188104cdab",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "cocos2d/plugin/samples/HelloPlugins/proj.android/build.xml" : {
      "ObjectId" : "6b1565b670ed80c037b782d065d4e6ff56a2012c",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 39,
        "CharPositionInLine" : 77
      },
      "3" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 42,
        "CharPositionInLine" : 36
      },
      "4" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 79,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " version-tag: 1 ",
        "Line" : 80,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 7
    },
    "cocos2d/plugin/samples/HelloPluginsLua/frameworks/runtime-src/proj.android/build.xml" : {
      "ObjectId" : "4053c775170c7f037d942e532214d99af5704c2d",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 39,
        "CharPositionInLine" : 77
      },
      "3" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 42,
        "CharPositionInLine" : 36
      },
      "4" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 79,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " version-tag: 1 ",
        "Line" : 80,
        "CharPositionInLine" : 28
      },
      "7" : {
        "Text" : " Redefine project.all.jars.path before -compile executes ",
        "Line" : 83,
        "CharPositionInLine" : 73
      },
      "CommentCount" : 8
    },
    "cocos2d/tests/cpp-empty-test/CMakeLists.txt" : {
      "ObjectId" : "1fc403c852a517b5f0f1671708fd46ca369d84c0",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#/****************************************************************************\n\n# Copyright (c) 2015-2017 Chukong Technologies Inc.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# http://www.cocos2d-x.org\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n\n# ****************************************************************************/\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add the executable\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#get our resources\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#get our dlls\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#Visual Studio Defaults to wrong type\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "cocos2d/tests/cpp-empty-test/proj.android-studio/app/proguard-rules.pro" : {
      "ObjectId" : "6618e280172b5a80b77f5ab1e1c3020ab5d11c22",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in E:\\developSoftware\\Android\\SDK/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cocos2d/tests/cpp-empty-test/proj.android/build.xml" : {
      "ObjectId" : "c1d9bcdfcaae7895d28ee1a3a5e48090e8c5c605",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n \n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n \n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n \n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n \n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n \n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n \n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n \n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 39,
        "CharPositionInLine" : 77
      },
      "3" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 42,
        "CharPositionInLine" : 36
      },
      "4" : {
        "Text" : " extension targets. Uncomment the ones where you want to do custom work\n     in between standard targets ",
        "Line" : 50,
        "CharPositionInLine" : 37
      },
      "5" : {
        "Text" : "\n    <target name=\"-pre-build\">\n    </target>\n    <target name=\"-pre-compile\">\n    </target>\n \n    /* This is typically used for code obfuscation.\n       Compiled code location: ${out.classes.absolute.dir}\n       If this is not done in place, override ${out.dex.input.absolute.dir} */\n    <target name=\"-post-compile\">\n    </target>\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : " Import the actual build file.\n \n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n \n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 82,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "cocos2d/tools/cocos2d-console/plugins/plugin_compile/build_web/template/build.xml" : {
      "ObjectId" : "37059ef8043190ba5c9f2e4bcea05f474ed8acf4",
      "LastModified" : "2017-12-07T10:21:14Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 70,
    "QMAKE" : 3,
    "ANT" : 20
  },
  "ElapsedTime" : 7359
}