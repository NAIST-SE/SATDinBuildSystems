{
  "Repository" : "20901589",
  "Revision" : "HEAD",
  "ObjectId" : "b98d6250ed1e1487b55ea10073679d6041b8eb13",
  "CommitTime" : "2019-03-27T21:37:50Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "24483ec2844cff14a29a2bface84431007d10940",
      "LastModified" : "2018-07-18T17:17:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(Boost_USE_MULTITHREADED ON)\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Deactivate warning C4251\r\n",
        "Line" : 8,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Set the possible values of build type for cmake-gui\r\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#find_package (FreeImage)\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#find_package (SDL_Mixer)\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#INCLUDE (FindOggVorbis)\r\n\n#find_package (ALMixer)\r\n\n#find_package(Boost COMPONENTS chrono date_time program_options filesystem system thread REQUIRED)\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#find_package(OGRE COMPONENTS Bites RTShaderSystem)\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "android/build.xml" : {
      "ObjectId" : "13a27f4727ed893236f57f0e0345b137fa6872ad",
      "LastModified" : "2015-06-05T20:03:33Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "cmake/FindALMixer.cmake" : {
      "ObjectId" : "235498e24ba413d905c467ff11eba9c158c7f0bf",
      "LastModified" : "2015-11-22T21:02:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find almixer\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Once done this will define\r\n\n#\r\n\n# ALMIXER_FOUND - system has almixer\r\n\n# ALMIXER_INCLUDE_DIRS - the almixer include directory\r\n\n# ALMIXER_LIBRARIES - the libraries needed to use almixer\r\n\n#\r\n\n# $ALMIXER_HOME is an environment variable used for finding almixer.\r\n\n#\r\n\n# Borrowed from The Mana World\r\n\n# http://themanaworld.org/\r\n\n#\r\n\n# Several changes and additions by Fabian 'x3n' Landau\r\n\n# Lots of simplifications by Adrian Friedli\r\n\n# > www.orxonox.net <\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    PATH_SUFFIXES lib\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set ALMIXER_FOUND to TRUE if\r\n\n# all listed variables are TRUE\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindBtOgre.cmake" : {
      "ObjectId" : "230c77913df203270787b378b4ac7e3eeb8bb4dc",
      "LastModified" : "2017-05-25T06:35:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find BtOgre\r\n\n# Once done this will define\r\n\n#\r\n\n# BTOGRE_FOUND - system has BtOgre\r\n\n# BtOgre_INCLUDE_DIRS - the BtOgre include directory\r\n\n# BtOgre_LIBRARIES - the libraries needed to use BtOgre\r\n\n#\r\n\n# $BTOGRE_HOME is an environment variable used for finding BtOgre.\r\n\n#\r\n\n# Borrowed from The Mana World\r\n\n# http://themanaworld.org/\r\n\n#\r\n\n# Several changes and additions by Fabian 'x3n' Landau\r\n\n# Lots of simplifications by Adrian Friedli\r\n\n# > www.orxonox.net <\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set BtOgre_FOUND to TRUE if\r\n\n# all listed variables are TRUE\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindBulletlibs.cmake" : {
      "ObjectId" : "ec5d7d47a82837cc839383d056c4f4b7b96a7266",
      "LastModified" : "2017-05-25T06:35:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Bullet\r\n\n# Once done this will define\r\n\n#\r\n\n# BULLLET_FOUND - system has Bullet\r\n\n# BULLET_INCLUDE_DIRS - the Bullet include directory\r\n\n# BULLET_LIBRARIES - the libraries needed to use Bullet\r\n\n#\r\n\n# $BULLET_HOME is an environment variable used for finding Bullet.\r\n\n#\r\n\n# Borrowed from The Mana World\r\n\n# http://themanaworld.org/\r\n\n#\r\n\n# Several changes and additions by Fabian 'x3n' Landau\r\n\n# Lots of simplifications by Adrian Friedli\r\n\n# > www.orxonox.net <\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set Bullet_FOUND to TRUE if\r\n\n# all listed variables are TRUE\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindENet.cmake" : {
      "ObjectId" : "627dcaa850aacd8bbf6bd3513c11980a44ec17f4",
      "LastModified" : "2018-06-20T22:12:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find enet\n\n# Once done this will define\n\n#\n\n# ENET_FOUND - system has enet\n\n# ENet_INCLUDE_DIRS - the enet include directory\n\n# ENet_LIBRARIES - the libraries needed to use enet\n\n#\n\n# $ENET_HOME is an environment variable used for finding enet.\n\n#\n\n# Borrowed from The Mana World\n\n# http://themanaworld.org/\n\n#\n\n# Several changes and additions by Fabian 'x3n' Landau\n\n# Lots of simplifications by Adrian Friedli\n\n# > www.orxonox.net <\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set ENET_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#FIND_PACKAGE_HANDLE_STANDARD_ARGS(ENet DEFAULT_MSG ENet_LIBRARY ENet_INCLUDE_DIRS)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindFreeImage.cmake" : {
      "ObjectId" : "4935014edea51a2f7eb17936391a63981ff35a51",
      "LastModified" : "2015-11-22T21:02:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\r\n\n# This file is part of the CMake build system for OGRE\r\n\n#     (Object-oriented Graphics Rendering Engine)\r\n\n# For the latest info, see http://www.ogre3d.org/\r\n\n#\r\n\n# The contents of this file are placed in the public domain. Feel\r\n\n# free to make use of it in any way you like.\r\n\n#-------------------------------------------------------------------\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find FreeImage\r\n\n# Once done, this will define\r\n\n#\r\n\n#  FreeImage_FOUND - system has FreeImage\r\n\n#  FreeImage_INCLUDE_DIRS - the FreeImage include directories \r\n\n#  FreeImage_LIBRARIES - link these to use FreeImage\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\r\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# construct search paths\r\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# redo search if prefix path changed\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindJXR.cmake" : {
      "ObjectId" : "1687dc60c2998b13e44c17ee319610178a4f1e19",
      "LastModified" : "2017-05-25T06:35:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenJPEG2 \n\n# Once done this will define\n\n#\n\n# JXR_FOUND - system has JXR\n\n# JXR_INCLUDE_DIRS - the JXR include directory\n\n# JXR_LIBRARIES - the libraries needed to use JXR\n\n#\n\n# $JXR_HOME is an environment variable used for finding JXR.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    PATH_SUFFIXES lib\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set JXR_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindLibRaw.cmake" : {
      "ObjectId" : "c6187d952a809e85a45403088fa7194257d083b3",
      "LastModified" : "2017-05-25T06:35:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find LibRaw\n\n# Find the LibRaw library <http://www.libraw.org>\n\n# This module defines\n\n#  LibRaw_VERSION_STRING, the version string of LibRaw\n\n#  LibRaw_INCLUDE_DIR, where to find libraw.h\n\n#  LibRaw_LIBRARIES, the libraries needed to use LibRaw (non-thread-safe)\n\n#  LibRaw_r_LIBRARIES, the libraries needed to use LibRaw (thread-safe)\n\n#  LibRaw_DEFINITIONS, the definitions needed to use LibRaw (non-thread-safe)\n\n#  LibRaw_r_DEFINITIONS, the definitions needed to use LibRaw (thread-safe)\n\n#\n\n# Copyright (c) 2013, Pino Toscano <pino at kde dot org>\n\n# Copyright (c) 2013, Gilles Caulier <caulier dot gilles at gmail dot com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindMyGUI.cmake" : {
      "ObjectId" : "6a61f560bb6f3db65ffae7d5d87f749caca25e0b",
      "LastModified" : "2017-05-25T06:35:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find MyGUI includes and library\r\n\n#\r\n\n# This module defines\r\n\n# MYGUI_INCLUDE_DIRS\r\n\n# MYGUI_LIBRARIES, the libraries to link against to use MYGUI.\r\n\n# MYGUI_LIB_DIR, the location of the libraries\r\n\n# MYGUI_FOUND, If false, do not try to use MYGUI\r\n\n#\r\n\n# Copyright  2007, Matt Williams\r\n\n#\r\n\n# Redistribution and use is allowed according to the terms of the BSD license.\r\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# IF (MYGUI_LIBRARIES AND MYGUI_INCLUDE_DIRS)\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# SET(MYGUI_FIND_QUIETLY TRUE)\r\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# ENDIF (MYGUI_LIBRARIES AND MYGUI_INCLUDE_DIRS)\r\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Windows\r\n",
        "Line" : 22,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "#Unix\r\n",
        "Line" : 100,
        "CharPositionInLine" : 13
      },
      "6" : {
        "Text" : "# freetype is needed on OS X for static builds\r\n",
        "Line" : 124,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# Linux shared library\r\n",
        "Line" : 129,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# We need explicit freetype libs only on OS X for static build\r\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/FindOggVorbis.cmake" : {
      "ObjectId" : "2c4c53155b8528e9703c652f4904dc0d757743ed",
      "LastModified" : "2017-05-25T06:35:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Ogg and Vorbis librariesCKAGE_HANDLE_STANDARD_ARGS(OGGVORBIS DEFAULT_MSG PTHREADS_LIBRARY PTHREADS_INCLUDE_DIRS)\r\n\n# Once done this will define\r\n\n#\r\n\n# OGGVORBIS_FOUND - system has pthreads\r\n\n# OGGVORBIS_INCLUDE_DIRS - the pthreads include directory\r\n\n# OGGVORBIS_LIBRARIES - the libraries needed to use pthreads\r\n\n#\r\n\n# $OGG_HOME is an environment variable used for finding ogg.  \r\n\n# $VORBIS_HOME is an environment variable used for finding vorbis.\r\n\n#\r\n\n# Borrowed from The Mana World\r\n\n# http://themanaworld.org/\r\n\n#\r\n\n# Several changes and additions by Fabian 'x3n' Landau\r\n\n# Lots of simplifications by Adrian Friedli\r\n\n# > www.orxonox.net <\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    PATH_SUFFIXES \r\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    PATH_SUFFIXES \r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PTHREADS_FOUND to TRUE if\r\n\n# all listed variables are TRUE\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#MARK_AS_ADVANCED(EADS_LIBRARY PTHREADS_LIBRARIES PTHREADS_INCLUDE_DIRS)\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindOgreOggSound.cmake" : {
      "ObjectId" : "4698eec1c2be99bf6a915780c488e1f7b0b56fd9",
      "LastModified" : "2017-05-25T06:35:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find enet\r\n\n# Once done this will define\r\n\n#\r\n\n# OGREOGGSOUND_FOUND - system has enet\r\n\n# OgreOggSound_INCLUDE_DIRS - the enet include directory\r\n\n# OgreOggSound_LIBRARIES - the libraries needed to use enet\r\n\n#\r\n\n# $OGREOGGSOUND_HOME is an environment variable used for finding enet.\r\n\n#\r\n\n# Borrowed from The Mana World\r\n\n# http://themanaworld.org/\r\n\n#\r\n\n# Several changes and additions by Fabian 'x3n' Landau\r\n\n# Lots of simplifications by Adrian Friedli\r\n\n# > www.orxonox.net <\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    c:/mingw/msys/1.0\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set ENET_FOUND to TRUE if\r\n\n# all listed variables are TRUE\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindOpenEXR.cmake" : {
      "ObjectId" : "93b05dd999c12605973c1a0a2020a72aece88b65",
      "LastModified" : "2017-05-25T06:35:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the OpenEXR libraries\n\n# This check defines:\n\n#\n\n#  OPENEXR_FOUND - system has OpenEXR\n\n#  OPENEXR_INCLUDE_DIR - OpenEXR include directory\n\n#  OPENEXR_LIBRARIES - Libraries needed to use OpenEXR\n\n#  OPENEXR_DEFINITIONS - definitions required to use OpenEXR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/FindOpenJPEG2.cmake" : {
      "ObjectId" : "9a5d3efd452ac86812266090e598218d9b104b20",
      "LastModified" : "2017-05-25T06:35:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenJPEG2 \n\n# Once done this will define\n\n#\n\n# OPENJPEG2_FOUND - system has OpenJPEG2\n\n# OPENJPEG2_INCLUDE_DIRS - the OPENJPEG2 include directory\n\n# OPENJPEG2_LIBRARIES - the libraries needed to use OpenJPEG2\n\n#\n\n# $OPENJPEG2_HOME is an environment variable used for finding OPENJPEG2.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    PATH_SUFFIXES lib\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set ENET_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindOpenSteer.cmake" : {
      "ObjectId" : "f49a2dd682f293fa3d409be23d09b14c56f6b3c2",
      "LastModified" : "2017-05-25T06:35:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenSteer \r\n\n# Once done this will define\r\n\n#\r\n\n# OpenSteer_FOUND - system has OpenSteer\r\n\n# OpenSteer_INCLUDE_DIRS - the OpenSteer include directory\r\n\n# OpenSteer_LIBRARIES - the libraries needed to use OpenSteer \r\n\n#\r\n\n# $OpenSteer_HOME is an environment variable used for finding OpenSteer.\r\n\n#\r\n\n# Borrowed from The Mana World\r\n\n# http://themanaworld.org/\r\n\n#\r\n\n# Several changes and additions by Fabian 'x3n' Landau\r\n\n# Lots of simplifications by Adrian Friedli\r\n\n# > www.orxonox.net <\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set OpenSteer_FOUND to TRUE if\r\n\n# all listed variables are TRUE\r\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindPOCO.cmake" : {
      "ObjectId" : "6b6d7fa34061d6c219d3f2848e6c572fb7cbc97b",
      "LastModified" : "2017-05-25T06:35:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find POCO libraries\n\n# Once done, this will define\n\n#\n\n#  POCO_FOUND - system has POCO\n\n#  POCO_INCLUDE_DIRS - the POCO include directories \n\n#  POCO_LIBRARIES - link these to use POCO\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# construct search paths\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Look for Poco's Util package\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Look for Poco's Net package\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Look for Poco's NetSSL package\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Look for Poco's XML package\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/FindPkgMacros.cmake" : {
      "ObjectId" : "3f588ba1fd4ef356ab9df7b2b590440ebcd229e5",
      "LastModified" : "2017-05-25T06:35:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\r\n\n# This file is part of the CMake build system for OGRE\r\n\n#     (Object-oriented Graphics Rendering Engine)\r\n\n# For the latest info, see http://www.ogre3d.org/\r\n\n#\r\n\n# The contents of this file are placed in the public domain. Feel\r\n\n# free to make use of it in any way you like.\r\n\n#-------------------------------------------------------------------\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################################\r\n\n# Provides some common functionality for the FindPackage modules\r\n\n##################################################################\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Begin processing of package\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Display a status message unless FIND_QUIETLY is set\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get environment variable, define it as ENV_$var and make sure backslashes are converted to forward slashes\r\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# replace won't work if var is blank\r\n",
        "Line" : 31,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Construct search paths for includes and libraries from a PREFIX_PATH\r\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# clear cache variables if a certain variable changed\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# test against internal check variable\r\n\n# HACK: Apparently, adding a variable to the cache cleans up the list\r\n\n# a bit. We need to also remove any empty strings from the list, but\r\n\n# at the same time ensure that we are actually dealing with a list.\r\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Try to get some hints from pkg-config, if available\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Couple a set of release AND debug libraries (or frameworks)\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Generate debug names from given release names\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add the parent dir from DIR to VAR \r\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Do the final processing for the package find.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# skip if already processed during this run\r\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Slightly customised framework finder\r\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# These could be arrays of paths, add each individually to the search paths\r\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 17
    },
    "cmake/FindPthreads.cmake" : {
      "ObjectId" : "9c58785cb7463a6a0971aa7d678305456529998d",
      "LastModified" : "2017-05-25T06:35:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find pthreads\r\n\n# Once done this will define\r\n\n#\r\n\n# PTHREADS_FOUND - system has pthreads\r\n\n# PTHREADS_INCLUDE_DIRS - the pthreads include directory\r\n\n# PTHREADS_LIBRARIES - the libraries needed to use pthreads\r\n\n#\r\n\n# $PTHREADS_HOME is an environment variable used for finding pthreads.\r\n\n#\r\n\n# Borrowed from The Mana World\r\n\n# http://themanaworld.org/\r\n\n#\r\n\n# Several changes and additions by Fabian 'x3n' Landau\r\n\n# Lots of simplifications by Adrian Friedli\r\n\n# > www.orxonox.net <\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    PATH_SUFFIXES lib\r\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PTHREADS_FOUND to TRUE if\r\n\n# all listed variables are TRUE\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindSDL2.cmake" : {
      "ObjectId" : "0df05066a6e30d9e0f4f108d1f0db216f49ac7af",
      "LastModified" : "2017-05-25T06:35:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL2 library\r\n\n# This module defines\r\n\n# SDL2_LIBRARY, the name of the library to link against\r\n\n# SDL2_FOUND, if false, do not try to link to SDL2\r\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\r\n\n#\r\n\n# This module responds to the the flag:\r\n\n# SDL2_BUILDING_LIBRARY\r\n\n# If this is defined, then no SDL2_main will be linked in because\r\n\n# only applications need main().\r\n\n# Otherwise, it is assumed you are building an application and this\r\n\n# module will attempt to locate and set the the proper link flags\r\n\n# as part of the returned SDL2_LIBRARY variable.\r\n\n#\r\n\n# Don't forget to include SDL2main.h and SDL2main.m your project for the\r\n\n# OS X framework based version. (Other versions link to -lSDL2main which\r\n\n# this module will try to find on your behalf.) Also for OS X, this\r\n\n# module will automatically add the -framework Cocoa on your behalf.\r\n\n#\r\n\n#\r\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\r\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\r\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\r\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\r\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\r\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\r\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\r\n\n#\r\n\n#\r\n\n# $SDL2DIR is an environment variable that would\r\n\n# correspond to the ./configure --prefix=$SDL2DIR\r\n\n# used in building SDL2.\r\n\n# l.e.galup 9-20-02\r\n\n#\r\n\n# Modified by Eric Wing.\r\n\n# Added code to assist with automated building by using environmental variables\r\n\n# and providing a more controlled/consistent search behavior.\r\n\n# Added new modifications to recognize OS X frameworks and\r\n\n# additional Unix paths (FreeBSD, etc).\r\n\n# Also corrected the header search path to follow \"proper\" SDL2 guidelines.\r\n\n# Added a search for SDL2main which is needed by some platforms.\r\n\n# Added a search for threads which is needed by some platforms.\r\n\n# Added needed compile switches for MinGW.\r\n\n#\r\n\n# On OSX, this will prefer the Framework version (if found) over others.\r\n\n# People will have to manually change the cache values of\r\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\r\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\r\n\n#\r\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\r\n\n# This needed to change because \"proper\" SDL2 convention\r\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\r\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\r\n\n#\r\n\n# Ported by Johnny Patterson. This is a literal port for SDL2 of the FindSDL.cmake\r\n\n# module with the minor edit of changing \"SDL\" to \"SDL2\" where necessary. This\r\n\n# was not created for redistribution, and exists temporarily pending official\r\n\n# SDL2 CMake modules.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\r\n\n# Copyright 2003-2009 Kitware, Inc.\r\n\n#\r\n\n# Distributed under the OSI-approved BSD License (the \"License\");\r\n\n# see accompanying file Copyright.txt for details.\r\n\n#\r\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\r\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\n# See the License for more information.\r\n\n#=============================================================================\r\n\n# (To distribute this file outside of CMake, substitute the full\r\n\n# License text for the above reference.)\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\r\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# DarwinPorts\r\n",
        "Line" : 83,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# Blastwave\r\n",
        "Line" : 84,
        "CharPositionInLine" : 9
      },
      "5" : {
        "Text" : "#MESSAGE(\"SDL2_INCLUDE_DIR is ${SDL2_INCLUDE_DIR}\")\r\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#MESSAGE(\"SDL2_LIBRARY_TEMP is ${SDL2_LIBRARY_TEMP}\")\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\r\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\r\n\n# seem to provide SDL2main for compatibility even though they don't\r\n\n# necessarily need it.\r\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# SDL2 may require threads on your system.\r\n\n# The Apple build may not need an explicit flag because one of the\r\n\n# frameworks may already provide it.\r\n\n# But for non-OSX systems, I will use the CMake Threads package.\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# MinGW needs an additional library, mwindows\r\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\r\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# For SDL2main\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\r\n\n# CMake doesn't display the -framework Cocoa string in the UI even\r\n\n# though it actually is there if I modify a pre-used variable.\r\n\n# I think it has something to do with the CACHE STRING.\r\n\n# So I use a temporary variable until the end so I can set the\r\n\n# \"real\" variable in one-shot.\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\r\n\n# In fact, there seems to be a problem if I used the Threads package\r\n\n# and try using this line, so I'm just skipping it entirely for OS X.\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# For MinGW library\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "cmake/FindSDL_Mixer.cmake" : {
      "ObjectId" : "b3afb3ba9bbe3b29facf0001a0ba26da79c86e75",
      "LastModified" : "2017-05-25T06:35:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find SDL_Mixer\n\n# Once done this will define\n\n#\n\n# SDL_Mixer_FOUND - system has SDL_Mixer\n\n# SDL_Mixer_INCLUDE_DIRS - the SDL_Mixer include directory\n\n# TinyXML2_LIBRARIES - the libraries needed to use SDL_Mixer\n\n#\n\n# $SDL_Mixer_HOME is an environment variable used for finding SDL_Mixer.\n\n#\n\n# Borrowed from The Mana World\n\n# http://themanaworld.org/\n\n#\n\n# Several changes and additions by Fabian 'x3n' Landau\n\n# Lots of simplifications by Adrian Friedli\n\n# > www.orxonox.net <\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set SDL_Mixer_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindTinyXML.cmake" : {
      "ObjectId" : "cf57ba810dd096818537dad21d5ba5de221cd9e8",
      "LastModified" : "2017-05-25T06:35:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find enet\r\n\n# Once done this will define\r\n\n#\r\n\n# TINYXML_FOUND - system has enet\r\n\n# TinyXML_INCLUDE_DIRS - the BtOgre include directory\r\n\n# TinyXML_LIBRARIES - the libraries needed to use enet\r\n\n#\r\n\n# $BTOGRE_HOME is an environment variable used for finding enet.\r\n\n#\r\n\n# Borrowed from The Mana World\r\n\n# http://themanaworld.org/\r\n\n#\r\n\n# Several changes and additions by Fabian 'x3n' Landau\r\n\n# Lots of simplifications by Adrian Friedli\r\n\n# > www.orxonox.net <\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set ENET_FOUND to TRUE if\r\n\n# all listed variables are TRUE\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindTinyXML2.cmake" : {
      "ObjectId" : "43e1fc64b01821f7b55cecea8d83a841fcc4374a",
      "LastModified" : "2017-05-25T06:35:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find TinyXML2\r\n\n# Once done this will define\r\n\n#\r\n\n# TINYXML2_FOUND - system has TinyXML2\r\n\n# TinyXML2_INCLUDE_DIRS - the BtOgre include directory\r\n\n# TinyXML2_LIBRARIES - the libraries needed to use TinyXML2\r\n\n#\r\n\n# $TINYXML2_HOME is an environment variable used for finding TinyXML2.\r\n\n#\r\n\n# Borrowed from The Mana World\r\n\n# http://themanaworld.org/\r\n\n#\r\n\n# Several changes and additions by Fabian 'x3n' Landau\r\n\n# Lots of simplifications by Adrian Friedli\r\n\n# > www.orxonox.net <\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set TINYXML2_FOUND to TRUE if\r\n\n# all listed variables are TRUE\r\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindWebP.cmake" : {
      "ObjectId" : "fa67806f87797e26a9d0dac948025ad2d9c1cbff",
      "LastModified" : "2017-05-25T06:35:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find WebP.\n\n# Once done, this will define\n\n#\n\n#  WEBP_FOUND - system has WebP.\n\n#  WEBP_INCLUDE_DIRS - the WebP. include directories\n\n#  WEBP_LIBRARIES - link these to use WebP.\n\n#\n\n# Copyright (C) 2012 Raphael Kubo da Costa <rakuco@webkit.org>\n\n# Copyright (C) 2013 Igalia S.L.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1.  Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n# 2.  Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND ITS CONTRIBUTORS ``AS\n\n# IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n\n# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\n# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ITS\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n\n# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\n# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#find_package(PkgConfig)\n\n#pkg_check_modules(WEBP libwebp)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Older installations of libwebp do not install a pkgconfig file, so we fall\n\n# back to a manual search for a libwebp header file.\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# WEBP_INCLUDE_DIRS is often empty, so we rely only on WEBP_LIBRARIES.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/OGREConfig.cmake" : {
      "ObjectId" : "88227ccf42ddf4f8a9c4c49031aae86ae811d2df",
      "LastModified" : "2018-07-18T17:17:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find OGRE includes and library\n\n#\n\n# This module defines\n\n#  OGRE_INCLUDE_DIRS - the OGRE include directories \n\n#  OGRE_LIBRARIES - link these to use the OGRE\n\n#  OGRE_LIBRARY_DIRS, the location of the libraries\n\n#  OGRE_STATIC - whther ogre was build as static lib\n\n#  OGRE_${COMPONENT}_FOUND - ${COMPONENT} is available\n\n#  OGRE_${COMPONENT}_LIBRARIES - link these to only use ${COMPONENT} \n\n#  OGRE_PLUGIN_DIR - The directory where the OGRE plugins are located\n\n#  OGRE_MEDIA_DIR - The directory where the OGRE sample media is located\n\n#  OGRE_CONFIG_DIR - The directory where the OGRE config files are located\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "####### Expanded from @PACKAGE_INIT@ by configure_package_config_file() #######\n\n####### Any changes to this file will be overwritten by the next CMake run ####\n\n####### The input file was OGREConfig.cmake.in                            ########\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "####################################################################################\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# backwards compatibility\n",
        "Line" : 73,
        "CharPositionInLine" : 54
      },
      "5" : {
        "Text" : "## COMPONENTS\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## PLUGINS\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# glXXw uses dlopen\n",
        "Line" : 164,
        "CharPositionInLine" : 49
      },
      "8" : {
        "Text" : "# plugins folder\n",
        "Line" : 165,
        "CharPositionInLine" : 63
      },
      "9" : {
        "Text" : "# must come last in case of static build\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/PrecompiledHeader.cmake" : {
      "ObjectId" : "900f0b84f516194d4a5a1f796a1c738e0f77dbe6",
      "LastModified" : "2018-07-18T17:17:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\r\n\n# This file is part of the CMake build system for OGRE\r\n\n#     (Object-oriented Graphics Rendering Engine)\r\n\n# For the latest info, see http://www.ogre3d.org/\r\n\n#\r\n\n# The contents of this file are placed in the public domain. Feel\r\n\n# free to make use of it in any way you like.\r\n\n#-------------------------------------------------------------------\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################################\r\n\n# Support macro to use a precompiled header\r\n\n# Usage:\r\n\n#   use_precompiled_header(TARGET HEADER_FILE SRC_FILE)\r\n\n##################################################################\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# disabled because it seems to increase compile time\r\n\n## this is some serious hack... we definitely need native \r\n\n## support in CMake for this!\r\n\n## we will generate the precompiled header via a workaround\r\n\n## first give the header a new name with the proper extension\r\n\n#set(PRECOMP_HEADER ${CMAKE_CURRENT_BINARY_DIR}/hacked/${HEADER}.gch)\r\n\n#configure_file(${HEADER_FILE} ${PRECOMP_HEADER} COPYONLY)\r\n\n## retrieve some info about the target's build settings\r\n\n#get_target_property(${TARGET} PRECOMP_TYPE TYPE)\r\n\n#if (PRECOMP_TYPE STREQUAL \"SHARED_LIBRARY\")\r\n\n#  set(PRECOMP_LIBTYPE \"SHARED\")\r\n\n#else ()\r\n\n#  set(PRECOMP_LIBTYPE \"STATIC\")\r\n\n#endif ()\r\n\n#get_target_property(${TARGET} PRECOMP_DEFINITIONS COMPILE_DEFINITIONS)\r\n\n#get_target_property(${TARGET} PRECOMP_FLAGS COMPILE_FLAGS)\r\n\n#\r\n\n## add a new target which compiles the header\r\n\n#add_library(__precomp_header ${PRECOMP_LIBTYPE} ${PRECOMP_HEADER})\r\n\n#add_dependencies(${TARGET} __precomp_header)\r\n\n#set_target_properties(__precomp_header PROPERTIES\r\n\n#  COMPILE_DEFINITIONS ${PRECOMP_DEFINITIONS}\r\n\n#  COMPILE_FLAGS ${PRECOMP_FLAGS}\r\n\n#  HAS_CXX TRUE\r\n\n#)\r\n\n#set_source_files_properties(${PRECOMP_HEADER} PROPERTIES\r\n\n#  HEADER_FILE_ONLY FALSE\r\n\n#  KEEP_EXTENSION TRUE\r\n\n#  COMPILE_FLAGS \"-x c++-header\"\r\n\n#  LANGUAGE CXX\r\n\n#)\r\n\n#\r\n\n## finally, we need to ensure that gcc can find the precompiled header\r\n\n## this is another dirty hack\r\n\n#include_directories(BEFORE \"${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/__precomp_header.dir/hacked\")\r\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/PreprocessorUtils.cmake" : {
      "ObjectId" : "6c366fffda28a7aa513ba34407aa99eb4fdf6e0c",
      "LastModified" : "2018-07-18T17:17:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\r\n\n# This file is part of the CMake build system for OGRE\r\n\n#     (Object-oriented Graphics Rendering Engine)\r\n\n# For the latest info, see http://www.ogre3d.org/\r\n\n#\r\n\n# The contents of this file are placed in the public domain. Feel\r\n\n# free to make use of it in any way you like.\r\n\n#-------------------------------------------------------------------\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/config.h.cmake" : {
      "ObjectId" : "192d5204e291561ab8ebd2c9298c5ab0642df4e7",
      "LastModified" : "2018-07-18T17:17:02Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 25,
    "CMAKESOURCE" : 1,
    "ANT" : 1
  },
  "ElapsedTime" : 2002
}