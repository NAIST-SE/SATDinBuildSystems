{
  "Repository" : "72675799",
  "Revision" : "HEAD",
  "ObjectId" : "a23441033f92c2e1dc85d2334098a52470ebff06",
  "CommitTime" : "2018-06-14T23:47:43Z",
  "Files" : {
    "source/CMakeLists.txt" : {
      "ObjectId" : "62d015fd4e2cd5d2dd4bb84af24ec05ce49e90c9",
      "LastModified" : "2018-05-09T23:03:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Grab all headers\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Grab ImGui source files\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Setup game vs platform segment files, we only include headers in game\n\n#regardless of which segment they are used in \n\n#because its easier to read in a visual studio project without explicitly separating them in code\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compile them to an executable and a dll\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Load libraries (must come after add_executable)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Warning level 4\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#export exchange_state to support hotloading\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#this sets the name of the pdb so it's different everytime\n\n#that way we can do hotloading without overwriting an in-use PDB\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#link CRT statically\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#run program in build dir when running from visual studio\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Remove visual studio header vs source file folders (\"filters\"/\"source groups\")\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "thirdParty/glm/CMakeLists.txt" : {
      "ObjectId" : "d60a887712d6b0346b52b4748c3d87f00340b931",
      "LastModified" : "2017-09-26T20:06:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "thirdParty/ogg/Makefile.am" : {
      "ObjectId" : "142699d35608e1bbe175746ef0073f8f2e01fb61",
      "LastModified" : "2017-10-25T05:04:41Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "thirdParty/vorbis/Makefile.am" : {
      "ObjectId" : "dbba34e55974a19203f0c094e91a3ed69298e150",
      "LastModified" : "2017-10-25T05:04:41Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 2,
    "AUTOMAKE" : 2
  },
  "ElapsedTime" : 1505
}