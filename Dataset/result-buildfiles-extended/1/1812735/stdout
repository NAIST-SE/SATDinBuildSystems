{
  "Repository" : "1812735",
  "Revision" : "HEAD",
  "ObjectId" : "ef22850208439e555cd4f6c94d7307d0da18fb87",
  "CommitTime" : "2019-04-16T14:06:30Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "4033d2466d442463b86b41d95647d1d2e91bc8e7",
      "LastModified" : "2019-03-26T02:58:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Setup output directories\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set module path\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#===============================================================================\n\n# Command line options\n\n#===============================================================================\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#===============================================================================\n\n# MPI for distributed-memory parallelism\n\n#===============================================================================\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#===============================================================================\n\n# DAGMC Geometry Support - need DAGMC/MOAB\n\n#===============================================================================\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#===============================================================================\n\n# HDF5 for binary output\n\n#===============================================================================\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Allow user to specify HDF5_ROOT\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Unfortunately FindHDF5.cmake will always prefer a serial HDF5 installation\n\n# over a parallel installation if both appear on the user's PATH. To get around\n\n# this, we check for the environment variable HDF5_ROOT and if it exists, use it\n\n# to check whether its a parallel version.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#===============================================================================\n\n# Set compile/link flags based on which compiler is being used\n\n#===============================================================================\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Requires CMake 3.1+\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Show flags being used\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#===============================================================================\n\n# pugixml library\n\n#===============================================================================\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#===============================================================================\n\n# xtensor header-only library\n\n#===============================================================================\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#===============================================================================\n\n# RPATH information\n\n#===============================================================================\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This block of code ensures that dynamic libraries can be found via the RPATH\n\n# whether the executable is the original one from the build directory or the\n\n# installed one in CMAKE_INSTALL_PREFIX. Ref:\n\n# https://gitlab.kitware.com/cmake/community/wikis/doc/cmake/RPATH-handling\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# the RPATH to be used when installing, but only if it's not a system directory\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#===============================================================================\n\n# faddeeva library\n\n#===============================================================================\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#===============================================================================\n\n# libopenmc\n\n#===============================================================================\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Set compile flags\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Set git SHA1 hash as a compile definition\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# target_link_libraries treats any arguments starting with - but not -l as\n\n# linker flags. Thus, we can pass both linker flags and libraries together.\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#===============================================================================\n\n# openmc executable\n\n#===============================================================================\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Ensure C++14 standard is used. Starting with CMake 3.8, another way this could\n\n# be done is using the cxx_std_14 compiler feature.\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#===============================================================================\n\n# Python package\n\n#===============================================================================\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#===============================================================================\n\n# Install executable, scripts, manpage, license\n\n#===============================================================================\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "cmake/Modules/FindDAGMC.cmake" : {
      "ObjectId" : "c644c8886e7927cfc96d278c7c0324fe5b201258",
      "LastModified" : "2018-10-01T15:38:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find DAGMC\n\n#\n\n# Once done this will define\n\n#\n\n#  DAGMC_FOUND - system has DAGMC\n\n#  DAGMC_INCLUDE_DIRS - the DAGMC include directory\n\n#  DAGMC_LIBRARIES - Link these to use DAGMC\n\n#  DAGMC_DEFINITIONS - Compiler switches required for using DAGMC\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "docs/Makefile" : {
      "ObjectId" : "a93338df31f7306baf10f4908de82af7dc2d52ce",
      "LastModified" : "2017-12-29T21:10:55Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Tikz to PNG conversion\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "vendor/xtensor/CMakeLists.txt" : {
      "ObjectId" : "d4d3b355d6cc80080d202b84c63f68bca8b1636e",
      "LastModified" : "2018-08-15T18:52:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# Copyright (c) 2016, Johan Mabille, Sylvain Corlay and Wolf Vollprecht    #\n\n#                                                                          #\n\n# Distributed under the terms of the BSD 3-Clause License.                 #\n\n#                                                                          #\n\n# The full license is in the file LICENSE, distributed with this software. #\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Versionning\n\n# ===========\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependencies\n\n# ============\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#find_package(xtl 0.4.9 REQUIRED)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#message(STATUS \"Found xtl: ${xtl_INCLUDE_DIRS}/xtl\")\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#find_package(nlohmann_json 3.1.1)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build\n\n# =====\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Installation\n\n# ============\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makes the project importable from the build directory\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xtensor is header-only and does not depend on the architecture.\n\n# Remove CMAKE_SIZEOF_VOID_P from xtensorConfigVersion.cmake so that an xtensorConfig.cmake\n\n# generated for a 64 bit target can be used for 32 bit targets and vice versa.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "vendor/xtl/CMakeLists.txt" : {
      "ObjectId" : "0101906bf924f58c7a9028fee96431661ed94bd0",
      "LastModified" : "2018-08-15T18:52:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# Copyright (c) 2017, Sylvain Corlay and Johan Mabille                     #\n\n#                                                                          #\n\n# Distributed under the terms of the BSD 3-Clause License.                 #\n\n#                                                                          #\n\n# The full license is in the file LICENSE, distributed with this software. #\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Versionning\n\n# ===========\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependencies\n\n# ============\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#find_package(nlohmann_json)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build\n\n# =====\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Installation\n\n# ============\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Makes the project importable from the build directory\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# xtl is header-only and does not depend on the architecture.\n\n# Remove CMAKE_SIZEOF_VOID_P from xtlConfigVersion.cmake so that an xtlConfig.cmake\n\n# generated for a 64 bit target can be used for 32 bit targets and vice versa.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    }
  },
  "FileTypes" : {
    "CMAKE" : 4,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 10373
}