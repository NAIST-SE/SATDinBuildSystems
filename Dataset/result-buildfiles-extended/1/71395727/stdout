{
  "Repository" : "71395727",
  "Revision" : "HEAD",
  "ObjectId" : "703199f345126421012c23417cd51da9593825a4",
  "CommitTime" : "2019-04-11T20:08:08Z",
  "Files" : {
    "deep-learning/Deep-Reinforcement-Learning-Complete-Collection/PyTorch-cpp/CMakeLists.txt" : {
      "ObjectId" : "4d24cc8519cd61b820d6109311ee281718c2f1ab",
      "LastModified" : "2019-04-11T20:06:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Project-wide properties\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Cppcheck\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependencies\n\n## PyTorch\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Spdlog\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define targets\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enable all warnings\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Includes\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Linking\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Example\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Recurse into source tree\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "deep-learning/Deep-Reinforcement-Learning-Complete-Collection/PyTorch-cpp/example/CMakeLists.txt" : {
      "ObjectId" : "9fcb12f08f26b57c72c0cb18d61c9d59665dfb1a",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deep-learning/Deep-Reinforcement-Learning-Complete-Collection/PyTorch-cpp/src/CMakeLists.txt" : {
      "ObjectId" : "b6d36ae3c2ab7ca1ca7a48372b88e8bc382b8e76",
      "LastModified" : "2019-04-11T20:07:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deep-learning/Deep-Reinforcement-Learning-Complete-Collection/PyTorch-cpp/src/algorithms/CMakeLists.txt" : {
      "ObjectId" : "b09726581cb3fae309edfc0ab0f625cf3c66b998",
      "LastModified" : "2019-04-11T20:07:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deep-learning/Deep-Reinforcement-Learning-Complete-Collection/PyTorch-cpp/src/distributions/CMakeLists.txt" : {
      "ObjectId" : "c87f53b00bd2e1c1865b5068c777b4c96d9d19f9",
      "LastModified" : "2019-04-11T20:07:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deep-learning/Deep-Reinforcement-Learning-Complete-Collection/PyTorch-cpp/src/generators/CMakeLists.txt" : {
      "ObjectId" : "c4bc09c5696c4701d8cddb0b7ec405a8f44e2d93",
      "LastModified" : "2019-04-11T20:07:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deep-learning/Deep-Reinforcement-Learning-Complete-Collection/PyTorch-cpp/src/model/CMakeLists.txt" : {
      "ObjectId" : "4ac0ac9c1af99ec3e754cb8559d6d9708e973283",
      "LastModified" : "2019-04-11T20:07:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deep-learning/Deep-Reinforcement-Learning-Complete-Collection/PyTorch-cpp/src/third_party/CMakeLists.txt" : {
      "ObjectId" : "8434acf67b2c72a576418b1576d66528104774c8",
      "LastModified" : "2019-04-11T20:07:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deep-learning/UBER-pyro/Makefile" : {
      "ObjectId" : "c742326ae029a428561872912acc723147183b23",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deep-learning/UBER-pyro/docker/Makefile" : {
      "ObjectId" : "ab402ee050c42b51ab7bc4ab8430b10c2fc51edb",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Optional args\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Determine name of docker image\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##\n\n##Available targets:\n\n##\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##\n",
        "Line" : 39,
        "CharPositionInLine" : 7
      },
      "4" : {
        "Text" : "## Build a docker image for running Pyro on a CPU.\n\n## Requires nvidia-docker (https://github.com/NVIDIA/nvidia-docker).\n\n## Args:\n\n##   python_version: version of python to use. default - python 2.7\n\n##   pytorch_branch: whether to build PyTorch from conda or from source\n\n##   (git branch specified by pytorch_branch)\n\n##     default - latest pytorch version on conda\n\n##   pyro_branch: whether to use the released Pyro wheel or a git branch.\n\n##     default - latest pyro-ppl wheel on pypi\n\n##\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "##\n",
        "Line" : 59,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "## Build a docker image for running Pyro on a GPU.\n\n## Requires nvidia-docker (https://github.com/NVIDIA/nvidia-docker).\n\n## Args:\n\n##   python_version: version of python to use. default - python 2.7\n\n##   pytorch_branch: whether to build PyTorch from conda or from source\n\n##   (git branch specified by pytorch_branch)\n\n##     default - latest pytorch version on conda\n\n##   pyro_branch: whether to use the released Pyro wheel or a git branch.\n\n##     default - latest pyro-ppl wheel on pypi\n\n##\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "##\n",
        "Line" : 80,
        "CharPositionInLine" : 23
      },
      "8" : {
        "Text" : "## Create shared volume on the host for sharing files with the container.\n\n##\n",
        "Line" : 81,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "##\n",
        "Line" : 86,
        "CharPositionInLine" : 5
      },
      "10" : {
        "Text" : "## Start a Pyro CPU docker instance, and run the command `cmd`.\n\n## Args:\n\n##   img: use image name given by `img`.\n\n##   cmd: command invoked on running a docker instance.\n\n##     default - bash\n\n##\n",
        "Line" : 87,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "##\n",
        "Line" : 98,
        "CharPositionInLine" : 9
      },
      "12" : {
        "Text" : "## Start a Pyro GPU docker instance, and run the command `cmd`.\n\n## Args:\n\n##   img: use image name given by `img`.\n\n##   cmd: command invoked on running a docker instance.\n\n##     default - bash\n\n##\n",
        "Line" : 99,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "##\n",
        "Line" : 110,
        "CharPositionInLine" : 10
      },
      "14" : {
        "Text" : "## Start a jupyter notebook on the Pyro CPU docker container.\n\n## Args:\n\n##   img: use image name given by `img`.\n\n##\n",
        "Line" : 111,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "##\n",
        "Line" : 120,
        "CharPositionInLine" : 14
      },
      "16" : {
        "Text" : "## Start a juptyer notebook on the Pyro GPU docker container.\n\n## Args:\n\n##   img: use image name given by `img`.\n\n##\n",
        "Line" : 121,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 17
    },
    "deep-learning/UBER-pyro/docs/Makefile" : {
      "ObjectId" : "06bbf77d2f042a7fd45fadcd5de4a151e95bdea0",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Minimal makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put it first so that \"make\" without argument is like \"make help\".\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Catch-all target: route all unknown targets to Sphinx using the new\n\n# \"make mode\" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deep-learning/theano-tutorial/intro_theano/Makefile" : {
      "ObjectId" : "dfe1f9dd0fb00f85b76e36bb8a1ffa34d79913e5",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deep-learning/theano-tutorial/rnn_tutorial/Makefile" : {
      "ObjectId" : "70828a1c7ff1ac040c93ef2f7be5adca9e06b142",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/java2py/antlr-3.1.3/gunit/pom.xml" : {
      "ObjectId" : "ce4cc64a15975afb8a0aef09bf5c2409de0b1a55",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n\n    Inherit from the ANTLR master pom, which tells us what\n    version we are and allows us to inherit dependencies\n    and so on.\n\n    ",
        "Line" : 15,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n\n    Define where the ANTLR gUnit jar is deployed both for\n    the main ANTLR repository, which syncs with the maven main\n    repository, and the snapshot repository, which can be\n    used by developers that need the latest development version of\n    something, but is used here to ensure that snapshot builds of the\n    ANTLR tool pick up the latest snapshot of the runtime and string tempalte\n    and whatever else it might need in the future.\n    ",
        "Line" : 33,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "\n\n    Inform Maven of the ANTLR snapshot repository, which it will\n    need to consult to get the latest snapshot build of the runtime and so on, should\n    this project need the latest builds from the antlr snapshots and not the pre-built\n    released jars from the repository.\n    ",
        "Line" : 56,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "\n        This is the ANTLR repository.\n        ",
        "Line" : 61,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "\n\n    Tell Maven which other artifacts we need in order to\n    build, run and test the ANTLR Tool. The ANTLR Tool uses earlier versions\n    of ANTLR at runtime (for the moment), uses the current\n    released version of ANTLR String template, but obviously is\n    reliant on the latest snapshot of the runtime, which will either be\n    taken from the antlr-snapshot repository, or your local .m2\n    repository if you built and installed that locally.\n\n    ",
        "Line" : 83,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "java/java2py/antlr-3.1.3/runtime/ActionScript/project/build.xml" : {
      "ObjectId" : "0f3a209eb129590502184e1d29175e222ddb5226",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Assume SDK 3.0 or greater has the ant tasks ",
        "Line" : 13,
        "CharPositionInLine" : 54
      },
      "1" : {
        "Text" : " Strip off directory ",
        "Line" : 23,
        "CharPositionInLine" : 75
      },
      "2" : {
        "Text" : " Strip off extension ",
        "Line" : 24,
        "CharPositionInLine" : 69
      },
      "3" : {
        "Text" : " Convert path to package ",
        "Line" : 25,
        "CharPositionInLine" : 72
      },
      "4" : {
        "Text" : " List of SWC files or directories that contain SWC files. ",
        "Line" : 52,
        "CharPositionInLine" : 78
      },
      "CommentCount" : 5
    },
    "java/java2py/antlr-3.1.3/runtime/C/Makefile.am" : {
      "ObjectId" : "934c18cd69a87666022c79c52b9ecbd1c86d9ad9",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## --silent\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "java/java2py/antlr-3.1.3/runtime/Java/pom.xml" : {
      "ObjectId" : "2bf652330e9f109ee3a3e9ee2caf08476a095369",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n\n    Inherit from the ANTLR master pom, which tells us what\n    version we are and allows us to inherit dependencies\n    and so on.\n\n    ",
        "Line" : 14,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    Definition of the ANTLR repositories. Note that you can only deploy\n    to the repositories via scp, and so the server must already know about\n    your public key. ONly ANTLR developers are allowed to deploy to the \n    release and snapshot repositories, which are synced with the Maven central\n    repository.\n  ",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "java/java2py/antlr-3.1.3/tool/pom.xml" : {
      "ObjectId" : "b5d52124b78a185a4b4630e0e1e310fbf9e4acbc",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n\n    Inherit from the ANTLR master pom, which tells us what\n    version we are and allows us to inherit dependencies\n    and so on.\n\n    ",
        "Line" : 17,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n\n    Tell Maven which other artifacts we need in order to\n    build, run and test the ANTLR Tool. The ANTLR Tool uses earlier versions\n    of ANTLR at runtime (for the moment), uses the current\n    released version of ANTLR String template, but obviously is\n    reliant on the latest snapshot of the runtime, which will either be\n    taken from the antlr-snapshot repository, or your local .m2\n    repository if you built and installed that locally.\n\n    ",
        "Line" : 49,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/research/adversarial_text/BUILD" : {
      "ObjectId" : "476865f968291edd9ab256e2733b2e0739372fe2",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "1" : {
        "Text" : "# Binaries\n# ==============================================================================",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# google3 file dep,\n# tensorflow dep,",
        "Line" : 10,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# google3 file dep,\n# tensorflow dep,",
        "Line" : 21,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# google3 file dep,\n# tensorflow dep,",
        "Line" : 34,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Libraries\n# ==============================================================================",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# tensorflow dep,",
        "Line" : 48,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# tensorflow dep,",
        "Line" : 56,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# tensorflow dep,",
        "Line" : 64,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# tensorflow dep,",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# numpy dep,\n# tensorflow dep,",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Tests\n# ==============================================================================",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# tensorflow dep,",
        "Line" : 94,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 13
    },
    "tensorflow_dl_models/research/adversarial_text/data/BUILD" : {
      "ObjectId" : "b59f7a30ea67ff8fe49351e2984e1c8a95d7112d",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "1" : {
        "Text" : "# tensorflow dep,",
        "Line" : 15,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# tensorflow dep,",
        "Line" : 25,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# tensorflow dep,",
        "Line" : 33,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# tensorflow dep,",
        "Line" : 41,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# tensorflow dep,",
        "Line" : 50,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 6
    },
    "tensorflow_dl_models/research/brain_coder/common/BUILD" : {
      "ObjectId" : "b5f79c25096ca574d4a133f871343eedd985b25e",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# tensorflow dep",
        "Line" : 17,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# tensorflow dep",
        "Line" : 31,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# numpy dep\n# tensorflow dep",
        "Line" : 45,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# numpy dep\n# scipy dep",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# numpy dep\n# tensorflow dep",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# numpy dep\n# tensorflow dep",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# file dep\n# absl dep /logging\n# numpy dep\n# tensorflow dep",
        "Line" : 91,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# numpy dep\n# tensorflow dep",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 8
    },
    "tensorflow_dl_models/research/brain_coder/single_task/BUILD" : {
      "ObjectId" : "47e91b12b8ba40a2a9916a89375fbb773758d7cf",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# absl dep :app\n# absl dep /flags\n# absl dep /logging",
        "Line" : 16,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# file dep\n# absl dep :app\n# absl dep /flags\n# absl dep /logging\n# numpy dep\n# tensorflow dep",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# file dep\n# absl dep /flags\n# absl dep /logging\n# numpy dep\n# tensorflow dep",
        "Line" : 45,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# project",
        "Line" : 50,
        "CharPositionInLine" : 27
      },
      "4" : {
        "Text" : "# absl dep /flags\n# absl dep /logging\n# numpy dep",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# project",
        "Line" : 62,
        "CharPositionInLine" : 24
      },
      "6" : {
        "Text" : "# project",
        "Line" : 63,
        "CharPositionInLine" : 27
      },
      "7" : {
        "Text" : "# absl dep /flags\n# tensorflow dep",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# file dep\n# absl dep /flags\n# absl dep /logging\n# tensorflow dep\n# tensorflow internal dep  # build_cleaner: keep",
        "Line" : 86,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# file dep\n# absl dep /logging\n# numpy dep\n# tensorflow dep",
        "Line" : 99,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# project",
        "Line" : 103,
        "CharPositionInLine" : 29
      },
      "11" : {
        "Text" : "# project",
        "Line" : 104,
        "CharPositionInLine" : 27
      },
      "12" : {
        "Text" : "# absl dep /logging\n# numpy dep\n# tensorflow dep",
        "Line" : 117,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# project",
        "Line" : 120,
        "CharPositionInLine" : 27
      },
      "14" : {
        "Text" : "# absl dep /logging",
        "Line" : 128,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# project",
        "Line" : 129,
        "CharPositionInLine" : 32
      },
      "16" : {
        "Text" : "# absl dep /logging",
        "Line" : 143,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# absl dep /logging\n# numpy dep",
        "Line" : 153,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# project",
        "Line" : 155,
        "CharPositionInLine" : 24
      },
      "19" : {
        "Text" : "# project",
        "Line" : 156,
        "CharPositionInLine" : 28
      },
      "20" : {
        "Text" : "# numpy dep\n# tensorflow dep",
        "Line" : 166,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# project",
        "Line" : 176,
        "CharPositionInLine" : 28
      },
      "22" : {
        "Text" : "# numpy dep\n# tensorflow dep",
        "Line" : 186,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# absl dep /logging\n# tensorflow dep",
        "Line" : 198,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# file dep\n# tensorflow dep",
        "Line" : 207,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# tensorflow dep",
        "Line" : 217,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# file dep\n# absl dep :app\n# absl dep /flags\n# numpy dep\n# tensorflow dep",
        "Line" : 227,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# file dep\n# absl dep :app\n# absl dep /flags\n# tensorflow dep",
        "Line" : 239,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 28
    },
    "tensorflow_dl_models/research/differential_privacy/dp_sgd/dp_mnist/BUILD" : {
      "ObjectId" : "a63958ea03985c9e0d30ebcb22b0f10925dd8709",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/differential_privacy/dp_sgd/dp_optimizer/BUILD" : {
      "ObjectId" : "18766e3e93493bc41cbe1a00a3b16398c7b7ec46",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/differential_privacy/dp_sgd/per_example_gradients/BUILD" : {
      "ObjectId" : "fcda6563e9bb8fbc071df609e4b2f4ee6a06d603",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/differential_privacy/multiple_teachers/BUILD" : {
      "ObjectId" : "4df3e5e5e933b13be6f451c60684039abc4eeca8",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/differential_privacy/privacy_accountant/python/BUILD" : {
      "ObjectId" : "1f03f0a4d899f0b64d98feeba29ed71f1372e97c",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/differential_privacy/privacy_accountant/tf/BUILD" : {
      "ObjectId" : "2bad4eacb507bbe3d8cd2d410f3626582c7b7d3a",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/domain_adaptation/datasets/BUILD" : {
      "ObjectId" : "067a79374fbcedaa6fcd90293e5365aaad4c18c6",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Domain Adaptation Scenarios Datasets",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 9,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/research/domain_adaptation/domain_separation/BUILD" : {
      "ObjectId" : "14dceda27e49d74eaaaeae21676183b78c72b9c2",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Domain Separation Networks",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 9,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/research/domain_adaptation/pixel_domain_adaptation/BUILD" : {
      "ObjectId" : "2bc8d4a49a828f97b8f45166aa2bbc552d4a3b92",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Contains code for domain-adaptation style transfer.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 10,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/research/domain_adaptation/pixel_domain_adaptation/baselines/BUILD" : {
      "ObjectId" : "c41a4ffeee80114145c4c3fc32a2191879b1b08a",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/im2txt/im2txt/BUILD" : {
      "ObjectId" : "8c403171153c36ee43cde2788dbfcaf9c7bf4293",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/im2txt/im2txt/inference_utils/BUILD" : {
      "ObjectId" : "82a15fd3ca487e542c41ab337404f8caa63b8c63",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/im2txt/im2txt/ops/BUILD" : {
      "ObjectId" : "7d48bf3938c7ecfc94ac6498386e7ce214b8be92",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/inception/inception/BUILD" : {
      "ObjectId" : "21fc27aa57c14f6a72359cf15d446787c8ea6c2e",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Example TensorFlow models for ImageNet.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/research/inception/inception/slim/BUILD" : {
      "ObjectId" : "174e77d5c2654380232174a2bb8b29c6b9affc5d",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Contains the operations and nets for building TensorFlow-Slim models.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/research/learned_optimizer/BUILD" : {
      "ObjectId" : "629c9a06b51d10eb7cab69ed0d9dd0bfa52fd2f0",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Learning to Optimize Learning (LOL)",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Libraries\n# =========",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Binaries\n# ========",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tensorflow_dl_models/research/learned_optimizer/optimizer/BUILD" : {
      "ObjectId" : "8953e7592ace416b786be2a6fa59f4c537c82644",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Libraries\n# =========",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/learned_optimizer/problems/BUILD" : {
      "ObjectId" : "c704618821b36ca23f221f724888cde4e5d5a5ad",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Libraries\n# =====",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/lm_1b/BUILD" : {
      "ObjectId" : "ca5bc1f6ce4347a3b5f18d1bb59284aa9d07a567",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/next_frame_prediction/cross_conv/BUILD" : {
      "ObjectId" : "b435087f34f6ffbeba016119c60724d8ac3eb180",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/object_detection/BUILD" : {
      "ObjectId" : "df835b74031c4de350c2e82d23c88ea3fa593494",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Tensorflow Object Detection API: main runnables.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/research/object_detection/anchor_generators/BUILD" : {
      "ObjectId" : "cb421a0c16b5d7b367590d5a9f4004fac2f48212",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Tensorflow Object Detection API: Anchor Generator implementations.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/research/object_detection/box_coders/BUILD" : {
      "ObjectId" : "ecb3cc7aa597c3708e2c0c6e8e5c937cd708ce53",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Tensorflow Object Detection API: Box Coder implementations.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/research/object_detection/builders/BUILD" : {
      "ObjectId" : "d1bb3f03cb4df88d1f46e3a4c0405f83845e6752",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Tensorflow Object Detection API: component builders.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/research/object_detection/core/BUILD" : {
      "ObjectId" : "5d8aaad706db3098b678b6c3214eead6a339ddd4",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Tensorflow Object Detection API: Core.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/research/object_detection/data_decoders/BUILD" : {
      "ObjectId" : "d6b48ac091d9f6d56afa32828e41268a0632f3f0",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Tensorflow Object Detection API: data decoders.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/research/object_detection/dataset_tools/BUILD" : {
      "ObjectId" : "bb5ce2e5c2af5881d098b70a8dc18781de47e009",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Tensorflow Object Detection API: main runnables.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/research/object_detection/inference/BUILD" : {
      "ObjectId" : "c36df0d026869a5ed244b52e6ce2188a87a5e655",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Tensorflow Object Detection API: main runnables.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/research/object_detection/matchers/BUILD" : {
      "ObjectId" : "1bc5992f55834a8b49ce500e95a86415d573eeb8",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Tensorflow Object Detection API: Matcher implementations.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/research/object_detection/meta_architectures/BUILD" : {
      "ObjectId" : "0172a9c0ff428719224ca81b6f95ba12ab444bbf",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Tensorflow Object Detection API: Meta-architectures.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/research/object_detection/metrics/BUILD" : {
      "ObjectId" : "878f16a6d97936e3ee616d7225a08c9f0eb1c5a6",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Tensorflow Object Detection API: main runnables.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/research/object_detection/models/BUILD" : {
      "ObjectId" : "36efaba5c4b207c594e402c9de49d2af212481ea",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Tensorflow Object Detection API: Models.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/research/object_detection/protos/BUILD" : {
      "ObjectId" : "1b7eb148da8d5cbc3fd11daf8bb92cd28d215a57",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Tensorflow Object Detection API: Configuration protos.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/object_detection/utils/BUILD" : {
      "ObjectId" : "7e511c957b7803cb6214b761baf823115320250a",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Tensorflow Object Detection API: Utility functions.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/research/ptn/BUILD" : {
      "ObjectId" : "f08c6172c4e899de77d3c10dc8e9d61519e750a8",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Defines the Rotator model here",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Defines the Im2vox model here",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/research/ptn/nets/BUILD" : {
      "ObjectId" : "987499341ef25c8e19d532fdb14d3a9e842d0909",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tensorflow_dl_models/research/resnet/BUILD" : {
      "ObjectId" : "7e5f5d0dca5f047672a0fecb0c48ff7ea35c9ff0",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/skip_thoughts/skip_thoughts/BUILD" : {
      "ObjectId" : "3ab642cace448b46f6ebe6e3d8a93b9f260bb08f",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/skip_thoughts/skip_thoughts/data/BUILD" : {
      "ObjectId" : "a8b61bfdc88431b699d08df58813c13b3ddd3ff4",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/skip_thoughts/skip_thoughts/ops/BUILD" : {
      "ObjectId" : "896d54db76e743008dcd50fc7a5b44aabb61d251",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/slim/BUILD" : {
      "ObjectId" : "477fe87198acc3e33832abbe3b4e25a8d8476240",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Contains files for loading, training and evaluating TF-Slim-based models.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 16,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# \"//numpy\",\n# \"//tensorflow\",",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# \"//numpy\",\n# \"//tensorflow\",",
        "Line" : 48,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 58,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# \"//numpy\",\n# \"//tensorflow\",",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 79,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 106,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 115,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 134,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# \"//numpy\",\n# \"//tensorflow\",",
        "Line" : 144,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 153,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# \"//tensorflow\",\n# \"//tensorflow/python:control_flow_ops\",",
        "Line" : 161,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 170,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 178,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 190,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Typical networks definitions.",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# \"//tensorflow\"",
        "Line" : 219,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 230,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 238,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# \"//numpy\",\n# \"//tensorflow\",",
        "Line" : 246,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 258,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 266,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 277,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# \"//tensorflow\"",
        "Line" : 299,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 309,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 319,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 329,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 339,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# \"//tensorflow\"",
        "Line" : 348,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# \"//numpy\",\n# \"//tensorflow\",",
        "Line" : 360,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# \"//numpy\",\n# \"//tensorflow\",",
        "Line" : 373,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# \"//numpy\",\n# \"//tensorflow\",",
        "Line" : 386,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 399,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 411,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 419,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# \"//tensorflow\"",
        "Line" : 428,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# \"//numpy\",\n# \"//tensorflow\",",
        "Line" : 440,
        "CharPositionInLine" : 8
      },
      "41" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 450,
        "CharPositionInLine" : 8
      },
      "42" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 460,
        "CharPositionInLine" : 8
      },
      "43" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 471,
        "CharPositionInLine" : 8
      },
      "44" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 483,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# \"//tensorflow\"",
        "Line" : 492,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 503,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "# \"//tensorflow\"",
        "Line" : 512,
        "CharPositionInLine" : 8
      },
      "48" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 522,
        "CharPositionInLine" : 8
      },
      "49" : {
        "Text" : "# \"//tensorflow\"",
        "Line" : 531,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 541,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "# \"//numpy\",\n# \"//tensorflow\",",
        "Line" : 554,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 565,
        "CharPositionInLine" : 8
      },
      "53" : {
        "Text" : "# \"//numpy\",\n# \"//tensorflow\",",
        "Line" : 578,
        "CharPositionInLine" : 8
      },
      "54" : {
        "Text" : "# \"//tensorflow\"",
        "Line" : 588,
        "CharPositionInLine" : 8
      },
      "55" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 599,
        "CharPositionInLine" : 8
      },
      "56" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 608,
        "CharPositionInLine" : 8
      },
      "57" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 620,
        "CharPositionInLine" : 8
      },
      "58" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 632,
        "CharPositionInLine" : 8
      },
      "59" : {
        "Text" : "# \"//tensorflow\",",
        "Line" : 643,
        "CharPositionInLine" : 8
      },
      "60" : {
        "Text" : "# \"//tensorflow\",\n# \"//tensorflow/python:platform\",",
        "Line" : 653,
        "CharPositionInLine" : 8
      },
      "61" : {
        "Text" : "# \"//tensorflow\",\n# \"//tensorflow/python:platform\",",
        "Line" : 668,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 62
    },
    "tensorflow_dl_models/research/syntaxnet/dragnn/BUILD" : {
      "ObjectId" : "3ac01eacdceb557c72f939a45c01127251b20f06",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tensorflow_dl_models/research/syntaxnet/dragnn/components/stateless/BUILD" : {
      "ObjectId" : "bdd86771daf7e3231e5a5bd9c1af8b9c2e4dd62d",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tensorflow_dl_models/research/syntaxnet/dragnn/components/syntaxnet/BUILD" : {
      "ObjectId" : "6c746a4a58017cd1caabf56c7888de8ffe9b560c",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Test data.",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tests.",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/research/syntaxnet/dragnn/components/util/BUILD" : {
      "ObjectId" : "7600cd19ef491d1b11a7d5a49db27418d1d0f5cf",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tensorflow_dl_models/research/syntaxnet/dragnn/conll2017/BUILD" : {
      "ObjectId" : "ead13b1696fa140ffb97a46041971639ab59196a",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tensorflow_dl_models/research/syntaxnet/dragnn/core/BUILD" : {
      "ObjectId" : "a52e91fb42cd5114be5f7259b2d42b9d3c1da7a6",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Test data.",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tests",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Tensorflow op kernel BUILD rules.",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Tensorflow kernel libraries, for use with unit tests.",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tensorflow kernel tests.",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tensorflow_dl_models/research/syntaxnet/dragnn/core/interfaces/BUILD" : {
      "ObjectId" : "3dcb59781ce356a95e213966bc1de4ce524d71c1",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tensorflow_dl_models/research/syntaxnet/dragnn/core/test/BUILD" : {
      "ObjectId" : "157b019f13367721e4e0da6c6434651b7d31c043",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tensorflow_dl_models/research/syntaxnet/dragnn/io/BUILD" : {
      "ObjectId" : "6a101679045fb366cd48217eaeecaec86b061c91",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tensorflow_dl_models/research/syntaxnet/dragnn/protos/BUILD" : {
      "ObjectId" : "f4ae023ab23e803957318a3591d69a1338b7a504",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Protos.",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/syntaxnet/dragnn/python/BUILD" : {
      "ObjectId" : "f1c528ab3c99c531fbe96aa3f5999bffbe772b1a",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Tests",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/syntaxnet/dragnn/tensorflow_ops.bzl" : {
      "ObjectId" : "473b7a59fc12eb51a40456f49925eef5cfd874b3",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# -*- Python -*-",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Given a source file, generate a test name.\n# i.e. \"common_runtime/direct_session_test.cc\" becomes\n#      \"common_runtime_direct_session_test\"",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Return the options to use for a C++ library or binary build.\n# Uses the \":optmode\" config_setting to pick the options.",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List of proto files for android builds",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Returns the list of pb.h and proto.h headers that are generated for\n# tf_android_core_proto_sources().",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Given a list of \"op_lib_names\" (a list of files in the ops directory\n# without their .cc extensions), generate a library for that file.",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Make library out of each op so it can also be used to generate wrappers\n# for various languages.",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Construct an op generator binary for these ops.",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Faster to link this one-time-use binary dynamically",
        "Line" : 154,
        "CharPositionInLine" : 24
      },
      "9" : {
        "Text" : "# Given a list of \"op_lib_names\" (a list of files in the ops directory\n# without their .cc extensions), generate individual C++ .cc and .h\n# files for each of the ops files mentioned, and then generate a\n# single cc_library called \"name\" that combines all the\n# generated C++ code.\n#\n# For example, for:\n#  tf_gen_op_wrappers_cc(\"tf_ops_lib\", [ \"array_ops\", \"math_ops\" ])\n#\n#\n# This will ultimately generate ops/* files and a library like:\n#\n# cc_library(name = \"tf_ops_lib\",\n#            srcs = [ \"ops/array_ops.cc\",\n#                     \"ops/math_ops.cc\" ],\n#            hdrs = [ \"ops/array_ops.h\",\n#                     \"ops/math_ops.h\" ],\n#            deps = [ ... ])\n#\n# Plus a private library for the \"hidden\" ops.\n# cc_library(name = \"tf_ops_lib_internal\",\n#            srcs = [ \"ops/array_ops_internal.cc\",\n#                     \"ops/math_ops_internal.cc\" ],\n#            hdrs = [ \"ops/array_ops_internal.h\",\n#                     \"ops/math_ops_internal.h\" ],\n#            deps = [ ... ])\n# TODO(googleuser): Cleaner approach for hidden ops.",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Invoke this rule in .../tensorflow/python to build the wrapper library.",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Construct a cc_binary containing the specified ops.",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Faster to link this one-time-use binary dynamically",
        "Line" : 269,
        "CharPositionInLine" : 24
      },
      "13" : {
        "Text" : "# Invoke the previous cc_binary to generate a python file.",
        "Line" : 275,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# `hidden` is a list of op names to be hidden in the generated module.",
        "Line" : 280,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# `hidden_file` is file containing a list of op names to be hidden in the\n# generated module.",
        "Line" : 288,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# No ops should be hidden in the generated module.",
        "Line" : 299,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Make a py_library out of the generated python file.",
        "Line" : 307,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Define a bazel macro that creates cc_test for tensorflow.\n# TODO(googleuser): we need to enable this to work around the hidden symbol\n# __cudaRegisterFatBinary error. Need more investigations.",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Part of the testing process requires a distinguishable name for the build\n# rules that involve a GPU, even if otherwise identical to the base rule.",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Create a cc_test for each of the tensorflow tests listed in \"tests\"",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "\"\"\"Gets the appropriate set of copts for (maybe) CUDA compilation.\n\n    If we're doing CUDA compilation, returns copts for our particular CUDA\n    compiler.  If we're not doing CUDA compilation, returns an empty list.\n\n    \"\"\"",
        "Line" : 396,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Build defs for TensorFlow kernels",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# When this target is built using --config=cuda, a cc_library is built\n# that passes -DGOOGLE_CUDA=1 and '-x cuda', linking in additional\n# libraries needed by GPU kernels.",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "\"\"\"Generate a cc_library with a conditional set of CUDA dependencies.\n\n  When the library is built with --config=cuda:\n\n  - both deps and cuda_deps are used as dependencies\n  - the cuda runtime is added as a dependency (if necessary)\n  - The library additionally passes -DGOOGLE_CUDA=1 to the list of copts\n\n  Args:\n  - cuda_deps: BUILD dependencies which will be linked if and only if:\n      '--config=cuda' is passed to the bazel command line.\n  - deps: dependencies which will always be linked.\n  - copts: copts always passed to the cc_library.\n  - kwargs: Any other argument to cc_library.\n  \"\"\"",
        "Line" : 438,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "\"\"\"A rule to build a TensorFlow OpKernel.\n\n  May either specify srcs/hdrs or prefix.  Similar to tf_cuda_library,\n  but with alwayslink=1 by default.  If prefix is specified:\n    * prefix*.cc (except *.cu.cc) is added to srcs\n    * prefix*.h (except *.cu.h) is added to hdrs\n    * prefix*.cu.cc and prefix*.h (including *.cu.h) are added to gpu_srcs.\n  With the exception that test files are excluded.\n  For example, with prefix = \"cast_op\",\n    * srcs = [\"cast_op.cc\"]\n    * hdrs = [\"cast_op.h\"]\n    * gpu_srcs = [\"cast_op_gpu.cu.cc\", \"cast_op.h\"]\n    * \"cast_op_test.cc\" is excluded\n  With prefix = \"cwise_op\"\n    * srcs = [\"cwise_op_abs.cc\", ..., \"cwise_op_tanh.cc\"],\n    * hdrs = [\"cwise_ops.h\", \"cwise_ops_common.h\"],\n    * gpu_srcs = [\"cwise_op_gpu_abs.cu.cc\", ..., \"cwise_op_gpu_tanh.cu.cc\",\n                  \"cwise_ops.h\", \"cwise_ops_common.h\",\n                  \"cwise_ops_gpu_common.cu.h\"]\n    * \"cwise_ops_test.cc\" is excluded\n  \"\"\"",
        "Line" : 470,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Needed since alwayslink is broken in bazel b/27630669",
        "Line" : 525,
        "CharPositionInLine" : 24
      },
      "27" : {
        "Text" : "# Bazel rules for building swig files.",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "\"\"\"Returns abnormal root directories under which files reside.\n\n  When running a ctx.action, source files within the main repository are all\n  relative to the current directory; however, files that are generated or exist\n  in remote repositories will have their root directory be a subdirectory,\n  e.g. bazel-out/local-fastbuild/genfiles/external/jpeg_archive. This function\n  returns the set of these devious directories, ranked and sorted by popularity\n  in order to hopefully minimize the number of I/O system calls within the\n  compiler, because includes have quadratic complexity.\n  \"\"\"",
        "Line" : 600,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Bazel rule for collecting the header files that a target depends on.",
        "Line" : 628,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Create a header only library that includes all the headers exported by\n# the libraries in deps.",
        "Line" : 651,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Traverse the dependency graph along the \"deps\" attribute of the\n# target and return a struct with one field called 'tf_collected_deps'.\n# tf_collected_deps will be the union of the deps of the current target\n# and the tf_collected_deps of the dependencies of this target.",
        "Line" : 667,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# This rule checks that the transitive dependencies of targets listed\n# in the 'deps' attribute don't depend on the targets listed in\n# the 'disallowed_deps' attribute.",
        "Line" : 688,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Helper to build a dynamic library (.so) from the sources containing\n# implementations of custom ops and kernels.",
        "Line" : 717,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# No extension link opts",
        "Line" : 754,
        "CharPositionInLine" : 13
      },
      "35" : {
        "Text" : "# No extension c opts",
        "Line" : 757,
        "CharPositionInLine" : 13
      },
      "36" : {
        "Text" : "# Convert a rule name such as foo/bar/baz to foo/bar/_baz.so\n# and use that as the name for the rule producing the .so file.",
        "Line" : 761,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Creates a genrule named <name> for running tools/proto_text's generator to\n# make the proto_text functions, for the protos passed in <srcs>.\n#\n# Return a struct with fields (hdrs, srcs) containing the names of the\n# generated files.",
        "Line" : 905,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "tensorflow_dl_models/research/syntaxnet/dragnn/tools/BUILD" : {
      "ObjectId" : "1a7f800a21cbf052f403797061a0a2989f00795f",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# This is meant to be run inside the Docker image. In the OSS directory, run,\n#\n#     ./build_devel.sh bazel run //dragnn/python:oss_notebook_launcher",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Shared/common components for all tools.",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This should include just about everything, suitable for Jupyter notebooks or\n# building a pip package.",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tensorflow_dl_models/research/syntaxnet/dragnn/tools/benchmarks/BUILD" : {
      "ObjectId" : "77eeebf4d13dbed7ed18d7c856eeea0f8114c766",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tensorflow_dl_models/research/syntaxnet/dragnn/viz/BUILD" : {
      "ObjectId" : "119322db1a4ac77b0b3f9aafd5e715543de0a392",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tensorflow_dl_models/research/syntaxnet/examples/dragnn/BUILD" : {
      "ObjectId" : "895daf2ed0c4eb7702dc8492c299b7a3beaaf992",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tensorflow_dl_models/research/syntaxnet/syntaxnet/BUILD" : {
      "ObjectId" : "9f60f42c7e6e80ebb055f1ec14e7ddf4daca0496",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# A syntactic parser and part-of-speech tagger in TensorFlow.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 11,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# proto libraries",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# cc libraries for feature extraction and parsing",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# cc tests",
        "Line" : 519,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# py graph builder and trainer",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# py tests",
        "Line" : 846,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "tensorflow_dl_models/research/syntaxnet/syntaxnet/syntaxnet.bzl" : {
      "ObjectId" : "f9e4ca4a7b196cf6e7a688c1c33044bff3dd9e7f",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2016 Google Inc. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ==============================================================================",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Shorthand for select()'ing on whether we're building with CUDA.\"\"\"",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Given a list of \"op_lib_names\" (a list of files in the ops directory\n# without their .cc extensions), generate a library for that file.",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make library out of each op so it can also be used to generate wrappers\n# for various languages.",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Invoke this rule in .../tensorflow/python to build the wrapper library.",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Construct a cc_binary containing the specified ops.",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Faster to link this one-time-use binary dynamically",
        "Line" : 87,
        "CharPositionInLine" : 24
      },
      "7" : {
        "Text" : "# Invoke the previous cc_binary to generate a python file.",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Make a py_library out of the generated python file.",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "tensorflow_dl_models/research/syntaxnet/syntaxnet/util/BUILD" : {
      "ObjectId" : "39867e5f558d919d8b1de7e1b8acd50e12d12a79",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Utilities.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: py_test() requires the name of the build rule and the source file to\n# match, so this is called \"registry_test\" instead of \"pyregistry_test\".",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/research/syntaxnet/third_party/utf/BUILD" : {
      "ObjectId" : "5a279aab368d96db332968c4e47f88eea7370696",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tensorflow_dl_models/research/syntaxnet/util/utf8/BUILD" : {
      "ObjectId" : "46bbe7a6bcc8f0ca4985b9c025f24d9d3db52a84",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Requires --copt -funsigned-char when compiling (unsigned chars).",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/tcn/BUILD" : {
      "ObjectId" : "39297d4b7bfa6ba94bb91a79d555c3fce75c4e63",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/research/textsum/BUILD" : {
      "ObjectId" : "ea062863911300097740781ba4bd847f6af07afa",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tensorflow_dl_models/samples/languages/java/label_image/pom.xml" : {
      "ObjectId" : "96ace380bf47c8ac12f8b9f5857e6f964dd42e8d",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " The sample code requires at least JDK 1.7. ",
        "Line" : 8,
        "CharPositionInLine" : 58
      },
      "1" : {
        "Text" : " The maven compiler plugin defaults to a lower version ",
        "Line" : 9,
        "CharPositionInLine" : 69
      },
      "2" : {
        "Text" : " For ByteStreams.toByteArray: https://google.github.io/guava/releases/23.0/api/docs/com/google/common/io/ByteStreams.html ",
        "Line" : 19,
        "CharPositionInLine" : 136
      },
      "CommentCount" : 3
    },
    "tensorflow_dl_models/samples/languages/java/object_detection/pom.xml" : {
      "ObjectId" : "c9123dae0447e22d303e0221ea1fe2ea1bc6abad",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " The sample code requires at least JDK 1.7. ",
        "Line" : 8,
        "CharPositionInLine" : 58
      },
      "1" : {
        "Text" : " The maven compiler plugin defaults to a lower version ",
        "Line" : 9,
        "CharPositionInLine" : 69
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/samples/languages/java/training/pom.xml" : {
      "ObjectId" : "39dda07e74b4977e5b426ddbab7c414376c26453",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " The sample code requires at least JDK 1.7. ",
        "Line" : 8,
        "CharPositionInLine" : 58
      },
      "1" : {
        "Text" : " The maven compiler plugin defaults to a lower version ",
        "Line" : 9,
        "CharPositionInLine" : 69
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/tutorials/image/alexnet/BUILD" : {
      "ObjectId" : "bbe29da6f5c8f9180fe18f245a581040a74c0f45",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Benchmark for AlexNet.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/tutorials/image/cifar10/BUILD" : {
      "ObjectId" : "9cf574f605e0ee27a68ee0d23cbead0f2d530889",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Example TensorFlow models for CIFAR-10",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/tutorials/image/imagenet/BUILD" : {
      "ObjectId" : "b3ff258eb4e07a88b70fb8053f24a1e69d68219b",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Example TensorFlow models for ImageNet.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/tutorials/image/mnist/BUILD" : {
      "ObjectId" : "a9b6d78e5e6e8c24ab4ddda2ca272031b685a1ab",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Example TensorFlow models for MNIST that achieves high accuracy",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/tutorials/rnn/BUILD" : {
      "ObjectId" : "118884fd28dfd7c639c4d816c2910cc2237b8eec",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Example RNN models, including language models and sequence-to-sequence models.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/tutorials/rnn/ptb/BUILD" : {
      "ObjectId" : "a79fa202784c5b0547ce484ad201ba0d1797bf72",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Python support for TensorFlow.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/tutorials/rnn/quickdraw/BUILD" : {
      "ObjectId" : "33c3faeced4659a15e7d39ae5d204ce68e6078c7",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Example classification model on Quick, Draw! dataset.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow_dl_models/tutorials/rnn/translate/BUILD" : {
      "ObjectId" : "676e2fee3f794f59f93087e8249dedb23b41b9b2",
      "LastModified" : "2019-04-11T20:06:26Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Example neural translation models.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 8,
    "MAKEFILE" : 5,
    "AUTOMAKE" : 1,
    "BAZEL" : 76,
    "ANT" : 1,
    "MAVEN" : 6
  },
  "ElapsedTime" : 15194
}