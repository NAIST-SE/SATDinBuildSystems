{
  "Repository" : "66037096",
  "Revision" : "HEAD",
  "ObjectId" : "270ce6ce1868a411949a77da79322015eff84aa9",
  "CommitTime" : "2019-04-19T04:55:41Z",
  "Files" : {
    "astronauts/proguard-rules.pro" : {
      "ObjectId" : "c7ee06a9507d2b1c1b202491ce367787c4a491c4",
      "LastModified" : "2019-01-21T05:40:02Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# The simpliest strategy is to not run proguard against your project's own code.\n\n# This doesn't provide the benefits of optimization & obfuscation against your\n\n# project, but will still strip the libraries. The advantage is that your app will\n\n# work without any subsequent effort. If you choose this strategy, the proguard\n\n# configuration for the project is simply the line below.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The more involved strategy is to specifically provide rules to keep portions of your\n\n# app's codebase unmodified while allowing proguard to optimize the rest.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The first decision is whether or not you want to obfuscate your code. This provides no\n\n# performance benefit but makes it harder for other people to read your source code.\n\n# Unfortunately obfuscation can cause issues for code that uses reflection or a few other\n\n# techniques. The default is to obfuscate.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Additionally you will need to keep specific classes. A common use case is keeping all\n\n# of the models that are JSON parsed using something like Jackson.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Keep public classes and methods.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# RxJava 0.21\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ButterKnife 7\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Crashlytics 2.+\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If you are using custom exceptions, add this line so that custom exception types are skipped during obfuscation:\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# For Fabric to properly de-obfuscate your crash reports, you need to remove this line from your ProGuard config:\n\n# -printmapping mapping.txt\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Configuration for Fabric Twitter Kit\n\n# See: https://dev.twitter.com/twitter-kit/android/integrate\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# WORKAROUND for building project with GMS (google play services)\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# EventBus\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Only required if you use AsyncExecutor\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Glide specific rules #\n\n# https://github.com/bumptech/glide\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Google Play Services 4.3.23 specific rules ##\n\n## https://developer.android.com/google/play-services/setup.html#Proguard ##\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Google AdMob specific rules ##\n\n## https://developers.google.com/admob/android/quick-start ##\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# In App Billing\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##---------------Begin: proguard configuration for Gson  ----------\n\n# Gson uses generic type information stored in a class file when working with fields. Proguard\n\n# removes such information by default, so configure it to keep all of it.\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# For using GSON @Expose annotation\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Gson specific classes\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#-keep class com.google.gson.stream.** { *; }\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Application classes that will be serialized/deserialized over Gson\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Prevent proguard from stripping interface information from TypeAdapterFactory,\n\n# JsonSerializer, JsonDeserializer instances (so they can be used in @JsonAdapter)\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##---------------End: proguard configuration for Gson  ----------\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# OkHttp\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#AppCompat 7\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# http://stackoverflow.com/questions/29679177/cardview-shadow-not-appearing-in-lollipop-after-obfuscate-with-proguard/29698051\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Okio\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#PhotoView\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Platform calls Class.forName on types which do not exist on Android to determine platform.\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Platform used when running on RoboVM on iOS. Will not be used at runtime.\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Platform used when running on Java 8 VMs. Will not be used at runtime.\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Retain generic type information for use by reflection by converters and adapters.\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Retain declared checked exceptions for use by a Proxy instance.\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "common/proguard-rules.pro" : {
      "ObjectId" : "3093cb7aa40e1326e6b457b18cad9572de753f4a",
      "LastModified" : "2019-02-06T01:44:13Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# The simpliest strategy is to not run proguard against your project's own code.\n\n# This doesn't provide the benefits of optimization & obfuscation against your\n\n# project, but will still strip the libraries. The advantage is that your app will\n\n# work without any subsequent effort. If you choose this strategy, the proguard\n\n# configuration for the project is simply the line below.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The more involved strategy is to specifically provide rules to keep portions of your\n\n# app's codebase unmodified while allowing proguard to optimize the rest.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The first decision is whether or not you want to obfuscate your code. This provides no\n\n# performance benefit but makes it harder for other people to read your source code.\n\n# Unfortunately obfuscation can cause issues for code that uses reflection or a few other\n\n# techniques. The default is to obfuscate.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Additionally you will need to keep specific classes. A common use case is keeping all\n\n# of the models that are JSON parsed using something like Jackson.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Keep public classes and methods.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# RxJava 0.21\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ButterKnife 7\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Crashlytics 2.+\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If you are using custom exceptions, add this line so that custom exception types are skipped during obfuscation:\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# For Fabric to properly de-obfuscate your crash reports, you need to remove this line from your ProGuard config:\n\n# -printmapping mapping.txt\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Configuration for Fabric Twitter Kit\n\n# See: https://dev.twitter.com/twitter-kit/android/integrate\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# WORKAROUND for building project with GMS (google play services)\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# EventBus\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Only required if you use AsyncExecutor\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Glide specific rules #\n\n# https://github.com/bumptech/glide\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Google Play Services 4.3.23 specific rules ##\n\n## https://developer.android.com/google/play-services/setup.html#Proguard ##\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Google AdMob specific rules ##\n\n## https://developers.google.com/admob/android/quick-start ##\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# In App Billing\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##---------------Begin: proguard configuration for Gson  ----------\n\n# Gson uses generic type information stored in a class file when working with fields. Proguard\n\n# removes such information by default, so configure it to keep all of it.\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# For using GSON @Expose annotation\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Gson specific classes\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#-keep class com.google.gson.stream.** { *; }\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Application classes that will be serialized/deserialized over Gson\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Prevent proguard from stripping interface information from TypeAdapterFactory,\n\n# JsonSerializer, JsonDeserializer instances (so they can be used in @JsonAdapter)\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##---------------End: proguard configuration for Gson  ----------\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# OkHttp\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#AppCompat 7\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# http://stackoverflow.com/questions/29679177/cardview-shadow-not-appearing-in-lollipop-after-obfuscate-with-proguard/29698051\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Okio\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#PhotoView\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Platform calls Class.forName on types which do not exist on Android to determine platform.\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Platform used when running on RoboVM on iOS. Will not be used at runtime.\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Platform used when running on Java 8 VMs. Will not be used at runtime.\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Retain generic type information for use by reflection by converters and adapters.\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Retain declared checked exceptions for use by a Proxy instance.\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "data/proguard-rules.pro" : {
      "ObjectId" : "8bd74d64781fe737d297c7d3dd9a99fbdcce2d43",
      "LastModified" : "2018-11-06T17:53:53Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in /Users/cjones/Library/Android/sdk/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Retrofit 2.X\n\n## https://square.github.io/retrofit/ ##\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## GSON 2.2.4 specific rules ##\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Gson uses generic type information stored in a class file when working with fields. Proguard\n\n# removes such information by default, so configure it to keep all of it.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# For using GSON @Expose annotation\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Gson specific classes\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Proguard Configuration for Realm (http://realm.io)\n\n# For detailed discussion see: https://groups.google.com/forum/#!topic/realm-java/umqKCc50JGU\n\n# Additionally you need to keep your Realm Model classes as well\n\n# For example:\n\n# -keep class com.yourcompany.realm.** { *; }\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "details/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2019-01-14T06:42:52Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "events/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2019-01-14T06:42:52Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "mobile/proguard-rules-debug.pro" : {
      "ObjectId" : "52298379076ae3978f97a25c03576f3156b70310",
      "LastModified" : "2019-01-14T06:42:52Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# The simpliest strategy is to not run proguard against your project's own code.\n\n# This doesn't provide the benefits of optimization & obfuscation against your\n\n# project, but will still strip the libraries. The advantage is that your app will\n\n# work without any subsequent effort. If you choose this strategy, the proguard\n\n# configuration for the project is simply the line below.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The more involved strategy is to specifically provide rules to keep portions of your\n\n# app's codebase unmodified while allowing proguard to optimize the rest.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The first decision is whether or not you want to obfuscate your code. This provides no\n\n# performance benefit but makes it harder for other people to read your source code.\n\n# Unfortunately obfuscation can cause issues for code that uses reflection or a few other\n\n# techniques. The default is to obfuscate.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Additionally you will need to keep specific classes. A common use case is keeping all\n\n# of the models that are JSON parsed using something like Jackson.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Keep public classes and methods.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# RxJava 0.21\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ButterKnife 7\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Crashlytics 2.+\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If you are using custom exceptions, add this line so that custom exception types are skipped during obfuscation:\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# For Fabric to properly de-obfuscate your crash reports, you need to remove this line from your ProGuard config:\n\n# -printmapping mapping.txt\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Configuration for Fabric Twitter Kit\n\n# See: https://dev.twitter.com/twitter-kit/android/integrate\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# WORKAROUND for building project with GMS (google play services)\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Glide specific rules #\n\n# https://github.com/bumptech/glide\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Google Play Services 4.3.23 specific rules ##\n\n## https://developer.android.com/google/play-services/setup.html#Proguard ##\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Google AdMob specific rules ##\n\n## https://developers.google.com/admob/android/quick-start ##\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# In App Billing\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##---------------Begin: proguard configuration for Gson  ----------\n\n# Gson uses generic type information stored in a class file when working with fields. Proguard\n\n# removes such information by default, so configure it to keep all of it.\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# For using GSON @Expose annotation\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Gson specific classes\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#-keep class com.google.gson.stream.** { *; }\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Application classes that will be serialized/deserialized over Gson\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Prevent proguard from stripping interface information from TypeAdapterFactory,\n\n# JsonSerializer, JsonDeserializer instances (so they can be used in @JsonAdapter)\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##---------------End: proguard configuration for Gson  ----------\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# OkHttp\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#AppCompat 7\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# http://stackoverflow.com/questions/29679177/cardview-shadow-not-appearing-in-lollipop-after-obfuscate-with-proguard/29698051\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Okio\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#PhotoView\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Platform calls Class.forName on types which do not exist on Android to determine platform.\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Platform used when running on RoboVM on iOS. Will not be used at runtime.\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Platform used when running on Java 8 VMs. Will not be used at runtime.\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Retain generic type information for use by reflection by converters and adapters.\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Retain declared checked exceptions for use by a Proxy instance.\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "mobile/proguard-rules.pro" : {
      "ObjectId" : "c7ee06a9507d2b1c1b202491ce367787c4a491c4",
      "LastModified" : "2019-01-14T06:42:52Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# The simpliest strategy is to not run proguard against your project's own code.\n\n# This doesn't provide the benefits of optimization & obfuscation against your\n\n# project, but will still strip the libraries. The advantage is that your app will\n\n# work without any subsequent effort. If you choose this strategy, the proguard\n\n# configuration for the project is simply the line below.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The more involved strategy is to specifically provide rules to keep portions of your\n\n# app's codebase unmodified while allowing proguard to optimize the rest.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The first decision is whether or not you want to obfuscate your code. This provides no\n\n# performance benefit but makes it harder for other people to read your source code.\n\n# Unfortunately obfuscation can cause issues for code that uses reflection or a few other\n\n# techniques. The default is to obfuscate.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Additionally you will need to keep specific classes. A common use case is keeping all\n\n# of the models that are JSON parsed using something like Jackson.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Keep public classes and methods.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# RxJava 0.21\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ButterKnife 7\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Crashlytics 2.+\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If you are using custom exceptions, add this line so that custom exception types are skipped during obfuscation:\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# For Fabric to properly de-obfuscate your crash reports, you need to remove this line from your ProGuard config:\n\n# -printmapping mapping.txt\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Configuration for Fabric Twitter Kit\n\n# See: https://dev.twitter.com/twitter-kit/android/integrate\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# WORKAROUND for building project with GMS (google play services)\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# EventBus\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Only required if you use AsyncExecutor\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Glide specific rules #\n\n# https://github.com/bumptech/glide\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Google Play Services 4.3.23 specific rules ##\n\n## https://developer.android.com/google/play-services/setup.html#Proguard ##\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Google AdMob specific rules ##\n\n## https://developers.google.com/admob/android/quick-start ##\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# In App Billing\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##---------------Begin: proguard configuration for Gson  ----------\n\n# Gson uses generic type information stored in a class file when working with fields. Proguard\n\n# removes such information by default, so configure it to keep all of it.\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# For using GSON @Expose annotation\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Gson specific classes\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#-keep class com.google.gson.stream.** { *; }\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Application classes that will be serialized/deserialized over Gson\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Prevent proguard from stripping interface information from TypeAdapterFactory,\n\n# JsonSerializer, JsonDeserializer instances (so they can be used in @JsonAdapter)\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##---------------End: proguard configuration for Gson  ----------\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# OkHttp\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#AppCompat 7\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# http://stackoverflow.com/questions/29679177/cardview-shadow-not-appearing-in-lollipop-after-obfuscate-with-proguard/29698051\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Okio\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#PhotoView\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Platform calls Class.forName on types which do not exist on Android to determine platform.\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Platform used when running on RoboVM on iOS. Will not be used at runtime.\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Platform used when running on Java 8 VMs. Will not be used at runtime.\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Retain generic type information for use by reflection by converters and adapters.\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Retain declared checked exceptions for use by a Proxy instance.\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "news/proguard-rules-debug.pro" : {
      "ObjectId" : "749a7c1aefbd61baa8cd8bd256252cb5dfbfb33c",
      "LastModified" : "2019-01-14T06:42:52Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# The simpliest strategy is to not run proguard against your project's own code.\n\n# This doesn't provide the benefits of optimization & obfuscation against your\n\n# project, but will still strip the libraries. The advantage is that your app will\n\n# work without any subsequent effort. If you choose this strategy, the proguard\n\n# configuration for the project is simply the line below.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The more involved strategy is to specifically provide rules to keep portions of your\n\n# app's codebase unmodified while allowing proguard to optimize the rest.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The first decision is whether or not you want to obfuscate your code. This provides no\n\n# performance benefit but makes it harder for other people to read your source code.\n\n# Unfortunately obfuscation can cause issues for code that uses reflection or a few other\n\n# techniques. The default is to obfuscate.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Additionally you will need to keep specific classes. A common use case is keeping all\n\n# of the models that are JSON parsed using something like Jackson.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Keep public classes and methods.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# RxJava 0.21\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ButterKnife 7\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Crashlytics 2.+\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If you are using custom exceptions, add this line so that custom exception types are skipped during obfuscation:\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# For Fabric to properly de-obfuscate your crash reports, you need to remove this line from your ProGuard config:\n\n# -printmapping mapping.txt\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Configuration for Fabric Twitter Kit\n\n# See: https://dev.twitter.com/twitter-kit/android/integrate\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# WORKAROUND for building project with GMS (google play services)\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Glide specific rules #\n\n# https://github.com/bumptech/glide\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Google Play Services 4.3.23 specific rules ##\n\n## https://developer.android.com/google/play-services/setup.html#Proguard ##\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Google AdMob specific rules ##\n\n## https://developers.google.com/admob/android/quick-start ##\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# In App Billing\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##---------------Begin: proguard configuration for Gson  ----------\n\n# Gson uses generic type information stored in a class file when working with fields. Proguard\n\n# removes such information by default, so configure it to keep all of it.\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# For using GSON @Expose annotation\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Gson specific classes\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#-keep class com.google.gson.stream.** { *; }\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Application classes that will be serialized/deserialized over Gson\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Prevent proguard from stripping interface information from TypeAdapterFactory,\n\n# JsonSerializer, JsonDeserializer instances (so they can be used in @JsonAdapter)\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##---------------End: proguard configuration for Gson  ----------\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# OkHttp\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#AppCompat 7\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# http://stackoverflow.com/questions/29679177/cardview-shadow-not-appearing-in-lollipop-after-obfuscate-with-proguard/29698051\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Okio\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#PhotoView\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Platform calls Class.forName on types which do not exist on Android to determine platform.\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Platform used when running on RoboVM on iOS. Will not be used at runtime.\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Platform used when running on Java 8 VMs. Will not be used at runtime.\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Retain generic type information for use by reflection by converters and adapters.\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Retain declared checked exceptions for use by a Proxy instance.\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "news/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2019-01-14T06:42:52Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "spacestations/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2019-02-06T01:44:13Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "wear/proguard-rules-debug.pro" : {
      "ObjectId" : "19bc4a6cce59cce7658b899b664e573ceb329007",
      "LastModified" : "2019-02-06T01:44:13Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# The simpliest strategy is to not run proguard against your project's own code.\n\n# This doesn't provide the benefits of optimization & obfuscation against your\n\n# project, but will still strip the libraries. The advantage is that your app will\n\n# work without any subsequent effort. If you choose this strategy, the proguard\n\n# configuration for the project is simply the line below.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The more involved strategy is to specifically provide rules to keep portions of your\n\n# app's codebase unmodified while allowing proguard to optimize the rest.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The first decision is whether or not you want to obfuscate your code. This provides no\n\n# performance benefit but makes it harder for other people to read your source code.\n\n# Unfortunately obfuscation can cause issues for code that uses reflection or a few other\n\n# techniques. The default is to obfuscate.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Additionally you will need to keep specific classes. A common use case is keeping all\n\n# of the models that are JSON parsed using something like Jackson.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Keep public classes and methods.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# RxJava 0.21\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ButterKnife 7\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Crashlytics 2.+\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If you are using custom exceptions, add this line so that custom exception types are skipped during obfuscation:\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# For Fabric to properly de-obfuscate your crash reports, you need to remove this line from your ProGuard config:\n\n# -printmapping mapping.txt\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Configuration for Fabric Twitter Kit\n\n# See: https://dev.twitter.com/twitter-kit/android/integrate\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# WORKAROUND for building project with GMS (google play services)\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Glide specific rules #\n\n# https://github.com/bumptech/glide\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Google Play Services 4.3.23 specific rules ##\n\n## https://developer.android.com/google/play-services/setup.html#Proguard ##\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Google AdMob specific rules ##\n\n## https://developers.google.com/admob/android/quick-start ##\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# In App Billing\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##---------------Begin: proguard configuration for Gson  ----------\n\n# Gson uses generic type information stored in a class file when working with fields. Proguard\n\n# removes such information by default, so configure it to keep all of it.\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# For using GSON @Expose annotation\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Gson specific classes\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#-keep class com.google.gson.stream.** { *; }\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Application classes that will be serialized/deserialized over Gson\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Prevent proguard from stripping interface information from TypeAdapterFactory,\n\n# JsonSerializer, JsonDeserializer instances (so they can be used in @JsonAdapter)\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##---------------End: proguard configuration for Gson  ----------\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# OkHttp\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#AppCompat 7\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# http://stackoverflow.com/questions/29679177/cardview-shadow-not-appearing-in-lollipop-after-obfuscate-with-proguard/29698051\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Okio\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#PhotoView\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Platform calls Class.forName on types which do not exist on Android to determine platform.\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Platform used when running on RoboVM on iOS. Will not be used at runtime.\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Platform used when running on Java 8 VMs. Will not be used at runtime.\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Retain generic type information for use by reflection by converters and adapters.\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Retain declared checked exceptions for use by a Proxy instance.\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "wear/proguard-rules.pro" : {
      "ObjectId" : "453d018b525fa12a1a6c218883b72d48e699be83",
      "LastModified" : "2019-02-06T01:44:13Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in /Users/cjones/Library/Android/sdk/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# OkHttp\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Firefox\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Retain generated class which implement Unbinder.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Prevent obfuscation of types which use ButterKnife annotations since the simple name\n\n# is used to reflectively look up the generated ViewBinding.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# WORKAROUND for building project with GMS (google play services)\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Preserve all fundamental application classes.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Preserve all native method names and the names of their classes.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    }
  },
  "FileTypes" : {
    "QMAKE" : 12
  },
  "ElapsedTime" : 1809
}