{
  "Repository" : "5874046",
  "Revision" : "HEAD",
  "ObjectId" : "6cabdfaf7652c66bce3e059253ab8f581b55c3a4",
  "CommitTime" : "2019-04-18T11:34:58Z",
  "Files" : {
    "CMake/Modules/CodeCoverage.cmake" : {
      "ObjectId" : "a0ec90526acdc014c809cedf1040362c930c0c90",
      "LastModified" : "2014-12-01T09:45:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Edited https://github.com/bilke/cmake-modules/blob/master/CodeCoverage.cmake\n\n# This library can be used to collect code coverage and generate HTML or XML report\n\n# This library uses standard CMAKE variables:\n\n# - determining CMAKE compiler  (CMAKE_COMPILER_IS_GNUCXX and CMAKE_CXX_COMPILER_ID)\n\n# - resolving source dir        (CMAKE_SOURCE_DIR)\n\n# - resolving binary dir        (CMAKE_BINARY_DIR)\n\n#\n\n# note: no CMAKE variables are affected\n\n#\n\n# usage:\n\n# 1) call function in your cmakelists which adds custom target (don't forget to include this file)\n\n#    specify custom target name (_targetname) and XML/HTML report name (_outputname)\n\n#    example: \n\n#       INCLUDE (CodeCoverage)\n\n#       COVERAGE_SETUP_COBERTURA_COLLECTION (collect-coverage coverage.xml)\n\n# 2) compile source code with flags supporting code coverage AND without any\n\n#    optimization (optimization can alter source code in some cases)\n\n#    example flags: -g -O0 -fprofile-arcs -ftest-coverage\n\n# 3) run your program, run tests\n\n# 4) collect coverage\n\n#    example: \n\n#       make collect-coverage\n\n#\n\n# coverage.xml should contain cobertura-style XML coverage\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check prereqs\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOT GCOV_PATH\n",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Clang version 3.0.0 and greater now supports gcov as well.\n",
        "Line" : 38,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# NOT CMAKE_COMPILER_IS_GNUCXX\n",
        "Line" : 44,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Function creates HTML report by processing code coverage files\n\n#\n\n# Param _targetname     The name of new the custom make target\n\n# Param _outputname     lcov output is generated as _outputname.info\n\n#                       HTML report is generated in _outputname/index.html\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 58,
        "CharPositionInLine" : 9
      },
      "7" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 62,
        "CharPositionInLine" : 9
      },
      "8" : {
        "Text" : "# Setup target\n",
        "Line" : 64,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 80,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# COVERAGE_SETUP_HTML_COLLECTION\n",
        "Line" : 86,
        "CharPositionInLine" : 14
      },
      "13" : {
        "Text" : "# Function creates XML report by processing code coverage files\n\n#\n\n# Param _targetname     The name of new the custom make target\n\n# Param _outputname     cobertura output is generated as _outputname (e.g. coverage.xml)\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# NOT GCOVR_PATH\n",
        "Line" : 99,
        "CharPositionInLine" : 9
      },
      "15" : {
        "Text" : "# Running gcovr\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 109,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# COVERAGE_SETUP_COBERTURA_COLLECTION\n",
        "Line" : 115,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 18
    },
    "CMake/Modules/CorrectWindowsPaths.cmake" : {
      "ObjectId" : "427acb716e68f17c55d423d06a2a30dc753f8e2e",
      "LastModified" : "2013-09-05T10:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CorrectWindowsPaths - this module defines one macro\n\n#\n\n# CONVERT_CYGWIN_PATH( PATH )\n\n#  This uses the command cygpath (provided by cygwin) to convert\n\n#  unix-style paths into paths useable by cmake on windows\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Some cygwin utilities (namely make) do not like DOS paths, but are happy with UNIX paths\n\n# On the other hand out of the cygwin, the cygpath tool doesn't need to be available.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/Modules/FindArmadilloFlow.cmake" : {
      "ObjectId" : "053497e5b37794c60d75d527b4cbada44bf74773",
      "LastModified" : "2016-09-12T11:34:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Armadillo include dirs and libraries\n\n# Usage of this module as follows:\n\n#\n\n# == Using Armadillo: ==\n\n#\n\n#   find_package( Armadillo RECQUIRED )\n\n#   include_directories(${Armadillo_INCLUDE_DIRS})\n\n#   add_executable(foo foo.cc)\n\n#   target_link_libraries(foo ${Armadillo_LIBRARIES})\n\n#\n\n#=============================================================================\n\n#\n\n# This module sets the following variables:\n\n#  Armadillo_FOUND - set to true if the library is found\n\n#  Armadillo_INCLUDE_DIRS - list of required include directories\n\n#  Armadillo_LIBRARIES - list of libraries to be linked \n\n#  Armadillo_VERSION_MAJOR - major version number\n\n#  Armadillo_VERSION_MINOR - minor version number\n\n#  Armadillo_VERSION_PATCH - patch version number\n\n#  Armadillo_VERSION_STRING - version number as a string (ex: \"1.0.4\")\n\n#  Armadillo_VERSION_NAME - name of the version (ex: \"Antipodean Antileech\")\n\n#  Armadillo_CONFIGURE_FILE - file that, when included, creates armadillo library target, that links correct libraries\n\n#       ARMADILLO_INCLUDE_DIRS - include directories for Armadillo\n\n#       ARMADILLO_LIBRARY_DIRS - library directories for Armadillo (normally not used!)\n\n#       ARMADILLO_LIBRARIES    - libraries to link against !!! crucial for more complicated projects\n\n#\n\n#=============================================================================\n\n# Copyright 2011 Clement Creusot\n\n#\n\n# This file is part of the Armadillo C++ library.\n\n# It is provided without any warranty of fitness\n\n# for any purpose. You can redistribute this file\n\n# and/or modify it under the terms of the GNU\n\n# Lesser General Public License (LGPL) as published\n\n# by the Free Software Foundation, either version 3\n\n# of the License or (at your option) any later version.\n\n# (see http://www.opensource.org/licenses for more info)\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# !!! NOT TESTED ON Windows\n",
        "Line" : 53,
        "CharPositionInLine" : 40
      },
      "2" : {
        "Text" : "# UNIX LIKE SYSTEMS\n",
        "Line" : 59,
        "CharPositionInLine" : 16
      },
      "3" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Extract version information from <armadillo>\n\n# ------------------------------------------------------------------------\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# WARNING: Early releases of Armadillo didn't have the arma_version.hpp file.\n\n# (e.g. v.0.9.8-1 in ubuntu maverick packages (2001-03-15))\n\n# If the file is missing, set all values to 0  \n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Read and parse armdillo version header file for version number \n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# WARNING: The number of spaces before the version name is not one.\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#======================\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Sets Armadillo_FOUND to TRUE if the version matchs exactly.\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Hide internal variables\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#======================",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "CMake/Modules/FindBDDCML.cmake" : {
      "ObjectId" : "759194ca12cd4cccda76348900822ddf994f59da",
      "LastModified" : "2016-09-12T11:34:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find BDDCML library\n\n# - Balancing domain decomposition by constrains - multilevel (developed by Jakub Sistek)\n\n# Input: BDDCML_ROOT\n\n#\n\n# Output:\n\n# BDDCML_INCLUDES - where to find header files\n\n# BDDCML_LIBRARIES - Link sequence of bddcml libraries and other libraries linked by bddcml.\n\n# BDDCML_FOUND - True if FFTW found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################## \n\n# Use package multipass to alow multiple tries when search for BDDCML\n\n##########################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if (BDDCML_INCLUDES)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#  set (BDDCML_FIND_QUIETLY TRUE)\n\n#endif()\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#string(REPLACE REGEX \"/src$\" \"\" BDDCML_ROOT ${BDDCML_INCLUDES})\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# use make.inc to get whole link sequence\n\n# A temporary makefile to probe make.inc\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "######################################\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#message(STATUS ${BDDCML_INC_DIRS})\n\n#STRING(REGEX REPLACE \" *\" \";\"  BDDCML_INC_LIST ${BDDCML_INC_DIRS}) \n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#message(STATUS \"BDDCML_LIBS: ${BDDCML_LINK_SEQ}\")\n\n#message(STATUS \"BDDCML_CDEFS: ${BDDCML_CDEFS}\")\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#file (REMOVE ${config_makefile})\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Extract include paths and libraries from compile command line\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Extract BLOPEX object files \n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#STRING(REGEX REPLACE <regular_expression>  <replace_expression> <output variable>  <input> [<input>...])\n\n# ATTENTION: input has to be quoted otherwise it interprets contens of variable, in particular run REGEX on every item in ; separated list\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#STRING(REGEX MATCH \"[^;]*BLOPEX\\\\.a\"  BDDCML_BLOPEX_LIB \"${BDDCML_LIBS}\" )\n\n#STRING(REGEX MATCH \"[^;]\"  BDDCML_BEGIN_LIB ${BDDCML_LIBS} )\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#message(STATUS \"out: ${BDDCML_BLOPEX_LIB}\")\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set FFTW_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "CMake/Modules/FindPARMETIS.cmake" : {
      "ObjectId" : "95a2da2aba1162eebeee7293fa9f69fa4f5ae579",
      "LastModified" : "2016-09-12T11:34:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find the PARMETIS includes and libraries\n\n#\n\n# ParMETIS is an MPI-based parallel library that implements a variety of algorithms for \n\n# partitioning unstructured graphs, meshes, and for computing fill-reducing orderings of \n\n# sparse matrices. It can be found at:\n\n# \thttp://www-users.cs.umn.edu/~karypis/metis/parmetis/index.html\n\n#\n\n# PARMETIS_INCLUDE_DIR - where to find autopack.h\n\n# PARMETIS_LIBRARIES   - List of fully qualified libraries to link against.\n\n# PARMETIS_FOUND       - Do not attempt to use if \"no\" or undefined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/Modules/FindPETSc.cmake" : {
      "ObjectId" : "32725ea75e487113505204c0836c3c5903c62c7a",
      "LastModified" : "2016-09-12T11:34:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find PETSc\n\n#\n\n#\n\n# Usage:\n\n#  find_package(PETSc COMPONENTS CXX)  - required if build --with-clanguage=C++ --with-c-support=0\n\n#  find_package(PETSc COMPONENTS C)    - standard behavior of checking build using a C compiler\n\n#  find_package(PETSc)                 - same as above\n\n#\n\n# Setting these changes the behavior of the search\n\n#  PETSC_DIR - directory in which PETSc resides\n\n#  PETSC_ARCH - build architecture\n\n#  PETSC_EXPORT_LIST - List of variables from PETSc makefile system to export. For each name XYZ in the list\n\n#                      we set CMake variable PETSC_VAR_XYZ.\n\n#  PETSC_ADDITIONAL_LIBS - Add libraries to the link sequence; use only to fix possible reported \n\n#                          problems with absolute path resolution.\n\n#\n\n# Once done this will define:\n\n#\n\n#  PETSC_FOUND        - system has PETSc\n\n#  PETSC_INCLUDES     - the PETSc include directories\n\n#  PETSC_LIBRARIES    - Link these to use PETSc\n\n#  PETSC_COMPILER     - Compiler used by PETSc, helpful to find a compatible MPI\n\n#  PETSC_DEFINITIONS  - Compiler switches for using PETSc\n\n#  PETSC_MPIEXEC      - Executable for running MPI programs\n\n#  PETSC_VERSION      - Version string (MAJOR.MINOR.SUBMINOR)\n\n#\n\n#  PETSC_EXTERNAL_LIB   - CMake list of resolved (hopefully) external libraries linked by PETSC, \n\n#                        in the case of static PETSC libraries this list is already included in PETSC_LIBRARIES\n\n#\n\n#  PETSC_VAR_XYZ       - exported variables from given PETSC_EXPORT_LIST\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Right now, this is designed for compatability with the --with-clanguage option, so\n\n# only allow one item in the components list.\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# This is a stub for allowing multiple components should that time ever come. Perhaps\n\n# to also test Fortran bindings?\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# break line into three fields (the first is always \"#define\")\n",
        "Line" : 66,
        "CharPositionInLine" : 53
      },
      "5" : {
        "Text" : "# Also in local scope so we have access below\n",
        "Line" : 70,
        "CharPositionInLine" : 34
      },
      "6" : {
        "Text" : "# make dev version compare higher than any patch level of a released version\n",
        "Line" : 75,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "########################################################## \n\n# Try to find main header file.\n\n##########################################################\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Debian paths\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# MacPorts path\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "########################################################## \n\n# Try to find PETSC_ARCH subdirectory that contains petscconf.h file.\n\n##########################################################\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# If set, use environment variable first\n\n# Debian defaults\n",
        "Line" : 112,
        "CharPositionInLine" : 39
      },
      "12" : {
        "Text" : "########################################################## \n\n# Use package multipass to alow multiple tries when search for PETSc.\n\n##########################################################\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#message(STATUS \"petsc_external_lib: ${PETSC_EXTERNAL_LIB}\\n\")\n\n#message(STATUS \"petsc_includes: ${PETSC_INCLUDES}\\n\")\n\n#message(STATUS \"petsc_config_current: ${petsc_config_current}\\n\")\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################## \n\n# Determine dir layout, detect 'rules' and 'variables' files, detect PETSc version\n\n##########################################################\n\n# Determine whether the PETSc layout is old-style (through 2.3.3) or\n\n# new-style (>= 3.0.0)\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# > 3.5\n",
        "Line" : 151,
        "CharPositionInLine" : 71
      },
      "16" : {
        "Text" : "# > 2.3.3\n",
        "Line" : 154,
        "CharPositionInLine" : 67
      },
      "17" : {
        "Text" : "# <= 2.3.3\n",
        "Line" : 157,
        "CharPositionInLine" : 63
      },
      "18" : {
        "Text" : "# All remaining is under this condition except the standard variable handling at the very end\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Put variables into environment since they are needed to get\n\n# configuration (petscvariables) in the PETSc makefile\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "################################################################\n\n# Extracting  variables from PETSc configuration\n\n##############################################################\n\n# A temporary makefile to probe the PETSc configuration\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "######################################\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "#message(STATUS ${var_list})   \n",
        "Line" : 197,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# We are done with the temporary Makefile, calling PETSC_GET_VARIABLE after this point is invalid!\n",
        "Line" : 218,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# add libraries specified by user (possibly fixing wrong sequence provided by PETSc)\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Extract include paths and libraries from compile command line\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "#on windows we need to make sure we're linking against the right\n\n#runtime library\n",
        "Line" : 228,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "#message (STATUS \"petsc_lib_dir ${petsc_lib_dir}\")\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "###############################################################################\n\n# Find PETSc libraries\n\n##############################################################################\n",
        "Line" : 253,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Clear any stale value, if we got here, we need to find it again\n",
        "Line" : 257,
        "CharPositionInLine" : 76
      },
      "30" : {
        "Text" : "#windows expects \"libfoo\", linux expects \"foo\"\n",
        "Line" : 259,
        "CharPositionInLine" : 31
      },
      "31" : {
        "Text" : "# Look for petscvec first, if it doesn't exist, we must be using single-library\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# libpetscsys is called libpetsc prior to 3.1 (when single-library was introduced)\n",
        "Line" : 271,
        "CharPositionInLine" : 47
      },
      "33" : {
        "Text" : "#message(STATUS \"PETSC_LIBRARIES_${libs}: \" ${PETSC_LIBRARIES_${libs}})       \n",
        "Line" : 279,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "# There is no libpetscvec\n",
        "Line" : 289,
        "CharPositionInLine" : 70
      },
      "35" : {
        "Text" : "#########################################################################\n\n# Test that PETSc works\n\n############################################################\n",
        "Line" : 304,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# check if we can at least compile the source\n",
        "Line" : 335,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# check if we can run the executable \n",
        "Line" : 339,
        "CharPositionInLine" : 6
      },
      "38" : {
        "Text" : "# Macro resolve_libraries comes from ResolveCompilerPaths, it tries resolve all libraries form given compiler line\n\n# Unfortunately this only mimics compiler resolutions and occasionally can be incorrect. In such a case use PETSC_ADDITIONAL_LIBS.\n",
        "Line" : 355,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Multipass_test_1 ####################\n",
        "Line" : 361,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Minimal includes fail, see if just adding full includes fixes it\n",
        "Line" : 366,
        "CharPositionInLine" : 33
      },
      "41" : {
        "Text" : "# Multipass_test_2 ####################\n",
        "Line" : 368,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# It does, we just need all the includes (\n",
        "Line" : 370,
        "CharPositionInLine" : 33
      },
      "43" : {
        "Text" : "# We are going to need to link the external libs explicitly\n",
        "Line" : 373,
        "CharPositionInLine" : 35
      },
      "44" : {
        "Text" : "# Multipass_test_3 ####################\n",
        "Line" : 375,
        "CharPositionInLine" : 6
      },
      "45" : {
        "Text" : "# Multipass_test_4 ####################      \n\n# It looks like we really need everything, should have listened to Matt\n",
        "Line" : 386,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# We fail anyways\n",
        "Line" : 390,
        "CharPositionInLine" : 29
      },
      "47" : {
        "Text" : "# We fail anyways\n",
        "Line" : 393,
        "CharPositionInLine" : 31
      },
      "48" : {
        "Text" : "# this indicates PETSC_FOUND\n\n# this is optional\n",
        "Line" : 405,
        "CharPositionInLine" : 40
      },
      "49" : {
        "Text" : "# We do an out-of-source build so __FILE__ will be an absolute path, hence __INSDIR__ is superfluous\n",
        "Line" : 415,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# Sometimes this can be used to assist FindMPI.cmake\n",
        "Line" : 421,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# Note that we have forced values for all these choices.  If you\n\n# change these, you are telling the system to trust you that they\n\n# work.  It is likely that you will end up with a broken build.\n",
        "Line" : 427,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 52
    },
    "CMake/Modules/FindPackageMultipass.cmake" : {
      "ObjectId" : "1fb4c83b0ddbce31f0c10e194af468097ad8ce34",
      "LastModified" : "2016-09-12T11:34:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PackageMultipass - this module defines two macros\n\n#\n\n# FIND_PACKAGE_MULTIPASS (Name CURRENT\n\n#  STATES VAR0 VAR1 ...\n\n#  DEPENDENTS DEP0 DEP1 ...)\n\n#\n\n#  This function creates a cache entry <UPPERCASED-Name>_CURRENT which\n\n#  the user can set to \"NO\" to trigger a reconfiguration of the package.\n\n#  The first time this function is called, the values of\n\n#  <UPPERCASED-Name>_VAR0, ... are saved.  If <UPPERCASED-Name>_CURRENT\n\n#  is false or if any STATE has changed since the last time\n\n#  FIND_PACKAGE_MULTIPASS() was called, then CURRENT will be set to \"NO\",\n\n#  otherwise CURRENT will be \"YES\".  IF not CURRENT, then\n\n#  <UPPERCASED-Name>_DEP0, ... will be FORCED to NOTFOUND.\n\n#  Example:\n\n#    find_path (FOO_DIR include/foo.h)\n\n#    FIND_PACKAGE_MULTIPASS (Foo foo_current\n\n#      STATES DIR\n\n#      DEPENDENTS INCLUDES LIBRARIES)\n\n#    if (NOT foo_current)\n\n#      # Make temporary files, run programs, etc, to determine FOO_INCLUDES and FOO_LIBRARIES\n\n#    endif (NOT foo_current)\n\n#\n\n# MULTIPASS_SOURCE_RUNS (INCLUDES LIBRARIES SOURCE RUNS LANGUAGE)\n\n#  Always runs the given test, use this when you need to re-run tests\n\n#  because parent variables have made old cache entries stale. The LANGUAGE\n\n#  variable is either C or CXX indicating which compiler the test should\n\n#  use. \n\n#\n\n# MULTIPASS_C_SOURCE_RUNS (INCLUDES LIBRARIES SOURCE RUNS)\n\n#  DEPRECATED! This is only included for backwards compatability. Use\n\n#  the more general MULTIPASS_SOURCE_RUNS instead.\n\n#  Always runs the given test, use this when you need to re-run tests\n\n#  because parent variables have made old cache entries stale.\n\n#\n\n# MULTIPASS_C_SOURCE_COMPILES(includes libraries source compiles)\n\n#  Same as MULTIPASS_C_SOURCE_RUNS but only check if the source compiles.\n\n#  TODO: make version for any language like MULTIPASS_SOURCE_RUNS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The name of the stored value for the given state\n",
        "Line" : 51,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# Clear all the dependent variables so that the module can reset them\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# This is a ridiculous hack.  CHECK_${language}_SOURCE_* thinks that if the\n\n# *name* of the return variable doesn't change, then the test does\n\n# not need to be re-run.  We keep an internal count which we\n\n# increment to guarantee that every test name is unique.  If we've\n\n# gotten here, then the configuration has changed enough that the\n\n# test *needs* to be rerun.\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Why can't I add to a cache variable?\n",
        "Line" : 96,
        "CharPositionInLine" : 49
      },
      "5" : {
        "Text" : "# This is a ridiculous hack.  CHECK_C_SOURCE_* thinks that if the\n\n# *name* of the return variable doesn't change, then the test does\n\n# not need to be re-run.  We keep an internal count which we\n\n# increment to guarantee that every test name is unique.  If we've\n\n# gotten here, then the configuration has changed enough that the\n\n# test *needs* to be rerun.\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Why can't I add to a cache variable?\n",
        "Line" : 125,
        "CharPositionInLine" : 49
      },
      "CommentCount" : 7
    },
    "CMake/Modules/FindPugiXml.cmake" : {
      "ObjectId" : "7eae464dddfb41e97bc2eec6641e8517955fd87b",
      "LastModified" : "2017-05-30T09:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate pugi-xml\n\n#\n\n# This module defines\n\n#  PUGIXML_FOUND, if false, do not try to link to pugixml\n\n#  PUGIXML_LIBRARY, where to find pugixml\n\n#  PUGIXML_INCLUDE_DIR, where to find pugixml.hpp\n\n#\n\n# By default, the dynamic libraries of pugi-xml will be found. To find the static ones instead,\n\n# you must set the PugiXml_STATIC_LIBRARY variable to TRUE before calling find_package(PugiXml ...).\n\n#\n\n# If pugi-xml is not installed in a standard path, you can use the PugiXml_ROOT_HINT CMake variable\n\n# to tell CMake where pugi-xml is.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# attempt to find static library first if this is set\n\n# currently force static library\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if(PugiXml_STATIC_LIBRARY)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#endif()\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# find the pugi-xml include directory\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# find the pugi-xml library\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PUGIXML_FOUND to TRUE if all listed variables are TRUE\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "CMake/Modules/FindYamlCpp.cmake" : {
      "ObjectId" : "3badee1971cc3b481f5afbca947eb97eaeb08d01",
      "LastModified" : "2017-05-30T09:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate yaml-cpp\n\n#\n\n# This module defines\n\n#  YAMLCPP_FOUND, if false, do not try to link to yaml-cpp\n\n#  YAMLCPP_LIBRARY, where to find yaml-cpp\n\n#  YAMLCPP_INCLUDE_DIR, where to find yaml.h\n\n#\n\n# By default, the dynamic libraries of yaml-cpp will be found. To find the static ones instead,\n\n# you must set the YamlCpp_STATIC_LIBRARY variable to TRUE before calling find_package(YamlCpp ...).\n\n#\n\n# If yaml-cpp is not installed in a standard path, you can use the YamlCpp_ROOT_HINT CMake variable\n\n# to tell CMake where yaml-cpp is.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# attempt to find static library first if this is set\n\n# currently force static library\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if(YamlCpp_STATIC_LIBRARY)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#endif()\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# find the yaml-cpp include directory\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# find the yaml-cpp library\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set YAMLCPP_FOUND to TRUE if all listed variables are TRUE\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "CMake/Modules/FindZlib.cmake" : {
      "ObjectId" : "bbe9e2f67026851a89dae411b63081a41d59fc37",
      "LastModified" : "2017-05-30T09:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate zlib\n\n#\n\n# This module defines\n\n#  ZLIB_FOUND, if false, do not try to link to zlib\n\n#  ZLIB_LIBRARY, where to find zlib\n\n#  ZLIB_INCLUDE_DIR, where to find ZLibrary.h\n\n#\n\n# By default, the dynamic libraries of zlib will be found. To find the static ones instead,\n\n# you must set the Zlib_STATIC_LIBRARY variable to TRUE before calling find_package(Zlib ...).\n\n#\n\n# If zlib is not installed in a standard path, you can use the Zlib_ROOT_HINT CMake variable\n\n# to tell CMake where zlib is.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# attempt to find static library first if this is set\n\n# currently force static library\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if(Zlib_STATIC_LIBRARY)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#endif()\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# find the zlib include directory\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#          PATH_SUFFIXES zlibrary\n\n#          HINTS \n\n#              ${Zlib_ROOT_HINT}/include/\n\n#          PATHS\n\n#              /usr/local/include/\n\n#              /usr/include/\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# find the zlib library\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#             PATH_SUFFIXES lib64 lib\n\n#             HINTS\n\n#                 ${Zlib_ROOT_HINT}/lib/\n\n#             PATHS  \n\n#                /usr/local\n\n#                /usr\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set ZLIB_FOUND to TRUE if all listed variables are TRUE\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "CMake/Modules/Flow123d_config_header.cmake" : {
      "ObjectId" : "33c6060ca076cf540b4b3389a21458e2fa1cf169",
      "LastModified" : "2017-05-30T09:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# variable for storing definitions\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# macro which replaces add_definitions function and store all values to the DEFINITIONS_LIST\n\n# also generates DEFINITIONS_CONTENT variable containing valid header file definitions\n\n# MACRO also adds prefix FLOW123D_\n\n# usage: \n\n# FLOW_DEFINE (Flow123d_DEBUG)      -> #define FLOW123D_Flow123d_DEBUG 1\n\n# FLOW_DEFINE (Foo)                 -> #define FLOW123D_Foo 1\n\n# FLOW_DEFINE (Bar \"string value\")  -> #define FLOW123D_Bar \"string value\"\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# macro which replaces add_definitions function and stores ONLY numeric constants in the DEFINITIONS_LIST\n\n# also generates DEFINITIONS_CONTENT variable containing valid header file definitions\n\n# MACRO also adds prefix FLOW123D_\n\n# usage: \n\n# FLOW_DEFINE (PYTHONLIBS_VERSION_MAJOR 3)      -> #define FLOW123D_PYTHONLIBS_VERSION_MAJOR 3\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MACRO will generate definitions.tmp file in which all definition will be stored\n\n# after that python script will expand this file into valid header file config.h\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# prepare tmp output location variable \n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# write definitions to tmp file\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "CMake/Modules/Flow123d_git_info.cmake" : {
      "ObjectId" : "c82c2771bdc0602c2e6d081fdc269927840c9709",
      "LastModified" : "2017-05-30T09:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####\n\n# Detect Git executable and retrieve some information from the repository.\n\n# \n\n# Use variable: FLOW123D_SOURCE_DIR as working directory when calling git \n\n#\n\n# Module set (not cached) these variables:\n\n# GIT_BRANCH - current git branch\n\n# GIT_DESCRIBE - human-friendly description of current commit\n\n#                (last tag + hash)\n\n# GIT_URL - URL of remote repository \n\n#\n\n# Consistent version info to be used on various places:\n\n# For CPack versioning: \n\n# GIT_VERSION_MAJOR, GIT_VERSION_MINOR, GIT_VERSION_PATCH\n\n# Version in flow123d executable, ref manual and in final package names\n\n# GIT_VERSION_FULL\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(STATUS \"PWD: ${FLOW123D_SOURCE_DIR}\")\n\n# get GIT branch\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Get the describe string - tag + num. of commits since tag + short hash\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Get remote branch we are tracking\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# detection of remote is unstable, use \"origin\" instead\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Get Fetch URL of the remote\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#message(STATUS \"GIT_REMOTE: ${GIT_REMOTE}\")\n\n#message(STATUS \"GIT_BRANCH: ${GIT_BRANCH}\")\n\n#message(STATUS \"GIT_DESCRIBE: ${GIT_DESCRIBE}\")\n\n#message(STATUS \"GIT_REMOTE_BRANCH: ${GIT_REMOTE_BRANCH}\")\n\n#message(STATUS \"GIT_FULL_URL: ${GIT_FULL_URL_INFO}\")\n\n#message(STATUS \"GIT_FULL_URL_ESC_QUOTES: ${GIT_FULL_URL_ESC_QUOTES}\")\n\n#message(STATUS \"GIT_URL_TMP: ${GIT_URL_TMP}\")\n\n#message(STATUS \"GIT_URL: ${GIT_URL}\")\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# first try to read version from file\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# version stored in file is in correct format \n\n# so we extract version components into list\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# git branch is in correct format \n\n# so we extract version components into list\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# no valid release version was found\n\n# version will be set to 0.0.x where x is branch and commit of current version\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "CMake/Modules/Flow123d_git_rev_num.cmake" : {
      "ObjectId" : "4876b93a2ea1a6f506972d066cdd7cbc0a828784",
      "LastModified" : "2017-05-30T09:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####\n\n# this CMake script is called at build time to get revision of current working copy\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Arguments:\n\n# FLOW123D_SOURCE_DIR \n\n#   directory of CMAKE_SOURCE_DIR\n\n# OUTPUT_FILE_PATH\n\n#   location where result will be saved, i.e. /path_to_file/rev_num.h\n\n#   note:   in this action, temporary file (which is original file with suffix of .tmp \n\n#           i.e. OUTPUT_FILE_PATH + '.tmp') will be used \n\n#           after process is done, temporary file will be deleted\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# get tmp file path from given FILE_PATH variable (-DFILE_PATH=path/to/file.extension)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# get git-related details\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# write a file with the SVN VERSION and URL define\n\n#file(WRITE rev_num.h.tmp \"#define _GIT_REVISION_ \\\"${GIT_DESCRIBE}\\\"\\n#define _GIT_BRANCH_ \\\"${GIT_BRANCH}\\\"\\n#define _GIT_URL_ \\\"${GIT_URL}\\\"\")\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# copy the file to the final header only if the version changes\n\n# reduces needless rebuilds\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMake/Modules/InstallArmadillo.cmake" : {
      "ObjectId" : "6960c8662dbff87479cce43e65c3adadcb04835e",
      "LastModified" : "2017-05-30T09:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#InstallArmadillo.cmake\n\n#\n\n# Created on: Jul 20, 2012\n\n#     Author: jb\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set directory to which install armadillo \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# check PETSC fblas and flapack\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# if fblas or flapack is not presented in PETSC let armadillo to find its own BLAS and LAPACK\n",
        "Line" : 19,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# hint same Boost to armadillo \n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# A temporary CMakeLists.txt\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# run cmake\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# run make\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#file (REMOVE ${cmakelists_fname})\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "CMake/Modules/InstallBDDCML.cmake" : {
      "ObjectId" : "e98af79c60f7bd74ffa37f0ee9c7f9f3021f0d54",
      "LastModified" : "2017-05-30T09:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#InstallBoost.cmake\n\n#\n\n# Created on: Jul 20, 2012\n\n#     Author: jb\n\n#\n\n#\n\n#  Install BDDCML and set BDDCML_ROOT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################    \n\n# Create make.inc configuration file\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A temporary CMakeLists.txt\n\n#\n\n# We use patch in order to use Fortran name magling detected by CMake\n\n# to generate the patch use:\n\n# \n\n#  diff -Naur f_symbol.h  new_f_symbol.h \n\n# \n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# run cmake\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# run make\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/Modules/InstallBLOPEX.cmake" : {
      "ObjectId" : "fe168553d17be4261254b21df8541e6099724bfe",
      "LastModified" : "2017-05-30T09:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#InstallBoost.cmake\n\n#\n\n# Created on: Jul 20, 2012\n\n#     Author: jb\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################    \n\n# Create make.inc configuration file\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##########################################################################\n\n# Download BLOPEX\n\n# A temporary CMakeLists.txt\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# run cmake\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# run make\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#file (REMOVE ${cmakelists_fname})\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMake/Modules/InstallBoost.cmake" : {
      "ObjectId" : "ff0a625c656d0bfbe079b24cb25d2a3bba8fc868",
      "LastModified" : "2017-05-30T09:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#InstallBoost.cmake\n\n#\n\n# Created on: Jul 20, 2012\n\n#     Author: jb\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set flags for BOOTS, user specified are first choice, if not specified external libs flags will be used\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Run\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# A temporary CMakeLists.txt\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# run cmake\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# run make\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMake/Modules/InstallHTMLDOC.cmake" : {
      "ObjectId" : "cc19dbc94f39fe4e2eb10734bbc51ca6b7d614f7",
      "LastModified" : "2017-05-30T09:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# create CMakeLists.txt for external project\n\n# required variables:\n\n## HTMLDOC_INSTALL_URL - from where to download file (zip/tarball)\n\n## HTMLDOC_INSTALL_DIR - directory where helper files will be stored such as CMakeLists.cmake file makefile\n\n## HTMLDOC_SOURCE_DIR - direcotry which will contain unpacked files from server\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# run cmake\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/Modules/InstallPetsc.cmake" : {
      "ObjectId" : "9c1db960981d7af336efc8f6c01600a47a420219",
      "LastModified" : "2017-05-30T09:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#InstallPetsc.cmake\n\n#\n\n# Created on: Jul 20, 2012\n\n#     Author: jb\n\n#\n\n# accepted variables: \n\n#     PETSC_INSTALL_DIR - target directory used for instalation\n\n#     PETSC_INSTALL_URL - url with petsc tarball\n\n#     PETSC_INSTALL_MPI_DIR      - pass MPI dir to PETSC configure \n\n#     PETSC_INSTALL_LAPACK_DIR   - pass Blas/Lapack dir to PETSC configure\n\n#\n\n#     PETSC_INSTALL_CONFIG - possible values:\n\n#       mini             - only petsc + necessary MPI, BLAS, LAPACK\n\n#       flow123d_mini    - mini + metis + parmetis\n\n#       bddcml           - flow123d_mini + mumps + scalapack + blacs\n\n#       full             - bddcml + hypre + blopex + umfpack + sundials\n\n#       default)         = flow123d_mini\n\n#\n\n#     PETSC_INSTALL_ADD_OPTIONS - additional options used as parameters to configure.py,\n\n#     PETSC_INSTALL_OWN_OPTIONS - use only this varieble as configure options\n\n#\n\n# We automatically reuse compiler and their flags. Further we set \"--with-debugging=1\" \n\n# if CMAKE_BUILD_TYPE == \"debug\", otherwise we turn debugging off.\n\n#\n\n# CAUTION: Never use semicolon a part of compiler options or PETSC_INSTALL_OPTIONS.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set flags for PETSc, user specified are first choice, if not specified external libs flags will be used\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##########################################################################\n\n# Download PETSC\n\n# A temporary CMakeLists.txt\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set compilers\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set debugging\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# force static libraries\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set necessary libraries: MPI, BLAS, LAPACK\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set configuration\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# nothing to add\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# CMAKE_HOST_WIN32 should include win32, win64, and cygwin; but doesn't work\n",
        "Line" : 88,
        "CharPositionInLine" : 45
      },
      "10" : {
        "Text" : "# PETSc does not work with umfpack on Windows\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# additional options\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# override by user's own options\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# create CMakeLists.txt for external project\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# create configuration script (overcome troubles with two expansion levels)\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# avoid unnecessary rebuilds if configuration doesn't change\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# run cmake\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# run make\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#file (REMOVE ${cmakelists_fname})\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "CMake/Modules/InstallYamlCpp.cmake" : {
      "ObjectId" : "0d7c66b131ada61e356df5a63cc04e8154e9ab37",
      "LastModified" : "2017-11-30T18:03:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#InstallYamlCpp.cmake\n\n#\n\n# Created on: Jul 20, 2012\n\n#     Author: jb\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set directory to which install armadillo \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A temporary CMakeLists.txt\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# run cmake\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# run make\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#file (REMOVE ${cmakelists_fname})\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMake/Modules/MacroEnsureVersion.cmake" : {
      "ObjectId" : "c6df537a4f17746fbe4e2c134f26af699e187bb1",
      "LastModified" : "2017-05-30T09:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This macro compares version numbers of the form \"x.y.z\"\n\n# MACRO_ENSURE_VERSION( FOO_MIN_VERSION FOO_VERSION_FOUND FOO_VERSION_OK)\n\n# will set FOO_VERSIN_OK to true if FOO_VERSION_FOUND >= FOO_MIN_VERSION\n\n# where both have to be in a 3-part-version format, leading and trailing\n\n# text is ok, e.g.\n\n# MACRO_ENSURE_VERSION( \"2.5.31\" \"flex 2.5.4a\" VERSION_OK)\n\n# which means 2.5.31 is required and \"flex 2.5.4a\" is what was found on the system\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, David Faure, <faure@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# parse the parts of the version string\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# compute an overall version number which can be compared at once\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# This macro compares version numbers of the form \"x.y\"\n\n# MACRO_ENSURE_VERSION( FOO_MIN_VERSION FOO_VERSION_FOUND FOO_VERSION_OK)\n\n# will set FOO_VERSIN_OK to true if FOO_VERSION_FOUND >= FOO_MIN_VERSION\n\n# where both have to be in a 2-part-version format, leading and trailing\n\n# text is ok, e.g.\n\n# MACRO_ENSURE_VERSION( \"0.5\" \"foo 0.6\" VERSION_OK)\n\n# which means 0.5 is required and \"foo 0.6\" is what was found on the system\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Copyright (c) 2006, David Faure, <faure@kde.org>\n\n# Copyright (c) 2007, Pino Toscano, <pino@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# parse the parts of the version string\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# compute an overall version number which can be compared at once\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "CMake/Modules/MacroValidValue.cmake" : {
      "ObjectId" : "3398170a36c4441ff47c2274544935dacc8dd546",
      "LastModified" : "2017-05-30T09:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This macro sets first applicable/valid value passed in call\n\n#\n\n# SET_VALID_VALUE (VARIABLE_NAME [OPTION_1 [OPTION_2 [ OPTION_3 ...]]]\n\n# variable with name VARIABLE_NAME will have value of OPTION_1,\n\n# if OPTION_1 value is empty then OPTION_2 and so on\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# put args into list\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# single-step iteration to get first non empty value\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "CMake/Modules/MakeFCMagleHeader.cmake" : {
      "ObjectId" : "c3f5e042e7d2108b4d429b952d8b959b1d9f3010",
      "LastModified" : "2017-05-30T09:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set desired compilers through standard CMake variables\n\n# CMAKE_Fortran_COMPILER\n\n# CMAKE_C_COMPILER\n\n#  \n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/Modules/PrecompiledHeaders.cmake" : {
      "ObjectId" : "4f1f7892c29661dbf165e8b74613ae4e5f1c12f5",
      "LastModified" : "2017-05-30T09:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macro for setting up precompiled headers. Usage:\n\n#\n\n# add_precompiled_header(target header.h [FORCEINCLUDE])\n\n#\n\n# MSVC: A source file with the same name as the header must exist and\n\n# be included in the target (E.g. header.cpp).\n\n#\n\n# MSVC: Add FORCEINCLUDE to automatically include the precompiled\n\n# header file from every source file.\n\n#\n\n# GCC: The precompiled header is always automatically included from\n\n# every header file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# _targetName is the name of the target which depends on the headers\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gets file name without extension NAME_WE (possible PATH|ABSOLUTE|NAME|EXT|NAME_WE)\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# for Microsoft Visual Studio\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# for G++\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# sets .hh files from input as _source\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# sets name and makes output directory [headerfile].gch\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# sets the name of the precompiled header\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# the same compilation flags as for the source file are needed\n\n# \"-DDEBUG\" which is defined in makefile.in.cmake might be missing in here \n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# adds the precompiled header to the target's dependencies\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# inclusion of the precompiled header to the target is sets\n\n# and \"-Winvalid-pch\" makes sure that you get message if somethings worng and \n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# precompiled header is not used\n",
        "Line" : 87,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 12
    },
    "CMake/Modules/ProfilerTimerCheck.cmake" : {
      "ObjectId" : "b64eec827535c5d3fdcd39a1578458eab74a96ca",
      "LastModified" : "2017-05-30T09:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MACRO for testing presence of a timer\n\n#   timer_name              name of the variable which will holds result\n\n#   timer_script_location   path to the cpp file which test presence of a timer\n\n#                           and prints its resolution in microseconds\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MESSAGE(STATUS \"${timer_name}:\\n ${${timer_name}} ${TIMER_RESOLUTION} [us]\")\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "CMake/Modules/ResolveCompilerPaths.cmake" : {
      "ObjectId" : "64cc67376b433842ddc9f1e26d6f67aa919d58ed",
      "LastModified" : "2017-05-30T09:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ResolveCompilerPaths - this module defines two macros\n\n#\n\n# RESOLVE_LIBRARIES (XXX_LIBRARIES LINK_LINE)\n\n# This macro is intended to be used by FindXXX.cmake modules.\n\n# It parses a compiler link line and resolves all libraries\n\n# (-lfoo) using the library path contexts (-L/path) in scope.\n\n# The result in XXX_LIBRARIES is the list of fully resolved libs.\n\n# Example:\n\n#\n\n# RESOLVE_LIBRARIES (FOO_LIBRARIES \"-L/A -la -L/B -lb -lc -ld\")\n\n#\n\n# will be resolved to\n\n#\n\n# FOO_LIBRARIES:STRING=\"/A/liba.so;/B/libb.so;/A/libc.so;/usr/lib/libd.so\"\n\n#\n\n# if the filesystem looks like\n\n#\n\n# /A: liba.so libc.so\n\n# /B: liba.so libb.so\n\n# /usr/lib: liba.so libb.so libc.so libd.so\n\n#\n\n# and /usr/lib is a system directory.\n\n#\n\n# Note: If RESOLVE_LIBRARIES() resolves a link line differently from\n\n# the native linker, there is a bug in this macro (please report it).\n\n#\n\n# RESOLVE_INCLUDES (XXX_INCLUDES INCLUDE_LINE)\n\n# This macro is intended to be used by FindXXX.cmake modules.\n\n# It parses a compile line and resolves all includes\n\n# (-I/path/to/include) to a list of directories. Other flags are ignored.\n\n# Example:\n\n#\n\n# RESOLVE_INCLUDES (FOO_INCLUDES \"-I/A -DBAR='\\\"irrelevant -I/string here\\\"' -I/B\")\n\n#\n\n# will be resolved to\n\n#\n\n# FOO_INCLUDES:STRING=\"/A;/B\"\n\n#\n\n# assuming both directories exist.\n\n# Note: as currently implemented, the -I/string will be picked up mistakenly (cry, cry)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If it's a library path, add it to the list\n",
        "Line" : 49,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# It's a library, resolve the path by looking in the list and then (by default) in system directories\n",
        "Line" : 55,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "#windows expects \"libfoo\", linux expects \"foo\"\n",
        "Line" : 56,
        "CharPositionInLine" : 32
      },
      "4" : {
        "Text" : "# We have an absolute path\n",
        "Line" : 62,
        "CharPositionInLine" : 32
      },
      "5" : {
        "Text" : "#separate into a path and a library name:        \n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#windows expects \"libfoo\", linux expects \"foo\"\n",
        "Line" : 64,
        "CharPositionInLine" : 34
      },
      "7" : {
        "Text" : "## debug\n\n#message(STATUS \"token: ${token}\\ndlist: ${_directory_list}\\nroot: ${_root}\")    \n",
        "Line" : 80,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "## debug\n\n#message(STATUS \"RESULT: ${_lib}\")\n",
        "Line" : 83,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# only the LAST occurence of each library is required since there should be no circular dependencies\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "CMake/Modules/UseLATEX.cmake" : {
      "ObjectId" : "1c9e4857372ec8e8d07af57e22a7519171c2a2b5",
      "LastModified" : "2017-05-30T09:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# File: UseLATEX.cmake\n\n# CMAKE commands to actually use the LaTeX compiler\n\n# Version: 1.10.3\n\n# Author: Kenneth Moreland <kmorel@sandia.gov>\n\n#\n\n# Copyright 2004 Sandia Corporation.\n\n# Under the terms of Contract DE-AC04-94AL85000, there is a non-exclusive\n\n# license for use of this work by or on behalf of the\n\n# U.S. Government. Redistribution and use in source and binary forms, with\n\n# or without modification, are permitted provided that this Notice and any\n\n# statement of authorship are reproduced on all copies.\n\n#\n\n# The following function is defined:\n\n#\n\n# ADD_LATEX_DOCUMENT(<tex_file>\n\n#                    [BIBFILES <bib_files>]\n\n#                    [INPUTS <input_tex_files>]\n\n#                    [IMAGE_DIRS] <image_directories>\n\n#                    [IMAGES] <image_files>\n\n#                    [CONFIGURE] <tex_files>\n\n#                    [DEPENDS] <tex_files>\n\n#                    [MULTIBIB_NEWCITES] <suffix_list>\n\n#                    [USE_INDEX] [USE_GLOSSARY] [USE_NOMENCL]\n\n#                    [DEFAULT_PDF] [DEFAULT_SAFEPDF] [DEFAULT_PS] [NO_DEFAULT]\n\n#                    [MANGLE_TARGET_NAMES])\n\n#       Adds targets that compile <tex_file>.  The latex output is placed\n\n#       in LATEX_OUTPUT_PATH or CMAKE_CURRENT_BINARY_DIR if the former is\n\n#       not set.  The latex program is picky about where files are located,\n\n#       so all input files are copied from the source directory to the\n\n#       output directory.  This includes the target tex file, any tex file\n\n#       listed with the INPUTS option, the bibliography files listed with\n\n#       the BIBFILES option, and any .cls, .bst, and .clo files found in\n\n#       the current source directory.  Images found in the IMAGE_DIRS\n\n#       directories or listed by IMAGES are also copied to the output\n\n#       directory and coverted to an appropriate format if necessary.  Any\n\n#       tex files also listed with the CONFIGURE option are also processed\n\n#       with the CMake CONFIGURE_FILE command (with the @ONLY flag).  Any\n\n#       file listed in CONFIGURE but not the target tex file or listed with\n\n#       INPUTS has no effect. DEPENDS can be used to specify generated files\n\n#       that are needed to compile the latex target.\n\n#\n\n#       The following targets are made:\n\n#               dvi: Makes <name>.dvi\n\n#               pdf: Makes <name>.pdf using pdflatex.\n\n#               safepdf: Makes <name>.pdf using ps2pdf.  If using the default\n\n#                       program arguments, this will ensure all fonts are\n\n#                       embedded and no lossy compression has been performed\n\n#                       on images.\n\n#               ps: Makes <name>.ps\n\n#               html: Makes <name>.html\n\n#               auxclean: Deletes <name>.aux and other auxiliary files.\n\n#                       This is sometimes necessary if a LaTeX error occurs\n\n#                       and writes a bad aux file.  Unlike the regular clean\n\n#                       target, it does not delete other input files, such as\n\n#                       converted images, to save time on the rebuild.\n\n#\n\n#       The dvi target is added to the ALL.  That is, it will be the target\n\n#       built by default.  If the DEFAULT_PDF argument is given, then the\n\n#       pdf target will be the default instead of dvi.  Likewise,\n\n#       DEFAULT_SAFEPDF sets the default target to safepdf.  If NO_DEFAULT\n\n#       is specified, then no target will be added to ALL, which is\n\n#       convenient when including LaTeX documentation with something else.\n\n#\n\n#       If the argument MANGLE_TARGET_NAMES is given, then each of the\n\n#       target names above will be mangled with the <tex_file> name.  This\n\n#       is to make the targets unique if ADD_LATEX_DOCUMENT is called for\n\n#       multiple documents.  If the argument USE_INDEX is given, then\n\n#       commands to build an index are made.  If the argument USE_GLOSSARY\n\n#       is given, then commands to build a glossary are made.  If the\n\n#       argument MULTIBIB_NEWCITES is given, then additional bibtex calls\n\n#       are added to the build to support the extra auxiliary files created\n\n#       with the \\newcite command in the multibib package.\n\n#\n\n# History:\n\n#\n\n# 1.10.3 Check for Windows version of convert being used instead of\n\n#       ImageMagick's version (thanks to Martin Baute).\n\n#\n\n# 1.10.2 Use htlatex as a fallback when latex2html is not available (thanks\n\n#       to Tomasz Grzegurzko).\n\n#\n\n# 1.10.1 Make convert program mandatory only if actually used (thanks to\n\n#       Julien Schueller).\n\n#\n\n# 1.10.0 Added NO_DEFAULT and DEFAULT_PS options.\n\n#       Fixed issue with cleaning files for LaTeX documents originating in\n\n#       a subdirectory.\n\n#\n\n# 1.9.6 Fixed problem with LATEX_SMALL_IMAGES.\n\n#       Strengthened check to make sure the output directory does not contain\n\n#       the source files.\n\n#\n\n# 1.9.5 Add support for image types not directly supported by either latex\n\n#       or pdflatex.  (Thanks to Jorge Gerardo Pena Pastor for SVG support.)\n\n#\n\n# 1.9.4 Fix issues with filenames containing multiple periods.\n\n#\n\n# 1.9.3 Hide some variables that are now cached but should not show up in\n\n#       the ccmake list of variables.\n\n#\n\n# 1.9.2 Changed MACRO declarations to FUNCTION declarations.  The better\n\n#       FUNCTION scoping will hopefully avoid some common but subtle bugs.\n\n#       This implicitly increases the minimum CMake version to 4.6 (although\n\n#       I honestly only test it with the latest 4.8 version).\n\n#\n\n#       Since we are updating the minimum CMake version, I'm going to start\n\n#       using the builtin LIST commands that are now available.\n\n#\n\n#       Favor using pdftops from the Poppler package to convert from pdf to\n\n#       eps.  It does a much better job than ImageMagick or ghostscript.\n\n#\n\n# 1.9.1 Fixed typo that caused the LATEX_SMALL_IMAGES option to fail to\n\n#       activate.\n\n#\n\n# 1.9.0 Add support for the multibib package (thanks to Antonio LaTorre).\n\n#\n\n# 1.8.2 Fix corner case when an argument name was also a variable containing\n\n#       the text of an argument.  In this case, the CMake IF was matching\n\n#       the argument text with the contents of the variable with the same\n\n#       argument name.\n\n#\n\n# 1.8.1 Fix problem where ps2pdf was not getting the appropriate arguments.\n\n#\n\n# 1.8.0 Add support for synctex.\n\n#\n\n# 1.7.7 Support calling xindy when making glossaries.\n\n#\n\n#       Improved make clean support.\n\n#\n\n# 1.7.6 Add support for the nomencl package (thanks to Myles English).\n\n#\n\n# 1.7.5 Fix issue with bibfiles being copied two different ways, which causes\n\n#       Problems with dependencies (thanks to Edwin van Leeuwen).\n\n#\n\n# 1.7.4 Added the DEFAULT_SAFEPDF option (thanks to Raymond Wan).\n\n#\n\n#       Added warnings when image directories are not found (and were\n\n#       probably not given relative to the source directory).\n\n#\n\n# 1.7.3 Fix some issues with interactions between makeglossaries and bibtex\n\n#       (thanks to Mark de Wever).\n\n#\n\n# 1.7.2 Use ps2pdf to convert eps to pdf to get around the problem with\n\n#       ImageMagick dropping the bounding box (thanks to Lukasz Lis).\n\n#\n\n# 1.7.1 Fixed some dependency issues.\n\n#\n\n# 1.7.0 Added DEPENDS options (thanks to Theodore Papadopoulo).\n\n#\n\n# 1.6.1 Ported the makeglossaries command to CMake and embedded the port\n\n#       into UseLATEX.cmake.\n\n#\n\n# 1.6.0 Allow the use of the makeglossaries command.  Thanks to Oystein\n\n#       S. Haaland for the patch.\n\n#\n\n# 1.5.0 Allow any type of file in the INPUTS lists, not just tex file\n\n#       (suggested by Eric Noulard).  As a consequence, the ability to\n\n#       specify tex files without the .tex extension is removed.  The removed\n\n#       function is of dubious value anyway.\n\n#\n\n#       When copying input files, skip over any file that exists in the\n\n#       binary directory but does not exist in the source directory with the\n\n#       assumption that these files were added by some other mechanism.  I\n\n#       find this useful when creating large documents with multiple\n\n#       chapters that I want to build separately (for speed) as I work on\n\n#       them.  I use the same boilerplate as the starting point for all\n\n#       and just copy it with different configurations.  This was what the\n\n#       separate ADD_LATEX_DOCUMENT method was supposed to originally be for.\n\n#       Since its external use is pretty much deprecated, I removed that\n\n#       documentation.\n\n#\n\n# 1.4.1 Copy .sty files along with the other class and package files.\n\n#\n\n# 1.4.0 Added a MANGLE_TARGET_NAMES option that will mangle the target names.\n\n#\n\n#       Fixed problem with copying bib files that became apparent with\n\n#       CMake 2.4.\n\n#\n\n# 1.3.0 Added a LATEX_OUTPUT_PATH variable that allows you or the user to\n\n#       specify where the built latex documents to go.  This is especially\n\n#       handy if you want to do in-source builds.\n\n#\n\n#       Removed the ADD_LATEX_IMAGES macro and absorbed the functionality\n\n#       into ADD_LATEX_DOCUMENT.  The old interface was always kind of\n\n#       clunky anyway since you had to specify the image directory in both\n\n#       places.  It also made supporting LATEX_OUTPUT_PATH problematic.\n\n#\n\n#       Added support for jpeg files.\n\n#\n\n# 1.2.0 Changed the configuration options yet again.  Removed the NO_CONFIGURE\n\n#       Replaced it with a CONFIGURE option that lists input files for which\n\n#       configure should be run.\n\n#\n\n#       The pdf target no longer depends on the dvi target.  This allows you\n\n#       to build latex documents that require pdflatex.  Also added an option\n\n#       to make the pdf target the default one.\n\n#\n\n# 1.1.1 Added the NO_CONFIGURE option.  The @ character can be used when\n\n#       specifying table column separators.  If two or more are used, then\n\n#       will incorrectly substitute them.\n\n#\n\n# 1.1.0 Added ability include multiple bib files.  Added ability to do copy\n\n#       sub-tex files for multipart tex files.\n\n#\n\n# 1.0.0 If both ps and pdf type images exist, just copy the one that\n\n#       matches the current render mode.  Replaced a bunch of STRING\n\n#       commands with GET_FILENAME_COMPONENT commands that were made to do\n\n#       the desired function.\n\n#\n\n# 0.4.0 First version posted to CMake Wiki.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#############################################################################\n\n# Find the location of myself while originally executing.  If you do this\n\n# inside of a macro, it will recode where the macro was invoked.\n\n#############################################################################\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#############################################################################\n\n# Generic helper functions\n\n#############################################################################\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Parse function arguments.  Variables containing the results are placed\n\n# in the global scope for historical reasons.\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Match the contents of a file to a regular expression.\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The FILE STRINGS command would be a bit better, but I'm not totally sure\n\n# the match will always be to a whole line, and I don't want to break things.\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# A version of GET_FILENAME_COMPONENT that treats extensions after the last\n\n# period rather than the first.  To the best of my knowledge, all filenames\n\n# typically used by LaTeX, including image files, have small extensions\n\n# after the last dot.\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#############################################################################\n\n# Functions that perform processing during a LaTeX build.\n\n#############################################################################\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This is really a bare bones port of the makeglossaries perl script into\n\n# CMake scripting.\n",
        "Line" : 303,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# What crazy person makes a LaTeX index generater that uses different\n\n# identifiers for language than babel (or at least does not support\n\n# the old ones)?\n",
        "Line" : 371,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Ideally, we would check that the language is compatible with the\n\n# default codepage, but I'm hoping that distributions will be smart\n\n# enough to specify their own codepage.  I know, it's asking a lot.\n",
        "Line" : 414,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# So, it is possible (perhaps common?) for aux files to specify a\n\n# language and codepage that are incompatible with each other.  Check\n\n# for that condition, and if it happens run again with the default\n\n# codepage.\n",
        "Line" : 435,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "#ENDIF (\"${xindy_output}\" MATCHES \"Cannot locate xindy module for language (.+) in codepage (.+)\\\\.\")\n",
        "Line" : 451,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "#############################################################################\n\n# Helper functions for establishing LaTeX build.\n\n#############################################################################\n",
        "Line" : 539,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# MiKTeX calls latex2html htlatex\n",
        "Line" : 593,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Just holds extensions for known image types.  They should all be lower case.\n\n# For historical reasons, these are all declared in the global scope.\n",
        "Line" : 677,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# ImageMagick has broken eps to pdf conversion\n\n# use ps2pdf instead\n",
        "Line" : 754,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# ImageMagick can also be sketchy on pdf to eps conversion.  Not good with\n\n# color spaces and tends to unnecessarily rasterize.\n\n# use pdftops instead\n",
        "Line" : 764,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Makes custom commands to convert a file to a particular type.\n",
        "Line" : 798,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Check input filename for potential problems with LaTeX.\n",
        "Line" : 813,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# As a shortcut, we can just copy the file.\n",
        "Line" : 832,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Check to see if there is another input file of the appropriate type.\n",
        "Line" : 842,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# If we still need to convert, do it.\n",
        "Line" : 852,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Adds custom commands to process the given files for dvi and pdf builds.\n\n# Adds the output files to the given variables (does not replace).\n",
        "Line" : 864,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Check to see if we need to downsample the image.\n",
        "Line" : 875,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# Make sure the output directory exists.\n",
        "Line" : 884,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# Do conversions for dvi.\n",
        "Line" : 888,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# Do conversions for pdf.\n",
        "Line" : 893,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# Special case: output exists but input does not.  Assume that it was\n\n# created elsewhere and skip the input file copy.\n",
        "Line" : 951,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "#############################################################################\n\n# Commands provided by the UseLATEX.cmake \"package\"\n\n#############################################################################\n",
        "Line" : 959,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Parses arguments to ADD_LATEX_DOCUMENT and ADD_LATEX_TARGETS and sets the\n\n# variables LATEX_TARGET, LATEX_IMAGE_DIR, LATEX_BIBFILES, LATEX_DEPENDS, and\n\n# LATEX_INPUTS.\n",
        "Line" : 969,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# The first argument is the target latex file.\n",
        "Line" : 980,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Backward compatibility between 1.6.0 and 1.6.1.\n",
        "Line" : 995,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# The commands to run LaTeX.  They are repeated multiple times.\n",
        "Line" : 1008,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Set up target names.\n",
        "Line" : 1016,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Probably not all of these will be generated, but they could be.\n\n# Note that the aux file is added later.\n",
        "Line" : 1033,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# For each directory in LATEX_IMAGE_DIRS, glob all the image files and\n\n# place them in LATEX_IMAGES.\n",
        "Line" : 1061,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Dependent .tex files might have their own .aux files created.  Make\n\n# sure these get cleaned as well.  This might replicate the cleaning\n\n# of the main .aux file, which is OK.\n",
        "Line" : 1092,
        "CharPositionInLine" : 6
      },
      "38" : {
        "Text" : "# Repeat these commands twice.\n",
        "Line" : 1104,
        "CharPositionInLine" : 25
      },
      "39" : {
        "Text" : "# Repeat these commands twice.\n",
        "Line" : 1133,
        "CharPositionInLine" : 25
      },
      "40" : {
        "Text" : "# Add commands and targets for building dvi outputs.\n",
        "Line" : 1239,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Add commands and targets for building pdf outputs (with pdflatex).\n",
        "Line" : 1252,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Since both the pdf and safepdf targets have the same output, we\n\n# cannot properly do the dependencies for both.  When selecting safepdf,\n\n# simply force a recompile every time.\n",
        "Line" : 1280,
        "CharPositionInLine" : 6
      },
      "43" : {
        "Text" : "# htlatex places the output in a different location\n",
        "Line" : 1300,
        "CharPositionInLine" : 6
      },
      "44" : {
        "Text" : "#############################################################################\n\n# Actually do stuff\n\n#############################################################################\n",
        "Line" : 1358,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Must be part of the actual configure (included from CMakeLists.txt).\n",
        "Line" : 1385,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 46
    },
    "CMake/Modules/python/PythonCopy.cmake" : {
      "ObjectId" : "3a6be4ff86def28fb9f67be224cc08375ede64ff",
      "LastModified" : "2017-05-30T09:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PythonCopy module\n\n#  - this module will copy Python interpret and its core packages into\n\n#    PYTHON_COPY_DESTINATION folder\n\n#    \n\n#    \n\n#  - Following variables MUST BE SET:\n\n#    - PYTHON_ROOT\n\n#           - absolute path to python root e.g. /usr/lib/python2.7\n\n#           \n\n#    - PYTHON_COPY_PACKAGES \n\n#           - list of all core modules which will be copied\n\n#             each entry represents folder name realtive to root\n\n#             e.g. set(PYTHON_COPY_MODULES encodings json)\n\n#    - PY_BUILD_PREFIX\n\n#           - directory where libs will be copied\n\n#             in ${PY_BUILD_PREFIX}/lib/python2.7\n\n#             \n\n#   \n\n#   - this module export following variables:\n\n#           - PYTHON_COPY_DESTINATION\n\n#               - location where all python files are copied\n\n#           - PYTHON_COPY_INCLUDE_TARGET\n\n#               - location where python h files for embedded python will be copied\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check root presence\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set extra module path to binary lib dir\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# get files and folders from root (non recursive)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# go through all files and copy them to root\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# process all core modules\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# copy flow123d python scripts and modules\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# copy python include (h files for embedded python)\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# recursive copy, not overwrite existing files\n\n# we copy all and exclude some paths and files during install    \n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "CMake/Modules/python/PythonLibs.cmake" : {
      "ObjectId" : "bfe51d05c52aadf2af55e38b7195fac0b42c0800",
      "LastModified" : "2017-05-30T09:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PythonLibs module\n\n#  - this module find PythonLibs package and sets up variables:\n\n#    - PYTHONLIBS_VERSION_MAJOR\n\n#           - major version in python 2.7.1 it'll be number 2\n\n#    - PYTHONLIBS_VERSION_MINOR\n\n#           - minor version in python 2.7.1 it'll be number 7\n\n#    - PYTHONLIBS_VERSION_PATCH\n\n#           - pacth version in python 2.7.1 it'll be number 1\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find package or die\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# parse version\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add defines\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# debug info\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/Modules/python/PythonScripts.cmake" : {
      "ObjectId" : "c850747a8fccbf2d97f3a6361409873b0cd2d4e9",
      "LastModified" : "2017-05-30T09:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PythonCopy module\n\n#  - this module will install scripts dependencies and\n\n#    copy python scripts to appropriate folders\n\n#    \n\n#    \n\n#  - Following variables MUST BE SET:\n\n#    - PY_BUILD_PREFIX\n\n#           - directory where libs will be installed\n\n#             in ${PY_BUILD_PREFIX}/lib/python2.7/site-packages\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check working python 2.7+\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# setup some variables\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# macro for installing python modules using pip\n\n#    package_name - name of the module to be installed\n\n#    package_dir  - name of the folder which should be checked whether exists \n\n#                   some packages name and dir are different e.g. pyyaml -> yaml\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# we start pip install from directory where setup.cfg is placed and overwrite \n\n# default python pip configuration, thus avoiding issue with --target usage\n\n# https://github.com/pypa/pip/pull/3450 and https://github.com/pypa/pip/issues/3056\n\n# for now we try to install package using this fix (platform centos)\n",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# if installation fails we run pip from current dir and do not override \n\n# any configuration\n",
        "Line" : 40,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# could not install package\n",
        "Line" : 49,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# install python dependencies\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# create Python runtest wrapper in src/bin\n\n# also create symlink of python runtest wrapper in tests\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# construct PY_WRAPPER_PATHS for wrapper pythonenv\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# configure pythonenv.sh script (populates py wrapper path used in wrapper file)\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "CMakeLists.txt" : {
      "ObjectId" : "1a9045e6c3769478413c58dc37c2fbdd60f1ebce",
      "LastModified" : "2018-11-05T10:11:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE system TODO\n\n#\n\n#\n\n# * report compiler flags and used libraries in a summarizing table before own build\n\n#\n\n# * use CTest to perform unit tests\n\n# \n\n# * use CPack to  make Windows and Linux packages\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check build_tree link,\n\n# this do not duplicate of the similar call in main makefile,\n\n# since CMakeList.txt can be called by generated makefiles.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include settings given by user first\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# create from template\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# by default reuse number of cpus for make from environment\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If the CCACHE_CXX_COMPILER is set \n\n# then the link to this compiler with ccache is created and used.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# try to use ccache for compiling and linking if flag is set\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Project name and language(s)\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# CMake version required for pre-build this project\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# allow duplicate custom targets for makefiles\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#variable that can be tested\n",
        "Line" : 75,
        "CharPositionInLine" : 38
      },
      "11" : {
        "Text" : "################################################################################# set CMake Modules\n\n# Set all module paths\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# default directory for building external libraries \n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "############################################################################################# set compiler\n\n# check C++11 properties of the compiler\n\n# Initialize CXXFLAGS.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "##############\n\n# set appropriate compiler flags for debug/release compilation modes\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# user given flags overrides everything  \n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# debug mode\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Release mode\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# armadillo is configured using this definition\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# no bound checks in armadillo \n",
        "Line" : 127,
        "CharPositionInLine" : 40
      },
      "20" : {
        "Text" : "# build benchmark unit tests\n",
        "Line" : 129,
        "CharPositionInLine" : 40
      },
      "21" : {
        "Text" : "# Release mode with debug info \n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Coverage mode creates instrumented binary\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# set external libs flags\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# INCLUDE(CodeCoverage)\n\n# add custom target to collect coverage into xml file\n\n# COVERAGE_SETUP_COBERTURA_COLLECTION (cobertura-collect-coverage coverage.xml)\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# unset predefined build type resolution variables to have better control over\n\n# used compiler flags\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Compiler-specific C++11 activation.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# is cygwin env?\n",
        "Line" : 167,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# is version 4.8 or higher?\n",
        "Line" : 169,
        "CharPositionInLine" : 10
      },
      "29" : {
        "Text" : "# version is too low\n",
        "Line" : 173,
        "CharPositionInLine" : 10
      },
      "30" : {
        "Text" : "# not cygwin \n\n# is version 4.7 or higher?\n",
        "Line" : 178,
        "CharPositionInLine" : 6
      },
      "31" : {
        "Text" : "# version is too low\n",
        "Line" : 182,
        "CharPositionInLine" : 6
      },
      "32" : {
        "Text" : "# Necessary for FParser - TODO: move to better place\n\n# ?? what about Clang\n",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# for some reason BOOST doesn't work with option -std=c++11\n\n# BOOST must be compiled with clang in order to use C++11 standard. \n\n# set(Boost_FORCE_REBUILD \"true\")\n\n# set(Boost_CONFIG_FLAGS \" --with-toolset=clang \")\n\n# set(Boost_BUILD_FLAGS \" toolset=clang cxxflags=\\\"-stdlib=libc++\\\" linkflags=\\\"-stdlib=libc++\\\" \" )        \n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# \n\n# TODO: make test for presence of sincos() function and set FLOW123D_HAVE_SINCOS appropriatly, used in fparser extsrc/fpaux.cc\n\n#\n",
        "Line" : 200,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# set encoding of VTU output files to Little Endian, VTU files can be encoded in Little Endian or Big Endian format  \n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#########################################################################\n\n# Determining timer with highest resolution\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# try to get best timer on windows\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# on windows and cygwin try to get access QueryPerformanceCounter timer\n",
        "Line" : 217,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# if success save theese values via flow_define and flow_define_constant macros\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# flow_define_constant  (TIMER_RESOLUTION \"${TIMER_RESOLUTION}\")\n",
        "Line" : 224,
        "CharPositionInLine" : 8
      },
      "41" : {
        "Text" : "# otherwise try to access chrono high resolution timer (multiplatform)\n\n# expecting c++11 support\n",
        "Line" : 234,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# if success save theese values via flow_define and flow_define_constant macros\n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# flow_define_constant  (TIMER_RESOLUTION \"${TIMER_RESOLUTION}\")\n",
        "Line" : 242,
        "CharPositionInLine" : 8
      },
      "44" : {
        "Text" : "#########################################################################\n\n# Check that glibc has working execinfo.h\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# set value for external libs flags if specified, otherwise use default cmake flags\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# store compiler flags (into config.h file)\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# store current source dir (for profiler purposes)\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "######################################################################### find libraries\n\n#\n\n# find boost or use our own\n\n#\n\n# - Try to find Boost include dirs and libraries\n\n#\n\n# NOTE: Take note of the Boost_ADDITIONAL_VERSIONS variable below.\n\n# Due to Boost naming conventions and limitations in CMake this find\n\n# module is NOT future safe with respect to Boost version numbers,\n\n# and may break.\n\n#\n\n# Input variables:\n\n#\n\n#   Boost_USE_MULTITHREADED      Can be set to OFF to use the non-multithreaded\n\n#   Boost_USE_STATIC_LIBS        Can be set to ON to force the use of the static\n\n#   Boost_NO_SYSTEM_PATHS        Set to TRUE to suppress searching in system (or other locations outside of BOOST_ROOT or BOOST_INCLUDEDIR).\n\n#   Boost_USE_STATIC_RUNTIME     If enabled, searches for boost libraries linked against a static C++ standard library\n\n#   Boost_USE_DEBUG_PYTHON       \n\n#   Boost_USE_STLPORT            If enabled, searches for boost libraries compiled against the STLPort standard\n\n#   Boost_USE_STLPORT_DEPRECATED_NATIVE_IOSTREAMS    If enabled, searches for boost libraries compiled against the deprecated STLPort \"native iostreams\" feature ('n' ABI tag).\n\n#   Boost_ADDITIONAL_VERSIONS    A list of version numbers to use for searching\n\n#   Boost_DEBUG                  Set this to TRUE to enable debugging output\n\n#   Boost_DETAILED_FAILURE_MSG   FindBoost doesn't output detailed information\n\n#   Boost_COMPILER               Set this to the compiler suffix used by Boost\n\n#   Boost_THREADAPI                When building boost.thread, sometimes the name of the library contains an additional \"pthread\" or \"win32\"\n\n#   Boost_REALPATH               Resolves symbolic links for discovered boost libraries\n\n#\n\n#\n\n#   BOOST_ROOT or BOOSTROOT      The preferred installation prefix for searching for\n\n#                                back on the system paths, set Boost_NO_SYSTEM_PATHS\n\n#   BOOST_INCLUDEDIR             Set this to the include directory of Boost, if the\n\n#   BOOST_LIBRARYDIR             Set this to the lib directory of Boost, if the\n\n#\n\n# Variables defined by this module:\n\n#\n\n#   Boost_FOUND                         System has Boost, this means the include dir was\n\n#   Boost_INCLUDE_DIRS                  Boost include directories: not cached\n\n#   Boost_INCLUDE_DIR                   This is almost the same as above, but this one is cached and may be modified by advanced users\n\n#   Boost_LIBRARIES                     Link to these to use the Boost libraries that you\n\n#   Boost_LIBRARY_DIRS                  The path to where the Boost library files are.\n\n#   Boost_VERSION                       The version number of the boost libraries that\n\n#   Boost_LIB_VERSION                   The version number in filename form as\n\n#   Boost_MAJOR_VERSION                 major version number of boost\n\n#   Boost_MINOR_VERSION                 minor version number of boost\n\n#   Boost_SUBMINOR_VERSION              subminor version number of boost\n\n#   Boost_LIB_DIAGNOSTIC_DEFINITIONS    [WIN32 Only] You can call\n\n#   Boost_${COMPONENT}_FOUND            True IF the Boost library \"component\" was found.\n\n#   Boost_${COMPONENT}_LIBRARY          Contains the libraries for the specified Boost\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#set(REQUIRED_Boost_COMPONENTS program_options serialization regex filesystem system)\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# set(Boost_DEBUG TRUE)\n\n# For some mysterious reason, the second find_package fails to find\n\n# components of boost in our own build, if we hint BOOST_ROOT of our build to the\n\n# first find_package.\n\n#\n\n# The root of the error is in FindBoost, when it calls find_library for individual components.\n\n# Success scenario:\n\n# 1) First find_package didn't found Boost (in system direcotries)\n\n# 2) we install our Boost\n\n# 3) the second find_package calls find_library to find boost components and succed\n\n#\n\n# Fail scenario:\n\n# 1) First find_package didn't found Boost (we set BOOST_ROOT to the empty target directory of the external project)\n\n# 2) we install our Boost\n\n# 3) the second find_package calls find_library to find boost components and fail\n\n#    the parameters of the find_library are exactly same as in the previous case.\n\n#\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# If no explicit setting from config.cmake ....\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# If no system setting ...\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# we try to erease from the cache everything that can cause failure of the second find_package\n\n# however just unsetting Boost_INCLUDE_DIR should be enough\n",
        "Line" : 385,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# overwrite cache    \n",
        "Line" : 390,
        "CharPositionInLine" : 40
      },
      "55" : {
        "Text" : "# We are looking for PETSC, f succed this module set:\n\n#  PETSC_FOUND        - system has PETSc\n\n#  PETSC_INCLUDES     - the PETSc include directories\n\n#  PETSC_LIBRARIES    - Link these to use PETSc\n\n#  PETSC_COMPILER     - Compiler used by PETSc, helpful to find a compatible MPI\n\n#  PETSC_DEFINITIONS  - Compiler switches for using PETSc\n\n#  PETSC_MPIEXEC      - Executable for running MPI programs\n\n#  PETSC_VERSION      - Version string (MAJOR.MINOR.SUBMINOR)\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# this export list is for possible BDDCML installation\n",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "################################################################################\n\n#  BDDCML_FOUND - set to true if the library is found\n",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "#################################################################################\n\n#  Armadillo_FOUND - set to true if the library is found\n\n#  Armadillo_INCLUDE_DIRS - list of required include directories\n\n#  Armadillo_LIBRARIES - list of libraries to be linked\n\n#  Armadillo_CONFIGURE_CMAKE - path to configure cmake script that introduce target 'armadillo'\n\n#                              with correctly set dependencies on other libraries\n",
        "Line" : 474,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# this introduce target \"armadillo\" with correct dependencies\n",
        "Line" : 487,
        "CharPositionInLine" : 41
      },
      "60" : {
        "Text" : "# until we know how to take only blas and lapack from PETSC we have to make Armadillo depend on whole PETSC lib.\n\n# this may be fragile because of _NOCONFIG\n",
        "Line" : 488,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "#################################################################################\n\n#  YAML_CPP_FOUND - set to true if the library is found\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "#################################################################################\n\n#  ZLIB_FOUND - set to true if the library is found\n",
        "Line" : 517,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# use zlib compression of VTK files\n",
        "Line" : 526,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "####################################################################################\n\n# PYTHON\n",
        "Line" : 538,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# set PYTHON_EXTRA_MODULES_PATH to lib/python/flow123d\n\n# if we are in installed flow123d, this direcoty exists and \n\n# contains all python flow123d files\n\n# otherwise\n\n# we create link to src so python_loader is able to use modules\n",
        "Line" : 544,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# PYTHONPATH is relative to cwd\n\n# need to make changes in c++ to correctly alter PYTHONPATH relative to binary location\n\n# for now, we also add absolute location\n\n# now it contains:\n\n#       relative path\n\n#       absolute path\n\n#       /opt/flow123d - for production\n\n#       /opt/flow123d/flow123d - for packaging\n",
        "Line" : 550,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# use python on demand\n",
        "Line" : 580,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# find python \n",
        "Line" : 585,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# for cmake version 2.8\n",
        "Line" : 586,
        "CharPositionInLine" : 36
      },
      "70" : {
        "Text" : "# TODO: remove dependency on python\n",
        "Line" : 589,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# create shortcuts for runtest\n",
        "Line" : 592,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# use relative path\n",
        "Line" : 594,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "#configure_file(${CMAKE_SOURCE_DIR}/CMake/unix_runtest_template ${CMAKE_SOURCE_DIR}/bin/runtest @ONLY)\n\n#configure_file(${CMAKE_SOURCE_DIR}/CMake/unix_runtest_template ${CMAKE_SOURCE_DIR}/tests/runtest @ONLY)\n\n#configure_file(${CMAKE_SOURCE_DIR}/CMake/unix_runtest_template ${CMAKE_SOURCE_DIR}/tests_old/runtest @ONLY)\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# make shortcut also for exec_parallel.py\n",
        "Line" : 600,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# restore absolute path\n",
        "Line" : 604,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "#################################################################################\n\n#  PUGI_XML_FOUND - set to true if the library is found\n",
        "Line" : 619,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# directory containing includes  (header files)\n",
        "Line" : 642,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "######################################################################################################################### \n\n# set includes and libraries paths\n",
        "Line" : 645,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# include the output directory, where the rev_num.h file is generated    \n",
        "Line" : 649,
        "CharPositionInLine" : 59
      },
      "80" : {
        "Text" : "#${CMAKE_SOURCE_DIR}/third_party/metis-include\n",
        "Line" : 652,
        "CharPositionInLine" : 4
      },
      "81" : {
        "Text" : "# deal generates config.h\n",
        "Line" : 664,
        "CharPositionInLine" : 46
      },
      "82" : {
        "Text" : "#    ${CMAKE_SOURCE_DIR}/third_party/tbb43_20150316oss/include\n",
        "Line" : 666,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "######################################################################################################################\n\n# custom targets\n",
        "Line" : 673,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "#### Safety check of build_tree link\n\n# This check is called by every target, if it fails we are probably running makefile generated for another branch.\n\n# So we must break the build.\n",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "#### create rev_num.h - file with some info about code origin\n\n# a custom target - is always built -> call cmake script to generate rev_num.h\n\n# Get the current working branch\n",
        "Line" : 685,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# This command is run from build dir and cmake set CMAKE_SOURCE_DIR to the build dir; thus we have to \n\n# pass different variable with source dir, namely FLOW123D_SOURCE_DIR\n",
        "Line" : 689,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# rev_num.h is a generated file\n",
        "Line" : 695,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "### create config.h - file containing definitions flags and other information\n\n# called everytime\n",
        "Line" : 700,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# config.h is a generated file\n",
        "Line" : 704,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# get git information also through configure phase\n",
        "Line" : 710,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# version in reference manual\n",
        "Line" : 714,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "#### make a script which call correct mpiexec (taken from PETSC)\n\n# we can not use link, since mpiexec can be sript which reads its location from calling sequence\n\n#\n",
        "Line" : 718,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "#message(STATUS \"petsc_mpiexec: ${PETSC_MPIEXEC}\")\n",
        "Line" : 722,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# missing CMAKE command to test working executable, moreover it could be without full path\n",
        "Line" : 724,
        "CharPositionInLine" : 6
      },
      "95" : {
        "Text" : "# resolve symlinks\n",
        "Line" : 726,
        "CharPositionInLine" : 6
      },
      "96" : {
        "Text" : "# we verify that REALPATH of PETSC_MPIEXEC exists\n\n# if not, PETSC_MPIEXEC is probably only command 'mpiexec'\n\n# in that case we use this value, since PETSc was ok with that\n",
        "Line" : 729,
        "CharPositionInLine" : 6
      },
      "97" : {
        "Text" : "# set MPIEXEC_PATH to full path of PETSC_MPIEXEC\n",
        "Line" : 737,
        "CharPositionInLine" : 10
      },
      "98" : {
        "Text" : "# verify that mpiexec exists (on CYGWIN we have to consider .exe suffix)\n",
        "Line" : 755,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# create shell script which call correct mpiexec binary\n",
        "Line" : 762,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "##################################################################################################################### \n\n# Macro to make usefull links in SOURCE_DIR\n\n##################################\n",
        "Line" : 766,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# initialize a global variable (cached)\n",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# get relative filename if absolute address is given\n",
        "Line" : 776,
        "CharPositionInLine" : 2
      },
      "103" : {
        "Text" : "# use wreappers instead of links (or copy) for executables\n\n#set(EXECUTABLE_PATH ${CMAKE_BINARY_DIR}/bin/flow123d)\n\n#configure_file(${CMAKE_SOURCE_DIR}/CMake/executable_link_template ${CMAKE_SOURCE_DIR}/bin/flow123d)\n\n#set(EXECUTABLE_PATH ${CMAKE_BINARY_DIR}/bin/mpiexec)\n\n#configure_file(${CMAKE_SOURCE_DIR}/CMake/executable_link_template ${CMAKE_SOURCE_DIR}/bin/mpiexec)\n",
        "Line" : 797,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "#make_link_in_source(bin/flow123d)\n\n#make_link_in_source(bin/mpiexec)\n",
        "Line" : 803,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "############################################################33 process subdirectories\n",
        "Line" : 809,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# add fparser sources\n",
        "Line" : 812,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "# add tbb sources\n\n#message(STATUS \"add subdir TBB\")\n\n#add_subdirectory(third_party/tbb43_20150316oss)\n",
        "Line" : 816,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "# add various our sources\n",
        "Line" : 820,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "# this also adds third_party/gtest\n",
        "Line" : 823,
        "CharPositionInLine" : 29
      },
      "110" : {
        "Text" : "# install benchmark miniapp\n",
        "Line" : 825,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "# optionally make targets for building reference_manual\n\n# we have to call separate instance of CMake since UseLatex.cmake\n\n# depends on many tools. If any of them miss CMake fails, while we can live\n\n# without targets for Latex doc.\n",
        "Line" : 830,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "#execute_process(COMMAND ${CMAKE_COMMAND} ${CMAKE_SOURCE_DIR}/doc/reference_manual\n\n#                WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/doc/reference_manual\n\n#                RESULT_VARIABLE res_var)\n",
        "Line" : 836,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "#if(NOT \"${res_var}\" STREQUAL \"0\")\n\n#  message(WARNING \"Some problem with Latex, 'make ref-doc' may not work.\")\n\n#endif()\n",
        "Line" : 840,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "#################################################################### add targets\n",
        "Line" : 845,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "########################\n",
        "Line" : 849,
        "CharPositionInLine" : 2
      },
      "116" : {
        "Text" : "# Setting for RPATH\n",
        "Line" : 850,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "# bug in cmake https://cmake.org/Bug/view.php?id=13934\n\n# causing error during CPack operation\n\n# \n\n#    CMake Error at cmake_install.cmake (FILE):\n\n#        file INSTALL cannot find\n\n#        \n\n# This is workaround posted on cmake.org. This bug occured in version 2.8 \n\n# (first occurence in version 2.8.10) but it is platform depended, so some \n\n# unix systems will not have this bug\n\n# \n\n# By setting CMAKE_EXECUTABLE_FORMAT to \"ELF\" in the toolchain file you \n\n#   tell CMake that it can use its builtin ELF editor instead of relinking\n",
        "Line" : 856,
        "CharPositionInLine" : 2
      },
      "118" : {
        "Text" : "### add target for flow123d binary\n",
        "Line" : 872,
        "CharPositionInLine" : 2
      },
      "119" : {
        "Text" : "# set libraries linked to main binary (order matter)\n",
        "Line" : 874,
        "CharPositionInLine" : 121
      },
      "120" : {
        "Text" : "# make mpiexec_link when flow123d executable is built\n",
        "Line" : 875,
        "CharPositionInLine" : 72
      },
      "121" : {
        "Text" : "# explicitly say that source file depends on rev_num_always in order to have actual revision number\n",
        "Line" : 876,
        "CharPositionInLine" : 2
      },
      "122" : {
        "Text" : "###############################################################################\n\n# Summary\n",
        "Line" : 883,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "####################################################################################\n\n# Install and Packaging\n",
        "Line" : 905,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "# Cache PLATFORM_NAME\n\n# set(CMAKE_INSTALL_MESSAGE ALWAYS)\n",
        "Line" : 908,
        "CharPositionInLine" : 0
      },
      "125" : {
        "Text" : "# install prefix is taken from sys env variable FLOW123D_HOME\n",
        "Line" : 911,
        "CharPositionInLine" : 48
      },
      "126" : {
        "Text" : "# install bin directory\n",
        "Line" : 915,
        "CharPositionInLine" : 0
      },
      "127" : {
        "Text" : "# binary files\n",
        "Line" : 921,
        "CharPositionInLine" : 0
      },
      "128" : {
        "Text" : "# plain files\n",
        "Line" : 932,
        "CharPositionInLine" : 0
      },
      "129" : {
        "Text" : "# install doc\n",
        "Line" : 937,
        "CharPositionInLine" : 0
      },
      "130" : {
        "Text" : "# PDF and htmldoc are marked as OPTIONAL so this version can be installed on a system where \n\n# latex and pandoc are not available and where container solution could be dangerou (such as HPC resource)\n\n# TODO perhaps by default, PDF and HTML should be required and only if specified in the config.cmake\n\n#      should they be OPTIONAL\n",
        "Line" : 942,
        "CharPositionInLine" : 0
      },
      "131" : {
        "Text" : "# install tests dir\n",
        "Line" : 950,
        "CharPositionInLine" : 0
      },
      "132" : {
        "Text" : "# python libs, sources and config files\n",
        "Line" : 955,
        "CharPositionInLine" : 0
      },
      "133" : {
        "Text" : "# To install MSVC runtime libraries ... ?\n",
        "Line" : 960,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 134
    },
    "config/config-iwyu.cmake" : {
      "ObjectId" : "1968981d05f5128c9791bf0a5a7e007f45ce83da",
      "LastModified" : "2018-01-31T18:09:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################3\n\n# Configuration for running IWYU (include what you use) tool.\n\n# Assumes IWYU installed manually and accessible from docker.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Clang must be used for IWYU\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Path to the installation of IWYU\n\n# see also 'installation steps' script config/iwyu.sh\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "config/config-jenkins-docker-coverage.cmake" : {
      "ObjectId" : "7d2c3a8ee2bcc4fdabee3fad1f4e9b325afcb582",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configuration for CI server\n\n# debug build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# main config\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# external libraries\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# additional info\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "config/config-jenkins-docker-debug.cmake" : {
      "ObjectId" : "2bcf2ca59b3bb09e05c55cbc764e85226ae6a194",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configuration for CI server\n\n# debug build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# main config\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# external libraries\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# additional info\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "config/config-jenkins-docker-release.cmake" : {
      "ObjectId" : "dd1d9d770b2c6ad318f38def2745460dedd4b979",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configuration for CI server\n\n# release build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# main config\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# external libraries\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# additional info\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "config/config-jenkins-linux-coverage.cmake" : {
      "ObjectId" : "16929f870fb93be0ae6633302c4600d40edf5877",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configuration for CI server\n\n# coverage build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config/config-jenkins-linux-debug.cmake" : {
      "ObjectId" : "1d99cbf1a65d7d8b546325601e6a8ae7b62f2132",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configuration for CI server\n\n# debug build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "config/config-jenkins-linux-release.cmake" : {
      "ObjectId" : "563193be4f84d4dbd0255c89aa4965c6e6757d82",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configuration for CI server\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config/config-jenkins-windows-release.cmake" : {
      "ObjectId" : "60614939fec91c867a18933152dd23813d063d51",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configuration for CI server\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config/config-jenkins-windows32-release.cmake" : {
      "ObjectId" : "f577376998ea1ffdf27d77c2fbc966312d54ebd5",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configuration for CI server\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config/config-metacentrum-debug.cmake" : {
      "ObjectId" : "d665342da26e72aacc379b7a93dcd016c1e5fb96",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configuration for metacentrum tarkil\n\n# debug build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# main config\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# external libraries\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# additional info\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# need to load following modules in order to build flow123d\n\n# \n\n# module add cmake-2.8.12\n\n# module add mpich2\n\n# module load boost-1.56-gcc\n\n# module load python-2.7.10-gcc",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "config/jenkins-job/expand_placeholders.cmake" : {
      "ObjectId" : "2052586c80c2a9134cd5fdf651d0ae387d0ad5aa",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# In file ${INPUT} expand every line with placeholder $PLACEHOLDER_<name>$ replacing\n\n# placeholder itera\n\n#\n\n# Use template file ${INPUT} to produce ${OUTPUT}. File ${INPUT} contains placeholders in format: $PLACEHOLDER_<filename>$\n\n# One line can contain just one placeholder. Such line is replaced by several lines according to number of lines in file '<filename>'\n\n# where value of the placeholder iterates through lines of that file.\n\n#\n\n# Files with expansion values should be in working directory.\n\n#\n\n#  CONSTRAIN: file ${INPUT} can not contain semi-colons ';'\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Algorithm:\n\n# copy file to temporary\n\n# find all placeholders\n\n# for every placeholder\n\n#   get list from appropriate file\n\n#   for every list item substitute every line\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# get placeholders\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# duplicate lines containing placeholder and in the first of two new lines replace placeholder with value\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# remove lines containing placeholder\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "e5f35a8d77e88f5b75fb3f79dd3051898d7bf469",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/reference_manual/CMakeLists.txt" : {
      "ObjectId" : "0083f281b67ce3ef4b3fe80025d63d2c12ae8b41",
      "LastModified" : "2018-11-05T10:11:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Separate project for making reference manual PDF from \n\n# Latex sources. UseLatex just sends errors when some\n\n# necessary tool is missing. This wrapper project can \n\n# be called through execute_process\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# assume the TUTORIALS variable with list of tutorial tex files.\n\n# call e.g.: cmake -D TUTORIALS=\"1.tex 2.tex\" . \n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Here add every new .tex (or other .txt, .sty etc.) file that you create and include\n\n# with \\input \\include \\usepackage commands in the documentation.\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Also add latex table or image if you have it in a separate file.\n",
        "Line" : 44,
        "CharPositionInLine" : 7
      },
      "4" : {
        "Text" : "#   # generate latex files from tutorials in yaml format\n\n#   set(tutorial_files\n\n#        01_column.yaml\n\n#        02_column_transport.yaml\n\n#        03_tunnel.yaml\n\n#        04_frac_diffusion.yaml\n\n#        05_frac_sorption.yaml\n\n#        06_frac_dualpor.yaml\n\n#        07_heat.yaml\n\n#   )\n\n#   add_custom_command(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/make_tex.sh\n\n#      DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/../../tests/05_tutorial/make_tex.sh\n\n#      COMMAND \"cp\" make_tex.sh ${CMAKE_CURRENT_BINARY_DIR}\n\n#      COMMAND \"cp\" -r images ${CMAKE_CURRENT_BINARY_DIR}\n\n#      WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../../tests/05_tutorial/\n\n#   )\n\n#   foreach(f ${tutorial_files})\n\n# #    add_custom_command(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${f}\n\n# #       DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/../../tests/05_tutorial/${f}\n\n# #       COMMAND \"cp\" ${f} ${CMAKE_CURRENT_BINARY_DIR}\n\n# #       WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../../tests/05_tutorial/\n\n# #    )\n\n# #    add_custom_command(OUTPUT ${f}.tex\n\n# #       DEPENDS ${f} make_tex.sh\n\n# #       COMMAND \"${CMAKE_CURRENT_BINARY_DIR}/make_tex.sh\" ${f}\n\n# #       WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n\n# #    )\n\n#     add_custom_command(OUTPUT ${f}.tex\n\n#        DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/../../tests/05_tutorial/${f} make_tex.sh\n\n#        COMMAND \"cp\" ${CMAKE_CURRENT_SOURCE_DIR}/../../tests/05_tutorial/${f} ${CMAKE_CURRENT_BINARY_DIR}\n\n#        COMMAND \"${CMAKE_CURRENT_BINARY_DIR}/make_tex.sh\" ${f}\n\n#        WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n\n#     )\n\n# \n\n#     list(APPEND doc_inputs ${f}.tex)\n\n#   endforeach(f)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "e1a73d6763c6bee9b30636bc5a2ae8f3ad49f0f6",
      "LastModified" : "2019-04-11T10:03:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Copyright (C) 2007 Technical University of Liberec.  All rights reserved.\n\n#\n\n# Please make a following refer to Flow123d on your project site if you use the program for any purpose,\n\n# especially for academic research:\n\n# Flow123d, Research Centre: Advanced Remedial Technologies, Technical University of Liberec, Czech Republic\n\n#\n\n# This program is free software; you can redistribute it and/or modify it under the terms\n\n# of the GNU General Public License version 3 as published by the Free Software Foundation.\n\n# \n\n# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; \n\n# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along with this program; if not,\n\n# write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 021110-1307, USA.\n\n#\n\n# $Id$\n\n# $Revision$\n\n# $LastChangedBy$\n\n# $LastChangedDate$\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# when the precompiled headers are used in the future \n\n#if (${PRECOMPILED_HEADERS})\n\n#    include(CMake/Modules/PrecompiledHeaders.cmake)\n\n#endif()\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add deal.II library\n\n#set(USE_DEAL_II true)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Note: deal.II implicitly uses variables PETSC_DIR, PETSC_ARCH from upstream\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#set(TBB_FOUND \"true\")\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "## Check if UMFPACK is installed with PETSc\n\n#if (PETSC_VAR_UMFPACK_LIB)\n\n#  set(UMFPACK_FOUND \"true\")\n\n#  set(UMFPACK_LINKER_FLAGS ${PETSC_VAR_UMFPACK_LIB})\n\n#else()\n\n#  MESSAGE(FATAL_ERROR \"Deal.II depends on UMFPACK, but PETSc is not built with it.\")\n\n##  set(DEAL_II_ALLOW_BUNDLED OFF)\n\n##  set(DEAL_II_FORCE_BUNDLED_UMFPACK ON)\n\n#endif()\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#add_subdirectory(\"dealii\")\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# patched json_spirit lib\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#message(STATUS \"Include directories: ${flow123d_includes}\")\n\n#include_directories(${flow123d_includes})\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# add individual libraries and object groups\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# when the precompiled headers are used in the future\n\n#if (${PRECOMPILED_HEADERS})\n\n#    ADD_PRECOMPILED_HEADER(system_lib \"pre_system.hh\")\n\n#endif()\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# system_lib\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# input_lib\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# la_lib\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# tools_lib    \n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# mesh_lib\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#    mesh/intersection.cc\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#     mesh/ngh/src/abscissa.cpp\n\n#     mesh/ngh/src/bisector.cpp\n\n#     mesh/ngh/src/intersection.cpp\n\n#     mesh/ngh/src/intersectionLocal.cpp\n\n#     mesh/ngh/src/mathfce.cpp\n\n#     mesh/ngh/src/matrix.cpp\n\n#     mesh/ngh/src/plain.cpp\n\n#     mesh/ngh/src/point.cpp\n\n#     mesh/ngh/src/polygon.cpp\n\n#     mesh/ngh/src/tetrahedron.cpp\n\n#     mesh/ngh/src/triangle.cpp\n\n#     mesh/ngh/src/vector.cpp\n\n#     mesh/ngh/src/vertex.cpp\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# fem_lib    \n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# io_lib  \n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# coupling_lib  \n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# unfortunatelly field sources depends on output sources\n\n# and viceversa\n",
        "Line" : 284,
        "CharPositionInLine" : 3
      },
      "22" : {
        "Text" : "# fields/field_elementwise.cc\n\n# fields/field_interpolated_p0.cc\n",
        "Line" : 300,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# coupling/hc_explicit_sequential.cc\n",
        "Line" : 309,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# make separate library for Semchem (God save us!)\n\n#add_library(semchem \n\n#    semchem/che_semchem.cc\n\n#    semchem/che_read.cc\n\n#)\n\n#set_target_properties(semchem \n\n#    PROPERTIES ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib\n\n#)\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# all remaining sources \n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#semchem/semchem_interface.cc\n",
        "Line" : 350,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "#    ${TBB_LIBRARIES}\n\n#    ${DEAL_II_LIBRARY_NAME}\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#add_dependencies(flow123d_lib tbb)\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "src/input/json_spirit/CMakeLists.txt" : {
      "ObjectId" : "d9981e4902e563ee1004c86c2c51a15ddf40de49",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/FADBAD++/examples/Makefile" : {
      "ObjectId" : "ce425817a2be361cf7bd3fe8edec62f5187638c4",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/FADBAD++/test/Makefile" : {
      "ObjectId" : "52f467b505baa240bbad64ef6c71d725f8cf8ae9",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/fparser-4.5.1/CMakeLists.txt" : {
      "ObjectId" : "fde283e38c3ff9e273688cd16f4cd525903b4c4c",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Copyright (C) 2007 Technical University of Liberec.  All rights reserved.\n\n#\n\n# Please make a following refer to Flow123d on your project site if you use the program for any purpose,\n\n# especially for academic research:\n\n# Flow123d, Research Centre: Advanced Remedial Technologies, Technical University of Liberec, Czech Republic\n\n#\n\n# This program is free software; you can redistribute it and/or modify it under the terms\n\n# of the GNU General Public License version 3 as published by the Free Software Foundation.\n\n# \n\n# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; \n\n# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along with this program; if not,\n\n# write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 021110-1307, USA.\n\n#\n\n# $Id: CMakeLists.txt 1306 2011-08-30 13:53:56Z jiri.jenicek $\n\n# $Revision: 1306 $\n\n# $LastChangedBy: jiri.jenicek $\n\n# $LastChangedDate: 2011-08-30 15:53:56 +0200 (Tue, 30 Aug 2011) $\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# select source files that compose whole flow123d library\n\n# todo: split into parts, e.g. system, output, input, mesh, darcy_mh, transport, .. \n\n# every library then can be testetd independently\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add tager for libfparser\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "third_party/gtest-1.7.0/CMakeLists.txt" : {
      "ObjectId" : "57470c84f3af0772c411bbb8bbbb41b515747ecd",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 52,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# The C++ Standard specifies tuple_element<int, class>.\n\n# Yet MSVC 10's <utility> declares tuple_element<size_t, class>.\n\n# That declaration conflicts with our own standard-conforming\n\n# tuple implementation.  Therefore using our own tuple with\n\n# MSVC 10 doesn't compile.\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "third_party/gtest-1.7.0/Makefile.am" : {
      "ObjectId" : "9c96b42572ca943d5fb4d4303842f12a545e8523",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "third_party/gtest-1.7.0/cmake/internal_utils.cmake" : {
      "ObjectId" : "8cb21894cebacd5bdfb598c8663a5be50325d70f",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 107,
        "CharPositionInLine" : 32
      },
      "17" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 31
    },
    "third_party/tbb43_20150316oss/CMakeLists.txt" : {
      "ObjectId" : "d4c9d300421696108db3e365a6b506bc81c20604",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Copyright (C) 2007 Technical University of Liberec.  All rights reserved.\n\n#\n\n# Please make a following refer to Flow123d on your project site if you use the program for any purpose,\n\n# especially for academic research:\n\n# Flow123d, Research Centre: Advanced Remedial Technologies, Technical University of Liberec, Czech Republic\n\n#\n\n# This program is free software; you can redistribute it and/or modify it under the terms\n\n# of the GNU General Public License version 3 as published by the Free Software Foundation.\n\n# \n\n# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; \n\n# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along with this program; if not,\n\n# write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 021110-1307, USA.\n\n#\n\n# $Id: CMakeLists.txt 1306 2011-08-30 13:53:56Z jiri.jenicek $\n\n# $Revision: 1306 $\n\n# $LastChangedBy: jiri.jenicek $\n\n# $LastChangedDate: 2011-08-30 15:53:56 +0200 (Tue, 30 Aug 2011) $\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file runs original Makefile shipped with TBB and in addition creates static libraries.\n\n# It is however strongly recommended to use shared libraries, so we should swith to them\n\n# as soon as possible.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# create temporary makefile for printing the variables\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# macro for extraction of variables from makefile\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# prepend directory where objects will be located\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# save object files for TBB libraries\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#TBB_GET_VARIABLE(PROXY.OBJ tbb_proxy_obj)\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#prepend_directory_name(tbb_proxy_obj \"${CMAKE_CURRENT_BINARY_DIR}/build_${FLOW_BUILD_TYPE}\")\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# finally remove the temporary makefile\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# add tager for TBB\n\n# run make\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#       COMMAND \"${AR_EXECUTABLE}\" cr ${TBB_LIBRARY_DIR}/libtbbmalloc_proxy.a ${tbb_proxy_obj}\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "third_party/tbb43_20150316oss/Makefile" : {
      "ObjectId" : "bc459897b3fa62e09d8bd3fdf6a1039f77f0cfd8",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright 2005-2015 Intel Corporation.  All Rights Reserved.\n\n#\n\n# This file is part of Threading Building Blocks. Threading Building Blocks is free software;\n\n# you can redistribute it and/or modify it under the terms of the GNU General Public License\n\n# version 2  as  published  by  the  Free Software Foundation.  Threading Building Blocks is\n\n# distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See  the GNU General Public License for more details.   You should have received a copy of\n\n# the  GNU General Public License along with Threading Building Blocks; if not, write to the\n\n# Free Software Foundation, Inc.,  51 Franklin St,  Fifth Floor,  Boston,  MA 02110-1301 USA\n\n#\n\n# As a special exception,  you may use this file  as part of a free software library without\n\n# restriction.  Specifically,  if other files instantiate templates  or use macros or inline\n\n# functions from this file, or you compile this file and link it with other files to produce\n\n# an executable,  this file does not by itself cause the resulting executable to be covered\n\n# by the GNU General Public License. This exception does not however invalidate any other\n\n# reasons why the executable file might be covered by the GNU General Public License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#workaround for non-depend targets tbb and tbbmalloc which both depend on version_string.ver\n\n#According to documentation, recursively invoked make commands can process their targets in parallel\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "unit_tests/CMakeLists.txt" : {
      "ObjectId" : "bba085f0322fa4804753f25716579b1da626a142",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set timeout for one unit test\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 30 s\n",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# Set timeout for one unit test running under valgrind\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# 5 min\n",
        "Line" : 7,
        "CharPositionInLine" : 26
      },
      "4" : {
        "Text" : "# build gtest itself\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# sources for our mpi gtest extension\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# object library used by tests, but can be build once\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defines macro for absolute path to unit_tests, so that unit tests can read\n\n# some test files in its source directory, while the binary of the test is created\n\n# elsewhere.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# target to make all unit tests\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "######################################################################################################\n\n# Macro to make default targets and operations in current unit tests subdirectory, namely:\n\n# - create sym link to the generated Makefile\n\n# - make all-test and all-bench targets\n\n# - add required libraries\n\n# Should be called from subdirectories\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#message(\"IN: ${CMAKE_CURRENT_SOURCE_DIR} SUBDIR: ${subdir}\")\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#message(\"SUBDIR LIBS: ${libs}\")\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#message(\"allow common targets\")\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# default all_test target\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# default all_bench target\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#DEPENDS ${test_name}\n",
        "Line" : 55,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "#################################\n\n# MACRO define_test\n\n#\n\n# Creates build targets for particular source file containing one test.\n\n#\n\n# For given parameter 'class_name', it assumes class_name_test.cpp source\n\n# and creates:\n\n# target 'class_name_test' which builds corresponding binary and run the test\n\n# target 'class_name_valgrind' which builds the binary and runs it under valgrind\n\n# use libraries in ${super_test_libs}\n\n#\n\n# We want to run tests from source dir, but since there is no portable way\n\n# how to make link from source dir to Makefile generated in build dir\n\n# I let main makefile to make such links.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#message(STATUS \"adding test: ${test_binary} cxx flags: ${CMAKE_CXX_FLAGS}\")\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# executable rule\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#set_target_properties(${test_binary} PROPERTIES COMPILE_FLAGS \"${CMAKE_CXX_FLAGS}\")\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# rule to run the test\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# rule to run the test under valgrind\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# register the test into super_test\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# let ctest call make with appropriate  target\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "#################################\n\n# MACRO define_mpi_test\n\n#\n\n# Creates build targets for particular source file containing one test which should run in parallel.\n\n#\n\n# It has one more parameter for number of processors N. It provides similar targets as the macro 'define_test'\n\n# like: 'class_name_N_test' and 'class_name_N_valgrind' which builds the test binary and run it in parallel using bin/mpiexec\n\n#\n\n# To get meaningful output from the parallel tests you should include <gtest_flow.hh> instead of <gtest/gtest.h>\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#message(STATUS \"adding mpi test: ${test_binary} on nprocs: ${n_proc} cxx flags: ${CMAKE_CXX_FLAGS}\")\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# executable rule\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# add_dependencies(${test_binary} mpiexec_link)      # make\n",
        "Line" : 135,
        "CharPositionInLine" : 3
      },
      "28" : {
        "Text" : "# rule to run the test\n\n# set(RUN_COMMAND ulimit -t 300\\; )\n\n# message(STATUS \"BASH_COMMAND=${BASH_COMMAND}\")\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# rule to run the test under valgrind\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# register the test into super_test\n",
        "Line" : 153,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# let ctest call make with appropriate  target\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "#######################################################################################################\n\n# add subdirectories\n\n# - has to be done manually to get correct dependencies on CMake's list files.\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#################################################################################################\n\n# Targets for Jenkis Jobs Builder\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Make list of integration test names from list of subdirectories in the test directory.\n\n# This should be manually finished before it can be used by use it in\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Following two targets assume installation of Jenkins jobs Builder.\n\n# https://github.com/openstack-infra/jenkins-job-buildera\n\n#\n\n# For installation follow README.md.\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Rule to create XML definitions of Jenkins jobs and upload them to the server.\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Rule to create XML definitions of Jenkins jobs in local directory. (for testing)\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Rule how to make ${JENKINS_JOBS_FILE} from ./jenkins_jobs_template.yaml\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 39
    },
    "unit_tests/coupling/CMakeLists.txt" : {
      "ObjectId" : "ae48ff0fe9e80ca246df364837cdf5abe59a762f",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Copyright (C) 2007 Technical University of Liberec.  All rights reserved.\n\n#\n\n# Please make a following refer to Flow123d on your project site if you use the program for any purpose,\n\n# especially for academic research:\n\n# Flow123d, Research Centre: Advanced Remedial Technologies, Technical University of Liberec, Czech Republic\n\n#\n\n# This program is free software; you can redistribute it and/or modify it under the terms\n\n# of the GNU General Public License version 3 as published by the Free Software Foundation.\n\n# \n\n# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; \n\n# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along with this program; if not,\n\n# write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 021110-1307, USA.\n\n#\n\n# $Id: CMakeLists.txt 1567 2012-02-28 13:24:58Z jan.brezina $\n\n# $Revision: 1567 $\n\n# $LastChangedBy: jan.brezina $\n\n# $LastChangedDate: 2012-02-28 14:24:58 +0100 (Tue, 28 Feb 2012) $\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_INCLUDE_CURRENT_DIR ON)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "unit_tests/dealii/CMakeLists.txt" : {
      "ObjectId" : "29bc4c504c185a61f0c6239783c8caabfd81fbdb",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Copyright (C) 2007 Technical University of Liberec.  All rights reserved.\n\n#\n\n# Please make a following refer to Flow123d on your project site if you use the program for any purpose,\n\n# especially for academic research:\n\n# Flow123d, Research Centre: Advanced Remedial Technologies, Technical University of Liberec, Czech Republic\n\n#\n\n# This program is free software; you can redistribute it and/or modify it under the terms\n\n# of the GNU General Public License version 3 as published by the Free Software Foundation.\n\n# \n\n# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; \n\n# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along with this program; if not,\n\n# write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 021110-1307, USA.\n\n#\n\n# $Id: CMakeLists.txt 1567 2012-02-28 13:24:58Z jan.brezina $\n\n# $Revision: 1567 $\n\n# $LastChangedBy: jan.brezina $\n\n# $LastChangedDate: 2012-02-28 14:24:58 +0100 (Tue, 28 Feb 2012) $\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "unit_tests/expand_placeholders.cmake" : {
      "ObjectId" : "2052586c80c2a9134cd5fdf651d0ae387d0ad5aa",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# In file ${INPUT} expand every line with placeholder $PLACEHOLDER_<name>$ replacing\n\n# placeholder itera\n\n#\n\n# Use template file ${INPUT} to produce ${OUTPUT}. File ${INPUT} contains placeholders in format: $PLACEHOLDER_<filename>$\n\n# One line can contain just one placeholder. Such line is replaced by several lines according to number of lines in file '<filename>'\n\n# where value of the placeholder iterates through lines of that file.\n\n#\n\n# Files with expansion values should be in working directory.\n\n#\n\n#  CONSTRAIN: file ${INPUT} can not contain semi-colons ';'\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Algorithm:\n\n# copy file to temporary\n\n# find all placeholders\n\n# for every placeholder\n\n#   get list from appropriate file\n\n#   for every list item substitute every line\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# get placeholders\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# duplicate lines containing placeholder and in the first of two new lines replace placeholder with value\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# remove lines containing placeholder\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "unit_tests/fem/CMakeLists.txt" : {
      "ObjectId" : "9b04081c236f27c8f5e52dbacb12ca0b93992fa6",
      "LastModified" : "2018-11-05T10:11:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Copyright (C) 2007 Technical University of Liberec.  All rights reserved.\n\n#\n\n# Please make a following refer to Flow123d on your project site if you use the program for any purpose,\n\n# especially for academic research:\n\n# Flow123d, Research Centre: Advanced Remedial Technologies, Technical University of Liberec, Czech Republic\n\n#\n\n# This program is free software; you can redistribute it and/or modify it under the terms\n\n# of the GNU General Public License version 3 as published by the Free Software Foundation.\n\n# \n\n# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; \n\n# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along with this program; if not,\n\n# write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 021110-1307, USA.\n\n#\n\n# $Id: CMakeLists.txt 1567 2012-02-28 13:24:58Z jan.brezina $\n\n# $Revision: 1567 $\n\n# $LastChangedBy: jan.brezina $\n\n# $LastChangedDate: 2012-02-28 14:24:58 +0100 (Tue, 28 Feb 2012) $\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "unit_tests/fields/CMakeLists.txt" : {
      "ObjectId" : "c499996ae7ef954ee5f26e6d3761a7e2214f1bb6",
      "LastModified" : "2018-11-07T18:13:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Copyright (C) 2007 Technical University of Liberec.  All rights reserved.\n\n#\n\n# Please make a following refer to Flow123d on your project site if you use the program for any purpose,\n\n# especially for academic research:\n\n# Flow123d, Research Centre: Advanced Remedial Technologies, Technical University of Liberec, Czech Republic\n\n#\n\n# This program is free software; you can redistribute it and/or modify it under the terms\n\n# of the GNU General Public License version 3 as published by the Free Software Foundation.\n\n# \n\n# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; \n\n# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along with this program; if not,\n\n# write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 021110-1307, USA.\n\n#\n\n# $Id: CMakeLists.txt 1567 2012-02-28 13:24:58Z jan.brezina $\n\n# $Revision: 1567 $\n\n# $LastChangedBy: jan.brezina $\n\n# $LastChangedDate: 2012-02-28 14:24:58 +0100 (Tue, 28 Feb 2012) $\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_INCLUDE_CURRENT_DIR ON)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#define_mpi_test(field_elementwise 1)   \n\n#define_mpi_test(field_interpolated_p0 1)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "unit_tests/flow/CMakeLists.txt" : {
      "ObjectId" : "5e5aef08d47a436fc75da42312e7fdd403c129de",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Copyright (C) 2007 Technical University of Liberec.  All rights reserved.\n\n#\n\n# Please make a following refer to Flow123d on your project site if you use the program for any purpose,\n\n# especially for academic research:\n\n# Flow123d, Research Centre: Advanced Remedial Technologies, Technical University of Liberec, Czech Republic\n\n#\n\n# This program is free software; you can redistribute it and/or modify it under the terms\n\n# of the GNU General Public License version 3 as published by the Free Software Foundation.\n\n# \n\n# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; \n\n# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU General Public License for more detail\n\n#\n\n# You should have received a copy of the GNU General Public License along with this program; if not,\n\n# write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 021110-1307, USA.\n\n#\n\n# $Id: CMakeLists.txt 1567 2012-02-28 13:24:58Z jan.brezina $\n\n# $Revision: 1567 $\n\n# $LastChangedBy: jan.brezina $\n\n# $LastChangedDate: 2012-02-28 14:24:58 +0100 (Tue, 28 Feb 2012) $\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "unit_tests/input/CMakeLists.txt" : {
      "ObjectId" : "0079d6227a76f47e9ecf46a99198c77abb97dbdf",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Copyright (C) 2007 Technical University of Liberec.  All rights reserved.\n\n#\n\n# Please make a following refer to Flow123d on your project site if you use the program for any purpose,\n\n# especially for academic research:\n\n# Flow123d, Research Centre: Advanced Remedial Technologies, Technical University of Liberec, Czech Republic\n\n#\n\n# This program is free software; you can redistribute it and/or modify it under the terms\n\n# of the GNU General Public License version 3 as published by the Free Software Foundation.\n\n# \n\n# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; \n\n# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along with this program; if not,\n\n# write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 021110-1307, USA.\n\n#\n\n# $Id: CMakeLists.txt 1567 2012-02-28 13:24:58Z jan.brezina $\n\n# $Revision: 1567 $\n\n# $LastChangedBy: jan.brezina $\n\n# $LastChangedDate: 2012-02-28 14:24:58 +0100 (Tue, 28 Feb 2012) $\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_INCLUDE_CURRENT_DIR ON)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### define_test(enum_macro)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#define_test(lazy_types)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "unit_tests/intersection/CMakeLists.txt" : {
      "ObjectId" : "fe7f8df7d27e462ed8a562ef4c0320539868d526",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Copyright (C) 2007 Technical University of Liberec.  All rights reserved.\n\n#\n\n# Please make a following refer to Flow123d on your project site if you use the program for any purpose,\n\n# especially for academic research:\n\n# Flow123d, Research Centre: Advanced Remedial Technologies, Technical University of Liberec, Czech Republic\n\n#\n\n# This program is free software; you can redistribute it and/or modify it under the terms\n\n# of the GNU General Public License version 3 as published by the Free Software Foundation.\n\n# \n\n# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; \n\n# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along with this program; if not,\n\n# write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 021110-1307, USA.\n\n#\n\n# $Id: CMakeLists.txt 1567 2012-02-28 13:24:58Z jan.brezina $\n\n# $Revision: 1567 $\n\n# $LastChangedBy: jan.brezina $\n\n# $LastChangedDate: 2012-02-28 14:24:58 +0100 (Tue, 28 Feb 2012) $\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(super_test_libs fast_intersection_lib field_lib mesh_lib system_lib)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#     define_mpi_test(speed 1)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "unit_tests/la/CMakeLists.txt" : {
      "ObjectId" : "16ae2292137fb1a2e4b70f2c716a55ace79e44e6",
      "LastModified" : "2019-02-15T10:43:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Copyright (C) 2007 Technical University of Liberec.  All rights reserved.\n\n#\n\n# Please make a following refer to Flow123d on your project site if you use the program for any purpose,\n\n# especially for academic research:\n\n# Flow123d, Research Centre: Advanced Remedial Technologies, Technical University of Liberec, Czech Republic\n\n#\n\n# This program is free software; you can redistribute it and/or modify it under the terms\n\n# of the GNU General Public License version 3 as published by the Free Software Foundation.\n\n# \n\n# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; \n\n# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along with this program; if not,\n\n# write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 021110-1307, USA.\n\n#\n\n# $Id: CMakeLists.txt 1567 2012-02-28 13:24:58Z jan.brezina $\n\n# $Revision: 1567 $\n\n# $LastChangedBy: jan.brezina $\n\n# $LastChangedDate: 2012-02-28 14:24:58 +0100 (Tue, 28 Feb 2012) $\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_INCLUDE_CURRENT_DIR ON)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "unit_tests/list_subdirs.cmake" : {
      "ObjectId" : "ca724287398cea68394762f5bb4e0a931fe7df8c",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  List subdirectories\n\n#  -------------------\n\n#  accepted parameters:\n\n#   DIRECTORY - directory to list  \n\n#   OUTPUT - file to which write the list (overwritten)\n\n# CMake script that list subdirectories (relative) in the DIRECTORY and writes the result too stdout.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(\"LIST: ${dir_list}\")\n",
        "Line" : 12,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "unit_tests/mesh/CMakeLists.txt" : {
      "ObjectId" : "16df6e20f5c2155d4aec701fcc02b0c6a29606c0",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Copyright (C) 2007 Technical University of Liberec.  All rights reserved.\n\n#\n\n# Please make a following refer to Flow123d on your project site if you use the program for any purpose,\n\n# especially for academic research:\n\n# Flow123d, Research Centre: Advanced Remedial Technologies, Technical University of Liberec, Czech Republic\n\n#\n\n# This program is free software; you can redistribute it and/or modify it under the terms\n\n# of the GNU General Public License version 3 as published by the Free Software Foundation.\n\n# \n\n# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; \n\n# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along with this program; if not,\n\n# write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 021110-1307, USA.\n\n#\n\n# $Id: CMakeLists.txt 1567 2012-02-28 13:24:58Z jan.brezina $\n\n# $Revision: 1567 $\n\n# $LastChangedBy: jan.brezina $\n\n# $LastChangedDate: 2012-02-28 14:24:58 +0100 (Tue, 28 Feb 2012) $\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(super_test_libs fast_intersection_lib field_lib mesh_lib system_lib)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#define_test(element)\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "unit_tests/output/CMakeLists.txt" : {
      "ObjectId" : "88124012e72dc3e0c22e1b55f70ee39ceef5862a",
      "LastModified" : "2019-02-18T14:34:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Copyright (C) 2007 Technical University of Liberec.  All rights reserved.\n\n#\n\n# Please make a following refer to Flow123d on your project site if you use the program for any purpose,\n\n# especially for academic research:\n\n# Flow123d, Research Center: Advanced Remedial Technologies, Technical University of Liberec, Czech Republic\n\n#\n\n# This program is free software; you can redistribute it and/or modify it under the terms\n\n# of the GNU General Public License version 3 as published by the Free Software Foundation.\n\n# \n\n# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; \n\n# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along with this program; if not,\n\n# write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 021110-1307, USA.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "unit_tests/scripts/CMakeLists.txt" : {
      "ObjectId" : "e6ece3097245fdc46b0b59510a7c7cbe4a2885ca",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# target to compile tester_mpi.cc\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# add_dependencies(tester_mpi mpiexec_link)      # need mpiexec link compatible with MPI lib\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#message(STATUS \"flow123d.sh test: ${CMAKE_CURRENT_BINARY_DIR}\")\n\n# copy flow123d.sh and its test to testing build dir\n\n#file(COPY ../config\n\n#     DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/test_dir)     \n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# target to call flow123d.sh.test\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "unit_tests/system/CMakeLists.txt" : {
      "ObjectId" : "7ecc1ccebf1ec8054f55a30ddb8cedf5bd6f3f8e",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Copyright (C) 2007 Technical University of Liberec.  All rights reserved.\n\n#\n\n# Please make a following refer to Flow123d on your project site if you use the program for any purpose,\n\n# especially for academic research:\n\n# Flow123d, Research Centre: Advanced Remedial Technologies, Technical University of Liberec, Czech Republic\n\n#\n\n# This program is free software; you can redistribute it and/or modify it under the terms\n\n# of the GNU General Public License version 3 as published by the Free Software Foundation.\n\n# \n\n# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; \n\n# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU General Public License for more detail\n\n#\n\n# You should have received a copy of the GNU General Public License along with this program; if not,\n\n# write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 021110-1307, USA.\n\n#\n\n# $Id: CMakeLists.txt 1567 2012-02-28 13:24:58Z jan.brezina $\n\n# $Revision: 1567 $\n\n# $LastChangedBy: jan.brezina $\n\n# $LastChangedDate: 2012-02-28 14:24:58 +0100 (Tue, 28 Feb 2012) $\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# reqires raw strings  \n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "unit_tests/test_scripts/CMakeLists.txt" : {
      "ObjectId" : "d1e36c9ecf5c43a154e43a871bceaa6dcbcf15da",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# in order to use these tests additional files will be copied to CMAKE_CURRENT_BINARY_DIR\n\n# we also add target for compiling consumer.cc tester-like c++ program which simulates \n\n# memory and duration stress\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find python 2.7\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Custom target which runs all tests for python scripts. By default output is hidden (flag -b)\n\n# but on error it is displayed (sufficient for all applications)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Custom target which runs all tests for python scripts where output is shown. Since unittests\n\n# are testing correct and also incorrect behaviour output can be misleading (exceptions are thrown\n\n# and displayed yet test succeeds)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "unit_tests/tools/CMakeLists.txt" : {
      "ObjectId" : "986499656fdca7e37c0e71381a741c05ee606538",
      "LastModified" : "2018-08-08T07:08:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Copyright (C) 2007 Technical University of Liberec.  All rights reserved.\n\n#\n\n# Please make a following refer to Flow123d on your project site if you use the program for any purpose,\n\n# especially for academic research:\n\n# Flow123d, Research Centre: Advanced Remedial Technologies, Technical University of Liberec, Czech Republic\n\n#\n\n# This program is free software; you can redistribute it and/or modify it under the terms\n\n# of the GNU General Public License version 3 as published by the Free Software Foundation.\n\n# \n\n# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; \n\n# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along with this program; if not,\n\n# write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 021110-1307, USA.\n\n#\n\n# $Id: CMakeLists.txt 1567 2012-02-28 13:24:58Z jan.brezina $\n\n# $Revision: 1567 $\n\n# $LastChangedBy: jan.brezina $\n\n# $LastChangedDate: 2012-02-28 14:24:58 +0100 (Tue, 28 Feb 2012) $\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 67,
    "MAKEFILE" : 3,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 8774
}