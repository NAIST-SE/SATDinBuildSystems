{
  "Repository" : "30590000",
  "Revision" : "HEAD",
  "ObjectId" : "68a5d98c6e555aa59fe6be72f45f84e0b28ae984",
  "CommitTime" : "2019-03-15T15:46:38Z",
  "Files" : {
    "boost_test/CMakeLists.txt" : {
      "ObjectId" : "b6736925c03cf93855a8ea2e301124690e156205",
      "LastModified" : "2018-10-14T12:57:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake 最低版本要求\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# compile toolchain (should set before `project()`)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOTE: use `cmake -G \"Visual Studio 14 2015\"` instead set the `CMAKE_GENERATOR` here\n\n#        copy `rc.exe, rc.dll` into visual studio vc bin folder, then it works\n\n#     https://stackoverflow.com/questions/14372706/visual-studio-cant-build-due-to-rc-exe%22\n\n#set(CMAKE_GENERATOR \"Visual Studio 14 2015\")\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# project basic information\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# compile options, should set after `project()`, otherwise it won't work\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# also coult replace with `add_compile_options(-std=c++11)`\n",
        "Line" : 27,
        "CharPositionInLine" : 56
      },
      "6" : {
        "Text" : "#multi-processor compile\n",
        "Line" : 32,
        "CharPositionInLine" : 28
      },
      "7" : {
        "Text" : "#set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE}\")\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# find source files automatically, then set to var DIR_SRCS\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# add headers also into the visual studio project\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#message(${HEADER_FILES})\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "####### option for default ###########\n\n#option(USE_MY_MATH_LIB \"use my math lib\" ON)\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# 对于这个命令，若默认使用shared lib, cmake连运行时的链接关系都会设置好\n\n# 意味着 .so 被链接过之后, 不需要安装到系统目录即可查找到并运行 \n\n#option(BUILD_SHARED_LIBS \"build shared libraries\" OFF)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "####### option for default ##########\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# target\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# link lib in subfolder\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "cmake_vs_gnu_build_system/CMakeLists.txt" : {
      "ObjectId" : "38a3ce1e15052639e2150dde807158e7d4f1aef4",
      "LastModified" : "2018-10-14T12:57:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake 最低版本要求\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# compile toolchain (should set before `project()`)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# project basic information\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# compile options, should set after `project()`, otherwise it won't work\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# also coult replace with `add_compile_options(-std=c++11)`\n",
        "Line" : 25,
        "CharPositionInLine" : 56
      },
      "5" : {
        "Text" : "#multi-processor compile\n",
        "Line" : 30,
        "CharPositionInLine" : 28
      },
      "6" : {
        "Text" : "#set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE}\")\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# find source files automatically, then set to var DIR_SRCS\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#aux_source_directory(math_lib DIR_MATH_LIB_SRCS)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "####### option for default ###########\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# 对于这个命令，若默认使用shared lib, cmake连运行时的链接关系都会设置好\n\n# 意味着 .so 被链接过之后, 不需要安装到系统目录即可查找到并运行 \n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "####### option for default ##########\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# configs for project, should after default value definition in option\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# add subfolder (will refer CMakeLists.txt file in subfolder)\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# target\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# link lib in subfolder\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "cmake_vs_gnu_build_system/Makefile.am" : {
      "ObjectId" : "8527a82aea5f950b57752a0a9b4cbe7bcab91912",
      "LastModified" : "2018-10-14T12:57:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#ACLOCAL_AMFLAGS = ${ACLOCAL_FLAGS} -I m4 \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#pow_CPPFLAGS = -std=c++11 \n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake_vs_gnu_build_system/math_lib/CMakeLists.txt" : {
      "ObjectId" : "e31eaa78f3e6597e83eac2d4bbc2215047cc9b2b",
      "LastModified" : "2018-10-14T12:57:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find source files here\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add headers also into the visual studio project\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# target (static lib)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake_vs_gnu_build_system/math_lib/Makefile.am" : {
      "ObjectId" : "3121ecf9e0841e5f9d850b7b705dfb3a7cfd0a83",
      "LastModified" : "2018-10-14T12:57:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "gnu_build_system_test/Makefile.am" : {
      "ObjectId" : "7b3d0be72d56a78d04aa1a3fe040c4a4c43023b3",
      "LastModified" : "2018-10-14T12:57:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "learn_intel_tbb/CMakeLists.txt" : {
      "ObjectId" : "33717f30336d24f1367c24268005bec9b502986a",
      "LastModified" : "2018-12-19T14:02:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake 最低版本要求\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# compile toolchain (should set before `project()`)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# project basic information\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# compile options, should set after `project()`, otherwise it won't work\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# also coult replace with `add_compile_options(-std=c++11)`\n",
        "Line" : 27,
        "CharPositionInLine" : 56
      },
      "5" : {
        "Text" : "#multi-processor compile\n",
        "Line" : 32,
        "CharPositionInLine" : 28
      },
      "6" : {
        "Text" : "#set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE}\")\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# include/link directories for tbb\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# find source files automatically, then set to var DIR_SRCS\n\n#aux_source_directory(src DIR_SRCS)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# target\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# link lib in subfolder\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#debug libtbb_preview_debug.so\n\n#debug libtbbmalloc_debug.so\n\n#debug libtbbmalloc_proxy_debug.so\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#optimized libtbb_preview.so\n\n#optimized libtbbmalloc.so\n\n#optimized libtbbmalloc_proxy.so\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#debug libtbb_preview_debug.so\n\n#debug libtbbmalloc_debug.so\n\n#debug libtbbmalloc_proxy_debug.so\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#optimized libtbb_preview.so\n\n#optimized libtbbmalloc.so\n\n#optimized libtbbmalloc_proxy.so\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#debug libtbb_preview_debug.so\n\n#debug libtbbmalloc_debug.so\n\n#debug libtbbmalloc_proxy_debug.so\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#optimized libtbb_preview.so\n\n#optimized libtbbmalloc.so\n\n#optimized libtbbmalloc_proxy.so\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 17
    },
    "learn_intel_tbb/modules/pstl2019_20181010oss/CMakeLists.txt" : {
      "ObjectId" : "75d15ecdb4d3ab0323b1dd0ca8934a2165d510e9",
      "LastModified" : "2018-11-22T14:39:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2018 Intel Corporation\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n\n#\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "learn_intel_tbb/modules/pstl2019_20181010oss/examples/convex_hull/Makefile" : {
      "ObjectId" : "841bfe645057d7f23067881eade2b78f7738f494",
      "LastModified" : "2018-11-22T14:39:04Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2017-2018 Intel Corporation\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n\n#\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GNU Makefile that builds and runs example.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set by default icc as C++ compiler if it's present\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# which icc\n",
        "Line" : 29,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# target is mic or host?\n\n# icc?\n",
        "Line" : 37,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "learn_intel_tbb/modules/pstl2019_20181010oss/examples/dot_product/Makefile" : {
      "ObjectId" : "9ca4df46b6ecb4ee659ab014ec86c6e5d75554a4",
      "LastModified" : "2018-11-22T14:39:04Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2017-2018 Intel Corporation\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n\n#\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GNU Makefile that builds and runs example.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set by default icc as C++ compiler if it's present\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# which icc\n",
        "Line" : 29,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# target is mic or host?\n\n# icc?\n",
        "Line" : 37,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "learn_intel_tbb/modules/pstl2019_20181010oss/examples/gamma_correction/Makefile" : {
      "ObjectId" : "5f84e2f4b8b84fd5c49bb03b1a68997b170cc639",
      "LastModified" : "2018-11-22T14:39:04Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2017-2018 Intel Corporation\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n\n#\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GNU Makefile that builds and runs example.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set by default icc as C++ compiler if it's present\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# which icc\n",
        "Line" : 29,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# target is mic or host?\n\n# icc?\n",
        "Line" : 37,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "learn_intel_tbb/modules/tbb2019_20181010oss/cmake/TBBBuild.cmake" : {
      "ObjectId" : "14f8517b5e4652a694d17dcb5343f7d23bab7e33",
      "LastModified" : "2018-11-22T14:39:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017-2018 Intel Corporation\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n\n#\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Usage:\n\n#  include(TBBBuild.cmake)\n\n#  tbb_build(ROOT <tbb_root> MAKE_ARGS <arg1> [... <argN>])\n\n#  find_package(TBB <options>)\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Save the location of Intel TBB CMake modules here, as it will not be possible to do inside functions,\n\n# see for details: https://cmake.org/cmake/help/latest/variable/CMAKE_CURRENT_LIST_DIR.html\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##\n\n# Builds Intel TBB.\n\n#\n\n# Parameters:\n\n#  TBB_ROOT   <directory> - path to Intel TBB root directory (with sources);\n\n#  MAKE_ARGS  <list>      - user-defined arguments to be passed to make-tool;\n\n#  CONFIG_DIR <variable>  - store location of the created TBBConfig if the build was ok, store <variable>-NOTFOUND otherwise.\n\n#\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# NOTE: internal function are used to hide them from user.\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "##\n\n# Provides arguments for make-command to build Intel TBB.\n\n#\n\n# Following arguments are provided automatically if they are not defined by user:\n\n#  compiler=<value>\n\n#  tbb_build_dir=<value>\n\n#  tbb_build_prefix=<value>\n\n#  -j<n>\n\n#\n\n# Parameters:\n\n#  USER_DEFINED_ARGS <list> - list of user-defined arguments;\n\n#  RESULT <variable> - resulting list of 'make' arguments.\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# TODO: add other supported compilers.\n",
        "Line" : 64,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "##\n\n# Provides release and debug directories basing on 'make' arguments.\n\n#\n\n# Following 'make' arguments are parsed: tbb_build_dir, tbb_build_prefix\n\n#\n\n# Parameters:\n\n#  MAKE_ARGS   <list>     - 'make' arguments (tbb_build_dir and tbb_build_prefix are required)\n\n#  RELEASE_DIR <variable> - store normalized (CMake) path to release directory\n\n#  DEBUG_DIR   <variable> - store normalized (CMake) path to debug directory\n\n#\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# -------------------- #\n\n# Function entry point #\n\n# -------------------- #\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "learn_intel_tbb/modules/tbb2019_20181010oss/cmake/TBBConfig.cmake" : {
      "ObjectId" : "ab99ba855fa5dd28c6fd3e1bbcf67cefe7f63a22",
      "LastModified" : "2018-11-22T14:39:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017-2018 Intel Corporation\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n\n#\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TBB_FOUND should not be set explicitly. It is defined automatically by CMake.\n\n# Handling of TBB_VERSION is in TBBConfigVersion.cmake.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add components with internal dependencies: tbbmalloc_proxy -> tbbmalloc\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# For non-GCC compilers try to find version of system GCC to choose right compiler subdirectory.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add internal dependencies for imported targets: TBB::tbbmalloc_proxy -> TBB::tbbmalloc\n",
        "Line" : 95,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "learn_intel_tbb/modules/tbb2019_20181010oss/cmake/TBBConfigVersion.cmake" : {
      "ObjectId" : "80d92ebb022cd25b707e4f3c80f1912694ce9dda",
      "LastModified" : "2018-11-22T14:39:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017-2018 Intel Corporation\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n\n#\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "learn_intel_tbb/modules/tbb2019_20181010oss/cmake/TBBGet.cmake" : {
      "ObjectId" : "5cb93af56cc009377aa7d4dd37e51fa2abb8832e",
      "LastModified" : "2018-11-22T14:39:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017-2018 Intel Corporation\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n\n#\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the location of Intel TBB CMake modules here, as it will not be possible to do inside functions,\n\n# see for details: https://cmake.org/cmake/help/latest/variable/CMAKE_CURRENT_LIST_DIR.html\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##\n\n# Downloads file.\n\n#\n\n# Parameters:\n\n#  URL     <url>      - URL to download data from;\n\n#  SAVE_AS <filename> - filename there to save downloaded data;\n\n#  INFO    <string>   - text description of content to be downloaded;\n\n#                       will be printed as message in format is \"Downloading <INFO>: <URL>;\n\n#  FORCE              - option to delete local file from SAVE_AS if it exists;\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##\n\n# Checks if specified Intel TBB release is available on GitHub.\n\n#\n\n# tbb_check_git_release(<release> <result>)\n\n# Parameters:\n\n#  <release_tag> - release to be checked;\n\n#  <result>  - store result (TRUE/FALSE).\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##\n\n# Compares two Intel TBB releases and provides result\n\n# TRUE if the first release is less than the second, FALSE otherwise.\n\n#\n\n# tbb_is_release_less(<rel1> <rel2> <result>)\n\n#\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Convert release to numeric representation to compare it using \"if\" with VERSION_LESS.\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "##\n\n# Finds exact URL to download Intel TBB basing on provided parameters.\n\n#\n\n# Usage:\n\n#  _tbb_get_url(URL <var_to_save_url> RELEASE_TAG <release_tag|LATEST> OS <os> [SOURCE_CODE])\n\n#\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find name of the latest release to get link to source archive.\n",
        "Line" : 175,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Since 2017_U4 release archive for Apple has suffix \"mac.tgz\" instead of \"osx.tgz\".\n",
        "Line" : 190,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 9
    },
    "learn_intel_tbb/modules/tbb2019_20181010oss/cmake/TBBMakeConfig.cmake" : {
      "ObjectId" : "54fc7c6059b3ae7f9b267bc0c187966ab8b2082d",
      "LastModified" : "2018-11-22T14:39:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017-2018 Intel Corporation\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n\n#\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Usage:\n\n#   include(TBBMakeConfig.cmake)\n\n#   tbb_make_config(TBB_ROOT <tbb_root> SYSTEM_NAME <system_name> CONFIG_DIR <var_to_store_config_dir> [SAVE_TO] [CONFIG_FOR_SOURCE TBB_RELEASE_DIR <tbb_release_dir> TBB_DEBUG_DIR <tbb_debug_dir>])\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Save the location of Intel TBB CMake modules here, as it will not be possible to do inside functions,\n\n# see for details: https://cmake.org/cmake/help/latest/variable/CMAKE_CURRENT_LIST_DIR.html\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Note: multiline variable\n",
        "Line" : 62,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Note: multiline variable\n",
        "Line" : 98,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Note: multiline variable\n",
        "Line" : 126,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# Note: multiline variable\n\n# tbb/internal/_tbb_windef.h (included via tbb/tbb_stddef.h) does implicit linkage of some .lib files, use a special define to avoid it\n",
        "Line" : 132,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    },
    "learn_intel_tbb/modules/tbb2019_20181010oss/cmake/tbb_config_generator.cmake" : {
      "ObjectId" : "5c38aaa4a22eb28cd2fdf9835ab97119ff004b80",
      "LastModified" : "2018-11-22T14:39:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017-2018 Intel Corporation\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n\n#\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "learn_intel_tbb/modules/tbb2019_20181010oss/python/Makefile" : {
      "ObjectId" : "e92cb440cb907cfea2a6c871f6788dbb0470f5fd",
      "LastModified" : "2018-11-22T14:39:04Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2016-2018 Intel Corporation\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n\n#\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "learn_intel_tbb/modules/tbb2019_20181010oss/python/rml/Makefile" : {
      "ObjectId" : "ef55ad9d2b8eda9a961d9cab7a1657ea2684336e",
      "LastModified" : "2018-11-22T14:39:04Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2017-2018 Intel Corporation\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n\n#\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# default target\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: new API needs to be added for this server, exposing everything\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#--------------------------------------------------------------------------\n\n# Define rules for making the RML server shared library and client objects.\n\n#--------------------------------------------------------------------------\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Object files that make up RML server\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Object files that RML clients need\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Suppress superfluous warnings for RML compilation\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#------------------------------------------------------\n\n# End of rules for making the RML server shared library\n\n#------------------------------------------------------\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#------------------------------------------------------\n\n# Define rules for making the RML unit tests\n\n#------------------------------------------------------\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "### run_cmd is usually empty\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#TODO:\t$(run_cmd) ./test_rml_tbb.$(TEST_EXT) $(args)\n\n#TODO:\tIPC_ENABLE=1 LD_PRELOAD=$(abspath libirml.so.1) $(MAKE) -rf $(tbb_root)/src/Makefile cfg=release tbb_test_release\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#------------------------------------------------------\n\n# End of rules for making the TBBMalloc unit tests\n\n#------------------------------------------------------\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Include automatically generated dependencies\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "shm_test/CMakeLists.txt" : {
      "ObjectId" : "0105166e1af3381ac260f04a141173adf8debe60",
      "LastModified" : "2018-11-22T14:39:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake 最低版本要求\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# compile toolchain (should set before `project()`)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOTE: use `cmake -G \"Visual Studio 14 2015\"` instead set the `CMAKE_GENERATOR` here\n\n#        copy `rc.exe, rc.dll` into visual studio vc bin folder, then it works\n\n#     https://stackoverflow.com/questions/14372706/visual-studio-cant-build-due-to-rc-exe%22\n\n#set(CMAKE_GENERATOR \"Visual Studio 14 2015\")\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# project basic information\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# compile options, should set after `project()`, otherwise it won't work\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# also coult replace with `add_compile_options(-std=c++11)`\n",
        "Line" : 27,
        "CharPositionInLine" : 60
      },
      "6" : {
        "Text" : "#multi-processor compile\n",
        "Line" : 32,
        "CharPositionInLine" : 28
      },
      "7" : {
        "Text" : "#set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE}\")\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# find source files automatically, then set to var DIR_SRCS\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# add headers also into the visual studio project\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#message(${HEADER_FILES})\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "####### option for default ###########\n\n#option(USE_MY_MATH_LIB \"use my math lib\" ON)\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# 对于这个命令，若默认使用shared lib, cmake连运行时的链接关系都会设置好\n\n# 意味着 .so 被链接过之后, 不需要安装到系统目录即可查找到并运行 \n\n#option(BUILD_SHARED_LIBS \"build shared libraries\" OFF)\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "####### option for default ##########\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# target\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# link lib in subfolder\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "test_shared_ptr/CMakeLists.txt" : {
      "ObjectId" : "13abc08e52387529c0927e4de0c0a577b761c164",
      "LastModified" : "2018-12-19T14:02:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake 最低版本要求\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# compile toolchain (should set before `project()`)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# project basic information\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# compile options, should set after `project()`, otherwise it won't work\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# compile options, should set after `project()`, otherwise it won't work\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# also coult replace with `add_compile_options(-std=c++11)`\n",
        "Line" : 28,
        "CharPositionInLine" : 56
      },
      "6" : {
        "Text" : "#multi-processor compile\n",
        "Line" : 33,
        "CharPositionInLine" : 28
      },
      "7" : {
        "Text" : "#set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE}\")\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# include/link directories\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# find source files automatically, then set to var DIR_SRCS\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# target\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#add_definitions(-DUSE_BOOST_SHARED_PTR)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# link lib\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "try_memory_caching_system/memcached_cc_client/CMakeLists.txt" : {
      "ObjectId" : "7558eff229147fd73ba43843c82539f51b134f33",
      "LastModified" : "2018-12-19T14:02:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake 最低版本要求\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# project basic information\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# compile options, should set after `project()`, otherwise it won't work\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# also coult replace with `add_compile_options(-std=c++11)`\n",
        "Line" : 10,
        "CharPositionInLine" : 56
      },
      "4" : {
        "Text" : "# find source files automatically, then set to var DIR_SRCS\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# 对于这个命令，若默认使用shared lib, cmake连运行时的链接关系都会设置好\n\n# 意味着 .so 被链接过之后, 不需要安装到系统目录即可查找到并运行 \n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "####### option for default ##########\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# target\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# link lib \n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# change lib path on your machine\n",
        "Line" : 33,
        "CharPositionInLine" : 52
      },
      "CommentCount" : 10
    },
    "try_memory_caching_system/redis_cc_client/CMakeLists.txt" : {
      "ObjectId" : "ae50fb864f05de3bb889d11b843d418773194fec",
      "LastModified" : "2018-12-19T14:02:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake 最低版本要求\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# project basic information\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# compile options, should set after `project()`, otherwise it won't work\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# also coult replace with `add_compile_options(-std=c++11)`\n",
        "Line" : 10,
        "CharPositionInLine" : 56
      },
      "4" : {
        "Text" : "# find source files automatically, then set to var DIR_SRCS\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# 对于这个命令，若默认使用shared lib, cmake连运行时的链接关系都会设置好\n\n# 意味着 .so 被链接过之后, 不需要安装到系统目录即可查找到并运行 \n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "####### option for default ##########\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# target\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# link lib \n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# change lib path on your machine\n",
        "Line" : 33,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 10
    },
    "zlog_test/CMakeLists.txt" : {
      "ObjectId" : "d0117b51f093e567cb8b049aa1bae0ca6ce2fe49",
      "LastModified" : "2018-12-19T14:02:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake 最低版本要求\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# compile toolchain (should set before `project()`)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set by `cmake -A `\n",
        "Line" : 11,
        "CharPositionInLine" : 54
      },
      "3" : {
        "Text" : "# project basic information\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# compile options, should set after `project()`, otherwise it won't work\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# also coult replace with `add_compile_options(-std=c++11)`\n",
        "Line" : 23,
        "CharPositionInLine" : 56
      },
      "6" : {
        "Text" : "#multi-processor compile\n",
        "Line" : 28,
        "CharPositionInLine" : 28
      },
      "7" : {
        "Text" : "#set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE}\")\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# find source files automatically, then set to var DIR_SRCS\n\n#aux_source_directory(. DIR_SRCS)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "####### option for default ###########\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# 对于这个命令，若默认使用shared lib, cmake连运行时的链接关系都会设置好\n\n# 意味着 .so 被链接过之后, 不需要安装到系统目录即可查找到并运行 \n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "####### option for default ##########\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# target\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# link lib in subfolder\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    }
  },
  "FileTypes" : {
    "CMAKE" : 16,
    "MAKEFILE" : 5,
    "AUTOMAKE" : 3
  },
  "ElapsedTime" : 1300
}