{
  "Repository" : "6013534",
  "Revision" : "HEAD",
  "ObjectId" : "8782b84f22fe3684da4e0ab8da6ed7c2e4f2b304",
  "CommitTime" : "2014-03-24T23:17:43Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "5dbfc60984c839b5115a809f3f5d1c69a9037019",
      "LastModified" : "2014-02-11T22:55:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PROJECT CONFIG\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# PLATFORM AND ARCHITECTURE\r\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Architecture (32/64 bit)\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check for linux\r\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Setup platform specifics (compile flags, etc., ...)\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Unsupported system/compiler\r\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# set c++ compiler options globally\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# SOURCES AND TARGET CONFIGURATION\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/Custom.cmake" : {
      "ObjectId" : "3994a59d34808139f90da6181111f8cc941a1311",
      "LastModified" : "2014-02-11T23:50:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Group source files in folders (e.g. for MSVC solutions)\n\n# Example: source_group_by_path(\"${CMAKE_CURRENT_SOURCE_DIR}/src\" \n\n#   \"\\\\\\\\.h$|\\\\\\\\.hpp$|\\\\\\\\.cpp$|\\\\\\\\.c$|\\\\\\\\.ui$|\\\\\\\\.qrc$\" \"Source Files\" ${sources})\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindASSIMP.cmake" : {
      "ObjectId" : "6cba2d8c0dd85d65536644da9bc0dfd23f175b3d",
      "LastModified" : "2013-12-30T21:31:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ASSIMP_FOUND\n\n# ASSIMP_INCLUDE_DIR\n\n# ASSIMP_LIBRARY\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindFMOD.cmake" : {
      "ObjectId" : "575d596e499ce9cd8b45bad49dadd45b9733b470",
      "LastModified" : "2014-01-09T16:08:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FMOD_FOUND\n\n# FMOD_INCLUDE_DIR\n\n# FMOD_LIBRARY\n\n# FMOD_BINARY\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindGLEW.cmake" : {
      "ObjectId" : "90719a0d4a3518d1c44f4bfb74d6e82fd8625068",
      "LastModified" : "2013-12-30T21:31:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the OpenGL Extension Wrangler Library (GLEW)\n\n# This module defines the following variables:\n\n#  GLEW_INCLUDE_DIRS - include directories for GLEW\n\n#  GLEW_LIBRARIES - libraries to link against GLEW\n\n#  GLEW_FOUND - true if GLEW has been found and can be used\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindGLFW.cmake" : {
      "ObjectId" : "166af0ecf5671e29963f1af8a32ea697f2d5404f",
      "LastModified" : "2014-02-12T13:35:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#   Copyright 2013 Pixar\n\n#\n\n#   Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n#   with the following modification; you may not use this file except in\n\n#   compliance with the Apache License and the following modification to it:\n\n#   Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n#   6. Trademarks. This License does not grant permission to use the trade\n\n#      names, trademarks, service marks, or product names of the Licensor\n\n#      and its affiliates, except as required to comply with Section 4(c) of\n\n#      the License and to reproduce the content of the NOTICE file.\n\n#\n\n#   You may obtain a copy of the Apache License at\n\n#\n\n#       http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n#   Unless required by applicable law or agreed to in writing, software\n\n#   distributed under the Apache License with the above modification is\n\n#   distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n#   KIND, either express or implied. See the Apache License for the specific\n\n#   language governing permissions and limitations under the Apache License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find GLFW library and include path.\n\n# Once done this will define\n\n#\n\n# GLFW_FOUND\n\n# GLFW_INCLUDE_DIR\n\n# GLFW_LIBRARIES\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# (*)NIX\n",
        "Line" : 108,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "#glfw3\n",
        "Line" : 125,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# Tease the GLFW_VERSION numbers from the lib headers\n",
        "Line" : 157,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "cmake/FindGLM.cmake" : {
      "ObjectId" : "48d193fb065f4d231d8d3ec88c29527d3b5fdb5c",
      "LastModified" : "2013-12-30T21:31:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GLM_FOUND\n\n# GLM_INCLUDE_DIR\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindLUA.cmake" : {
      "ObjectId" : "5b2110e9e76840f01d42c933e9a1caf794762fe6",
      "LastModified" : "2014-02-12T13:35:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Lua library\n\n# This module defines\n\n# LUA_EXECUTABLE, if found\n\n# LUA_FOUND, if false, do not try to link to Lua\n\n# LUA_LIBRARIES\n\n# LUA_INCLUDE_DIR, where to find lua.h\n\n# LUA_VERSION_STRING, the version of Lua found (since CMake 2.8.8)\n\n#\n\n# Note that the expected include convention is\n\n# #include \"lua.h\"\n\n# and not\n\n# #include <lua/lua.h>\n\n# This is because, the lua location is not standardized and may exist\n\n# in locations other than lua/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n# Modified to support Lua 5.2 by LuaDist 2012\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n\n#\n\n# The required version of Lua can be specified using the\n\n# standard syntax, e.g. FIND_PACKAGE(Lua 5.1)\n\n# Otherwise the module will search for any available Lua implementation\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Always search for non-versioned lua first (recommended)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Determine possible naming suffixes (there is no standard for this)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set up possible search names and locations\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find the lua executable\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find the lua header\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Fink\n",
        "Line" : 72,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 73,
        "CharPositionInLine" : 13
      },
      "9" : {
        "Text" : "# Blastwave\n",
        "Line" : 74,
        "CharPositionInLine" : 11
      },
      "10" : {
        "Text" : "# Find the lua library\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# include the math library for Unix\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# For Windows and Mac, don't need to explicitly include the math library\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Determine Lua version\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LUA_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "cmake/FindPhysX.cmake" : {
      "ObjectId" : "54a1de18425dd5b1ace7e17bcb13d9cb19f36431",
      "LastModified" : "2014-02-12T13:35:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#IF (${CMAKE_SYSTEM} MATCHES \"Linux\")\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_DEFINITIONS(-DLINUX -DNX_DISABLE_FLUIDS)\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#    ADD_DEFINITIONS(-DLINUX)\n\n#ENDIF ()\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/PlatformLinuxGCC.cmake" : {
      "ObjectId" : "e41de4137aaa1f1e9dc9cdad1997cb777964d228",
      "LastModified" : "2014-02-12T13:35:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# support for C++11 etc.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Linux system\n",
        "Line" : 15,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# Position-independent code\n",
        "Line" : 16,
        "CharPositionInLine" : 24
      },
      "3" : {
        "Text" : "# Reentrant code\n",
        "Line" : 17,
        "CharPositionInLine" : 27
      },
      "4" : {
        "Text" : "# Debug build\n",
        "Line" : 31,
        "CharPositionInLine" : 29
      },
      "5" : {
        "Text" : "# Release build\n",
        "Line" : 35,
        "CharPositionInLine" : 29
      },
      "6" : {
        "Text" : "# Release build\n",
        "Line" : 39,
        "CharPositionInLine" : 29
      },
      "7" : {
        "Text" : "# pthread       -> use pthread library\n\n# no-rtti       -> disable c++ rtti\n\n# no-exceptions -> disable exception handling\n\n# pipe          -> use pipes\n\n# fPIC          -> use position independent code\n\n# -Wreturn-type -Werror=return-type -> missing returns in functions and methods are handled as errors which stops the compilation\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/PlatformWindowsMSVC.cmake" : {
      "ObjectId" : "79f54cf06e47265872d5253be79b555b0124afd4",
      "LastModified" : "2014-03-24T23:17:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Windows system\n\n# Use unicode\n\n# Use unicode\n\n# do not define min() and max() in windows headers\n",
        "Line" : 3,
        "CharPositionInLine" : 32
      },
      "1" : {
        "Text" : "#_SCL_SECURE_NO_WARNINGS     # Calling any one of the potentially unsafe methods in the Standard C++ Library\n\n#_CRT_SECURE_NO_DEPRECATE    # Disable CRT deprecation warnings\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Debug build\n",
        "Line" : 14,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# Release build\n",
        "Line" : 19,
        "CharPositionInLine" : 32
      },
      "4" : {
        "Text" : "# nologo       -> no logo\n\n# Zc:wchar_t   -> treat wchar_t as built-in type: yes\n\n# Zc:forScope  -> force conformance in for loop scope: Yes\n\n# GF           -> string pooling\n\n# GR           -> runtime type information\n\n# GS           -> buffer security check\n\n# Zi           -> debug information format: program database\n\n# Gm           -> enable minimal rebuild\n\n# fp:precise   -> floating point model: precise\n\n# fp:fast      -> floating point model: fast\n\n# Ot           -> favor fast code\n\n# MP           -> build with multiple processes\n\n# wd           -> disable warning\n\n#   wd4100     -> 'identifier' : unreferenced formal parameter\n\n#   wd4127     -> conditional expression is constant\n\n#   wd4201     -> nonstandard extension used : nameless struct/union\n\n#   wd4251     -> 'identifier' : class 'type' needs to have dll-interface to be used by clients of class 'type2'\n\n#   wd4267     -> 'var' : conversion from 'size_t' to 'type', possible loss of data\n\n#   wd4505     -> 'function' : unreferenced local function has been removed\n\n#   wd4351     -> new behavior: elements of array 'array' will be default initialized\n\n#   wd4273     -> inconsistent dll linkage\n\n# W4           -> warning level 4\n\n# WX           -> treat warnings as errors\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# For debug:\n\n# MDd          -> Runtime Library: Multithreaded Debug DLL\n\n# Od           -> Optimization: none\n\n# RTC1         -> Runtime error checks\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# For release:\n\n# W3           -> warn level 3\n\n# MD           -> runtime library: multithreaded dll\n\n# Ox           -> optimization: full optimization\n\n# Ob2          -> inline function expansion: any suitable\n\n# Oi           -> enable intrinsic functions: yes\n\n# Ot           -> favor size or speed: favor fast code\n\n# Oy           -> omit frame pointers: yes\n\n# GL           -> whole program optimization: enable link-time code generation\n\n# GF           -> enable string pooling\n\n# GS-          -> buffer security check: no\n\n# arch:SSE2    -> enable enhanced instruction set: streaming simd extensions 2\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# NOLOGO                                            -> suppress logo\n\n# INCREMENTAL:NO                                    -> enable incremental linking: no\n\n# MANIFEST                                          -> generate manifest: yes\n\n# MANIFESTUAC:\"level='asInvoker' uiAccess='false'\"  -> uac execution level: asinvoker, uac bypass ui protection: false\n\n# NXCOMPAT                                          -> data execution prevention (dep): image is compatible with dep\n\n# DYNAMICBASE:NO                                    -> randomized base address: disable image randomization\n\n# /NODEFAULTLIB:library                             -> disable warning according runtime library linking, see http://msdn.microsoft.com/EN-US/library/6wtdswk0%28v=VS.110,d=hv.2%29.aspx\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# this warning is caused by physx runtime library linking.\n",
        "Line" : 90,
        "CharPositionInLine" : 57
      },
      "9" : {
        "Text" : "# DEBUG        -> create debug info\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# OPT:REF      -> references: eliminate unreferenced data\n\n# OPT:ICF      -> enable comdat folding: remove redundant comdats\n\n# LTCG         -> link time code generation: use link time code generation\n\n# DELAY:UNLOAD -> delay loaded dll: support unload\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Add platform specific libraries for linking\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "elemate/CMakeLists.txt" : {
      "ObjectId" : "8acd0287b2a17640bf8ebb7196ffd504174f4c16",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libelemate/CMakeLists.txt" : {
      "ObjectId" : "bf3842b3e184188ed6bdeac7e09bd02bd9786eff",
      "LastModified" : "2014-03-20T22:47:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scripts/CMakeLists.txt" : {
      "ObjectId" : "c2ea9c58158182c35d2614c110658efd91c2ede8",
      "LastModified" : "2014-02-12T13:35:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shader/CMakeLists.txt" : {
      "ObjectId" : "aaf4acce2d61fa9c0f7ba576b0eeb5537305bd27",
      "LastModified" : "2014-02-12T13:35:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "8b8ec5fef4a68d3b87d590ac01bddf3ccb4274b9",
      "LastModified" : "2014-02-12T13:35:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# VS2012 sets the maximum number of arguments in its simulation of variadic templates to 5, but google test needs more\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/gtest-1.7.0/CMakeLists.txt" : {
      "ObjectId" : "fb5bb5e7f2292faec7ed7ca2ed543b73ebef693a",
      "LastModified" : "2014-02-12T13:35:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n\n#option(BUILD_SHARED_LIBS \"Build shared libraries (DLLs).\" OFF)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n\n#option(\n\n#  gtest_force_shared_crt\n\n#  \"Use shared (DLL) run-time lib even when Google Test is built as static lib.\"\n\n#  OFF)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#option(gtest_build_tests \"Build all of gtest's own tests.\" OFF)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#option(gtest_build_samples \"Build gtest's sample programs.\" OFF)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#option(gtest_disable_pthreads \"Disable uses of pthreads in gtest.\" OFF)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 54,
        "CharPositionInLine" : 30
      },
      "11" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "tests/gtest-1.7.0/cmake/internal_utils.cmake" : {
      "ObjectId" : "8cb21894cebacd5bdfb598c8663a5be50325d70f",
      "LastModified" : "2014-02-12T13:35:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 107,
        "CharPositionInLine" : 32
      },
      "17" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 31
    }
  },
  "FileTypes" : {
    "CMAKE" : 18
  },
  "ElapsedTime" : 844
}