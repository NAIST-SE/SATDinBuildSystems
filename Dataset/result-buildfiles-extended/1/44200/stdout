{
  "Repository" : "44200",
  "Revision" : "HEAD",
  "ObjectId" : "77d80afab1d3ed32403c9581847c0f927912ae08",
  "CommitTime" : "2015-01-10T12:34:16Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "cb61d4e5b0c37e41cd0e79340df3bc0bc6812985",
      "LastModified" : "2014-04-14T23:59:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CMake helpers.\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include LLVM configuration:\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make sure we can find llvm-config!\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find the Clang \"resource dir\" (contains include/stdarg.h, etc.).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Explicitly put LLVM's library directory before others, e.g. /usr/local/lib.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Always build with all warnings.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Disable RTTI usage in protocol buffers.\n\n#\n\n# This seems to \"just work\" on FreeBSD and Mac OS X, but not always on Linux...\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# TESLA uses C++11.\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Global include directories for all of TESLA:\n\n#\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add includes from src and obj only if we're building from a\n\n# non-installed copy.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# [lib]tesla.h\n\n# config.h\n",
        "Line" : 83,
        "CharPositionInLine" : 34
      },
      "11" : {
        "Text" : "# Default to libc++ if installed.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# Set up some variables to control the testing framework:\n\n#\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# Platform-specific hacks for running tests:\n\n#\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# We use execinfo for detailed failure information (e.g. backtraces).\n\n#\n\n# This is only required on FreeBSD, as both Mac OS X and Linux include\n\n# backtrace functions in libSystem / libc.\n",
        "Line" : 145,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# On some Linux installations, we need to explicitly pass the\n\n# -resource-dir flag to Clang tools. The Clang driver handles this\n\n# automatically, and we need to figure out why the Clang tooling\n\n# framework doesn't. In the meantime, however, this workaround works.\n",
        "Line" : 157,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#\n\n# Check for functions that don't exist on every platform:\n\n#\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n\n# Put discovered configuration information into config.h:\n\n#\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# Indicate that we have a config.h file\n\n#\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# A top-level 'test' target to drive all tests of TESLA subdirectories.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "bench/instrcost/Makefile" : {
      "ObjectId" : "33b2283a400728a456a8ed0722159b867177aa57",
      "LastModified" : "2013-08-01T13:23:20Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# The location of TESLA outputs (binaries, libraries, etc.).\n\n# Only needed when we don't install TESLA to /usr/local.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\t# temporary workaround for ClangTool irritant:\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Concatenate.cmake" : {
      "ObjectId" : "9316025e8049f4b1933058b62c436152b6bfbc24",
      "LastModified" : "2013-06-14T10:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# inputs in ${ARGN}\n",
        "Line" : 1,
        "CharPositionInLine" : 29
      },
      "CommentCount" : 1
    },
    "cmake/CopyFiles.cmake" : {
      "ObjectId" : "7eb4b5f5ca35333983a12cf1a2309428b9c8daf1",
      "LastModified" : "2013-06-14T10:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copy a file from the source directory to somewhere else.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindDot.cmake" : {
      "ObjectId" : "10ab0abaeab9c493227007438b52a5ee42a127c1",
      "LastModified" : "2013-06-25T10:41:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Copyright (c) 2011, David Pineau\n\n## Copyright (c) 2013 Jonathan Anderson\n\n## All rights reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Redistribution and use in source and binary forms, with or without\n\n## modification, are permitted provided that the following conditions are met:\n\n##  * Redistributions of source code must retain the above copyright\n\n##    notice, this list of conditions and the following disclaimer.\n\n##  * Redistributions in binary form must reproduce the above copyright\n\n##    notice, this list of conditions and the following disclaimer in the\n\n##    documentation and/or other materials provided with the distribution.\n\n##  * Neither the name of the copyright holder nor the names of its contributors\n\n##    may be used to endorse or promote products derived from this software\n\n##    without specific prior written permission.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n## AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n## IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n## ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER AND CONTRIBUTORS BE\n\n## LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n## CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n## SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n## POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Did the command succeed?\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#\n\n# The execution returned 0, but did it do the right thing?\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Did we just blat the result to stdout?\n",
        "Line" : 44,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Did we produce anything useful?\n",
        "Line" : 49,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# UNIX paths\n",
        "Line" : 66,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Windows paths\n",
        "Line" : 73,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Mac OS X Bundle paths\n",
        "Line" : 80,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "#\n\n# Test that the 'dot' we found actually does the right thing.\n\n#\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#\n\n# All checks complete.\n\n#\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "cmake/Modules/FindExecInfo.cmake" : {
      "ObjectId" : "8af85bdcad179528914c8daf3463bbcb42e993ab",
      "LastModified" : "2013-06-14T10:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find execinfo\n\n# Find execinfo, which (if not provided with libc/libSystem) provides\n\n# functions like backtrace().\n\n#\n\n# This module defines the following variables:\n\n#     LIBEXECINFO_FOUND         - whether or not we found execinfo\n\n#     LIBEXECINFO_INCLUDE_DIR   - include directory containing execinfo.h\n\n#     LIBEXECINFO_INCLUDE_DIRS  - include directories, including dependencies\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# execinfo doesn't depend on anything\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindLibCXX.cmake" : {
      "ObjectId" : "b3cdd41b6094f0878fe9f9aafb8bfa809310a980",
      "LastModified" : "2013-06-14T10:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find libc++\n\n# Find libc++ if installed\n\n#\n\n# This module defines the following variables:\n\n#     LIBCXX_FOUND         - whether or not we found libc++\n\n#     LIBCXX_INCLUDE_DIR   - the include directory where C++ headers live\n\n#     LIBCXX_INCLUDE_DIRS  - include dirs for libc++ and (no) dependencies\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# On Mac OS X, the headers are in a slightly unusual place (e.g. /usr/lib/c++).\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindUCampas.cmake" : {
      "ObjectId" : "523decee149cf5c54651df3569e99f243cc62965",
      "LastModified" : "2013-06-14T10:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2013 Jonathan Anderson\n\n# All rights reserved.\n\n#\n\n# This software was developed by SRI International and the University of\n\n# Cambridge Computer Laboratory under DARPA/AFRL contract (FA8750-10-C-0237)\n\n# (\"CTSRD\"), as part of the DARPA CRASH research programme.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1. Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n\n# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n\n# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\n# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n\n# SUCH DAMAGE.\n\n#\n\n# $Id$\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# The default location of ucampas on the CL filer.\n\n#\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Find local instance of UCampas if it exists.\n\n#\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "demos/CMakeLists.txt" : {
      "ObjectId" : "1d8d0c79e78319b9bde2ee01b1cdb4deb5f3947b",
      "LastModified" : "2014-03-06T12:10:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "demos/audit/Makefile" : {
      "ObjectId" : "96197b562e1bf44d2efede4ec50bddfc2fce9a6a",
      "LastModified" : "2014-03-06T12:10:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#.SILENT:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: do some string substitution to derive .tesla file names\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Normal C workflow:\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# TESLA-specific rules:\n\n#\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TESLA analysis (C -> TESLA IR)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Combining several TESLA files\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# temporary workaround for ClangTool irritant:\n",
        "Line" : 69,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Pretty visualisation (TELSA IR -> GraphViz)\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TESLA instrumentation (LLVM IR --TESLA IR--> instrumented LLVM IR)\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Other non-TESLA-specific rules:\n\n#\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Pretty visualisation (GraphViz -> PDF)\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "demos/gotofail/Makefile" : {
      "ObjectId" : "1b5cf9d51ded4c21744b733cec538f92558c16bf",
      "LastModified" : "2014-04-15T09:28:42Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#.SILENT:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: do some string substitution to derive .tesla file names\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Normal C workflow:\n\n#\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# TESLA-specific rules:\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TESLA analysis (C -> TESLA IR)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Combining several TESLA files\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# temporary workaround for ClangTool irritant:\n",
        "Line" : 63,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Pretty visualisation (TELSA IR -> GraphViz)\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TESLA instrumentation (LLVM IR --TESLA IR--> instrumented LLVM IR)\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Other non-TESLA-specific rules:\n\n#\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Pretty visualisation (GraphViz -> PDF)\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "demos/openssl-api/Makefile" : {
      "ObjectId" : "f514c223754a6163bca8b6aadf045aba17d01cfa",
      "LastModified" : "2014-04-15T09:28:42Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#.SILENT:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Normal C workflow:\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# TESLA-specific rules:\n\n#\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TESLA analysis (C -> TESLA IR)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Pretty visualisation (TELSA IR -> GraphViz)\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# TESLA instrumentation (LLVM IR --TESLA IR--> instrumented LLVM IR)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Other non-TESLA-specific rules:\n\n#\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Pretty visualisation (GraphViz -> PDF)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "demos/smoketest/Makefile" : {
      "ObjectId" : "f508f0591f9a813b2acd6f6223289888b16ef6ab",
      "LastModified" : "2014-04-15T09:28:42Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# BSD makefile to drive GNU make\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "23913f4294707495e44d8a5fe9c9d21cd129e519",
      "LastModified" : "2014-04-15T09:28:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Where we will install HTML documentation.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Static HTML content.\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Doxgyen-generated API documentation.\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Staging locations for Doxygen output in the build directory.\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#\n\n# We use a Python script to convert .proto files into something that\n\n# Doxygen can understand\n\n#\n",
        "Line" : 51,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#\n\n# Having done all of this configuration, generate the Doxygen config.\n\n#\n",
        "Line" : 62,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# In lieu of proper dependency checking, declare a dependency\n\n# on lots of stuff.\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "doc/html/CMakeLists.txt" : {
      "ObjectId" : "b37d2c43838487ae52829a0ec1573cb4c3a46dfa",
      "LastModified" : "2014-04-15T09:28:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The ucampas tool converts bare HTML to the UCam house style.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Allow the user to specify the build location of HTML output.\n\n#\n\n# This is useful for e.g. building HTML content into a larger website\n\n# located in a Subversion repository.\n\n#\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Build a complete HTML file, ready for ucampas.\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Static HTML content:\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If this isn't index.html, add it to ucampas' config file.\n",
        "Line" : 69,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#\n\n# If we have a local instance of UCampas, use it to generate HTML previews.\n\n#\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Describe the HTML files to ucampas.\n\n#\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "doc/html/images/CMakeLists.txt" : {
      "ObjectId" : "92dd7bf75311cdb5a35c8767a71e3d7e1e414be6",
      "LastModified" : "2014-04-15T09:28:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "include/CMakeLists.txt" : {
      "ObjectId" : "53535c70a2f0436bf2159e6424c56a9c1879f33a",
      "LastModified" : "2014-04-15T09:28:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libtesla/CMakeLists.txt" : {
      "ObjectId" : "84db07b1da54c7f789e596e7374006b62d0fdab0",
      "LastModified" : "2014-04-15T09:28:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# More warnings (used in the FreeBSD \"buildworld\" step).\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For some reason, shared libs on zenith aren't always build with -fPIC...\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "libtesla/src/CMakeLists.txt" : {
      "ObjectId" : "758de3f3c755777b5eeddc16c14713dc22a9237a",
      "LastModified" : "2014-04-15T09:28:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libtesla/test/CMakeLists.txt" : {
      "ObjectId" : "ff9c14891cdd25cfe85d369c358ea10efe151d1d",
      "LastModified" : "2014-04-15T09:28:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests must be compiled in debug mode; there's little point in a test that\n\n# can't fire any of its assertions!\n\n#\n\n# This doesn't change any requirements on libraries the tests link against.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Provide access to internal headers.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ignore \"unused parameter 'int argc'\" warnings in test programs.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "scripts/CMakeLists.txt" : {
      "ObjectId" : "2efce870d1094d2284faed62f19e61d4396289c0",
      "LastModified" : "2014-04-25T22:07:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need to use configure_file() rather than file(COPY) because we want to\n\n# rename the script.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tesla/CMakeLists.txt" : {
      "ObjectId" : "53360f59dfa4bbd7918256a602bf6cf75cc485a0",
      "LastModified" : "2014-04-15T09:28:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Protocol buffers:\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the existence of protobuf-generated files (the actual generation is\n\n# described in the 'common' subdirectory, but we must declare them here).\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# LLVM configuration:\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Explicitly add /usr/local/share/llvm/cmake to the CMake module path; by default,\n\n# it seems like AddLLVM wants to find things in the build directory (!).\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# LLVM libraries that we need:\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Work out of the LLVM source/build trees if LLVM is not installed.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Use LLVM's CFLAGS and CXXFLAGS, but filter out optimisations and -DNDEBUG.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Important CXXFLAGS that llvm-config --cxxflags doesn't give us:\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Finally, actually specify the TESLA subdirectories:\n\n#\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "tesla/analyser/CMakeLists.txt" : {
      "ObjectId" : "7f0ae24d36207bef5c7a8db071702e67c2d15366",
      "LastModified" : "2014-04-15T09:28:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Dependency tracking: protobuf_generate_cpp() only sort-of works across dirs.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add Clang include directories.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# The TESLA analyser executable:\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Link against Clang and LLVM libraries:\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Clang doesn't provide an equivalent to llvm_map_components_to_libraries().\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Simply using add_llvm_executable() by itself isn't enough: that doesn't\n\n# link the executable against some important libraries like LLVMSupport.\n\n#\n\n# Instead, we need to pass in ${LLVM_LIBS} explicitly.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tesla/common/CMakeLists.txt" : {
      "ObjectId" : "b8fad300337cf78b55d6bb68093adca3eaee25e2",
      "LastModified" : "2014-04-15T09:28:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tesla/instrumenter/CMakeLists.txt" : {
      "ObjectId" : "3ec16357daab1ad98701241ee6e3ffb27f86c775",
      "LastModified" : "2014-04-15T09:28:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Dependency tracking: protobuf_generate_cpp() only sort-of works across dirs.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tesla/test/CMakeLists.txt" : {
      "ObjectId" : "f4d6201b981c1fc8be5fb915471f0914901380eb",
      "LastModified" : "2014-04-15T09:28:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# oddly-named libtesla target\n",
        "Line" : 11,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 1
    },
    "tesla/tools/CMakeLists.txt" : {
      "ObjectId" : "ea4f4fba1071e037f89321614c8ac5ea44fb7c7e",
      "LastModified" : "2014-04-15T09:28:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tesla/tools/cat/CMakeLists.txt" : {
      "ObjectId" : "c390f9762fdbf0db626cf1d8fe6263549c5c63b3",
      "LastModified" : "2014-04-15T09:28:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tesla/tools/get-triple/CMakeLists.txt" : {
      "ObjectId" : "034bd718ed0f939a1b082dda7ae023aa9107dfcd",
      "LastModified" : "2014-04-15T09:28:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get the LLVM target triple (used by XFAIL in unit tests).\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tesla/tools/print/CMakeLists.txt" : {
      "ObjectId" : "d17505df1f2163a3d59e7b1e0e0f531a3a94648a",
      "LastModified" : "2014-04-15T09:28:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 25,
    "MAKEFILE" : 5
  },
  "ElapsedTime" : 1236
}