{
  "Repository" : "43113",
  "Revision" : "HEAD",
  "ObjectId" : "f36897edf6827d8d8c7dfbf704115af8b44a464b",
  "CommitTime" : "2019-04-18T19:16:27Z",
  "Files" : {
    "AI/CMakeLists.txt" : {
      "ObjectId" : "06644f1777d24cd89dac89a164aedd9836ce977d",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### AI\n\n#\n\n# Global variables set in this file:\n\n# * AI_EXCLUDE_REGEX\n\n# * AI_FIND_QUIETLY\n\n# * DEPS_AI_ALL\n\n#\n\n# Functions and macros defined in this file:\n\n# * ai_message\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### User-definable build options\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set these for Interfaces and AIs with C sources\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Assemble common additional native AI sources\n\n#list(APPEND ai_common_SRC \"${rts}/Game/GameVersion.cpp\")\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set some Skirmish AI stuff here already,\n\n# cause it is used by NullPythonAI in Interfaces/Python\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Export Paths needed for the AIs\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Display messages on configure, which AIs are found\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Print a message, but only if we are allowed to speak.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# CUtils has to come first, because the Interfaces use it too\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "AI/Interfaces/C/CMakeLists.txt" : {
      "ObjectId" : "2bf8148d9766045e74914217988c77287ee0bfbd",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### C & C++ AI Interface\n\n#\n\n# Global variables set in this file:\n\n# * BUILD_C_AIINTERFACE\n\n# * C_AIINTERFACE_VERS\n\n# * C_AIINTERFACE_TARGET\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n### BEGINN: MACROS_AND_FUNCTIONS\n\n# Define macros and functions to be used in this file and by Skirmish AIs\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Native Skirmish AI configuration macro\n\n# This will be called from native AIs at AI/Skirmish/*/CMakeLists.txt.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Common values are \"\" or \"src\"\n",
        "Line" : 20,
        "CharPositionInLine" : 56
      },
      "4" : {
        "Text" : "# Check if the user wants to compile the AI\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Compile and install\n",
        "Line" : 33,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Assemble meta data\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Create a list of all the AIs own source files\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Compile the library\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Install the data files\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Install the library\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "### END: MACROS_AND_FUNCTIONS\n\n################################################################################\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Check if the user wants to compile the interface\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Check dependencies of the interface are met\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Install the data files\n",
        "Line" : 121,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# Install the library\n",
        "Line" : 124,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 17
    },
    "AI/Interfaces/CMakeLists.txt" : {
      "ObjectId" : "3cddf1e4e3a0b4f8ae169e3ab36b0e1f3c6bd955",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### AI Interfaces\n\n#\n\n# Functions and macros defined in this file:\n\n# * ai_interface_message\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Print a message, but only if we are allowed to speak.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add all AI Interface submodules\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "AI/Interfaces/Java/CMakeLists.txt" : {
      "ObjectId" : "50b2e37ef2041a6fc955aa0accc135a568bd6f86",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### Java AI Interface\n\n#\n\n# Global variables set in this file:\n\n# * BUILD_Java_AIINTERFACE\n\n# * Java_AIINTERFACE_VERS\n\n# * Java_AIINTERFACE_TARGET\n\n#\n\n# Functions and macros defined in this file:\n\n# * configure_java_skirmish_ai\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#enable_language(Java)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n### BEGINN: MACROS_AND_FUNCTIONS\n\n# Define macros and functions to be used in this file and by Java Skirmish AIs\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# includes rts/build/cmake/UtilJava.cmake\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Java Skirmish AI configuration macro.\n\n# This will be called from Java AIs at AI/Skirmish/*/CMakeLists.txt.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Assemble meta data\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# CMAKE_CURRENT_BINARY_DIR: .../spring-build-dir/AI/Skirmish/${myName}\n",
        "Line" : 37,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Check if the user wants to compile the AI\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Compile and install\n",
        "Line" : 49,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Assemble project generated targets (and their libraries) we depend on\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# find java source root\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# default Maven source dir\n",
        "Line" : 67,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# simple java source dir path\n",
        "Line" : 70,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "# Create a list of all the AIs source files (for compiling)\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Create a list of all the AIs source files (for dependency tracking)\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# If main Java package is \"my.ai.pkg\", this has to be set to \"my\".\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Assemble additional meta data\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Create our full Java class-path\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Locate the manifest file\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Write list of source files to an arg-file\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Compile and pack the library\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Pack the sources\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Install the data files\n",
        "Line" : 170,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Install the library\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Install the sources archive (optional)\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Install files generated/downloaded during buildtime\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Install special script and config files\n",
        "Line" : 189,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Install jars of wrappers\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Install the wrappers main jar\n",
        "Line" : 205,
        "CharPositionInLine" : 3
      },
      "29" : {
        "Text" : "# Install the wrappers java libs, if there are any\n",
        "Line" : 208,
        "CharPositionInLine" : 3
      },
      "30" : {
        "Text" : "### END: MACROS_AND_FUNCTIONS\n\n################################################################################\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Check if the user wants to compile the interface\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Look for dependencies, but only if the user wants to build the interface\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# this hack is needed for FindJNI.cmake to use the JDK we want it to use,\n\n# as otherwise it might not find one at all (eg. in the case of OpenJDK)\n",
        "Line" : 250,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Check if dependencies of the interface are met\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Build\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Init some vars\n\n# --------------\n",
        "Line" : 298,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# Used by Java Skirmish AIs\n",
        "Line" : 316,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# Generate sources\n\n# ----------------\n",
        "Line" : 327,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# A CMake Custom Target will allways be built.\n\n# from CMake docu:\n\n# \"add_custom_target is ALWAYS CONSIDERED OUT OF DATE\"\n",
        "Line" : 340,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "# Stub file for dependency tracking\n",
        "Line" : 344,
        "CharPositionInLine" : 1
      },
      "41" : {
        "Text" : "# source file lists (static and generated)\n",
        "Line" : 349,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "# remove all files in the generates sources dir,\n\n# that are not generated sources (of this build)\n",
        "Line" : 389,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "#cleanup generated dir if some input file changed\n",
        "Line" : 399,
        "CharPositionInLine" : 1
      },
      "44" : {
        "Text" : "# 1. & 2. Wrapp Callback (native->native)\n",
        "Line" : 428,
        "CharPositionInLine" : 1
      },
      "45" : {
        "Text" : "# 3. Wrapp AI Callback (native-JNI->Java)\n",
        "Line" : 455,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "# 4. Wrapp AI Events (native-JNI->Java)\n",
        "Line" : 478,
        "CharPositionInLine" : 1
      },
      "47" : {
        "Text" : "# 5. Wrapp ENUMS\n",
        "Line" : 500,
        "CharPositionInLine" : 1
      },
      "48" : {
        "Text" : "# Locate the manifest file\n",
        "Line" : 523,
        "CharPositionInLine" : 1
      },
      "49" : {
        "Text" : "# Build the native part\n\n# ---------------------\n",
        "Line" : 531,
        "CharPositionInLine" : 1
      },
      "50" : {
        "Text" : "# It is important that this is used instead of the one\n\n# from the installed JDK, as the jni_md.h is in here too,\n\n# and this file contains OS (win32) specific information.\n",
        "Line" : 534,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# Build the java part\n\n# -------------------\n",
        "Line" : 548,
        "CharPositionInLine" : 1
      },
      "52" : {
        "Text" : "# Write list of source files to an arg-file\n",
        "Line" : 551,
        "CharPositionInLine" : 1
      },
      "53" : {
        "Text" : "# Using the native target reduces paralellism slightly\n\n# (less then 1s per build => negliable), but prevetns multiple\n\n# execution of the source generating custom-commands\n\n# (which results in wrongly generated source files with \"make -j <X>\")\n",
        "Line" : 578,
        "CharPositionInLine" : 3
      },
      "54" : {
        "Text" : "# Using the native target reduces paralellism slightly\n\n# (less then 1s per build => negliable), but prevetns multiple\n\n# execution of the source generating custom-commands\n\n# (which results in wrongly generated source files with \"make -j <X>\")\n",
        "Line" : 610,
        "CharPositionInLine" : 3
      },
      "55" : {
        "Text" : "# this sets the version in pom.xml\n",
        "Line" : 631,
        "CharPositionInLine" : 1
      },
      "56" : {
        "Text" : "# Install the native library\n",
        "Line" : 652,
        "CharPositionInLine" : 1
      },
      "57" : {
        "Text" : "# Install the data files\n",
        "Line" : 654,
        "CharPositionInLine" : 1
      },
      "58" : {
        "Text" : "# Install the library\n",
        "Line" : 657,
        "CharPositionInLine" : 1
      },
      "59" : {
        "Text" : "# Install the sources archive\n",
        "Line" : 659,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 60
    },
    "AI/Interfaces/Java/bin/build.xml" : {
      "ObjectId" : "26196931369504cda5498cfe5be9cc296dd31f65",
      "LastModified" : "2013-01-05T11:21:01Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n\tDo not edit this file!\n\tBut edit ant.properties instead.\n\n\t@author: Robin Vobruba <hoijui.quaero@gmail.com>\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "\n\t\tThis file does:\n\t\t\t* generate-src:  generate java sources\n\t\t\t* compile:       compile java sources\n\t\t\t* doc:           generate javadoc\n\t\t\t* pack:          pack java classes and sources into jar files\n\t\t\t* dist:          install these two jar files\n\t\t\t* sdk:           create the Java AI SDK in a dir specified through a parameter\n\t",
        "Line" : 18,
        "CharPositionInLine" : 5
      },
      "2" : {
        "Text" : "\n\t\t\tThe following values may be overriden in either\n\t\t\t\"bin/ant.properties\" or any other properties file\n\t\t\twhich may be specified to ant on the command line like this:\n\t\t\tant -propertyfile someFile.properties\n\t\t",
        "Line" : 32,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "AI/Interfaces/Java/pom.xml" : {
      "ObjectId" : "bddb566ede4bb39bf4c226855ed8f498d568d8af",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n\t\tYou may not use this file to build this project!\n\t\tIt acts only as a container for certain meta-info, and is used with:\n\t\t> mvn install:install-file -DpomFile=.../pom.xml -Dmy.version=X\n\t",
        "Line" : 10,
        "CharPositionInLine" : 5
      },
      "1" : {
        "Text" : "\n\t\t\tThese are only defaults, and should be replaced\n\t\t\tby the calling instance.\n\t\t",
        "Line" : 16,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : " replaced by CMake or -Dmy.version=X ",
        "Line" : 29,
        "CharPositionInLine" : 79
      },
      "3" : {
        "Text" : "\n\t\t\tWe need to overwrite, cause otherwise a postfix will be added to\n\t\t\tthese URLs.\n\t\t",
        "Line" : 43,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 4
    },
    "AI/Skirmish/AAI/CMakeLists.txt" : {
      "ObjectId" : "c8888b2706e6032c77df6c302219731874e2e27f",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### Generic native Skirmish AI config\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Common values are \"\" or \"src\"\n",
        "Line" : 4,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 2
    },
    "AI/Skirmish/CMakeLists.txt" : {
      "ObjectId" : "310636509293b2c4432bc30117bfe7401bf555aa",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### Skirmish AIs\n\n#\n\n# Functions and macros defined in this file:\n\n# * skirmish_ai_message\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Print a message, but only if we are allowed to speak.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add all Skirmish AI submodules\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "AI/Skirmish/CppTestAI/CMakeLists.txt" : {
      "ObjectId" : "9a4b94e0cf5affd9c84b49106bf350fdb6c8374a",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### Generic native Skirmish AI config\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Common values are \"\" or \"src\"\n",
        "Line" : 4,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 2
    },
    "AI/Skirmish/NullAI/CMakeLists.txt" : {
      "ObjectId" : "8b3772489d2fef7299f1645d3615f6681e5a8069",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### Generic native Skirmish AI config\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Common values are \"\" or \"src\"\n",
        "Line" : 4,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 2
    },
    "AI/Skirmish/NullJavaAI/CMakeLists.txt" : {
      "ObjectId" : "ffac49c05b42794fafac4560cdd2bcdbeb1b37eb",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### Generic Java Skirmish AI config\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "AI/Skirmish/NullJavaAI/bin/build.xml" : {
      "ObjectId" : "19259061274ace3b02fb2ea1518786bd1df8a526",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n\tDo not edit this file!\n\tBut edit ant.properties instead.\n\n\t@author: Robin Vobruba <hoijui.quaero@gmail.com>\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "\n\t\tTargets:\n\t\t* compile:       compile java source files\n\t\t* doc:           generate javadoc\n\t\t* pack,archive:  archive java classes and sources into jar files\n\t\t* dist,install:  install these two jar files and the data dir\n\t\t* bump-version:  changes the version string in VERSION\n\t\t                 and data/AIInfo.lua\n\t\t* create-independent:\n\t\t\tCopies this project to a specified location and gives it a new name.\n\t\t\tIt is assured that the new project dir then contains everything\n\t\t\tneeded to compile the AI.\n\t",
        "Line" : 22,
        "CharPositionInLine" : 5
      },
      "2" : {
        "Text" : " These can not be changed from within \"bin/ant.properties\". ",
        "Line" : 24,
        "CharPositionInLine" : 69
      },
      "3" : {
        "Text" : " If it is true, we are in a independent project. ",
        "Line" : 32,
        "CharPositionInLine" : 58
      },
      "4" : {
        "Text" : "\n\t\t\tThe following values may be overriden in either\n\t\t\t\"bin/ant.dependent.properties\" or any other properties file\n\t\t\twhich may be specified to ant on the command line like this:\n\t\t\tant -propertyfile someFile.properties\n\t\t",
        "Line" : 59,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : " read content of file VERSION into the property ",
        "Line" : 60,
        "CharPositionInLine" : 58
      },
      "6" : {
        "Text" : " use the projects root dir name as project name ",
        "Line" : 62,
        "CharPositionInLine" : 58
      },
      "7" : {
        "Text" : "\n\t\t\tThe following values may be overriden in either\n\t\t\t\"bin/ant.independent.properties\" or any other properties file\n\t\t\twhich may be specified to ant on the command line like this:\n\t\t\tant -propertyfile someFile.properties\n\t\t",
        "Line" : 104,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : " read content of file VERSION into the property ",
        "Line" : 105,
        "CharPositionInLine" : 58
      },
      "9" : {
        "Text" : " use the projects root dir name as project name ",
        "Line" : 107,
        "CharPositionInLine" : 58
      },
      "10" : {
        "Text" : "\n\t\t\tSet the new version in the files:\n\t\t\t* VERSION\n\t\t\t* data/AIInfo.lua\n\t\t",
        "Line" : 144,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : " use the current project name, if no new one was specified ",
        "Line" : 226,
        "CharPositionInLine" : 69
      },
      "12" : {
        "Text" : " use the current project home, if no new one was specified ",
        "Line" : 233,
        "CharPositionInLine" : 69
      },
      "13" : {
        "Text" : " copy the whole project as it is ",
        "Line" : 244,
        "CharPositionInLine" : 43
      },
      "14" : {
        "Text" : " set the new project name in AIInfo.lua ",
        "Line" : 251,
        "CharPositionInLine" : 50
      },
      "15" : {
        "Text" : " copy the interface jars ",
        "Line" : 268,
        "CharPositionInLine" : 35
      },
      "CommentCount" : 16
    },
    "AI/Skirmish/NullOOJavaAI/CMakeLists.txt" : {
      "ObjectId" : "195bb8f6313656d8a6ec5a5ed2d8912096409327",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### Generic Java Skirmish AI config\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "AI/Skirmish/NullOOJavaAI/bin/build.xml" : {
      "ObjectId" : "d6739f08b71f361b25196421afd3830bbf213383",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n\tDo not edit this file!\n\tBut edit ant.*.properties instead.\n\n\t@author: Robin Vobruba <hoijui.quaero@gmail.com>\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "\n\t\tTargets:\n\t\t* compile:       compile source files\n\t\t* doc:           generate javadoc\n\t\t* pack,archive:  archive classes and sources into jar files\n\t\t* dist,install:  install these two jar files and the data dir\n\t\t* bump-version:  changes the version string in VERSION\n\t\t                 and data/AIInfo.lua\n\t\t* create-independent:\n\t\t\tCopies this project to a specified location and gives it a new name.\n\t\t\tIt is assured that the new project dir then contains everything\n\t\t\tneeded to compile the AI.\n\t",
        "Line" : 22,
        "CharPositionInLine" : 5
      },
      "2" : {
        "Text" : " These can not be changed from within \"bin/ant.properties\". ",
        "Line" : 24,
        "CharPositionInLine" : 69
      },
      "3" : {
        "Text" : " If it is true, we are in an independent project. ",
        "Line" : 33,
        "CharPositionInLine" : 59
      },
      "4" : {
        "Text" : "\n\t\t\tThe following values may be overriden in either\n\t\t\t\"bin/ant.dependent.properties\" or any other properties file\n\t\t\twhich may be specified to ant on the command line like this:\n\t\t\tant -propertyfile someFile.properties\n\t\t",
        "Line" : 70,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : " read content of file VERSION into the property ",
        "Line" : 71,
        "CharPositionInLine" : 58
      },
      "6" : {
        "Text" : " use the projects root dir name as project name ",
        "Line" : 73,
        "CharPositionInLine" : 58
      },
      "7" : {
        "Text" : " AI classpath ",
        "Line" : 106,
        "CharPositionInLine" : 25
      },
      "8" : {
        "Text" : " OO AI Wrapper classpath ",
        "Line" : 109,
        "CharPositionInLine" : 36
      },
      "9" : {
        "Text" : " AI Interface classpath ",
        "Line" : 117,
        "CharPositionInLine" : 35
      },
      "10" : {
        "Text" : "\n\t\t\tThe following values may be overriden in either\n\t\t\t\"bin/ant.independent.properties\" or any other properties file\n\t\t\twhich may be specified to ant on the command line like this:\n\t\t\tant -propertyfile someFile.properties\n\t\t",
        "Line" : 136,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : " read content of file VERSION into the property ",
        "Line" : 137,
        "CharPositionInLine" : 58
      },
      "12" : {
        "Text" : " use the projects root dir name as project name ",
        "Line" : 139,
        "CharPositionInLine" : 58
      },
      "13" : {
        "Text" : " AI classpath ",
        "Line" : 150,
        "CharPositionInLine" : 25
      },
      "14" : {
        "Text" : " OO AI Wrapper classpath ",
        "Line" : 153,
        "CharPositionInLine" : 36
      },
      "15" : {
        "Text" : " AI Interface classpath ",
        "Line" : 158,
        "CharPositionInLine" : 35
      },
      "16" : {
        "Text" : "\n\t\t\tSet the new version in the files:\n\t\t\t* VERSION\n\t\t\t* data/AIInfo.lua\n\t\t",
        "Line" : 186,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : " install the AI ",
        "Line" : 238,
        "CharPositionInLine" : 26
      },
      "18" : {
        "Text" : " install OO AI Wrapper ",
        "Line" : 247,
        "CharPositionInLine" : 33
      },
      "19" : {
        "Text" : " use the current project name, if no new one was specified ",
        "Line" : 280,
        "CharPositionInLine" : 69
      },
      "20" : {
        "Text" : " use the current project home, if no new one was specified ",
        "Line" : 287,
        "CharPositionInLine" : 69
      },
      "21" : {
        "Text" : " copy the whole project as it is ",
        "Line" : 298,
        "CharPositionInLine" : 43
      },
      "22" : {
        "Text" : " set the new project name in AIInfo.lua ",
        "Line" : 305,
        "CharPositionInLine" : 50
      },
      "23" : {
        "Text" : " copy the interface jars ",
        "Line" : 322,
        "CharPositionInLine" : 35
      },
      "24" : {
        "Text" : " copy the OO wrapper jars ",
        "Line" : 331,
        "CharPositionInLine" : 36
      },
      "CommentCount" : 25
    },
    "AI/Skirmish/RAI/CMakeLists.txt" : {
      "ObjectId" : "c8888b2706e6032c77df6c302219731874e2e27f",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### Generic native Skirmish AI config\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Common values are \"\" or \"src\"\n",
        "Line" : 4,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 2
    },
    "AI/Wrappers/CMakeLists.txt" : {
      "ObjectId" : "165e2d903fe09bf8e72b52e19ffa095a5e10a173",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### AI Wrappers\n\n#\n\n# Functions and macros defined in this file:\n\n# * ai_wrapper_message\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_definitions(-DBUILDING_AI_WRAPPER)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Print a message, but only if we are allowed to speak.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Configure all AI Wrapper submodules that need processing\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# exclude CUtils here, as it was already included before\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "AI/Wrappers/CUtils/CMakeLists.txt" : {
      "ObjectId" : "812813a4a2f41610ba97a64585c237bec84e7d95",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### CUtils AI Wrapper\n\n#\n\n# Global variables set in this file:\n\n# * CUtils_SRC\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Assemble the sources\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "AI/Wrappers/Cpp/CMakeLists.txt" : {
      "ObjectId" : "53e7d3456548b7fcb124190daad0b1846091227d",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### (New) C++ AI Wrapper\n\n#\n\n# Global variables set in this file:\n\n# * BUILD_Cpp_AIWRAPPER\n\n# * Cpp_AIWRAPPER_TARGET\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if the user wants to compile the wrapper\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check dependencies of the wrapper are met\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build static library\n",
        "Line" : 44,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#${myGeneratedSourceDir}/AbstractPath.cpp\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#${myGeneratedSourceDir}/StubPath.cpp\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#${myGeneratedSourceDir}/WrappPath.cpp\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# 1. Combine Callback & Commands (C->C)\n",
        "Line" : 216,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# this will regenerate the sources whenever the DEPENDS changes\n",
        "Line" : 243,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# build the static lib\n",
        "Line" : 267,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 11
    },
    "AI/Wrappers/JavaOO/CMakeLists.txt" : {
      "ObjectId" : "e94f6b8c1a3911f3736e1d712afb558280b388e5",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### Java OO AI Wrapper\n\n#\n\n# Global variables set in this file:\n\n# * BUILD_JavaOO_AIWRAPPER\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#enable_language(Java)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# includes rts/build/cmake/UtilJava.cmake\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check if the user wants to compile the wrapper\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check dependencies of the wrapper are met\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build library\n",
        "Line" : 48,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Locate the manifest file\n",
        "Line" : 74,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# remove all generated sources from build dir, if it exists\n\n# (required for build dirs of git:master from before 21. September 2010)\n",
        "Line" : 82,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Generate sources\n\n# ----------------\n",
        "Line" : 87,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Assemble project generated targets (and their libraries) we depend on\n",
        "Line" : 230,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# generate sources: callback\n",
        "Line" : 242,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Handled through a target level dependency, see below\n\n#\"${jAiIntJavaGeneratedSourceDir}/${myParentPkg}/AICallback.java\"\n",
        "Line" : 260,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "# generate sources: events\n",
        "Line" : 268,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# for AICallback.java\n",
        "Line" : 292,
        "CharPositionInLine" : 78
      },
      "15" : {
        "Text" : "# Build the jars\n\n# --------------\n",
        "Line" : 296,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# Write list of source files to an arg-file\n",
        "Line" : 299,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# compile and pack library\n",
        "Line" : 308,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# pack sources\n",
        "Line" : 335,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# This sets the version in pom.xml\n\n# as we have no separate version for the wrapper,\n\n# we use the one from the interrface\n",
        "Line" : 354,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 20
    },
    "AI/Wrappers/JavaOO/bin/build.xml" : {
      "ObjectId" : "c84bf995f0f1f91eefa246c78c5c72318cf3463d",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n\tDo not edit this file!\n\tBut edit ant.properties instead.\n\n\t@author: Robin Vobruba <hoijui.quaero@gmail.com>\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "\n\t\tThis file does:\n\t\t\t* generate-src:  generate java sources\n\t\t\t* compile:       compile java sources\n\t\t\t* doc:           generate javadoc\n\t\t\t* pack:          pack java classes and sources into jar files\n\t\t\t* dist:          install these two jar files\n\t\t\t* sdk:           create the OO Java AI SDK in a dir specified through a parameter\n\t",
        "Line" : 18,
        "CharPositionInLine" : 5
      },
      "2" : {
        "Text" : "\n\t\t\tThe following values may be overriden in either\n\t\t\t\"bin/ant.properties\" or any other properties file\n\t\t\twhich may be specified to ant on the command line like this:\n\t\t\tant -propertyfile someFile.properties\n\t\t",
        "Line" : 31,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "AI/Wrappers/JavaOO/pom.xml" : {
      "ObjectId" : "cd552ebf4751c314747021d17957819f7c8479ca",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n\t\tYou may not use this file to build this project!\n\t\tIt acts only as a container for certain meta-info, and is used with:\n\t\t> mvn install:install-file -DpomFile=.../pom.xml -Dmy.version=X\n\t",
        "Line" : 10,
        "CharPositionInLine" : 5
      },
      "1" : {
        "Text" : "\n\t\t\tThese are only defaults, and should be replaced\n\t\t\tby the calling instance.\n\t\t",
        "Line" : 16,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : " replaced by CMake or -Dmy.version=X ",
        "Line" : 29,
        "CharPositionInLine" : 79
      },
      "3" : {
        "Text" : "\n\t\t\tWe need to overwrite, cause otherwise a postfix will be added to\n\t\t\tthese URLs.\n\t\t",
        "Line" : 43,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : " replaced by CMake or -Dmy.version=X ",
        "Line" : 55,
        "CharPositionInLine" : 81
      },
      "CommentCount" : 5
    },
    "AI/Wrappers/LegacyCpp/CMakeLists.txt" : {
      "ObjectId" : "82c48ebf8ef9a1b54efaecce6d5b94dfaa4e730d",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### Legacy C++ AI Wrapper\n\n#\n\n# Global variables set in this file:\n\n# * BUILD_LegacyCpp_AIWRAPPER\n\n# * LegacyCpp_AIWRAPPER_TARGET\n\n# * LegacyCpp_Creg_AIWRAPPER_TARGET\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if the user wants to compile the wrapper\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check dependencies of the wrapper are met\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Assemble the Legacy C++ AI sources\n",
        "Line" : 45,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Compile the Legacy C++ AI wrapper static library\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Compile the Legacy C++ AI wrapper static library with creg support\n",
        "Line" : 65,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "CMakeLists.txt" : {
      "ObjectId" : "2b7235d4d52060bd52e76dcdd8c81b75dd4f7569",
      "LastModified" : "2019-02-19T13:52:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# enable flag overrides for compilers\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# dummy so that qtcreator shows all files (even those of windows)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# includes rts/build/cmake/Util.cmake & rts/build/cmake/PreferStaticLibs.cmake\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# check for minimal gcc version\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set some internal vars\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### set the default build type\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Tell windows to pass arguments around in @response files\n\n# (32k arg limit workaround)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# XCode\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "### Compiler flags and defines based on build type\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## 32bit or 64bit?\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "### Install paths (relative to CMAKE_INSTALL_PREFIX)\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# TODO set correct version here, and re-enable userdocs in doc/CMakeLists.txt\n",
        "Line" : 108,
        "CharPositionInLine" : 125
      },
      "12" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# some cross-compile fixes\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "## vista is minimum due to InterlockedIncrement64\n",
        "Line" : 152,
        "CharPositionInLine" : 39
      },
      "15" : {
        "Text" : "## use __mingw_sprintf instead of __builtin_sprintf (it's used by lua in a synced way, and builtin doesn't sync)\n",
        "Line" : 153,
        "CharPositionInLine" : 45
      },
      "16" : {
        "Text" : "## Artificial Intelligence\n\n# In theory, it should be possible to set this to LIBDIR instead\n\n# (next two are relative to CMAKE_INSTALL_PREFIX)\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## DataDirs\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# If the AI library dir is not the same as the normal data dir,\n\n# add it to the internal list of data dirs\n",
        "Line" : 189,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# If the AI data dir is not the same as the normal data dir\n\n# nor the AI library dir, add it to the internal list of data dirs\n",
        "Line" : 194,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# Spring Related USE-Flags\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## internal AVI recorder (w/o sound atm)\n",
        "Line" : 229,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "## stdout console\n",
        "Line" : 236,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Note the missing REQUIRED, as headless & dedi may not depend on those.\n\n#  So req. checks are done in the build target's CMakeLists.txt.\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# dependencies of DevIL\n",
        "Line" : 251,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# unix specifics\n",
        "Line" : 268,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# mac\n",
        "Line" : 270,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "### Add Link-Time-Optimization flags, if supported (GCC >= 4.5) and enabled\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "### Memory Access Protection (BoundsChecking)\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "### ld.gold\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "### C++11/14\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# issue in std::chrono with gentoo and few other distros\n",
        "Line" : 337,
        "CharPositionInLine" : 42
      },
      "32" : {
        "Text" : "# don't include <bits/random.tcc>, it fails to compile with single precision constants\n",
        "Line" : 338,
        "CharPositionInLine" : 31
      },
      "33" : {
        "Text" : "### our custom OpenMP replacement\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "### warnings\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "### SigNan\n",
        "Line" : 350,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "### CompileTime Warnings\n",
        "Line" : 357,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# This would produce the maximum on warnings\n",
        "Line" : 362,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# This should produce a sane amount of warnings\n",
        "Line" : 365,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "### streflop\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "## note: is removed in ./AI/CMakeLists.txt since it would break AI compilation\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "### Asio\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "### compiler specific flags\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# intel C/C++ compiler fix; it does not support these flags:\n\n# \"-march -mfpmath -msse -ggdb\"\n",
        "Line" : 402,
        "CharPositionInLine" : 1
      },
      "44" : {
        "Text" : "# SSE1\n",
        "Line" : 404,
        "CharPositionInLine" : 48
      },
      "45" : {
        "Text" : "# SSE1\n",
        "Line" : 419,
        "CharPositionInLine" : 56
      },
      "46" : {
        "Text" : "# silence warnings\n",
        "Line" : 421,
        "CharPositionInLine" : 1
      },
      "47" : {
        "Text" : "#### build types\n",
        "Line" : 432,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Increase memory limit from 2GB to 3GB on 32bit Windows and 2GB->4GB on 64bit Windows (assuming spring.exe is 32bit)\n\n# http://msdn.microsoft.com/en-us/library/windows/desktop/aa366778(v=vs.85).aspx\n",
        "Line" : 476,
        "CharPositionInLine" : 3
      },
      "49" : {
        "Text" : "#######################################\n\n# Source Files\n\n#\n",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Sub-parts of the build system may add dependencies to this target\n",
        "Line" : 492,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Make sure git is found if git is used\n",
        "Line" : 495,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Generate the version files\n",
        "Line" : 500,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# This is always executed (on every run of \"make\"),\n\n# but the actual version files are only written in case of a change\n\n# in the version info they use, or in the template file content.\n",
        "Line" : 513,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# This is always executed (on every run of \"make\"),\n\n# but the actual version files are only written in case of a change\n\n# in the version info they use, or in the template file content.\n",
        "Line" : 531,
        "CharPositionInLine" : 1
      },
      "55" : {
        "Text" : "### Where the other CMakeLists.txt are\n",
        "Line" : 552,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# As the libs are required by all the other sub-projects, we add them first\n",
        "Line" : 554,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# As tools/unitsync/ depends on sources from here, we add this one first\n",
        "Line" : 561,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# additional tools\n",
        "Line" : 564,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# man pages & user-docs\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "### Handle game content\n\n### - Pack base-files\n\n### - Install base-files\n\n### - Install freedesktop stuff\n\n### - Install mingw DLLs\n",
        "Line" : 570,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# As rts/builds/* depends on most other stuff, we add this one as last\n",
        "Line" : 577,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Unit tests\n\n# this has to be in root CMakeLists.txt\n",
        "Line" : 580,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 63
    },
    "buildbot/slave/osx/macos_sierra_x64.cmake" : {
      "ObjectId" : "71ab7bef153e540e91e0c969569433a1891ecb0c",
      "LastModified" : "2019-02-19T13:52:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(GLEW_INCLUDE_DIR \"/usr/local/Cellar/glew/2.1.0/include\" CACHE STRING \"\")\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(Boost_USE_STATIC_LIBS  TRUE CACHE BOOL \"\")\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "buildbot/slave/win/win32.cmake" : {
      "ObjectId" : "4cdc96e994e5d5d8d1c71d284eb473eeffce6dc8",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# which compilers to use for C and C++\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# here is the target environment located\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cont/CMakeLists.txt" : {
      "ObjectId" : "aa8f1e83a02e061fad702779aef1ceb744625a7b",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# required for man pages (optional) and base files (mandatory)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Make base-files (aka sdz's)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Install base-files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### Install freedesktop-files, mime-types etc.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "### Install dependencies (windows, mingwlibs DLLs)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#execute_process(COMMAND ${CMAKE_CXX_COMPILER} \"-print-file-name=libstdc++-6.dll\" OUTPUT_VARIABLE STDCXX_LIBRARY OUTPUT_STRIP_TRAILING_WHITESPACE)\n\n#install(FILES ${STDCXX_LIBRARY} DESTINATION ${BINDIR})\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# pthreadGC2 is a dependency of ThreadPool\n",
        "Line" : 63,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#\tfind_library(PTHREADGC2_LIBRARY NAMES pthreadGC2)\n\n#\tif(NOT EXISTS ${PTHREADGC2_LIBRARY})\n\n#\t\tmessage(SEND_ERROR \"pthreadGC2 not found!\")\n\n#\tendif()\n\n#\tinstall(FILES ${PTHREADGC2_LIBRARY} DESTINATION ${BINDIR})\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cont/base/CMakeLists.txt" : {
      "ObjectId" : "695f4a02ad70321e67772ac178193c3774550aea",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This will build the following, needed to run spring:\n\n# * ${BUILD_DIR}/spring/bitmaps.sdz\n\n# * ${BUILD_DIR}/springcontent.sdz\n\n# * ${BUILD_DIR}/maphelper.sdz\n\n# * ${BUILD_DIR}/cursors.sdz\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### FIXME: find a nicer way to silence 7z\n",
        "Line" : 12,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "### regenerate output file, when input changed\n",
        "Line" : 28,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "### add target & dependencies to basecontent\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "### Install content\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "cont/base/bitmaps/CMakeLists.txt" : {
      "ObjectId" : "dfd428092b954b32db1e7d7fd0f87fbef8fee47e",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cont/base/cursors/CMakeLists.txt" : {
      "ObjectId" : "e76df6a112ed7d9f98c3bd1a8c42b8d44f5e9614",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cont/base/maphelper/CMakeLists.txt" : {
      "ObjectId" : "d438abd690f8457801c7872dda8144006f12f4f7",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cont/base/springcontent/CMakeLists.txt" : {
      "ObjectId" : "49b6091bf53004e114cad2968aca976745c44ad8",
      "LastModified" : "2019-04-03T21:32:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "0837fe2d2088a3cd7b7449904deec997afaeb215",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### make and install the man pages\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### make and install the user-doc pages (README, LICENSE, ...)\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generates \"${name}.html\" from \"${name}(.markdown)\"\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "rts/CMakeLists.txt" : {
      "ObjectId" : "0260fd1ae5429aafea689cde11f03e157d2885f2",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Place executables and shared libs under \"build-dir/\",\n\n# instead of under \"build-dir/rts/\"\n\n# This way, we have the build-dir structure more like the install-dir one,\n\n# which makes testing spring in the builddir easier, eg. like this:\n\n# cd build-dir\n\n# SPRING_DATADIR=$(pwd) ./spring\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### give error when not found\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Assemble common incude dirs\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### Assemble common libraries\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "### Find include directories and add platform specific libraries\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#FIND_LIBRARY(PTHREAD_LIBRARY pthread)\n\n#FIND_LIBRARY(OMP_LIBRARY gomp) FIXME it's hidden in some subfolders\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#list(APPEND engineCommonLibraries ${PTHREAD_LIBRARY} ${OMP_LIBRARY})\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Needed for dynamically loading shared libraries (on some OS)\n",
        "Line" : 67,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Needed for backtrace* on some systems\n",
        "Line" : 70,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "#tcmalloc on freebsd is broken, default disable it (#4754)\n",
        "Line" : 91,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "### Assemble engine sources\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#add_subdirectory(System) # this is already added in ../\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#FIXME: hack for rts/Rendering/Models/IModelParser.cpp\n",
        "Line" : 139,
        "CharPositionInLine" : 68
      },
      "13" : {
        "Text" : "### Add headers for generated project files (e.g. Code::Blocks)\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "rts/ExternalAI/CMakeLists.txt" : {
      "ObjectId" : "6b2e7b3789d3043ea95b08ffe4a88372f0ad75f0",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This list was created using this *nix shell command:\n\n# > find . -name \"*.cpp\"\" | sort\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "rts/Game/CMakeLists.txt" : {
      "ObjectId" : "9d51460c0572797eabeae9da0ded47e55ba52ede",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This list was created using this *nix shell command:\n\n# > find . -name \"*.cpp\" | sort\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "rts/Lua/CMakeLists.txt" : {
      "ObjectId" : "830f239fadf4cef098a27db3e19602bb23046231",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This list was created using this *nix shell command:\n\n# > find . -name \"*.cpp\"\" | sort\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "rts/Map/CMakeLists.txt" : {
      "ObjectId" : "585cea1008872cec24f74012c528941615b272d9",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This list was created using this *nix shell command:\n\n# > find . -name \"*.cpp\"\" | sort\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "rts/Menu/CMakeLists.txt" : {
      "ObjectId" : "efcdc56fa6850a0bfb5ce23bc62e48f89de2535e",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This list was created using this *nix shell command:\n\n# > find . -name \"*.cpp\"\" | sort\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "rts/Net/CMakeLists.txt" : {
      "ObjectId" : "1863c7b66213d6769b93a50ce1a893010e17d207",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rts/Rendering/CMakeLists.txt" : {
      "ObjectId" : "2cdecd6028e640b7226f8c1f6fb224e34dbe454a",
      "LastModified" : "2019-04-03T21:32:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This list was created using this *nix shell command:\n\n# > find . -name \"*.cpp\"\" | sort\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "rts/Sim/CMakeLists.txt" : {
      "ObjectId" : "5f3afd443bbd9196fc47e06ef4af0480ff03e501",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This list was created using this *nix shell command:\n\n# > find . -name \"*.cpp\"\" | sort\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME: hack to avoid linkers to remove not referenced symbols. required because of\n\n# https://springrts.com/mantis/view.php?id=4511\n",
        "Line" : 148,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "rts/System/CMakeLists.txt" : {
      "ObjectId" : "d6f7efa06a7f5fe05a6ab610e44b9f3b60441c14",
      "LastModified" : "2019-03-01T00:26:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This list was created using this *nix shell command:\n\n# > find . -name \"*.cpp\" -or -name \"*.c\" | sort\n\n# Then Sound/ stuff was removed, because it is now a separate static lib.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### only use the target platform related directory\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "rts/System/FileSystem/Archives/CMakeLists.txt" : {
      "ObjectId" : "dcd9faca1b5cff0fbb6fea98eff446a52413e6dc",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rts/System/FileSystem/CMakeLists.txt" : {
      "ObjectId" : "c3a46d58cb0ffd01a66d52b6cb4beec262ce81c0",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rts/System/Net/CMakeLists.txt" : {
      "ObjectId" : "52340ad7f4be25746fbe93b214809764ea5c1d26",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rts/System/Sound/CMakeLists.txt" : {
      "ObjectId" : "ff59de890d2c0f2e7be53657de466cef9ba59e64",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# only one of the two targets needs this\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dummy Sound implementaiton\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define default sound implementation\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Real Sound implementaiton\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "rts/aGui/CMakeLists.txt" : {
      "ObjectId" : "8215fe715c3d72088aacb4e62602485308870b79",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a direct copy of the GL and SDL headers,\n\n# as these may not be available on headless systems.\n",
        "Line" : 5,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# This list was created using this *nix shell command:\n\n# > find . -name \"*.cpp\"\" | sort\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "rts/build/cmake/ConfigureFile.cmake" : {
      "ObjectId" : "8811aed28c00b6cf346f5e3cef80e302a7764aba",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Spring engine (GPL v2 or later), see LICENSE.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# example usage:\n\n#Add_Custom_Command(\n\n#\tDEPENDS\n\n#\t\t\"output.txt\"\n\n#\tCOMMAND \"${CMAKE_COMMAND}\"\n\n#\t\t\"-Dfile.in=input.txt\"\n\n#\t\t\"-Dfile.out=output.txt\"\n\n#\t\t\"-DmyReplaceProperty=ABC\"\n\n#\t\t\"-P\" \"${CMAKE_MODULES_SPRING}/ConfigureFile.cmake\"\n\n#\tDEPENDS\n\n#\t\t\"input.txt\"\n\n#\tCOMMENT\n\n#\t\t\"Configure output.txt\" VERBATIM\n\n#\t)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "rts/build/cmake/ConfigureVersion.cmake" : {
      "ObjectId" : "92912a666505348495f40f36c9ec1efb9fd0c2e7",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Spring engine (GPL v2 or later), see LICENSE.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# example usage:\n\n#Add_Custom_Command(\n\n#\tTARGET\n\n#\t\tconfigureVersion\n\n#\tCOMMAND \"${CMAKE_COMMAND}\"\n\n#\t\t\"-DSOURCE_ROOT=${CMAKE_SOURCE_DIR}\"\n\n#\t\t\"-DCMAKE_MODULES_SPRING=${CMAKE_MODULES_SPRING}\"\n\n#\t\t\"-DVERSION_ADDITIONAL=ABC\"\n\n#\t\t\"-DGENERATE_DIR=${CMAKE_BINARY_DIR}\"\n\n#\t\t\"-P\" \"${CMAKE_MODULES_SPRING}/ConfigureFile.cmake\"\n\n#\tCOMMENT\n\n#\t\t\"Configure Version files\" VERBATIM\n\n#\t)\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fetch through git or from the VERSION file\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We define these, so it may be used in the to-be-configured files\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is supplied by -DVERSION_ADDITIONAL=\"abc\"\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "rts/build/cmake/FindAWK.cmake" : {
      "ObjectId" : "70a8e4f653f874da8b02da54983a6817d4a56069",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find AWK binary\n\n# Find the native AWK executable\n\n#\n\n#  AWK_BIN         - AWK executable\n\n#  AWK_VERSION     - AWK version (first line of output of \"${AWK_BIN} -W version\")\n\n#  AWK_FOUND       - TRUE if AWK binary was found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 11,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set AWK_FOUND to TRUE\n\n# if AWK_BIN is valid\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Try to fetch the AWK version\n\n#\n\n# There are different ways of doing this, and not all implementations\n\n# support all of them. What is worse: none of the ways is supported by all\n\n# implementations. :/\n\n#\n\n# Common Implementations:\n\n# * GAWK: linux (& windows) standard\n\n# * MAWK: gentoo\n\n# * BWK:  OS X & BSDs (announces itsself just as \"awk version 20070501\")\n\n# more info: http://en.wikipedia.org/wiki/AWK#Versions_and_implementations\n\n#\n\n# a) awk -Wv        (the standard, not supported by BWK)\n\n# b) awk -W version (less standard, more verbose version of the above)\n\n# c) awk --version  (works for BWK and GAWK)\n\n# d) awk -version   (works for BWK)\n\n#\n\n# So we first try a) and if output is \"\", we try c)\n\n#\n",
        "Line" : 32,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# reduce to first line\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# failed to fetch version, clear\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# clear\n",
        "Line" : 75,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Show these variables only in the advanced view in the GUI, and make them global\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "rts/build/cmake/FindAsciiDoc.cmake" : {
      "ObjectId" : "2a550aad40f6e8ffecb42585048940d446d91066",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Spring engine (GPL v2 or later), see LICENSE.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find AsciiDoc, XSLTProc and DocBook\n\n# These toolds are used to compile man pages\n\n#\n\n#  ASCIIDOC_BIN   - will be set to the AsciiDoc executable (eg. asciidoc)\n\n#  XSLTPROC_BIN   - will be set to the XSLTProc executable (eg. xsltproc)\n\n#  DOCBOOK_XSL    - will be set to the DocBook XSL Style-Sheet (eg. /usr/share/xml/docbook/stylesheet/nwalsh/manpages/docbook.xsl)\n\n#  ASCIIDOC_FOUND - TRUE if AsciiDoc was found\n\n#  XSLTPROC_FOUND - TRUE if XSLTProc was found\n\n#  DOCBOOK_FOUND  - TRUE if DocBook was found\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set ASCIIDOC_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "rts/build/cmake/FindDevIL.cmake" : {
      "ObjectId" : "daaf2c1bd9df48063edadc12831334c3f11d7240",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Downloaded from: http://www-id.imag.fr/FLOWVR/manual/flowvr-suite-src/flowvr-render/cmake/\n\n# License: GPL v2, http://www-id.imag.fr/FLOWVR/manual/flowvr-suite-src/flowvr-render/COPYING\n\n#\n\n# Modifications:\n\n# 2008.01.16 Tobi Vollebregt -- changed Devil->DEVIL for consistency\n\n#                            -- added devil alternative names for MinGW\n\n#                            -- removed \"looking for devil\" status message\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find DevIL\n\n# Find the native DevIL includes and libraries.\n\n#\n\n#  IL_INCLUDE_DIR  - Where to find \"IL/il.h\"\n\n#  IL_IL_LIBRARY   - Path to the IL shared library\n\n#  IL_LIBRARIES    - List of libraries when using IL\n\n#  IL_FOUND        - True if IL is found.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set IL_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "rts/build/cmake/FindFontConfig.cmake" : {
      "ObjectId" : "5f7df4bfac3dab57a15df1830f3688e5651212c2",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Spring engine (GPL v2 or later), see LICENSE.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find the FontConfig library\n\n# Find the FontConfig includes and library\n\n#\n\n#  FONTCONFIG_INCLUDE_DIR - where to find fontconfig.h etc.\n\n#  FONTCONFIG_LIBRARIES   - List of libraries when using fontconfig.\n\n#  FONTCONFIG_FOUND       - True if fontconfig was found.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 13,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set FONTCONFIG_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "rts/build/cmake/FindGLEW.cmake" : {
      "ObjectId" : "45182e82e28c57ae0dc440ea15c98442a2cd0105",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Downloaded from: http://www-id.imag.fr/FLOWVR/manual/flowvr-suite-src/flowvr-render/cmake/\n\n# License: GPL v2, http://www-id.imag.fr/FLOWVR/manual/flowvr-suite-src/flowvr-render/COPYING\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find GLEW\n\n# Once done this will define:\n\n#  GLEW_FOUND         - system has GLEW\n\n#  GLEW_INCLUDE_DIR   - the GLEW include directory\n\n#  GLEW_LIBRARIES     - Link these to use GLEW\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 14,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# show the GLEW_INCLUDE_DIR and GLEW_LIBRARIES variables only in the advanced view\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "rts/build/cmake/FindGit.cmake" : {
      "ObjectId" : "e4f9edd7240a3c96f2c2e70d8b45ceb3200233ca",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is a near 1 on 1 copy of the same file from recent\n\n# CMake distributions. It is required cause old CMake versions\n\n# do not ship with it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The module defines the following variables:\n\n#   GIT_EXECUTABLE - path to git command line client\n\n#   GIT_FOUND - true if the command line client was found\n\n# Example usage:\n\n#   find_package(Git)\n\n#   if(GIT_FOUND)\n\n#     message(\"git found: ${GIT_EXECUTABLE}\")\n\n#   endif()\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for 'git' or 'eg' (easy git)\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Prefer .cmd variants on Windows unless running in a Makefile\n\n# in the MSYS shell.\n\n#\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set GIT_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "rts/build/cmake/FindLibunwind.cmake" : {
      "ObjectId" : "84b9f0486b50df266026dde68319729bf793297d",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find libunwind\n\n#\n\n# based on: http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries#Using_external_libraries_that_CMake_doesn.27t_yet_have_modules_for\n\n# written by Maj.Boredom\n\n#\n\n# Once done this will define\n\n#   LIBUNWIND_FOUND - System has libunwind\n\n# and optionally,\n\n#   LIBUNWIND_INCLUDE_DIRS - The libunwind include directories\n\n#   LIBUNWIND_LIBRARIES - The libraries needed to use libunwind\n\n#   LIBUNWIND_DEFINITIONS - Compiler switches needed to use libunwind\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME: OS X 10.10 doesn't have static libunwind.a only dynamic libunwind.dylib;\n\n#        link with \"-framework Cocoa\"\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "rts/build/cmake/FindMarkdown.cmake" : {
      "ObjectId" : "6eed3a1bec7058959b926279616667cf42b17765",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Spring engine (GPL v2 or later), see LICENSE.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find Markdown\n\n# Find the native _markdown_ binary, which may be used to convert _*.markdown_\n\n# files to _*.html_.\n\n# http://daringfireball.net/projects/markdown/\n\n#\n\n# See Pandoc (FindPandoc.cmake), for a more powerful utility.\n\n#\n\n#  MARKDOWN_BIN      - will be set to the Markdown executable (eg. markdown.exe)\n\n#  MARKDOWN_FOUND    - TRUE if Markdown was found\n\n#  markdown_md_to_html - creates a string that may be executed on the cmd-line\n\n#                      for converting a markdown file to HTML\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 18,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set MARKDOWN_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# There are at least two compleetly different versions of markdown.\n\n# The one on gentoo suports a lot of cmd-line switches,\n\n# the one on Ubuntu not. This should work with both:\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "rts/build/cmake/FindMiniZip.cmake" : {
      "ObjectId" : "c90a1af8db615c33f38c3ef0e3d5a2738ba53aa5",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Spring engine (GPL v2 or later), see LICENSE.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find the MiniZip library (sub-part of zlib)\n\n# Find the native MiniZip includes and library (static or shared)\n\n#\n\n#  MINIZIP_INCLUDE_DIR - where to find zip.h, unzip.h, ioapi.h, etc.\n\n#  MINIZIP_LIBRARIES   - List of libraries when using minizip.\n\n#  MINIZIP_FOUND       - True if minizip was found.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set MINIZIP_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "rts/build/cmake/FindOggVorbis.cmake" : {
      "ObjectId" : "7256c0a534a7b0c575d5359924849ffaa8050649",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Downloaded from: http://websvn.kde.org/trunk/KDE/kdelibs/cmake/modules/\n\n# License: see the accompanying COPYING-CMAKE-SCRIPTS file\n\n#\n\n# Modifications:\n\n# 2008.01.16 Tobi Vollebregt -- Moved ${OGG_LIBRARY} to the back of OGGVORBIS_LIBRARIES,\n\n#                               this allows vorbis to link to ogg on MinGW.\n\n#                            -- Moved ${VORBIS_LIBRARY} just before OGGVORBIS_LIBRARIES,\n\n#                               this allows vorbis{file,enc} to link to vorbis on MinGW.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find the OggVorbis libraries\n\n# Once done this will define\n\n#\n\n#  OGGVORBIS_FOUND - system has OggVorbis\n\n#  OGGVORBIS_VERSION - set either to 1 or 2\n\n#  OGGVORBIS_INCLUDE_DIR - the OggVorbis include directory\n\n#  OGGVORBIS_LIBRARIES - The libraries needed to use OggVorbis\n\n#  OGG_LIBRARY         - The Ogg library\n\n#  VORBIS_LIBRARY      - The Vorbis library\n\n#  VORBISFILE_LIBRARY  - The VorbisFile library\n\n#  VORBISENC_LIBRARY   - The VorbisEnc library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Copyright (c) 2006, Richard Laerkaeng, <richard@goteborg.utfors.se>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#check_include_files(vorbis/vorbisfile.h HAVE_VORBISFILE_H)\n\n#check_library_exists(ogg ogg_page_version \"\" HAVE_LIBOGG)\n\n#check_library_exists(vorbis vorbis_info_init \"\" HAVE_LIBVORBIS)\n\n#check_library_exists(vorbisfile ov_open \"\" HAVE_LIBVORBISFILE)\n\n#check_library_exists(vorbisenc vorbis_info_clear \"\" HAVE_LIBVORBISENC)\n\n#check_library_exists(vorbis vorbis_bitrate_addblock \"\" HAVE_LIBVORBISENC2)\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#if (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE AND HAVE_LIBVORBISENC)\n\n#    message(STATUS \"Ogg/Vorbis found\")\n\n#    set (VORBIS_LIBS \"-lvorbis -logg\")\n\n#    set (VORBISFILE_LIBS \"-lvorbisfile\")\n\n#    set (VORBISENC_LIBS \"-lvorbisenc\")\n\n#    set (OGGVORBIS_FOUND TRUE)\n\n#    if (HAVE_LIBVORBISENC2)\n\n#        set (HAVE_VORBIS 2)\n\n#    else (HAVE_LIBVORBISENC2)\n\n#        set (HAVE_VORBIS 1)\n\n#    endif (HAVE_LIBVORBISENC2)\n\n#else (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE AND HAVE_LIBVORBISENC)\n\n#    message(STATUS \"Ogg/Vorbis not found\")\n\n#endif (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE AND HAVE_LIBVORBISENC)\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "rts/build/cmake/FindPandoc.cmake" : {
      "ObjectId" : "b92dffb50a95df03d938ca5943a5b4c804689813",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Spring engine (GPL v2 or later), see LICENSE.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find Pandoc\n\n# Find the native Pandoc binary\n\n# If you need to convert files from one markup format into another,\n\n# pandoc is your swiss-army knife.\n\n# It can read markdown and (subsets of) reStructuredText, HTML, and LaTeX,\n\n# and it can write markdown, reStructuredText, HTML, LaTeX, ConTeXt,\n\n# Docbook XML, OpenDocument XML, GNU Texinfo, RTF, ODT, MediaWiki markup,\n\n# groff man pages, and S5 HTML slide shows.\n\n# http://johnmacfarlane.net/pandoc/\n\n#\n\n# See Markdown (FindMarkdown.cmake), for a more lightweight utility.\n\n#\n\n#  PANDOC_BIN      - will be set to the Pandoc executable (eg. pandoc.exe)\n\n#  PANDOC_FOUND    - TRUE if Pandoc was found\n\n#  pandoc_md_to_html - creates a string that may be executed on the cmd-line\n\n#                    for converting a markdown file to HTML\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 23,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PANDOC_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "rts/build/cmake/FindSDL2.cmake" : {
      "ObjectId" : "77486a7ebfe43d94f28f88037ecf8dd2bb9baa88",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL2 library\n\n# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n# SDL2_VERSION_STRING the version found\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2_main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDL2main.h and SDL2main.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL2 guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL2 convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n\n#\n\n# Ported by Johnny Patterson. This is a literal port for SDL2 of the FindSDL.cmake\n\n# module with the minor edit of changing \"SDL\" to \"SDL2\" where necessary. This\n\n# was not created for redistribution, and exists temporarily pending official\n\n# SDL2 CMake modules.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 85,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 86,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 87,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# For SDL2main\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# For MinGW library\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "rts/build/cmake/FindSevenZip.cmake" : {
      "ObjectId" : "bfb83fb66cc8d9ec0c3f36756684fd747168e044",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Spring engine (GPL v2 or later), see LICENSE.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find 7zip\n\n# Find the native 7zip binary\n\n#\n\n# NOTE: We can not use 7ZIP* or 7zip* as var name, cause in CMake,\n\n#       var names should not start with numbers.\n\n#\n\n#  SEVENZIP_BIN   - will be set to the 7zip executable (eg. 7z.exe)\n\n#  SEVENZIP_FOUND - TRUE if 7zip was found\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# 7zr(.exe) only supports 7z archives, while 7z(.exe) and 7za(.exe)\n\n# additionally support many other formats (eg zip)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# cmake 3 doesn't allow () in var names, workarround it:\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set SEVENZIP_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "rts/build/cmake/FindTCMalloc.cmake" : {
      "ObjectId" : "e866eab379d763bc5cdc64117688cb9ce43cce83",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Spring engine (GPL v2 or later), see LICENSE.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find TCMalloc (part of Google's perftools)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "rts/build/cmake/FindValgrind.cmake" : {
      "ObjectId" : "d6e2f510bfd96ec35a7ced577bee69904a2c682f",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Spring engine (GPL v2 or later), see LICENSE.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find the Valgrind library\n\n#  VALGRIND_FOUND       - True if Valgrind was found.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 9,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "rts/build/cmake/FindWin32Libs.cmake" : {
      "ObjectId" : "35f4d819a3bbdf03539ab6d15e78fa27fa9b5a5e",
      "LastModified" : "2019-03-01T01:28:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Spring engine (GPL v2 or later), see LICENSE.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find some win32-only libraries needed to compile Spring\n\n# Once done this will define\n\n#\n\n# WIN32_FOUND - System has the required libraries\n\n# WIN32_LIBRARIES - Link these\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# no point in searching for these on a proper mingw installation\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#dont need for msvc\n",
        "Line" : 26,
        "CharPositionInLine" : 30
      },
      "4" : {
        "Text" : "# for stacktraces on msvc\n",
        "Line" : 72,
        "CharPositionInLine" : 21
      },
      "5" : {
        "Text" : "# for System/Platform/Win/CrashHandler.cpp\n",
        "Line" : 73,
        "CharPositionInLine" : 22
      },
      "6" : {
        "Text" : "# for System/Net/\n",
        "Line" : 75,
        "CharPositionInLine" : 22
      },
      "7" : {
        "Text" : "# for SDL2\n",
        "Line" : 78,
        "CharPositionInLine" : 19
      },
      "8" : {
        "Text" : "# for SDL2\n",
        "Line" : 79,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 9
    },
    "rts/build/cmake/FindWindres.cmake" : {
      "ObjectId" : "5969ae7b4689d63b7aba077ad8148a8b2c34f7da",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Spring engine (GPL v2 or later), see LICENSE.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find windres executable\n\n# manipulate Windows resources\n\n#\n\n#  WINDRES_BIN    - will be set to the windres executable (eg. windres.exe)\n\n#  WINDRES_FOUND  - TRUE if windres was found\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set WINDRES_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "rts/build/cmake/FindXCB.cmake" : {
      "ObjectId" : "b5642d4d9d9d0c4cb639c836e8515764bea316c9",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Spring engine (GPL v2 or later), see LICENSE.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "rts/build/cmake/OverrideFlags.cmake" : {
      "ObjectId" : "90774fe725a9576dc29674006490678c5294b0b5",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Spring engine (GPL v2 or later), see LICENSE.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sets the overrides for compiler flags\n\n# Only executed ONCE (on the initial cmake run)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "rts/build/cmake/PreferStaticLibs.cmake" : {
      "ObjectId" : "2043386f6ef37f0b600cf052c7a2f0b93dc896cd",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Spring engine (GPL v2 or later), see LICENSE.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "rts/build/cmake/TestCXXFlags.cmake" : {
      "ObjectId" : "397a5b8579202b8d18543510bc9f17efdf78a755",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Spring engine (GPL v2 or later), see LICENSE.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Test whether the C++ compiler supports certain flags.\n\n# Once done, this will define the following vars.\n\n# They will be empty if the flag is not supported,\n\n# or contain the flag if it is supported.\n\n#\n\n# VISIBILITY_HIDDEN            -fvisibility=hidden\n\n# VISIBILITY_INLINES_HIDDEN    -fvisibility-inlines-hidden\n\n# SSE_FLAGS                    -msse -mfpmath=sse\n\n# IEEE_FP_FLAG                 -fvisibility-inlines-hidden\n\n# LTO_FLAGS                    -flto -fwhopr\n\n#\n\n# Note: gcc for windows supports these flags, but gives lots of errors when\n\n#       compiling, so use them only for linux builds.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Helper\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Set(SSE_FLAGS \"/arch:SSE2\")\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# activate SSE1 only\n",
        "Line" : 55,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "#Set(SSE_FLAGS \"${SSE_FLAGS} -mmmx\")\n",
        "Line" : 57,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# worth to test if sync\n\n#Set(SSE_FLAGS \"${SSE_FLAGS} -mpopcnt -mlzcnt -mabm\")\n",
        "Line" : 59,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# disable rest\n\n#Set(SSE_FLAGS \"${SSE_FLAGS} -mno-3dnow\") tests showed it might sync\n",
        "Line" : 62,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# Nothing needed\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# note, we need gnu++11 instead of c++11, cause else we get compile errors\n\n# under mingw (pthread.h missing, sys/utsname.h missing, M_PI not defined and more)\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# xcode\n",
        "Line" : 106,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# xcode 2\n",
        "Line" : 110,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# 32bit\n",
        "Line" : 131,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# 64bit\n",
        "Line" : 137,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# always syncs with 32bit\n",
        "Line" : 139,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# check if default linker is ld.gold\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#FIND_PROGRAM fails in crosscompile environments (it detects the native ld.gold)\n",
        "Line" : 169,
        "CharPositionInLine" : 35
      },
      "17" : {
        "Text" : "# since gcc 4.8 it is possible to switch the linker via that argument\n",
        "Line" : 170,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#set(LDGOLD_LINKER_FLAGS \" -Wl,--stats ${LDGOLD_LINKER_FLAGS}\")\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# e.g. tries to optimize duplicated strings across the binary\n\n# Identical Code Folding\n",
        "Line" : 185,
        "CharPositionInLine" : 67
      },
      "CommentCount" : 20
    },
    "rts/build/cmake/Util.cmake" : {
      "ObjectId" : "ef172c1ae2a85317208ad338b8be19990bc24fa0",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Spring engine (GPL v2 or later), see LICENSE.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Spring CMake utilities\n\n# ----------------------\n\n#\n\n# Variables set in this file:\n\n# * PATH_SEP_H\n\n# * PATH_SEP_T\n\n# * PATH_DELIM_H\n\n# * PATH_DELIM_T\n\n# * ABS_DIR_REGEX_H\n\n# * ABS_DIR_REGEX_T\n\n# * PIC_FLAG\n\n#\n\n# Functions and macros defined in this file:\n\n# * fix_lib_name\n\n# * create_install_target\n\n# * remove_string\n\n# * remove_flag\n\n# * set_global\n\n# * make_global\n\n# * get_list_of_submodules\n\n# * get_version_from_file\n\n# * get_last_path_part\n\n# * make_absolute\n\n# * get_version_plus_dep_file\n\n# * get_native_sources_recursive\n\n# * catch_regex_group\n\n# * find_freetype_hack\n\n# * make_global_var\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# define the fPic compiler flag\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add fpic flag on 64 bit platforms\n",
        "Line" : 60,
        "CharPositionInLine" : 34
      },
      "4" : {
        "Text" : "#no fpic needed on 32bit\n",
        "Line" : 62,
        "CharPositionInLine" : 9
      },
      "5" : {
        "Text" : "# This is needed because CMake, or at least some versions of it (eg. 2.8),\n\n# falsely use the \".so\" suffix under Mac OS X for MODULE's\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create an install target which installs multiple sub-projects.\n\n# Sub-projects have to be specified by paths relative to CMAKE_SOURCE_DIR.\n\n# All install instructions in the specified dirs (recursively) are executed.\n\n# example:\n\n# \tset(myInstallDirs\n\n# \t\t\t\"rts/builds/default\"\n\n# \t\t\t\"tools/unitsync\"\n\n# \t\t\t\"cont\"\n\n# \t\t\t\"AI\"\n\n# \t\t)\n\n# \tset(myInstallDeps\n\n# \t\t\tspring\n\n# \t\t\tgamedata\n\n# \t\t\tunitsync\n\n# \t\t\tC-AIInterface\n\n# \t\t\tNullAI\n\n# \t\t\tKAIK\n\n# \t\t)\n\n# \tcreate_install_target(myPkg myInstallDeps myInstallDirs)\n\n# This creates a new target \"install-myPkg\"\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Assemble the list of commands\n",
        "Line" : 102,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# NOTE: The following does not work in CMake 2.6.4\n\n#\"-DCMAKE_INSTALL_COMPONENT=${targetName}\"\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Make sure we do have commands at all\n",
        "Line" : 116,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Create a custom install target\n",
        "Line" : 121,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# This also works for custom targets\n",
        "Line" : 129,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Removes a given string from a variable\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Removes a compiler flag from all commonly used vars used for that purpose\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Sets a variable in global scope\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Makes variables available in global scope\n\n# make_global(var0 [var1 [var2 [var3 ...]]])\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Find all CMakeLists.txt files in sub-directories\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Strip away the \"/CMakeLists.txt\" parts, so we end up with just a list of dirs,\n\n# for example: AAI;RAI;KAIK\n\n# GLOB can prefix with \"//\" or \"/\" (perhaps changed in cmake 3.1.0), this double replace will support both \"//\" and \"/\"\n",
        "Line" : 170,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# Gets the version from a text file.\n\n# (actually just reads the text file content into a variable)\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Returns the name of the dir or file specified by a path.\n\n# example: \"/A/B/C\" -> \"C\"\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Create an absolute directory from a base- and a relative-dir\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Gets the version from a text file (${CMAKE_CURRENT_SOURCE_DIR}/VERSION),\n\n# and prepare a file for dependency tracking.\n\n# The project will reconfigure whenever the VERSION file gets touched.\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Recursively lists all native source files in a given directory,\n\n# relative to _relDir, or absolut, If _relDir == \"\".\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Recursively get sources for source extension _ext\n",
        "Line" : 230,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Concatenate to previous results\n",
        "Line" : 236,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Tries to capture a specific regex group from a string.\n\n# The regex has to match the whole string.\n\n# @param pattern the regex to match to\n\n# @param group starts at 1\n\n# @param var to write the result to, \"\" in case of no match\n\n# @param str the string that will be tried to be match\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# macro that adds \"freetype-6 freetype6\" to find_library on win32\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# make a var global (not cached in CMakeCache.txt!)\n\n# both calls are required, else the variable is empty\n\n# http://www.cmake.org/Bug/view.php?id=15093\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "rts/build/cmake/UtilGit.cmake" : {
      "ObjectId" : "476b30318e95a2f748535f1d5f701e0abfa168e2",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Spring engine (GPL v2 or later), see LICENSE.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Git related CMake utilities\n\n# ---------------------------\n\n#\n\n# Functions and macros defined in this file:\n\n# * git_util_command         - Executes a git command plus arguments.\n\n# * git_util_hash            - Fetches the revision SHA1 hash of the current HEAD.\n\n# * git_util_branch          - Fetches the branch name of the current HEAD.\n\n# * git_util_describe        - Fetches the output of git-describe of the current HEAD.\n\n# * git_info                 - Retrieves a lot of info about the HEAD of a repository\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Executes a git command plus arguments.\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Fetches the revision SHA1 hash of the current HEAD.\n\n# This command may fail if dir is not a git repo.\n",
        "Line" : 47,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Fetches the branch name of the current HEAD.\n\n# This command may fail if dir is not a git repo.\n\n# In case dir has a detached HEAD, var will be set to \"HEAD\",\n\n# else it will be set to the branch name, eg. \"master\" or \"develop\".\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Fetches the output of git-describe of the current HEAD.\n\n# This command may fail if dir is not a git repo.\n\n# Only tags matching the given pattern (shell glob, see manual for git-tag)\n\n# may be used.\n\n# Example tag patterns: all tags:\"*\", spring-version-tags:\"*.*.*\"\n",
        "Line" : 67,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Sets the following vars:\n\n# * ${prefix}_GIT_REVISION_HASH     : `git rev-list -n 1 HEAD`\n\n#                                     -> 2d6bd9cb5a9ceb9c728dd34a1ab2925d4b0759e0\n\n# * ${prefix}_GIT_REVISION_NAME     : `git name-rev --name-only --tags --no-undefined --always 2d6bd9cb5a9ceb9c728dd34a1ab2925d4b0759e0`\n\n#                                     -> 2d6bd9c              # no related tag found (SHA1 starts with 2d6bd9c)\n\n#                                     -> 0.82.3^0             # exactly 0.82.3\n\n#                                     -> 0.82.3~2             # 2 commits before 0.82.3\n\n# * ${prefix}_GIT_DESCRIBE          : `git describe --tags`\n\n#                                     -> 0.82.3-1776-g2d6bd9c # 1776 commits after 0.82.3 (SHA1 starts with 2d6bd9c)\n\n#                                     -> 0.82.3               # exactly 0.82.3\n\n# * ${prefix}_GIT_BRANCH            : `git rev-parse --abbrev-ref HEAD`\n\n#                                     -> HEAD   # in case we are not on any branch (detached HEAD)\n\n#                                     -> master # the current branchs name\n\n# - ${prefix}_GIT_FILES_MODIFIED    : number of uncommitted modified files\n\n# - ${prefix}_GIT_FILES_ADDED       : number of uncommitted added files\n\n# - ${prefix}_GIT_FILES_DELETED     : number of uncommitted deleted files\n\n# - ${prefix}_GIT_FILES_UNVERSIONED : number of uncommitted unversioned files\n\n# - ${prefix}_GIT_FILES_CLEAN       : TRUE if there are no uncommitted modified files\n\n# - ${prefix}_GIT_FILES_CLEAN_VERY  : TRUE if there are no uncommitted modified, added, deleted or unversioned files\n",
        "Line" : 80,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Fetch ${prefix}_GIT_REVISION_HASH\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Fetch ${prefix}_GIT_REVISION_NAME\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Fetch ${prefix}_GIT_DESCRIBE\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Fetch ${prefix}_GIT_BRANCH\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Fetch ${prefix}_GIT_FILES_MODIFIED\n\n# Fetch ${prefix}_GIT_FILES_ADDED\n\n# Fetch ${prefix}_GIT_FILES_DELETED\n\n# Fetch ${prefix}_GIT_FILES_UNVERSIONED\n\n# Fetch ${prefix}_GIT_FILES_CLEAN\n\n# Fetch ${prefix}_GIT_FILES_CLEAN_VERY\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# convert the raw command output to a list like:\n\n# \"M;M;M;M;M;A;D;D;??;??;??\"\n",
        "Line" : 144,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "# count ammounts of all modification types in the list\n",
        "Line" : 151,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "# Prints extensive git version info.\n\n# @see git_info\n",
        "Line" : 194,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 15
    },
    "rts/build/cmake/UtilJava.cmake" : {
      "ObjectId" : "67cb019e0afb53633d8c416c66e0e3ec1b983351",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Spring engine (GPL v2 or later), see LICENSE.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Spring Java related CMake utilities\n\n# -----------------------------------\n\n#\n\n# Variables set in this file:\n\n# * JAVA_GLOBAL_LIBS_DIRS\n\n#\n\n# Functions and macros defined in this file:\n\n# * find_java_lib\n\n# * get_first_sub_dir_name\n\n# * create_classpath\n\n# * concat_classpaths\n\n# * find_manifest_file\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Looks for a Java library (Jar file) in system wide search paths and in\n\n# additional dirs supplied as argument.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Returns the name of the first sub-dir (in alphabetical descending order)\n\n# under dir.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Recursively lists all JAR files in a given directory\n\n# and concatenates them in a Java Classpath compatible way into a single string.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make sure we use the correct path delimitter for the compiling system\n",
        "Line" : 61,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Concatenates an arbritrary number of Java ClassPaths (may be empty).\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Look for a manifest.mf file in a few specific sub-dirs.\n\n# This could be done with a simple find_file call,\n\n# but that strangely does not find the file under win32,\n\n# so we use this workaround\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "rts/build/cmake/UtilVersion.cmake" : {
      "ObjectId" : "99fe06b7e263066e2888527e2bbc51aa63dbd04b",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Spring engine (GPL v2 or later), see LICENSE.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Spring version related CMake utilities\n\n# --------------------------------------\n\n#\n\n# Functions and macros defined in this file:\n\n# * parse_spring_version        - Parses a Spring version string into one var for each part of the version\n\n# * create_spring_version_string - Concatenates Spring version string parts to form a full version specifier\n\n# * check_spring_release_version - Checks whether a given string is a release version\n\n# * get_version_from_file        - Retrieves the version from the VERSION file\n\n# * fetch_spring_version        - Retrieves the version either from git, or from the VERSION file, in case we are not in a git repo (tarball)\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# matches a decimal digit\n",
        "Line" : 19,
        "CharPositionInLine" : 17
      },
      "3" : {
        "Text" : "# matches a (lower-case) hexadecimal digit\n",
        "Line" : 20,
        "CharPositionInLine" : 20
      },
      "4" : {
        "Text" : "# Matches the engine major version part\n\n# Releases that do NOT preserve sync show a change here (see release branch)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Matches the engine patchSet version part\n\n# Releases that preserve sync show a change here (see hotfix branch)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Matches the engine dev version postfix (\".1-<#commits>-g<SHA1> <branch>\")\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Matches engine release version strings\n\n# Match-groups (Caution: not consecutive! example input: \"0.82.7.1\"):\n\n# \\\\1 : Major version, for example \"83\"\n\n# \\\\2 : Minor version, for example \"0\"\n\n# \\\\3 : Commits since last release, for example \"2302\"\n\n# \\\\4 : First 7 digits of the current commit's SHA1, for example \"6d3a71e\"\n\n# \\\\5 : Git branch, for example \"develop\"\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Parses a Spring version string into one var for each part of the version.\n\n# @see create_spring_version_string\n\n# sample version: \"83.2.1-2302-g6d3a71e develop\"\n\n# sample output:\n\n#   - ${varPrefix}_MAJOR     \"83\"\n\n#   - ${varPrefix}_PATCH_SET \"2\"\n\n#   - ${varPrefix}_COMMITS   \"2302\"\n\n#   - ${varPrefix}_HASH      \"6d3a71e\"\n\n#   - ${varPrefix}_BRANCH    \"develop\"\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Concatenates Spring version string parts to form a full version specifier.\n\n# @see parse_spring_version\n\n# sample input:\n\n#   - major    \"0.82\"\n\n#   - minor    \"7\"\n\n#   - patchSet \"1\"\n\n#   - commits  \"2302\"\n\n#   - hash     \"6d3a71e\"\n\n# sample output: \"0.82.7.1-2302-g6d3a71e\"\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Sets res_var to TRUE if version is a Spring release version specifier,\n\n# as oposed to a non-release/development version.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Gets the version from a text file.\n\n# (actually just reads the text file content into a variable)\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# unset the vars\n",
        "Line" : 114,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Gets the version for a source directory, either from GIT,\n\n# or if that fails (for example if it is not a git repository,\n\n# as is the case when using a tarball), from the VERSION file.\n\n# Creates a FATAL_ERROR on failure.\n\n# Sets the following vars:\n\n# - ${prefix}_VERSION\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# unset the vars\n",
        "Line" : 141,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# Try to fetch version through git\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Fetch git version info\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# We always want the long git-describe output on non-releases\n\n# for example: 83.0.1-0-g1234567\n",
        "Line" : 162,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# Try to fetch version through VERSION file\n",
        "Line" : 183,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#TestVersion()\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "rts/builds/CMakeLists.txt" : {
      "ObjectId" : "09b1480de54e3ab9ff966ccd6aa08e524ecfecee",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### builds\n\n#\n\n# Macros and functions defined in this file:\n\n# * create_engine_build_and_install_target\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Only install the given engine target executable & dependencies\n\n# example:\n\n# \tcreate_engine_build_and_install_target(headless)\n\n# ->\n\n# \tmake spring-headless\n\n# \tmake install-spring-headless\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# relative source path, eg: \"rts/builds/default\"\n",
        "Line" : 17,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Create a custom meta build target\n",
        "Line" : 34,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# This also works for custom targets\n",
        "Line" : 41,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Only install spring-<targetName> executable & dependencies\n",
        "Line" : 45,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# allow easy switching of the default engine\n",
        "Line" : 59,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Create shortcuts\n\n# * make spring\n\n# * make install-spring\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# This also works for custom targets\n",
        "Line" : 65,
        "CharPositionInLine" : 48
      },
      "9" : {
        "Text" : "# This also works for custom targets\n",
        "Line" : 66,
        "CharPositionInLine" : 64
      },
      "10" : {
        "Text" : "# This allows us to disable each build type individually at configure stage.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# add default dummy target which is used later on\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "### Add icon and manifest to exe using windres\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Make sure we disable the default manifest generation to prevent conflicts\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# the build targets\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "rts/builds/dedicated/CMakeLists.txt" : {
      "ObjectId" : "05f1e93c5f6ab891cdd184de6b1d70d72cf5681f",
      "LastModified" : "2019-03-09T17:29:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# deactivate signaling-NANs for this library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Place executables and shared libs under \"build-dir/\",\n\n# instead of under \"build-dir/rts/\"\n\n# This way, we have the build-dir structure more like the install-dir one,\n\n# which makes testing spring in the builddir easier, eg. like this:\n\n# cd build-dir\n\n# SPRING_DATADIR=$(pwd) ./spring\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Assemble libraries\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Needed for dynamically loading shared libraries (on some OS)\n",
        "Line" : 37,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Needed for backtrace* on some systems\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Windows:\n\n# We still need these header files,\n\n# even if we are not going to link with SDL.\n\n# We have them available anyway (mingwlibs).\n\n# OS X:\n\n# Cocoa requires the SDL libary, whenever the SDL headers are used,\n\n# due to some #define magic, which is practically impossible to workaround.\n",
        "Line" : 47,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Use a direct copy of the GL and SDL headers,\n\n# as these may not be available on headless systems.\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "### Assemble the incude dirs\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "### Assemble sources\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## LuaUtils::ParseCommand*\n",
        "Line" : 153,
        "CharPositionInLine" : 56
      },
      "10" : {
        "Text" : "# Compile dedicated server executable\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Only build & install spring-dedicated executable & dependencies\n\n# use cases:\n\n# * make spring-dedicated\n\n# * make install-spring-dedicated\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "rts/builds/headless/CMakeLists.txt" : {
      "ObjectId" : "2894b71ff7e2806c4e9073bd68f177b5811c14fb",
      "LastModified" : "2019-03-09T17:29:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Place executables and shared libs under \"build-dir/\",\n\n# instead of under \"build-dir/rts/\"\n\n# This way, we have the build-dir structure more like the install-dir one,\n\n# which makes testing spring in the builddir easier, eg. like this:\n\n# cd build-dir\n\n# SPRING_DATADIR=$(pwd) ./spring\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Windows:\n\n# We still need these header files,\n\n# even if we are not going to link with gl, glu and SDL.\n\n# We have them available anyway (mingwlibs).\n\n# OS X:\n\n# Cocoa requires the SDL libary, whenever the SDL headers are used,\n\n# due to some #define magic, which is practically impossible to workaround.\n",
        "Line" : 18,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Use a direct copy of the GL and SDL headers,\n\n# as these may not be available on headless systems.\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# headlessstubs are our stubs that replace libGL, libGLU, libGLEW, libSDL (yes really!)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "### Build the executable\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# To enable console output/force a console window to open\n",
        "Line" : 55,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "### Install the executable\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Only build & install spring-headless executable & dependencies\n\n# use cases:\n\n# * make spring-headless\n\n# * make install-spring-headless\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "rts/builds/legacy/CMakeLists.txt" : {
      "ObjectId" : "cab6667aa3d9d119442c632495c832eb6c5003e4",
      "LastModified" : "2019-03-09T17:29:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Place executables and shared libs under \"build-dir/\",\n\n# instead of under \"build-dir/rts/\"\n\n# This way, we have the build-dir structure more like the install-dir one,\n\n# which makes testing spring in the builddir easier, eg. like this:\n\n# cd build-dir\n\n# SPRING_DATADIR=$(pwd) ./spring\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Assemble libraries\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# hack to find different named freetype.dll\n",
        "Line" : 39,
        "CharPositionInLine" : 21
      },
      "3" : {
        "Text" : "# dependencies of FreeType\n",
        "Line" : 47,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "### Assemble external incude dirs\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### Build the executable\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "### Install the executable\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "rts/lib/7z/CMakeLists.txt" : {
      "ObjectId" : "0aa63f6d671ecaa567f20a532b42a4dabecfc918",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rts/lib/CMakeLists.txt" : {
      "ObjectId" : "b51a9e9708511cf23353cb031816a17cbdb0b443",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# to change assimp for springs need, see fix_assimp.sh\n\n# sadly still manual changes are needed!\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "rts/lib/assimp/CMakeLists.txt" : {
      "ObjectId" : "a81867dec6dc9dda8557b8be65e162f6045a8d28",
      "LastModified" : "2019-03-09T17:29:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Open Asset Import Library (assimp)\n\n# ----------------------------------------------------------------------\n\n# Copyright (c) 2006-2017, assimp team\n\n# All rights reserved.\n\n#\n\n# Redistribution and use of this software in source and binary forms,\n\n# with or without modification, are permitted provided that the\n\n# following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer in the documentation and/or other\n\n#   materials provided with the distribution.\n\n#\n\n# * Neither the name of the assimp team, nor the names of its\n\n#   contributors may be used to endorse or promote products\n\n#   derived from this software without specific prior\n\n#   written permission of the assimp team.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#----------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Remove when CMake >= 2.8.4 is required\n",
        "Line" : 36,
        "CharPositionInLine" : 33
      },
      "2" : {
        "Text" : "# All supported options ###############################################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define here the needed parameters\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Needed for openddl_parser config, no use of c++11 at this moment\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get the current working branch\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Get the latest abbreviated commit hash of the working branch\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# CONFIGURE_FILE(\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ${CMAKE_CURRENT_LIST_DIR}/revision.h.in\n\n# ${CMAKE_CURRENT_BINARY_DIR}/revision.h\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# )\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# CONFIGURE_FILE(\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ${CMAKE_CURRENT_LIST_DIR}/include/assimp/config.h.in\n\n# ${CMAKE_CURRENT_BINARY_DIR}/include/assimp/config.h\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# )\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Ensure that we do not run into issues like http://www.tcm.phy.cam.ac.uk/sw/inodes64.html on 32 bit linux\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# only necessary for 32-bit linux\n",
        "Line" : 185,
        "CharPositionInLine" : 36
      },
      "15" : {
        "Text" : "# Use GNUInstallDirs for Unix predefined directories\n",
        "Line" : 189,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Grouped compiler settings\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# hide all not-exported symbols\n",
        "Line" : 196,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# enable multi-core compilation with MSVC\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# disable \"elements of array '' will be default initialized\" warning on MSVC2013\n",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# INCLUDE (FindPkgMacros)\n\n# INCLUDE (PrecompiledHeader)\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# If this is an in-source build (CMAKE_SOURCE_DIR == CMAKE_BINARY_DIR),\n\n# write the library/executable files to the respective directories in the\n\n# source tree. During an out-of-source build, however, do not litter this\n\n# directory, since that is probably what the user wanted to avoid.\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Cache these to allow the user to override them manually.\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Only generate this target if no higher-level project already has\n\n# IF (NOT TARGET uninstall)\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# # add make uninstall capability\n\n# CONFIGURE_FILE(\"${CMAKE_CURRENT_SOURCE_DIR}/cmake-modules/cmake_uninstall.cmake.in\" \"${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake\" IMMEDIATE @ONLY)\n\n# add_custom_target(uninstall \"${CMAKE_COMMAND}\" -P \"${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake\")\n",
        "Line" : 275,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# ENDIF()\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# cmake configuration files\n\n# CONFIGURE_FILE(\"${CMAKE_CURRENT_SOURCE_DIR}/assimp-config.cmake.in\"         \"${CMAKE_CURRENT_BINARY_DIR}/assimp-config.cmake\" @ONLY IMMEDIATE)\n\n# CONFIGURE_FILE(\"${CMAKE_CURRENT_SOURCE_DIR}/assimp-config-version.cmake.in\" \"${CMAKE_CURRENT_BINARY_DIR}/assimp-config-version.cmake\" @ONLY IMMEDIATE)\n\n# install(FILES \"${CMAKE_CURRENT_BINARY_DIR}/assimp-config.cmake\"             \"${CMAKE_CURRENT_BINARY_DIR}/assimp-config-version.cmake\" DESTINATION \"${ASSIMP_LIB_INSTALL_DIR}/cmake/assimp-${ASSIMP_VERSION_MAJOR}.${ASSIMP_VERSION_MINOR}\" COMPONENT ${LIBASSIMP-DEV_COMPONENT})\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# FIND_PACKAGE( DirectX )\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Look for system installed irrXML\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Search for external dependencies, and build them from source if not found\n\n# Search for zlib\n\n# IF ( NOT ASSIMP_BUILD_ZLIB )\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# find_package(ZLIB)\n",
        "Line" : 299,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# ENDIF( NOT ASSIMP_BUILD_ZLIB )\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# IF( NOT ZLIB_FOUND )\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# message(STATUS \"compiling zlib from souces\")\n\n# INCLUDE(CheckIncludeFile)\n\n# INCLUDE(CheckTypeSize)\n\n# INCLUDE(CheckFunctionExists)\n\n# # compile from sources\n\n# add_subdirectory(contrib/zlib)\n\n# SET(ZLIB_FOUND 1)\n\n# SET(ZLIB_LIBRARIES zlibstatic)\n\n# SET(ZLIB_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/contrib/zlib ${CMAKE_CURRENT_BINARY_DIR}/contrib/zlib)\n",
        "Line" : 303,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# else(NOT ZLIB_FOUND)\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# ADD_DEFINITIONS(-DASSIMP_BUILD_NO_OWN_ZLIB)\n\n# SET(ZLIB_LIBRARIES_LINKED -lz)\n",
        "Line" : 313,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# ENDIF(NOT ZLIB_FOUND)\n\n# INCLUDE_DIRECTORIES(${ZLIB_INCLUDE_DIR})\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Search for unzip\n\n# use_pkgconfig(UNZIP minizip)\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# ${CMAKE_GENERATOR}\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# pick the correct prebuilt library\n",
        "Line" : 353,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# winsock and winmm are necessary dependencies of melange (this is undocumented, but true.)\n",
        "Line" : 379,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# Check dependencies for assimp_qt_viewer.\n\n# Why here? Maybe user do not want Qt viewer and have no Qt.\n\n# Why assimp_qt_viewer/CMakeLists.txt still contain similar check?\n\n# Because viewer can be build independently of Assimp.\n",
        "Line" : 403,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Generate a pkg-config .pc for the Assimp library.\n\n# CONFIGURE_FILE( \"${PROJECT_SOURCE_DIR}/assimp.pc.in\" \"${PROJECT_BINARY_DIR}/assimp.pc\" @ONLY )\n\n# INSTALL( FILES \"${PROJECT_BINARY_DIR}/assimp.pc\" DESTINATION ${ASSIMP_LIB_INSTALL_DIR}/pkgconfig/ COMPONENT ${LIBASSIMP-DEV_COMPONENT})\n",
        "Line" : 441,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Packing information\n",
        "Line" : 446,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# debian\n",
        "Line" : 471,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 45
    },
    "rts/lib/assimp/code/CMakeLists.txt" : {
      "ObjectId" : "f92d264b5f6eb7dd616fff697c36ce59be215096",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Open Asset Import Library (assimp)\n\n# ----------------------------------------------------------------------\n\n#\n\n# Copyright (c) 2006-2017, assimp team\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# All rights reserved.\n\n#\n\n# Redistribution and use of this software in source and binary forms,\n\n# with or without modification, are permitted provided that the\n\n# following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer in the documentation and/or other\n\n#   materials provided with the distribution.\n\n#\n\n# * Neither the name of the assimp team, nor the names of its\n\n#   contributors may be used to endorse or promote products\n\n#   derived from this software without specific prior\n\n#   written permission of the assimp team.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#----------------------------------------------------------------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Listing and grouping of all the source files.\n\n# 1) Set the file lists for each component\n\n# 2) Create a Source Group for each component, for IDE project orginization\n\n# 3) Add libassimp using the file lists (eliminates duplication of file names between\n\n#    source groups and library command)\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if this variable is set to TRUE, the user can manually disable importers by setting\n\n# ASSIMP_BUILD_XXX_IMPORTER to FALSE for each importer\n\n# if this variable is set to FALSE, the user can manually enable importers by setting\n\n# ASSIMP_BUILD_XXX_IMPORTER to TRUE for each importer\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# macro to add the CMake Option ADD_ASSIMP_IMPORTER_<name> which enables compile of loader\n\n# this way selective loaders can be compiled (reduces filesize + compile time)\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# list of enabled importers\n",
        "Line" : 218,
        "CharPositionInLine" : 33
      },
      "6" : {
        "Text" : "# disabled list (used to print)\n",
        "Line" : 219,
        "CharPositionInLine" : 34
      },
      "7" : {
        "Text" : "# 3DSExporter.h\n\n# 3DSExporter.cpp\n",
        "Line" : 236,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# ObjExporter.h\n\n# ObjExporter.cpp\n",
        "Line" : 396,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# BlenderBMesh.h\n\n# BlenderBMesh.cpp\n\n# BlenderTessellator.h\n\n# BlenderTessellator.cpp\n",
        "Line" : 453,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Check dependencies for glTF importer with Open3DGC-compression.\n\n# RT-extensions is used in \"contrib/Open3DGC/o3dgcTimer.h\" for collecting statistics. Pointed file\n\n# has implementation for different platforms: WIN32, __MACH__ and other (\"else\" block).\n",
        "Line" : 793,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#!TODO: off course is better to remove statistics timers from o3dgc codec. Or propose to choose what to use.\n",
        "Line" : 803,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# VC2010 fixes\n",
        "Line" : 809,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Assimp Files\n",
        "Line" : 835,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# ${Exporter_SRCS}\n",
        "Line" : 839,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# ${Step_SRCS}\n",
        "Line" : 842,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Model Support\n",
        "Line" : 844,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Third-party libraries\n",
        "Line" : 847,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# ${unzip_compile_SRCS}\n\n# ${Poly2Tri_SRCS}\n\n# ${Clipper_SRCS}\n\n# ${openddl_parser_SRCS}\n\n# ${open3dgc_SRCS}\n\n# Necessary to show the headers in the project when using the VC++ generator:\n",
        "Line" : 849,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# in order to prevent DLL hell, each of the DLLs have to be suffixed with the major version and msvc prefix\n",
        "Line" : 889,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# use full version\n",
        "Line" : 912,
        "CharPositionInLine" : 32
      },
      "21" : {
        "Text" : "# Build against external unzip, or add ../contrib/unzip so\n\n# assimp can #include \"unzip.h\"\n",
        "Line" : 920,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Add RT-extension library for glTF importer with Open3DGC-compression.\n",
        "Line" : 929,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# INSTALL( TARGETS assimp\n",
        "Line" : 934,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# LIBRARY DESTINATION ${ASSIMP_LIB_INSTALL_DIR}\n\n# ARCHIVE DESTINATION ${ASSIMP_LIB_INSTALL_DIR}\n\n# RUNTIME DESTINATION ${ASSIMP_BIN_INSTALL_DIR}\n\n# COMPONENT ${LIBASSIMP_COMPONENT})\n",
        "Line" : 935,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# INSTALL( FILES ${PUBLIC_HEADERS} DESTINATION ${ASSIMP_INCLUDE_INSTALL_DIR}/assimp COMPONENT assimp-dev)\n\n# INSTALL( FILES ${COMPILER_HEADERS} DESTINATION ${ASSIMP_INCLUDE_INSTALL_DIR}/assimp/Compiler COMPONENT assimp-dev)\n\n# if (ASSIMP_ANDROID_JNIIOSYSTEM)\n",
        "Line" : 939,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# INSTALL(FILES ${HEADER_PATH}/${ASSIMP_ANDROID_JNIIOSYSTEM_PATH}/AndroidJNIIOSystem.h\n",
        "Line" : 942,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# DESTINATION ${ASSIMP_INCLUDE_INSTALL_DIR}\n\n# COMPONENT assimp-dev)\n",
        "Line" : 943,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# endif(ASSIMP_ANDROID_JNIIOSYSTEM)\n",
        "Line" : 945,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Create the coveralls target.\n",
        "Line" : 974,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# The source files.\n\n# If we should upload.\n",
        "Line" : 976,
        "CharPositionInLine" : 27
      },
      "31" : {
        "Text" : "# (Optional) Alternate project cmake module path.\n",
        "Line" : 978,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 32
    },
    "rts/lib/assimp/contrib/CMakeLists.txt" : {
      "ObjectId" : "362f1653d1c569470eb7035459672a1da0b4622d",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compile internal irrXML only if system is not requested\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "rts/lib/assimp/contrib/irrXML/CMakeLists.txt" : {
      "ObjectId" : "2551637340705b8e211fa2ad333cd13efbd7ebcf",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#install(TARGETS IrrXML\n\n#  ARCHIVE DESTINATION ${ASSIMP_LIB_INSTALL_DIR}\n\n#  COMPONENT ${LIBASSIMP_COMPONENT})\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "rts/lib/gflags/BUILD" : {
      "ObjectId" : "1001aae6b80b881fbf3fb1e6b1b9b40299cbe8e8",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Bazel build file for gflags\n#\n# See INSTALL.md for instructions for adding gflags to a Bazel workspace.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The config.h gets generated to the package directory of\n# GENDIR, and we don't want to put it into the includes\n# otherwise the dependent may pull it in by accident.",
        "Line" : 23,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "rts/lib/gflags/CMakeLists.txt" : {
      "ObjectId" : "0c536dd4df65d2656827b7e1ca8a688e142fa8f1",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## CMake configuration file of gflags project\r\n\n##\r\n\n## This CMakeLists.txt defines some gflags specific configuration variables\r\n\n## using the \"gflags_define\" utility macro. The default values of these variables\r\n\n## can be overridden either on the CMake command-line using the -D option of\r\n\n## the cmake command or in a super-project which includes the gflags source\r\n\n## tree by setting the GFLAGS_<varname> CMake variables before adding the\r\n\n## gflags source directory via CMake's \"add_subdirectory\" command. Only when\r\n\n## the non-cached variable GFLAGS_IS_SUBPROJECT has a value equivalent to FALSE,\r\n\n## these configuration variables are added to the CMake cache so they can be\r\n\n## edited in the CMake GUI. By default, GFLAGS_IS_SUBPROJECT is set to TRUE when\r\n\n## the CMAKE_SOURCE_DIR is not identical to the directory of this CMakeLists.txt\r\n\n## file, i.e., the top-level directory of the gflags project source tree.\r\n\n##\r\n\n## When this project is a subproject (GFLAGS_IS_SUBPROJECT is TRUE), the default\r\n\n## settings are such that only the static single-threaded library is built without\r\n\n## installation of the gflags files. The \"gflags\" target is in this case an ALIAS\r\n\n## library target for the \"gflags_nothreads_static\" library target. Targets which\r\n\n## depend on the gflags library should link to the \"gflags\" library target.\r\n\n##\r\n\n## Example CMakeLists.txt of user project which requires separate gflags installation:\r\n\n##   cmake_minimum_required(VERSION 2.8.12 FATAL_ERROR)\r\n\n##\r\n\n##   project(Foo)\r\n\n##\r\n\n##   find_package(gflags REQUIRED)\r\n\n##\r\n\n##   add_executable(foo src/foo.cc)\r\n\n##   target_link_libraries(foo gflags)\r\n\n##\r\n\n## Example CMakeLists.txt of user project which requires separate single-threaded static gflags installation:\r\n\n##   cmake_minimum_required(VERSION 2.8.12 FATAL_ERROR)\r\n\n##\r\n\n##   project(Foo)\r\n\n##\r\n\n##   find_package(gflags COMPONENTS nothreads_static)\r\n\n##\r\n\n##   add_executable(foo src/foo.cc)\r\n\n##   target_link_libraries(foo gflags)\r\n\n##\r\n\n## Example CMakeLists.txt of super-project which contains gflags source tree:\r\n\n##   cmake_minimum_required(VERSION 2.8.12 FATAL_ERROR)\r\n\n##\r\n\n##   project(Foo)\r\n\n##\r\n\n##   add_subdirectory(gflags)\r\n\n##\r\n\n##   add_executable(foo src/foo.cc)\r\n\n##   target_link_libraries(foo gflags)\r\n\n##\r\n\n## Variables to configure the source files:\r\n\n## - GFLAGS_IS_A_DLL\r\n\n## - GFLAGS_NAMESPACE\r\n\n## - GFLAGS_ATTRIBUTE_UNUSED\r\n\n## - GFLAGS_INTTYPES_FORMAT\r\n\n##\r\n\n## Variables to configure the build:\r\n\n## - GFLAGS_SOVERSION\r\n\n## - GFLAGS_BUILD_SHARED_LIBS\r\n\n## - GFLAGS_BUILD_STATIC_LIBS\r\n\n## - GFLAGS_BUILD_gflags_LIB\r\n\n## - GFLAGS_BUILD_gflags_nothreads_LIB\r\n\n## - GFLAGS_BUILD_TESTING\r\n\n## - GFLAGS_BUILD_PACKAGING\r\n\n##\r\n\n## Variables to configure the installation:\r\n\n## - GFLAGS_INCLUDE_DIR\r\n\n## - GFLAGS_LIBRARY_INSTALL_DIR or LIB_INSTALL_DIR or LIB_SUFFIX\r\n\n## - GFLAGS_INSTALL_HEADERS\r\n\n## - GFLAGS_INSTALL_SHARED_LIBS\r\n\n## - GFLAGS_INSTALL_STATIC_LIBS\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\r\n\n# includes\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\r\n\n# package information\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C language still needed because the following required CMake modules\r\n\n# (or their dependencies, respectively) are not correctly handling\r\n\n# the case where only CXX is enabled.\r\n\n# - CheckTypeSize.cmake (fixed in CMake 3.1, cf. http://www.cmake.org/Bug/view.php?id=14056)\r\n\n# - FindThreads.cmake (--> CheckIncludeFiles.cmake <--)\r\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# shared library ABI version number, can be overridden by package maintainers\r\n\n# using -DGFLAGS_SOVERSION=XXX on the command-line\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# TODO: Change default SOVERSION back to PACKAGE_VERSION_MAJOR with the\r\n\n#       next increase of major version number (i.e., 3.0.0 -> SOVERSION 3)\r\n\n#       The <major>.<minor> SOVERSION should be used for the 2.x releases\r\n\n#       versions only which temporarily broke the API by changing the default\r\n\n#       namespace from \"google\" to \"gflags\".\r\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# when gflags is included as subproject (e.g., as Git submodule/subtree) in the source\r\n\n# tree of a project that uses it, no variables should be added to the CMake cache;\r\n\n# users may set the non-cached variable GFLAGS_IS_SUBPROJECT before add_subdirectory(gflags)\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# prefix for package variables in CMake configuration file\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\r\n\n# options\r\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# maintain binary backwards compatibility with gflags library version <= 2.0,\r\n\n# but at the same time enable the use of the preferred new \"gflags\" namespace\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# cached build options when gflags is not a subproject, otherwise non-cached CMake variables\r\n\n# usage: gflags_define(BOOL <name> <doc> <default> [<subproject default>])\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# NOT GFLAGS_IS_SUBPROJECT\r\n",
        "Line" : 186,
        "CharPositionInLine" : 9
      },
      "12" : {
        "Text" : "# ----------------------------------------------------------------------------\r\n\n# system checks\r\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# used by CheckTypeSize module\r\n",
        "Line" : 220,
        "CharPositionInLine" : 27
      },
      "14" : {
        "Text" : "# the following are used in #if directives not #ifdef\r\n",
        "Line" : 233,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# use of special characters in strings to circumvent bug #0008226\r\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ----------------------------------------------------------------------------\r\n\n# source files - excluding root subdirectory and/or .in suffix\r\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\r\n\n# configure source files\r\n",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# whenever we build a shared library (DLL on Windows), configure the public\r\n\n# headers of the API for use of this library rather than the optionally\r\n\n# also build statically linked library; users can override GFLAGS_DLL_DECL\r\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ----------------------------------------------------------------------------\r\n\n# output directories\r\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# ----------------------------------------------------------------------------\r\n\n# installation directories\r\n",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# The LIB_INSTALL_DIR and LIB_SUFFIX variables are used by the Fedora\r\n\n# package maintainers. Also package maintainers of other distribution\r\n\n# packages need to be able to specify the name of the library directory.\r\n",
        "Line" : 395,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# ----------------------------------------------------------------------------\r\n\n# add library targets\r\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# static vs. shared\r\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# whether or not targets are a DLL\r\n",
        "Line" : 414,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# filename suffix for static libraries on Windows\r\n",
        "Line" : 420,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# multi-threaded vs. single-threaded\r\n",
        "Line" : 426,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# add convenience make target for build of both shared and static libraries\r\n",
        "Line" : 456,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# add ALIAS target for use in super-project, prefer static over shared, single-threaded over multi-threaded\r\n",
        "Line" : 468,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ----------------------------------------------------------------------------\r\n\n# installation rules\r\n\n# file (RELATIVE_PATH INSTALL_PREFIX_REL2CONFIG_DIR \"${CMAKE_INSTALL_PREFIX}/${CONFIG_INSTALL_DIR}\" \"${CMAKE_INSTALL_PREFIX}\")\r\n",
        "Line" : 483,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# ----------------------------------------------------------------------------\r\n\n# support direct use of build tree\r\n",
        "Line" : 521,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# ----------------------------------------------------------------------------\r\n\n# testing - MUST follow the generation of the build tree config file\r\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# ----------------------------------------------------------------------------\r\n\n# packaging\r\n",
        "Line" : 536,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# default package generators\r\n",
        "Line" : 555,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# used package generators\r\n",
        "Line" : 567,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# some package generators (e.g., PackageMaker) do not allow .md extension\r\n",
        "Line" : 572,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# common package information\r\n",
        "Line" : 575,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# RPM package information -- used in cmake/package.cmake.in also for DEB\r\n",
        "Line" : 592,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# system/architecture\r\n",
        "Line" : 604,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# source package settings\r\n",
        "Line" : 637,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# default binary package settings\r\n",
        "Line" : 642,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# generator specific configuration file\r\n\n#\r\n\n# allow package maintainers to use their own configuration file\r\n\n# $ cmake -DCPACK_PROJECT_CONFIG_FILE:FILE=/path/to/package/config\r\n",
        "Line" : 649,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# BUILD_PACKAGING\r\n",
        "Line" : 663,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 43
    },
    "rts/lib/gflags/cmake/execute_test.cmake" : {
      "ObjectId" : "df008cf465e442459f78817b4394890960d3f991",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# sanitize string stored in variable for use in regular expression.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# script arguments\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# set a few environment variables (useful for --tryfromenv)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# execute test command\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# check test result\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "rts/lib/gflags/cmake/utils.cmake" : {
      "ObjectId" : "038baf3363efed3067963154d116cf2e57f4fde1",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Utility CMake functions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## Convert boolean value to 0 or 1\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## Extract version numbers from version string\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## Determine if cache entry exists\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## Add gflags configuration variable\n\n#\n\n# The default value of the (cached) configuration value can be overridden either\n\n# on the CMake command-line or the super-project by setting the GFLAGS_<varname>\n\n# variable. When gflags is a subproject of another project (GFLAGS_IS_SUBPROJECT),\n\n# the variable is not added to the CMake cache. Otherwise it is cached.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## Set property of cached gflags configuration variable\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## Modify value of gflags configuration variable\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## Configure public header files\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## Configure source files with .in suffix\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## Add usage test\n\n#\n\n# Using PASS_REGULAR_EXPRESSION and FAIL_REGULAR_EXPRESSION would\n\n# do as well, but CMake/CTest does not allow us to specify an\n\n# expected exit status. Moreover, the execute_test.cmake script\n\n# sets environment variables needed by the --fromenv/--tryfromenv tests.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "rts/lib/headlessStubs/CMakeLists.txt" : {
      "ObjectId" : "46a48866971c9ad779afa414e2cf9701e87a9e15",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We still need these header files,\n\n# even if we are not going to link with SDL.\n\n# We have them available anyway (mingwlibs).\n",
        "Line" : 8,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Use a direct copy of the GL and SDL headers,\n\n# as these may not be available on headless systems.\n",
        "Line" : 14,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "rts/lib/lua/CMakeLists.txt" : {
      "ObjectId" : "4a6ce64bf4d1cdc7bb59a5d5c37f71ca271181ee",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Spring supplied CMake build file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# deactivate signaling-NANs for this library\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#FIXME: LuaUser.cpp requires glew...\n",
        "Line" : 7,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 3
    },
    "rts/lib/luasocket/CMakeLists.txt" : {
      "ObjectId" : "fe2e857fcfe3942b976d121275be35872263c47d",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Spring supplied CMake build file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "rts/lib/minizip/CMakeLists.txt" : {
      "ObjectId" : "f5d48e2affe67d91c71aa836301d48fa14040d38",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Spring supplied CMake build file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use the system supplied MiniZip library\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Build our own minizip library\n",
        "Line" : 13,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "rts/lib/streflop/CMakeLists.txt" : {
      "ObjectId" : "5e48441d23a385cfaf04acb62196e8e415d0d9e3",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Spring supplied CMake build file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TODO do not use -fPIC for streflop (decreases performance)\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "rts/lib/streflop/libm/flt-32/Makefile" : {
      "ObjectId" : "f4bfb65924297f7e0b5917a74dc6f02bd3424331",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile automatically generated by import.pl\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "230ea318844f7da0ef57388003607b8f6ca6d0d7",
      "LastModified" : "2019-03-09T17:29:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See README.md for usage instructions\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# defines spring_test_compile_fail macro\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#install(TARGETS test_${target} DESTINATION ${BINDIR})\n",
        "Line" : 66,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "################################################################################\n\n### UDPListener\n\n# disabled for travis: https://springrts.com/mantis/view.php?id=5014\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## HACK:\n\n##   the engineSystemNet lib is compiled *without* -DUNIT_TEST\n\n##   it includes UDPConnection which depends on ConfigHandler\n\n##   in normal builds, but fails to link when used as part of\n\n##   UT so we compile it again\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "################################################################################\n\n### ILog\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "################################################################################\n\n### SyncedPrimitive\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "################################################################################\n\n### RectangleOverlapHandler\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "################################################################################\n\n### Float3\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "################################################################################\n\n### Matrix44f\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "################################################################################\n\n### Matrix44fRotation\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "################################################################################\n\n### SpringTime\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "################################################################################\n\n### BitwiseEnum\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# positive tests (should compile fine)\n",
        "Line" : 240,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# negative tests (must not compile)\n",
        "Line" : 244,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "################################################################################\n\n### FileSystem\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "################################################################################\n\n### LuaSocketRestrictions\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "################################################################################\n\n### CREG\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "### CREG LoadSave\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "###\n\n################################################################################\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "################################################################################\n\n### UnitSync\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## -DUNITSYNC is not passed onto VFS code, which references globalConfig\n",
        "Line" : 311,
        "CharPositionInLine" : 3
      },
      "22" : {
        "Text" : "################################################################################\n\n### ThreadPool\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "################################################################################\n\n### Mutex\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "################################################################################\n\n### Ellipsoid\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "################################################################################\n\n### QuadField\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "################################################################################\n\n### Printf\n",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "################################################################################\n\n### SQRT\n",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "################################################################################\n\n### EventClient\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "################################################################################\n\n### SerializeLuaState\n",
        "Line" : 450,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "################################################################################\n",
        "Line" : 472,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "test/headercheck/CMakeLists.txt" : {
      "ObjectId" : "709ae96c6b112ce52ef8f94d70f5f3334f8d387a",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Spring engine (GPL v2 or later), see LICENSE.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#pseudo unique name\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# create test file\n",
        "Line" : 42,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# add library\n",
        "Line" : 44,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "test/tools/CompileFailTest/CMakeLists.txt" : {
      "ObjectId" : "e2d2ff11d80a2879f75a9a7986f7043a069654a8",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# based on Boost's tools/build/CMake/CompileTest/CMakeLists.txt\n\n# URL: http://svn.boost.org/svn/boost/branches/CMake/Boost_1_35_0/tools/build/CMake/CompileTest/CMakeLists.txt\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# helper of spring_test_compile_fail macro\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/tools/CompileFailTest/CompileFailTest.cmake" : {
      "ObjectId" : "153d4f2d20cd0d1791a3db80e5f5041836308e90",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# How does it work?\n\n# 1. We run the `ctest` program and ask it run \"${CMAKE_CURRENT_SOURCE_DIR}/tools/CompileFailTest/CMakeLists.txt\"\n\n#    with SOURCE=${sourcefile}.\n\n# 2. CMake will then create a corresponding Makefile to compile ${sourcefile}.\n\n# 3. `ctest` will then run this Makefile, the compilation should fail now (that's what we want to test)\n\n# 4. with Set_Tests_Properties(\"${testname}\" PROPERTIES WILL_FAIL ON)\n\n#    we told CTest (not the program! the current CMakeFile build target!) that we want the test named \"${testname}\"\n\n#    to fail, so it gets marked as \"Passed\" in summary\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# @brief A macro for compile fail test (to test illegal code)\n\n# based on Boost's BoostTesting.cmake\n\n# URL: http://svn.boost.org/svn/boost/branches/CMake/Boost_1_35_0/tools/build/CMake/BoostTesting.cmake\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Determine the include directories to pass along to the underlying project.\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Add Test\n",
        "Line" : 22,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "ac8feed1a54c036366699804ee8f20a143fc9e5d",
      "LastModified" : "2019-03-09T17:29:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add install-pr-downloader target\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is not part of the official source package\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/DemoTool/CMakeLists.txt" : {
      "ObjectId" : "d11c3671694820fa4e7dfc956e606c4728aac733",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Place executables and shared libs under \"build-dir/\",\n\n# instead of under \"build-dir/my/sub/dir/\"\n\n# This way, we have the build-dir structure more like the install-dir one,\n\n# which makes testing spring in the builddir easier, eg. like this:\n\n# cd build-dir\n\n# SPRING_DATADIR=$(pwd) ./spring\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To enable console output/force a console window to open\n",
        "Line" : 42,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "tools/dirchange/CMakeLists.txt" : {
      "ObjectId" : "d338e780260ea3de59e815786b555fc49e3b059c",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Place executables and shared libs under \"build-dir/\",\n\n# instead of under \"build-dir/my/sub/dir/\"\n\n# This way, we have the build-dir structure more like the install-dir one,\n\n# which makes testing spring in the builddir easier, eg. like this:\n\n# cd build-dir\n\n# SPRING_DATADIR=$(pwd) ./spring\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/unitsync/CMakeLists.txt" : {
      "ObjectId" : "f46a3ca17a75a3386876cca57030ae08a8ceb931",
      "LastModified" : "2019-03-19T22:43:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Place executables and shared libs under \"build-dir/\",\n\n# instead of under \"build-dir/rts/\"\n\n# This way, we have the build-dir structure more like the install-dir one,\n\n# which makes testing spring in the builddir easier, eg. like this:\n\n# cd build-dir\n\n# SPRING_DATADIR=$(pwd) ./spring\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We still need these header files,\n\n# even if we are not going to link with SDL.\n\n# We have them available anyway (mingwlibs).\n",
        "Line" : 23,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Use a direct copy of the GL and SDL headers,\n\n# as these may not be available on headless systems.\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#add_definitions(-DENABLE_DEPRECATED_FUNCTIONS)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## LuaUtils::ParseCommand*\n",
        "Line" : 67,
        "CharPositionInLine" : 54
      },
      "5" : {
        "Text" : "## -DUNITSYNC is not passed onto VFS code, which references globalConfig\n",
        "Line" : 68,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Add list of all exported functions to .def file to prevent decoration\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# HACK unitsync should actually be MODULE (not SHARED),\n\n#   but the python bindings need it as SHARED,\n\n#   to be able to link to it\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# only add this if the submodule is present\n",
        "Line" : 134,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 9
    },
    "tools/unitsync/JavaUnitsyncTest/build.xml" : {
      "ObjectId" : "b00b4a3932dbb9db5841654d271e894aabb9f934",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " You may freely edit this file. See commented blocks below for ",
        "Line" : 2,
        "CharPositionInLine" : 71
      },
      "1" : {
        "Text" : " some examples of how to customize the build. ",
        "Line" : 3,
        "CharPositionInLine" : 54
      },
      "2" : {
        "Text" : " (If you delete it and reopen the project it will be recreated.) ",
        "Line" : 4,
        "CharPositionInLine" : 73
      },
      "3" : {
        "Text" : "\n\n    There exist several targets which are by default empty and which can be \n    used for execution of your tasks. These targets are usually executed \n    before and after some main targets. They are: \n\n      -pre-init:                 called before initialization of project properties\n      -post-init:                called after initialization of project properties\n      -pre-compile:              called before javac compilation\n      -post-compile:             called after javac compilation\n      -pre-compile-single:       called before javac compilation of single file\n      -post-compile-single:      called after javac compilation of single file\n      -pre-compile-test:         called before javac compilation of JUnit tests\n      -post-compile-test:        called after javac compilation of JUnit tests\n      -pre-compile-test-single:  called before javac compilation of single JUnit test\n      -post-compile-test-single: called after javac compilation of single JUunit test\n      -pre-jar:                  called before JAR building\n      -post-jar:                 called after JAR building\n      -post-clean:               called after cleaning build products\n\n    (Targets beginning with '-' are not intended to be called on their own.)\n\n    Example of inserting an obfuscator after compilation could look like this:\n\n        <target name=\"-post-compile\">\n            <obfuscate>\n                <fileset dir=\"${build.classes.dir}\"/>\n            </obfuscate>\n        </target>\n\n    For list of available properties check the imported \n    nbproject/build-impl.xml file. \n\n\n    Another way to customize the build is by overriding existing main targets.\n    The targets of interest are: \n\n      -init-macrodef-javac:     defines macro for javac compilation\n      -init-macrodef-junit:     defines macro for junit execution\n      -init-macrodef-debug:     defines macro for class debugging\n      -init-macrodef-java:      defines macro for class execution\n      -do-jar-with-manifest:    JAR building (if you are using a manifest)\n      -do-jar-without-manifest: JAR building (if you are not using a manifest)\n      run:                      execution of project \n      -javadoc-build:           Javadoc generation\n      test-report:              JUnit report generation\n\n    An example of overriding the target for project execution could look like this:\n\n        <target name=\"run\" depends=\"UnitsyncTest-impl.jar\">\n            <exec dir=\"bin\" executable=\"launcher.exe\">\n                <arg file=\"${dist.jar}\"/>\n            </exec>\n        </target>\n\n    Notice that the overridden target depends on the jar target and not only on \n    the compile target as the regular run target does. Again, for a list of available \n    properties which you can use, check the target you are overriding in the\n    nbproject/build-impl.xml file. \n\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "tools/unitsync/test/CMakeLists.txt" : {
      "ObjectId" : "9b4e579302543a2e281b86920b6134f46ec4a843",
      "LastModified" : "2018-10-02T14:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Place executables and shared libs under \"build-dir/\",\n\n# instead of under \"build-dir/tools/unitsync/test/\"\n\n# This way, we have the build-dir structure more like the install-dir one,\n\n# which makes testing spring in the builddir easier, eg. like this:\n\n# cd build-dir\n\n# SPRING_DATADIR=$(pwd) ./lua2php ...\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#INSTALL(TARGETS lua2php DESTINATION ${BINDIR})\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#INSTALL(TARGETS unitsyncTest DESTINATION ${BINDIR})\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 95,
    "MAKEFILE" : 1,
    "BAZEL" : 1,
    "ANT" : 5,
    "MAVEN" : 2
  },
  "ElapsedTime" : 9483
}