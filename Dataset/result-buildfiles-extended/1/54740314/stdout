{
  "Repository" : "54740314",
  "Revision" : "HEAD",
  "ObjectId" : "f0a0750ca83c0501bd735d24c0c521a5a2c0df14",
  "CommitTime" : "2019-04-17T12:39:57Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "cc4f7b8a510d16342a6cbe00729c61ce6ebc9bdf",
      "LastModified" : "2019-01-16T10:39:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ensure that gmock is built before tests are executed\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add third-party maximum flow algorithms to project\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find programs\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# add coverage anaylsis compile and link flags\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# add cached variable containing parameters for lcov/genhtml\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# custom target to run before tests\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# custom lcov target to run tests\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# get git version description\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# command sequence to gather, clean and generate HTML coverage report\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# top-level target to run tests and generate coverage report\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#URL_MD5 6095876341956f65f9d35939ccea1a9f\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# glob boost sources\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# add a target to generate API documentation with Doxygen\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# add the binary tree to the search path for include files so that we will find GitRevision.h\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# we do need the sha hash to log with build version was used during experiments\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Force to always compile with W4\n",
        "Line" : 210,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# raise warnings as errors\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /WX\")\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# https://msdn.microsoft.com/en-us/library/ms173499.aspx\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# disable all warnings to see whether we can now build in below 1h on appveyor\n",
        "Line" : 223,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "### disable verbose warnings:\n\n# warning C4589: Constructor of abstract class '...' ignores initializer for\n\n# virtual base class '...' (false positive warnings)\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# warning C4505: 'function' : unreferenced local function has been removed\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# warning C4127: conditional expression is constant\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# warning C4458: declaration of '...' hides class member\n",
        "Line" : 233,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# warning C4459: declaration of '...' hides global declaration\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# warning C4702: unreachable code\n",
        "Line" : 237,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# warning C4250: ABC inherits XYZ via dominance\n",
        "Line" : 239,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# warning C4503: decorated name length exceeded, name was truncated\n",
        "Line" : 241,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# disable lots of warnings about \"unsecure\" C runtime function\n",
        "Line" : 243,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# disable \"The POSIX name for this item is deprecated. Instead, use the ISO C\n\n# and C++ conformant name.\", Nope. We will not.\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# disable lots of warnings about \"unsecure\" STL functions\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# windef.h bizzarly defines min and max as macros, unless this is defined.\n",
        "Line" : 250,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 31
    },
    "cmake/modules/CheckSSE4_2.cmake" : {
      "ObjectId" : "ffc2599b4a5fa4d3a566913c2276498d63cf64d0",
      "LastModified" : "2016-09-23T11:22:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check if the CPU provides fast operations\n\n# for popcount, leftmost and rightmost bit\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if we are on a Linux system\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use /proc/cpuinfo to get the information\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#  handle windows\n\n#\tget_filename_component(_vendor_id \"[HKEY_LOCAL_MACHINE\\\\Hardware\\\\Description\\\\System\\\\CentralProcessor\\\\0;VendorIdentifier]\" NAME CACHE)\n\n#\tget_filename_component(_cpu_id \"[HKEY_LOCAL_MACHINE\\\\Hardware\\\\Description\\\\System\\\\CentralProcessor\\\\0;Identifier]\" NAME CACHE)\t\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  handle MacOs\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/CodeCoverage.cmake" : {
      "ObjectId" : "a0b0ef5269ef3cba688e16b06e9dd167a6dcf1ed",
      "LastModified" : "2017-06-19T11:36:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012 - 2015, Lars Bilke\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without modification,\n\n# are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice, this\n\n#    list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its contributors\n\n#    may be used to endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#\n\n#\n\n# 2012-01-31, Lars Bilke\n\n# - Enable Code Coverage\n\n#\n\n# 2013-09-17, Joakim SÃ¶derberg\n\n# - Added support for Clang.\n\n# - Some additional usage instructions.\n\n#\n\n# USAGE:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 0. (Mac only) If you use Xcode 5.1 make sure to patch geninfo as described here:\n\n#      http://stackoverflow.com/a/22404544/80480\n\n#\n\n# 1. Copy this file into your cmake modules path.\n\n#\n\n# 2. Add the following line to your CMakeLists.txt:\n\n#      INCLUDE(CodeCoverage)\n\n#\n\n# 3. Set compiler flags to turn off optimization and enable coverage:\n\n#    SET(CMAKE_CXX_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#\t SET(CMAKE_C_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#\n\n# 3. Use the function SETUP_TARGET_FOR_COVERAGE to create a custom make target\n\n#    which runs your test executable and produces a lcov code coverage report:\n\n#    Example:\n\n#\t SETUP_TARGET_FOR_COVERAGE(\n\n#\t\t\t\tmy_coverage_target  # Name for custom target.\n\n#\t\t\t\ttest_driver         # Name of the test driver executable that runs the tests.\n\n#\t\t\t\t\t\t\t\t\t# NOTE! This should always have a ZERO as exit code\n\n#\t\t\t\t\t\t\t\t\t# otherwise the coverage generation will not complete.\n\n#\t\t\t\tcoverage            # Name of output directory.\n\n#\t\t\t\t)\n\n#\n\n# 4. Build a Debug build:\n\n#\t cmake -DCMAKE_BUILD_TYPE=Debug ..\n\n#\t make\n\n#\t make my_coverage_target\n\n#\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check prereqs\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# NOT GCOV_PATH\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# CHECK VALID COMPILER\n",
        "Line" : 86,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\"\n",
        "Line" : 112,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests.\n\n#\t\t\t\t\t\tMUST return ZERO always, even on errors.\n\n#\t\t\t\t\t\tIf not, no coverage report will be created!\n\n# Param _outputname     lcov output is generated as _outputname.info\n\n#                       HTML report is generated in _outputname/index.html\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 127,
        "CharPositionInLine" : 9
      },
      "8" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 131,
        "CharPositionInLine" : 9
      },
      "9" : {
        "Text" : "# Setup target\n",
        "Line" : 138,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Run tests\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 157,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE\n",
        "Line" : 163,
        "CharPositionInLine" : 14
      },
      "15" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests\n\n# Param _outputname     cobertura output is generated as _outputname.xml\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# NOT PYTHON_EXECUTABLE\n",
        "Line" : 174,
        "CharPositionInLine" : 9
      },
      "17" : {
        "Text" : "# NOT GCOVR_PATH\n",
        "Line" : 178,
        "CharPositionInLine" : 9
      },
      "18" : {
        "Text" : "# Run tests\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Running gcovr\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 191,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE_COBERTURA\n",
        "Line" : 197,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 22
    },
    "cmake/modules/FindSparseHash.cmake" : {
      "ObjectId" : "01513a2681a81a3601b2d0e3ad07415e8d224801",
      "LastModified" : "2017-06-19T11:36:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Taken from: https://code.google.com/p/pcsx2/source/browse/trunk/cmake/FindSparseHash.cmake?r=5484\n\n# Try to find SparseHash\n\n# Once done, this will define\n\n#\n\n# SPARSEHASH_FOUND - system has SparseHash\n\n# SPARSEHASH_INCLUDE_DIR - the SparseHash include directories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set SPARSEHASH_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "c8d27f2e8ce494c96404086ce58982239916a44c",
      "LastModified" : "2017-06-19T11:36:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "cmake/modules/gmock.cmake" : {
      "ObjectId" : "9fa436784fd6902a7d223810a0d5b0c9b8dcb782",
      "LastModified" : "2017-06-19T11:36:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# taken from http://johnlamp.net/cmake-tutorial-5-functionally-improved-testing.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "kahypar/application/CMakeLists.txt" : {
      "ObjectId" : "82735421709134125b30ced76fa8ca0960a3ce9e",
      "LastModified" : "2017-06-19T11:36:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/CMakeLists.txt" : {
      "ObjectId" : "1c4c0eebb62d2894ddb0e937fe7b338148b9e9ad",
      "LastModified" : "2019-01-16T10:39:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "f39ec78089808c508c134cfe2df3f256fa5f90d9",
      "LastModified" : "2018-11-05T12:47:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/datastructure/CMakeLists.txt" : {
      "ObjectId" : "97449659a6517872ae65b7e6b5daeb5de27ae4ba",
      "LastModified" : "2018-02-20T10:57:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/end_to_end/CMakeLists.txt" : {
      "ObjectId" : "ec317c8eba90582863b22efec72a07bbb71b8ee5",
      "LastModified" : "2018-05-08T14:51:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# exclude integration tests from default build target\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/interface/CMakeLists.txt" : {
      "ObjectId" : "34d42c0ca6a65c44e5e135fb651b073602907747",
      "LastModified" : "2019-02-20T12:47:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This test needs test instance files, so we copy them to the corresponding build dir\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/io/CMakeLists.txt" : {
      "ObjectId" : "93dafdfbdd51bd5b440a869cdaab3413709ad54b",
      "LastModified" : "2018-05-08T14:51:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This test needs test instance files, so we copy them to the corresponding build dir\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/meta/CMakeLists.txt" : {
      "ObjectId" : "eaceb363bf7c78c935907eca1fe6409fd1569b19",
      "LastModified" : "2017-06-19T11:36:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/partition/CMakeLists.txt" : {
      "ObjectId" : "974571ace22c8b4573ac79a848f48aad77160a79",
      "LastModified" : "2018-05-08T14:51:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/partition/coarsening/CMakeLists.txt" : {
      "ObjectId" : "f0ba1fe31b5421c3a9757a1241fbca726bf62963",
      "LastModified" : "2017-06-19T11:36:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/partition/evolutionary/CMakeLists.txt" : {
      "ObjectId" : "5d7caa86bb170c970f963657af89206523331217",
      "LastModified" : "2018-05-08T14:51:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/partition/initial_partitioning/CMakeLists.txt" : {
      "ObjectId" : "04144bf1b53adefe48af402162173058ab4199b8",
      "LastModified" : "2018-05-08T14:51:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/partition/preprocessing/CMakeLists.txt" : {
      "ObjectId" : "44db8d5061f3b2f5d95db5cfde86834253d2133c",
      "LastModified" : "2018-05-08T14:51:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/partition/refinement/CMakeLists.txt" : {
      "ObjectId" : "388ef4958b24baa575c96c9843293ea892a4d3cf",
      "LastModified" : "2018-11-05T12:47:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/regression/CMakeLists.txt" : {
      "ObjectId" : "584c9f75089b4869cd0e7dff2bad9a8c403da68e",
      "LastModified" : "2018-05-08T14:51:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# exclude delta tests from default build target\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/utils/CMakeLists.txt" : {
      "ObjectId" : "eb0885cd7f47506f41de7dd6b169c10e667f7b0f",
      "LastModified" : "2018-05-08T14:51:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "0a0cebaeaef265e1e11345423c66d566426c8147",
      "LastModified" : "2018-05-08T14:51:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This test needs test instance files, so we copy them to the corresponding build dir\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set_source_files_properties(hmetis_lib_test.cc PROPERTIES COMPILE_FLAGS -m32)\n\n#add_executable(hmetis_lib_test hmetis_lib_test.cc)\n\n#set_target_properties(hmetis_lib_test PROPERTIES LINK_FLAGS -m32)\n\n#target_link_libraries(hmetis_lib_test \"/home/schlag/hmetis-1.5-linux/libhmetis.a\")\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 23
  },
  "ElapsedTime" : 1986
}