{
  "Repository" : "82623576",
  "Revision" : "HEAD",
  "ObjectId" : "2b85f4983bf428f27c8f90d825b2b0be50766529",
  "CommitTime" : "2019-04-19T04:51:40Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "dc09b101d02b79c2d17db55d8d67cdb768433de2",
      "LastModified" : "2019-03-26T22:59:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We require a recent version of cmake and automatically\n\n# install a compatible version when using the cmake lists,\n\n# if one is not already present.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Libraries linked via full path no longer produce linker search paths.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Preprocessor definition values are now escaped automatically.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# for cmake 3.0\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Generate a compilation database for use with automated tools like IDE/editor\n\n# plugins. See http://clang.llvm.org/docs/JSONCompilationDatabase.html\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Determine where additional Turi specific cmake modules are\n\n# defined\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#**************************************************************************/\n\n#*                                                                        */\n\n#*                     Global Link and Include Flags                      */\n\n#*                                                                        */\n\n#**************************************************************************/\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#**************************************************************************\n\n#*                                                                        *\n\n#*                       Platform Specific Stuff                          *\n\n#*                                                                        *\n\n#**************************************************************************\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Modify COMPILER_FLAGS instead of setting CMAKE_OSX_DEPLOYMENT_TARGET so\n\n# that this setting propagates to external dependencies.\n",
        "Line" : 159,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Core ML is only present on macOS 10.13 or higher.\n\n# Logic reversed to get around what seems to be a CMake bug.\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Core ML only supports batch inference on macOS 10.14 or higher\n\n# Logic reversed to get around what seems to be a CMake bug.\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# GPU-accelerated training with MPS backend requires macOS 10.14 or higher\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# CoreML MLCustomModel requires macOS 10.14 or higher\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# for whatever reason on windows the compiler identification is an empty string\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Separate variable so that cython's CMakeLists.txt can use it too\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#**************************************************************************/\n\n#*                                                                        */\n\n#*                             Common Defines                             */\n\n#*                                                                        */\n\n#**************************************************************************/\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# These determine the maximum number of arguments for extension functions\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Workaround for https://svn.boost.org/trac10/ticket/10443 in Boost 1.68.0\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#**************************************************************************/\n\n#*                                                                        */\n\n#*                          Apple Legal Defines                           */\n\n#*                                                                        */\n\n#**************************************************************************/\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#**************************************************************************/\n\n#*                                                                        */\n\n#*                      Force Disable OpenMP                              */\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#*                                                                        */\n\n#**************************************************************************/\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#**************************************************************************/\n\n#*                                                                        */\n\n#*                      coremltools                                       */\n\n#*                                                                        */\n\n#**************************************************************************/\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#**************************************************************************/\n\n#*                                                                        */\n\n#*             Adapt Compiler and Linker Flags to the system              */\n\n#*                                                                        */\n\n#**************************************************************************/\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# non-clang\n",
        "Line" : 349,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Shared compiler flags used by all builds (debug, profile, release)\n\n# Allow COMPILER_FLAGS to be used as options from the ./configure without\n\n# forcing all the other options I want to add to be lost\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# clang 9.0.0 and earlier will warn (error with -Werror) on unused -pthread during linking\n\n# so adding only to compile options is what we need.\n",
        "Line" : 367,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Disable address space randomization for OSX lion and above\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# if mac, but not using clang, we should use the clang linker anyway since\n\n# the gcc linker seems to cause problems. Especially with -march=native\n\n#\n\n# see:\n\n# http://stackoverflow.com/questions/9840207/how-to-use-avx-pclmulqdq-on-mac-os-x-lion\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Install time rpath gets highest priority, we should always use rpath relative to the installation location first.\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# For whatever reason just adding -rpath=@loader_path has issues on 10.9 but not 10.10\n\n# Here are two possible alternatives that \"may\" fix the issue. If they fix it\n\n# I am not sure which line was the one which actually worked\n",
        "Line" : 396,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# LINUX\n",
        "Line" : 404,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# if (EXISTS ${CMAKE_SOURCE_DIR}/deps/local/lib64)\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# endif()\n",
        "Line" : 414,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# if (EXISTS ${CMAKE_SOURCE_DIR}/deps/local/lib)\n",
        "Line" : 416,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# endif()\n",
        "Line" : 420,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Old CPU archetecture; enables SSE up to 4.2 + popcnt + other instructions. \n",
        "Line" : 429,
        "CharPositionInLine" : 24
      },
      "36" : {
        "Text" : "# check if MTUNE is set\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Reommended way of setting this for generic distributions\n",
        "Line" : 435,
        "CharPositionInLine" : 30
      },
      "38" : {
        "Text" : "# If profiling mode is enabled then additional profiling flags are set for\n\n# the compiler\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Set up the 128 bit integer support; defines INT128_FLAGS\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#disable Wno-unused-local-typedefs if available\n",
        "Line" : 452,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#disable gcc-only flags on clang (newer clang with XCode 5.1 errors on these)\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# on windows due to some string table limitations + template\n\n# insanities, on -O0 we run out of string table entries or something\n\n# like that.\n",
        "Line" : 487,
        "CharPositionInLine" : 8
      },
      "43" : {
        "Text" : "# Set the debug flags\n",
        "Line" : 493,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#**************************************************************************/\n\n#*                                                                        */\n\n#*       Some C++ Implementation Oddities between libc++ and stdc++       */\n\n#*                                                                        */\n\n#**************************************************************************/\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#**************************************************************************/\n\n#*                                                                        */\n\n#*                              Final Flags                               */\n\n#*                                                                        */\n\n#**************************************************************************/\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#**************************************************************************/\n\n#*                                                                        */\n\n#*         Definitions and options to support dependencies                */\n\n#*                                                                        */\n\n#**************************************************************************/\n",
        "Line" : 569,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "##############################################################################\n\n##############################################################################\n\n##############################################################################\n\n##############################################################################\n\n##############################################################################\n\n##############################################################################\n",
        "Line" : 578,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# We are done with the system configuration. Now everything else below here\n\n# is about getting dependencies and macros and various build behaviors\n",
        "Line" : 585,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "##############################################################################\n\n##############################################################################\n\n##############################################################################\n\n##############################################################################\n\n##############################################################################\n\n##############################################################################\n",
        "Line" : 588,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# some useful utilities\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# This is an internal function and should not be used\n\n# Usage:\n\n# make_target_impl(target compile_flags sources requirements is_library SHARED)\n\n#\n\n# Example:\n\n# make_target_impl(fileio \"-fPIC\"\n\n#                   \"asyncurl.cpp;sysutils.cpp\"\n\n#                   \"logger;dl;pthread;z\"\n\n#                   TRUE FALSE)\n\n#\n\n# This generates a target library/binary with the given name. The optional\n\n# compile_flags are appended to the target compile flags. \"-fPIC\" is ALWAYS\n\n# added for libraries. \"sources\" is a list listing all the library/binary\n\n# source files.  \"requirements\" is a list listing all the libraries, and\n\n# builtins this target depends on. IS_LIBRARY must be \"TRUE\" or \"FALSE\"\n\n#\n\n# if DYNAMIC is true, a dynamic library is built.\n\n#\n\n# Boost, pthread is always added as a default dependency. OpenMP is added\n\n# when possible.\n",
        "Line" : 602,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# create the target\n",
        "Line" : 623,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# default dependencies\n",
        "Line" : 628,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# add a custom property to the target listing its dependencies\n",
        "Line" : 634,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "#windows is always fPIC\n",
        "Line" : 640,
        "CharPositionInLine" : 6
      },
      "56" : {
        "Text" : "# TODO we can link the requirements from here when target_link_libraries\n\n# works with OBJECT library targets (requires CMake 3.12)\n\n# See https://gitlab.kitware.com/cmake/cmake/issues/14778\n\n# For now, do nothing.\n",
        "Line" : 656,
        "CharPositionInLine" : 6
      },
      "57" : {
        "Text" : "# make sure boost is always built\n",
        "Line" : 666,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# This is an external function\n\n# Usage:\n\n#    make_library(NAME target\n\n#                 SOURCES a.cpp b.cpp\n\n#                 REQUIRES libx liby\n\n#                 MAC_REQUIRES libz libzz\n\n#                 LINUX_REQUIRES libk libj\n\n#                 [SHARED] [OUTPUT_NAME xxxx] [SHARED_ALL_DEFINED]\n\n#                 [OBJECT]\n\n#                 )\n\n# Example:\n\n#\n\n# make_library(NAME fileio\n\n#              SOURCES\n\n#                asyncurl.cpp\n\n#                sysutils.cpp\n\n#                wsconn.cpp\n\n#                s3_api.cpp\n\n#                hdfs.cpp\n\n#               REQUIRES\n\n#                 logger dl pthread z curl xml2 openssl\n\n#               MAC_REQUIRES\n\n#                 iconv\n\n#                 )\n\n# This generates a library with the provided target name.\n\n#\n\n# NAME and SOURCES must be specified.\n\n# REQUIRES lists all dependent libraries. These can be:\n\n#   - other libraries built by the the turicreate build system\n\n#   - builtin libraries\n\n#   - system libraries\n\n# MAC_REQUIRES lists all dependent libraries which are included only on Mac.\n\n# LINUX_REQUIRES lists all dependent libraries which are included only on Linux.\n\n# SHARED will build a shared library instead of a static library\n\n# EXTERNAL_VISIBILITY will make the symbols be publicly visible. Default is hidden\n\n# SHARED_ALL_DEFINED will require shared libraries to have all symbols defined\n\n# OBJECT will build an object library instead of a static library\n\n#\n\n# All other targets which depends on this library (using the \"requires\" function)\n\n# will automatically include all recursive dependencies.\n\n#\n\n# Boost, pthread is always added as a default dependency. OpenMP is added\n\n# when possible.\n",
        "Line" : 671,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# do nothing\n",
        "Line" : 768,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# set_property(TARGET ${NAME} APPEND_STRING PROPERTY LINK_FLAGS \" -static-libstdc++ \")\n",
        "Line" : 779,
        "CharPositionInLine" : 6
      },
      "61" : {
        "Text" : "# This is an external function\n\n# Usage:\n\n#    make_empty_library(NAME target\n\n#                       REQUIRES libx liby\n\n#                       MAC_REQUIRES libz libzz\n\n#                       LINUX_REQUIRES libk libj\n\n#                       [OUTPUT_NAME xxxx])\n\n# Example:\n\n#\n\n# make_empty_library(NAME graph\n\n#               REQUIRES\n\n#                 logger dl pthread z curl xml2 openssl\n\n#               MAC_REQUIRES\n\n#                 iconv\n\n#                 )\n\n# This generates an empty target with the provided target name, but all\n\n# other targets which require this target will inherit all REQUIRED\n\n# dependencies.\n\n#\n\n# NAME must be specified\n\n# REQUIRES lists all dependent libraries. These can be:\n\n#   - other libraries built by the the turicreate build system\n\n#   - builtin libraries\n\n#   - system libraries\n\n# MAC_REQUIRES lists all dependent libraries which are included only on Mac.\n\n# LINUX_REQUIRES lists all dependent libraries which are included only on Linux.\n\n#\n\n# All other targets which depends on this library (using the \"requires\" function)\n\n# will automatically include all recursive dependencies.\n",
        "Line" : 802,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# This is an external function\n\n# Usage:\n\n#    make_binary(NAME target\n\n#                SOURCES a.cpp b.cpp\n\n#                REQUIRES libx liby\n\n#                MAC_REQUIRES libz libzz\n\n#                LINUX_REQUIRES libk libj)\n\n# Example:\n\n#\n\n# make_binary(NAME wscmd\n\n#              SOURCES\n\n#                wscmd.cpp\n\n#              REQUIRES\n\n#                fileio\n\n#             )\n\n#\n\n# This generates a binary with the provided target name.\n\n#\n\n# NAME and SOURCES must be specified.\n\n# REQUIRES lists all dependent libraries. These can be:\n\n#   - other libraries built by the the turicreate build system\n\n#   - builtin libraries\n\n#   - system libraries\n\n# MAC_REQUIRES lists all dependent libraries which are included only on Mac.\n\n# LINUX_REQUIRES lists all dependent libraries which are included only on Linux.\n\n# OUTPUT_NAME is the final output name of the target. Defaults to the target name\n\n# if not specified\n\n#\n\n# All other targets which depends on this library (using the \"requires\" function)\n\n# will automatically include all recursive dependencies.\n\n#\n\n# Boost, pthread is always added as a default dependency. OpenMP is added\n\n# when possible.\n",
        "Line" : 855,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# this is really annoying\n\n# There really isn't a clean way to this, but on Mac Anaconda's libpython2.7.dylib\n\n# has it's install name set to just libpython2.7.dylib and not @rapth/libpython2.7.dylib\n\n# We need to patch this.\n",
        "Line" : 932,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# set_property(TARGET ${NAME} APPEND_STRING PROPERTY LINK_FLAGS \"-static-libstdc++\")\n",
        "Line" : 943,
        "CharPositionInLine" : 6
      },
      "65" : {
        "Text" : "# Same as target_compile_options, but tests for whether the flag is known\n\n# to the compiler before proceeding.\n",
        "Line" : 958,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# This is an external function\n\n# Usage:\n\n#    make_copy_target(target\n\n#                TARGETS [list of targets]\n\n#                FILES [list of files (absolute path)]\n\n#                DIRECTORIES [list of directories (absolute path)\n\n# Example:\n\n# make_copy_target(NAME target\n\n#                TARGETS a b\n\n#                FILES ${CMAKE_SOURCE_DIR}/pika/a.txt\n\n#             )\n\n#\n\n# This copies all files produced by targets in TARGETS to the output binary\n\n# directory as well as all files in FILES.\n\n#\n\n# TARGETS may reference an existing copy_target in which case all files copied\n\n# by the copy target will also be copied.\n\n#\n\n# For instance:\n\n# make_copy_target(NAME spark_pipe_wrapper\n\n#                FILES ${CMAKE_CURRENT_SOURCE_DIR}/spark_pipe_wrapper.py)\n\n#\n\n# Then in some other location\n\n#\n\n# make_copy_target(NAME release_binaries\n\n#                TARGETS spark_pipe_wrapper)\n\n#\n\n# Warning: The recursive reference is slightly brittle since it requires the\n\n# referenced target to exist prior to referencing it.\n\n# This is potentially fixable with complicated generator expressions. but... urgh.\n",
        "Line" : 967,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# No rsync present; copy the old fashioned way with multiple cp commands\n",
        "Line" : 1005,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# Switched away from cmake -E commands because they don't work right\n\n# on Windows. Also Windows doesn't overwrite when copying by default\n",
        "Line" : 1007,
        "CharPositionInLine" : 12
      },
      "69" : {
        "Text" : "# Switched away from cmake -E commands because they don't work right\n\n# on Windows. Also Windows doesn't overwrite when copying by default\n",
        "Line" : 1020,
        "CharPositionInLine" : 12
      },
      "70" : {
        "Text" : "# Make sure the files and directories get included in all_target_locations\n",
        "Line" : 1038,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "#package is of the form ExternalProjectXXX\"\n",
        "Line" : 1087,
        "CharPositionInLine" : 8
      },
      "72" : {
        "Text" : "# for build-time generated source code\n",
        "Line" : 1107,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Collate all the object targets shared among static and shared library targets\n\n# These are used by C API, unity_shared, etc.\n",
        "Line" : 1115,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Also list all dependencies (including transitive dependencies)\n",
        "Line" : 1123,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# External dependencies (built from src/external)\n",
        "Line" : 1125,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# Then our own source code\n",
        "Line" : 1133,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "# TODO we can remove the requirements from here when target_link_libraries\n\n# works with OBJECT library targets (requires CMake 3.12)\n\n# See https://gitlab.kitware.com/cmake/cmake/issues/14778\n",
        "Line" : 1190,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# External dependencies (from deps)\n",
        "Line" : 1194,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# object targets that should be included in all APPLE and non-APPLE\n\n# platforms except for iOS\n",
        "Line" : 1244,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 80
    },
    "cmake/FindCython.cmake" : {
      "ObjectId" : "564360a9603db93d9ae5e7fbe33097a4abc3821e",
      "LastModified" : "2017-12-07T20:14:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the Cython compiler.\n\n#\n\n# This code sets the following variables:\n\n#\n\n#  CYTHON_EXECUTABLE\n\n#\n\n# See also UseCython.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Kitware, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#=============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use the Cython executable that lives next to the Python executable\n\n# if it is a local installation.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindInt128.cmake" : {
      "ObjectId" : "10aac9274dab17fd3f6ef6577423fb8db24762cd",
      "LastModified" : "2017-12-07T20:14:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - this module looks for 128 bit integer support.  It sets up the\n\n# type defs in util/int128_types.hpp.  Simply add ${INT128_FLAGS} to the\n\n# compiler flags.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/MergeStaticLibraries.cmake" : {
      "ObjectId" : "14174c3db6227538f5943e493cf27888064b3699",
      "LastModified" : "2017-12-07T20:14:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# merge_static_libraries([library name] REQUIRES [bunch of stuff] [DIRECT])\n\n# \n\n# This is performed in 2 stages.\n\n# Stage 1 collects the set of archives by building a dummy executable in them\n\n# but intercepting the link stage to find the set of archives.\n\n#\n\n# Stage 2 builds the actual shared library. It merges the archives listed\n\n# by stage 1 and uses that to put together the shared library \n\n#\n\n# Stage 1:\n\n# .1 What we do first is to identify all the archive files. That is done by\n\n#   creating an executable. essentiallly generating make_executable(REQUIRES\n\n#   [bunch of stuff]) using a dummy cpp file.  \n\n# 2. We then intercept the link stage using (RULE_LAUNCH_LINK)\n\n#    redirecting it to a shell script called dump_library_list.sh\n\n# 3. dump_library_list (aside from completing the link), also generates 2\n\n# files. \n\n#     collect_archives.txt --> contains all libraries which live inside the\n\n#                               build directory \n\n#     collect_libs.txt --> contains all libraries which live elsewhere.\n\n#\n\n#  Stage 2:\n\n#  1. The 2nd stage, does the same thing, create a dummy file, and generates\n\n#      make_library(REQUIRES [bunch of stuff])\n\n#  2.  And then once again, intercepts the link stage redirecting it to a\n\n#      shell script called collect_archive.sh\n\n#  3. This script will then:\n\n#     - unpack all the archives in collect_archives.txt, merging them into \n\n#       a single library called collect.a\n\n#     - appends the contents of collect_libs.txt \n\n#     - combine it with the original shared library link line\n\n#       as well as instructing the linker to take the complete contents\n\n#       of collect.a (ex: -Wl,-whole-archive collect.a -Wl,-no-whole-archive)\n\n#     - run libtool to create one full library \n\n#\n\n# If DIRECT is set, only direct dependencies in REQUIRES collected. Recursive\n\n# dependencies are not collected. \n\n#\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if we are only collecting direct dependencies, \n\n# compile a string of all the targets targets\n",
        "Line" : 59,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "# add a custom command after link to override the collected list\n",
        "Line" : 75,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 3
    },
    "cmake/RemovePythonSourceTree.cmake" : {
      "ObjectId" : "70722050c5fcf1edf6571c6d8ea5365d65e982b9",
      "LastModified" : "2017-12-07T20:14:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note: when executed in the build dir, then CMAKE_CURRENT_SOURCE_DIR is the\n\n# build dir.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/ReplicatePythonSourceTree.cmake" : {
      "ObjectId" : "9f28fb32f82c2b5bb7e80bef542bad5458073e5a",
      "LastModified" : "2017-12-07T20:14:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note: when executed in the build dir, then CMAKE_CURRENT_SOURCE_DIR is the\n\n# build dir.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/SharedLibraryFromStatic.cmake" : {
      "ObjectId" : "3f2b6b235aeb071fd10dcbeffb6f0bea95d1d99e",
      "LastModified" : "2018-05-02T22:35:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shared_library_from_static([library name] REQUIRES [bunch of stuff] [DIRECT])\n\n# \n\n# This is performed in 2 stages.\n\n# Stage 1 collects the set of archives by building a dummy executable in them\n\n# but intercepting the link stage to find the set of archives.\n\n#\n\n# Stage 2 builds the actual shared library. It merges the archives listed\n\n# by stage 1 and uses that to put together the shared library \n\n#\n\n# Stage 1:\n\n# .1 What we do first is to identify all the archive files. That is done by\n\n#   creating an executable. essentiallly generating make_executable(REQUIRES\n\n#   [bunch of stuff]) using a dummy cpp file.  \n\n# 2. We then intercept the link stage using (RULE_LAUNCH_LINK)\n\n#    redirecting it to a shell script called dump_library_list.sh\n\n# 3. dump_library_list (aside from completing the link), also generates 2\n\n# files. \n\n#     collect_archives.txt --> contains all libraries which live inside the\n\n#                               build directory \n\n#     collect_libs.txt --> contains all libraries which live elsewhere.\n\n#\n\n#  Stage 2:\n\n#  1. The 2nd stage, does the same thing, create a dummy file, and generates\n\n#      make_library(REQUIRES [bunch of stuff])\n\n#  2.  And then once again, intercepts the link stage redirecting it to a\n\n#      shell script called collect_archive.sh\n\n#  3. This script will then:\n\n#     - unpack all the archives in collect_archives.txt, merging them into \n\n#       a single library called collect.a\n\n#     - appends the contents of collect_libs.txt \n\n#     - combine it with the original shared library link line\n\n#       as well as instructing the linker to take the complete contents\n\n#       of collect.a (ex: -Wl,-whole-archive collect.a -Wl,-no-whole-archive)\n\n#     -  complete the link \n\n#\n\n# If DIRECT is set, only direct dependencies in REQUIRES collected. Recursive\n\n# dependencies are not collected. \n\n#\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if we are only collecting direct dependencies, \n\n# compile a string of all the targets targets\n",
        "Line" : 60,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "# add a custom command after link to override the collected list\n",
        "Line" : 86,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 3
    },
    "cmake/UseCython.cmake" : {
      "ObjectId" : "30ce29207070ea0e3065abe9f4bbffa21691865a",
      "LastModified" : "2018-07-03T00:59:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define a function to create Cython modules.\n\n#\n\n# For more information on the Cython project, see http://cython.org/.\n\n# \"Cython is a language that makes writing C extensions for the Python language\n\n# as easy as Python itself.\"\n\n#\n\n# This file defines a CMake function to build a Cython Python module.\n\n# To use it, first include this file.\n\n#\n\n#   include( UseCython )\n\n#\n\n# Then call cython_add_module to create a module.\n\n#\n\n#   cython_add_module( <module_name> <src1> <src2> ... <srcN> )\n\n#\n\n# To create a standalone executable, the function\n\n#\n\n#   cython_add_standalone_executable( <executable_name> [MAIN_MODULE src1] <src1> <src2> ... <srcN> )\n\n#\n\n# To avoid dependence on Python, set the PYTHON_LIBRARY cache variable to point\n\n# to a static library.  If a MAIN_MODULE source is specified, \n\n# the \"if __name__ == '__main__':\" from that module is used as the C main() method\n\n# for the executable.  If MAIN_MODULE, the source with the same basename as\n\n# <executable_name> is assumed to be the MAIN_MODULE.\n\n#\n\n# Where <module_name> is the name of the resulting Python module and\n\n# <src1> <src2> ... are source files to be compiled into the module, e.g. *.pyx,\n\n# *.py, *.c, *.cxx, etc.  A CMake target is created with name <module_name>.  This can\n\n# be used for target_link_libraries(), etc.\n\n#\n\n# The sample paths set with the CMake include_directories() command will be used\n\n# for include directories to search for *.pxd when running the Cython complire.\n\n#\n\n# Cache variables that effect the behavior include:\n\n#\n\n#  CYTHON_ANNOTATE\n\n#  CYTHON_NO_DOCSTRINGS\n\n#  CYTHON_FLAGS\n\n#\n\n# Source file properties that effect the build process are\n\n#\n\n#  CYTHON_IS_CXX\n\n#\n\n# If this is set of a *.pyx file with CMake set_source_files_properties()\n\n# command, the file will be compiled as a C++ file.\n\n#\n\n# See also FindCython.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Kitware, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#=============================================================================\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Configuration options.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create a *.c or *.cxx file from a *.pyx file.\n\n# Input the generated file basename.  The generate file will put into the variable\n\n# placed in the \"generated_file\" argument. Finally all the *.py and *.pyx files.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default to assuming all files are C.\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Determine if it is a C or C++ file.\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Get the include directories.\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Determine dependencies.\n\n# Add the pxd file will the same name as the given pyx file.\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# pxd files to check for additional dependencies.\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# check for C header dependencies\n",
        "Line" : 134,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Had trouble getting the quote in the regex\n",
        "Line" : 138,
        "CharPositionInLine" : 10
      },
      "11" : {
        "Text" : "# check for pxd dependencies\n",
        "Line" : 150,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Look for cimport statements.\n",
        "Line" : 152,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Add the module to the files to check, if appropriate.\n",
        "Line" : 164,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# if it is not already going to be checked\n",
        "Line" : 176,
        "CharPositionInLine" : 22
      },
      "15" : {
        "Text" : "# if it has not already been checked\n",
        "Line" : 177,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "# if pxd file can be found\n",
        "Line" : 178,
        "CharPositionInLine" : 18
      },
      "17" : {
        "Text" : "# for each module dependency discovered\n",
        "Line" : 179,
        "CharPositionInLine" : 21
      },
      "18" : {
        "Text" : "# for each pxd file to check\n",
        "Line" : 180,
        "CharPositionInLine" : 19
      },
      "19" : {
        "Text" : "# pyx_file\n",
        "Line" : 183,
        "CharPositionInLine" : 15
      },
      "20" : {
        "Text" : "# Set additional flags.\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Include directory arguments. \n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Determining generated file name.\n",
        "Line" : 212,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Add the command to run the compiler.\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Remove their visibility to the user.\n",
        "Line" : 233,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# cython_add_module( <name> src1 src2 ... srcN )\n\n# Build the Cython Python module.\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# message(STATUS \"Cython Generation: ${_name} ${generated_file}\")\n\n# Creates a custom target only for generating headers.\n\n# add_custom_target(${_name}_headers DEPENDS ${generated_file})\n",
        "Line" : 252,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# cython_add_standalone_executable( _name [MAIN_MODULE src3.py] src1 src2 ... srcN )\n\n# Creates a standalone executable the given sources.\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "cmake/copy_file.cmake" : {
      "ObjectId" : "4b311612c6531bdcf5c6860997b8368b4d6cb47f",
      "LastModified" : "2017-12-07T20:14:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# copy_file ===================================================================\n\n# copy a single file into build environment\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# copy_files ==================================================================\n\n# copy all files matching a pattern into the build environment\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/eval.cmake" : {
      "ObjectId" : "dbbb363049553d1967680b2d638a149792d1789a",
      "LastModified" : "2017-12-07T20:14:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Have to escape ARGC to correctly compare\n",
        "Line" : 2,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 1
    },
    "deps/cmake/ExternalProjectBoost.cmake" : {
      "ObjectId" : "8bfb3ea4e07cf37e6a7113e5bcc94984faae9245",
      "LastModified" : "2019-02-18T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build Boost =================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# disable fchmodat on mac. not supported for OS X 10.8/10.9\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add an imported library for each boost library\n\n#\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add_definitions(-DBOOST_DATE_TIME_POSIX_TIME_STD_CONFIG)\n\n# add_definitions(-DBOOST_ALL_DYN_LINK)\n\n# set(Boost_SHARED_LIBRARIES \"\")\n\n#\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Create Boost interface library\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Repeat for boost test libraries\n\n##################################\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create Boost Test interface library\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/cmake/ExternalProjectLibCurl.cmake" : {
      "ObjectId" : "9c2889ff33b6326ff5de4f612dc3b0dd0cd86ae7",
      "LastModified" : "2018-07-03T00:59:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/cmake/ExternalProjectLibJpeg.cmake" : {
      "ObjectId" : "c53f3207afc977701d401b0a7a4130cdedb90c68",
      "LastModified" : "2018-07-03T00:59:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/cmake/ExternalProjectLibPNG.cmake" : {
      "ObjectId" : "e146adb211b44e93b265ba85dbb8770e83dbcd12",
      "LastModified" : "2018-07-03T00:59:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/cmake/ExternalProjectLibXML2.cmake" : {
      "ObjectId" : "3f6632908a3e983151898703473aa71c7ab24ed7",
      "LastModified" : "2018-07-03T00:59:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the with-python=./ prevents it from trying to build/install some python stuff\n\n# which is poorly installed (always ways to stick it in a system directory)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/cmake/ExternalProjectLibbz2.cmake" : {
      "ObjectId" : "6811790130ba9323219428450aa22ffb43144b01",
      "LastModified" : "2018-07-03T00:59:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# libbz  =================================================================\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/cmake/ExternalProjectLibz.cmake" : {
      "ObjectId" : "d2c00e2d715e35a34d70b701d13528d63d5a00e5",
      "LastModified" : "2018-07-03T00:59:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# libbz  =================================================================\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/cmake/ExternalProjectNanoMSG.cmake" : {
      "ObjectId" : "06e674ae7b8b476a6a784895b1c6dee473647529",
      "LastModified" : "2018-07-03T00:59:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/cmake/ExternalProjectOpenSSL.cmake" : {
      "ObjectId" : "1bfdb3c733008cb5a24aac9b93d7f4ae33b26cbe",
      "LastModified" : "2018-07-03T00:59:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SSL seems to link fine even when compiled using the default compiler\n\n# The alternative to get openssl to use gcc on mac requires a patch to\n\n# the ./Configure script\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# This needs to be adjusted for linux.\n",
        "Line" : 49,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 2
    },
    "deps/src/boost_1_68_0/libs/beast/CMakeLists.txt" : {
      "ObjectId" : "478fc48e8f434358715e03013a023b757b9ab719",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# large object file format\n\n# strict C++\n",
        "Line" : 26,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "#/wd4503      # decorated name length exceeded, name was truncated\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# enable all warnings\n\n# Multi-processor compilation\n",
        "Line" : 29,
        "CharPositionInLine" : 22
      },
      "4" : {
        "Text" : "# for RelWithDebInfo builds, disable incremental linking\n\n# since CMake sets it ON by default for that build type and it\n\n# causes warnings\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Must come before Boost includes, otherwise the\n\n# IDE sees the wrong file due to boost/ symlinks.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Boost\n\n#\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# VFALCO I want static but \"b2 stage\" builds a minimal set which excludes static\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Some of the tests use deprecated APIs\n\n#add_definitions (-DBOOST_ASIO_NO_DEPRECATED=1)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# OpenSSL\n\n#\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Tests and examples\n\n#\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "deps/src/boost_1_68_0/libs/beast/example/CMakeLists.txt" : {
      "ObjectId" : "950c29db9bbd489d8d3b04b07d5ce0bd99715b15",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/advanced/CMakeLists.txt" : {
      "ObjectId" : "af83e043bab85fb75a962afe11a548e0ee539f71",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/advanced/server-flex/CMakeLists.txt" : {
      "ObjectId" : "981ce6b57ddb0346bb5332d14e470efc7435053d",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/advanced/server/CMakeLists.txt" : {
      "ObjectId" : "5d0b710cced47ab9fa0325192eff9268554091bc",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/echo-op/CMakeLists.txt" : {
      "ObjectId" : "2f01a60179c95123857fad9de17d5db451768382",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/http/CMakeLists.txt" : {
      "ObjectId" : "d38604dd0fa09ddba79f81e8546a5ba1c4c2a771",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/http/client/CMakeLists.txt" : {
      "ObjectId" : "a8c09df0d9621b59cf20ec4b7ebbe6fcf7446397",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/http/client/async-ssl/CMakeLists.txt" : {
      "ObjectId" : "87eb2fedca86fa78ffacb09f0bffc149ec54373d",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/http/client/async/CMakeLists.txt" : {
      "ObjectId" : "6bde0bf495fe2ffb1b82ad85db6d0e2ad99ada3c",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/http/client/coro-ssl/CMakeLists.txt" : {
      "ObjectId" : "3ff783601ed6c609e94ab3b8654549a7ec520f35",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/http/client/coro/CMakeLists.txt" : {
      "ObjectId" : "073cce5d70d7f137c595c066918c947b71a97044",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/http/client/crawl/CMakeLists.txt" : {
      "ObjectId" : "dc87484c72831acafa88ba7eb75ef309fb2dc497",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/http/client/sync-ssl/CMakeLists.txt" : {
      "ObjectId" : "9683e62d01a2df3392ee538a124f5e0bbbca9db5",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/http/client/sync/CMakeLists.txt" : {
      "ObjectId" : "399e61cee58038f6e144d361e56c351f736ba9c7",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/http/server/CMakeLists.txt" : {
      "ObjectId" : "350b465a7bd2a91fe687e373d5fdbc29190301c1",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/http/server/async-ssl/CMakeLists.txt" : {
      "ObjectId" : "130f45502031075ba5c9e3956f620a895ee4f93b",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/http/server/async/CMakeLists.txt" : {
      "ObjectId" : "dda889b7f3c3f82c13330f7254d9a76df46ac49d",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/http/server/coro-ssl/CMakeLists.txt" : {
      "ObjectId" : "b578745931880fbf127efdb29f55283a94fd6ba7",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/http/server/coro/CMakeLists.txt" : {
      "ObjectId" : "46d3c2356f86030f0100d8822f701195d81f5b7f",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/http/server/fast/CMakeLists.txt" : {
      "ObjectId" : "f041eb404a355ce49c4f184a54ac68425696bb6a",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/http/server/flex/CMakeLists.txt" : {
      "ObjectId" : "3011e6df97a2213d48a506bff45e21b6e1c6f811",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/http/server/small/CMakeLists.txt" : {
      "ObjectId" : "b6eb7f2550321a618f9b7ca63b4629a51f1e7dfe",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/http/server/stackless-ssl/CMakeLists.txt" : {
      "ObjectId" : "edf313388ed0f6c304a69596acb95ae854b84697",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/http/server/stackless/CMakeLists.txt" : {
      "ObjectId" : "c1ee6ecbf14861537bcbf0f90f2ea41679c9cab1",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/http/server/sync-ssl/CMakeLists.txt" : {
      "ObjectId" : "792cef82329718a40b5a638539d72a29c20df5c6",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/http/server/sync/CMakeLists.txt" : {
      "ObjectId" : "ced30da89b81f10a4a924047fa95f8431a1d40a1",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/websocket/CMakeLists.txt" : {
      "ObjectId" : "d38604dd0fa09ddba79f81e8546a5ba1c4c2a771",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/websocket/client/CMakeLists.txt" : {
      "ObjectId" : "5955ca18fd8fb30d10fed653c121faf724b489fe",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/websocket/client/async-ssl/CMakeLists.txt" : {
      "ObjectId" : "c02f4d065ad502dcf36a2a957262d3438513f6a3",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/websocket/client/async/CMakeLists.txt" : {
      "ObjectId" : "73f2c07b5f0f627287edeb7effc3a6d7977dc327",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/websocket/client/coro-ssl/CMakeLists.txt" : {
      "ObjectId" : "7b9f167aff8e22353efe4f775da66e631b17e4e3",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/websocket/client/coro/CMakeLists.txt" : {
      "ObjectId" : "1bdcf6c671d62466513ebb88d60bcc72ceefa02e",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/websocket/client/sync-ssl/CMakeLists.txt" : {
      "ObjectId" : "11c5f030c7df09a45005751c72465cbb57b9e1fa",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/websocket/client/sync/CMakeLists.txt" : {
      "ObjectId" : "8196f0da3c42c85054e3cfd2c313e2cf62d7bbaf",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/websocket/server/CMakeLists.txt" : {
      "ObjectId" : "23a8bdf1814f6ffd9a5c0c8f58a9078dc2202e50",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/websocket/server/async-ssl/CMakeLists.txt" : {
      "ObjectId" : "09496800b1ee1915263a69dc7e469720a5aee550",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/websocket/server/async/CMakeLists.txt" : {
      "ObjectId" : "d9fb1093abbfe84fe0d55f6dbb19a6d01a9e0bac",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/websocket/server/coro-ssl/CMakeLists.txt" : {
      "ObjectId" : "2d9d7120d4dc58d8d01e657532b75cdf81f17020",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/websocket/server/coro/CMakeLists.txt" : {
      "ObjectId" : "bf4c5a363fa19669a74b9d6602c474c6e64d5d7e",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/websocket/server/fast/CMakeLists.txt" : {
      "ObjectId" : "df44e5e92189013471817fe6bd606500eddec22d",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/websocket/server/stackless-ssl/CMakeLists.txt" : {
      "ObjectId" : "bd0e882827de8da81554701b07779f328008a7ca",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/websocket/server/stackless/CMakeLists.txt" : {
      "ObjectId" : "b5f51b21e917ec5e8c72d0dbf4bd96ae9e0464d2",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/websocket/server/sync-ssl/CMakeLists.txt" : {
      "ObjectId" : "3a7e32fe584d226897ba3eddd4019ec02cdb6471",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/example/websocket/server/sync/CMakeLists.txt" : {
      "ObjectId" : "357a3b6a702e696dba9efae8adc4641a78bb4d1d",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/test/CMakeLists.txt" : {
      "ObjectId" : "16cef92add979cf6016cb839500c0572947a71c0",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/test/beast/CMakeLists.txt" : {
      "ObjectId" : "ab0de8030ad00e06a71bca0124fb4724498bc837",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/test/beast/core/CMakeLists.txt" : {
      "ObjectId" : "11d20ad6d1b0b5d08a1565f2a3cfb997084a16bd",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/test/beast/experimental/CMakeLists.txt" : {
      "ObjectId" : "012907bcc1375698bb056eaff90ba80de2fb756c",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/test/beast/http/CMakeLists.txt" : {
      "ObjectId" : "8837355d6e7c277a0cca6137dabfe47f66d52fd0",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/test/beast/websocket/CMakeLists.txt" : {
      "ObjectId" : "4a26989370a84ac05558f01bb529819d4ffd2a76",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/test/beast/zlib/CMakeLists.txt" : {
      "ObjectId" : "31da3e5946dd671f2b2002ecdb1817f3d7e294c7",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/test/bench/CMakeLists.txt" : {
      "ObjectId" : "849f032a9c492aebe8f5dd15dc0960fc67d3e1ed",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/test/bench/buffers/CMakeLists.txt" : {
      "ObjectId" : "7609b6ef633a05d278dc5051019de4e30ce47a5d",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/test/bench/parser/CMakeLists.txt" : {
      "ObjectId" : "7141000af422276cb4f903fa8db79528daebd8a8",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/test/bench/utf8_checker/CMakeLists.txt" : {
      "ObjectId" : "6b0f27d358d3c6fa0b875c2cca91bccd22ef0e3a",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/test/bench/wsload/CMakeLists.txt" : {
      "ObjectId" : "4976c2e2007695c94ebc55223328e49d4ed55784",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/test/bench/zlib/CMakeLists.txt" : {
      "ObjectId" : "802b06277f7c68a0e282b0fa36f2f919b26a9c28",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/test/doc/CMakeLists.txt" : {
      "ObjectId" : "e700b10623e2284885450bd94340e6f9b2156e7a",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/test/example/CMakeLists.txt" : {
      "ObjectId" : "00d48e8ee7e79e33a01c8576bb60e28cb3ef3bd8",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/test/example/common/CMakeLists.txt" : {
      "ObjectId" : "7b320f083e3637ad866ba3449cd240dc0edaa383",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/test/extern/zlib-1.2.11/CMakeLists.txt" : {
      "ObjectId" : "0fe939df689306f1d0c7c657cb64dd0f0dedc134",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 47,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 128,
        "CharPositionInLine" : 23
      },
      "8" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n\n#\n\n# This has no effect with MSVC, on that platform the version info for\n\n# the DLL comes from the resource file win32/zlib1.rc\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Creates zlib1.dll when building shared library version\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#============================================================================\n\n# Example binaries\n\n#============================================================================\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "deps/src/boost_1_68_0/libs/beast/test/extern/zlib-1.2.11/Makefile" : {
      "ObjectId" : "6bba86c73fca2abda416baa1a7cf883b3494fb29",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/beast/test/extern/zlib-1.2.11/contrib/blast/Makefile" : {
      "ObjectId" : "9be80bafe050eed57029ef2e690f36677a3003c0",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/beast/test/extern/zlib-1.2.11/contrib/minizip/Makefile" : {
      "ObjectId" : "84eaad20d4fb19b00965268dd75d7e9b66c8cc21",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/beast/test/extern/zlib-1.2.11/contrib/minizip/Makefile.am" : {
      "ObjectId" : "d343011ebc3b3fd78d2bc3a29801a083c038cf0c",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/beast/test/extern/zlib-1.2.11/contrib/puff/Makefile" : {
      "ObjectId" : "0e2594c80885c0dbea13c6d22b2e60e9fb82b51f",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# puff full coverage test (should say 100%)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/beast/test/extern/zlib-1.2.11/contrib/untgz/Makefile" : {
      "ObjectId" : "b54266fba20a167a1d83b7afd503dfd2f849ca57",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/beast/test/extern/zlib-1.2.11/nintendods/Makefile" : {
      "ObjectId" : "21337d01ab2fe20743682125994666e20af6b7e7",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# TARGET is the name of the output\n\n# BUILD is the directory where object files & intermediate files will be placed\n\n# SOURCES is a list of directories containing source code\n\n# DATA is a list of directories containing data files\n\n# INCLUDES is a list of directories containing header files\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# options for code generation\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# list of directories containing libraries, this must be the top level containing\n\n# include and lib\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# no real need to edit anything past this point unless you need to add additional\n\n# rules for different file extensions\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# use CXX for linking C++ projects, CC for standard C\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# main targets\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "deps/src/boost_1_68_0/libs/callable_traits/CMakeLists.txt" : {
      "ObjectId" : "970dcf31d37362f88baf50dd1079f48b75c354ac",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2015\n\n# Modified Work Copyright Barrett Adair 2015-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Defaults to C++14 if not set:\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Setting up CMake options and compiler flags (more flags can be set on a per-target basis or in subdirectories)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# enable all warnings and treat them all as errors\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# MSVC/Clang-cl builds need -Qunused-arguments\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# for better template error debugging\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# enforce strict standards compliance\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# use the most recent C++ standard available\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# transactional memory - currently only available in GCC 6 and later\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n#find_package(Doxygen)\n\n##find_package(Meta)\n\n#find_package(PythonInterp 2.7)\n\n#find_package(Ruby 2.1)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\n\n# callable_traits_target_name_for(<output variable> <source file> [ext])\n\n# Returns the target name associated to a source file. If the path of the\n\n# source file relative from the root of callable_traits is `path/to/source/file.ext`,\n\n# the target name associated to it will be `path.to.source.file`.\n\n#\n\n# The extension of the file should be specified as a last argument. If no\n\n# extension is specified, the `.cpp` extension is assumed.\n\n##############################################################################\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\n\n# callable_traits_add_test(<name> <command> [<arg>...])\n\n# Creates a test called `name`, which runs the given `command` with the given args.\n\n##############################################################################\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\n\n# Setup the `check` target to build and then run all the tests and examples.\n\n##############################################################################\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##############################################################################\n\n# Setup the 'install' target and the package config file.\n\n##############################################################################\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "deps/src/boost_1_68_0/libs/callable_traits/example/CMakeLists.txt" : {
      "ObjectId" : "7e9266c1ff90728ff13d302cdb93033ba92c3fdf",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2015\n\n# Modified Work Copyright Barrett Adair 2015-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/callable_traits/test/CMakeLists.txt" : {
      "ObjectId" : "87360fb772af39cc29041ec2345ae6168880f68a",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2015\n\n# Modified Work Copyright Barrett Adair 2015-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n#   callable_traits_add_unit_test(<name> ...)\n\n#\n\n# Equivalent to `callable_traits_add_test`, except the test is also added as a\n\n# dependency of the `tests` target.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/boost_1_68_0/libs/compute/CMakeLists.txt" : {
      "ObjectId" : "71e7722e00eade7f50e76d9beb8c958744623955",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n#  Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>\n\n#\n\n#  Distributed under the Boost Software License, Version 1.0\n\n#  See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find OpenCL\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find Boost\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# optional support for c++11\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# optional support for offline-caching\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# thread-safety options\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# optional third-party libraries\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# optional support for boost dynamic libraries\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# for default use statis libs\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# compiler options\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Visual Studio C++\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Not enough actual parameters for a BOOST_PP macro\n\n# Warning C4244: 'initializing': conversion from 'double' to 'int', possible loss of data\n\n# Warning C4305: 'initializing': truncation from 'double' to 'float'\n\n# Warning C4800: 'uint32_t' : forcing value to bool 'true' or 'false' (performance warning)\n\n# Warning C4838: conversion from 'double' to 'float' requires a narrowing conversion\n",
        "Line" : 92,
        "CharPositionInLine" : 52
      },
      "12" : {
        "Text" : "# configure cmake config file\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# install cmake config file\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# install header files\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "deps/src/boost_1_68_0/libs/compute/cmake/FindBolt.cmake" : {
      "ObjectId" : "0820de0d073aa8ac45e7842fe8722efa7749a5a5",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################                                                                                     \n\n#   © 2012,2014 Advanced Micro Devices, Inc. All rights reserved.                                     \n\n#                                                                                    \n\n#   Licensed under the Apache License, Version 2.0 (the \"License\");   \n\n#   you may not use this file except in compliance with the License.                 \n\n#   You may obtain a copy of the License at                                          \n\n#                                                                                    \n\n#       http://www.apache.org/licenses/LICENSE-2.0                      \n\n#                                                                                    \n\n#   Unless required by applicable law or agreed to in writing, software              \n\n#   distributed under the License is distributed on an \"AS IS\" BASIS,              \n\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.         \n\n#   See the License for the specific language governing permissions and              \n\n#   limitations under the License.                                                   \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################################                                                                                     \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Locate an BOLT implementation.\n\n#\n\n# Defines the following variables:\n\n#\n\n#   BOLT_FOUND - Found an Bolt imlementation\n\n#\n\n# Also defines the library variables below as normal\n\n# variables.\n\n#\n\n#   BOLT_LIBRARIES - These contain debug/optimized keywords when a debugging library is found\n\n#   BOLT_INCLUDE_DIRS - All relevant Bolt include directories\n\n#\n\n# Accepts the following variables as input:\n\n#\n\n#   BOLT_ROOT - (as a CMake or environment variable)\n\n#                The root directory of an BOLT installation\n\n#\n\n#   FIND_LIBRARY_USE_LIB64_PATHS - Global property that controls whether FindBOLT should search for \n\n#                              64bit or 32bit libs\n\n#\n\n#-----------------------\n\n# Example Usage:\n\n#\n\n#    find_package(BOLT REQUIRED)\n\n#    include_directories(${BOLT_INCLUDE_DIRS})\n\n#\n\n#    add_executable(foo foo.cc)\n\n#    target_link_libraries(foo ${BOLT_LIBRARIES})\n\n#\n\n#-----------------------\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This module helps to use BOLT_FIND_COMPONENTS, BOLT_FIND_REQUIRED, BOLT_FIND_QUIETLY\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Search for 64bit libs if FIND_LIBRARY_USE_LIB64_PATHS is set to true in the global environment, 32bit libs else\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Debug print statements\n\n#message( \"BOLT_LIBRARY_PATH_SUFFIXES: ${BOLT_LIBRARY_PATH_SUFFIXES}\" )\n\n#message( \"ENV{BOLT_ROOT}: $ENV{BOLT_ROOT}\" )\n\n#message( \"BOLT_FIND_COMPONENTS: ${BOLT_FIND_COMPONENTS}\" )\n\n#message( \"BOLT_FIND_REQUIRED: ${BOLT_FIND_REQUIRED}\" )\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set the component to find if the user does not specify explicitely\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Eventually, Bolt may support multiple backends, but for now it only supports CL\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Find and set the location of main BOLT static lib file\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Find and set the location of main BOLT static lib file\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "deps/src/boost_1_68_0/libs/compute/cmake/FindEigen.cmake" : {
      "ObjectId" : "2cd3e12c0c243a6cc745bf787b7d765c3198ff59",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ceres Solver - A fast non-linear least squares minimizer\n\n# Copyright 2013 Google Inc. All rights reserved.\n\n# http://code.google.com/p/ceres-solver/\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice,\n\n#   this list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the name of Google Inc. nor the names of its contributors may be\n\n#   used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Author: alexs.mac@gmail.com (Alex Stewart)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FindEigen.cmake - Find Eigen library, version >= 3.\n\n#\n\n# This module defines the following variables:\n\n#\n\n# EIGEN_FOUND: TRUE iff Eigen is found.\n\n# EIGEN_INCLUDE_DIRS: Include directories for Eigen.\n\n#\n\n# EIGEN_VERSION: Extracted from Eigen/src/Core/util/Macros.h\n\n# EIGEN_WORLD_VERSION: Equal to 3 if EIGEN_VERSION = 3.2.0\n\n# EIGEN_MAJOR_VERSION: Equal to 2 if EIGEN_VERSION = 3.2.0\n\n# EIGEN_MINOR_VERSION: Equal to 0 if EIGEN_VERSION = 3.2.0\n\n#\n\n# The following variables control the behaviour of this module:\n\n#\n\n# EIGEN_INCLUDE_DIR_HINTS: List of additional directories in which to\n\n#                          search for eigen includes, e.g: /timbuktu/eigen3.\n\n#\n\n# The following variables are also defined by this module, but in line with\n\n# CMake recommended FindPackage() module style should NOT be referenced directly\n\n# by callers (use the plural variables detailed above instead).  These variables\n\n# do however affect the behaviour of the module via FIND_[PATH/LIBRARY]() which\n\n# are NOT re-called (i.e. search for library is not repeated) if these variables\n\n# are set with valid values _in the CMake cache_. This means that if these\n\n# variables are set directly in the cache, either by the user in the CMake GUI,\n\n# or by the user passing -DVAR=VALUE directives to CMake when called (which\n\n# explicitly defines a cache variable), then they will be used verbatim,\n\n# bypassing the HINTS variables and other hard-coded search locations.\n\n#\n\n# EIGEN_INCLUDE_DIR: Include directory for CXSparse, not including the\n\n#                    include directory of any dependencies.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Called if we failed to find Eigen or any of it's required dependencies,\n\n# unsets all public (designed to be used externally) variables and reports\n\n# error message at priority depending upon [REQUIRED/QUIET/<NONE>] argument.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make results of search visible in the CMake GUI if Eigen has not\n\n# been found so that user does not have to toggle to advanced view.\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Note <package>_FIND_[REQUIRED/QUIETLY] variables defined by FindPackage()\n\n# use the camelcase library name, not uppercase.\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Neither QUIETLY nor REQUIRED, use no priority which emits a message\n\n# but continues configuration and allows generation.\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Search user-installed locations first, so that we prefer user installs\n\n# to system installs where both exist.\n\n#\n\n# TODO: Add standard Windows search locations for Eigen.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Mac OS X\n",
        "Line" : 91,
        "CharPositionInLine" : 37
      },
      "8" : {
        "Text" : "# Mac OS X.\n",
        "Line" : 92,
        "CharPositionInLine" : 42
      },
      "9" : {
        "Text" : "# Search supplied hint directories first if supplied.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Mark internally as found, then verify. EIGEN_REPORT_NOT_FOUND() unsets\n\n# if called.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Extract Eigen version from Eigen/src/Core/util/Macros.h\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# This is on a single line s/t CMake does not interpret it as a list of\n\n# elements and insert ';' separators which would result in 3.;2.;0 nonsense.\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Set standard CMake FindPackage variables if found.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Handle REQUIRED / QUIET optional arguments and version.\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Only mark internal variables as advanced if we found Eigen, otherwise\n\n# leave it visible in the standard GUI for the user to set manually.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "deps/src/boost_1_68_0/libs/compute/cmake/FindTBB.cmake" : {
      "ObjectId" : "d299fd140487a450b6565a562f14bceb293336a6",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Intel Threading Building Blocks include paths and libraries\n\n# FindTBB.cmake can be found at https://code.google.com/p/findtbb/\n\n# Written by Hannes Hofmann <hannes.hofmann _at_ informatik.uni-erlangen.de>\n\n# Improvements by Gino van den Bergen <gino _at_ dtecta.com>,\n\n#   Florian Uhlig <F.Uhlig _at_ gsi.de>,\n\n#   Jiri Marsik <jiri.marsik89 _at_ gmail.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MIT License\n\n#\n\n# Copyright (c) 2011 Hannes Hofmann\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GvdB: This module uses the environment variable TBB_ARCH_PLATFORM which defines architecture and compiler.\n\n#   e.g. \"ia32/vc8\" or \"em64t/cc4.1.0_libc2.4_kernel2.6.16.21\"\n\n#   TBB_ARCH_PLATFORM is set by the build script `tbbvars[.bat|.sh|.csh], which can be found\n\n#   in the TBB installation directory (TBB_INSTALL_DIR).\n\n#\n\n# GvdB: Mac OS X distribution places libraries directly in lib directory.\n\n#\n\n# For backwards compatibility, you may explicitely set the CMake variables TBB_ARCHITECTURE and TBB_COMPILER.\n\n# TBB_ARCHITECTURE [ ia32 | em64t | itanium ]\n\n#   which architecture to use\n\n# TBB_COMPILER e.g. vc9 or cc3.2.3_libc2.3.2_kernel2.4.21 or cc4.0.1_os10.4.9\n\n#   which compiler to use (detected automatically on Windows)\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This module respects\n\n# TBB_INSTALL_DIR or $ENV{TBB21_INSTALL_DIR} or $ENV{TBB_INSTALL_DIR}\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This module defines\n\n# TBB_INCLUDE_DIRS, where to find task_scheduler_init.h, etc.\n\n# TBB_LIBRARY_DIRS, where to find libtbb, libtbbmalloc\n\n# TBB_DEBUG_LIBRARY_DIRS, where to find libtbb_debug, libtbbmalloc_debug\n\n# TBB_INSTALL_DIR, the base TBB install directory\n\n# TBB_LIBRARIES, the libraries to link against to use TBB.\n\n# TBB_DEBUG_LIBRARIES, the libraries to link against to use TBB with debug symbols.\n\n# TBB_FOUND, If false, don't try to use TBB.\n\n# TBB_INTERFACE_VERSION, as defined in tbb/tbb_stddef.h\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# has em64t/vc8 em64t/vc9\n\n# has ia32/vc7.1 ia32/vc8 ia32/vc9\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Todo: add other Windows compilers such as ICL.\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# MAC\n",
        "Line" : 83,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# libs: libtbb.dylib, libtbbmalloc.dylib, *_debug\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# default flavor on apple: ia32/cc4.0.1_os10.4.9\n\n# Jiri: There is no reason to presume there is only one flavor and\n\n#       that user's setting of variables should be ignored.\n",
        "Line" : 90,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# LINUX\n",
        "Line" : 104,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# has em64t/cc3.2.3_libc2.3.2_kernel2.4.21 em64t/cc3.3.3_libc2.3.3_kernel2.6.5 em64t/cc3.4.3_libc2.3.4_kernel2.6.9 em64t/cc4.1.0_libc2.4_kernel2.6.16.21\n\n# has ia32/*\n\n# has itanium/*\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# SUN\n\n# not yet supported\n\n# has em64t/cc3.4.3_kernel5.10\n\n# has ia32/*\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-- Clear the public variables\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-- Find TBB install dir and set ${_TBB_INSTALL_DIR} and cached ${TBB_INSTALL_DIR}\n\n# first: use CMake variable TBB_INSTALL_DIR\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# second: use environment variable\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Intel recommends setting TBB21_INSTALL_DIR\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# third: try to find path automatically\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# sanity check\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# finally: set the cached CMake variable TBB_INSTALL_DIR\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#-- A macro to rewrite the paths of the library. This is necessary, because\n\n#   find_library() always found the em64t/vc9 version of the TBB libs\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#    if (NOT \"${_TBB_ARCHITECTURE}\" STREQUAL \"em64t\")\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#    endif (NOT \"${_TBB_ARCHITECTURE}\" STREQUAL \"em64t\")\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#-- Look for include directory and set ${TBB_INCLUDE_DIR}\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Jiri: tbbvars now sets the CPATH environment variable to the directory\n\n#       containing the headers.\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#-- Look for libraries\n\n# GvdB: $ENV{TBB_ARCH_PLATFORM} is set by the build script tbbvars[.bat|.sh|.csh]\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Jiri: This block isn't mutually exclusive with the previous one\n\n#       (hence no else), instead I test if the user really specified\n\n#       the variables in question.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# HH: deprecated\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Jiri: It doesn't hurt to look in more places, so I store the hints from\n\n#       ENV{TBB_ARCH_PLATFORM} and the TBB_ARCHITECTURE and TBB_COMPILER\n\n#       variables and search them both.\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# GvdB: Mac OS X distribution places libraries directly in lib directory.\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Jiri: No reason not to check the default paths. From recent versions,\n\n#       tbbvars has started exporting the LIBRARY_PATH and LD_LIBRARY_PATH\n\n#       variables, which now point to the directories of the lib files.\n\n#       It all makes more sense to use the ${_TBB_LIBRARY_DIR} as a HINTS\n\n#       argument instead of the implicit PATHS as it isn't hard-coded\n\n#       but computed by system introspection. Searching the LIBRARY_PATH\n\n#       and LD_LIBRARY_PATH environment variables is now even more important\n\n#       that tbbvars doesn't export TBB_ARCH_PLATFORM and it facilitates\n\n#       the use of TBB built from sources.\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#Extract path from TBB_LIBRARY name\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#TBB_CORRECT_LIB_DIR(TBB_LIBRARY)\n\n#TBB_CORRECT_LIB_DIR(TBB_MALLOC_LIBRARY)\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#-- Look for debug libraries\n\n# Jiri: Changed the same way as for the release libraries.\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Jiri: Self-built TBB stores the debug libraries in a separate directory.\n\n#       Extract path from TBB_LIBRARY_DEBUG name\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#TBB_CORRECT_LIB_DIR(TBB_LIBRARY_DEBUG)\n\n#TBB_CORRECT_LIB_DIR(TBB_MALLOC_LIBRARY_DEBUG)\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Jiri: Self-built TBB stores the debug libraries in a separate directory.\n",
        "Line" : 260,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# do only throw fatal, if this pkg is REQUIRED\n",
        "Line" : 270,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 38
    },
    "deps/src/boost_1_68_0/libs/compute/cmake/opencl/FindOpenCL.cmake" : {
      "ObjectId" : "0a60e8d15eab2828fb7e9e18b380a9cd318bd097",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenCL\n\n# This module tries to find an OpenCL implementation on your system. It supports\n\n# AMD / ATI, Apple and NVIDIA implementations.\n\n#\n\n# To set the paths manually, define these environment variables:\n\n# OpenCL_INCPATH    - Include path (e.g. OpenCL_INCPATH=/opt/cuda/4.0/cuda/include)\n\n# OpenCL_LIBPATH    - Library path (e.h. OpenCL_LIBPATH=/usr/lib64/nvidia)\n\n#\n\n# Once done this will define\n\n#  OpenCL_FOUND         - system has OpenCL\n\n#  OpenCL_INCLUDE_DIRS  - the OpenCL include directory\n\n#  OpenCL_LIBRARIES     - link these to use OpenCL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The AMD SDK currently installs both x86 and x86_64 libraries\n\n# This is only a hack to find out architecture\n",
        "Line" : 30,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# On Win32 search relative to the library\n",
        "Line" : 43,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Unix style platforms\n",
        "Line" : 51,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# The AMD SDK currently does not place its headers\n\n# in /usr/include, therefore also search relative\n\n# to the library\n",
        "Line" : 59,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# for Mali GPUs, libmali must be linked\n",
        "Line" : 64,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# This is often the same, so clean up\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "deps/src/boost_1_68_0/libs/compute/example/CMakeLists.txt" : {
      "ObjectId" : "a5708cb0cc86e588e14b0c397b5ae834749e21d6",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n#  Copyright (c) 2013-2014 Kyle Lutz <kyle.r.lutz@gmail.com>\n\n#\n\n#  Distributed under the Boost Software License, Version 1.0\n\n#  See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# boost library link dependencies\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add example program to list of tests (if testing is enabled)\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# opencl test example\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# eigen examples\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# opencv examples\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# opengl/vtk examples\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# qt examples\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# look for Qt4 in the first place\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# build with Qt4\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# look for Qt5\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# build with Qt5\n",
        "Line" : 131,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# no valid Qt framework found\n",
        "Line" : 139,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# required by both versions\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# add examples\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 15
    },
    "deps/src/boost_1_68_0/libs/compute/perf/CMakeLists.txt" : {
      "ObjectId" : "b04429e9d3c0dc4eed6583c2ff9d5c19ab49c7de",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n#  Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>\n\n#\n\n#  Distributed under the Boost Software License, Version 1.0\n\n#  See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# stl benchmarks (for comparison)\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# stl benchmarks which require c++11\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# cuda/thrust benchmarks (for comparison)\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# intel tbb benchmarks (for comparison)\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# bolt c++ template lib benchmarks (for comparison)\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/boost_1_68_0/libs/compute/test/CMakeLists.txt" : {
      "ObjectId" : "a0ca0cf1b4100d3591316905a6a52b32d8ec9a35",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n#  Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>\n\n#\n\n#  Distributed under the Boost Software License, Version 1.0\n\n#  See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# allow tests to use C++11 features\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# enable automatic kernel compilation error messages for tests\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# enable code coverage generation (only with GCC for now)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add path to test data dir\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# link with coverage library\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# miscellaneous tests\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# extra tests (interop tests, linkage tests, etc.)\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "deps/src/boost_1_68_0/libs/compute/test/extra/CMakeLists.txt" : {
      "ObjectId" : "2fb58a2843dd65ee5d3d997fe81bd72619da2966",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n#  Copyright (c) 2015 Kyle Lutz <kyle.r.lutz@gmail.com>\n\n# \n\n#  Distributed under the Boost Software License, Version 1.0\n\n#  See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include local test headers\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check for linkage problems\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# link with coverage library\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# eigen interop tests\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# opencv interop tests\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# qt interop tests\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# look for Qt4 in the first place\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# look for Qt5\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# no valid Qt framework found\n",
        "Line" : 62,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# the opengl interop test depends on qt to create the opengl context\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# vtk interop tests\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "deps/src/boost_1_68_0/libs/fiber/examples/cuda/Makefile" : {
      "ObjectId" : "60a3098e88a642019fee0a48bf87f6f9de4bdb01",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/fiber/examples/hip/Makefile" : {
      "ObjectId" : "d40e8c1a5035a9607f64388bd2c509c384c96ed7",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/fusion/test/compile_time/Makefile" : {
      "ObjectId" : "4887cf248e9c989fccd99d2515076f8bd2b1285e",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#=============================================================================\n\n#    Copyright (c) 2008 Dan Marsden\n\n#  \n\n#    Use modification and distribution are subject to the Boost Software \n\n#    License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at\n\n#    http://www.boost.org/LICENSE_1_0.txt).\n\n#==============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/gil/CMakeLists.txt" : {
      "ObjectId" : "0f041f67f941acf030e4aa0b8bb90702ab2ced92",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2017 Mateusz Loskot <mateusz at loskot dot net>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME: Switch to ON after https://github.com/boostorg/gil/issues/40\n",
        "Line" : 17,
        "CharPositionInLine" : 52
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Dependency: Boost\n\n# - look for stage Build\n\n# - look for default installation location\n\n# - look for location specified with BOOST_ROOT\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The boostorg/gil repository includes must come first,\n\n# before Boost includes from cloned Boost superproject or installed distribution.\n\n# Otherwise the IDE sees the wrong file (ie. due to boost/ symlinks or\n\n# GIL headers from installed Boost instead of this clone of boostog/gil).\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# GIL header gil_test_common.hpp shared between tests\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Dependency: libpng, libjpeg, libtiff via Vcpkg or Conan\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Download automatically, you can also just copy the conan.cmake file\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# NOTE: See RelWithDebInfo for Release builds, http://docs.conan.io/en/latest/howtos/vs2017_cmake.html\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# C++ stream interface for TIFF\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Compiler\n\n#\n\n# Follows https://svn.boost.org/trac10/wiki/Guidelines/WarningsGuidelines\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Need absolute path for __FILE__ used in tests\n",
        "Line" : 117,
        "CharPositionInLine" : 27
      },
      "11" : {
        "Text" : "# Assumes compilers which recognize GCC and clang speak\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Headers\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Tests\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Examples\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "deps/src/boost_1_68_0/libs/gil/doc/Makefile" : {
      "ObjectId" : "41aa56fb0ee7df49152a221110989ac0785e7de5",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/boost_1_68_0/libs/gil/example/CMakeLists.txt" : {
      "ObjectId" : "e0c9c71f115a87a55c9223eca0d4ee57443a9262",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2017 Mateusz Loskot <mateusz at loskot dot net>\n\n# All rights reserved.\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Unfortunately, ALIAS of imported target is not supported\n\n# see https://github.com/conan-io/conan/issues/2125\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "deps/src/boost_1_68_0/libs/gil/example/Makefile" : {
      "ObjectId" : "ca3d3d790659d97dd06c90a6d07bcd6035763e97",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright 2008 Lubomir Bourdev and Hailin Jin\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CXX=/usr/local/gcc-411/bin/g++\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/boost_1_68_0/libs/gil/io/test/CMakeLists.txt" : {
      "ObjectId" : "2193d93d4565fa38ce5549c93edf64d555f249c8",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2017 Mateusz Loskot <mateusz at loskot dot net>\n\n# All rights reserved.\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Unfortunately, ALIAS of imported target is not supported\n\n# see https://github.com/conan-io/conan/issues/2125\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/boost_1_68_0/libs/gil/numeric/test/CMakeLists.txt" : {
      "ObjectId" : "2732f6cd5781d796f0d8d903346b1628abd4d9c0",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2017 Mateusz Loskot <mateusz at loskot dot net>\n\n# All rights reserved.\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/gil/test/CMakeLists.txt" : {
      "ObjectId" : "c7f278fd4ac2f71290f8851dedec2f54af5b4537",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2017 Mateusz Loskot <mateusz at loskot dot net>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# New tests based on Boost.Test\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/boost_1_68_0/libs/gil/test/channel/CMakeLists.txt" : {
      "ObjectId" : "85955d0f92331739f4d403ed6c5db354555f0244",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2018 Mateusz Loskot <mateusz at loskot dot net>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/gil/toolbox/test/CMakeLists.txt" : {
      "ObjectId" : "ce71f843916939ad72fbd17000814bff74577a57",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2017 Mateusz Loskot <mateusz at loskot dot net>\n\n# All rights reserved.\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/graph/doc/Makefile" : {
      "ObjectId" : "2aa2fef81f0cc30035d9bf23bae17439102908ac",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2002 Trustees of Indiana University\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#OPT\t\t= +K2 --display_error_number --diag_suppress=186\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#isomorphism-impl.dvi: $(EPS_GEN) $(WEBTEX)\n\n#isomorphism-impl.ps: isomorphism-impl.dvi\n\n#isomorphism-impl.pdf: $(EPS_GEN) $(PDFPICT) $(WEBTEX)\n\n#isomorphism.hpp: isomorphism-impl.w isomorphism-impl.tex\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/boost_1_68_0/libs/graph/doc/figs/Makefile" : {
      "ObjectId" : "7c63524e9637f27cdcc2f5503e5fea7539dc91dd",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# -*- makefile -*-\n\n# Copyright (c) 2002 Trustees of Indiana University\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/hana/CMakeLists.txt" : {
      "ObjectId" : "1483020d835830ada7d70b5b1ecd59cb6d75669a",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# Setup CMake options\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n\n# Setup project\n\n#\n\n# We parse the canonical version number located in <boost/hana/version.hpp>.\n\n# This is done to allow the library to be used without requiring a proper\n\n# installation during which the version would be written to this header.\n\n##############################################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Perform checks to make sure we support the current compiler\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n\n# Setup the 'hana' header-only library target, along with its install target\n\n# and exports.\n\n##############################################################################\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Export the `hana` library into a HanaConfig.cmake file\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Also install an optional pkg-config file\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################################################################\n\n# Function to setup common compiler flags on tests and examples\n\n##############################################################################\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# GCC pretends to have the flag, but produces a \"unrecognized command line option\"\n\n# warning when we use it.\n",
        "Line" : 111,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "##############################################################################\n\n# Look for the rest of Boost, which is an optional dependency of some tests.\n\n##############################################################################\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\n\n# Setup custom functions to ease the creation of targets\n\n##############################################################################\n\n#   boost_hana_target_name_for(<output variable> <source file> [ext])\n\n#\n\n# Return the target name associated to a source file. If the path of the\n\n# source file relative from the root of Hana is `path/to/source/file.ext`,\n\n# the target name associated to it will be `path.to.source.file`.\n\n#\n\n# The extension of the file should be specified as a last argument. If no\n\n# extension is specified, the `.cpp` extension is assumed.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\n\n# Setup the `check` target to build and then run all the tests and examples.\n\n##############################################################################\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\n\n# Setup subdirectories and testing\n\n##############################################################################\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "deps/src/boost_1_68_0/libs/hana/benchmark/CMakeLists.txt" : {
      "ObjectId" : "212454563153f75086bde4bf6ad5a24423be286e",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# Required packages, gems and caveats\n\n##############################################################################\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check for the 'ruby-progressbar' and 'tilt' gems\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Some benchmarks depend on those libraries\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n\n# Configure the measure.rb script\n\n##############################################################################\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#input\n\n#output\n",
        "Line" : 36,
        "CharPositionInLine" : 57
      },
      "6" : {
        "Text" : "##############################################################################\n\n# Add the benchmarks\n\n##############################################################################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/boost_1_68_0/libs/hana/cmake/CheckCxxCompilerSupport.cmake" : {
      "ObjectId" : "78f1b5fd462f2206c34fb502bbcd2815e3da220d",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Copyright Markus J. Weber 2015\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n\n#\n\n#\n\n# This CMake module checks whether the current compiler is supported, and\n\n# provides friendly hints to the user.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/hana/cmake/FindMPL11.cmake" : {
      "ObjectId" : "5b8b3c4e0391a37b087b098f906dbdf504030167",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n\n#\n\n#\n\n# This CMake module finds the MPL11 include directory. This module sets the\n\n# following CMake variables:\n\n#\n\n# MPL11_FOUND\n\n#   Set to 1 when the MPL11 include directory is found, 0 otherwise.\n\n#\n\n# MPL11_INCLUDE_DIR\n\n#   If the MPL11 include directory is found, this is set to the path of that\n\n#   directory. Otherwise, this is not set.\n\n#\n\n#\n\n# The following variables can be used to customize the behavior of the module:\n\n#\n\n# MPL11_INCLUDE_DIR\n\n#   The path to the MPL11 include directory. When set, this will be used as-is.\n\n#\n\n# MPL11_CLONE_IF_MISSING\n\n#   If the MPL11 include directory can't be found and this is set to true,\n\n#   the MPL11 project will be cloned locally.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable build step\n\n# Disable install step\n\n# Disable test step\n",
        "Line" : 38,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 2
    },
    "deps/src/boost_1_68_0/libs/hana/cmake/FindMeta.cmake" : {
      "ObjectId" : "0a532062bb0fc3733f518c26105178399396fb02",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n\n#\n\n# This file was adapted from FindMeta.cmake at https://github.com/ericniebler/meta.\n\n#\n\n#\n\n# This CMake module finds the Meta include directory. This module sets the\n\n# following CMake variables:\n\n#\n\n# Meta_FOUND\n\n#   Set to 1 when the Meta include directory is found, 0 otherwise.\n\n#\n\n# Meta_INCLUDE_DIR\n\n#   If the Meta include directory is found, this is set to the path of that\n\n#   directory. Otherwise, this is not set.\n\n#\n\n#\n\n# The following variables can be used to customize the behavior of the module:\n\n#\n\n# Meta_INCLUDE_DIR\n\n#   The path to the Meta include directory. When set, this will be used as-is.\n\n#\n\n# Meta_CLONE_IF_MISSING\n\n#   If the Meta include directory can't be found and this is set to true,\n\n#   the Meta project will be cloned locally.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable build step\n\n# Disable install step\n\n# Disable test step\n",
        "Line" : 40,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 2
    },
    "deps/src/boost_1_68_0/libs/hana/cmake/TestHeaders.cmake" : {
      "ObjectId" : "663c9f4e883b986b77a3796826ef6ef12fa83d28",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n\n#\n\n#\n\n# This CMake module provides a function generating a unit test to make sure\n\n# that every public header can be included on its own.\n\n#\n\n# When a C++ library or application has many header files, it can happen that\n\n# a header does not include all the other headers it depends on. When this is\n\n# the case, it can happen that including that header file on its own will\n\n# break the compilation. This CMake module generates a dummy executable\n\n# comprised of many .cpp files, each of which includes a header file that\n\n# is part of the public API. In other words, the executable is comprised\n\n# of .cpp files of the form:\n\n#\n\n#   #include <the/public/header.hpp>\n\n#\n\n# and then exactly one `main` function. If this succeeds to compile, it means\n\n# that the header can be included on its own, which is what clients expect.\n\n# Otherwise, you have a problem. Since writing these dumb unit tests by hand\n\n# is tedious and repetitive, you can use this CMake module to automate this\n\n# task.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   add_header_test(<target> [EXCLUDE_FROM_ALL] [EXCLUDE excludes...] HEADERS headers...)\n\n#\n\n# Generates header-inclusion unit tests for all the specified headers.\n\n#\n\n# This function creates a target which builds a dummy executable including\n\n# each specified header file individually. If this target builds successfully,\n\n# it means that all the specified header files can be included individually.\n\n#\n\n# Parameters\n\n# ----------\n\n# <target>:\n\n#   The name of the target to generate.\n\n#\n\n# HEADERS headers:\n\n#   A list of header files to generate the inclusion tests for. All headers\n\n#   in this list must be represented as relative paths from the root of the\n\n#   include directory added to the compiler's header search path. In other\n\n#   words, it should be possible to include all headers in this list as\n\n#\n\n#       #include <${header}>\n\n#\n\n#   For example, for a library with the following structure:\n\n#\n\n#       project/\n\n#           doc/\n\n#           test/\n\n#           ...\n\n#           include/\n\n#               boost/\n\n#                   hana.hpp\n\n#                   hana/\n\n#                       transform.hpp\n\n#                       tuple.hpp\n\n#                       pair.hpp\n\n#                       ...\n\n#\n\n#   When building the unit tests for that library, we'll add `-I project/include'\n\n#   to the compiler's arguments. The list of public headers should therefore contain\n\n#\n\n#       boost/hana.hpp\n\n#       boost/hana/transform.hpp\n\n#       boost/hana/tuple.hpp\n\n#       boost/hana/pair.hpp\n\n#       ...\n\n#\n\n#   Usually, all the 'public' header files of a library should be tested for\n\n#   standalone inclusion. A header is considered 'public' if a client should\n\n#   be able to include that header on its own.\n\n#\n\n# [EXCLUDE excludes]:\n\n#   An optional list of headers or regexes for which no unit test should be\n\n#   generated. Basically, any header in the list specified by the `HEADERS`\n\n#   argument that matches anything in `EXCLUDE` will be skipped.\n\n#\n\n# [EXCLUDE_FROM_ALL]:\n\n#   If provided, the generated target is excluded from the 'all' target.\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# options\n\n# 1 value args\n\n# multivalued args\n",
        "Line" : 83,
        "CharPositionInLine" : 62
      },
      "CommentCount" : 3
    },
    "deps/src/boost_1_68_0/libs/hana/doc/CMakeLists.txt" : {
      "ObjectId" : "66406606cc98d0bc44ca62a67f70599b37745bf9",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/hana/example/CMakeLists.txt" : {
      "ObjectId" : "0464c0960d770d385ab465c047eec4c53b388590",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# Take note of files that depend on Boost\n\n##############################################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n\n# Caveats: Take note of examples that are not supported.\n\n##############################################################################\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\n\n# Add all the examples\n\n##############################################################################\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Several examples have unused parameters because the name of the parameters\n\n# are useful for illustration, even if the implementation is not actually\n\n# presented. We don't want to generate warnings for that or need to comment\n\n# out all unused parameter names.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/boost_1_68_0/libs/hana/example/cmake_integration/CMakeLists.txt" : {
      "ObjectId" : "000d03dd8a10f1f2a911a28ee50d6da0c57d1609",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# [snip]\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# [snip]\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/boost_1_68_0/libs/hana/test/CMakeLists.txt" : {
      "ObjectId" : "52ee6c4aa5b08b61eef46955d631914a50bd7547",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# Take note of files that depend on Boost\n\n##############################################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n\n# Caveats: Take note of public headers and tests that are not supported.\n\n##############################################################################\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The experimental::type_name test is only supported on Clang >= 3.6 and\n\n# AppleClang >= 7.0\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# On Windows, Clang-cl emulates a MSVC bug that causes EBO not to be applied\n\n# properly. We disable the tests that check for EBO.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##############################################################################\n\n# Generate tests that include each public header.\n\n# The headers that were excluded above due to caveats are ignored here.\n\n##############################################################################\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################################################################\n\n# Check for ODR violations when linking several translation units\n\n# (GitHub issue 75)\n\n##############################################################################\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################################################################\n\n# Add all the remaining unit tests\n\n##############################################################################\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\n\n# Add the deployment test, which checks that we can indeed install `hana` and\n\n# then use the provided `HanaConfig.cmake` config file to use `hana` from an\n\n# external project.\n\n##############################################################################\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Disable test step\n\n# Disable source work-tree update\n",
        "Line" : 129,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 10
    },
    "deps/src/boost_1_68_0/libs/hana/test/deploy/CMakeLists.txt" : {
      "ObjectId" : "186d5def73951e4b3f312522ad53a3f80909f224",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/hof/CMakeLists.txt" : {
      "ObjectId" : "2ba06272e6d4bae9fc22e072d7bfc42028570279",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n#    Copyright (c) 2017 Paul Fultz II\n\n#    CMakeLists.txt\n\n#    Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n#    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#==============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/hof/cmake/BCMTest.cmake" : {
      "ObjectId" : "a7215f9c0e0aff3065ee2a4406b4173f7ad7f85d",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Check if name exists\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/hof/cmake/SphinxDoc.cmake" : {
      "ObjectId" : "6cedf77bbb74748b7982bb63e9eadca48c333895",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sphinx cache with pickled ReST documents\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HTML output directory\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/boost_1_68_0/libs/hof/doc/Makefile" : {
      "ObjectId" : "2ccdfb5ad58b99f5fd3dc77be5622d3a4e26eda6",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#=============================================================================\n\n#    Copyright (c) 2017 Paul Fultz II\n\n#    requirements.txt\n\n#    Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n#    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#==============================================================================\n\n# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/boost_1_68_0/libs/lambda/test/Makefile" : {
      "ObjectId" : "f25b5e4ffb984efce9640aa047b9be3d2d29ce9b",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#CXX\t\t= KCC \n\n#EXTRAFLAGS \t= --strict --display_error_number --diag_suppress 450 --max_pending_instantiations 50\n\n#LIBS\t\t=\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create lists of object files from the source file lists.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2,
      "Errorlog" : "line 57:26 token recognition error at: '\\1'\n"
    },
    "deps/src/boost_1_68_0/libs/multiprecision/test/coverage/Makefile" : {
      "ObjectId" : "d3825ea7596a1a7b31dcb9d0a38daef314c66a12",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# copyright John Maddock 2012\n\n# Distributed under the Boost Software License, Version 1.0. \n\n# (See accompanying file LICENSE_1_0.txt or copy at \n\n# http://www.boost.org/LICENSE_1_0.txt.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/numeric/odeint/examples/gmpxx/Makefile" : {
      "ObjectId" : "0a9f7cb014adc5f0a5c643804d69f1db330f36b6",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/odeint/examples/thrust/Makefile" : {
      "ObjectId" : "5a33bdb323862262e89084853f8cb9bce46f542f",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright 2011-2014 Mario Mulansky\n\n# Copyright 2011-2012 Karsten Ahnert\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or\n\n# copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make sure BOOST_ROOT is pointing to your boost directory\n\n# otherwise, set it here:\n\n# BOOST_ROOT = /path/to/boost\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path to the cuda installation\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# target architecture\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/boost_1_68_0/libs/numeric/odeint/performance/Makefile" : {
      "ObjectId" : "641cb0313d1fbe75fcea70f1e0d93dc6ec8f7d48",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright 2011-2014 Mario Mulansky\n\n# Copyright 2011-2014 Karsten Ahnert\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or\n\n# copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make sure BOOST_ROOT is pointing to your boost directory\n\n# otherwise, set it here:\n\n# BOOST_ROOT = /path/to/boost\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# disabling -ffast-math might give slightly better performance\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Possible options: -fp-model source -no-fma\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/boost_1_68_0/libs/numeric/odeint/performance/SIMD/Makefile" : {
      "ObjectId" : "811acd98822cc1df522eb8c341411869e4a57105",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright 2014 Mario Mulansky\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or\n\n# copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make sure BOOST_ROOT is pointing to your boost directory\n\n# otherwise, set it here:\n\n# BOOST_ROOT = /path/to/boost\n\n# you also need NT2s SIMD libary available set the include path here:\n\n# SIMD_INCLUDE = /path/to/simd/include\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# INTEL COMPILER\n\n# change this if you want to cross-compile\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ARCH = AVX\n\n# ARCH = SSE4.2\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -ip\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# GCC COMPILER\n\n# change this if you want to cross-compile\n\n# ARCH = native\n\n# # ARCH = core-avx-i\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CXX = g++\n\n# CC = g++\n\n# CXXFLAGS = -O3 -ffast-math -mtune=${ARCH} -march=${ARCH} -std=c++0x -DNDEBUG ${INCLUDES}\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/boost_1_68_0/libs/numeric/odeint/test_external/thrust/Makefile" : {
      "ObjectId" : "49d9cd71a2819a4fb5e0f9aeeb77ae99b0649d67",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright 2010-2014 Mario Mulansky\n\n# Copyright 2010-2012 Karsten Ahnert\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or\n\n# copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make sure BOOST_ROOT is pointing to your boost directory\n\n# otherwise, set it here:\n\n# BOOST_ROOT = /path/to/boost\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path to the cuda installation\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# target architecture\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/benchmarks/bench1/bench1.pro" : {
      "ObjectId" : "685802b31800859c02cfea45be0d85d1959e0cb9",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/benchmarks/bench2/bench2.pro" : {
      "ObjectId" : "b667a3fd40000f39d51a1e2d8fe5f63c5d6a9f15",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/benchmarks/bench3/bench3.pro" : {
      "ObjectId" : "21f561fc68a14842a3a166ee42989db1150fc57f",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/benchmarks/bench4/bench4.pro" : {
      "ObjectId" : "354bb478b900721558e7fb494e8b5a528bfff8fd",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/benchmarks/bench5/bench5.pro" : {
      "ObjectId" : "e450911f0c578cf4e1f6eab672e12ff035beb75d",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/benchmarks/benchmarks.pro" : {
      "ObjectId" : "4acf2d6933796f2778f1d5b79e1ae77c5308822f",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/benchmarks/configuration.pri" : {
      "ObjectId" : "07ffcae1c2f0c635caf10f82aaef4879a64f299e",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# ublas include directory\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If ublas tests are build with boost source code then,\n\n# then boost headers and boost libraries should be used.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#LIBS += -L../../../../../../../stage/lib\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/include/detail/detail.pri" : {
      "ObjectId" : "711972db4190df2ecb105dbbd7d179b11b292fba",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/include/experimental/experimental.pri" : {
      "ObjectId" : "41dc6c46b652fea26ad694903a5930ae3e53b7a4",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/include/include.pro" : {
      "ObjectId" : "5815a01fe838c154dd77797db3dafb36d44e07dd",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/include/operation/operation.pri" : {
      "ObjectId" : "519c4f4a6d454b70272873f85024babba79efff3",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/include/traits/traits.pri" : {
      "ObjectId" : "de327dc6822a7ed7679011333e9e3957610a1ca2",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/begin_end.pro" : {
      "ObjectId" : "03c4c6276517f2318fb706a595b3ede98754b9e3",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/comp_mat_erase.pro" : {
      "ObjectId" : "63960aefeb66ccfe23529cd56b934913118b7231",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/concepts.pro" : {
      "ObjectId" : "c4c0bca9fecf186be88a6402e595014f67a68705",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# INTERAL\n\n# SKIP_BAD\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/configuration.pri" : {
      "ObjectId" : "3fdb4aa528beaa77acce0f9df057c6262e58cfbe",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Create a directory for each test.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# USE_RANGE USE_SLICE        # Too complex for regression testing\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#Visual age IBM\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ublas include and test directory are included\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If ublas tests are build with boost source code then,\n\n# then boost headers and boost libraries should be used.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Execute test once compiled.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/num_columns.pro" : {
      "ObjectId" : "8a28199c6dc3e0faefdc76115807042bb668b698",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/num_rows.pro" : {
      "ObjectId" : "dc0a2290467f1e78239820eaa45fe330364cc377",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/placement_new.pro" : {
      "ObjectId" : "d19a747436a752417749d1de41243d081384d490",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/size.pro" : {
      "ObjectId" : "59a04033424afb62bb250e33d048abd80c3c2d03",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/sparse_view_test.pro" : {
      "ObjectId" : "02b3eb089016efe5b84a01a63f7b6185c1bdd74f",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test1.pro" : {
      "ObjectId" : "d1123c44e4176a0e4de36a7b310e3ca4672c1b85",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test2.pro" : {
      "ObjectId" : "00fb53f54446ff84bd6cd01efeb0a29e6758b988",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test3.pro" : {
      "ObjectId" : "f4fd021fa87e80e683d284e02aefaa5a6dd787db",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test3_coo.pro" : {
      "ObjectId" : "27e3ca384d3f88f16aad3315c865988c8a0a52fb",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test3_mvov.pro" : {
      "ObjectId" : "f0a46dcd28083715a4165513bb96b73f738adfdb",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test4.pro" : {
      "ObjectId" : "19da3f872c1ff25605faaa218808e866245fdaa0",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test5.pro" : {
      "ObjectId" : "3f27384ec589806be163ef53203cae5a0ec82540",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test6.pro" : {
      "ObjectId" : "0664ce4548aee3ea3cb3e3d14d8d3e1ba06e68ba",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test7.pro" : {
      "ObjectId" : "5410184926c71d0cfc49cef83b988165d0cf81aa",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test_assignment.pro" : {
      "ObjectId" : "1ad6ca391323deaadfb8f3b2fa41187c64ae301f",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test_banded_storage_layout.pro" : {
      "ObjectId" : "78a96dc42c8a7b55de6aee5df6e0bea6bc467cec",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test_complex_norms.pro" : {
      "ObjectId" : "e7c431e4a84927197075e421c5422c27429d7c1c",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test_coordinate_matrix_always_do_full_sort.pro" : {
      "ObjectId" : "0c93dd04b8162659771dd99fcde31d86a821803a",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test_coordinate_matrix_inplace_merge.pro" : {
      "ObjectId" : "0dee5eb39feaa6764ac87e7bbb844ee2cc3db866",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test_coordinate_matrix_sort.pro" : {
      "ObjectId" : "ea94561d1bb8a0646368de55ba136032dda97794",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test_coordinate_vector_inplace_merge.pro" : {
      "ObjectId" : "a86ce2aeb03b61bd035132f714fcba963fb91e6e",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test_fixed_containers.pro" : {
      "ObjectId" : "60127482fc76b7c90331e04c53fe3647d2fa213a",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test_inplace_solve_basic.pro" : {
      "ObjectId" : "42bc3db6f760e416f581aaafea89146a5c0b9fe7",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test_inplace_solve_mvov.pro" : {
      "ObjectId" : "a1d1316d62393861f9d976526d4f0095945deef0",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test_inplace_solve_sparse.pro" : {
      "ObjectId" : "9f9a32a09b7861ea6064078f10de1f903dbdd6be",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test_lu.pro" : {
      "ObjectId" : "0f203397187216447cecb65cc90699e6d8b611c5",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test_matrix_vector.pro" : {
      "ObjectId" : "d61b70bfb02685855b3b480a1ce90b8cd1cd40bc",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test_ticket7296.pro" : {
      "ObjectId" : "98752cf75fa966e44741bdf186e3db113cb960ab",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/test_triangular.pro" : {
      "ObjectId" : "15c8ce1102b56d466e134976b86282d69525e2ea",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/triangular_access.pro" : {
      "ObjectId" : "98a87063b7b810db541a4370d5d327af29bead12",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/test/triangular_layout.pro" : {
      "ObjectId" : "dcfd36f6f3ced95452e38468254018a689e08607",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/tests.pri" : {
      "ObjectId" : "6ece4acd55986a02cf3f71913f0c2b0a94f2f08a",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/numeric/ublas/IDEs/qtcreator/ublas_develop.pro" : {
      "ObjectId" : "7364283a930db21c2865cd73c214a5021d2ca74f",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/python/doc/numpy/Makefile" : {
      "ObjectId" : "f0ffaaea5f9ae2937d494f6be771a9ce5421b4f7",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/boost_1_68_0/libs/regex/test/profile/Makefile" : {
      "ObjectId" : "f1b3def7b37773c389b331af85e2a778708bc19a",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# copyright John Maddock 2003\n\n# Distributed under the Boost Software License, Version 1.0. \n\n# (See accompanying file LICENSE_1_0.txt or copy at \n\n# http://www.boost.org/LICENSE_1_0.txt.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/libs/serialization/CMake/CMakeLists.txt" : {
      "ObjectId" : "a6b14787bee62f566a02e5dac357635a970df9a9",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build control file for Serialization Library tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Compiler settings\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# we use gcc to test for C++03 compatibility\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++98\")\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#\n\n# IDE settings\n\n#\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# note: it seems that bjam builds both address models in any case\n\n# so we can defer this decision to the IDE just as we do for debug/release\n\n# so we'll not use this now\n\n# set(Boost_ADDRESS_MODEL 64 CACHE INTEGER \"32/64 bits\")\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#\n\n# Locate Project Prerequisites \n\n#\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Boost\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# note: we're assuming that boost has been built with:\n\n# ./b2 —-layout=versioned toolset=clang-darwin link=static,shared variant=debug,release stage\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###########################\n\n# special notes for Xcode.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# these three should result in CMake setting the variables\n\n# Boost_SERIALIZATION_LIBRARY_DEBUG … to the correct values.  \n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# But my current version of CMake doesn't automatically set the library names\n\n# to point to the the libraries to be used.  The variables are created\n\n# but they are not initialized.  So be prepared to set these variables by hand.\n\n# If you want to use the static libraries - point to the boost libraries ending\n\n# in \".a\".  If you want to use the shared boost libraries - point to the libraries\n\n# ending in \".dylib\".\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# But wait - there's more.\n\n# if both lib.a and lib.dylib both exist in the library directory, Xcode will\n\n# automatically chose the *.dylib one - and there's nothing you can do to fix this.\n\n# So my recommendation is \n\n# a) to place the compiled libraries in two different directories\n\n#    - e.g. stage/lib-static/*.a and stage/lib-shared/*.dylib\n\n#    and set the CMake variable Boost_LIBRARY_DIR to point to one or the other\n\n# b) create two different CMake build directories - build-static and build-shared\n\n#    and switch between projects as desired.  I like to test both since\n\n#    there are things like dead code elimination and visibility which vary\n\n#    between the two environments.\n\n#\n\n#    caveat - as I write this, I've been unable to get the tests on the shared\n\n#    library to function. Problem is that one needs to either put the shared\n\n#    libraries in a special known place or set an environmental\n\n#    variable which points to the shared library directory.  I prefer the latter\n\n#    but I've been unable to figure out how to get Xcode to do on a global basis\n\n#    and it's not practical to do this for 247 test targets one at a time.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# c) The targets in the project will by default be built as universal 32/64 binaries\n\n#    I have yet to experiment with these yet so I just set the target to 64 bit.\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# end special note for Xcode\n\n############################\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#include_directories(\"../include\" \"${Boost_INCLUDE_DIRS}\")\n\n#link_directories(\"${Boost_LIBRARY_DIRS}\")\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "###########################\n\n# library builds\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# doesn't show up in \"Source Files\" in Xcode\"'\n",
        "Line" : 178,
        "CharPositionInLine" : 31
      },
      "18" : {
        "Text" : "# doesn't show up in \"Source Files\" in Xcode\"'\n",
        "Line" : 190,
        "CharPositionInLine" : 31
      },
      "19" : {
        "Text" : "# end library build\n\n###########################\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "###########################\n\n# test targets\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# serialization(test_dll_simple dll_a_lib)\n\n# compile test_dll_plugin.cpp\n\n# Running the following test requires that the test know the directory \n\n# in which the dll is stored. I don't know how to extract this from bjam\n\n# serialization(test_dll_plugin : : dll_polymorphic_derived2_lib)\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# end test targets\n\n####################\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "####################\n\n# add headers in IDE\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# for serialisation\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# for wserialization\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# end headers in IDE\n\n####################\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#####################\n\n# add test project to run misc tests\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# end test project\n\n#####################\n",
        "Line" : 432,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "deps/src/boost_1_68_0/libs/spirit/doc/refcard/Makefile" : {
      "ObjectId" : "1034b2539d9c88bfa3227af5d4c8e9a643706568",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/test/build/CMakeLists.txt" : {
      "ObjectId" : "ad2ebd02647226fe78a190623d989630f8afcdea",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2014, Raffi Enficiaud\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use, modification, and distribution are subject to the\n\n# Boost Software License, Version 1.0. (See accompanying file\n\n# LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# See http://www.boost.org/libs/test for the library home page.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# build type, by default to release (with optimisations)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ctest sets BUILD_TESTING automatically, but does not seem to serve its purpose.\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# c++11 options\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++0x\")\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# global path\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# global include on boost\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# include globs\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# organize files\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "####\n\n# Documentation files (files only, no target)\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "####\n\n# Unit tests\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# documentation tests\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# unit tests folder\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# datasets\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "####\n\n# TS writing-test-ts\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#get_filename_component(_v \"${_v}\" DIRECTORY)\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# test suite\n",
        "Line" : 203,
        "CharPositionInLine" : 13
      },
      "CommentCount" : 19
    },
    "deps/src/boost_1_68_0/libs/test/doc/snippet/dataset_1/CMakeLists.txt" : {
      "ObjectId" : "ce21a40a579fad6093fc62a62b0886010ebe5f3e",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  (C) Copyright Raffi Enficiaud 2014.\n\n#  Distributed under the Boost Software License, Version 1.0.\n\n#  (See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n#  See http://www.boost.org/libs/test for the library home page.\n\n#\n\n#  trivial cmake script for running the dataset\n\n# ***************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# not meant to be included in the documentation\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# creates the executable\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# indicates the include paths\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# indicates the link paths\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# declares a test with our executable\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/boost_1_68_0/libs/yap/CMakeLists.txt" : {
      "ObjectId" : "1686f7c56e03f9ece9f4481db7565c10345f1b07",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################## \n\n# C++ standard version selection\n\n################################################## \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################\n\n# Sanitizers\n\n##################################################\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##################################################\n\n# Code coverage\n\n##################################################\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##################################################\n\n# Clang+Linux support\n\n##################################################\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##################################################\n\n# Dependencies\n\n##################################################\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##################################################\n\n# yap library\n\n##################################################\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Doesn't build docs, just the snippets files.\n",
        "Line" : 120,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 7
    },
    "deps/src/boost_1_68_0/libs/yap/cmake/Disassemble.cmake" : {
      "ObjectId" : "93f6e9a5be90b82e051b0c549fa4ad2212dd8de8",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2016\n\n# Copyright Zach Laine 2016\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n\n#\n\n#\n\n# This CMake module provides a way to get the disassembly of a function within\n\n# an executable created with `add_executable`. The module provides a `disassemble`\n\n# function that creates a target which, when built, outputs the disassembly of\n\n# the given function within an executable to standard output.\n\n#\n\n# Parameters\n\n# ----------\n\n# target:\n\n#   The name of the target to create. Building this target will generate the\n\n#   requested disassembly.\n\n#\n\n# EXECUTABLE executable:\n\n#   The name of an executable to disassemble. This must be the name of a valid\n\n#   executable that was created with `add_executable`. The disassembly target\n\n#   thus created will be made dependent on the executable, so that it is built\n\n#   automatically when the disassembly is requested.\n\n#\n\n# FUNCTION function-name:\n\n#   The name of the function to disassemble in the executable.\n\n#\n\n# [ALL]:\n\n#   If provided, the generated target is included in the 'all' target.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# options\n\n# 1 value args\n\n# multivalued args\n",
        "Line" : 31,
        "CharPositionInLine" : 51
      },
      "CommentCount" : 2
    },
    "deps/src/boost_1_68_0/libs/yap/cmake/dependencies.cmake" : {
      "ObjectId" : "91c30a19b6029bab35aca60439da651a492c6682",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2016\n\n# Copyright Zach Laine 2016\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Boost\n\n###############################################################################\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# Google Benchmark\n\n###############################################################################\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n# Autodiff (see https://github.com/fqiang/autodiff_library)\n\n###############################################################################\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/boost_1_68_0/libs/yap/doc/CMakeLists.txt" : {
      "ObjectId" : "435ccdd2975245256006656b8323ed97030c17ea",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/yap/example/CMakeLists.txt" : {
      "ObjectId" : "7527c2f4ee91c80069262d7096acf5f76c39c167",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/yap/perf/CMakeLists.txt" : {
      "ObjectId" : "9c2614918208bd6fa6e54190e8616e017de6ed7d",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/libs/yap/test/CMakeLists.txt" : {
      "ObjectId" : "c218f090bf9461a969df1466b629f7ad69e6c446",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#message(\"foo=${foo}\")\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "deps/src/boost_1_68_0/tools/build/example/make/main_cpp.pro" : {
      "ObjectId" : "237c8ce181774d991a9dbdd8cacf1a5fb9f199f1",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/boost_1_68_0/tools/build/src/engine/boehm_gc/Makefile.am" : {
      "ObjectId" : "e632864df2b7bf33a97469b112be0e104bc15b5e",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Copyright (c) 1999-2001 by Red Hat, Inc. All rights reserved.\n\n# \n\n# THIS MATERIAL IS PROVIDED AS IS, WITH ABSOLUTELY NO WARRANTY EXPRESSED\n\n# OR IMPLIED.  ANY USE IS AT YOUR OWN RISK.\n\n# \n\n# Permission is hereby granted to use or copy this program\n\n# for any purpose,  provided the above notices are retained on all copies.\n\n# Permission to modify the code and to distribute modified code is granted,\n\n# provided the above notices are retained, and a notice that the code was\n\n# modified is included with the above copyright notice.\n\n#\n\n# Original author: Tom Tromey\n\n# Severely truncated by Hans-J. Boehm\n\n# Modified by: Grzegorz Jakacki <jakacki at acm dot org>\n\n# Modified by: Petter Urkedal <petter.urkedal@nordita.dk> (2005-04)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Process this file with automake to produce Makefile.in.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## FIXME: `make distcheck' in this directory will not currently work.\n\n##     This is most likely to the explicit flags passed to submakes.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We currently use the source files directly from libatomic_ops, if we\n\n# use the internal version.  This is done since libatomic_ops doesn't\n\n# use libtool, since it has no real use for it.  But that seems to make\n\n# it hard to use either the resulting object files or libraries.\n\n# Thus there seems too be no real reason to recusively build in the\n\n# libatomic_ops directory.\n\n# if USE_INTERNAL_LIBATOMICS_OPS\n\n# SUBDIRS = @maybe_libatomic_ops@\n\n# else\n\n# SUBDIRS =\n\n# endif\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Initialize variables so that we can declare files locally.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# C Library\n\n# ---------\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# C Library: Architecture Dependent\n\n# ---------------------------------\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Include THREADDLLIBS here to ensure that the correct versions of\n\n# linuxthread semaphore functions get linked:\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# C++ Interface\n\n# -------------\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# FIXME: If Visual C++ users use Makefile.am, this should go into\n\n# pkginclude_HEADERS with proper AM_CONDITIONALization.  Otherwise\n\n# delete this comment.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Misc\n\n# ----\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## FIXME: relies on internal code generated by automake.\n\n## FIXME: ./configure --enable-dependency-tracking should be used \n\n#all_objs = @addobjs@ $(libgc_la_OBJECTS)\n\n#$(all_objs) : include/private/gcconfig.h include/private/gc_priv.h \\\n#include/private/gc_hdrs.h include/gc.h include/gc_gcj.h \\\n#include/gc_pthread_redirects.h include/gc_config_macros.h \\\n#include/private/thread_local_alloc.h include/private_support.h \\\n#include/private/pthread_stop_world.h \\\n#include/gc_mark.h @addincludes@\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## FIXME: we shouldn't have to do this, but automake forces us to.\n\n## We use -Wp,-P to strip #line directives.  Irix `as' chokes on\n\n## these.\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## XLC neither requires nor tolerates the unnecessary assembler goop\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "## We use -Wp,-P to strip #line directives.  Irix `as' chokes on\n\n## these.\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "## We need to add DEFS to assembler flags\n\n## :FIXME: what if assembler does not accept -D... ?\n\n##     (use Autoconf to prepare ASDEFS ???)\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## callprocs --- used by Makefile.{dj,direct}\n\n## configure.host --- used by Makefile.{am,dj,direct}\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# headers which are not installed\n\n# (see include/include.am for more)\n\n#\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# documentation which is not installed\n\n#\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# other makefiles\n\n# :GOTCHA: deliberately we do not include 'Makefile'\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# files used by makefiles other than Makefile.am\n\n#\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# The libatomic_ops library.  This is not ideal, since we pick up junk from\n\n# there.  The hard-coded version number should also go.\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# this is an auxiliary shell file used by Makefile and Makefile.direct\n\n#\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# :FIXME: why do we distribute this one???\n\n#\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\n\n# :GOTCHA: GNU make rule for making .s out of .S is flawed, \n\n# it will not remove dest if building fails\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Putting these at the top causes cord to be built first, and not find libgc.a\n\n# on HP/UX.  There may be a better fix.\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "deps/src/bzip2-1.0.6/Makefile" : {
      "ObjectId" : "03517d3111f162c49c1066612b7bd9ef2a482fad",
      "LastModified" : "2018-12-14T00:22:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ------------------------------------------------------------------\n\n# This file is part of bzip2/libbzip2, a program and library for\n\n# lossless, block-sorting data compression.\n\n#\n\n# bzip2/libbzip2 version 1.0.6 of 6 September 2010\n\n# Copyright (C) 1996-2010 Julian Seward <jseward@bzip.org>\n\n#\n\n# Please read the WARNING, DISCLAIMER and PATENTS sections in the\n\n# README file.\n\n#\n\n# This program is released under the terms of the license contained\n\n# in the file LICENSE.\n\n# ------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To assist in cross-compiling\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Where you want it installed when you do 'make install'\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# For rebuilding the manual from sources on my SuSE 9.1 box\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Auxiliary/CMakeLists.txt" : {
      "ObjectId" : "53cf2c518dcd28b56144cbb10f4aed8807405ef4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Auxiliary/bash-completion/CMakeLists.txt" : {
      "ObjectId" : "c0a88999ecde24c01f79f5581f7dc8a25ba662ba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Always install completion file in local dir\n\n# in order to be sure to always be able to install\n\n# in a local user directory rooted in a single directory.\n\n# packager should either patch that out or\n\n# add symlinks to the files in appropriate places\n\n#  /etc/bash_completion.d/\n\n#  DATADIR/completions (may be /usr/share/<package>/completions\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/CMakeCPack.cmake" : {
      "ObjectId" : "dc9f0bae686f54564bafd4eccb58015d3e4b334c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# By default, do not warn when built on machines using only VS Express:\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Installers for 32- vs. 64-bit CMake:\n\n#  - Root install directory (displayed to end user at installer-run time)\n\n#  - \"NSIS package/display name\" (text used in the installer GUI)\n\n#  - Registry key used to store info about the installation\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# make sure package is not Cygwin-unknown, for Cygwin just\n\n# cygwin is good for the system name\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Command for configure IFW script templates\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Advanced IFW configuration\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Components\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Components scripts configuration\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if the CPACK_PACKAGE_FILE_NAME is not defined by the cache\n\n# default to source package - system, on cygwin system is not\n\n# needed\n",
        "Line" : 210,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Set the options file that needs to be included inside CMakeCPackOptions.cmake\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Files specific to version control.\n",
        "Line" : 249,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Cygwin package build.\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Temporary files.\n",
        "Line" : 259,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# include CPack model once all variables are set\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "deps/src/cmake-3.13.4/CMakeGraphVizOptions.cmake" : {
      "ObjectId" : "1add78c55b94012499ea572206a43bfe0d1efa31",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/CMakeLists.txt" : {
      "ObjectId" : "998db15d35e563867a0332453a2db75c4b307256",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure we can find internal find_package modules only used for\n\n# building CMake and not for shipping externally\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Running from bootstrap script.  Set local variable and remove from cache.\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Disallow architecture-specific try_run.  It may not run on the host.\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Use most-recent available language dialects with GNU and Clang\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# include special compile flags for some compilers\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# check for available C++ features\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# set the internal encoding of CMake to UTF-8\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# option to use COMPONENT with install command\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# option to disable installing 3rd-party dependencies\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# option to build reference for CMake developers\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# a macro to deal with system libraries, implemented as a macro\n\n# simply to improve readability of the main script\n\n#-----------------------------------------------------------------------\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Options have dependencies.\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Optionally use system xmlrpc.  We no longer build or use it by default.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Allow the user to enable/disable all system utility library options by\n\n# defining CMAKE_USE_SYSTEM_LIBRARIES or CMAKE_USE_SYSTEM_LIBRARY_${util}.\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Optionally use system utility libraries.\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# For now use system KWIML only if explicitly requested rather\n\n# than activating via the general system libs options.\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Mention to the user what system libraries are being used.\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Inform utility library header wrappers whether to use system versions.\n",
        "Line" : 189,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# a macro to determine the generator and ctest executable to use\n\n# for testing. Simply to improve readability of the main script.\n\n#-----------------------------------------------------------------------\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# This variable is set by cmake, however to\n\n# test cmake we want to make sure that\n\n# the ctest from this cmake is used for testing\n\n# and not the ctest from the cmake building and testing\n\n# cmake.\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# configure some files for testing\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Provide a way for Visual Studio Express users to turn OFF the new FOLDER\n\n# organization feature. Default to ON for non-Express users. Express users must\n\n# explicitly turn off this option to build CMake in the Express IDE...\n\n#\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Create a preprocessor definition that depends on .clang-tidy content so\n\n# the compile command will change when .clang-tidy changes.  This ensures\n\n# that a subsequent build re-runs clang-tidy on all sources even if they\n\n# do not otherwise need to be recompiled.  Nothing actually uses this\n\n# definition.  We add it to targets on which we run clang-tidy just to\n\n# get the build dependency on the .clang-tidy file.\n",
        "Line" : 267,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# a macro that only sets the FOLDER target property if it's\n\n# \"appropriate\"\n\n#-----------------------------------------------------------------------\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# a macro to build the utilities used by CMake\n\n# Simply to improve readability of the main script.\n\n#-----------------------------------------------------------------------\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Create the kwsys library for CMake.\n",
        "Line" : 316,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Setup third-party libraries.\n\n# Everything in the tree should be able to include files from the\n\n# Utilities directory.\n",
        "Line" : 341,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# check for the use of system libraries versus builtin ones\n\n# (a macro defined in this file)\n",
        "Line" : 350,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Build zlib library for Curl, CMake, and CTest.\n",
        "Line" : 381,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Build Curl library for CTest.\n",
        "Line" : 399,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Build Compress library for CTest.\n",
        "Line" : 438,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Build expat library for CMake, CTest, and libarchive.\n",
        "Line" : 446,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Build or use system libbz2 for libarchive.\n",
        "Line" : 463,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Build or use system liblzma for libarchive.\n",
        "Line" : 477,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Build or use system libarchive for CMake and CTest.\n",
        "Line" : 497,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Build jsoncpp library.\n",
        "Line" : 532,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Build libuv library.\n",
        "Line" : 547,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Build XMLRPC library for CMake and CTest.\n",
        "Line" : 562,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Use curses?\n",
        "Line" : 574,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "#-----------------------------------------------------------------------\n",
        "Line" : 604,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# The main section of the CMakeLists file\n\n#\n\n#-----------------------------------------------------------------------\n\n# Compute CMake_VERSION, etc.\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Include the standard Dart testing module\n",
        "Line" : 629,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Set up test-time configuration.\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# where to write the resulting executables and libraries\n",
        "Line" : 638,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# The CMake executables usually do not need any rpath to run in the build or\n\n# install tree.\n",
        "Line" : 644,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Load install destinations.\n",
        "Line" : 648,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# no clue why we are testing for this here\n",
        "Line" : 655,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# CMAKE_TESTS_CDASH_SERVER: CDash server used by CMake/Tests.\n\n#\n\n# If not defined or \"\", this variable defaults to the server at\n\n# \"http://open.cdash.org\".\n\n#\n\n# If set explicitly to \"NOTFOUND\", curl tests and ctest tests that use\n\n# the network are skipped.\n\n#\n\n# If set to something starting with \"http://localhost/\", the CDash is\n\n# expected to be an instance of CDash used for CDash testing, pointing\n\n# to a cdash4simpletest database. In these cases, the CDash dashboards\n\n# should be run first.\n\n#\n",
        "Line" : 661,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# build the utilities (a macro defined in this file)\n",
        "Line" : 684,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# On NetBSD ncurses is required, since curses doesn't have the wsyncup()\n\n# function. ncurses is installed via pkgsrc, so the library is in /usr/pkg/lib,\n\n# which isn't in the default linker search path. So without RPATH ccmake\n\n# doesn't run and the build doesn't succeed since ccmake is executed for\n\n# generating the documentation.\n",
        "Line" : 687,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# make sure CMAKE_INSTALL_PREFIX ends in /\n",
        "Line" : 705,
        "CharPositionInLine" : 6
      },
      "52" : {
        "Text" : "# The same might be true on other systems for other libraries.\n\n# Then only enable RPATH if we have are building at least with cmake 2.4,\n\n# since this one has much better RPATH features than cmake 2.2.\n\n# The executables are then built with the RPATH for the libraries outside\n\n# the build tree, which is both the build and the install RPATH.\n",
        "Line" : 720,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# add the uninstall support\n",
        "Line" : 735,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# setup some Testing support (a macro defined in this file)\n",
        "Line" : 747,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# build the remaining subdirectories\n",
        "Line" : 775,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# Install license file as it requires.\n",
        "Line" : 800,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# Install script directories.\n",
        "Line" : 803,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Install auxiliary files integrating with other tools.\n",
        "Line" : 817,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 59
    },
    "deps/src/cmake-3.13.4/CTestConfig.cmake" : {
      "ObjectId" : "020582e4576c531a39a6d876e0ce279f3d9f0046",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/CompileFlags.cmake" : {
      "ObjectId" : "ec9b31bd91010a3c3eedf556f938c70905b35dee",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# set some special flags for different compilers\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Disable deprecation warnings for standard C functions.\n\n# really only needed for newer versions of VS, but should\n\n# not hurt other versions, and this will work into the\n\n# future\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#silence duplicate symbol warnings on AIX\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Workaround for short jump tables on PA-RISC\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CMake knows how to add this flag for compilation as C++11,\n\n# but has not been taught that SunPro needs it for linking too.\n\n# Add it in a place that will be used for both.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Suppress warnings from PGI compiler.\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# use the ansi CXX compile flag for building cmake\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Allow per-translation-unit parallel builds when using MSVC\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "deps/src/cmake-3.13.4/DartConfig.cmake" : {
      "ObjectId" : "7d7c45bb9b04752c1034b7a198d73c64a26edd43",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/AddFileDependencies.cmake" : {
      "ObjectId" : "fdd843266bad92e8d41f732a9a27daad21396dfb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# AddFileDependencies\n\n# -------------------\n\n#\n\n# ADD_FILE_DEPENDENCIES(source_file depend_files...)\n\n#\n\n# Adds the given files as dependencies to source_file\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/AndroidTestUtilities.cmake" : {
      "ObjectId" : "62d04f3effd2c125e59814dd222f33faa6c7ab4c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[======================================================================[.rst:\nAndroidTestUtilities\n------------------------\n\nCreate a test that automatically loads specified data onto an Android device.\n\nIntroduction\n^^^^^^^^^^^^\n\nUse this module to push data needed for testing an Android device behavior\nonto a connected Android device. The module will accept files and libraries as\nwell as separate destinations for each. It will create a test that loads the\nfiles into a device object store and link to them from the specified\ndestination. The files are only uploaded if they are not already in the object\nstore.\n\nFor example:\n\n.. code-block:: cmake\n\n  include(AndroidTestUtilities)\n  android_add_test_data(\n    example_setup_test\n    FILES <files>...\n    LIBS <libs>...\n    DEVICE_TEST_DIR \"/data/local/tests/example\"\n    DEVICE_OBJECT_STORE \"/sdcard/.ExternalData/SHA\"\n    )\n\n\nAt build time a test named \"example_setup_test\" will be created.  Run this test\non the command line with :manual:`ctest(1)` to load the data onto the Android\ndevice.\n\nModule Functions\n^^^^^^^^^^^^^^^^\n\n.. command:: android_add_test_data\n\n  ::\n\n    android_add_test_data(<test-name>\n      [FILES <files>...] [FILES_DEST <device-dir>]\n      [LIBS <libs>...]   [LIBS_DEST <device-dir>]\n      [DEVICE_OBJECT_STORE <device-dir>]\n      [DEVICE_TEST_DIR <device-dir>]\n      [NO_LINK_REGEX <strings>...]\n      )\n\n  The ``android_add_test_data`` function is used to copy files and libraries\n  needed to run project-specific tests. On the host operating system, this is\n  done at build time. For on-device testing, the files are loaded onto the\n  device by the manufactured test at run time.\n\n  This function accepts the following named parameters:\n\n  ``FILES <files>...``\n    zero or more files needed for testing\n  ``LIBS <libs>...``\n    zero or more libraries needed for testing\n  ``FILES_DEST <device-dir>``\n    absolute path where the data files are expected to be\n  ``LIBS_DEST <device-dir>``\n    absolute path where the libraries are expected to be\n  ``DEVICE_OBJECT_STORE <device-dir>``\n    absolute path to the location where the data is stored on-device\n  ``DEVICE_TEST_DIR <device-dir>``\n    absolute path to the root directory of the on-device test location\n  ``NO_LINK_REGEX <strings>...``\n    list of regex strings matching the names of files that should be\n    copied from the object store to the testing directory\n#]======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The parameters to this function should be set to the list of directories,\n\n# files, and libraries that need to be installed prior to testing.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# As the names suggest, oneValueArgs lists the arguments that specify a\n\n# single value, while multiValueArgs can contain one or more values.\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# For example, if you called this function with FILES </path/to/file>\n\n# then this path would be stored in the variable AST_FILES.\n\n# The AST prefix stands for the name of this function (android_add_test_data).\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Copy all test data files into the binary directory, where tests are run.\n\n# ExternalData will handle fetching DATA{...} references.\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Convert ExternalData placeholder file names to DATA{} syntax.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Use ExternalData if any DATA{} files were found.\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# For regular files on Linux, just copy them directly.\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Check if a destination was specified.  If not, we copy by default\n\n# into this project's binary directory, preserving its relative path.\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Modules/AndroidTestUtilities/PushToAndroidDevice.cmake" : {
      "ObjectId" : "fccff6725eb37b52b8226341bf73dd65a898ac98",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This function handles pushing all of the test files needed to the device.\n\n# It places the data files in the object store and makes links to them from\n\n# the appropriate directories.\n\n#\n\n# This function accepts the following named parameters:\n\n# DIRS          : one or more directories needed for testing.\n\n# FILES         : one or more files needed for testing.\n\n# LIBS          : one or more libraries needed for testing.\n\n# DIRS_DEST     : specify where the directories should be installed.\n\n# FILES_DEST    : specify where the files should be installed.\n\n# LIBS_DEST     : specify where the libraries should be installed.\n\n# DEV_OBJ_STORE : specify where the actual data files should be placed.\n\n# DEV_TEST_DIR  : specify the root file for the module test directory.\n\n# The DEV_OBJ_STORE and DEV_TEST_DIR variables are required.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The parameters to this function should be set to the list of directories,\n\n# files, and libraries that need to be installed prior to testing.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The functions in the module need the adb executable.\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Checks to make sure that a given file exists on the device. If it does,\n\n# if(file_exists) will return true.\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# when a directory exists but is empty the output is empty\n",
        "Line" : 45,
        "CharPositionInLine" : 20
      },
      "6" : {
        "Text" : "# -1 means the file exists\n",
        "Line" : 49,
        "CharPositionInLine" : 42
      },
      "7" : {
        "Text" : "# Checks to see if a filename matches a regex.\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# If a file with given name exists in the CMAKE_BINARY_DIR then use that file.\n\n# Otherwise use the file with root in CMAKE_CURRENT_SOURCE_DIR.\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# This function pushes the data into the device object store and\n\n# creates a link to that data file in a specified location.\n\n#\n\n# This function requires the following un-named parameters:\n\n# data_path        : absolute path to data to load into dev obj store.\n\n# dev_object_store : absolute path to the device object store directory.\n\n# link_origin      : absolute path to the origin of the link to the dev obj store data file.\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# TODO: Verify that the object store file is indeed hashed correctly. Could use md5.\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#----------------------------------------------------------------------------\n\n#--------------------Beginning of actual function----------------------------\n\n#----------------------------------------------------------------------------\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Setup of object store and test dir.\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# This is protected in the SetupProjectTests module.\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Looping over the various types of test data possible.\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# determine if the data type destination has been explicitly specified.\n",
        "Line" : 130,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Loop over the files passed in\n",
        "Line" : 142,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# The absolute path can be through the source directory or the build directory.\n\n# If the file/dir exists in the build directory that version is chosen.\n",
        "Line" : 144,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Need to transfer all data files in the data directories to the device\n\n# except those explicitly ignored.\n",
        "Line" : 147,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# dest was determined earlier, relative_path is a dir, file is path from relative path to a data\n",
        "Line" : 151,
        "CharPositionInLine" : 10
      },
      "20" : {
        "Text" : "# LIBS\n",
        "Line" : 161,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 21
    },
    "deps/src/cmake-3.13.4/Modules/BundleUtilities.cmake" : {
      "ObjectId" : "89ca918cb1c21b68834fe793ad572e3270308517",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nBundleUtilities\n---------------\n\nFunctions to help assemble a standalone bundle application.\n\nA collection of CMake utility functions useful for dealing with .app\nbundles on the Mac and bundle-like directories on any OS.\n\nThe following functions are provided by this module:\n\n::\n\n   fixup_bundle\n   copy_and_fixup_bundle\n   verify_app\n   get_bundle_main_executable\n   get_dotapp_dir\n   get_bundle_and_executable\n   get_bundle_all_executables\n   get_item_key\n   get_item_rpaths\n   clear_bundle_keys\n   set_bundle_key_values\n   get_bundle_keys\n   copy_resolved_item_into_bundle\n   copy_resolved_framework_into_bundle\n   fixup_bundle_item\n   verify_bundle_prerequisites\n   verify_bundle_symlinks\n\nRequires CMake 2.6 or greater because it uses function, break and\nPARENT_SCOPE.  Also depends on GetPrerequisites.cmake.\n\nDO NOT USE THESE FUNCTIONS AT CONFIGURE TIME (from ``CMakeLists.txt``)!\nInstead, invoke them from an :command:`install(CODE)` or\n:command:`install(SCRIPT)` rule.\n\n::\n\n  FIXUP_BUNDLE(<app> <libs> <dirs>)\n\nFix up a bundle in-place and make it standalone, such that it can be\ndrag-n-drop copied to another machine and run on that machine as long\nas all of the system libraries are compatible.\n\nIf you pass plugins to fixup_bundle as the libs parameter, you should\ninstall them or copy them into the bundle before calling fixup_bundle.\nThe \"libs\" parameter is a list of libraries that must be fixed up, but\nthat cannot be determined by otool output analysis.  (i.e., plugins)\n\nGather all the keys for all the executables and libraries in a bundle,\nand then, for each key, copy each prerequisite into the bundle.  Then\nfix each one up according to its own list of prerequisites.\n\nThen clear all the keys and call verify_app on the final bundle to\nensure that it is truly standalone.\n\nAs an optional parameter (IGNORE_ITEM) a list of file names can be passed,\nwhich are then ignored (e.g. IGNORE_ITEM \"vcredist_x86.exe;vcredist_x64.exe\")\n\n::\n\n  COPY_AND_FIXUP_BUNDLE(<src> <dst> <libs> <dirs>)\n\nMakes a copy of the bundle <src> at location <dst> and then fixes up\nthe new copied bundle in-place at <dst>...\n\n::\n\n  VERIFY_APP(<app>)\n\nVerifies that an application <app> appears valid based on running\nanalysis tools on it.  Calls \"message(FATAL_ERROR\" if the application\nis not verified.\n\nAs an optional parameter (IGNORE_ITEM) a list of file names can be passed,\nwhich are then ignored (e.g. IGNORE_ITEM \"vcredist_x86.exe;vcredist_x64.exe\")\n\n::\n\n  GET_BUNDLE_MAIN_EXECUTABLE(<bundle> <result_var>)\n\nThe result will be the full path name of the bundle's main executable\nfile or an \"error:\" prefixed string if it could not be determined.\n\n::\n\n  GET_DOTAPP_DIR(<exe> <dotapp_dir_var>)\n\nReturns the nearest parent dir whose name ends with \".app\" given the\nfull path to an executable.  If there is no such parent dir, then\nsimply return the dir containing the executable.\n\nThe returned directory may or may not exist.\n\n::\n\n  GET_BUNDLE_AND_EXECUTABLE(<app> <bundle_var> <executable_var> <valid_var>)\n\nTakes either a \".app\" directory name or the name of an executable\nnested inside a \".app\" directory and returns the path to the \".app\"\ndirectory in <bundle_var> and the path to its main executable in\n<executable_var>\n\n::\n\n  GET_BUNDLE_ALL_EXECUTABLES(<bundle> <exes_var>)\n\nScans the given bundle recursively for all executable files and\naccumulates them into a variable.\n\n::\n\n  GET_ITEM_KEY(<item> <key_var>)\n\nGiven a file (item) name, generate a key that should be unique\nconsidering the set of libraries that need copying or fixing up to\nmake a bundle standalone.  This is essentially the file name including\nextension with \".\" replaced by \"_\"\n\nThis key is used as a prefix for CMake variables so that we can\nassociate a set of variables with a given item based on its key.\n\n::\n\n  CLEAR_BUNDLE_KEYS(<keys_var>)\n\nLoop over the list of keys, clearing all the variables associated with\neach key.  After the loop, clear the list of keys itself.\n\nCaller of get_bundle_keys should call clear_bundle_keys when done with\nlist of keys.\n\n::\n\n  SET_BUNDLE_KEY_VALUES(<keys_var> <context> <item> <exepath> <dirs>\n                        <copyflag> [<rpaths>])\n\nAdd a key to the list (if necessary) for the given item.  If added,\nalso set all the variables associated with that key.\n\n::\n\n  GET_BUNDLE_KEYS(<app> <libs> <dirs> <keys_var>)\n\nLoop over all the executable and library files within the bundle (and\ngiven as extra <libs>) and accumulate a list of keys representing\nthem.  Set values associated with each key such that we can loop over\nall of them and copy prerequisite libs into the bundle and then do\nappropriate install_name_tool fixups.\n\nAs an optional parameter (IGNORE_ITEM) a list of file names can be passed,\nwhich are then ignored (e.g. IGNORE_ITEM \"vcredist_x86.exe;vcredist_x64.exe\")\n\n::\n\n  COPY_RESOLVED_ITEM_INTO_BUNDLE(<resolved_item> <resolved_embedded_item>)\n\nCopy a resolved item into the bundle if necessary.  Copy is not\nnecessary if the resolved_item is \"the same as\" the\nresolved_embedded_item.\n\n::\n\n  COPY_RESOLVED_FRAMEWORK_INTO_BUNDLE(<resolved_item> <resolved_embedded_item>)\n\nCopy a resolved framework into the bundle if necessary.  Copy is not\nnecessary if the resolved_item is \"the same as\" the\nresolved_embedded_item.\n\nBy default, BU_COPY_FULL_FRAMEWORK_CONTENTS is not set.  If you want\nfull frameworks embedded in your bundles, set\nBU_COPY_FULL_FRAMEWORK_CONTENTS to ON before calling fixup_bundle.  By\ndefault, COPY_RESOLVED_FRAMEWORK_INTO_BUNDLE copies the framework\ndylib itself plus the framework Resources directory.\n\n::\n\n  FIXUP_BUNDLE_ITEM(<resolved_embedded_item> <exepath> <dirs>)\n\nGet the direct/non-system prerequisites of the resolved embedded item.\nFor each prerequisite, change the way it is referenced to the value of\nthe _EMBEDDED_ITEM keyed variable for that prerequisite.  (Most likely\nchanging to an \"@executable_path\" style reference.)\n\nThis function requires that the resolved_embedded_item be \"inside\" the\nbundle already.  In other words, if you pass plugins to fixup_bundle\nas the libs parameter, you should install them or copy them into the\nbundle before calling fixup_bundle.  The \"libs\" parameter is a list of\nlibraries that must be fixed up, but that cannot be determined by\notool output analysis.  (i.e., plugins)\n\nAlso, change the id of the item being fixed up to its own\n_EMBEDDED_ITEM value.\n\nAccumulate changes in a local variable and make *one* call to\ninstall_name_tool at the end of the function with all the changes at\nonce.\n\nIf the BU_CHMOD_BUNDLE_ITEMS variable is set then bundle items will be\nmarked writable before install_name_tool tries to change them.\n\n::\n\n  VERIFY_BUNDLE_PREREQUISITES(<bundle> <result_var> <info_var>)\n\nVerifies that the sum of all prerequisites of all files inside the\nbundle are contained within the bundle or are \"system\" libraries,\npresumed to exist everywhere.\n\nAs an optional parameter (IGNORE_ITEM) a list of file names can be passed,\nwhich are then ignored (e.g. IGNORE_ITEM \"vcredist_x86.exe;vcredist_x64.exe\")\n\n::\n\n  VERIFY_BUNDLE_SYMLINKS(<bundle> <result_var> <info_var>)\n\nVerifies that any symlinks found in the bundle point to other files\nthat are already also in the bundle...  Anything that points to an\nexternal file causes this function to fail the verification.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do not include this module at configure time!\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The functions defined in this file depend on the get_prerequisites function\n\n# (and possibly others) found in:\n\n#\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Read Info.plist as a list of lines:\n\n#\n",
        "Line" : 260,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Scan the lines for \"<key>CFBundleExecutable</key>\" - the line after that\n\n# is the name of the main executable.\n\n#\n",
        "Line" : 268,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Ultimate goal:\n\n# If not in \"Contents/MacOS\" then scan the bundle for matching files. If\n\n# there is only one executable file that matches, then use it, otherwise\n\n# it's an error...\n\n#\n\n#file(GLOB_RECURSE file_list \"${bundle}/${bundle_executable}\")\n",
        "Line" : 287,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# But for now, pragmatically, it's an error. Expect the main executable\n\n# for the bundle to be in Contents/MacOS, it's an error if it's not:\n\n#\n",
        "Line" : 294,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#\n\n# More inclusive technique... (This one would work on Windows and Linux\n\n# too, if a developer followed the typical Mac bundle naming convention...)\n\n#\n\n# If there is no Info.plist file, try to find an executable with the same\n\n# base name as the .app directory:\n\n#\n",
        "Line" : 301,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# If there is a \".app\" parent directory,\n\n# ascend until we hit it:\n\n#   (typical of a Mac bundle executable)\n\n#\n",
        "Line" : 318,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Otherwise use a directory containing the exe\n\n#   (typical of a non-bundle executable on Mac, Windows or Linux)\n\n#\n",
        "Line" : 334,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Is it a directory ending in .app?\n",
        "Line" : 355,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#message(STATUS \"info: handled .app directory case...\")\n",
        "Line" : 363,
        "CharPositionInLine" : 10
      },
      "13" : {
        "Text" : "# Is it an executable file?\n",
        "Line" : 371,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "#message(STATUS \"info: handled executable file in .app dir case...\")\n",
        "Line" : 379,
        "CharPositionInLine" : 10
      },
      "15" : {
        "Text" : "#message(STATUS \"info: handled executable file in any dir case...\")\n",
        "Line" : 385,
        "CharPositionInLine" : 10
      },
      "16" : {
        "Text" : "# find command is much quicker than checking every file one by one on Unix\n\n# which can take long time for large bundles, and since anyway we expect\n\n# executable to have execute flag set we can narrow the list much quicker.\n",
        "Line" : 412,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Substitute $ORIGIN with the exepath and add to the found rpaths\n",
        "Line" : 467,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# For frameworks, construct the name under the embedded path from the\n\n# opening \"${item_name}.framework/\" to the closing \"/${item_name}\":\n\n#\n",
        "Line" : 523,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# For other items, just use the same name as the original, but in the\n\n# embedded path:\n\n#\n",
        "Line" : 528,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Replace @executable_path and resolve \"..\" references:\n\n#\n",
        "Line" : 534,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# *But* -- if we are not copying, then force resolved_embedded_item to be\n\n# the same as resolved_item. In the case of multiple executables in the\n\n# original bundle, using the default_embedded_path results in looking for\n\n# the resolved executable next to the main bundle executable. This is here\n\n# so that exes in the other sibling directories (like \"bin\") get fixed up\n\n# properly...\n\n#\n",
        "Line" : 539,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#message(\"warning: item key '${key}' already in the list, subsequent references assumed identical to first\")\n",
        "Line" : 560,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Always use the exepath of the main bundle executable for @executable_path\n\n# replacements:\n\n#\n",
        "Line" : 575,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# But do fixups on all executables in the bundle:\n\n#\n",
        "Line" : 580,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Set keys for main executable first:\n\n#\n",
        "Line" : 584,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Get rpaths specified by main executable:\n\n#\n",
        "Line" : 588,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# For each extra lib, accumulate a key as well and then also accumulate\n\n# any of its prerequisites. (Extra libs are typically dynamically loaded\n\n# plugins: libraries that are prerequisites for full runtime functionality\n\n# but that do not show up in otool -L output...)\n\n#\n",
        "Line" : 593,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# For each executable found in the bundle, accumulate keys as we go.\n\n# The list of keys should be complete when all prerequisites of all\n\n# binaries in the bundle have been analyzed.\n\n#\n",
        "Line" : 622,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Main executable is scanned first above:\n\n#\n",
        "Line" : 627,
        "CharPositionInLine" : 6
      },
      "30" : {
        "Text" : "# Add the exe itself to the keys:\n\n#\n",
        "Line" : 630,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# Get rpaths specified by executable:\n\n#\n",
        "Line" : 634,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# Add each prerequisite to the keys:\n\n#\n",
        "Line" : 642,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "# preserve library symlink structure\n",
        "Line" : 665,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# ignore case on Windows\n",
        "Line" : 674,
        "CharPositionInLine" : 12
      },
      "35" : {
        "Text" : "# Propagate values to caller's scope:\n\n#\n",
        "Line" : 692,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# ignore case on Windows\n",
        "Line" : 710,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# ignore case on Windows\n",
        "Line" : 732,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "#message(STATUS \"copying COMMAND ${CMAKE_COMMAND} -E copy ${resolved_item} ${resolved_embedded_item}\")\n",
        "Line" : 743,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# ignore case on Windows\n",
        "Line" : 755,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# Full Framework (everything):\n",
        "Line" : 767,
        "CharPositionInLine" : 6
      },
      "41" : {
        "Text" : "#message(STATUS \"copying COMMAND ${CMAKE_COMMAND} -E copy_directory '${resolved_dir}' '${resolved_embedded_dir}'\")\n",
        "Line" : 772,
        "CharPositionInLine" : 6
      },
      "42" : {
        "Text" : "# Framework lib itself:\n\n#message(STATUS \"copying COMMAND ${CMAKE_COMMAND} -E copy ${resolved_item} ${resolved_embedded_item}\")\n",
        "Line" : 775,
        "CharPositionInLine" : 6
      },
      "43" : {
        "Text" : "# Plus Resources, if they exist:\n",
        "Line" : 779,
        "CharPositionInLine" : 6
      },
      "44" : {
        "Text" : "#message(STATUS \"copying COMMAND ${CMAKE_COMMAND} -E copy_directory '${resolved_resources}' '${resolved_embedded_resources}'\")\n",
        "Line" : 783,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# Some frameworks e.g. Qt put Info.plist in wrong place, so when it is\n\n# missing in resources, copy it from other well known incorrect locations:\n",
        "Line" : 787,
        "CharPositionInLine" : 6
      },
      "46" : {
        "Text" : "# Check for Contents/Info.plist in framework root (older Qt SDK):\n",
        "Line" : 790,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "#message(STATUS \"copying COMMAND ${CMAKE_COMMAND} -E copy_directory '${resolved_info_plist}' '${resolved_embedded_info_plist}'\")\n",
        "Line" : 794,
        "CharPositionInLine" : 10
      },
      "48" : {
        "Text" : "# Check if framework is versioned and fix it layout\n",
        "Line" : 799,
        "CharPositionInLine" : 6
      },
      "49" : {
        "Text" : "# Ensure Current symlink points to the framework version\n",
        "Line" : 804,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "# Restore symlinks in framework root pointing to current framework\n\n# binary and resources:\n",
        "Line" : 808,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "# This item's key is \"ikey\":\n\n#\n",
        "Line" : 829,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# Ensure the item is \"inside the .app bundle\" -- it should not be fixed up if\n\n# it is not in the .app bundle... Otherwise, we'll modify files in the build\n\n# tree, or in other varied locations around the file system, with our call to\n\n# install_name_tool. Make sure that doesn't happen here:\n\n#\n",
        "Line" : 833,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Each referenced item's key is \"rkey\" in the loop:\n\n#\n",
        "Line" : 871,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# Only if install_name_tool supports -delete_rpath:\n\n#\n",
        "Line" : 886,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Change this item's id and all of its references in one call\n\n# to install_name_tool:\n\n#\n",
        "Line" : 902,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# On the Mac,\n\n# \"embedded\" and \"system\" prerequisites are fine... anything else means\n\n# the bundle's prerequisites are not verified (i.e., the bundle is not\n\n# really \"standalone\")\n\n#\n\n# On Windows (and others? Linux/Unix/...?)\n\n# \"local\" and \"system\" prereqs are fine...\n\n#\n",
        "Line" : 1045,
        "CharPositionInLine" : 8
      },
      "57" : {
        "Text" : "# Found non-system/somehow-unacceptable prerequisites:\n",
        "Line" : 1072,
        "CharPositionInLine" : 10
      },
      "58" : {
        "Text" : "# TODO: implement this function for real...\n\n# Right now, it is just a stub that verifies unconditionally...\n",
        "Line" : 1095,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# Verify that the bundle does not have any \"external\" prerequisites:\n\n#\n",
        "Line" : 1120,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# Verify that the bundle does not have any symlinks to external files:\n\n#\n",
        "Line" : 1128,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 61
    },
    "deps/src/cmake-3.13.4/Modules/CMake.cmake" : {
      "ObjectId" : "caa5479dc47b117d14e1e60bb2fdaa52c5071b2c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is used by cmake.cxx to compute the CMAKE_ROOT location.\n\n# Do not remove this file from cvs without updating cmake.cxx to look\n\n# for a different file.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CMakeASM-ATTInformation.cmake" : {
      "ObjectId" : "d1970a2eecc5b97215b0a5ab8be6dd6344a18689",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# support for AT&T syntax assemblers, e.g. GNU as\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# *.S files are supposed to be preprocessed, so they should not be passed to\n\n# assembler but should be processed by gcc\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/CMakeASMInformation.cmake" : {
      "ObjectId" : "cbf307a8ca4fe2782e075634bcc0a7a8bd2fa146",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -I\n",
        "Line" : 11,
        "CharPositionInLine" : 53
      },
      "2" : {
        "Text" : "# Load compiler-specific information.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This should be included before the _INIT variables are\n\n# used to initialize the cache.  Since the rule variables\n\n# have if blocks on them, users can still define them here.\n\n# But, it should still be after the platform file so changes can\n\n# be made to those values.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Save the full path of the file so try_compile can use it.\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Save the full path of the file so try_compile can use it.\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set default assembler file extensions:\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Support for CMAKE_ASM${ASM_DIALECT}_FLAGS_INIT and friends:\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# to be done\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "deps/src/cmake-3.13.4/Modules/CMakeASM_MASMInformation.cmake" : {
      "ObjectId" : "a38c1140c44b3cf6f4133ab8fd6a7c8924dab154",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# support for the MS assembler, masm and masm64\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CMakeASM_NASMInformation.cmake" : {
      "ObjectId" : "1e3c608456f7a42bcd24e04fbb18070956c2015e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# support for the nasm assembler\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Load the generic ASMInformation file:\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/CMakeAddFortranSubdirectory.cmake" : {
      "ObjectId" : "4649f35a148dafd3d301a1ee9ea9b5f43a4a6bb7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CMakeAddFortranSubdirectory\n\n# ---------------------------\n\n#\n\n# Use MinGW gfortran from VS if a fortran compiler is not found.\n\n#\n\n# The 'add_fortran_subdirectory' function adds a subdirectory to a\n\n# project that contains a fortran only sub-project.  The module will\n\n# check the current compiler and see if it can support fortran.  If no\n\n# fortran compiler is found and the compiler is MSVC, then this module\n\n# will find the MinGW gfortran.  It will then use an external project to\n\n# build with the MinGW tools.  It will also create imported targets for\n\n# the libraries created.  This will only work if the fortran code is\n\n# built into a dll, so BUILD_SHARED_LIBS is turned on in the project.\n\n# In addition the CMAKE_GNUtoMS option is set to on, so that the MS .lib\n\n# files are created.  Usage is as follows:\n\n#\n\n# ::\n\n#\n\n#   cmake_add_fortran_subdirectory(\n\n#    <subdir>                # name of subdirectory\n\n#    PROJECT <project_name>  # project name in subdir top CMakeLists.txt\n\n#    ARCHIVE_DIR <dir>       # dir where project places .lib files\n\n#    RUNTIME_DIR <dir>       # dir where project places .dll files\n\n#    LIBRARIES <lib>...      # names of library targets to import\n\n#    LINK_LIBRARIES          # link interface libraries for LIBRARIES\n\n#     [LINK_LIBS <lib> <dep>...]...\n\n#    CMAKE_COMMAND_LINE ...  # extra command line flags to pass to cmake\n\n#    NO_EXTERNAL_INSTALL     # skip installation of external project\n\n#    )\n\n#\n\n# Relative paths in ARCHIVE_DIR and RUNTIME_DIR are interpreted with\n\n# respect to the build directory corresponding to the source directory\n\n# in which the function is invoked.\n\n#\n\n# Limitations:\n\n#\n\n# NO_EXTERNAL_INSTALL is required for forward compatibility with a\n\n# future version that supports installation of the external project\n\n# binaries during \"make install\".\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for a MinGW gfortran.\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Validate the MinGW gfortran we found.\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Configure scripts to run MinGW tools with the proper PATH.\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Parse arguments to function\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# if we are not using MSVC without fortran support\n\n# then just use the usual add_subdirectory to build\n\n# the fortran library\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# if we have MSVC without Intel fortran then setup\n\n# external projects to build with mingw fortran\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# use the same directory that add_subdirectory would have used\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# create build and configure wrapper scripts\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# create the external project\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# make the external project always run make with each build\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# create imported targets for all libraries\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# now setup link libraries for targets\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# process current target and target_libs\n",
        "Line" : 183,
        "CharPositionInLine" : 10
      },
      "15" : {
        "Text" : "# zero out target and target_libs\n",
        "Line" : 185,
        "CharPositionInLine" : 10
      },
      "16" : {
        "Text" : "# save the current target and set start to FALSE\n",
        "Line" : 189,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# append the lib to target_libs\n",
        "Line" : 193,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# process anything that is left in target and target_libs\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 19
    },
    "deps/src/cmake-3.13.4/Modules/CMakeBackwardCompatibilityC.cmake" : {
      "ObjectId" : "868467d9bb499c7efe1963892b6a5072ab6ce85d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Old CMake versions did not support OS X universal binaries anyway,\n\n# so just get through this with at least some size for the types.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CMakeBackwardCompatibilityCXX.cmake" : {
      "ObjectId" : "9c98ae66439d68f6ded69a904c52596220736cdb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CMakeBackwardCompatibilityCXX\n\n# -----------------------------\n\n#\n\n# define a bunch of backwards compatibility variables\n\n#\n\n# ::\n\n#\n\n#   CMAKE_ANSI_CXXFLAGS - flag for ansi c++\n\n#   CMAKE_HAS_ANSI_STRING_STREAM - has <strstream>\n\n#   include(TestForANSIStreamHeaders)\n\n#   include(CheckIncludeFileCXX)\n\n#   include(TestForSTDNamespace)\n\n#   include(TestForANSIForScope)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# check for some ANSI flags in the CXX compiler if it is not gnu\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# if CMAKE_TRY_ANSI_CXX_FLAGS has something in it, see\n\n# if the compiler accepts it\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# if the compiler liked the flag then set CMAKE_ANSI_CXXFLAGS\n\n# to the flag\n",
        "Line" : 34,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/CMakeBorlandFindMake.cmake" : {
      "ObjectId" : "18b9962c347a1fed8eb2ce28122ce4b42b649bec",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/CMakeCInformation.cmake" : {
      "ObjectId" : "bac71344743ec03004c029d63b7761e0fd49a009",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file sets the basic flags for the C language in CMake.\n\n# It also loads the available platform file for the system-compiler\n\n# if it exists.\n\n# It also loads a system - compiler - processor (or target hardware)\n\n# specific file, which is mainly useful for crosscompiling and embedded systems.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# some compilers use different extensions (e.g. sdcc uses .rel)\n\n# so set the extension here first so it can be overridden by the compiler specific file\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Load compiler-specific information.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# load a hardware specific file, mostly useful for embedded compilers\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# load the system- and compiler specific files\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# load any compiler-wrapper specific information\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We specify the compiler information in the system file for some\n\n# platforms, but this language may not have been enabled when the file\n\n# was first included.  Include it again to get the language info.\n\n# Remove this when all compiler info is removed from system files.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This should be included before the _INIT variables are\n\n# used to initialize the cache.  Since the rule variables\n\n# have if blocks on them, users can still define them here.\n\n# But, it should still be after the platform file so changes can\n\n# be made to those values.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Save the full path of the file so try_compile can use it.\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Save the full path of the file so try_compile can use it.\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# for most systems a module is the same as a shared library\n\n# so unless the variable CMAKE_MODULE_EXISTS is set just\n\n# copy the values from the LIBRARY variables\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# now define the following rule variables\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# CMAKE_C_CREATE_SHARED_LIBRARY\n\n# CMAKE_C_CREATE_SHARED_MODULE\n\n# CMAKE_C_COMPILE_OBJECT\n\n# CMAKE_C_LINK_EXECUTABLE\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# variables supplied by the generator at use time\n\n# <TARGET>\n\n# <TARGET_BASE> the target without the suffix\n\n# <OBJECTS>\n\n# <OBJECT>\n\n# <LINK_LIBRARIES>\n\n# <FLAGS>\n\n# <LINK_FLAGS>\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C compiler information\n\n# <CMAKE_C_COMPILER>\n\n# <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS>\n\n# <CMAKE_SHARED_MODULE_CREATE_C_FLAGS>\n\n# <CMAKE_C_LINK_FLAGS>\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Static library tools\n\n# <CMAKE_AR>\n\n# <CMAKE_RANLIB>\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# create a C shared library\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# create a C shared module just copy the shared library rule\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Create a static archive incrementally for large object file counts.\n\n# If CMAKE_C_CREATE_STATIC_LIBRARY is set it will override these.\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# compile a C file into an object file\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "deps/src/cmake-3.13.4/Modules/CMakeCSharpInformation.cmake" : {
      "ObjectId" : "48e1a1e5f8f63beeeeafaec1f329696e06ea0ebe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file sets the basic flags for the C# language in CMake.\n\n# It also loads the available platform file for the system-compiler\n\n# if it exists.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This should be included before the _INIT variables are\n\n# used to initialize the cache.  Since the rule variables\n\n# have if blocks on them, users can still define them here.\n\n# But, it should still be after the platform file so changes can\n\n# be made to those values.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# for most systems a module is the same as a shared library\n\n# so unless the variable CMAKE_MODULE_EXISTS is set just\n\n# copy the values from the LIBRARY variables\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add the flags to the cache based\n\n# on the initial values computed in the platform/*.cmake files\n\n# use _INIT variables so that this only happens the first time\n\n# and you can set these flags in the cmake cache\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set missing flags (if they are not defined). This is needed in the\n\n# unlikely case that you have only C# and no C/C++ targets in your\n\n# project.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/CMakeCUDAInformation.cmake" : {
      "ObjectId" : "43ae989e0873543fb6802dc3a5d2d2d9b74dc8c0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Load compiler-specific information.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# load the system- and compiler specific files\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# load a hardware specific file, mostly useful for embedded compilers\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# for most systems a module is the same as a shared library\n\n# so unless the variable CMAKE_MODULE_EXISTS is set just\n\n# copy the values from the LIBRARY variables\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# add the flags to the cache based\n\n# on the initial values computed in the platform/*.cmake files\n\n# use _INIT variables so that this only happens the first time\n\n# and you can set these flags in the cmake cache\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# now define the following rules:\n\n# CMAKE_CUDA_CREATE_SHARED_LIBRARY\n\n# CMAKE_CUDA_CREATE_SHARED_MODULE\n\n# CMAKE_CUDA_COMPILE_WHOLE_COMPILATION\n\n# CMAKE_CUDA_COMPILE_PTX_COMPILATION\n\n# CMAKE_CUDA_COMPILE_SEPARABLE_COMPILATION\n\n# CMAKE_CUDA_LINK_EXECUTABLE\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# create a shared library\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# create a shared module copy the shared library rule by default\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Create a static archive incrementally for large object file counts.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Specify how to compile when ptx has been requested\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#Specify how to compile when separable compilation has been requested\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Specify how to compile when whole compilation has been requested\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#The Ninja generator uses the make file dependency files to determine what\n\n#files need to be recompiled. Unfortunately, nvcc doesn't support building\n\n#a source file and generating the dependencies of said file in a single\n\n#invocation. Instead we have to state that you need to chain two commands.\n\n#\n\n#The makefile generators uses the custom CMake dependency scanner, and thus\n\n#it is exempt from this logic.\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# compile a cu file into an executable\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Add implicit host link directories that contain device libraries\n\n# to the device link line.\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#These are used when linking relocatable (dc) cuda code\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "deps/src/cmake-3.13.4/Modules/CMakeCXXInformation.cmake" : {
      "ObjectId" : "213dab84650727a6f1ca1a519fe6db5df2ec25e2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file sets the basic flags for the C++ language in CMake.\n\n# It also loads the available platform file for the system-compiler\n\n# if it exists.\n\n# It also loads a system - compiler - processor (or target hardware)\n\n# specific file, which is mainly useful for crosscompiling and embedded systems.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# some compilers use different extensions (e.g. sdcc uses .rel)\n\n# so set the extension here first so it can be overridden by the compiler specific file\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Load compiler-specific information.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# since the gnu compiler has several names force g++\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# load a hardware specific file, mostly useful for embedded compilers\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# load the system- and compiler specific files\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# load any compiler-wrapper specific information\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We specify the compiler information in the system file for some\n\n# platforms, but this language may not have been enabled when the file\n\n# was first included.  Include it again to get the language info.\n\n# Remove this when all compiler info is removed from system files.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This should be included before the _INIT variables are\n\n# used to initialize the cache.  Since the rule variables\n\n# have if blocks on them, users can still define them here.\n\n# But, it should still be after the platform file so changes can\n\n# be made to those values.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Save the full path of the file so try_compile can use it.\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Save the full path of the file so try_compile can use it.\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Create a set of shared library variable specific to C++\n\n# For 90% of the systems, these are the same flags as the C versions\n\n# so if these are not set just copy the flags from the c version\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# for most systems a module is the same as a shared library\n\n# so unless the variable CMAKE_MODULE_EXISTS is set just\n\n# copy the values from the LIBRARY variables\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# repeat for modules\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Initialize CXX link type selection flags from C versions.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# add the flags to the cache based\n\n# on the initial values computed in the platform/*.cmake files\n\n# use _INIT variables so that this only happens the first time\n\n# and you can set these flags in the cmake cache\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# now define the following rules:\n\n# CMAKE_CXX_CREATE_SHARED_LIBRARY\n\n# CMAKE_CXX_CREATE_SHARED_MODULE\n\n# CMAKE_CXX_COMPILE_OBJECT\n\n# CMAKE_CXX_LINK_EXECUTABLE\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# variables supplied by the generator at use time\n\n# <TARGET>\n\n# <TARGET_BASE> the target without the suffix\n\n# <OBJECTS>\n\n# <OBJECT>\n\n# <LINK_LIBRARIES>\n\n# <FLAGS>\n\n# <LINK_FLAGS>\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# CXX compiler information\n\n# <CMAKE_CXX_COMPILER>\n\n# <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS>\n\n# <CMAKE_CXX_SHARED_MODULE_CREATE_FLAGS>\n\n# <CMAKE_CXX_LINK_FLAGS>\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Static library tools\n\n# <CMAKE_AR>\n\n# <CMAKE_RANLIB>\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# create a shared C++ library\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# create a c++ shared module copy the shared library rule by default\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Create a static archive incrementally for large object file counts.\n\n# If CMAKE_CXX_CREATE_STATIC_LIBRARY is set it will override these.\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# compile a C++ file into an object file\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "deps/src/cmake-3.13.4/Modules/CMakeCheckCompilerFlagCommonPatterns.cmake" : {
      "ObjectId" : "e60ffe019c5d4a507e144e1e029bd631fe75dd8f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do NOT include this module directly into any of your code. It is meant as\n\n# a library for Check*CompilerFlag.cmake modules. It's content may change in\n\n# any way between releases.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GNU, NAG\n\n# Clang\n\n# Clang\n\n# Clang (cl)\n\n# MSVC, Intel\n\n# MSVC, any lang\n\n# Intel\n\n# Intel\n\n# Intel\n",
        "Line" : 11,
        "CharPositionInLine" : 60
      },
      "3" : {
        "Text" : "# Intel\n",
        "Line" : 20,
        "CharPositionInLine" : 62
      },
      "4" : {
        "Text" : "# HP\n\n# SunPro\n\n# XL\n",
        "Line" : 21,
        "CharPositionInLine" : 60
      },
      "5" : {
        "Text" : "# XL\n",
        "Line" : 24,
        "CharPositionInLine" : 70
      },
      "6" : {
        "Text" : "# XL\n",
        "Line" : 25,
        "CharPositionInLine" : 72
      },
      "7" : {
        "Text" : "# AIX\n",
        "Line" : 26,
        "CharPositionInLine" : 69
      },
      "8" : {
        "Text" : "# PGI\n\n# PGI\n\n# Open64\n\n# Borland\n\n# SunStudio 12\n\n# Fujitsu\n",
        "Line" : 27,
        "CharPositionInLine" : 60
      },
      "CommentCount" : 9
    },
    "deps/src/cmake-3.13.4/Modules/CMakeCommonLanguageInclude.cmake" : {
      "ObjectId" : "b043e1815a5e180efc795146a009c4883e4ffffd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this file has flags that are shared across languages and sets\n\n# cache values that can be initialized in the platform-compiler.cmake file\n\n# it may be included by more than one language.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Alias the build tool variable for backward compatibility.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/CMakeCompilerIdDetection.cmake" : {
      "ObjectId" : "f2d43b68762c8d3814eccea6e6a213a3494d77f0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Order is relevant here. For example, compilers which pretend to be\n\n# GCC must appear before the actual GCC.\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#Currently the only CUDA compilers are NVIDIA\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/CMakeDependentOption.cmake" : {
      "ObjectId" : "21d3c96b34f2d789386aa64c2a4eaf28ecef4dc2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CMakeDependentOption\n\n# --------------------\n\n#\n\n# Macro to provide an option dependent on other options.\n\n#\n\n# This macro presents an option to the user only if a set of other\n\n# conditions are true.  When the option is not presented a default value\n\n# is used, but any value set by the user is preserved for when the\n\n# option is presented again.  Example invocation:\n\n#\n\n# ::\n\n#\n\n#   CMAKE_DEPENDENT_OPTION(USE_FOO \"Use Foo\" ON\n\n#                          \"USE_BAR;NOT USE_ZOT\" OFF)\n\n#\n\n# If USE_BAR is true and USE_ZOT is false, this provides an option\n\n# called USE_FOO that defaults to ON.  Otherwise, it sets USE_FOO to\n\n# OFF.  If the status of USE_BAR or USE_ZOT ever changes, any value for\n\n# the USE_FOO option is saved so that when the option is re-enabled it\n\n# retains its old value.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CMakeDetermineASM-ATTCompiler.cmake" : {
      "ObjectId" : "a2efb6aa68f86debbac26d56bc16f110f917eb99",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# determine the compiler to use for ASM using AT&T syntax, e.g. GNU as\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CMakeDetermineASMCompiler.cmake" : {
      "ObjectId" : "dbc41c8c76c1e0b1de19948b936fea3ad8ab23d1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# determine the compiler to use for ASM programs\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# prefer the environment variable ASM\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# finally list compilers to try\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# the generic assembler support\n",
        "Line" : 22,
        "CharPositionInLine" : 41
      },
      "5" : {
        "Text" : "# List all default C and CXX compilers\n",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# some specific assembler \"dialect\"\n",
        "Line" : 35,
        "CharPositionInLine" : 9
      },
      "7" : {
        "Text" : "# Find the compiler.\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Table of per-vendor compiler id flags with expected output.\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# primary necessary to detect architecture, so the right archiver and linker can be picked\n\n# eg. IAR Assembler V8.10.1.12857/W32 for ARM\n\n# Cut out identification first, newline handling is a pain\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# If we have a gas/as cross compiler, they have usually some prefix, like\n\n# e.g. powerpc-linux-gas, arm-elf-gas or i586-mingw32msvc-gas , optionally\n\n# with a 3-component version number at the end\n\n# The other tools of the toolchain usually have the same prefix\n\n# NAME_WE cannot be used since then this test will fail for names like\n\n# \"arm-unknown-nto-qnx6.3.0-gas.exe\", where BASENAME would be\n\n# \"arm-unknown-nto-qnx6\" instead of the correct \"arm-unknown-nto-qnx6.3.0-\"\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Now try the C compiler regexp:\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Finally try the CXX compiler regexp:\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# configure variables set in this file for fast reload later on\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "deps/src/cmake-3.13.4/Modules/CMakeDetermineASM_MASMCompiler.cmake" : {
      "ObjectId" : "789b0494cc7a766b6308d10b0fe849c12ea3c7a7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the MS assembler (masm or masm64)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if we are using the 64bit cl compiler, assume we also want the 64bit assembler\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/CMakeDetermineASM_NASMCompiler.cmake" : {
      "ObjectId" : "dd753103143e54bb56a3556de7362236fe6788d0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the nasm assembler. yasm (http://www.tortall.net/projects/yasm/) is nasm compatible\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Load the generic DetermineASM compiler file with the DIALECT set properly:\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/CMakeDetermineCCompiler.cmake" : {
      "ObjectId" : "17706ea5042b46476e7c1213c976fbe78aee1e30",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# determine the compiler to use for C programs\n\n# NOTE, a generator may set CMAKE_C_COMPILER before\n\n# loading this file to force a compiler.\n\n# use environment variable CC first if defined by user, next use\n\n# the cmake variable CMAKE_GENERATOR_CC which can be defined by a generator\n\n# as a default compiler\n\n# If the internal cmake variable _CMAKE_TOOLCHAIN_PREFIX is set, this is used\n\n# as prefix for the tools (e.g. arm-elf-gcc, arm-elf-ar etc.). This works\n\n# currently with the GNU crosscompilers.\n\n#\n\n# Sets the following variables:\n\n#   CMAKE_C_COMPILER\n\n#   CMAKE_AR\n\n#   CMAKE_RANLIB\n\n#   CMAKE_COMPILER_IS_GNUCC\n\n#\n\n# If not already set before, it also sets\n\n#   _CMAKE_TOOLCHAIN_PREFIX\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Load system-specific compiler preferences for this language.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# prefer the environment variable CC\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# next try prefer the compiler specified by the generator\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# finally list compilers to try\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Each entry in this list is a set of extra flags to try\n\n# adding to the compile line to see if it helps produce\n\n# a valid identification file.\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Try compiling to an object file only.\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Try enabling ANSI mode on HP.\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Try compiling K&R-compatible code (needed by Bruce C Compiler).\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Build a small source file to identify the compiler.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Try to identify the compiler.\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# The IAR compiler produces weird output.\n\n# See https://gitlab.kitware.com/cmake/cmake/issues/10176#note_153591\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Match the link line from xcodebuild output of the form\n\n#  Ld ...\n\n#      ...\n\n#      /path/to/cc ...CompilerIdC/...\n\n# to extract the compiler front-end for the language.\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Set old compiler and platform id variables.\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# If we have a gcc cross compiler, they have usually some prefix, like\n\n# e.g. powerpc-linux-gcc, arm-elf-gcc or i586-mingw32msvc-gcc, optionally\n\n# with a 3-component version number at the end (e.g. arm-eabi-gcc-4.5.2).\n\n# The other tools of the toolchain usually have the same prefix\n\n# NAME_WE cannot be used since then this test will fail for names like\n\n# \"arm-unknown-nto-qnx6.3.0-gcc.exe\", where BASENAME would be\n\n# \"arm-unknown-nto-qnx6\" instead of the correct \"arm-unknown-nto-qnx6.3.0-\"\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# if \"llvm-\" is part of the prefix, remove it, since llvm doesn't have its own binutils\n\n# but uses the regular ar, objcopy, etc. (instead of llvm-objcopy etc.)\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# TI compilers are named e.g. cl6x, cl470 or armcl.exe\n",
        "Line" : 159,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# configure variables set in this file for fast reload later on\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "deps/src/cmake-3.13.4/Modules/CMakeDetermineCSharpCompiler.cmake" : {
      "ObjectId" : "5802b1511a71ce015c58afa4e1f49e713b559e0b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#include(Platform/${CMAKE_SYSTEM_NAME}-Determine-CSharp OPTIONAL)\n\n#include(Platform/${CMAKE_SYSTEM_NAME}-CSharp OPTIONAL)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build a small source file to identify the compiler.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Try to identify the compiler.\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# configure variables set in this file for fast reload later on\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/CMakeDetermineCUDACompiler.cmake" : {
      "ObjectId" : "113b520a0cd21b93dd3c851efafe615570792279",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# prefer the environment variable CUDACXX\n",
        "Line" : 18,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# finally list compilers to try\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#Allow the user to specify a host compiler\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build a small source file to identify the compiler.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Try to identify the compiler.\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Remove variable assignments.\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Split lines.\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#extract the compiler that is being used for linking\n",
        "Line" : 143,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "#prefix the line with cuda-fake-ld so that implicit link info believes it is\n\n#a link line\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# across all operating system each include directory is prefixed with -I\n",
        "Line" : 195,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# configure all variables set in this file\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "deps/src/cmake-3.13.4/Modules/CMakeDetermineCXXCompiler.cmake" : {
      "ObjectId" : "70d17a181076594571304470bcaa8f5d955af048",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# determine the compiler to use for C++ programs\n\n# NOTE, a generator may set CMAKE_CXX_COMPILER before\n\n# loading this file to force a compiler.\n\n# use environment variable CXX first if defined by user, next use\n\n# the cmake variable CMAKE_GENERATOR_CXX which can be defined by a generator\n\n# as a default compiler\n\n# If the internal cmake variable _CMAKE_TOOLCHAIN_PREFIX is set, this is used\n\n# as prefix for the tools (e.g. arm-elf-g++, arm-elf-ar etc.)\n\n#\n\n# Sets the following variables:\n\n#   CMAKE_CXX_COMPILER\n\n#   CMAKE_COMPILER_IS_GNUCXX\n\n#   CMAKE_AR\n\n#   CMAKE_RANLIB\n\n#\n\n# If not already set before, it also sets\n\n#   _CMAKE_TOOLCHAIN_PREFIX\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Load system-specific compiler preferences for this language.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# prefer the environment variable CXX\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# next prefer the generator specified compiler\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# finally list compilers to try\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Each entry in this list is a set of extra flags to try\n\n# adding to the compile line to see if it helps produce\n\n# a valid identification file.\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Try compiling to an object file only.\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# IAR does not detect language automatically\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Build a small source file to identify the compiler.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Try to identify the compiler.\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# The IAR compiler produces weird output.\n\n# See https://gitlab.kitware.com/cmake/cmake/issues/10176#note_153591\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Match the link line from xcodebuild output of the form\n\n#  Ld ...\n\n#      ...\n\n#      /path/to/cc ...CompilerIdCXX/...\n\n# to extract the compiler front-end for the language.\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Set old compiler and platform id variables.\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# if we have a g++ cross compiler, they have usually some prefix, like\n\n# e.g. powerpc-linux-g++, arm-elf-g++ or i586-mingw32msvc-g++ , optionally\n\n# with a 3-component version number at the end (e.g. arm-eabi-gcc-4.5.2).\n\n# The other tools of the toolchain usually have the same prefix\n\n# NAME_WE cannot be used since then this test will fail for names like\n\n# \"arm-unknown-nto-qnx6.3.0-gcc.exe\", where BASENAME would be\n\n# \"arm-unknown-nto-qnx6\" instead of the correct \"arm-unknown-nto-qnx6.3.0-\"\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# if \"llvm-\" is part of the prefix, remove it, since llvm doesn't have its own binutils\n\n# but uses the regular ar, objcopy, etc. (instead of llvm-objcopy etc.)\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# TI compilers are named e.g. cl6x, cl470 or armcl.exe\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# configure all variables set in this file\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "deps/src/cmake-3.13.4/Modules/CMakeDetermineCompileFeatures.cmake" : {
      "ObjectId" : "01a81a1a865bc182852d86b8463af9373332316d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/CMakeDetermineCompiler.cmake" : {
      "ObjectId" : "c37adaee1b883cc3f1916af92cc6f4f8b35b6d8d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use already-enabled languages for reference.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Search only for the specified compiler.\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Re-order the compiler list with preferred vendors first.\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Prefer vendors of compilers from reference languages.\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Prefer vendors based on the platform.\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Append the rest of the list and remove duplicates.\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Look for directories containing compilers of reference languages.\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Find the compiler.\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Prefer directories containing compilers of reference languages.\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Look for a make tool provided by Xcode\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# we only get here if CMAKE_${lang}_COMPILER was specified using -D or a pre-made CMakeCache.txt\n\n# (e.g. via ctest) or set in CMAKE_TOOLCHAIN_FILE\n\n# if CMAKE_${lang}_COMPILER is a list of length 2, use the first item as\n\n# CMAKE_${lang}_COMPILER and the 2nd one as CMAKE_${lang}_COMPILER_ARG1\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# find the compiler in the PATH if necessary\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 13
    },
    "deps/src/cmake-3.13.4/Modules/CMakeDetermineCompilerABI.cmake" : {
      "ObjectId" : "604ac27e6a8bbde254e7d754973da18a1dc476c0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Function to compile a source file to identify the compiler ABI.\n\n# This is used internally by CMake and should not be included by user\n\n# code.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compile the ABI identification source.\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Avoid adding our own platform standard libraries for compilers\n\n# from which we might detect implicit link libraries.\n",
        "Line" : 22,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Ignore unused flags when we are just determining the ABI.\n",
        "Line" : 29,
        "CharPositionInLine" : 18
      },
      "5" : {
        "Text" : "# Move result from cache to normal variable.\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Load the resulting information strings.\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Parse implicit linker information for this language, if available.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# for VS IDE Intel Fortran we have to figure out the\n\n# implicit link path for the fortran run time using\n\n# a try-compile\n",
        "Line" : 75,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Build a sample project which reports symbols.\n",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Implicit link libraries cannot be used explicitly for multiple\n\n# OS X architectures, so we skip it.\n",
        "Line" : 98,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Detect library architecture directory name.\n",
        "Line" : 110,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 12
    },
    "deps/src/cmake-3.13.4/Modules/CMakeDetermineCompilerId.cmake" : {
      "ObjectId" : "5e2df26a63d7659bfe786d5751475da7ef193de5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Function to compile a source file to identify the compiler.  This is\n\n# used internally by CMake and should not be included by user code.\n\n# If successful, sets CMAKE_<lang>_COMPILER_ID and CMAKE_<lang>_PLATFORM_ID\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make sure the compiler arguments are clean.\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Make sure user-specified compiler flags are used.\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Compute the directory in which to run the test.\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Try building with no extra flags and then try each set\n\n# of helper flags.  Stop when the compiler is identified.\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# If the compiler is still unknown, try to query its vendor.\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# CUDA < 7.5 is missing version macros\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# http://community.qnx.com/sf/discussion/do/listPosts/projects.community/discussion.qnx_momentics_community_support.topc3555?_pagenum=2\n\n# The qcc driver does not itself have a version.\n",
        "Line" : 81,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# if the format is unknown after all files have been checked, put \"Unknown\" in the cache\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Display the final identification result.\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Check if compiler id detection gave us the compiler tool.\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Function to write the compiler id source file.\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Function to build the compiler id source file and look for output\n\n# files.\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Create a clean working directory.\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Construct a description of this test case.\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Compile the compiler identification source.\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Match the compiler location line printed out.\n",
        "Line" : 306,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Strip VS diagnostic output from the end of the line.\n",
        "Line" : 308,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Check the result of compilation.\n",
        "Line" : 409,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Intel Fortran warns and ignores preprocessor lines without /fpp\n",
        "Line" : 411,
        "CharPositionInLine" : 5
      },
      "21" : {
        "Text" : "# Compilation failed.\n",
        "Line" : 414,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#if(NOT CMAKE_${lang}_COMPILER_ID_ALLOW_FAIL)\n\n#  message(FATAL_ERROR \"${MSG}\")\n\n#endif()\n",
        "Line" : 424,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# No output files should be inspected.\n",
        "Line" : 428,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Compilation succeeded.\n",
        "Line" : 432,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Find the executable produced by the compiler, try all files in the\n\n# binary dir.\n",
        "Line" : 442,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# normal case\n",
        "Line" : 448,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# com.apple.package-type.bundle.unit-test\n",
        "Line" : 451,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# No executable was found.\n",
        "Line" : 466,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# Return the files produced by the compilation.\n",
        "Line" : 476,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Function to extract the compiler id from compiler output.\n",
        "Line" : 482,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Function to extract the compiler id from an executable.\n",
        "Line" : 493,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Look for a compiler id if not yet known.\n",
        "Line" : 496,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Read the compiler identification string from the executable file.\n",
        "Line" : 498,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# With the IAR Compiler, some strings are found twice, first time as incomplete\n\n# list like \"?<Constant \"INFO:compiler[IAR]\">\".  Remove the incomplete copies.\n",
        "Line" : 528,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# In C# binaries, some strings are found more than once.\n",
        "Line" : 531,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# Construct compiler version from components if needed.\n",
        "Line" : 581,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Detect the exact architecture from the PE header.\n",
        "Line" : 595,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# The offset to the PE signature is stored at 0x3c.\n",
        "Line" : 597,
        "CharPositionInLine" : 6
      },
      "39" : {
        "Text" : "# Check if a valid compiler and platform were found.\n",
        "Line" : 622,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# Check the compiler identification string.\n",
        "Line" : 634,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# The compiler identification was found.\n",
        "Line" : 636,
        "CharPositionInLine" : 6
      },
      "42" : {
        "Text" : "# The compiler identification could not be found.\n",
        "Line" : 641,
        "CharPositionInLine" : 6
      },
      "43" : {
        "Text" : "# try to figure out the executable format: ELF, COFF, Mach-O\n",
        "Line" : 648,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# ELF files start with 0x7f\"ELF\"\n",
        "Line" : 652,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "#    # COFF (.exe) files start with \"MZ\"\n\n#    if(\"${CMAKE_EXECUTABLE_MAGIC}\" MATCHES \"4d5a....\")\n\n#      set(CMAKE_EXECUTABLE_FORMAT \"COFF\" CACHE STRING \"Executable file format\")\n\n#    endif()\n\n#\n\n#    # Mach-O files start with CAFEBABE or FEEDFACE, according to http://radio.weblogs.com/0100490/2003/01/28.html\n\n#    if(\"${CMAKE_EXECUTABLE_MAGIC}\" MATCHES \"cafebabe\")\n\n#      set(CMAKE_EXECUTABLE_FORMAT \"MACHO\" CACHE STRING \"Executable file format\")\n\n#    endif()\n\n#    if(\"${CMAKE_EXECUTABLE_MAGIC}\" MATCHES \"feedface\")\n\n#      set(CMAKE_EXECUTABLE_FORMAT \"MACHO\" CACHE STRING \"Executable file format\")\n\n#    endif()\n",
        "Line" : 657,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Return the information extracted.\n",
        "Line" : 674,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Function to query the compiler vendor.\n\n# This uses a table with entries of the form\n\n#   list(APPEND CMAKE_${lang}_COMPILER_ID_VENDORS ${vendor})\n\n#   set(CMAKE_${lang}_COMPILER_ID_VENDOR_FLAGS_${vendor} -some-vendor-flag)\n\n#   set(CMAKE_${lang}_COMPILER_ID_VENDOR_REGEX_${vendor} \"Some Vendor Output\")\n\n# We try running the compiler with the flag for each vendor and\n\n# matching its regular expression in the output.\n",
        "Line" : 690,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# We get here when this function is called not from within CMAKE_DETERMINE_COMPILER_ID()\n\n# This is done e.g. for detecting the compiler ID for assemblers.\n\n# Compute the directory in which to run the test and Create a clean working directory.\n",
        "Line" : 701,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# Run this MSVC-compatible compiler to detect what the /showIncludes\n\n# option displays.  We can use a C source even with the C++ compiler\n\n# because MSVC-compatible compilers handle both and show the same output.\n",
        "Line" : 746,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# cl prints in current code page\n",
        "Line" : 761,
        "CharPositionInLine" : 18
      },
      "51" : {
        "Text" : "# Test whether an MSVC-like command-line option works.\n",
        "Line" : 776,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# Help the user configure the environment to use the MSVC-like Clang.\n",
        "Line" : 785,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 53
    },
    "deps/src/cmake-3.13.4/Modules/CMakeDetermineFortranCompiler.cmake" : {
      "ObjectId" : "5ddd64fae8bb633ebe5089fbf78b8c6071af608a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# determine the compiler to use for Fortran programs\n\n# NOTE, a generator may set CMAKE_Fortran_COMPILER before\n\n# loading this file to force a compiler.\n\n# use environment variable FC first if defined by user, next use\n\n# the cmake variable CMAKE_GENERATOR_FC which can be defined by a generator\n\n# as a default compiler\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# prefer the environment variable CC\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# next try prefer the compiler specified by the generator\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# finally list compilers to try\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Known compilers:\n\n#  f77/f90/f95: generic compiler names\n\n#  ftn: Cray fortran compiler wrapper\n\n#  g77: GNU Fortran 77 compiler\n\n#  gfortran: putative GNU Fortran 95+ compiler (in progress)\n\n#  fort77: native F77 compiler under HP-UX (and some older Crays)\n\n#  frt: Fujitsu F77 compiler\n\n#  pathf90/pathf95/pathf2003: PathScale Fortran compiler\n\n#  pgf77/pgf90/pgf95/pgfortran: Portland Group F77/F90/F95 compilers\n\n#  flang: Flang Fortran compiler\n\n#  xlf/xlf90/xlf95: IBM (AIX) F77/F90/F95 compilers\n\n#  lf95: Lahey-Fujitsu F95 compiler\n\n#  fl32: Microsoft Fortran 77 \"PowerStation\" compiler\n\n#  af77: Apogee F77 compiler for Intergraph hardware running CLIX\n\n#  epcf90: \"Edinburgh Portable Compiler\" F90\n\n#  fort: Compaq (now HP) Fortran 90/95 compiler for Tru64 and Linux/Alpha\n\n#  ifc: Intel Fortran 95 compiler for Linux/x86\n\n#  efc: Intel Fortran 95 compiler for IA64\n\n#  nagfor: NAG Fortran compiler\n\n#\n\n#  The order is 95 or newer compilers first, then 90,\n\n#  then 77 or older compilers, gnu is always last in the group,\n\n#  so if you paid for a compiler it is picked by default.\n",
        "Line" : 46,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Vendor-specific compiler names.\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Each entry in this list is a set of extra flags to try\n\n# adding to the compile line to see if it helps produce\n\n# a valid identification executable.\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Get verbose output to help distinguish compilers.\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Try compiling to an object file only.\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Intel on windows does not preprocess by default.\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Build a small source file to identify the compiler.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Table of per-vendor compiler output regular expressions.\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Table of per-vendor compiler id flags with expected output.\n",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Numerical Algorithms Group\n",
        "Line" : 131,
        "CharPositionInLine" : 53
      },
      "15" : {
        "Text" : "# Match the link line from xcodebuild output of the form\n\n#  Ld ...\n\n#      ...\n\n#      /path/to/cc ...CompilerIdFortran/...\n\n# to extract the compiler front-end for the language.\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Try to identify the compiler.\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Fall back to old is-GNU test.\n",
        "Line" : 189,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Fall back for GNU MINGW, which is not always detected correctly\n\n# (__MINGW32__ is defined for the C language, but perhaps not for Fortran!)\n",
        "Line" : 215,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Set old compiler and platform id variables.\n",
        "Line" : 230,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# if we have a fortran cross compiler, they have usually some prefix, like\n\n# e.g. powerpc-linux-gfortran, arm-elf-gfortran or i586-mingw32msvc-gfortran , optionally\n\n# with a 3-component version number at the end (e.g. arm-eabi-gcc-4.5.2).\n\n# The other tools of the toolchain usually have the same prefix\n\n# NAME_WE cannot be used since then this test will fail for names like\n\n# \"arm-unknown-nto-qnx6.3.0-gcc.exe\", where BASENAME would be\n\n# \"arm-unknown-nto-qnx6\" instead of the correct \"arm-unknown-nto-qnx6.3.0-\"\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# if \"llvm-\" is part of the prefix, remove it, since llvm doesn't have its own binutils\n\n# but uses the regular ar, objcopy, etc. (instead of llvm-objcopy etc.)\n",
        "Line" : 260,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# configure variables set in this file for fast reload later on\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "deps/src/cmake-3.13.4/Modules/CMakeDetermineJavaCompiler.cmake" : {
      "ObjectId" : "3092bb52d604871ab0175172601e2cea23b20699",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# determine the compiler to use for Java programs\n\n# NOTE, a generator may set CMAKE_Java_COMPILER before\n\n# loading this file to force a compiler.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# prefer the environment variable CC\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# if no compiler has been specified yet, then look for one\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# if no runtime has been specified yet, then look for one\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# if no archive has been specified yet, then look for one\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# configure variables set in this file for fast reload later on\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/CMakeDetermineRCCompiler.cmake" : {
      "ObjectId" : "8801e1632012537a54885834e1866ed2b1ac90cf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# determine the compiler to use for RC programs\n\n# NOTE, a generator may set CMAKE_RC_COMPILER before\n\n# loading this file to force a compiler.\n\n# use environment variable RC first if defined by user, next use\n\n# the cmake variable CMAKE_GENERATOR_RC which can be defined by a generator\n\n# as a default compiler\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# prefer the environment variable RC\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# next try prefer the compiler specified by the generator\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# finally list compilers to try\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Find the compiler.\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# configure variables set in this file for fast reload later on\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/CMakeDetermineSwiftCompiler.cmake" : {
      "ObjectId" : "dd02d5447a32ca7cd9df99bbdeca14de465b06fc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build a small source file to identify the compiler.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Try to identify the compiler.\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# configure variables set in this file for fast reload later on\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/CMakeDetermineSystem.cmake" : {
      "ObjectId" : "600d5580e197b90d0eddd7e472bc3a4dfe6e71a8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is used by the Makefile generator to determine the following variables:\n\n# CMAKE_SYSTEM_NAME - on unix this is uname -s, for windows it is Windows\n\n# CMAKE_SYSTEM_VERSION - on unix this is uname -r, for windows it is empty\n\n# CMAKE_SYSTEM - ${CMAKE_SYSTEM}-${CMAKE_SYSTEM_VERSION}, for windows: ${CMAKE_SYSTEM}\n\n#\n\n#  Expected uname -s output:\n\n#\n\n# AIX                           AIX\n\n# BSD/OS                        BSD/OS\n\n# FreeBSD                       FreeBSD\n\n# HP-UX                         HP-UX\n\n# IRIX                          IRIX\n\n# Linux                         Linux\n\n# GNU/kFreeBSD                  GNU/kFreeBSD\n\n# NetBSD                        NetBSD\n\n# OpenBSD                       OpenBSD\n\n# OFS/1 (Digital Unix)          OSF1\n\n# SCO OpenServer 5              SCO_SV\n\n# SCO UnixWare 7                UnixWare\n\n# SCO UnixWare (pre release 7)  UNIX_SV\n\n# SCO XENIX                     Xenix\n\n# Solaris                       SunOS\n\n# SunOS                         SunOS\n\n# Tru64                         Tru64\n\n# Ultrix                        ULTRIX\n\n# cygwin                        CYGWIN_NT-5.1\n\n# MacOSX                        Darwin\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find out on which system cmake runs\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# OS X ppc 'uname -m' may report 'Power Macintosh' instead of 'powerpc'\n",
        "Line" : 52,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# check the return of the last uname -m or -p\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# processor may have double quote in the name, and that needs to be removed\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# if a toolchain file is used, the user wants to cross compile.\n\n# in this case read the toolchain file and keep the CMAKE_HOST_SYSTEM_*\n\n# variables around so they can be used in CMakeLists.txt.\n\n# In all other cases, the host and target platform are the same.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# at first try to load it as path relative to the directory from which cmake has been run\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# if the file isn't found there, check the default locations\n",
        "Line" : 93,
        "CharPositionInLine" : 5
      },
      "9" : {
        "Text" : "# if CMAKE_SYSTEM_NAME is here already set, either it comes from a toolchain file\n\n# or it was set via -DCMAKE_SYSTEM_NAME=...\n\n# if that's the case, assume we are crosscompiling\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# fix for BSD/OS , remove the /\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# fix for GNU/kFreeBSD, remove the GNU/\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# fix for CYGWIN which has windows version in it\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# set CMAKE_SYSTEM to the CMAKE_SYSTEM_NAME\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# if there is a CMAKE_SYSTEM_VERSION then add a -${CMAKE_SYSTEM_VERSION}\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# this file is also executed from cpack, then we don't need to generate these files\n\n# in this case there is no CMAKE_BINARY_DIR\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# write entry to the log file\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# if a toolchain file is used, it needs to be included in the configured file,\n\n# so settings done there are also available if they don't go in the cache and in try_compile()\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# configure variables set in this file for fast reload, the template file is defined at the top of this file\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 19
    },
    "deps/src/cmake-3.13.4/Modules/CMakeDetermineVSServicePack.cmake" : {
      "ObjectId" : "c2467f9d7c83ad890c096568a27975520032fc73",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CMakeDetermineVSServicePack\n\n# ---------------------------\n\n#\n\n# Deprecated.  Do not use.\n\n#\n\n# The functionality of this module has been superseded by the\n\n# :variable:`CMAKE_<LANG>_COMPILER_VERSION` variable that contains\n\n# the compiler version number.\n\n#\n\n# Determine the Visual Studio service pack of the 'cl' in use.\n\n#\n\n# Usage::\n\n#\n\n#   if(MSVC)\n\n#     include(CMakeDetermineVSServicePack)\n\n#     DetermineVSServicePack( my_service_pack )\n\n#     if( my_service_pack )\n\n#       message(STATUS \"Detected: ${my_service_pack}\")\n\n#     endif()\n\n#   endif()\n\n#\n\n# Function DetermineVSServicePack sets the given variable to one of the\n\n# following values or an empty string if unknown::\n\n#\n\n#   vc80, vc80sp1\n\n#   vc90, vc90sp1\n\n#   vc100, vc100sp1\n\n#   vc110, vc110sp1, vc110sp2, vc110sp3, vc110sp4\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# [INTERNAL]\n\n# Please do not call this function directly\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "############################################################\n\n# [INTERNAL]\n\n# Please do not call this function directly\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "############################################################\n\n# [INTERNAL]\n\n# Please do not call this function directly\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "############################################################\n\n# [INTERNAL]\n\n# Please do not call this function directly\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# A function to call to determine the Visual Studio service pack\n\n# in use.  See documentation above.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Call helper function to determine VS version\n",
        "Line" : 162,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Modules/CMakeExpandImportedTargets.cmake" : {
      "ObjectId" : "21a3065fee3dfc85e52b43d37b28b68dda9ca33e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CMakeExpandImportedTargets\n\n# --------------------------\n\n#\n\n# Deprecated.  Do not use.\n\n#\n\n# This module was once needed to expand imported targets to the underlying\n\n# libraries they reference on disk for use with the :command:`try_compile`\n\n# and :command:`try_run` commands.  These commands now support imported\n\n# libraries in their ``LINK_LIBRARIES`` options (since CMake 2.8.11\n\n# for :command:`try_compile` and since CMake 3.2 for :command:`try_run`).\n\n#\n\n# This module does not support the policy :policy:`CMP0022` ``NEW``\n\n# behavior or use of the :prop_tgt:`INTERFACE_LINK_LIBRARIES` property\n\n# because :manual:`generator expressions <cmake-generator-expressions(7)>`\n\n# cannot be evaluated during configuration.\n\n#\n\n# ::\n\n#\n\n#  CMAKE_EXPAND_IMPORTED_TARGETS(<var> LIBRARIES lib1 lib2...libN\n\n#                                [CONFIGURATION <config>])\n\n#\n\n# CMAKE_EXPAND_IMPORTED_TARGETS() takes a list of libraries and replaces\n\n# all imported targets contained in this list with their actual file\n\n# paths of the referenced libraries on disk, including the libraries\n\n# from their link interfaces.  If a CONFIGURATION is given, it uses the\n\n# respective configuration of the imported targets if it exists.  If no\n\n# CONFIGURATION is given, it uses the first configuration from\n\n# ${CMAKE_CONFIGURATION_TYPES} if set, otherwise ${CMAKE_BUILD_TYPE}.\n\n#\n\n# ::\n\n#\n\n#     cmake_expand_imported_targets(expandedLibs\n\n#       LIBRARIES ${CMAKE_REQUIRED_LIBRARIES}\n\n#       CONFIGURATION \"${CMAKE_TRY_COMPILE_CONFIGURATION}\" )\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Would be better to test GENERATOR_IS_MULTI_CONFIG global property,\n\n# but the documented behavior specifically says we check\n\n# CMAKE_CONFIGURATION_TYPES and fall back to CMAKE_BUILD_TYPE if no\n\n# config types are defined.\n",
        "Line" : 53,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# handle imported library targets\n",
        "Line" : 64,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "#            message(STATUS \"Detected imported target ${_CURRENT_LIB}\")\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Ok, so this is an imported target.\n\n# First we get the imported configurations.\n\n# Then we get the location of the actual library on disk of the first configuration.\n\n# then we'll get its link interface libraries property,\n\n# iterate through it and replace all imported targets we find there\n\n# with there actual location.\n",
        "Line" : 82,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# guard against infinite loop: abort after 100 iterations ( 100 is arbitrary chosen)\n",
        "Line" : 89,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "#                else ()\n\n#                   message(STATUS \"********* aborting loop, counter : ${_CCSR_LOOP_COUNTER}\")\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if one of the imported configurations equals ${CMAKE_TRY_COMPILE_CONFIGURATION},\n\n# use it, otherwise simply use the first one:\n",
        "Line" : 96,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "#            message(STATUS \"Appending lib ${_CURRENT_LIB} as ${_importedLocation}\")\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#                  message(STATUS \"Appending link interface lib ${_currentLinkInterfaceLib}\")\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \"Normal\" libraries are just used as they are.\n",
        "Line" : 118,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "#            message(STATUS \"Appending lib directly: ${_CURRENT_LIB}\")\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Finally we iterate once more over all libraries. This loop only removes\n\n# all remaining imported target names (there shouldn't be any left anyway).\n",
        "Line" : 127,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "#         message(STATUS \"final: appending ${_CURRENT_LIB}\")\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#             message(STATUS \"final: skipping ${_CURRENT_LIB}\")\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#   message(STATUS \"setting -${_RESULT}- to -${_CCSR_NEW_REQ_LIBS}-\")\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "deps/src/cmake-3.13.4/Modules/CMakeExportBuildSettings.cmake" : {
      "ObjectId" : "cafc830d651ca18032dbdce173e1cc19659a6af8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is purposely no longer documented.  It does nothing useful.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This macro used to store build settings of a project in a file to be\n\n# loaded by another project using CMAKE_IMPORT_BUILD_SETTINGS.  Now it\n\n# creates a file that refuses to load (with comment explaining why).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/CMakeExtraGeneratorDetermineCompilerMacrosAndIncludeDirs.cmake" : {
      "ObjectId" : "11f4a29b4d896bf3fbbaf98b82aee794521b94e9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is included by CMakeFindEclipseCDT4.cmake and CMakeFindCodeBlocks.cmake\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The Eclipse and the CodeBlocks generators need to know the standard include path\n\n# so that they can find the headers at runtime and parsing etc. works better\n\n# This is done here by actually running gcc with the options so it prints its\n\n# system include directories, which are parsed then and stored in the cache.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# First find the system include dirs:\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# split the output into lines and then remove leading and trailing spaces from each of them:\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# on OSX, gcc says things like this:  \"/System/Library/Frameworks (framework directory)\", strip the last part\n",
        "Line" : 43,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# strip spaces at the beginning and the end\n",
        "Line" : 45,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# now find the builtin macros:\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# A few example lines which the regexp below has to match properly:\n\n#  #define   MAX(a,b) ((a) > (b) ? (a) : (b))\n\n#  #define __fastcall __attribute__((__fastcall__))\n\n#  #define   FOO (23)\n\n#  #define __UINTMAX_TYPE__ long long unsigned int\n\n#  #define __UINTMAX_TYPE__ long long unsigned int\n\n#  #define __i386__  1\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#message(STATUS \"m1: -${CMAKE_MATCH_1}- m2: -${CMAKE_MATCH_2}- m3: -${CMAKE_MATCH_3}-\")\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Save the current LC_ALL, LC_MESSAGES, and LANG environment variables and set them\n\n# to \"C\" that way GCC's \"search starts here\" text is in English and we can grok it.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Now check for C, works for gcc and Intel compiler at least\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# And now the same for C++\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Restore original LC_ALL, LC_MESSAGES, and LANG\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "deps/src/cmake-3.13.4/Modules/CMakeFindBinUtils.cmake" : {
      "ObjectId" : "830639dffb902693e84fb692e305706ecfc69ce6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# search for additional tools required for C/C++ (and other languages ?)\n\n#\n\n# If the internal cmake variable _CMAKE_TOOLCHAIN_PREFIX is set, this is used\n\n# as prefix for the tools (e.g. arm-elf-gcc etc.)\n\n# If the cmake variable _CMAKE_TOOLCHAIN_LOCATION is set, the compiler is\n\n# searched only there. The other tools are at first searched there, then\n\n# also in the default locations.\n\n#\n\n# Sets the following variables:\n\n#   CMAKE_AR\n\n#   CMAKE_RANLIB\n\n#   CMAKE_LINKER\n\n#   CMAKE_STRIP\n\n#   CMAKE_INSTALL_NAME_TOOL\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# on UNIX, cygwin and mingw\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# we only get here if CMAKE_LINKER was specified using -D or a pre-made CMakeCache.txt\n\n# (e.g. via ctest) or set in CMAKE_TOOLCHAIN_FILE\n\n# find the linker in the PATH if necessary\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# if it's the MS C/CXX compiler, search for link\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# in all other cases search for ar, ranlib, etc.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Mark any tool cache entries as advanced.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/CMakeFindCodeBlocks.cmake" : {
      "ObjectId" : "13bceb1a821b75308bac7c8d9a43a109e9c2ccd4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is included in CMakeSystemSpecificInformation.cmake if\n\n# the CodeBlocks extra generator has been selected.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Determine builtin macros and include dirs:\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Try to find out how many CPUs we have and set the -j argument for make accordingly\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Only set -j if we are under UNIX and if the make-tool used actually has \"make\" in the name\n\n# (we may also get here in the future e.g. for ninja)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This variable is used by the CodeBlocks generator and appended to the make invocation commands.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This variable is used by the CodeBlocks generator and allows the user to overwrite the autodetected CodeBlocks compiler id\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/CMakeFindDependencyMacro.cmake" : {
      "ObjectId" : "de1a3329a32d330a3cf43e1bad37e6a42d467168",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nCMakeFindDependencyMacro\n-------------------------\n\n.. command:: find_dependency\n\n  The ``find_dependency()`` macro wraps a :command:`find_package` call for\n  a package dependency::\n\n    find_dependency(<dep> [...])\n\n  It is designed to be used in a\n  :ref:`Package Configuration File <Config File Packages>`\n  (``<PackageName>Config.cmake``).  ``find_dependency`` forwards the correct\n  parameters for ``QUIET`` and ``REQUIRED`` which were passed to\n  the original :command:`find_package` call.  Any additional arguments\n  specified are forwarded to :command:`find_package`.\n\n  If the dependency could not be found it sets an informative diagnostic\n  message and calls :command:`return` to end processing of the calling\n  package configuration file and return to the :command:`find_package`\n  command that loaded it.\n\n  .. note::\n\n    The call to :command:`return` makes this macro unsuitable to call\n    from :ref:`Find Modules`.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CMakeFindEclipseCDT4.cmake" : {
      "ObjectId" : "199005d5ceb03a94898cc1da78a1fa31f3e851fe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is included in CMakeSystemSpecificInformation.cmake if\n\n# the Eclipse CDT4 extra generator has been selected.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This code is in a function so the variables used here have only local scope\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Set up a map with the names of the Eclipse releases:\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# use REALPATH to resolve symlinks (https://gitlab.kitware.com/cmake/cmake/issues/13036)\n",
        "Line" : 28,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Try to find out how many CPUs we have and set the -j argument for make accordingly\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Only set -j if we are under UNIX and if the make-tool used actually has \"make\" in the name\n\n# (we may also get here in the future e.g. for ninja)\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This variable is used by the Eclipse generator and appended to the make invocation commands.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This variable is used by the Eclipse generator in out-of-source builds only.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Determine builtin macros and include dirs:\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Modules/CMakeFindFrameworks.cmake" : {
      "ObjectId" : "6c4c52729633bcd891ddc7808195765164c62c53",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CMakeFindFrameworks\n\n# -------------------\n\n#\n\n# helper module to find OSX frameworks\n\n#\n\n# This module reads hints about search locations from variables::\n\n#\n\n#   CMAKE_FIND_FRAMEWORK_EXTRA_LOCATIONS - Extra directories\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CMakeFindJavaCommon.cmake" : {
      "ObjectId" : "46b6280b35017e1645d4c965a7019794bc4db51d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do not include this module directly from code outside CMake!\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CMakeFindKDevelop3.cmake" : {
      "ObjectId" : "6d9817eeedb39dcc01003437f4d0064a5bbc6b41",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is included in CMakeSystemSpecificInformation.cmake if\n\n# the KDevelop3 extra generator has been selected.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CMakeFindKate.cmake" : {
      "ObjectId" : "9aaf6e57168797c27a4534bb760f01ca0b833cd3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is included in CMakeSystemSpecificInformation.cmake if\n\n# the Eclipse CDT4 extra generator has been selected.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Try to find out how many CPUs we have and set the -j argument for make accordingly\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Only set -j if we are under UNIX and if the make-tool used actually has \"make\" in the name\n\n# (we may also get here in the future e.g. for ninja)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This variable is used by the Eclipse generator and appended to the make invocation commands.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/CMakeFindPackageMode.cmake" : {
      "ObjectId" : "ec3652cfa2990831a84eeb25a18bbefae7e30df1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CMakeFindPackageMode\n\n# --------------------\n\n#\n\n#\n\n#\n\n# This file is executed by cmake when invoked with --find-package.  It\n\n# expects that the following variables are set using -D:\n\n#\n\n# ``NAME``\n\n#   name of the package\n\n# ``COMPILER_ID``\n\n#   the CMake compiler ID for which the result is,\n\n#   i.e. GNU/Intel/Clang/MSVC, etc.\n\n# ``LANGUAGE``\n\n#   language for which the result will be used,\n\n#   i.e. C/CXX/Fortran/ASM\n\n# ``MODE``\n\n#   ``EXIST``\n\n#     only check for existence of the given package\n\n#   ``COMPILE``\n\n#     print the flags needed for compiling an object file which uses\n\n#     the given package\n\n#   ``LINK``\n\n#     print the flags needed for linking when using the given package\n\n# ``QUIET``\n\n#   if TRUE, don't print anything\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# require the current version. If we don't do this, Platforms/CYGWIN.cmake complains because\n\n# it doesn't know whether it should set WIN32 or not:\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# disable the enable_language() command, otherwise --find-package breaks on Windows.\n\n# On Windows, enable_language(RC) is called in the platform files unconditionally.\n\n# But in --find-package mode, we don't want (and can't) enable any language.\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# short-cut some tests on Darwin, see Darwin-GNU.cmake:\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Also load the system specific file, which sets up e.g. the search paths.\n\n# This makes the FIND_XXX() calls work much better\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# try to guess whether we have a 64bit system, if it has not been set\n\n# from the outside\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# use the file utility to check whether itself is 64 bit:\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# guess Debian multiarch if it has not been set:\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Check the following variables:\n\n# FOO_INCLUDE_DIRS\n\n# Foo_INCLUDE_DIRS\n\n# FOO_INCLUDES\n\n# Foo_INCLUDES\n\n# FOO_INCLUDE_DIR\n\n# Foo_INCLUDE_DIR\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Check the following variables:\n\n# FOO_DEFINITIONS\n\n# Foo_DEFINITIONS\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Check the following variables:\n\n# FOO_LIBRARIES\n\n# Foo_LIBRARIES\n\n# FOO_LIBS\n\n# Foo_LIBS\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# do nothing\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 13
    },
    "deps/src/cmake-3.13.4/Modules/CMakeFindSublimeText2.cmake" : {
      "ObjectId" : "022d0109e70a39861ab95b3d756089c4a7603152",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is included in CMakeSystemSpecificInformation.cmake if\n\n# the Sublime Text 2 extra generator has been selected.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CMakeFindWMake.cmake" : {
      "ObjectId" : "a20d06977db5dbca68517dd8a487bb66277a0447",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/CMakeFindXCode.cmake" : {
      "ObjectId" : "281af965c94608d6e4b91d7205a63151cece0d8e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Empty placeholder for input dependencies in existing\n\n# build trees produced by older versions of CMake.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CMakeForceCompiler.cmake" : {
      "ObjectId" : "1bc80fd7514b4284ac6944fe7068520668276a5f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CMakeForceCompiler\n\n# ------------------\n\n#\n\n# Deprecated.  Do not use.\n\n#\n\n# The macros provided by this module were once intended for use by\n\n# cross-compiling toolchain files when CMake was not able to automatically\n\n# detect the compiler identification.  Since the introduction of this module,\n\n# CMake's compiler identification capabilities have improved and can now be\n\n# taught to recognize any compiler.  Furthermore, the suite of information\n\n# CMake detects from a compiler is now too extensive to be provided by\n\n# toolchain files using these macros.\n\n#\n\n# One common use case for this module was to skip CMake's checks for a\n\n# working compiler when using a cross-compiler that cannot link binaries\n\n# without special flags or custom linker scripts.  This case is now supported\n\n# by setting the :variable:`CMAKE_TRY_COMPILE_TARGET_TYPE` variable in the\n\n# toolchain file instead.\n\n#\n\n# -------------------------------------------------------------------------\n\n#\n\n# Macro CMAKE_FORCE_C_COMPILER has the following signature:\n\n#\n\n# ::\n\n#\n\n#    CMAKE_FORCE_C_COMPILER(<compiler> <compiler-id>)\n\n#\n\n# It sets CMAKE_C_COMPILER to the given compiler and the cmake internal\n\n# variable CMAKE_C_COMPILER_ID to the given compiler-id.  It also\n\n# bypasses the check for working compiler and basic compiler information\n\n# tests.\n\n#\n\n# Macro CMAKE_FORCE_CXX_COMPILER has the following signature:\n\n#\n\n# ::\n\n#\n\n#    CMAKE_FORCE_CXX_COMPILER(<compiler> <compiler-id>)\n\n#\n\n# It sets CMAKE_CXX_COMPILER to the given compiler and the cmake\n\n# internal variable CMAKE_CXX_COMPILER_ID to the given compiler-id.  It\n\n# also bypasses the check for working compiler and basic compiler\n\n# information tests.\n\n#\n\n# Macro CMAKE_FORCE_Fortran_COMPILER has the following signature:\n\n#\n\n# ::\n\n#\n\n#    CMAKE_FORCE_Fortran_COMPILER(<compiler> <compiler-id>)\n\n#\n\n# It sets CMAKE_Fortran_COMPILER to the given compiler and the cmake\n\n# internal variable CMAKE_Fortran_COMPILER_ID to the given compiler-id.\n\n# It also bypasses the check for working compiler and basic compiler\n\n# information tests.\n\n#\n\n# So a simple toolchain file could look like this:\n\n#\n\n# ::\n\n#\n\n#    include (CMakeForceCompiler)\n\n#    set(CMAKE_SYSTEM_NAME Generic)\n\n#    CMAKE_FORCE_C_COMPILER   (chc12 MetrowerksHicross)\n\n#    CMAKE_FORCE_CXX_COMPILER (chc12 MetrowerksHicross)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set old compiler id variables.\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Set old compiler id variables.\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Set old compiler id variables.\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/CMakeFortranInformation.cmake" : {
      "ObjectId" : "cceac83c69050d449c6176e22eb5546df66b7797",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file sets the basic flags for the Fortran language in CMake.\n\n# It also loads the available platform file for the system-compiler\n\n# if it exists.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Load compiler-specific information.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# since the gnu compiler has several names force g++\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# load any compiler-wrapper specific information\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We specify the compiler information in the system file for some\n\n# platforms, but this language may not have been enabled when the file\n\n# was first included.  Include it again to get the language info.\n\n# Remove this when all compiler info is removed from system files.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This should be included before the _INIT variables are\n\n# used to initialize the cache.  Since the rule variables\n\n# have if blocks on them, users can still define them here.\n\n# But, it should still be after the platform file so changes can\n\n# be made to those values.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Save the full path of the file so try_compile can use it.\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Save the full path of the file so try_compile can use it.\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Create a set of shared library variable specific to Fortran\n\n# For 90% of the systems, these are the same flags as the C versions\n\n# so if these are not set just copy the flags from the c version\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# for most systems a module is the same as a shared library\n\n# so unless the variable CMAKE_MODULE_EXISTS is set just\n\n# copy the values from the LIBRARY variables\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# repeat for modules\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# now define the following rule variables\n\n# CMAKE_Fortran_CREATE_SHARED_LIBRARY\n\n# CMAKE_Fortran_CREATE_SHARED_MODULE\n\n# CMAKE_Fortran_COMPILE_OBJECT\n\n# CMAKE_Fortran_LINK_EXECUTABLE\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# create a Fortran shared library\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# create a Fortran shared module just copy the shared library rule\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Create a static archive incrementally for large object file counts.\n\n# If CMAKE_Fortran_CREATE_STATIC_LIBRARY is set it will override these.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# compile a Fortran file into an object file\n\n# (put -o after -c to workaround bug in at least one mpif77 wrapper)\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# link a fortran program\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# set this variable so we can avoid loading this more than once.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "deps/src/cmake-3.13.4/Modules/CMakeGenericSystem.cmake" : {
      "ObjectId" : "02cb46450172879a2198f6f78dd5780233dc6b2c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -pic\n",
        "Line" : 6,
        "CharPositionInLine" : 48
      },
      "2" : {
        "Text" : "# -shared\n",
        "Line" : 7,
        "CharPositionInLine" : 57
      },
      "3" : {
        "Text" : "# +s, flag for exe link to use shared lib\n\n# -rpath\n\n# : or empty\n",
        "Line" : 8,
        "CharPositionInLine" : 50
      },
      "4" : {
        "Text" : "# -I\n",
        "Line" : 11,
        "CharPositionInLine" : 37
      },
      "5" : {
        "Text" : "# for the Digital Mars D compiler the link paths have to be terminated with a \"/\"\n",
        "Line" : 13,
        "CharPositionInLine" : 39
      },
      "6" : {
        "Text" : "# lib\n\n# .so\n",
        "Line" : 19,
        "CharPositionInLine" : 48
      },
      "7" : {
        "Text" : "# .exe\n",
        "Line" : 21,
        "CharPositionInLine" : 41
      },
      "8" : {
        "Text" : "# basically all general purpose OSs support shared libs\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# GetDefaultWindowsPrefixBase\n\n#\n\n# Compute the base directory for CMAKE_INSTALL_PREFIX based on:\n\n#  - is this 32-bit or 64-bit Windows\n\n#  - is this 32-bit or 64-bit CMake running\n\n#  - what architecture targets will be built\n\n#\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Try to guess what architecture targets will end up being built as,\n\n# even if CMAKE_SIZEOF_VOID_P is not computed yet... We need to know\n\n# the architecture of the targets being built to choose the right\n\n# default value for CMAKE_INSTALL_PREFIX.\n\n#\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# default env in a 64-bit app on Win64:\n\n# ProgramFiles=C:\\Program Files\n\n# ProgramFiles(x86)=C:\\Program Files (x86)\n\n# ProgramW6432=C:\\Program Files\n\n#\n\n# default env in a 32-bit app on Win64:\n\n# ProgramFiles=C:\\Program Files (x86)\n\n# ProgramFiles(x86)=C:\\Program Files (x86)\n\n# ProgramW6432=C:\\Program Files\n\n#\n\n# default env in a 32-bit app on Win32:\n\n# ProgramFiles=C:\\Program Files\n\n# ProgramFiles(x86) NOT DEFINED\n\n# ProgramW6432 NOT DEFINED\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# By default, use the ProgramFiles env var as the base value of\n\n# CMAKE_INSTALL_PREFIX:\n\n#\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# running on 32-bit Windows\n\n# must be a 32-bit CMake, too...\n\n#message(\"guess: this is a 32-bit CMake running on 32-bit Windows\")\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# running on 64-bit Windows\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# 64-bit CMake\n\n#message(\"guess: this is a 64-bit CMake running on 64-bit Windows\")\n",
        "Line" : 122,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# building 32-bit targets\n",
        "Line" : 125,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# 32-bit CMake\n\n#message(\"guess: this is a 32-bit CMake running on 64-bit Windows\")\n",
        "Line" : 129,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# building 64-bit targets\n",
        "Line" : 132,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "#if(\"${arch_hint}\" STREQUAL \"x64\")\n\n#  message(\"guess: you are building a 64-bit app\")\n\n#else()\n\n#  message(\"guess: you are building a 32-bit app\")\n\n#endif()\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Set a variable to indicate whether the value of CMAKE_INSTALL_PREFIX\n\n# was initialized by the block below.  This is useful for user\n\n# projects to change the default prefix while still allowing the\n\n# command line to override it.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Choose a default install prefix for this platform.\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Set a variable which will be used as component name in install() commands\n\n# where no COMPONENT has been given:\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "deps/src/cmake-3.13.4/Modules/CMakeGraphVizOptions.cmake" : {
      "ObjectId" : "0d7f1d979492058adecf09f700d1fa8375582e95",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CMakeGraphVizOptions\n\n# --------------------\n\n#\n\n# The builtin graphviz support of CMake.\n\n#\n\n# Variables specific to the graphviz support\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# CMake\n\n# can generate `graphviz <http://www.graphviz.org/>`_ files, showing the dependencies between the\n\n# targets in a project and also external libraries which are linked\n\n# against.  When CMake is run with the ``--graphviz=foo.dot`` option, it will\n\n# produce:\n\n#\n\n# * a ``foo.dot`` file showing all dependencies in the project\n\n# * a ``foo.dot.<target>`` file for each target, file showing on which other targets the respective target depends\n\n# * a ``foo.dot.<target>.dependers`` file, showing which other targets depend on the respective target\n\n#\n\n# The different dependency types ``PUBLIC``, ``PRIVATE`` and ``INTERFACE``\n\n# are represented as solid, dashed and dotted edges.\n\n#\n\n# This can result in huge graphs.  Using the file\n\n# ``CMakeGraphVizOptions.cmake`` the look and content of the generated\n\n# graphs can be influenced.  This file is searched first in\n\n# :variable:`CMAKE_BINARY_DIR` and then in :variable:`CMAKE_SOURCE_DIR`.  If found, it is\n\n# read and the variables set in it are used to adjust options for the\n\n# generated graphviz files.\n\n#\n\n# .. variable:: GRAPHVIZ_GRAPH_TYPE\n\n#\n\n#  The graph type.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : \"digraph\"\n\n#\n\n#  Valid graph types are:\n\n#\n\n#  * \"graph\" : Nodes are joined with lines\n\n#  * \"digraph\" : Nodes are joined with arrows showing direction\n\n#  * \"strict graph\" : Like \"graph\" but max one line between each node\n\n#  * \"strict digraph\" : Like \"graph\" but max one line between each node in each direction\n\n#\n\n# .. variable:: GRAPHVIZ_GRAPH_NAME\n\n#\n\n#  The graph name.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : \"GG\"\n\n#\n\n# .. variable:: GRAPHVIZ_GRAPH_HEADER\n\n#\n\n#  The header written at the top of the graphviz file.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : \"node [n  fontsize = \"12\"];\"\n\n#\n\n# .. variable:: GRAPHVIZ_NODE_PREFIX\n\n#\n\n#  The prefix for each node in the graphviz file.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : \"node\"\n\n#\n\n# .. variable:: GRAPHVIZ_EXECUTABLES\n\n#\n\n#  Set this to FALSE to exclude executables from the generated graphs.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : TRUE\n\n#\n\n# .. variable:: GRAPHVIZ_STATIC_LIBS\n\n#\n\n#  Set this to FALSE to exclude static libraries from the generated graphs.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : TRUE\n\n#\n\n# .. variable:: GRAPHVIZ_SHARED_LIBS\n\n#\n\n#  Set this to FALSE to exclude shared libraries from the generated graphs.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : TRUE\n\n#\n\n# .. variable:: GRAPHVIZ_MODULE_LIBS\n\n#\n\n#  Set this to FALSE to exclude module libraries from the generated graphs.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : TRUE\n\n#\n\n# .. variable:: GRAPHVIZ_EXTERNAL_LIBS\n\n#\n\n#  Set this to FALSE to exclude external libraries from the generated graphs.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : TRUE\n\n#\n\n# .. variable:: GRAPHVIZ_IGNORE_TARGETS\n\n#\n\n#  A list of regular expressions for ignoring targets.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : empty\n\n#\n\n# .. variable:: GRAPHVIZ_GENERATE_PER_TARGET\n\n#\n\n#  Set this to FALSE to exclude per target graphs ``foo.dot.<target>``.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : TRUE\n\n#\n\n# .. variable:: GRAPHVIZ_GENERATE_DEPENDERS\n\n#\n\n#  Set this to FALSE to exclude depender graphs ``foo.dot.<target>.dependers``.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : TRUE\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CMakeIOSInstallCombined.cmake" : {
      "ObjectId" : "418bafd630fd7803bb4ff1bc23134ca0f13cb552",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if IN_LIST\n",
        "Line" : 5,
        "CharPositionInLine" : 30
      },
      "2" : {
        "Text" : "# Function to print messages of this module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Get build settings for the current target/config/SDK by running\n\n# `xcodebuild -sdk ... -showBuildSettings` and parsing it's output\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# VALID_ARCHS may be unset by user for given SDK\n\n# (e.g. for build without simulator).\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Get architectures of given SDK (iphonesimulator/iphoneos)\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# remove empty elements\n",
        "Line" : 72,
        "CharPositionInLine" : 35
      },
      "7" : {
        "Text" : "# Final target can contain more architectures that specified by SDK. This\n\n# function will run 'lipo -info' and parse output. Result will be returned\n\n# as a CMake list.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Run build command for the given SDK\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Remove given architecture from file. This step needed only in rare cases\n\n# when target was built in \"unusual\" way. Emit warning message.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Check that 'lib' contains only 'archs' architectures (remove others).\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create combined binary for the given target.\n\n#\n\n# Preconditions:\n\n#  * Target already installed at ${destination}\n\n#    for the ${PLATFORM_NAME} platform\n\n#\n\n# This function will:\n\n#  * Run build for the lacking platform, i.e. opposite to the ${PLATFORM_NAME}\n\n#  * Fuse both libraries by running lipo\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Do not merge OUTPUT_VARIABLE and ERROR_VARIABLE since latter may contain\n\n# some diagnostic information even for the successful run.\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Get SDKs\n",
        "Line" : 265,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Get architectures of the target\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Return if there are no valid architectures for the SDK.\n\n# (note that library already installed)\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Trigger build of corresponding target\n",
        "Line" : 281,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Get location of the library in build directory\n",
        "Line" : 284,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "deps/src/cmake-3.13.4/Modules/CMakeImportBuildSettings.cmake" : {
      "ObjectId" : "ec1effb5c61b336cf2b987383feaba2e025687d9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is purposely no longer documented.  It does nothing useful.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This macro used to load build settings from another project that\n\n# stored settings using the CMAKE_EXPORT_BUILD_SETTINGS macro.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/CMakeInitializeConfigs.cmake" : {
      "ObjectId" : "9dfe04086ba825ad2662f4878fa79d77811899af",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Initializes `<_PREFIX>_<CONFIG>` variables from the corresponding\n\n# `<_PREFIX>_<CONFIG>_INIT`, for the configurations currently used.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CMakeJOMFindMake.cmake" : {
      "ObjectId" : "f56a588987d247292f5cc57ad8db5a40bd6cf7f2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/CMakeJavaInformation.cmake" : {
      "ObjectId" : "11568a810d042f2e90617c7e26cab96059ba8698",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This should be included before the _INIT variables are\n\n# used to initialize the cache.  Since the rule variables\n\n# have if blocks on them, users can still define them here.\n\n# But, it should still be after the platform file so changes can\n\n# be made to those values.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Save the full path of the file so try_compile can use it.\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Save the full path of the file so try_compile can use it.\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# this is a place holder if java needed flags for javac they would go here.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#  if(WIN32)\n\n#    set(class_files_mask \"*.class\")\n\n#  else()\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#  endif()\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \"${class_files_mask}\" should really be \"<OBJECTS>\" but compiling a *.java\n\n# file can create more than one *.class file...\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# compile a Java file into an object file\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# set java include flag option and the separator for multiple include paths\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Modules/CMakeLanguageInformation.cmake" : {
      "ObjectId" : "674ab8696966f0f6185f890de0515ea07c8cd0bf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file contains common code blocks used by all the language information\n\n# files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# load any compiler-wrapper specific information\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# No platform - wrapper - lang information so maybe there's just wrapper - lang information\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/CMakeMSYSFindMake.cmake" : {
      "ObjectId" : "33b02c97855bc6004c0a72db4c8df7b3efa11e03",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/CMakeMinGWFindMake.cmake" : {
      "ObjectId" : "523f00c3a32eb1f7c26dd701fdf9649d9f1e8866",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/CMakeNMakeFindMake.cmake" : {
      "ObjectId" : "03357443e91104130ac78e86075eebc5bf0f72f7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/CMakeNinjaFindMake.cmake" : {
      "ObjectId" : "6a0c47eec01d0a022717808ce26b7b8f47378439",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/CMakePackageConfigHelpers.cmake" : {
      "ObjectId" : "d5301d73798247047d9e0f6f45effb2efff16593",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CMakePackageConfigHelpers\n\n# -------------------------\n\n#\n\n# Helpers functions for creating config files that can be included by other\n\n# projects to find and use a package.\n\n#\n\n# Adds the :command:`configure_package_config_file()` and\n\n# :command:`write_basic_package_version_file()` commands.\n\n#\n\n# Generating a Package Configuration File\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# .. command:: configure_package_config_file\n\n#\n\n#  Create a config file for a project::\n\n#\n\n#    configure_package_config_file(<input> <output>\n\n#      INSTALL_DESTINATION <path>\n\n#      [PATH_VARS <var1> <var2> ... <varN>]\n\n#      [NO_SET_AND_CHECK_MACRO]\n\n#      [NO_CHECK_REQUIRED_COMPONENTS_MACRO]\n\n#      [INSTALL_PREFIX <path>]\n\n#      )\n\n#\n\n# ``configure_package_config_file()`` should be used instead of the plain\n\n# :command:`configure_file()` command when creating the ``<PackageName>Config.cmake``\n\n# or ``<PackageName>-config.cmake`` file for installing a project or library.\n\n# It helps making the resulting package relocatable by avoiding hardcoded paths\n\n# in the installed ``Config.cmake`` file.\n\n#\n\n# In a ``FooConfig.cmake`` file there may be code like this to make the install\n\n# destinations know to the using project:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    set(FOO_INCLUDE_DIR   \"@CMAKE_INSTALL_FULL_INCLUDEDIR@\" )\n\n#    set(FOO_DATA_DIR   \"@CMAKE_INSTALL_PREFIX@/@RELATIVE_DATA_INSTALL_DIR@\" )\n\n#    set(FOO_ICONS_DIR   \"@CMAKE_INSTALL_PREFIX@/share/icons\" )\n\n#    #...logic to determine installedPrefix from the own location...\n\n#    set(FOO_CONFIG_DIR  \"${installedPrefix}/@CONFIG_INSTALL_DIR@\" )\n\n#\n\n# All 4 options shown above are not sufficient, since the first 3 hardcode the\n\n# absolute directory locations, and the 4th case works only if the logic to\n\n# determine the ``installedPrefix`` is correct, and if ``CONFIG_INSTALL_DIR``\n\n# contains a relative path, which in general cannot be guaranteed.  This has the\n\n# effect that the resulting ``FooConfig.cmake`` file would work poorly under\n\n# Windows and OSX, where users are used to choose the install location of a\n\n# binary package at install time, independent from how\n\n# :variable:`CMAKE_INSTALL_PREFIX` was set at build/cmake time.\n\n#\n\n# Using ``configure_package_config_file`` helps.  If used correctly, it makes\n\n# the resulting ``FooConfig.cmake`` file relocatable.  Usage:\n\n#\n\n# 1. write a ``FooConfig.cmake.in`` file as you are used to\n\n# 2. insert a line containing only the string ``@PACKAGE_INIT@``\n\n# 3. instead of ``set(FOO_DIR \"@SOME_INSTALL_DIR@\")``, use\n\n#    ``set(FOO_DIR \"@PACKAGE_SOME_INSTALL_DIR@\")`` (this must be after the\n\n#    ``@PACKAGE_INIT@`` line)\n\n# 4. instead of using the normal :command:`configure_file()`, use\n\n#    ``configure_package_config_file()``\n\n#\n\n#\n\n#\n\n# The ``<input>`` and ``<output>`` arguments are the input and output file, the\n\n# same way as in :command:`configure_file()`.\n\n#\n\n# The ``<path>`` given to ``INSTALL_DESTINATION`` must be the destination where\n\n# the ``FooConfig.cmake`` file will be installed to.  This path can either be\n\n# absolute, or relative to the ``INSTALL_PREFIX`` path.\n\n#\n\n# The variables ``<var1>`` to ``<varN>`` given as ``PATH_VARS`` are the\n\n# variables which contain install destinations.  For each of them the macro will\n\n# create a helper variable ``PACKAGE_<var...>``.  These helper variables must be\n\n# used in the ``FooConfig.cmake.in`` file for setting the installed location.\n\n# They are calculated by ``configure_package_config_file`` so that they are\n\n# always relative to the installed location of the package.  This works both for\n\n# relative and also for absolute locations.  For absolute locations it works\n\n# only if the absolute location is a subdirectory of ``INSTALL_PREFIX``.\n\n#\n\n# If the ``INSTALL_PREFIX`` argument is passed, this is used as base path to\n\n# calculate all the relative paths.  The ``<path>`` argument must be an absolute\n\n# path.  If this argument is not passed, the :variable:`CMAKE_INSTALL_PREFIX`\n\n# variable will be used instead.  The default value is good when generating a\n\n# FooConfig.cmake file to use your package from the install tree.  When\n\n# generating a FooConfig.cmake file to use your package from the build tree this\n\n# option should be used.\n\n#\n\n# By default ``configure_package_config_file`` also generates two helper macros,\n\n# ``set_and_check()`` and ``check_required_components()`` into the\n\n# ``FooConfig.cmake`` file.\n\n#\n\n# ``set_and_check()`` should be used instead of the normal ``set()`` command for\n\n# setting directories and file locations.  Additionally to setting the variable\n\n# it also checks that the referenced file or directory actually exists and fails\n\n# with a ``FATAL_ERROR`` otherwise.  This makes sure that the created\n\n# ``FooConfig.cmake`` file does not contain wrong references.\n\n# When using the ``NO_SET_AND_CHECK_MACRO``, this macro is not generated\n\n# into the ``FooConfig.cmake`` file.\n\n#\n\n# ``check_required_components(<PackageName>)`` should be called at the end of\n\n# the ``FooConfig.cmake`` file. This macro checks whether all requested,\n\n# non-optional components have been found, and if this is not the case, sets\n\n# the ``Foo_FOUND`` variable to ``FALSE``, so that the package is considered to\n\n# be not found.  It does that by testing the ``Foo_<Component>_FOUND``\n\n# variables for all requested required components.  This macro should be\n\n# called even if the package doesn't provide any components to make sure\n\n# users are not specifying components erroneously.  When using the\n\n# ``NO_CHECK_REQUIRED_COMPONENTS_MACRO`` option, this macro is not generated\n\n# into the ``FooConfig.cmake`` file.\n\n#\n\n# For an example see below the documentation for\n\n# :command:`write_basic_package_version_file()`.\n\n#\n\n# Generating a Package Version File\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# .. command:: write_basic_package_version_file\n\n#\n\n#  Create a version file for a project::\n\n#\n\n#    write_basic_package_version_file(<filename>\n\n#      [VERSION <major.minor.patch>]\n\n#      COMPATIBILITY <AnyNewerVersion|SameMajorVersion|SameMinorVersion|ExactVersion> )\n\n#\n\n#\n\n# Writes a file for use as ``<PackageName>ConfigVersion.cmake`` file to\n\n# ``<filename>``.  See the documentation of :command:`find_package()` for\n\n# details on this.\n\n#\n\n# ``<filename>`` is the output filename, it should be in the build tree.\n\n# ``<major.minor.patch>`` is the version number of the project to be installed.\n\n#\n\n# If no ``VERSION`` is given, the :variable:`PROJECT_VERSION` variable is used.\n\n# If this hasn't been set, it errors out.\n\n#\n\n# The ``COMPATIBILITY`` mode ``AnyNewerVersion`` means that the installed\n\n# package version will be considered compatible if it is newer or exactly the\n\n# same as the requested version.  This mode should be used for packages which\n\n# are fully backward compatible, also across major versions.\n\n# If ``SameMajorVersion`` is used instead, then the behaviour differs from\n\n# ``AnyNewerVersion`` in that the major version number must be the same as\n\n# requested, e.g.  version 2.0 will not be considered compatible if 1.0 is\n\n# requested.  This mode should be used for packages which guarantee backward\n\n# compatibility within the same major version.\n\n# If ``SameMinorVersion`` is used, the behaviour is the same as\n\n# ``SameMajorVersion``, but both major and minor version must be the same as\n\n# requested, e.g version 0.2 will not be compatible if 0.1 is requested.\n\n# If ``ExactVersion`` is used, then the package is only considered compatible if\n\n# the requested version matches exactly its own version number (not considering\n\n# the tweak version).  For example, version 1.2.3 of a package is only\n\n# considered compatible to requested version 1.2.3.  This mode is for packages\n\n# without compatibility guarantees.\n\n# If your project has more elaborated version matching rules, you will need to\n\n# write your own custom ``ConfigVersion.cmake`` file instead of using this\n\n# macro.\n\n#\n\n# Internally, this macro executes :command:`configure_file()` to create the\n\n# resulting version file.  Depending on the ``COMPATIBILITY``, the corresponding\n\n# ``BasicConfigVersion-<COMPATIBILITY>.cmake.in`` file is used.\n\n# Please note that these files are internal to CMake and you should not call\n\n# :command:`configure_file()` on them yourself, but they can be used as starting\n\n# point to create more sophisticted custom ``ConfigVersion.cmake`` files.\n\n#\n\n# Example Generating Package Files\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# Example using both :command:`configure_package_config_file` and\n\n# ``write_basic_package_version_file()``:\n\n#\n\n# ``CMakeLists.txt``:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    set(INCLUDE_INSTALL_DIR include/ ... CACHE )\n\n#    set(LIB_INSTALL_DIR lib/ ... CACHE )\n\n#    set(SYSCONFIG_INSTALL_DIR etc/foo/ ... CACHE )\n\n#    #...\n\n#    include(CMakePackageConfigHelpers)\n\n#    configure_package_config_file(FooConfig.cmake.in\n\n#      ${CMAKE_CURRENT_BINARY_DIR}/FooConfig.cmake\n\n#      INSTALL_DESTINATION ${LIB_INSTALL_DIR}/Foo/cmake\n\n#      PATH_VARS INCLUDE_INSTALL_DIR SYSCONFIG_INSTALL_DIR)\n\n#    write_basic_package_version_file(\n\n#      ${CMAKE_CURRENT_BINARY_DIR}/FooConfigVersion.cmake\n\n#      VERSION 1.2.3\n\n#      COMPATIBILITY SameMajorVersion )\n\n#    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/FooConfig.cmake\n\n#                  ${CMAKE_CURRENT_BINARY_DIR}/FooConfigVersion.cmake\n\n#            DESTINATION ${LIB_INSTALL_DIR}/Foo/cmake )\n\n#\n\n# ``FooConfig.cmake.in``:\n\n#\n\n# ::\n\n#\n\n#    set(FOO_VERSION x.y.z)\n\n#    ...\n\n#    @PACKAGE_INIT@\n\n#    ...\n\n#    set_and_check(FOO_INCLUDE_DIR \"@PACKAGE_INCLUDE_INSTALL_DIR@\")\n\n#    set_and_check(FOO_SYSCONFIG_DIR \"@PACKAGE_SYSCONFIG_INSTALL_DIR@\")\n\n#\n\n#    check_required_components(Foo)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Handle \"/usr move\" symlinks created by some Linux distros.\n",
        "Line" : 273,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/CMakeParseArguments.cmake" : {
      "ObjectId" : "7ee2bbacef5d23c08523e0f974dac7f501dc8517",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CMakeParseArguments\n\n# -------------------\n\n#\n\n# This module once implemented the :command:`cmake_parse_arguments` command\n\n# that is now implemented natively by CMake.  It is now an empty placeholder\n\n# for compatibility with projects that include it to get the command from\n\n# CMake 3.4 and lower.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CMakeParseImplicitLinkInfo.cmake" : {
      "ObjectId" : "30659ebcbb00d664549a0e5d2a9ece62bd7109bf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Function parse implicit linker options.\n\n# This is used internally by CMake and should not be included by user\n\n# code.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Parse implicit linker arguments.\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Construct a regex to match linker lines.  It must match both the\n\n# whole line and just the command (argv[0]).\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Xcode unconditionally adds a path under the project build tree and\n\n# on older versions it is not reported with proper quotes.  Remove it.\n",
        "Line" : 39,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Unix search path.\n",
        "Line" : 61,
        "CharPositionInLine" : 10
      },
      "6" : {
        "Text" : "# MSVC search path.\n",
        "Line" : 66,
        "CharPositionInLine" : 10
      },
      "7" : {
        "Text" : "# ld argument \"-lto_library <path>\"\n",
        "Line" : 77,
        "CharPositionInLine" : 10
      },
      "8" : {
        "Text" : "# Unix library.\n",
        "Line" : 81,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "# Unix library full path.\n",
        "Line" : 86,
        "CharPositionInLine" : 10
      },
      "10" : {
        "Text" : "# Windows library.\n",
        "Line" : 90,
        "CharPositionInLine" : 10
      },
      "11" : {
        "Text" : "# Object file full path.\n",
        "Line" : 96,
        "CharPositionInLine" : 10
      },
      "12" : {
        "Text" : "# Sun search path ([^0-9] avoids conflict with Mac -Y<num>).\n",
        "Line" : 100,
        "CharPositionInLine" : 10
      },
      "13" : {
        "Text" : "# HP named library.\n",
        "Line" : 106,
        "CharPositionInLine" : 10
      },
      "14" : {
        "Text" : "# Link editor option.\n",
        "Line" : 110,
        "CharPositionInLine" : 10
      },
      "15" : {
        "Text" : "# HP search path.\n",
        "Line" : 123,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Look for library search paths reported by linker.\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Cleanup list of libraries and flags.\n\n# We remove items that are not language-specific.\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Cleanup list of library and framework directories.\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Log results.\n",
        "Line" : 180,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Return results.\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 21
    },
    "deps/src/cmake-3.13.4/Modules/CMakePrintHelpers.cmake" : {
      "ObjectId" : "21c333e3139dd336e1792178771677857476ba00",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CMakePrintHelpers\n\n# -----------------\n\n#\n\n# Convenience macros for printing properties and variables, useful e.g. for debugging.\n\n#\n\n# ::\n\n#\n\n#  CMAKE_PRINT_PROPERTIES([TARGETS target1 ..  targetN]\n\n#                         [SOURCES source1 .. sourceN]\n\n#                         [DIRECTORIES dir1 .. dirN]\n\n#                         [TESTS test1 .. testN]\n\n#                         [CACHE_ENTRIES entry1 .. entryN]\n\n#                         PROPERTIES prop1 .. propN )\n\n#\n\n# This macro prints the values of the properties of the given targets,\n\n# source files, directories, tests or cache entries.  Exactly one of the\n\n# scope keywords must be used.  Example::\n\n#\n\n#    cmake_print_properties(TARGETS foo bar PROPERTIES\n\n#                           LOCATION INTERFACE_INCLUDE_DIRS)\n\n#\n\n# This will print the LOCATION and INTERFACE_INCLUDE_DIRS properties for\n\n# both targets foo and bar.\n\n#\n\n#\n\n#\n\n# CMAKE_PRINT_VARIABLES(var1 var2 ..  varN)\n\n#\n\n# This macro will print the name of each variable followed by its value.\n\n# Example::\n\n#\n\n#   cmake_print_variables(CMAKE_C_COMPILER CMAKE_MAJOR_VERSION DOES_NOT_EXIST)\n\n#\n\n# Gives::\n\n#\n\n#   -- CMAKE_C_COMPILER=\"/usr/bin/gcc\" ; CMAKE_MAJOR_VERSION=\"2\" ; DOES_NOT_EXIST=\"\"\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CMakePrintSystemInformation.cmake" : {
      "ObjectId" : "e74c801db533e098fd5b6b4a020012fbb027189a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CMakePrintSystemInformation\n\n# ---------------------------\n\n#\n\n# print system information\n\n#\n\n# This file can be used for diagnostic purposes just include it in a\n\n# project to see various internal CMake variables.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CMakePushCheckState.cmake" : {
      "ObjectId" : "98eea0532d68cda67bd673bf05dd4b1c86cfc68d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CMakePushCheckState\n\n# -------------------\n\n#\n\n#\n\n#\n\n# This module defines three macros: CMAKE_PUSH_CHECK_STATE()\n\n# CMAKE_POP_CHECK_STATE() and CMAKE_RESET_CHECK_STATE() These macros can\n\n# be used to save, restore and reset (i.e., clear contents) the state of\n\n# the variables CMAKE_REQUIRED_FLAGS, CMAKE_REQUIRED_DEFINITIONS,\n\n# CMAKE_REQUIRED_LIBRARIES, CMAKE_REQUIRED_INCLUDES and CMAKE_EXTRA_INCLUDE_FILES\n\n# used by the various Check-files coming with CMake, like e.g.\n\n# check_function_exists() etc.  The variable contents are pushed on a\n\n# stack, pushing multiple times is supported.  This is useful e.g.  when\n\n# executing such tests in a Find-module, where they have to be set, but\n\n# after the Find-module has been executed they should have the same\n\n# value as they had before.\n\n#\n\n# CMAKE_PUSH_CHECK_STATE() macro receives optional argument RESET.\n\n# Whether it's specified, CMAKE_PUSH_CHECK_STATE() will set all\n\n# CMAKE_REQUIRED_* variables to empty values, same as\n\n# CMAKE_RESET_CHECK_STATE() call will do.\n\n#\n\n# Usage:\n\n#\n\n# ::\n\n#\n\n#    cmake_push_check_state(RESET)\n\n#    set(CMAKE_REQUIRED_DEFINITIONS -DSOME_MORE_DEF)\n\n#    check_function_exists(...)\n\n#    cmake_reset_check_state()\n\n#    set(CMAKE_REQUIRED_DEFINITIONS -DANOTHER_DEF)\n\n#    check_function_exists(...)\n\n#    cmake_pop_check_state()\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# don't pop more than we pushed\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/CMakeRCInformation.cmake" : {
      "ObjectId" : "1227fdf263380097f4c6a09d591b904957cce0cb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file sets the basic flags for the Windows Resource Compiler.\n\n# It also loads the available platform file for the system-compiler\n\n# if it exists.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# make sure we don't use CMAKE_BASE_NAME from somewhere else\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# These are the only types of flags that should be passed to the rc\n\n# command, if COMPILE_FLAGS is used on a target this will be used\n\n# to filter out any other flags\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# now define the following rule variables\n\n# CMAKE_RC_COMPILE_OBJECT\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# compile a Resource file into an object file\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set this variable so we can avoid loading this more than once.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/CMakeSwiftInformation.cmake" : {
      "ObjectId" : "07ba6d077cb990a2a4d64ac76bf3d9fb9da4d781",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Load compiler-specific information.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# load the system- and compiler specific files\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# load a hardware specific file, mostly useful for embedded compilers\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# for most systems a module is the same as a shared library\n\n# so unless the variable CMAKE_MODULE_EXISTS is set just\n\n# copy the values from the LIBRARY variables\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/CMakeSystemSpecificInformation.cmake" : {
      "ObjectId" : "66f1722772d2ee1eeda8e09dc1ab1ba3bb950d46",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is included by cmGlobalGenerator::EnableLanguage.\n\n# It is included after the compiler has been determined, so\n\n# we know things like the compiler name and if the compiler is gnu.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# before cmake 2.6 these variables were set in cmMakefile.cxx. This is still\n\n# done to keep scripts and custom language and compiler modules working.\n\n# But they are reset here and set again in the platform files for the target\n\n# platform, so they can be used for testing the target platform instead\n\n# of testing the host platform.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# include Generic system information\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# 2. now include SystemName.cmake file to set the system specific information\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# optionally include a file which can do extra-generator specific things, e.g.\n\n# CMakeFindEclipseCDT4.cmake asks gcc for the system include dirs for the Eclipse CDT4 generator\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# for most systems a module is the same as a shared library\n\n# so unless the variable CMAKE_MODULE_EXISTS is set just\n\n# copy the values from the LIBRARY variables\n\n# this has to be done after the system information has been loaded\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/CMakeSystemSpecificInitialize.cmake" : {
      "ObjectId" : "21bcd403ca9a2519888629fa8d5ea9d0f142c30a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is included by cmGlobalGenerator::EnableLanguage.\n\n# It is included before the compiler has been determined.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The CMAKE_EFFECTIVE_SYSTEM_NAME is used to load compiler and compiler\n\n# wrapper configuration files. By default it equals to CMAKE_SYSTEM_NAME\n\n# but could be overridden in the ${CMAKE_SYSTEM_NAME}-Initialize files.\n\n#\n\n# It is useful to share the same aforementioned configuration files and\n\n# avoids duplicating them in case of tightly related platforms.\n\n#\n\n# An example are the platforms supported by Xcode (macOS, iOS, tvOS,\n\n# and watchOS). For all of those the CMAKE_EFFECTIVE_SYSTEM_NAME is\n\n# set to Apple which results in using\n\n# Platform/Apple-AppleClang-CXX.cmake for the Apple C++ compiler.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/CMakeTestASM-ATTCompiler.cmake" : {
      "ObjectId" : "df735c4bbdb74d9eb06988c8a0a6ce5fd27a2c1d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is used by EnableLanguage in cmGlobalGenerator to\n\n# determine that the selected ASM-ATT \"compiler\" works.\n\n# For assembler this can only check whether the compiler has been found,\n\n# because otherwise there would have to be a separate assembler source file\n\n# for each assembler on every architecture.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CMakeTestASMCompiler.cmake" : {
      "ObjectId" : "7f0b9a777a745ff87cc6ea1fffd97af63359014e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is used by EnableLanguage in cmGlobalGenerator to\n\n# determine that the selected ASM compiler works.\n\n# For assembler this can only check whether the compiler has been found,\n\n# because otherwise there would have to be a separate assembler source file\n\n# for each assembler on every architecture.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# when using generic \"ASM\" support, we must have detected the compiler ID, fail otherwise:\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/CMakeTestASM_MASMCompiler.cmake" : {
      "ObjectId" : "c1308fff53b5442fdb3d5923b462e50fc922a5b3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is used by EnableLanguage in cmGlobalGenerator to\n\n# determine that the selected ASM_MASM \"compiler\" (should be masm or masm64)\n\n# works. For assembler this can only check whether the compiler has been found,\n\n# because otherwise there would have to be a separate assembler source file\n\n# for each assembler on every architecture.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CMakeTestASM_NASMCompiler.cmake" : {
      "ObjectId" : "a9ee39d33e2d27e786c806fbb4ccb54d1cbf0311",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is used by EnableLanguage in cmGlobalGenerator to\n\n# determine that the selected ASM_NASM \"compiler\" works.\n\n# For assembler this can only check whether the compiler has been found,\n\n# because otherwise there would have to be a separate assembler source file\n\n# for each assembler on every architecture.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CMakeTestCCompiler.cmake" : {
      "ObjectId" : "e34ae756de3e55f8235188dab84cae5c8462d598",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The compiler configuration was forced by the user.\n\n# Assume the user has configured all compiler information.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Remove any cached result from an older CMake version.\n\n# We now store this in CMakeCCompiler.cmake.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This file is used by EnableLanguage in cmGlobalGenerator to\n\n# determine that that selected C compiler can actually compile\n\n# and link the most basic of programs.   If not, a fatal error\n\n# is set and cmake stops processing commands and will not generate\n\n# any makefiles or projects.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Move result from cache to normal variable.\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Try to identify the ABI and configure it into CMakeCCompiler.cmake\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Try to identify the compiler features\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Re-configure to save learned information.\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Modules/CMakeTestCSharpCompiler.cmake" : {
      "ObjectId" : "6715c30dbbaab96a736deec28860def2205d452d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The compiler configuration was forced by the user.\n\n# Assume the user has configured all compiler information.\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# This file is used by EnableLanguage in cmGlobalGenerator to\n\n# determine that the selected C# compiler can actually compile\n\n# and link the most basic of programs. If not, a fatal error\n\n# is set and cmake stops processing commands and will not generate\n\n# any makefiles or projects.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Move result from cache to normal variable.\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Re-configure to save learned information.\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/CMakeTestCUDACompiler.cmake" : {
      "ObjectId" : "f0454da670b6cb5680ce8db2117b43b6b87712f9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The compiler configuration was forced by the user.\n\n# Assume the user has configured all compiler information.\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Remove any cached result from an older CMake version.\n\n# We now store this in CMakeCUDACompiler.cmake.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This file is used by EnableLanguage in cmGlobalGenerator to\n\n# determine that the selected cuda compiler can actually compile\n\n# and link the most basic of programs.   If not, a fatal error\n\n# is set and cmake stops processing commands and will not generate\n\n# any makefiles or projects.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Move result from cache to normal variable.\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Try to identify the ABI and configure it into CMakeCUDACompiler.cmake\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Re-configure to save learned information.\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/CMakeTestCXXCompiler.cmake" : {
      "ObjectId" : "e4d49ae842ee9ae197d1f2cee341811ce80f8fe3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The compiler configuration was forced by the user.\n\n# Assume the user has configured all compiler information.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Remove any cached result from an older CMake version.\n\n# We now store this in CMakeCXXCompiler.cmake.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This file is used by EnableLanguage in cmGlobalGenerator to\n\n# determine that the selected C++ compiler can actually compile\n\n# and link the most basic of programs.   If not, a fatal error\n\n# is set and cmake stops processing commands and will not generate\n\n# any makefiles or projects.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Move result from cache to normal variable.\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Try to identify the ABI and configure it into CMakeCXXCompiler.cmake\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Try to identify the compiler features\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Re-configure to save learned information.\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Modules/CMakeTestCompilerCommon.cmake" : {
      "ObjectId" : "f76076fe269f274a2a1eae42102b7141447eae85",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/CMakeTestFortranCompiler.cmake" : {
      "ObjectId" : "e9860e9deb1c5726f225e5a265d3e1d2ef8a0898",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The compiler configuration was forced by the user.\n\n# Assume the user has configured all compiler information.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Remove any cached result from an older CMake version.\n\n# We now store this in CMakeFortranCompiler.cmake.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This file is used by EnableLanguage in cmGlobalGenerator to\n\n# determine that the selected Fortran compiler can actually compile\n\n# and link the most basic of programs.   If not, a fatal error\n\n# is set and cmake stops processing commands and will not generate\n\n# any makefiles or projects.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Move result from cache to normal variable.\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Try to identify the ABI and configure it into CMakeFortranCompiler.cmake\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Test for Fortran 90 support by using an f90-specific construct.\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Re-configure to save learned information.\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Modules/CMakeTestJavaCompiler.cmake" : {
      "ObjectId" : "3c33573b90b21787552b15b3f7519fcf37d7a43c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is used by EnableLanguage in cmGlobalGenerator to\n\n# determine that the selected Fortran compiler can actually compile\n\n# and link the most basic of programs.   If not, a fatal error\n\n# is set and cmake stops processing commands and will not generate\n\n# any makefiles or projects.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CMakeTestRCCompiler.cmake" : {
      "ObjectId" : "3123a6cf4fcfe04cbcc08199745627d98df96f7f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is used by EnableLanguage in cmGlobalGenerator to\n\n# determine that the selected RC compiler can actually compile\n\n# and link the most basic of programs.   If not, a fatal error\n\n# is set and cmake stops processing commands and will not generate\n\n# any makefiles or projects.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For now there is no way to do a try compile on just a .rc file\n\n# so just do nothing in here.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/CMakeTestSwiftCompiler.cmake" : {
      "ObjectId" : "858c1be799659cb672442857a8c8db6aa2fb6de5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The compiler configuration was forced by the user.\n\n# Assume the user has configured all compiler information.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Remove any cached result from an older CMake version.\n\n# We now store this in CMakeSwiftCompiler.cmake.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This file is used by EnableLanguage in cmGlobalGenerator to\n\n# determine that the selected C++ compiler can actually compile\n\n# and link the most basic of programs.   If not, a fatal error\n\n# is set and cmake stops processing commands and will not generate\n\n# any makefiles or projects.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Move result from cache to normal variable.\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/CMakeUnixFindMake.cmake" : {
      "ObjectId" : "1165656eb35e223b06177b545677b59ac0fa0c16",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for a make tool provided by Xcode\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CMakeVerifyManifest.cmake" : {
      "ObjectId" : "c477ab1c2267a661bdbae1123dd967a0f94e8154",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CMakeVerifyManifest\n\n# -------------------\n\n#\n\n#\n\n#\n\n# CMakeVerifyManifest.cmake\n\n#\n\n# This script is used to verify that embedded manifests and side by side\n\n# manifests for a project match.  To run this script, cd to a directory\n\n# and run the script with cmake -P.  On the command line you can pass in\n\n# versions that are OK even if not found in the .manifest files.  For\n\n# example, cmake -Dallow_versions=8.0.50608.0\n\n# -PCmakeVerifyManifest.cmake could be used to allow an embedded manifest\n\n# of 8.0.50608.0 to be used in a project even if that version was not\n\n# found in the .manifest file.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This script first recursively globs *.manifest files from\n\n# the current directory.  Then globs *.exe and *.dll.  Each\n\n# .exe and .dll is scanned for embedded manifests and the versions\n\n# of CRT are compared to those found in the .manifest files\n\n# from the first glob.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# crt_version:\n\n# function to extract the CRT version from a file\n\n# this can be passed a .exe, .dll, or a .manifest file\n\n# it will put the list of versions found into the variable\n\n# specified by list_var\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# check_version:\n\n#\n\n# test a file against the shipped manifest versions\n\n# for a directory\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# collect versions for a given file\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# see if the versions\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# collect up the versions of CRT that are shipped\n\n# in .manifest files\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# now find all .exe and .dll files\n\n# and call check_version on each of them\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# report a fatal error if there were any so that cmake will return\n\n# a non zero value\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Modules/CPack.cmake" : {
      "ObjectId" : "f3e34233a1e74f77dd19c9d351024f0130655043",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nCPack\n-----\n\nBuild binary and source package installers.\n\nVariables common to all CPack generators\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe CPack module generates binary and source installers in a variety of\nformats using the cpack program.  Inclusion of the CPack module adds\ntwo new build targets, ``package`` and ``package_source``, which build\nthe binary and source installers respectively.  The generated binary\ninstallers contain everything installed via CMake's :command:`install`\ncommand (and the deprecated :command:`install_files`,\n:command:`install_programs` and :command:`install_targets` commands).\n\nFor certain kinds of binary installers (including the graphical\ninstallers on macOS and Windows), CPack generates installers that\nallow users to select individual application components to install.\nSee :module:`CPackComponent` module for further details.\n\nThe :variable:`CPACK_GENERATOR` variable has different meanings in different\ncontexts.  In a ``CMakeLists.txt`` file, :variable:`CPACK_GENERATOR` is a\n*list of generators*: and when :manual:`cpack <cpack(1)>` is run with no other\narguments, it will iterate over that list and produce one package for each\ngenerator.  In a :variable:`CPACK_PROJECT_CONFIG_FILE`,\n:variable:`CPACK_GENERATOR` is a *string naming a single generator*.  If you\nneed per-cpack-generator logic to control *other* cpack settings, then you\nneed a :variable:`CPACK_PROJECT_CONFIG_FILE`.\n\nThe CMake source tree itself contains a :variable:`CPACK_PROJECT_CONFIG_FILE`.\nSee the top level file ``CMakeCPackOptions.cmake.in`` for an example.\n\nIf set, the :variable:`CPACK_PROJECT_CONFIG_FILE` is included automatically\non a per-generator basis.  It only need contain overrides.\n\nHere's how it works:\n\n* :manual:`cpack <cpack(1)>` runs\n* it includes ``CPackConfig.cmake``\n* it iterates over the generators given by the ``-G`` command line option,\n  or if no such option was specified, over the list of generators given by\n  the :variable:`CPACK_GENERATOR` variable set in the ``CPackConfig.cmake``\n  input file.\n* foreach generator, it then\n\n  - sets :variable:`CPACK_GENERATOR` to the one currently being iterated\n  - includes the :variable:`CPACK_PROJECT_CONFIG_FILE`\n  - produces the package for that generator\n\nThis is the key: For each generator listed in :variable:`CPACK_GENERATOR` in\n``CPackConfig.cmake``, cpack will *reset* :variable:`CPACK_GENERATOR`\ninternally to *the one currently being used* and then include the\n:variable:`CPACK_PROJECT_CONFIG_FILE`.\n\nBefore including this CPack module in your ``CMakeLists.txt`` file, there\nare a variety of variables that can be set to customize the resulting\ninstallers.  The most commonly-used variables are:\n\n.. variable:: CPACK_PACKAGE_NAME\n\n  The name of the package (or application).  If not specified, it defaults to\n  the project name.\n\n.. variable:: CPACK_PACKAGE_VENDOR\n\n  The name of the package vendor. (e.g., \"Kitware\").  The default is \"Humanity\".\n\n.. variable:: CPACK_PACKAGE_DIRECTORY\n\n  The directory in which CPack is doing its packaging.  If it is not set\n  then this will default (internally) to the build dir.  This variable may\n  be defined in a CPack config file or from the :manual:`cpack <cpack(1)>`\n  command line option ``-B``.  If set, the command line option overrides the\n  value found in the config file.\n\n.. variable:: CPACK_PACKAGE_VERSION_MAJOR\n\n  Package major version.  This variable will always be set, but its default\n  value depends on whether or not version details were given to the\n  :command:`project` command in the top level CMakeLists.txt file.  If version\n  details were given, the default value will be\n  :variable:`CMAKE_PROJECT_VERSION_MAJOR`.  If no version details were given,\n  a default version of 0.1.1 will be assumed, leading to\n  ``CPACK_PACKAGE_VERSION_MAJOR`` having a default value of 0.\n\n.. variable:: CPACK_PACKAGE_VERSION_MINOR\n\n  Package minor version.  The default value is determined based on whether or\n  not version details were given to the :command:`project` command in the top\n  level CMakeLists.txt file.  If version details were given, the default\n  value will be :variable:`CMAKE_PROJECT_VERSION_MINOR`, but if no minor\n  version component was specified then ``CPACK_PACKAGE_VERSION_MINOR`` will be\n  left unset.  If no project version was given at all, a default version of\n  0.1.1 will be assumed, leading to ``CPACK_PACKAGE_VERSION_MINOR`` having a\n  default value of 1.\n\n.. variable:: CPACK_PACKAGE_VERSION_PATCH\n\n  Package patch version.  The default value is determined based on whether or\n  not version details were given to the :command:`project` command in the top\n  level CMakeLists.txt file.  If version details were given, the default\n  value will be :variable:`CMAKE_PROJECT_VERSION_PATCH`, but if no patch\n  version component was specified then ``CPACK_PACKAGE_VERSION_PATCH`` will be\n  left unset.  If no project version was given at all, a default version of\n  0.1.1 will be assumed, leading to ``CPACK_PACKAGE_VERSION_PATCH`` having a\n  default value of 1.\n\n.. variable:: CPACK_PACKAGE_DESCRIPTION\n\n  A description of the project, used in places such as the introduction\n  screen of CPack-generated Windows installers.  If not set, the value of\n  this variable is populated from the file named by\n  :variable:`CPACK_PACKAGE_DESCRIPTION_FILE`.\n\n.. variable:: CPACK_PACKAGE_DESCRIPTION_FILE\n\n  A text file used to describe the project when\n  :variable:`CPACK_PACKAGE_DESCRIPTION` is not explicitly set.  The default\n  value for ``CPACK_PACKAGE_DESCRIPTION_FILE`` points to a built-in template\n  file ``Templates/CPack.GenericDescription.txt``.\n\n.. variable:: CPACK_PACKAGE_DESCRIPTION_SUMMARY\n\n  Short description of the project (only a few words).  If the\n  :variable:`CMAKE_PROJECT_DESCRIPTION` variable is set, it is used as the\n  default value, otherwise the default will be a string generated by CMake\n  based on :variable:`CMAKE_PROJECT_NAME`.\n\n.. variable:: CPACK_PACKAGE_HOMEPAGE_URL\n\n  Project homepage URL.  The default value is taken from the\n  :variable:`CMAKE_PROJECT_HOMEPAGE_URL` variable, which is set by the top\n  level :command:`project` command, or else the default will be empty if no\n  URL was provided to :command:`project`.\n\n.. variable:: CPACK_PACKAGE_FILE_NAME\n\n  The name of the package file to generate, not including the\n  extension.  For example, ``cmake-2.6.1-Linux-i686``.  The default value\n  is::\n\n    ${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CPACK_SYSTEM_NAME}\n\n.. variable:: CPACK_PACKAGE_INSTALL_DIRECTORY\n\n  Installation directory on the target system. This may be used by some\n  CPack generators like NSIS to create an installation directory e.g.,\n  \"CMake 2.5\" below the installation prefix.  All installed elements will be\n  put inside this directory.\n\n.. variable:: CPACK_PACKAGE_ICON\n\n  A branding image that will be displayed inside the installer (used by GUI\n  installers).\n\n.. variable:: CPACK_PACKAGE_CHECKSUM\n\n  An algorithm that will be used to generate an additional file with the\n  checksum of the package.  The output file name will be::\n\n    ${CPACK_PACKAGE_FILE_NAME}.${CPACK_PACKAGE_CHECKSUM}\n\n  Supported algorithms are those listed by the\n  :ref:`string(\\<HASH\\>) <Supported Hash Algorithms>` command.\n\n.. variable:: CPACK_PROJECT_CONFIG_FILE\n\n  CPack-time project CPack configuration file.  This file is included at cpack\n  time, once per generator after CPack has set :variable:`CPACK_GENERATOR`\n  to the actual generator being used.  It allows per-generator setting of\n  ``CPACK_*`` variables at cpack time.\n\n.. variable:: CPACK_RESOURCE_FILE_LICENSE\n\n  License to be embedded in the installer.  It will typically be displayed\n  to the user by the produced installer (often with an explicit \"Accept\"\n  button, for graphical installers) prior to installation.  This license\n  file is NOT added to the installed files but is used by some CPack generators\n  like NSIS.  If you want to install a license file (may be the same as this\n  one) along with your project, you must add an appropriate CMake\n  :command:`install` command in your ``CMakeLists.txt``.\n\n.. variable:: CPACK_RESOURCE_FILE_README\n\n  ReadMe file to be embedded in the installer.  It typically describes in\n  some detail the purpose of the project during the installation.  Not all\n  CPack generators use this file.\n\n.. variable:: CPACK_RESOURCE_FILE_WELCOME\n\n  Welcome file to be embedded in the installer.  It welcomes users to this\n  installer.  Typically used in the graphical installers on Windows and Mac\n  OS X.\n\n.. variable:: CPACK_MONOLITHIC_INSTALL\n\n  Disables the component-based installation mechanism.  When set, the\n  component specification is ignored and all installed items are put in a\n  single \"MONOLITHIC\" package.  Some CPack generators do monolithic\n  packaging by default and may be asked to do component packaging by\n  setting ``CPACK_<GENNAME>_COMPONENT_INSTALL`` to ``TRUE``.\n\n.. variable:: CPACK_GENERATOR\n\n  List of CPack generators to use.  If not specified, CPack will create a\n  set of options following the naming pattern\n  :variable:`CPACK_BINARY_<GENNAME>` (e.g. ``CPACK_BINARY_NSIS``) allowing\n  the user to enable/disable individual generators.  If the ``-G`` option is\n  given on the :manual:`cpack <cpack(1)>` command line, it will override this\n  variable and any ``CPACK_BINARY_<GENNAME>`` options.\n\n.. variable:: CPACK_OUTPUT_CONFIG_FILE\n\n  The name of the CPack binary configuration file.  This file is the CPack\n  configuration generated by the CPack module for binary installers.\n  Defaults to ``CPackConfig.cmake``.\n\n.. variable:: CPACK_PACKAGE_EXECUTABLES\n\n  Lists each of the executables and associated text label to be used to\n  create Start Menu shortcuts.  For example, setting this to the list\n  ``ccmake;CMake`` will create a shortcut named \"CMake\" that will execute the\n  installed executable ``ccmake``.  Not all CPack generators use it (at least\n  NSIS, WIX and OSXX11 do).\n\n.. variable:: CPACK_STRIP_FILES\n\n  List of files to be stripped.  Starting with CMake 2.6.0,\n  ``CPACK_STRIP_FILES`` will be a boolean variable which enables\n  stripping of all files (a list of files evaluates to ``TRUE`` in CMake,\n  so this change is compatible).\n\n.. variable:: CPACK_VERBATIM_VARIABLES\n\n  If set to ``TRUE``, values of variables prefixed with ``CPACK_`` will be\n  escaped before being written to the configuration files, so that the cpack\n  program receives them exactly as they were specified.  If not, characters\n  like quotes and backslashes can cause parsing errors or alter the value\n  received by the cpack program.  Defaults to ``FALSE`` for backwards\n  compatibility.\n\nThe following CPack variables are specific to source packages, and\nwill not affect binary packages:\n\n.. variable:: CPACK_SOURCE_PACKAGE_FILE_NAME\n\n  The name of the source package.  For example ``cmake-2.6.1``.\n\n.. variable:: CPACK_SOURCE_STRIP_FILES\n\n  List of files in the source tree that will be stripped.  Starting with\n  CMake 2.6.0, ``CPACK_SOURCE_STRIP_FILES`` will be a boolean\n  variable which enables stripping of all files (a list of files evaluates\n  to ``TRUE`` in CMake, so this change is compatible).\n\n.. variable:: CPACK_SOURCE_GENERATOR\n\n  List of generators used for the source packages.  As with\n  :variable:`CPACK_GENERATOR`, if this is not specified then CPack will\n  create a set of options (e.g. ``CPACK_SOURCE_ZIP``) allowing\n  users to select which packages will be generated.\n\n.. variable:: CPACK_SOURCE_OUTPUT_CONFIG_FILE\n\n  The name of the CPack source configuration file.  This file is the CPack\n  configuration generated by the CPack module for source installers.\n  Defaults to ``CPackSourceConfig.cmake``.\n\n.. variable:: CPACK_SOURCE_IGNORE_FILES\n\n  Pattern of files in the source tree that won't be packaged when building\n  a source package.  This is a list of regular expression patterns (that\n  must be properly escaped), e.g.,\n  ``/CVS/;/\\\\.svn/;\\\\.swp$;\\\\.#;/#;.*~;cscope.*``\n\nThe following variables are for advanced uses of CPack:\n\n.. variable:: CPACK_CMAKE_GENERATOR\n\n  What CMake generator should be used if the project is a CMake\n  project.  Defaults to the value of :variable:`CMAKE_GENERATOR`.  Few users\n  will want to change this setting.\n\n.. variable:: CPACK_INSTALL_CMAKE_PROJECTS\n\n  List of four values that specify what project to install.  The four values\n  are: Build directory, Project Name, Project Component, Directory.  If\n  omitted, CPack will build an installer that installs everything.\n\n.. variable:: CPACK_SYSTEM_NAME\n\n  System name, defaults to the value of :variable:`CMAKE_SYSTEM_NAME`,\n  except on Windows where it will be ``win32`` or ``win64``.\n\n.. variable:: CPACK_PACKAGE_VERSION\n\n  Package full version, used internally.  By default, this is built from\n  :variable:`CPACK_PACKAGE_VERSION_MAJOR`,\n  :variable:`CPACK_PACKAGE_VERSION_MINOR`, and\n  :variable:`CPACK_PACKAGE_VERSION_PATCH`.\n\n.. variable:: CPACK_TOPLEVEL_TAG\n\n  Directory for the installed files.\n\n.. variable:: CPACK_INSTALL_COMMANDS\n\n  Extra commands to install components.\n\n.. variable:: CPACK_INSTALLED_DIRECTORIES\n\n  Extra directories to install.\n\n.. variable:: CPACK_PACKAGE_INSTALL_REGISTRY_KEY\n\n  Registry key used when installing this project.  This is only used by\n  installers for Windows.  The default value is based on the installation\n  directory.\n\n.. variable:: CPACK_CREATE_DESKTOP_LINKS\n\n  List of desktop links to create.  Each desktop link requires a\n  corresponding start menu shortcut as created by\n  :variable:`CPACK_PACKAGE_EXECUTABLES`.\n\n.. variable:: CPACK_BINARY_<GENNAME>\n\n  CPack generated options for binary generators.  The ``CPack.cmake`` module\n  generates (when :variable:`CPACK_GENERATOR` is not set) a set of CMake\n  options (see CMake :command:`option` command) which may then be used to\n  select the CPack generator(s) to be used when building the ``package``\n  target or when running :manual:`cpack <cpack(1)>` without the ``-G`` option.\n\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define this var in order to avoid (or warn) concerning multiple inclusion\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Pick a configuration file\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Backward compatibility\n\n# Include CPackComponent macros if it has not already been included before.\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Macro for setting values if a user did not overwrite them\n\n# Mangles CMake-special characters. Only kept for backwards compatibility.\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# cpack_encode_variables - Function to encode variables for the configuration file\n\n# find any variable that starts with CPACK and create a variable\n\n# _CPACK_OTHER_VARIABLES_ that contains SET commands for\n\n# each cpack variable.  _CPACK_OTHER_VARIABLES_ is then\n\n# used as an @ replacment in configure_file for the CPackConfig.\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Internal use functions\n",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Set the package name\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Set the package version\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Set default directory creation permissions mode\n",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Root dir: default value should be the string literal \"$PROGRAMFILES\"\n\n# for backwards compatibility. Projects may set this value to anything.\n\n# When creating 64 bit binaries we set the default value to \"$PROGRAMFILES64\"\n",
        "Line" : 479,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# <project>-<major>.<minor>.<patch>-<release>-<platform>.<pkgtype>\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# always force to exactly \"true\" or \"false\" for CPack.Info.plist.in:\n",
        "Line" : 499,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Provide options to choose generators we might check here if the required\n\n# tools for the generators exist and set the defaults according to the\n\n# results.\n",
        "Line" : 523,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Provide options to choose source generators\n",
        "Line" : 581,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# mark the above options as advanced\n",
        "Line" : 609,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Set some other variables\n",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# if the user has set CPACK_NSIS_DISPLAY_NAME remember it\n",
        "Line" : 646,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# if the user has set CPACK_NSIS_DISPLAY\n\n# explicitly, then use that as the default\n\n# value of CPACK_NSIS_PACKAGE_NAME  instead\n\n# of CPACK_PACKAGE_INSTALL_DIRECTORY\n",
        "Line" : 650,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# WiX specific variables\n",
        "Line" : 674,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# set sysroot so SDK tools can be used\n",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# The user has provided the set of components to be installed as\n\n# part of a component-based installation; trust her.\n",
        "Line" : 689,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# If the user has not specifically requested a monolithic installer\n\n# but has specified components in various \"install\" commands, tell\n\n# CPack about those components.\n",
        "Line" : 694,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Only one component: this is not a component-based installation\n\n# (at least, it isn't a component-based installation, but may\n\n# become one later if the user uses the cpack_add_* commands).\n",
        "Line" : 701,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# CMake always generates a component named \"Unspecified\", which is\n\n# used to install everything that doesn't have an explicitly-provided\n\n# component. Since these files should always be installed, we'll make\n\n# them hidden and required.\n",
        "Line" : 710,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Generate source file\n",
        "Line" : 720,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 27
    },
    "deps/src/cmake-3.13.4/Modules/CPackArchive.cmake" : {
      "ObjectId" : "741fb1fdd447e2e873850bf327b46b1a03869a9b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CPackArchive\n\n# ------------\n\n#\n\n# Archive CPack generator that supports packaging of sources and binaries in\n\n# different formats:\n\n#\n\n#   - 7Z - 7zip - (.7z)\n\n#   - TBZ2 (.tar.bz2)\n\n#   - TGZ (.tar.gz)\n\n#   - TXZ (.tar.xz)\n\n#   - TZ (.tar.Z)\n\n#   - ZIP (.zip)\n\n#\n\n# Variables specific to CPack Archive generator\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# .. variable:: CPACK_ARCHIVE_FILE_NAME\n\n#               CPACK_ARCHIVE_<component>_FILE_NAME\n\n#\n\n#  Package file name without extension which is added automatically depending\n\n#  on the archive format.\n\n#\n\n#  * Mandatory : YES\n\n#  * Default   : ``<CPACK_PACKAGE_FILE_NAME>[-<component>].<extension>`` with\n\n#                spaces replaced by '-'\n\n#\n\n# .. variable:: CPACK_ARCHIVE_COMPONENT_INSTALL\n\n#\n\n#  Enable component packaging for CPackArchive\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : OFF\n\n#\n\n#  If enabled (ON) multiple packages are generated. By default a single package\n\n#  containing files of all components is generated.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CPackBundle.cmake" : {
      "ObjectId" : "8f37ef87ee761359444b8a16b9f53ab3dbade527",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CPackBundle\n\n# -----------\n\n#\n\n# CPack Bundle generator (Mac OS X) specific options\n\n#\n\n# Variables specific to CPack Bundle generator\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# Installers built on Mac OS X using the Bundle generator use the\n\n# aforementioned DragNDrop (CPACK_DMG_xxx) variables, plus the following\n\n# Bundle-specific parameters (CPACK_BUNDLE_xxx).\n\n#\n\n# .. variable:: CPACK_BUNDLE_NAME\n\n#\n\n#  The name of the generated bundle. This appears in the OSX finder as the\n\n#  bundle name. Required.\n\n#\n\n# .. variable:: CPACK_BUNDLE_PLIST\n\n#\n\n#  Path to an OSX plist file that will be used for the generated bundle. This\n\n#  assumes that the caller has generated or specified their own Info.plist\n\n#  file. Required.\n\n#\n\n# .. variable:: CPACK_BUNDLE_ICON\n\n#\n\n#  Path to an OSX icon file that will be used as the icon for the generated\n\n#  bundle. This is the icon that appears in the OSX finder for the bundle, and\n\n#  in the OSX dock when the bundle is opened.  Required.\n\n#\n\n# .. variable:: CPACK_BUNDLE_STARTUP_COMMAND\n\n#\n\n#  Path to a startup script. This is a path to an executable or script that\n\n#  will be run whenever an end-user double-clicks the generated bundle in the\n\n#  OSX Finder. Optional.\n\n#\n\n# .. variable:: CPACK_BUNDLE_APPLE_CERT_APP\n\n#\n\n#  The name of your Apple supplied code signing certificate for the application.\n\n#  The name usually takes the form \"Developer ID Application: [Name]\" or\n\n#  \"3rd Party Mac Developer Application: [Name]\". If this variable is not set\n\n#  the application will not be signed.\n\n#\n\n# .. variable:: CPACK_BUNDLE_APPLE_ENTITLEMENTS\n\n#\n\n#  The name of the plist file that contains your apple entitlements for sandboxing\n\n#  your application. This file is required for submission to the Mac App Store.\n\n#\n\n# .. variable:: CPACK_BUNDLE_APPLE_CODESIGN_FILES\n\n#\n\n#  A list of additional files that you wish to be signed. You do not need to\n\n#  list the main application folder, or the main executable. You should\n\n#  list any frameworks and plugins that are included in your app bundle.\n\n#\n\n# .. variable:: CPACK_BUNDLE_APPLE_CODESIGN_PARAMETER\n\n#\n\n#  Additional parameter that will passed to codesign.\n\n#  Default value: \"--deep -f\"\n\n#\n\n# .. variable:: CPACK_COMMAND_CODESIGN\n\n#\n\n#  Path to the codesign(1) command used to sign applications with an\n\n#  Apple cert. This variable can be used to override the automatically\n\n#  detected command (or specify its location if the auto-detection fails\n\n#  to find it.)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Bundle Generator specific code should be put here\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/CPackComponent.cmake" : {
      "ObjectId" : "a0d99354d6a8163b890d44fa69457e340210f27d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CPackComponent\n\n# --------------\n\n#\n\n# Build binary and source package installers\n\n#\n\n# Variables concerning CPack Components\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# The CPackComponent module is the module which handles the component\n\n# part of CPack.  See CPack module for general information about CPack.\n\n#\n\n# For certain kinds of binary installers (including the graphical\n\n# installers on macOS and Windows), CPack generates installers that\n\n# allow users to select individual application components to install.\n\n# The contents of each of the components are identified by the COMPONENT\n\n# argument of CMake's INSTALL command.  These components can be\n\n# annotated with user-friendly names and descriptions, inter-component\n\n# dependencies, etc., and grouped in various ways to customize the\n\n# resulting installer.  See the cpack_add_* commands, described below,\n\n# for more information about component-specific installations.\n\n#\n\n# Component-specific installation allows users to select specific sets\n\n# of components to install during the install process.  Installation\n\n# components are identified by the COMPONENT argument of CMake's INSTALL\n\n# commands, and should be further described by the following CPack\n\n# commands:\n\n#\n\n# .. variable:: CPACK_COMPONENTS_ALL\n\n#\n\n#  The list of component to install.\n\n#\n\n#  The default value of this variable is computed by CPack and contains all\n\n#  components defined by the project.  The user may set it to only include the\n\n#  specified components.\n\n#\n\n#  Instead of specifying all the desired components, it is possible to obtain a\n\n#  list of all defined components and then remove the unwanted ones from the\n\n#  list. The :command:`get_cmake_property` command can be used to obtain the\n\n#  ``COMPONENTS`` property, then the :command:`list(REMOVE_ITEM)` command can be\n\n#  used to remove the unwanted ones. For example, to use all defined components\n\n#  except ``foo`` and ``bar``::\n\n#\n\n#    get_cmake_property(CPACK_COMPONENTS_ALL COMPONENTS)\n\n#    list(REMOVE_ITEM CPACK_COMPONENTS_ALL \"foo\" \"bar\")\n\n#\n\n# .. variable:: CPACK_<GENNAME>_COMPONENT_INSTALL\n\n#\n\n#  Enable/Disable component install for CPack generator <GENNAME>.\n\n#\n\n#  Each CPack Generator (RPM, DEB, ARCHIVE, NSIS, DMG, etc...) has a legacy\n\n#  default behavior.  e.g.  RPM builds monolithic whereas NSIS builds\n\n#  component.  One can change the default behavior by setting this variable to\n\n#  0/1 or OFF/ON.\n\n#\n\n# .. variable:: CPACK_COMPONENTS_GROUPING\n\n#\n\n#  Specify how components are grouped for multi-package component-aware CPack\n\n#  generators.\n\n#\n\n#  Some generators like RPM or ARCHIVE family (TGZ, ZIP, ...) generates\n\n#  several packages files when asked for component packaging.  They group\n\n#  the component differently depending on the value of this variable:\n\n#\n\n#  * ONE_PER_GROUP (default): creates one package file per component group\n\n#  * ALL_COMPONENTS_IN_ONE : creates a single package with all (requested) components\n\n#  * IGNORE : creates one package per component, i.e. IGNORE component group\n\n#\n\n#  One can specify different grouping for different CPack generator by\n\n#  using a CPACK_PROJECT_CONFIG_FILE.\n\n#\n\n# .. variable:: CPACK_COMPONENT_<compName>_DISPLAY_NAME\n\n#\n\n#  The name to be displayed for a component.\n\n#\n\n# .. variable:: CPACK_COMPONENT_<compName>_DESCRIPTION\n\n#\n\n#  The description of a component.\n\n#\n\n# .. variable:: CPACK_COMPONENT_<compName>_GROUP\n\n#\n\n#  The group of a component.\n\n#\n\n# .. variable:: CPACK_COMPONENT_<compName>_DEPENDS\n\n#\n\n#  The dependencies (list of components) on which this component depends.\n\n#\n\n# .. variable:: CPACK_COMPONENT_<compName>_HIDDEN\n\n#\n\n#  True if this component is hidden from the user.\n\n#\n\n# .. variable:: CPACK_COMPONENT_<compName>_REQUIRED\n\n#\n\n#  True if this component is required.\n\n#\n\n# .. variable:: CPACK_COMPONENT_<compName>_DISABLED\n\n#\n\n#  True if this component is not selected to be installed by default.\n\n#\n\n# .. command:: cpack_add_component\n\n#\n\n# Describes a CPack installation\n\n# component named by the COMPONENT argument to a CMake INSTALL command.\n\n#\n\n# ::\n\n#\n\n#   cpack_add_component(compname\n\n#                       [DISPLAY_NAME name]\n\n#                       [DESCRIPTION description]\n\n#                       [HIDDEN | REQUIRED | DISABLED ]\n\n#                       [GROUP group]\n\n#                       [DEPENDS comp1 comp2 ... ]\n\n#                       [INSTALL_TYPES type1 type2 ... ]\n\n#                       [DOWNLOADED]\n\n#                       [ARCHIVE_FILE filename]\n\n#                       [PLIST filename])\n\n#\n\n#\n\n#\n\n# The cmake_add_component command describes an installation component,\n\n# which the user can opt to install or remove as part of the graphical\n\n# installation process.  compname is the name of the component, as\n\n# provided to the COMPONENT argument of one or more CMake INSTALL\n\n# commands.\n\n#\n\n# DISPLAY_NAME is the displayed name of the component, used in graphical\n\n# installers to display the component name.  This value can be any\n\n# string.\n\n#\n\n# DESCRIPTION is an extended description of the component, used in\n\n# graphical installers to give the user additional information about the\n\n# component.  Descriptions can span multiple lines using ``\\n`` as the\n\n# line separator.  Typically, these descriptions should be no more than\n\n# a few lines long.\n\n#\n\n# HIDDEN indicates that this component will be hidden in the graphical\n\n# installer, so that the user cannot directly change whether it is\n\n# installed or not.\n\n#\n\n# REQUIRED indicates that this component is required, and therefore will\n\n# always be installed.  It will be visible in the graphical installer,\n\n# but it cannot be unselected.  (Typically, required components are\n\n# shown greyed out).\n\n#\n\n# DISABLED indicates that this component should be disabled (unselected)\n\n# by default.  The user is free to select this component for\n\n# installation, unless it is also HIDDEN.\n\n#\n\n# DEPENDS lists the components on which this component depends.  If this\n\n# component is selected, then each of the components listed must also be\n\n# selected.  The dependency information is encoded within the installer\n\n# itself, so that users cannot install inconsistent sets of components.\n\n#\n\n# GROUP names the component group of which this component is a part.  If\n\n# not provided, the component will be a standalone component, not part\n\n# of any component group.  Component groups are described with the\n\n# cpack_add_component_group command, detailed below.\n\n#\n\n# INSTALL_TYPES lists the installation types of which this component is\n\n# a part.  When one of these installations types is selected, this\n\n# component will automatically be selected.  Installation types are\n\n# described with the cpack_add_install_type command, detailed below.\n\n#\n\n# DOWNLOADED indicates that this component should be downloaded\n\n# on-the-fly by the installer, rather than packaged in with the\n\n# installer itself.  For more information, see the\n\n# cpack_configure_downloads command.\n\n#\n\n# ARCHIVE_FILE provides a name for the archive file created by CPack to\n\n# be used for downloaded components.  If not supplied, CPack will create\n\n# a file with some name based on CPACK_PACKAGE_FILE_NAME and the name of\n\n# the component.  See cpack_configure_downloads for more information.\n\n#\n\n# PLIST gives a filename that is passed to pkgbuild with the\n\n# ``--component-plist`` argument when using the productbuild generator.\n\n#\n\n# .. command:: cpack_add_component_group\n\n#\n\n# Describes a group of related CPack installation components.\n\n#\n\n# ::\n\n#\n\n#   cpack_add_component_group(groupname\n\n#                            [DISPLAY_NAME name]\n\n#                            [DESCRIPTION description]\n\n#                            [PARENT_GROUP parent]\n\n#                            [EXPANDED]\n\n#                            [BOLD_TITLE])\n\n#\n\n#\n\n#\n\n# The cpack_add_component_group describes a group of installation\n\n# components, which will be placed together within the listing of\n\n# options.  Typically, component groups allow the user to\n\n# select/deselect all of the components within a single group via a\n\n# single group-level option.  Use component groups to reduce the\n\n# complexity of installers with many options.  groupname is an arbitrary\n\n# name used to identify the group in the GROUP argument of the\n\n# cpack_add_component command, which is used to place a component in a\n\n# group.  The name of the group must not conflict with the name of any\n\n# component.\n\n#\n\n# DISPLAY_NAME is the displayed name of the component group, used in\n\n# graphical installers to display the component group name.  This value\n\n# can be any string.\n\n#\n\n# DESCRIPTION is an extended description of the component group, used in\n\n# graphical installers to give the user additional information about the\n\n# components within that group.  Descriptions can span multiple lines\n\n# using ``\\n`` as the line separator.  Typically, these descriptions\n\n# should be no more than a few lines long.\n\n#\n\n# PARENT_GROUP, if supplied, names the parent group of this group.\n\n# Parent groups are used to establish a hierarchy of groups, providing\n\n# an arbitrary hierarchy of groups.\n\n#\n\n# EXPANDED indicates that, by default, the group should show up as\n\n# \"expanded\", so that the user immediately sees all of the components\n\n# within the group.  Otherwise, the group will initially show up as a\n\n# single entry.\n\n#\n\n# BOLD_TITLE indicates that the group title should appear in bold, to\n\n# call the user's attention to the group.\n\n#\n\n# .. command:: cpack_add_install_type\n\n#\n\n# Add a new installation type containing\n\n# a set of predefined component selections to the graphical installer.\n\n#\n\n# ::\n\n#\n\n#   cpack_add_install_type(typename\n\n#                          [DISPLAY_NAME name])\n\n#\n\n#\n\n#\n\n# The cpack_add_install_type command identifies a set of preselected\n\n# components that represents a common use case for an application.  For\n\n# example, a \"Developer\" install type might include an application along\n\n# with its header and library files, while an \"End user\" install type\n\n# might just include the application's executable.  Each component\n\n# identifies itself with one or more install types via the INSTALL_TYPES\n\n# argument to cpack_add_component.\n\n#\n\n# DISPLAY_NAME is the displayed name of the install type, which will\n\n# typically show up in a drop-down box within a graphical installer.\n\n# This value can be any string.\n\n#\n\n# .. command:: cpack_configure_downloads\n\n#\n\n# Configure CPack to download\n\n# selected components on-the-fly as part of the installation process.\n\n#\n\n# ::\n\n#\n\n#   cpack_configure_downloads(site\n\n#                             [UPLOAD_DIRECTORY dirname]\n\n#                             [ALL]\n\n#                             [ADD_REMOVE|NO_ADD_REMOVE])\n\n#\n\n#\n\n#\n\n# The cpack_configure_downloads command configures installation-time\n\n# downloads of selected components.  For each downloadable component,\n\n# CPack will create an archive containing the contents of that\n\n# component, which should be uploaded to the given site.  When the user\n\n# selects that component for installation, the installer will download\n\n# and extract the component in place.  This feature is useful for\n\n# creating small installers that only download the requested components,\n\n# saving bandwidth.  Additionally, the installers are small enough that\n\n# they will be installed as part of the normal installation process, and\n\n# the \"Change\" button in Windows Add/Remove Programs control panel will\n\n# allow one to add or remove parts of the application after the original\n\n# installation.  On Windows, the downloaded-components functionality\n\n# requires the ZipDLL plug-in for NSIS, available at:\n\n#\n\n# ::\n\n#\n\n#   http://nsis.sourceforge.net/ZipDLL_plug-in\n\n#\n\n#\n\n#\n\n# On macOS, installers that download components on-the-fly can only\n\n# be built and installed on system using macOS 10.5 or later.\n\n#\n\n# The site argument is a URL where the archives for downloadable\n\n# components will reside, e.g.,\n\n# https://cmake.org/files/2.6.1/installer/ All of the archives\n\n# produced by CPack should be uploaded to that location.\n\n#\n\n# UPLOAD_DIRECTORY is the local directory where CPack will create the\n\n# various archives for each of the components.  The contents of this\n\n# directory should be uploaded to a location accessible by the URL given\n\n# in the site argument.  If omitted, CPack will use the directory\n\n# CPackUploads inside the CMake binary directory to store the generated\n\n# archives.\n\n#\n\n# The ALL flag indicates that all components be downloaded.  Otherwise,\n\n# only those components explicitly marked as DOWNLOADED or that have a\n\n# specified ARCHIVE_FILE will be downloaded.  Additionally, the ALL\n\n# option implies ADD_REMOVE (unless NO_ADD_REMOVE is specified).\n\n#\n\n# ADD_REMOVE indicates that CPack should install a copy of the installer\n\n# that can be called from Windows' Add/Remove Programs dialog (via the\n\n# \"Modify\" button) to change the set of installed components.\n\n# NO_ADD_REMOVE turns off this behavior.  This option is ignored on Mac\n\n# OS X.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define var in order to avoid multiple inclusion\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Macro that appends a SET command for the given variable name (var)\n\n# to the macro named strvar, but only if the variable named \"var\"\n\n# has been defined. The string will eventually be appended to a CPack\n\n# configuration file.\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Macro that appends a SET command for the given variable name (var)\n\n# to the macro named strvar, but only if the variable named \"var\"\n\n# has been defined and is a string. The string will eventually be\n\n# appended to a CPack configuration file.\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Macro that appends a SET command for the given list variable name (var)\n\n# to the macro named strvar, but only if the variable named \"var\"\n\n# has been defined. It's like add variable, but wrap each item to quotes.\n\n# The string will eventually be appended to a CPack configuration file.\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Macro that appends a SET command for the given variable name (var)\n\n# to the macro named strvar, but only if the variable named \"var\"\n\n# has been set to true. The string will eventually be\n\n# appended to a CPack configuration file.\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Macro that adds a component to the CPack installer\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If the user didn't set CPACK_COMPONENTS_ALL explicitly, update the\n\n# value of CPACK_COMPONENTS_ALL in the configuration file. This will\n\n# take care of any components that have been added after the CPack\n\n# moduled was included.\n",
        "Line" : 387,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Backward compatibility issue.\n\n# Write to config iff the macros is used after CPack.cmake has been\n\n# included, other it's not necessary because the variables\n\n# will be encoded by cpack_encode_variables.\n",
        "Line" : 434,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Macro that adds a component group to the CPack installer\n",
        "Line" : 443,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Backward compatibility issue.\n\n# Write to config iff the macros is used after CPack.cmake has been\n\n# included, other it's not necessary because the variables\n\n# will be encoded by cpack_encode_variables.\n",
        "Line" : 469,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Macro that adds an installation type to the CPack installer\n",
        "Line" : 478,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Backward compatibility issue.\n\n# Write to config iff the macros is used after CPack.cmake has been\n\n# included, other it's not necessary because the variables\n\n# will be encoded by cpack_encode_variables.\n",
        "Line" : 495,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Backward compatibility issue.\n\n# Write to config iff the macros is used after CPack.cmake has been\n\n# included, other it's not necessary because the variables\n\n# will be encoded by cpack_encode_variables.\n",
        "Line" : 532,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 15
    },
    "deps/src/cmake-3.13.4/Modules/CPackCygwin.cmake" : {
      "ObjectId" : "6d203c3133d61404e2480838b08b1be1f2df9ed2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CPackCygwin\n\n# -----------\n\n#\n\n# Cygwin CPack generator (Cygwin).\n\n#\n\n# Variables specific to CPack Cygwin generator\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# The\n\n# following variable is specific to installers build on and/or for\n\n# Cygwin:\n\n#\n\n# .. variable:: CPACK_CYGWIN_PATCH_NUMBER\n\n#\n\n#  The Cygwin patch number.  FIXME: This documentation is incomplete.\n\n#\n\n# .. variable:: CPACK_CYGWIN_PATCH_FILE\n\n#\n\n#  The Cygwin patch file.  FIXME: This documentation is incomplete.\n\n#\n\n# .. variable:: CPACK_CYGWIN_BUILD_SCRIPT\n\n#\n\n#  The Cygwin build script.  FIXME: This documentation is incomplete.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CPackDMG.cmake" : {
      "ObjectId" : "bda600fd45b57104309c8e9433508ca51bc223ff",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CPackDMG\n\n# --------\n\n#\n\n# DragNDrop CPack generator (Mac OS X).\n\n#\n\n# Variables specific to CPack DragNDrop generator\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# The following variables are specific to the DragNDrop installers built\n\n# on Mac OS X:\n\n#\n\n# .. variable:: CPACK_DMG_VOLUME_NAME\n\n#\n\n#  The volume name of the generated disk image. Defaults to\n\n#  CPACK_PACKAGE_FILE_NAME.\n\n#\n\n# .. variable:: CPACK_DMG_FORMAT\n\n#\n\n#  The disk image format. Common values are UDRO (UDIF read-only), UDZO (UDIF\n\n#  zlib-compressed) or UDBZ (UDIF bzip2-compressed). Refer to hdiutil(1) for\n\n#  more information on other available formats. Defaults to UDZO.\n\n#\n\n# .. variable:: CPACK_DMG_DS_STORE\n\n#\n\n#  Path to a custom DS_Store file. This .DS_Store file e.g. can be used to\n\n#  specify the Finder window position/geometry and layout (such as hidden\n\n#  toolbars, placement of the icons etc.). This file has to be generated by\n\n#  the Finder (either manually or through AppleScript) using a normal folder\n\n#  from which the .DS_Store file can then be extracted.\n\n#\n\n# .. variable:: CPACK_DMG_DS_STORE_SETUP_SCRIPT\n\n#\n\n#  Path to a custom AppleScript file.  This AppleScript is used to generate\n\n#  a .DS_Store file which specifies the Finder window position/geometry and\n\n#  layout (such as hidden toolbars, placement of the icons etc.).\n\n#  By specifying a custom AppleScript there is no need to use\n\n#  CPACK_DMG_DS_STORE, as the .DS_Store that is generated by the AppleScript\n\n#  will be packaged.\n\n#\n\n# .. variable:: CPACK_DMG_BACKGROUND_IMAGE\n\n#\n\n#  Path to an image file to be used as the background.  This file will be\n\n#  copied to .background/background.<ext>, where ext is the original image file\n\n#  extension.  The background image is installed into the image before\n\n#  CPACK_DMG_DS_STORE_SETUP_SCRIPT is executed or CPACK_DMG_DS_STORE is\n\n#  installed.  By default no background image is set.\n\n#\n\n# .. variable:: CPACK_DMG_DISABLE_APPLICATIONS_SYMLINK\n\n#\n\n#  Default behaviour is to include a symlink to ``/Applications`` in the DMG.\n\n#  Set this option to ``ON`` to avoid adding the symlink.\n\n#\n\n# .. variable:: CPACK_DMG_SLA_DIR\n\n#\n\n#   Directory where license and menu files for different languages are stored.\n\n#   Setting this causes CPack to look for a ``<language>.menu.txt`` and\n\n#   ``<language>.license.txt`` file for every language defined in\n\n#   ``CPACK_DMG_SLA_LANGUAGES``. If both this variable and\n\n#   ``CPACK_RESOURCE_FILE_LICENSE`` are set, CPack will only look for the menu\n\n#   files and use the same license file for all languages.\n\n#\n\n# .. variable:: CPACK_DMG_SLA_LANGUAGES\n\n#\n\n#   Languages for which a license agreement is provided when mounting the\n\n#   generated DMG. A menu file consists of 9 lines of text. The first line is\n\n#   is the name of the language itself, uppercase, in English (e.g. German).\n\n#   The other lines are translations of the following strings:\n\n#\n\n#   - Agree\n\n#   - Disagree\n\n#   - Print\n\n#   - Save...\n\n#   - You agree to the terms of the License Agreement when you click the\n\n#     \"Agree\" button.\n\n#   - Software License Agreement\n\n#   - This text cannot be saved. The disk may be full or locked, or the file\n\n#     may be locked.\n\n#   - Unable to print. Make sure you have selected a printer.\n\n#\n\n#   For every language in this list, CPack will try to find files\n\n#   ``<language>.menu.txt`` and ``<language>.license.txt`` in the directory\n\n#   specified by the :variable:`CPACK_DMG_SLA_DIR` variable.\n\n#\n\n# .. variable:: CPACK_COMMAND_HDIUTIL\n\n#\n\n#  Path to the hdiutil(1) command used to operate on disk image files on Mac\n\n#  OS X. This variable can be used to override the automatically detected\n\n#  command (or specify its location if the auto-detection fails to find it.)\n\n#\n\n# .. variable:: CPACK_COMMAND_SETFILE\n\n#\n\n#  Path to the SetFile(1) command used to set extended attributes on files and\n\n#  directories on Mac OS X. This variable can be used to override the\n\n#  automatically detected command (or specify its location if the\n\n#  auto-detection fails to find it.)\n\n#\n\n# .. variable:: CPACK_COMMAND_REZ\n\n#\n\n#  Path to the Rez(1) command used to compile resources on Mac OS X. This\n\n#  variable can be used to override the automatically detected command (or\n\n#  specify its location if the auto-detection fails to find it.)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CPackDeb.cmake" : {
      "ObjectId" : "ddf8b23eed0f886705c96601ca553df4c99841d1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CPackDeb\n\n# --------\n\n#\n\n# The built in (binary) CPack Deb generator (Unix only)\n\n#\n\n# Variables specific to CPack Debian (DEB) generator\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# CPackDeb may be used to create Deb package using :module:`CPack`.\n\n# CPackDeb is a :module:`CPack` generator thus it uses the ``CPACK_XXX``\n\n# variables used by :module:`CPack`.\n\n#\n\n# CPackDeb generator should work on any Linux host but it will produce\n\n# better deb package when Debian specific tools ``dpkg-xxx`` are usable on\n\n# the build system.\n\n#\n\n# CPackDeb has specific features which are controlled by the specifics\n\n# :code:`CPACK_DEBIAN_XXX` variables.\n\n#\n\n# :code:`CPACK_DEBIAN_<COMPONENT>_XXXX` variables may be used in order to have\n\n# **component** specific values.  Note however that ``<COMPONENT>`` refers to\n\n# the **grouping name** written in upper case. It may be either a component name\n\n# or a component GROUP name.\n\n#\n\n# Here are some CPackDeb wiki resources that are here for historic reasons and\n\n# are no longer maintained but may still prove useful:\n\n#\n\n#  - https://cmake.org/Wiki/CMake:CPackConfiguration\n\n#  - https://cmake.org/Wiki/CMake:CPackPackageGenerators#DEB_.28UNIX_only.29\n\n#\n\n# List of CPackDEB specific variables:\n\n#\n\n# .. variable:: CPACK_DEB_COMPONENT_INSTALL\n\n#\n\n#  Enable component packaging for CPackDEB\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : OFF\n\n#\n\n#  If enabled (ON) multiple packages are generated. By default a single package\n\n#  containing files of all components is generated.\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_NAME\n\n#               CPACK_DEBIAN_<COMPONENT>_PACKAGE_NAME\n\n#\n\n#  Set Package control field (variable is automatically transformed to lower\n\n#  case).\n\n#\n\n#  * Mandatory : YES\n\n#  * Default   :\n\n#\n\n#    - :variable:`CPACK_PACKAGE_NAME` for non-component based\n\n#      installations\n\n#    - :variable:`CPACK_DEBIAN_PACKAGE_NAME` suffixed with -<COMPONENT>\n\n#      for component-based installations.\n\n#\n\n#  See https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Source\n\n#\n\n# .. variable:: CPACK_DEBIAN_FILE_NAME\n\n#               CPACK_DEBIAN_<COMPONENT>_FILE_NAME\n\n#\n\n#  Package file name.\n\n#\n\n#  * Mandatory : YES\n\n#  * Default   : ``<CPACK_PACKAGE_FILE_NAME>[-<component>].deb``\n\n#\n\n#  This may be set to ``DEB-DEFAULT`` to allow CPackDeb to generate package file\n\n#  name by itself in deb format::\n\n#\n\n#    <PackageName>_<VersionNumber>-<DebianRevisionNumber>_<DebianArchitecture>.deb\n\n#\n\n#  Alternatively provided package file name must end with ``.deb`` suffix.\n\n#\n\n#  .. note::\n\n#\n\n#    Preferred setting of this variable is ``DEB-DEFAULT`` but for backward\n\n#    compatibility with CPackDeb in CMake prior to version 3.6 this feature\n\n#    is disabled by default.\n\n#\n\n#  .. note::\n\n#\n\n#    By using non default filenames duplicate names may occur. Duplicate files\n\n#    get overwritten and it is up to the packager to set the variables in a\n\n#    manner that will prevent such errors.\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_VERSION\n\n#\n\n#  The Debian package version\n\n#\n\n#  * Mandatory : YES\n\n#  * Default   : :variable:`CPACK_PACKAGE_VERSION`\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_RELEASE\n\n#\n\n#  The Debian package release - Debian revision number.\n\n#\n\n#  * Mandatory : YES\n\n#  * Default   : 1\n\n#\n\n#  This is the numbering of the DEB package itself, i.e. the version of the\n\n#  packaging and not the version of the content (see\n\n#  :variable:`CPACK_DEBIAN_PACKAGE_VERSION`). One may change the default value\n\n#  if the previous packaging was buggy and/or you want to put here a fancy Linux\n\n#  distro specific numbering.\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_ARCHITECTURE\n\n#               CPACK_DEBIAN_<COMPONENT>_PACKAGE_ARCHITECTURE\n\n#\n\n#  The Debian package architecture\n\n#\n\n#  * Mandatory : YES\n\n#  * Default   : Output of :code:`dpkg --print-architecture` (or :code:`i386`\n\n#    if :code:`dpkg` is not found)\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_DEPENDS\n\n#               CPACK_DEBIAN_<COMPONENT>_PACKAGE_DEPENDS\n\n#\n\n#  Sets the Debian dependencies of this package.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   :\n\n#\n\n#    - An empty string for non-component based installations\n\n#    - :variable:`CPACK_DEBIAN_PACKAGE_DEPENDS` for component-based\n\n#      installations.\n\n#\n\n#  .. note::\n\n#\n\n#    If :variable:`CPACK_DEBIAN_PACKAGE_SHLIBDEPS` or\n\n#    more specifically :variable:`CPACK_DEBIAN_<COMPONENT>_PACKAGE_SHLIBDEPS`\n\n#    is set for this component, the discovered dependencies will be appended\n\n#    to :variable:`CPACK_DEBIAN_<COMPONENT>_PACKAGE_DEPENDS` instead of\n\n#    :variable:`CPACK_DEBIAN_PACKAGE_DEPENDS`. If\n\n#    :variable:`CPACK_DEBIAN_<COMPONENT>_PACKAGE_DEPENDS` is an empty string,\n\n#    only the automatically discovered dependencies will be set for this\n\n#    component.\n\n#\n\n#  Example::\n\n#\n\n#    set(CPACK_DEBIAN_PACKAGE_DEPENDS \"libc6 (>= 2.3.1-6), libc6 (< 2.4)\")\n\n#\n\n# .. variable:: CPACK_DEBIAN_ENABLE_COMPONENT_DEPENDS\n\n#\n\n#  Sets inter component dependencies if listed with\n\n#  :variable:`CPACK_COMPONENT_<compName>_DEPENDS` variables.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_MAINTAINER\n\n#\n\n#  The Debian package maintainer\n\n#\n\n#  * Mandatory : YES\n\n#  * Default   : :code:`CPACK_PACKAGE_CONTACT`\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_DESCRIPTION\n\n#               CPACK_COMPONENT_<COMPONENT>_DESCRIPTION\n\n#\n\n#  The Debian package description\n\n#\n\n#  * Mandatory : YES\n\n#  * Default   :\n\n#\n\n#    - :variable:`CPACK_DEBIAN_PACKAGE_DESCRIPTION` if set or\n\n#    - :variable:`CPACK_PACKAGE_DESCRIPTION_SUMMARY`\n\n#\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_SECTION\n\n#               CPACK_DEBIAN_<COMPONENT>_PACKAGE_SECTION\n\n#\n\n#  Set Section control field e.g. admin, devel, doc, ...\n\n#\n\n#  * Mandatory : YES\n\n#  * Default   : \"devel\"\n\n#\n\n#  See https://www.debian.org/doc/debian-policy/ch-archive.html#s-subsections\n\n#\n\n# .. variable:: CPACK_DEBIAN_ARCHIVE_TYPE\n\n#\n\n#  The archive format used for creating the Debian package.\n\n#\n\n#  * Mandatory : YES\n\n#  * Default   : \"paxr\"\n\n#\n\n#  Possible values are:\n\n#\n\n#  - paxr\n\n#  - gnutar\n\n#\n\n#  .. note::\n\n#\n\n#    Default pax archive format is the most portable format and generates\n\n#    packages that do not treat sparse files specially.\n\n#    GNU tar format on the other hand supports longer filenames.\n\n#\n\n# .. variable:: CPACK_DEBIAN_COMPRESSION_TYPE\n\n#\n\n#  The compression used for creating the Debian package.\n\n#\n\n#  * Mandatory : YES\n\n#  * Default   : \"gzip\"\n\n#\n\n#  Possible values are:\n\n#\n\n#  - lzma\n\n#  - xz\n\n#  - bzip2\n\n#  - gzip\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_PRIORITY\n\n#               CPACK_DEBIAN_<COMPONENT>_PACKAGE_PRIORITY\n\n#\n\n#  Set Priority control field e.g. required, important, standard, optional,\n\n#  extra\n\n#\n\n#  * Mandatory : YES\n\n#  * Default   : \"optional\"\n\n#\n\n#  See https://www.debian.org/doc/debian-policy/ch-archive.html#s-priorities\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_HOMEPAGE\n\n#\n\n#  The URL of the web site for this package, preferably (when applicable) the\n\n#  site from which the original source can be obtained and any additional\n\n#  upstream documentation or information may be found.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  .. note::\n\n#\n\n#    The content of this field is a simple URL without any surrounding\n\n#    characters such as <>.\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_SHLIBDEPS\n\n#               CPACK_DEBIAN_<COMPONENT>_PACKAGE_SHLIBDEPS\n\n#\n\n#  May be set to ON in order to use :code:`dpkg-shlibdeps` to generate\n\n#  better package dependency list.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   :\n\n#\n\n#    - :variable:`CPACK_DEBIAN_PACKAGE_SHLIBDEPS` if set or\n\n#    - OFF\n\n#\n\n#  .. note::\n\n#\n\n#    You may need set :variable:`CMAKE_INSTALL_RPATH` to an appropriate value\n\n#    if you use this feature, because if you don't :code:`dpkg-shlibdeps`\n\n#    may fail to find your own shared libs.\n\n#    See https://cmake.org/Wiki/CMake_RPATH_handling.\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_DEBUG\n\n#\n\n#  May be set when invoking cpack in order to trace debug information\n\n#  during CPackDeb run.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_PREDEPENDS\n\n#               CPACK_DEBIAN_<COMPONENT>_PACKAGE_PREDEPENDS\n\n#\n\n#  Sets the `Pre-Depends` field of the Debian package.\n\n#  Like :variable:`Depends <CPACK_DEBIAN_PACKAGE_DEPENDS>`, except that it\n\n#  also forces :code:`dpkg` to complete installation of the packages named\n\n#  before even starting the installation of the package which declares the\n\n#  pre-dependency.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   :\n\n#\n\n#    - An empty string for non-component based installations\n\n#    - :variable:`CPACK_DEBIAN_PACKAGE_PREDEPENDS` for component-based\n\n#      installations.\n\n#\n\n#  See http://www.debian.org/doc/debian-policy/ch-relationships.html#s-binarydeps\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_ENHANCES\n\n#               CPACK_DEBIAN_<COMPONENT>_PACKAGE_ENHANCES\n\n#\n\n#  Sets the `Enhances` field of the Debian package.\n\n#  Similar to :variable:`Suggests <CPACK_DEBIAN_PACKAGE_SUGGESTS>` but works\n\n#  in the opposite direction: declares that a package can enhance the\n\n#  functionality of another package.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   :\n\n#\n\n#    - An empty string for non-component based installations\n\n#    - :variable:`CPACK_DEBIAN_PACKAGE_ENHANCES` for component-based\n\n#      installations.\n\n#\n\n#  See http://www.debian.org/doc/debian-policy/ch-relationships.html#s-binarydeps\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_BREAKS\n\n#               CPACK_DEBIAN_<COMPONENT>_PACKAGE_BREAKS\n\n#\n\n#  Sets the `Breaks` field of the Debian package.\n\n#  When a binary package (P) declares that it breaks other packages (B),\n\n#  :code:`dpkg` will not allow the package (P) which declares `Breaks` be\n\n#  **unpacked** unless the packages that will be broken (B) are deconfigured\n\n#  first.\n\n#  As long as the package (P) is configured, the previously deconfigured\n\n#  packages (B) cannot be reconfigured again.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   :\n\n#\n\n#    - An empty string for non-component based installations\n\n#    - :variable:`CPACK_DEBIAN_PACKAGE_BREAKS` for component-based\n\n#      installations.\n\n#\n\n#  See https://www.debian.org/doc/debian-policy/ch-relationships.html#s-breaks\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_CONFLICTS\n\n#               CPACK_DEBIAN_<COMPONENT>_PACKAGE_CONFLICTS\n\n#\n\n#  Sets the `Conflicts` field of the Debian package.\n\n#  When one binary package declares a conflict with another using a `Conflicts`\n\n#  field, :code:`dpkg` will not allow them to be unpacked on the system at\n\n#  the same time.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   :\n\n#\n\n#    - An empty string for non-component based installations\n\n#    - :variable:`CPACK_DEBIAN_PACKAGE_CONFLICTS` for component-based\n\n#      installations.\n\n#\n\n#  See https://www.debian.org/doc/debian-policy/ch-relationships.html#s-conflicts\n\n#\n\n#  .. note::\n\n#\n\n#    This is a stronger restriction than\n\n#    :variable:`Breaks <CPACK_DEBIAN_PACKAGE_BREAKS>`, which prevents the\n\n#    broken package from being configured while the breaking package is in\n\n#    the \"Unpacked\" state but allows both packages to be unpacked at the same\n\n#    time.\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_PROVIDES\n\n#               CPACK_DEBIAN_<COMPONENT>_PACKAGE_PROVIDES\n\n#\n\n#  Sets the `Provides` field of the Debian package.\n\n#  A virtual package is one which appears in the `Provides` control field of\n\n#  another package.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   :\n\n#\n\n#    - An empty string for non-component based installations\n\n#    - :variable:`CPACK_DEBIAN_PACKAGE_PROVIDES` for component-based\n\n#      installations.\n\n#\n\n#  See https://www.debian.org/doc/debian-policy/ch-relationships.html#s-virtual\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_REPLACES\n\n#               CPACK_DEBIAN_<COMPONENT>_PACKAGE_REPLACES\n\n#\n\n#  Sets the `Replaces` field of the Debian package.\n\n#  Packages can declare in their control file that they should overwrite\n\n#  files in certain other packages, or completely replace other packages.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   :\n\n#\n\n#    - An empty string for non-component based installations\n\n#    - :variable:`CPACK_DEBIAN_PACKAGE_REPLACES` for component-based\n\n#      installations.\n\n#\n\n#  See http://www.debian.org/doc/debian-policy/ch-relationships.html#s-binarydeps\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_RECOMMENDS\n\n#               CPACK_DEBIAN_<COMPONENT>_PACKAGE_RECOMMENDS\n\n#\n\n#  Sets the `Recommends` field of the Debian package.\n\n#  Allows packages to declare a strong, but not absolute, dependency on other\n\n#  packages.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   :\n\n#\n\n#    - An empty string for non-component based installations\n\n#    - :variable:`CPACK_DEBIAN_PACKAGE_RECOMMENDS` for component-based\n\n#      installations.\n\n#\n\n#  See http://www.debian.org/doc/debian-policy/ch-relationships.html#s-binarydeps\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_SUGGESTS\n\n#               CPACK_DEBIAN_<COMPONENT>_PACKAGE_SUGGESTS\n\n#\n\n#  Sets the `Suggests` field of the Debian package.\n\n#  Allows packages to declare a suggested package install grouping.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   :\n\n#\n\n#    - An empty string for non-component based installations\n\n#    - :variable:`CPACK_DEBIAN_PACKAGE_SUGGESTS` for component-based\n\n#      installations.\n\n#\n\n#  See http://www.debian.org/doc/debian-policy/ch-relationships.html#s-binarydeps\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_GENERATE_SHLIBS\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : OFF\n\n#\n\n#  Allows to generate shlibs control file automatically. Compatibility is defined by\n\n#  :variable:`CPACK_DEBIAN_PACKAGE_GENERATE_SHLIBS_POLICY` variable value.\n\n#\n\n#  .. note::\n\n#\n\n#    Libraries are only considered if they have both library name and version\n\n#    set. This can be done by setting SOVERSION property with\n\n#    :command:`set_target_properties` command.\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_GENERATE_SHLIBS_POLICY\n\n#\n\n#  Compatibility policy for auto-generated shlibs control file.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : \"=\"\n\n#\n\n#  Defines compatibility policy for auto-generated shlibs control file.\n\n#  Possible values: \"=\", \">=\"\n\n#\n\n#  See https://www.debian.org/doc/debian-policy/ch-sharedlibs.html#s-sharedlibs-shlibdeps\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA\n\n#               CPACK_DEBIAN_<COMPONENT>_PACKAGE_CONTROL_EXTRA\n\n#\n\n#  This variable allow advanced user to add custom script to the\n\n#  control.tar.gz.\n\n#  Typical usage is for conffiles, postinst, postrm, prerm.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  Usage::\n\n#\n\n#   set(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA\n\n#       \"${CMAKE_CURRENT_SOURCE_DIR/prerm;${CMAKE_CURRENT_SOURCE_DIR}/postrm\")\n\n#\n\n#  .. note::\n\n#\n\n#    The original permissions of the files will be used in the final\n\n#    package unless the variable\n\n#    :variable:`CPACK_DEBIAN_PACKAGE_CONTROL_STRICT_PERMISSION` is set.\n\n#    In particular, the scripts should have the proper executable\n\n#    flag prior to the generation of the package.\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_CONTROL_STRICT_PERMISSION\n\n#               CPACK_DEBIAN_<COMPONENT>_PACKAGE_CONTROL_STRICT_PERMISSION\n\n#\n\n#  This variable indicates if the Debian policy on control files should be\n\n#  strictly followed.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : FALSE\n\n#\n\n#  Usage::\n\n#\n\n#   set(CPACK_DEBIAN_PACKAGE_CONTROL_STRICT_PERMISSION TRUE)\n\n#\n\n#  .. note::\n\n#\n\n#    This overrides the permissions on the original files, following the rules\n\n#    set by Debian policy\n\n#    https://www.debian.org/doc/debian-policy/ch-files.html#s-permissions-owners\n\n#\n\n# .. variable:: CPACK_DEBIAN_PACKAGE_SOURCE\n\n#               CPACK_DEBIAN_<COMPONENT>_PACKAGE_SOURCE\n\n#\n\n#  Sets the ``Source`` field of the binary Debian package.\n\n#  When the binary package name is not the same as the source package name\n\n#  (in particular when several components/binaries are generated from one\n\n#  source) the source from which the binary has been generated should be\n\n#  indicated with the field ``Source``.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   :\n\n#\n\n#    - An empty string for non-component based installations\n\n#    - :variable:`CPACK_DEBIAN_PACKAGE_SOURCE` for component-based\n\n#      installations.\n\n#\n\n#  See https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Source\n\n#\n\n#  .. note::\n\n#\n\n#    This value is not interpreted. It is possible to pass an optional\n\n#    revision number of the referenced source package as well.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CPack script for creating Debian package\n\n# Author: Mathieu Malaterre\n\n#\n\n# http://wiki.debian.org/HowToPackageForDebian\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#extract library name and version for given shared object\n",
        "Line" : 536,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CPACK_DEBIAN_PACKAGE_SHLIBDEPS\n\n# If specify OFF, only user depends are used\n",
        "Line" : 558,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# per component automatic discover: some of the component might not have\n\n# binaries.\n",
        "Line" : 566,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# if set, overrides the global configuration\n",
        "Line" : 572,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Generating binary list - Get type of all install files\n",
        "Line" : 582,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Tell file(GLOB_RECURSE) not to follow directory symlinks\n\n# even if the project does not set this policy to NEW.\n",
        "Line" : 584,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# get file info so that we can determine if file is executable or not\n",
        "Line" : 595,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Only dynamically linked ELF files are included\n\n# Extract only file name infront of \":\"\n",
        "Line" : 608,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# dpkg-shlibdeps is a Debian utility for generating dependency list\n",
        "Line" : 624,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Check version of the dpkg-shlibdeps tool using CPackDEB method\n",
        "Line" : 628,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Create blank control file for running dpkg-shlibdeps\n\n# There might be some other way to invoke dpkg-shlibdeps without creating this file\n\n# but standard debian package should not have anything that can collide with this file or directory\n",
        "Line" : 647,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Create a DEBIAN directory so that dpkg-shlibdeps can find the package dir when resolving $ORIGIN.\n",
        "Line" : 653,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Add --ignore-missing-info if the tool supports it\n",
        "Line" : 656,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Execute dpkg-shlibdeps\n\n# --ignore-missing-info : allow dpkg-shlibdeps to run even if some libs do not belong to a package\n\n# -O : print to STDOUT\n",
        "Line" : 665,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# dpkg-shlibdeps will throw some warnings if some input files are not binary\n",
        "Line" : 675,
        "CharPositionInLine" : 10
      },
      "18" : {
        "Text" : "#Get rid of prefix generated by dpkg-shlibdeps\n",
        "Line" : 686,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Remove blank control file\n\n# Might not be safe if package actual contain file or directory named debian\n",
        "Line" : 693,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# remove temporary directory that was created only for dpkg-shlibdeps execution\n",
        "Line" : 697,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Let's define the control file found in debian package:\n",
        "Line" : 714,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Binary package:\n\n# http://www.debian.org/doc/debian-policy/ch-controlfields.html#s-binarycontrolfiles\n",
        "Line" : 716,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# DEBIAN/control\n\n# debian policy enforce lower case for package name\n\n# Package: (mandatory)\n",
        "Line" : 719,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Version: (mandatory)\n",
        "Line" : 726,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Architecture: (mandatory)\n",
        "Line" : 734,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# There is no such thing as i686 architecture on debian, you should use i386 instead\n\n# $ dpkg --print-architecture\n",
        "Line" : 738,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Source: (optional)\n\n# in case several packages are constructed from a unique source\n\n# (multipackaging), the source may be indicated as well.\n\n# The source might contain a version if the generated package\n\n# version is different from the source version\n",
        "Line" : 751,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# have a look at get_property(result GLOBAL PROPERTY ENABLED_FEATURES),\n\n# this returns the successful find_package() calls, maybe this can help\n\n# Depends:\n\n# You should set: DEBIAN_PACKAGE_DEPENDS\n\n# TODO: automate 'objdump -p | grep NEEDED'\n",
        "Line" : 760,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# if per-component variable, overrides the global CPACK_DEBIAN_PACKAGE_${variable_type_}\n\n# automatic dependency discovery will be performed afterwards.\n",
        "Line" : 766,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# if set, overrides the global variable\n",
        "Line" : 772,
        "CharPositionInLine" : 6
      },
      "31" : {
        "Text" : "# at this point, the CPACK_DEBIAN_PACKAGE_DEPENDS is properly set\n\n# to the minimal dependency of the package\n\n# Append automatically discovered dependencies .\n",
        "Line" : 802,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Maintainer: (mandatory)\n",
        "Line" : 817,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Description: (mandatory)\n",
        "Line" : 825,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# component description overrides package description\n",
        "Line" : 836,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Section: (recommended)\n",
        "Line" : 847,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Priority: (recommended)\n",
        "Line" : 852,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Compression: (recommended)\n",
        "Line" : 870,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Recommends:\n\n# You should set: CPACK_DEBIAN_PACKAGE_RECOMMENDS\n",
        "Line" : 875,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Suggests:\n\n# You should set: CPACK_DEBIAN_PACKAGE_SUGGESTS\n",
        "Line" : 878,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA\n\n# This variable allow advanced user to add custom script to the control.tar.gz (inside the .deb archive)\n\n# Typical examples are:\n\n# - conffiles\n\n# - postinst\n\n# - postrm\n\n# - prerm\n\n# Usage:\n\n# set(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA\n\n#    \"${CMAKE_CURRENT_SOURCE_DIR/prerm;${CMAKE_CURRENT_SOURCE_DIR}/postrm\")\n",
        "Line" : 881,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Are we packaging components ?\n",
        "Line" : 892,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# override values with per component version if set\n",
        "Line" : 894,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# add ldconfig call in default postrm and postint\n",
        "Line" : 930,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# all files in CPACK_DEB_SHARED_OBJECT_FILES have dot at the beginning\n",
        "Line" : 934,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# Patch package file name to be in corrent debian format:\n\n# <foo>_<VersionNumber>-<DebianRevisionNumber>_<DebianArchitecture>.deb\n",
        "Line" : 967,
        "CharPositionInLine" : 6
      },
      "46" : {
        "Text" : "# else() back compatibility - don't change the name\n",
        "Line" : 986,
        "CharPositionInLine" : 10
      },
      "47" : {
        "Text" : "# Print out some debug information if we were asked for that\n",
        "Line" : 988,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# For debian source packages:\n\n# debian/control\n\n# http://www.debian.org/doc/debian-policy/ch-controlfields.html#s-sourcecontrolfiles\n",
        "Line" : 1002,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# .dsc\n\n# http://www.debian.org/doc/debian-policy/ch-controlfields.html#s-debiansourcecontrolfiles\n",
        "Line" : 1006,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# Builds-Depends:\n\n#if(NOT CPACK_DEBIAN_PACKAGE_BUILDS_DEPENDS)\n\n#  set(CPACK_DEBIAN_PACKAGE_BUILDS_DEPENDS\n\n#    \"debhelper (>> 5.0.0), libncurses5-dev, tcl8.4\"\n\n#  )\n\n#endif()\n",
        "Line" : 1009,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# move variables to parent scope so that they may be used to create debian package\n",
        "Line" : 1016,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 52
    },
    "deps/src/cmake-3.13.4/Modules/CPackIFW.cmake" : {
      "ObjectId" : "141e842549a9b306677f5f212c2221afb8a3b8d1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nCPackIFW\n--------\n\nThe documentation for the CPack IFW generator has moved here: :cpack_gen:`CPack IFW Generator`\n\n.. _QtIFW: http://doc.qt.io/qtinstallerframework/index.html\n\nThis module looks for the location of the command line utilities supplied\nwith the Qt Installer Framework (QtIFW_).\n\nThe module also defines several commands to control the behavior of the\nCPack ``IFW`` generator.\n\nCommands\n^^^^^^^^\n\nThe module defines the following commands:\n\n.. command:: cpack_ifw_configure_component\n\n  Sets the arguments specific to the CPack IFW generator.\n\n  ::\n\n    cpack_ifw_configure_component(<compname> [COMMON] [ESSENTIAL] [VIRTUAL]\n                        [FORCED_INSTALLATION] [REQUIRES_ADMIN_RIGHTS]\n                        [NAME <name>]\n                        [DISPLAY_NAME <display_name>] # Note: Internationalization supported\n                        [DESCRIPTION <description>] # Note: Internationalization supported\n                        [UPDATE_TEXT <update_text>]\n                        [VERSION <version>]\n                        [RELEASE_DATE <release_date>]\n                        [SCRIPT <script>]\n                        [PRIORITY|SORTING_PRIORITY <sorting_priority>] # Note: PRIORITY is deprecated\n                        [DEPENDS|DEPENDENCIES <com_id> ...]\n                        [AUTO_DEPEND_ON <comp_id> ...]\n                        [LICENSES <display_name> <file_path> ...]\n                        [DEFAULT <value>]\n                        [USER_INTERFACES <file_path> <file_path> ...]\n                        [TRANSLATIONS <file_path> <file_path> ...]\n                        [REPLACES <comp_id> ...]\n                        [CHECKABLE <value>])\n\n  This command should be called after :command:`cpack_add_component` command.\n\n  ``COMMON``\n    if set, then the component will be packaged and installed as part\n    of a group to which it belongs.\n\n  ``ESSENTIAL``\n    if set, then the package manager stays disabled until that\n    component is updated.\n\n  ``VIRTUAL``\n    if set, then the component will be hidden from the installer.\n    It is a equivalent of the ``HIDDEN`` option from the\n    :command:`cpack_add_component` command.\n\n  ``FORCED_INSTALLATION``\n    if set, then the component must always be installed.\n    It is a equivalent of the ``REQUARED`` option from the\n    :command:`cpack_add_component` command.\n\n  ``REQUIRES_ADMIN_RIGHTS``\n    set it if the component needs to be installed with elevated permissions.\n\n  ``NAME``\n    is used to create domain-like identification for this component.\n    By default used origin component name.\n\n  ``DISPLAY_NAME``\n    set to rewrite original name configured by\n    :command:`cpack_add_component` command.\n\n  ``DESCRIPTION``\n    set to rewrite original description configured by\n    :command:`cpack_add_component` command.\n\n  ``UPDATE_TEXT``\n    will be added to the component description if this is an update to\n    the component.\n\n  ``VERSION``\n    is version of component.\n    By default used :variable:`CPACK_PACKAGE_VERSION`.\n\n  ``RELEASE_DATE``\n    keep empty to auto generate.\n\n  ``SCRIPT``\n    is a relative or absolute path to operations script\n    for this component.\n\n  ``PRIORITY`` | ``SORTING_PRIORITY``\n    is priority of the component in the tree.\n    The ``PRIORITY`` option is deprecated and will be removed in a future\n    version of CMake. Please use ``SORTING_PRIORITY`` option instead.\n\n  ``DEPENDS`` | ``DEPENDENCIES``\n    list of dependency component or component group identifiers in\n    QtIFW_ style.\n\n  ``AUTO_DEPEND_ON``\n    list of identifiers of component or component group in QtIFW_ style\n    that this component has an automatic dependency on.\n\n  ``LICENSES``\n    pair of <display_name> and <file_path> of license text for this\n    component. You can specify more then one license.\n\n  ``DEFAULT``\n    Possible values are: TRUE, FALSE, and SCRIPT.\n    Set to FALSE to disable the component in the installer or to SCRIPT\n    to resolved during runtime (don't forget add the file of the script\n    as a value of the ``SCRIPT`` option).\n\n  ``USER_INTERFACES``\n    is a list of <file_path> ('.ui' files) representing pages to load.\n\n  ``TRANSLATIONS``\n    is a list of <file_path> ('.qm' files) representing translations to load.\n\n  ``REPLACES``\n    list of identifiers of component or component group to replace.\n\n  ``CHECKABLE``\n    Possible values are: TRUE, FALSE.\n    Set to FALSE if you want to hide the checkbox for an item.\n    This is useful when only a few subcomponents should be selected\n    instead of all.\n\n\n.. command:: cpack_ifw_configure_component_group\n\n  Sets the arguments specific to the CPack IFW generator.\n\n  ::\n\n    cpack_ifw_configure_component_group(<groupname> [VIRTUAL]\n                        [FORCED_INSTALLATION] [REQUIRES_ADMIN_RIGHTS]\n                        [NAME <name>]\n                        [DISPLAY_NAME <display_name>] # Note: Internationalization supported\n                        [DESCRIPTION <description>] # Note: Internationalization supported\n                        [UPDATE_TEXT <update_text>]\n                        [VERSION <version>]\n                        [RELEASE_DATE <release_date>]\n                        [SCRIPT <script>]\n                        [PRIORITY|SORTING_PRIORITY <sorting_priority>] # Note: PRIORITY is deprecated\n                        [DEPENDS|DEPENDENCIES <com_id> ...]\n                        [AUTO_DEPEND_ON <comp_id> ...]\n                        [LICENSES <display_name> <file_path> ...]\n                        [DEFAULT <value>]\n                        [USER_INTERFACES <file_path> <file_path> ...]\n                        [TRANSLATIONS <file_path> <file_path> ...]\n                        [REPLACES <comp_id> ...]\n                        [CHECKABLE <value>])\n\n  This command should be called after :command:`cpack_add_component_group`\n  command.\n\n  ``VIRTUAL``\n    if set, then the group will be hidden from the installer.\n    Note that setting this on a root component does not work.\n\n  ``FORCED_INSTALLATION``\n    if set, then the group must always be installed.\n\n  ``REQUIRES_ADMIN_RIGHTS``\n    set it if the component group needs to be installed with elevated\n    permissions.\n\n  ``NAME``\n    is used to create domain-like identification for this component group.\n    By default used origin component group name.\n\n  ``DISPLAY_NAME``\n    set to rewrite original name configured by\n    :command:`cpack_add_component_group` command.\n\n  ``DESCRIPTION``\n    set to rewrite original description configured by\n    :command:`cpack_add_component_group` command.\n\n  ``UPDATE_TEXT``\n    will be added to the component group description if this is an update to\n    the component group.\n\n  ``VERSION``\n    is version of component group.\n    By default used :variable:`CPACK_PACKAGE_VERSION`.\n\n  ``RELEASE_DATE``\n    keep empty to auto generate.\n\n  ``SCRIPT``\n    is a relative or absolute path to operations script\n    for this component group.\n\n  ``PRIORITY`` | ``SORTING_PRIORITY``\n    is priority of the component group in the tree.\n    The ``PRIORITY`` option is deprecated and will be removed in a future\n    version of CMake. Please use ``SORTING_PRIORITY`` option instead.\n\n  ``DEPENDS`` | ``DEPENDENCIES``\n    list of dependency component or component group identifiers in\n    QtIFW_ style.\n\n  ``AUTO_DEPEND_ON``\n    list of identifiers of component or component group in QtIFW_ style\n    that this component group has an automatic dependency on.\n\n  ``LICENSES``\n    pair of <display_name> and <file_path> of license text for this\n    component group. You can specify more then one license.\n\n  ``DEFAULT``\n    Possible values are: TRUE, FALSE, and SCRIPT.\n    Set to TRUE to preselect the group in the installer\n    (this takes effect only on groups that have no visible child components)\n    or to SCRIPT to resolved during runtime (don't forget add the file of\n    the script as a value of the ``SCRIPT`` option).\n\n  ``USER_INTERFACES``\n    is a list of <file_path> ('.ui' files) representing pages to load.\n\n  ``TRANSLATIONS``\n    is a list of <file_path> ('.qm' files) representing translations to load.\n\n  ``REPLACES``\n    list of identifiers of component or component group to replace.\n\n  ``CHECKABLE``\n    Possible values are: TRUE, FALSE.\n    Set to FALSE if you want to hide the checkbox for an item.\n    This is useful when only a few subcomponents should be selected\n    instead of all.\n\n\n.. command:: cpack_ifw_add_repository\n\n  Add QtIFW_ specific remote repository to binary installer.\n\n  ::\n\n    cpack_ifw_add_repository(<reponame> [DISABLED]\n                        URL <url>\n                        [USERNAME <username>]\n                        [PASSWORD <password>]\n                        [DISPLAY_NAME <display_name>])\n\n  This command will also add the <reponame> repository\n  to a variable :variable:`CPACK_IFW_REPOSITORIES_ALL`.\n\n  ``DISABLED``\n    if set, then the repository will be disabled by default.\n\n  ``URL``\n    is points to a list of available components.\n\n  ``USERNAME``\n    is used as user on a protected repository.\n\n  ``PASSWORD``\n    is password to use on a protected repository.\n\n  ``DISPLAY_NAME``\n    is string to display instead of the URL.\n\n\n.. command:: cpack_ifw_update_repository\n\n  Update QtIFW_ specific repository from remote repository.\n\n  ::\n\n    cpack_ifw_update_repository(<reponame>\n                        [[ADD|REMOVE] URL <url>]|\n                         [REPLACE OLD_URL <old_url> NEW_URL <new_url>]]\n                        [USERNAME <username>]\n                        [PASSWORD <password>]\n                        [DISPLAY_NAME <display_name>])\n\n  This command will also add the <reponame> repository\n  to a variable :variable:`CPACK_IFW_REPOSITORIES_ALL`.\n\n  ``URL``\n    is points to a list of available components.\n\n  ``OLD_URL``\n    is points to a list that will replaced.\n\n  ``NEW_URL``\n    is points to a list that will replace to.\n\n  ``USERNAME``\n    is used as user on a protected repository.\n\n  ``PASSWORD``\n    is password to use on a protected repository.\n\n  ``DISPLAY_NAME``\n    is string to display instead of the URL.\n\n\n.. command:: cpack_ifw_add_package_resources\n\n  Add additional resources in the installer binary.\n\n  ::\n\n    cpack_ifw_add_package_resources(<file_path> <file_path> ...)\n\n  This command will also add the specified files\n  to a variable :variable:`CPACK_IFW_PACKAGE_RESOURCES`.\n\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO:\n\n# All of the internal implementation CMake modules for other CPack generators\n\n# have been moved into the Internal/CPack directory. This one has not, because\n\n# it contains user-facing macros which would be lost if it were moved. At some\n\n# point, this module should be split into user-facing macros (which would live\n\n# in this module) and internal implementation details (which would live in\n\n# Internal/CPack/CPackIFW.cmake).\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=============================================================================\n\n# Search Qt Installer Framework tools\n\n#=============================================================================\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default path\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# QtSDK\n",
        "Line" : 357,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Second branch\n",
        "Line" : 359,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# First branch\n",
        "Line" : 361,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Look for 'binarycreator'\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Look for 'repogen'\n",
        "Line" : 408,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Look for 'installerbase'\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Look for 'devtool' (appeared in the second branch)\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n## Next code is included only once\n\n#\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#=============================================================================\n\n# Framework version\n\n#=============================================================================\n",
        "Line" : 445,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Invoke version from \"installerbase\" executable\n",
        "Line" : 457,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Finally try to get version from executable path\n",
        "Line" : 480,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#=============================================================================\n\n# Macro definition\n\n#=============================================================================\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Macro definition based on CPackComponent\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Resolve full filename for script file\n",
        "Line" : 513,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Resolve full path to license file\n",
        "Line" : 527,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Resolve full path to a list of provided files\n",
        "Line" : 545,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Macro for configure component\n",
        "Line" : 561,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Macro for configure group\n",
        "Line" : 602,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Macro for adding repository\n",
        "Line" : 636,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Macro for updating repository\n",
        "Line" : 675,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Macro for adding resources\n",
        "Line" : 720,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Resolve package control script\n",
        "Line" : 731,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# NOT CPackIFW_CMake_INCLUDED\n",
        "Line" : 734,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 28
    },
    "deps/src/cmake-3.13.4/Modules/CPackIFWConfigureFile.cmake" : {
      "ObjectId" : "790574a52460db509d04c3d6e16e263d4ed4b12d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CPackIFWConfigureFile\n\n# ---------------------\n\n#\n\n# The module defines :command:`configure_file` similar command to\n\n# configure file templates prepared in QtIFW/SDK/Creator style.\n\n#\n\n#\n\n# Commands\n\n# ^^^^^^^^\n\n#\n\n# The module defines the following commands:\n\n#\n\n# .. command:: cpack_ifw_configure_file\n\n#\n\n#   Copy a file to another location and modify its contents.\n\n#\n\n#   ::\n\n#\n\n#     cpack_ifw_configure_file(<input> <output>)\n\n#\n\n#   Copies an ``<input>`` file to an ``<output>`` file and substitutes variable\n\n#   values referenced as ``%{VAR}`` or ``%VAR%`` in the input file content.\n\n#   Each variable reference will be replaced with the current value of the\n\n#   variable, or the empty string if the variable is not defined.\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOTE: This file used to himself packaging via CPack IFW generator and\n\n# should be compatible with minimal CMake version defined in\n\n# ../CMakeLists.txt file.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# NOT DEFINED CPackIFWConfigureFile_CMake_INCLUDED\n",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/CPackNSIS.cmake" : {
      "ObjectId" : "18d1871571e63b7f4290b0853a57c055ad41e95a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CPackNSIS\n\n# ---------\n\n#\n\n# CPack NSIS generator specific options\n\n#\n\n# Variables specific to CPack NSIS generator\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# The following variables are specific to the graphical installers built\n\n# on Windows using the Nullsoft Installation System.\n\n#\n\n# .. variable:: CPACK_NSIS_INSTALL_ROOT\n\n#\n\n#  The default installation directory presented to the end user by the NSIS\n\n#  installer is under this root dir. The full directory presented to the end\n\n#  user is: ${CPACK_NSIS_INSTALL_ROOT}/${CPACK_PACKAGE_INSTALL_DIRECTORY}\n\n#\n\n# .. variable:: CPACK_NSIS_MUI_ICON\n\n#\n\n#  An icon filename.  The name of a ``*.ico`` file used as the main icon for the\n\n#  generated install program.\n\n#\n\n# .. variable:: CPACK_NSIS_MUI_UNIICON\n\n#\n\n#  An icon filename.  The name of a ``*.ico`` file used as the main icon for the\n\n#  generated uninstall program.\n\n#\n\n# .. variable:: CPACK_NSIS_INSTALLER_MUI_ICON_CODE\n\n#\n\n#  undocumented.\n\n#\n\n# .. variable:: CPACK_NSIS_MUI_WELCOMEFINISHPAGE_BITMAP\n\n#\n\n#  The filename of a bitmap to use as the NSIS MUI_WELCOMEFINISHPAGE_BITMAP.\n\n#\n\n# .. variable:: CPACK_NSIS_MUI_UNWELCOMEFINISHPAGE_BITMAP\n\n#\n\n#  The filename of a bitmap to use as the NSIS MUI_UNWELCOMEFINISHPAGE_BITMAP.\n\n#\n\n# .. variable:: CPACK_NSIS_EXTRA_PREINSTALL_COMMANDS\n\n#\n\n#  Extra NSIS commands that will be added to the beginning of the install\n\n#  Section, before your install tree is available on the target system.\n\n#\n\n# .. variable:: CPACK_NSIS_EXTRA_INSTALL_COMMANDS\n\n#\n\n#  Extra NSIS commands that will be added to the end of the install Section,\n\n#  after your install tree is available on the target system.\n\n#\n\n# .. variable:: CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS\n\n#\n\n#  Extra NSIS commands that will be added to the uninstall Section, before\n\n#  your install tree is removed from the target system.\n\n#\n\n# .. variable:: CPACK_NSIS_COMPRESSOR\n\n#\n\n#  The arguments that will be passed to the NSIS SetCompressor command.\n\n#\n\n# .. variable:: CPACK_NSIS_ENABLE_UNINSTALL_BEFORE_INSTALL\n\n#\n\n#  Ask about uninstalling previous versions first.  If this is set to \"ON\",\n\n#  then an installer will look for previous installed versions and if one is\n\n#  found, ask the user whether to uninstall it before proceeding with the\n\n#  install.\n\n#\n\n# .. variable:: CPACK_NSIS_MODIFY_PATH\n\n#\n\n#  Modify PATH toggle.  If this is set to \"ON\", then an extra page will appear\n\n#  in the installer that will allow the user to choose whether the program\n\n#  directory should be added to the system PATH variable.\n\n#\n\n# .. variable:: CPACK_NSIS_DISPLAY_NAME\n\n#\n\n#  The display name string that appears in the Windows Add/Remove Program\n\n#  control panel\n\n#\n\n# .. variable:: CPACK_NSIS_PACKAGE_NAME\n\n#\n\n#  The title displayed at the top of the installer.\n\n#\n\n# .. variable:: CPACK_NSIS_INSTALLED_ICON_NAME\n\n#\n\n#  A path to the executable that contains the installer icon.\n\n#\n\n# .. variable:: CPACK_NSIS_HELP_LINK\n\n#\n\n#  URL to a web site providing assistance in installing your application.\n\n#\n\n# .. variable:: CPACK_NSIS_URL_INFO_ABOUT\n\n#\n\n#  URL to a web site providing more information about your application.\n\n#\n\n# .. variable:: CPACK_NSIS_CONTACT\n\n#\n\n#  Contact information for questions and comments about the installation\n\n#  process.\n\n#\n\n# .. variable:: CPACK_NSIS_<compName>_INSTALL_DIRECTORY\n\n#\n\n#  Custom install directory for the specified component <compName> instead\n\n#  of $INSTDIR.\n\n#\n\n# .. variable:: CPACK_NSIS_CREATE_ICONS_EXTRA\n\n#\n\n#  Additional NSIS commands for creating start menu shortcuts.\n\n#\n\n# .. variable:: CPACK_NSIS_DELETE_ICONS_EXTRA\n\n#\n\n#  Additional NSIS commands to uninstall start menu shortcuts.\n\n#\n\n# .. variable:: CPACK_NSIS_EXECUTABLES_DIRECTORY\n\n#\n\n#  Creating NSIS start menu links assumes that they are in 'bin' unless this\n\n#  variable is set.  For example, you would set this to 'exec' if your\n\n#  executables are in an exec directory.\n\n#\n\n# .. variable:: CPACK_NSIS_MUI_FINISHPAGE_RUN\n\n#\n\n#  Specify an executable to add an option to run on the finish page of the\n\n#  NSIS installer.\n\n#\n\n# .. variable:: CPACK_NSIS_MENU_LINKS\n\n#\n\n#  Specify links in [application] menu.  This should contain a list of pair\n\n#  \"link\" \"link name\". The link may be an URL or a path relative to\n\n#  installation prefix.  Like::\n\n#\n\n#   set(CPACK_NSIS_MENU_LINKS\n\n#       \"doc/cmake-@CMake_VERSION_MAJOR@.@CMake_VERSION_MINOR@/cmake.html\"\n\n#       \"CMake Help\" \"https://cmake.org\" \"CMake Web Site\")\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#FIXME we should put NSIS specific code here\n\n#FIXME but I'm not doing it because I'm not able to test it...\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/CPackPackageMaker.cmake" : {
      "ObjectId" : "c2ca4c63c6d32a99395143a0ba84f60365f2d3d9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CPackPackageMaker\n\n# -----------------\n\n#\n\n# PackageMaker CPack generator (Mac OS X).\n\n#\n\n# Variables specific to CPack PackageMaker generator\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# The following variable is specific to installers built on Mac\n\n# OS X using PackageMaker:\n\n#\n\n# .. variable:: CPACK_OSX_PACKAGE_VERSION\n\n#\n\n#  The version of Mac OS X that the resulting PackageMaker archive should be\n\n#  compatible with. Different versions of Mac OS X support different\n\n#  features. For example, CPack can only build component-based installers for\n\n#  Mac OS X 10.4 or newer, and can only build installers that download\n\n#  component son-the-fly for Mac OS X 10.5 or newer. If left blank, this value\n\n#  will be set to the minimum version of Mac OS X that supports the requested\n\n#  features. Set this variable to some value (e.g., 10.4) only if you want to\n\n#  guarantee that your installer will work on that version of Mac OS X, and\n\n#  don't mind missing extra features available in the installer shipping with\n\n#  later versions of Mac OS X.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CPackProductBuild.cmake" : {
      "ObjectId" : "4779b95b9f25e6627dbfbe70469874e2b20dfb14",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CPackProductBuild\n\n# -----------------\n\n#\n\n# productbuild CPack generator (Mac OS X).\n\n#\n\n# Variables specific to CPack productbuild generator\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# The following variable is specific to installers built on Mac\n\n# OS X using productbuild:\n\n#\n\n# .. variable:: CPACK_COMMAND_PRODUCTBUILD\n\n#\n\n#  Path to the productbuild(1) command used to generate a product archive for\n\n#  the OS X Installer or Mac App Store.  This variable can be used to override\n\n#  the automatically detected command (or specify its location if the\n\n#  auto-detection fails to find it.)\n\n#\n\n# .. variable:: CPACK_PRODUCTBUILD_IDENTITY_NAME\n\n#\n\n#  Adds a digital signature to the resulting package.\n\n#\n\n#\n\n# .. variable:: CPACK_PRODUCTBUILD_KEYCHAIN_PATH\n\n#\n\n#  Specify a specific keychain to search for the signing identity.\n\n#\n\n#\n\n# .. variable:: CPACK_COMMAND_PKGBUILD\n\n#\n\n#  Path to the pkgbuild(1) command used to generate an OS X component package\n\n#  on OS X.  This variable can be used to override the automatically detected\n\n#  command (or specify its location if the auto-detection fails to find it.)\n\n#\n\n#\n\n# .. variable:: CPACK_PKGBUILD_IDENTITY_NAME\n\n#\n\n#  Adds a digital signature to the resulting package.\n\n#\n\n#\n\n# .. variable:: CPACK_PKGBUILD_KEYCHAIN_PATH\n\n#\n\n#  Specify a specific keychain to search for the signing identity.\n\n#\n\n#\n\n# .. variable:: CPACK_PRODUCTBUILD_RESOURCES_DIR\n\n#\n\n#  If specified the productbuild generator copies files from this directory\n\n#  (including subdirectories) to the ``Resources`` directory. This is done\n\n#  before the :variable:`CPACK_RESOURCE_FILE_WELCOME`,\n\n#  :variable:`CPACK_RESOURCE_FILE_README`, and\n\n#  :variable:`CPACK_RESOURCE_FILE_LICENSE` files are copied.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CPackRPM.cmake" : {
      "ObjectId" : "fa2a6e409356cf961d6de3ff8440abec3b66db28",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CPackRPM\n\n# --------\n\n#\n\n# The built in (binary) CPack RPM generator (Unix only)\n\n#\n\n# Variables specific to CPack RPM generator\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# CPackRPM may be used to create RPM packages using :module:`CPack`.\n\n# CPackRPM is a :module:`CPack` generator thus it uses the ``CPACK_XXX``\n\n# variables used by :module:`CPack`.\n\n#\n\n# CPackRPM has specific features which are controlled by the specifics\n\n# :code:`CPACK_RPM_XXX` variables.\n\n#\n\n# :code:`CPACK_RPM_<COMPONENT>_XXXX` variables may be used in order to have\n\n# **component** specific values.  Note however that ``<COMPONENT>`` refers to the\n\n# **grouping name** written in upper case. It may be either a component name or\n\n# a component GROUP name. Usually those variables correspond to RPM spec file\n\n# entities. One may find information about spec files here\n\n# http://www.rpm.org/wiki/Docs\n\n#\n\n# .. note::\n\n#\n\n#  `<COMPONENT>` part of variables is preferred to be in upper case (for e.g. if\n\n#  component is named `foo` then use `CPACK_RPM_FOO_XXXX` variable name format)\n\n#  as is with other `CPACK_<COMPONENT>_XXXX` variables.\n\n#  For the purposes of back compatibility (CMake/CPack version 3.5 and lower)\n\n#  support for same cased component (e.g. `fOo` would be used as\n\n#  `CPACK_RPM_fOo_XXXX`) is still supported for variables defined in older\n\n#  versions of CMake/CPack but is not guaranteed for variables that\n\n#  will be added in the future. For the sake of back compatibility same cased\n\n#  component variables also override upper cased versions where both are\n\n#  present.\n\n#\n\n# Here are some CPackRPM wiki resources that are here for historic reasons and\n\n# are no longer maintained but may still prove useful:\n\n#\n\n#  - https://cmake.org/Wiki/CMake:CPackConfiguration\n\n#  - https://cmake.org/Wiki/CMake:CPackPackageGenerators#RPM_.28Unix_Only.29\n\n#\n\n# List of CPackRPM specific variables:\n\n#\n\n# .. variable:: CPACK_RPM_COMPONENT_INSTALL\n\n#\n\n#  Enable component packaging for CPackRPM\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : OFF\n\n#\n\n#  If enabled (ON) multiple packages are generated. By default a single package\n\n#  containing files of all components is generated.\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_SUMMARY\n\n#               CPACK_RPM_<component>_PACKAGE_SUMMARY\n\n#\n\n#  The RPM package summary.\n\n#\n\n#  * Mandatory : YES\n\n#  * Default   : :variable:`CPACK_PACKAGE_DESCRIPTION_SUMMARY`\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_NAME\n\n#               CPACK_RPM_<component>_PACKAGE_NAME\n\n#\n\n#  The RPM package name.\n\n#\n\n#  * Mandatory : YES\n\n#  * Default   : :variable:`CPACK_PACKAGE_NAME`\n\n#\n\n# .. variable:: CPACK_RPM_FILE_NAME\n\n#               CPACK_RPM_<component>_FILE_NAME\n\n#\n\n#  Package file name.\n\n#\n\n#  * Mandatory : YES\n\n#  * Default   : ``<CPACK_PACKAGE_FILE_NAME>[-<component>].rpm`` with spaces\n\n#                replaced by '-'\n\n#\n\n#  This may be set to ``RPM-DEFAULT`` to allow rpmbuild tool to generate package\n\n#  file name by itself.\n\n#  Alternatively provided package file name must end with ``.rpm`` suffix.\n\n#\n\n#  .. note::\n\n#\n\n#    By using user provided spec file, rpm macro extensions such as for\n\n#    generating debuginfo packages or by simply using multiple components more\n\n#    than one rpm file may be generated, either from a single spec file or from\n\n#    multiple spec files (each component execution produces it's own spec file).\n\n#    In such cases duplicate file names may occur as a result of this variable\n\n#    setting or spec file content structure. Duplicate files get overwritten\n\n#    and it is up to the packager to set the variables in a manner that will\n\n#    prevent such errors.\n\n#\n\n# .. variable:: CPACK_RPM_MAIN_COMPONENT\n\n#\n\n#  Main component that is packaged without component suffix.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  This variable can be set to any component or group name so that component or\n\n#  group rpm package is generated without component suffix in filename and\n\n#  package name.\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_VERSION\n\n#\n\n#  The RPM package version.\n\n#\n\n#  * Mandatory : YES\n\n#  * Default   : :variable:`CPACK_PACKAGE_VERSION`\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_ARCHITECTURE\n\n#               CPACK_RPM_<component>_PACKAGE_ARCHITECTURE\n\n#\n\n#  The RPM package architecture.\n\n#\n\n#  * Mandatory : YES\n\n#  * Default   : Native architecture output by ``uname -m``\n\n#\n\n#  This may be set to ``noarch`` if you know you are building a noarch package.\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_RELEASE\n\n#\n\n#  The RPM package release.\n\n#\n\n#  * Mandatory : YES\n\n#  * Default   : 1\n\n#\n\n#  This is the numbering of the RPM package itself, i.e. the version of the\n\n#  packaging and not the version of the content (see\n\n#  :variable:`CPACK_RPM_PACKAGE_VERSION`). One may change the default value if\n\n#  the previous packaging was buggy and/or you want to put here a fancy Linux\n\n#  distro specific numbering.\n\n#\n\n# .. note::\n\n#\n\n#  This is the string that goes into the RPM ``Release:`` field. Some distros\n\n#  (e.g. Fedora, CentOS) require ``1%{?dist}`` format and not just a number.\n\n#  ``%{?dist}`` part can be added by setting :variable:`CPACK_RPM_PACKAGE_RELEASE_DIST`.\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_RELEASE_DIST\n\n#\n\n#  The dist tag that is added  RPM ``Release:`` field.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : OFF\n\n#\n\n#  This is the reported ``%{dist}`` tag from the current distribution or empty\n\n#  ``%{dist}`` if RPM macro is not set. If this variable is set then RPM\n\n#  ``Release:`` field value is set to ``${CPACK_RPM_PACKAGE_RELEASE}%{?dist}``.\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_LICENSE\n\n#\n\n#  The RPM package license policy.\n\n#\n\n#  * Mandatory : YES\n\n#  * Default   : \"unknown\"\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_GROUP\n\n#               CPACK_RPM_<component>_PACKAGE_GROUP\n\n#\n\n#  The RPM package group.\n\n#\n\n#  * Mandatory : YES\n\n#  * Default   : \"unknown\"\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_VENDOR\n\n#\n\n#  The RPM package vendor.\n\n#\n\n#  * Mandatory : YES\n\n#  * Default   : CPACK_PACKAGE_VENDOR if set or \"unknown\"\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_URL\n\n#               CPACK_RPM_<component>_PACKAGE_URL\n\n#\n\n#  The projects URL.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_DESCRIPTION\n\n#               CPACK_RPM_<component>_PACKAGE_DESCRIPTION\n\n#\n\n#  RPM package description.\n\n#\n\n#  * Mandatory : YES\n\n#  * Default : :variable:`CPACK_COMPONENT_<compName>_DESCRIPTION` (component\n\n#    based installers only) if set, :variable:`CPACK_PACKAGE_DESCRIPTION_FILE`\n\n#    if set or \"no package description available\"\n\n#\n\n# .. variable:: CPACK_RPM_COMPRESSION_TYPE\n\n#\n\n#  RPM compression type.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be used to override RPM compression type to be used to build the\n\n#  RPM. For example some Linux distribution now default to lzma or xz\n\n#  compression whereas older cannot use such RPM. Using this one can enforce\n\n#  compression type to be used.\n\n#\n\n#  Possible values are:\n\n#\n\n#  - lzma\n\n#  - xz\n\n#  - bzip2\n\n#  - gzip\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_AUTOREQ\n\n#               CPACK_RPM_<component>_PACKAGE_AUTOREQ\n\n#\n\n#  RPM spec autoreq field.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be used to enable (1, yes) or disable (0, no) automatic shared libraries\n\n#  dependency detection. Dependencies are added to requires list.\n\n#\n\n#  .. note::\n\n#\n\n#    By default automatic dependency detection is enabled by rpm generator.\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_AUTOPROV\n\n#               CPACK_RPM_<component>_PACKAGE_AUTOPROV\n\n#\n\n#  RPM spec autoprov field.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be used to enable (1, yes) or disable (0, no) automatic listing of shared\n\n#  libraries that are provided by the package. Shared libraries are added to\n\n#  provides list.\n\n#\n\n#  .. note::\n\n#\n\n#    By default automatic provides detection is enabled by rpm generator.\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_AUTOREQPROV\n\n#               CPACK_RPM_<component>_PACKAGE_AUTOREQPROV\n\n#\n\n#  RPM spec autoreqprov field.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  Variable enables/disables autoreq and autoprov at the same time.\n\n#  See :variable:`CPACK_RPM_PACKAGE_AUTOREQ` and :variable:`CPACK_RPM_PACKAGE_AUTOPROV`\n\n#  for more details.\n\n#\n\n#  .. note::\n\n#\n\n#    By default automatic detection feature is enabled by rpm.\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_REQUIRES\n\n#               CPACK_RPM_<component>_PACKAGE_REQUIRES\n\n#\n\n#  RPM spec requires field.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be used to set RPM dependencies (requires). Note that you must enclose\n\n#  the complete requires string between quotes, for example::\n\n#\n\n#   set(CPACK_RPM_PACKAGE_REQUIRES \"python >= 2.5.0, cmake >= 2.8\")\n\n#\n\n#  The required package list of an RPM file could be printed with::\n\n#\n\n#   rpm -qp --requires file.rpm\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_CONFLICTS\n\n#               CPACK_RPM_<component>_PACKAGE_CONFLICTS\n\n#\n\n#  RPM spec conflicts field.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be used to set negative RPM dependencies (conflicts). Note that you must\n\n#  enclose the complete requires string between quotes, for example::\n\n#\n\n#   set(CPACK_RPM_PACKAGE_CONFLICTS \"libxml2\")\n\n#\n\n#  The conflicting package list of an RPM file could be printed with::\n\n#\n\n#   rpm -qp --conflicts file.rpm\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_REQUIRES_PRE\n\n#               CPACK_RPM_<component>_PACKAGE_REQUIRES_PRE\n\n#\n\n#  RPM spec requires(pre) field.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be used to set RPM preinstall dependencies (requires(pre)). Note that\n\n#  you must enclose the complete requires string between quotes, for example::\n\n#\n\n#   set(CPACK_RPM_PACKAGE_REQUIRES_PRE \"shadow-utils, initscripts\")\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_REQUIRES_POST\n\n#               CPACK_RPM_<component>_PACKAGE_REQUIRES_POST\n\n#\n\n#  RPM spec requires(post) field.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be used to set RPM postinstall dependencies (requires(post)). Note that\n\n#  you must enclose the complete requires string between quotes, for example::\n\n#\n\n#   set(CPACK_RPM_PACKAGE_REQUIRES_POST \"shadow-utils, initscripts\")\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_REQUIRES_POSTUN\n\n#               CPACK_RPM_<component>_PACKAGE_REQUIRES_POSTUN\n\n#\n\n#  RPM spec requires(postun) field.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be used to set RPM postuninstall dependencies (requires(postun)). Note\n\n#  that you must enclose the complete requires string between quotes, for\n\n#  example::\n\n#\n\n#   set(CPACK_RPM_PACKAGE_REQUIRES_POSTUN \"shadow-utils, initscripts\")\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_REQUIRES_PREUN\n\n#               CPACK_RPM_<component>_PACKAGE_REQUIRES_PREUN\n\n#\n\n#  RPM spec requires(preun) field.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be used to set RPM preuninstall dependencies (requires(preun)). Note that\n\n#  you must enclose the complete requires string between quotes, for example::\n\n#\n\n#   set(CPACK_RPM_PACKAGE_REQUIRES_PREUN \"shadow-utils, initscripts\")\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_SUGGESTS\n\n#               CPACK_RPM_<component>_PACKAGE_SUGGESTS\n\n#\n\n#  RPM spec suggest field.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be used to set weak RPM dependencies (suggests). Note that you must\n\n#  enclose the complete requires string between quotes.\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_PROVIDES\n\n#               CPACK_RPM_<component>_PACKAGE_PROVIDES\n\n#\n\n#  RPM spec provides field.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be used to set RPM dependencies (provides). The provided package list\n\n#  of an RPM file could be printed with::\n\n#\n\n#   rpm -qp --provides file.rpm\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_OBSOLETES\n\n#               CPACK_RPM_<component>_PACKAGE_OBSOLETES\n\n#\n\n#  RPM spec obsoletes field.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be used to set RPM packages that are obsoleted by this one.\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_RELOCATABLE\n\n#\n\n#  build a relocatable RPM.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : CPACK_PACKAGE_RELOCATABLE\n\n#\n\n#  If this variable is set to TRUE or ON CPackRPM will try\n\n#  to build a relocatable RPM package. A relocatable RPM may\n\n#  be installed using::\n\n#\n\n#   rpm --prefix or --relocate\n\n#\n\n#  in order to install it at an alternate place see rpm(8). Note that\n\n#  currently this may fail if :variable:`CPACK_SET_DESTDIR` is set to ``ON``. If\n\n#  :variable:`CPACK_SET_DESTDIR` is set then you will get a warning message but\n\n#  if there is file installed with absolute path you'll get unexpected behavior.\n\n#\n\n# .. variable:: CPACK_RPM_SPEC_INSTALL_POST\n\n#\n\n#  Deprecated - use :variable:`CPACK_RPM_POST_INSTALL_SCRIPT_FILE` instead.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#  * Deprecated: YES\n\n#\n\n#  This way of specifying post-install script is deprecated, use\n\n#  :variable:`CPACK_RPM_POST_INSTALL_SCRIPT_FILE`.\n\n#  May be used to set an RPM post-install command inside the spec file.\n\n#  For example setting it to ``/bin/true`` may be used to prevent\n\n#  rpmbuild to strip binaries.\n\n#\n\n# .. variable:: CPACK_RPM_SPEC_MORE_DEFINE\n\n#\n\n#  RPM extended spec definitions lines.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be used to add any ``%define`` lines to the generated spec file.\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_DEBUG\n\n#\n\n#  Toggle CPackRPM debug output.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be set when invoking cpack in order to trace debug information\n\n#  during CPack RPM run. For example you may launch CPack like this::\n\n#\n\n#   cpack -D CPACK_RPM_PACKAGE_DEBUG=1 -G RPM\n\n#\n\n# .. variable:: CPACK_RPM_USER_BINARY_SPECFILE\n\n#               CPACK_RPM_<componentName>_USER_BINARY_SPECFILE\n\n#\n\n#  A user provided spec file.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be set by the user in order to specify a USER binary spec file\n\n#  to be used by CPackRPM instead of generating the file.\n\n#  The specified file will be processed by configure_file( @ONLY).\n\n#\n\n# .. variable:: CPACK_RPM_GENERATE_USER_BINARY_SPECFILE_TEMPLATE\n\n#\n\n#  Spec file template.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  If set CPack will generate a template for USER specified binary\n\n#  spec file and stop with an error. For example launch CPack like this::\n\n#\n\n#   cpack -D CPACK_RPM_GENERATE_USER_BINARY_SPECFILE_TEMPLATE=1 -G RPM\n\n#\n\n#  The user may then use this file in order to hand-craft is own\n\n#  binary spec file which may be used with\n\n#  :variable:`CPACK_RPM_USER_BINARY_SPECFILE`.\n\n#\n\n# .. variable:: CPACK_RPM_PRE_INSTALL_SCRIPT_FILE\n\n#               CPACK_RPM_PRE_UNINSTALL_SCRIPT_FILE\n\n#\n\n#  Path to file containing pre (un)install script.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be used to embed a pre (un)installation script in the spec file.\n\n#  The referred script file (or both) will be read and directly\n\n#  put after the ``%pre`` or ``%preun`` section\n\n#  If :variable:`CPACK_RPM_COMPONENT_INSTALL` is set to ON the (un)install\n\n#  script for each component can be overridden with\n\n#  ``CPACK_RPM_<COMPONENT>_PRE_INSTALL_SCRIPT_FILE`` and\n\n#  ``CPACK_RPM_<COMPONENT>_PRE_UNINSTALL_SCRIPT_FILE``.\n\n#  One may verify which scriptlet has been included with::\n\n#\n\n#   rpm -qp --scripts  package.rpm\n\n#\n\n# .. variable:: CPACK_RPM_POST_INSTALL_SCRIPT_FILE\n\n#               CPACK_RPM_POST_UNINSTALL_SCRIPT_FILE\n\n#\n\n#  Path to file containing post (un)install script.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be used to embed a post (un)installation script in the spec file.\n\n#  The referred script file (or both) will be read and directly\n\n#  put after the ``%post`` or ``%postun`` section.\n\n#  If :variable:`CPACK_RPM_COMPONENT_INSTALL` is set to ON the (un)install\n\n#  script for each component can be overridden with\n\n#  ``CPACK_RPM_<COMPONENT>_POST_INSTALL_SCRIPT_FILE`` and\n\n#  ``CPACK_RPM_<COMPONENT>_POST_UNINSTALL_SCRIPT_FILE``.\n\n#  One may verify which scriptlet has been included with::\n\n#\n\n#   rpm -qp --scripts  package.rpm\n\n#\n\n# .. variable:: CPACK_RPM_USER_FILELIST\n\n#               CPACK_RPM_<COMPONENT>_USER_FILELIST\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be used to explicitly specify ``%(<directive>)`` file line\n\n#  in the spec file. Like ``%config(noreplace)`` or any other directive\n\n#  that be found in the ``%files`` section. You can have multiple directives\n\n#  per line, as in ``%attr(600,root,root) %config(noreplace)``. Since\n\n#  CPackRPM is generating the list of files (and directories) the user\n\n#  specified files of the ``CPACK_RPM_<COMPONENT>_USER_FILELIST`` list will\n\n#  be removed from the generated list. If referring to directories do\n\n#  not add a trailing slash.\n\n#\n\n# .. variable:: CPACK_RPM_CHANGELOG_FILE\n\n#\n\n#  RPM changelog file.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be used to embed a changelog in the spec file.\n\n#  The referred file will be read and directly put after the ``%changelog``\n\n#  section.\n\n#\n\n# .. variable:: CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST\n\n#\n\n#  list of path to be excluded.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : /etc /etc/init.d /usr /usr/share /usr/share/doc /usr/bin /usr/lib /usr/lib64 /usr/include\n\n#\n\n#  May be used to exclude path (directories or files) from the auto-generated\n\n#  list of paths discovered by CPack RPM. The defaut value contains a\n\n#  reasonable set of values if the variable is not defined by the user. If the\n\n#  variable is defined by the user then CPackRPM will NOT any of the default\n\n#  path. If you want to add some path to the default list then you can use\n\n#  :variable:`CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION` variable.\n\n#\n\n# .. variable:: CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION\n\n#\n\n#  additional list of path to be excluded.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be used to add more exclude path (directories or files) from the initial\n\n#  default list of excluded paths. See\n\n#  :variable:`CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST`.\n\n#\n\n# .. variable:: CPACK_RPM_RELOCATION_PATHS\n\n#\n\n#  Packages relocation paths list.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be used to specify more than one relocation path per relocatable RPM.\n\n#  Variable contains a list of relocation paths that if relative are prefixed\n\n#  by the value of :variable:`CPACK_RPM_<COMPONENT>_PACKAGE_PREFIX` or by the\n\n#  value of :variable:`CPACK_PACKAGING_INSTALL_PREFIX` if the component version\n\n#  is not provided.\n\n#  Variable is not component based as its content can be used to set a different\n\n#  path prefix for e.g. binary dir and documentation dir at the same time.\n\n#  Only prefixes that are required by a certain component are added to that\n\n#  component - component must contain at least one file/directory/symbolic link\n\n#  with :variable:`CPACK_RPM_RELOCATION_PATHS` prefix for a certain relocation\n\n#  path to be added. Package will not contain any relocation paths if there are\n\n#  no files/directories/symbolic links on any of the provided prefix locations.\n\n#  Packages that either do not contain any relocation paths or contain\n\n#  files/directories/symbolic links that are outside relocation paths print\n\n#  out an ``AUTHOR_WARNING`` that RPM will be partially relocatable.\n\n#\n\n# .. variable:: CPACK_RPM_<COMPONENT>_PACKAGE_PREFIX\n\n#\n\n#  Per component relocation path install prefix.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : CPACK_PACKAGING_INSTALL_PREFIX\n\n#\n\n#  May be used to set per component :variable:`CPACK_PACKAGING_INSTALL_PREFIX`\n\n#  for relocatable RPM packages.\n\n#\n\n# .. variable:: CPACK_RPM_NO_INSTALL_PREFIX_RELOCATION\n\n#               CPACK_RPM_NO_<COMPONENT>_INSTALL_PREFIX_RELOCATION\n\n#\n\n#  Removal of default install prefix from relocation paths list.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : CPACK_PACKAGING_INSTALL_PREFIX or CPACK_RPM_<COMPONENT>_PACKAGE_PREFIX\n\n#                are treated as one of relocation paths\n\n#\n\n#  May be used to remove CPACK_PACKAGING_INSTALL_PREFIX and CPACK_RPM_<COMPONENT>_PACKAGE_PREFIX\n\n#  from relocatable RPM prefix paths.\n\n#\n\n# .. variable:: CPACK_RPM_ADDITIONAL_MAN_DIRS\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be used to set additional man dirs that could potentially be compressed\n\n#  by brp-compress RPM macro. Variable content must be a list of regular\n\n#  expressions that point to directories containing man files or to man files\n\n#  directly. Note that in order to compress man pages a path must also be\n\n#  present in brp-compress RPM script and that brp-compress script must be\n\n#  added to RPM configuration by the operating system.\n\n#\n\n#  Regular expressions that are added by default were taken from brp-compress\n\n#  RPM macro:\n\n#\n\n#  - /usr/man/man.*\n\n#  - /usr/man/.*/man.*\n\n#  - /usr/info.*\n\n#  - /usr/share/man/man.*\n\n#  - /usr/share/man/.*/man.*\n\n#  - /usr/share/info.*\n\n#  - /usr/kerberos/man.*\n\n#  - /usr/X11R6/man/man.*\n\n#  - /usr/lib/perl5/man/man.*\n\n#  - /usr/share/doc/.*/man/man.*\n\n#  - /usr/lib/.*/man/man.*\n\n#\n\n# .. variable:: CPACK_RPM_DEFAULT_USER\n\n#               CPACK_RPM_<compName>_DEFAULT_USER\n\n#\n\n#  default user ownership of RPM content\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : root\n\n#\n\n#  Value should be user name and not UID.\n\n#  Note that <compName> must be in upper-case.\n\n#\n\n# .. variable:: CPACK_RPM_DEFAULT_GROUP\n\n#               CPACK_RPM_<compName>_DEFAULT_GROUP\n\n#\n\n#  default group ownership of RPM content\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : root\n\n#\n\n#  Value should be group name and not GID.\n\n#  Note that <compName> must be in upper-case.\n\n#\n\n# .. variable:: CPACK_RPM_DEFAULT_FILE_PERMISSIONS\n\n#               CPACK_RPM_<compName>_DEFAULT_FILE_PERMISSIONS\n\n#\n\n#  default permissions used for packaged files\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : - (system default)\n\n#\n\n#  Accepted values are lists with ``PERMISSIONS``. Valid permissions\n\n#  are:\n\n#\n\n#  - OWNER_READ\n\n#  - OWNER_WRITE\n\n#  - OWNER_EXECUTE\n\n#  - GROUP_READ\n\n#  - GROUP_WRITE\n\n#  - GROUP_EXECUTE\n\n#  - WORLD_READ\n\n#  - WORLD_WRITE\n\n#  - WORLD_EXECUTE\n\n#\n\n#  Note that <compName> must be in upper-case.\n\n#\n\n# .. variable:: CPACK_RPM_DEFAULT_DIR_PERMISSIONS\n\n#               CPACK_RPM_<compName>_DEFAULT_DIR_PERMISSIONS\n\n#\n\n#  default permissions used for packaged directories\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : - (system default)\n\n#\n\n#  Accepted values are lists with PERMISSIONS. Valid permissions\n\n#  are the same as for :variable:`CPACK_RPM_DEFAULT_FILE_PERMISSIONS`.\n\n#  Note that <compName> must be in upper-case.\n\n#\n\n# Packaging of Symbolic Links\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# CPackRPM supports packaging of symbolic links::\n\n#\n\n#   execute_process(COMMAND ${CMAKE_COMMAND}\n\n#     -E create_symlink <relative_path_location> <symlink_name>)\n\n#   install(FILES ${CMAKE_CURRENT_BINARY_DIR}/<symlink_name>\n\n#     DESTINATION <symlink_location> COMPONENT libraries)\n\n#\n\n# Symbolic links will be optimized (paths will be shortened if possible)\n\n# before being added to the package or if multiple relocation paths are\n\n# detected, a post install symlink relocation script will be generated.\n\n#\n\n# Symbolic links may point to locations that are not packaged by the same\n\n# package (either a different component or even not packaged at all) but\n\n# those locations will be treated as if they were a part of the package\n\n# while determining if symlink should be either created or present in a\n\n# post install script - depending on relocation paths.\n\n#\n\n# Symbolic links that point to locations outside packaging path produce a\n\n# warning and are treated as non relocatable permanent symbolic links.\n\n#\n\n# Currently there are a few limitations though:\n\n#\n\n# * For component based packaging component interdependency is not checked\n\n#   when processing symbolic links. Symbolic links pointing to content of\n\n#   a different component are treated the same way as if pointing to location\n\n#   that will not be packaged.\n\n#\n\n# * Symbolic links pointing to a location through one or more intermediate\n\n#   symbolic links will not be handled differently - if the intermediate\n\n#   symbolic link(s) is also on a relocatable path, relocating it during\n\n#   package installation may cause initial symbolic link to point to an\n\n#   invalid location.\n\n#\n\n# Packaging of debug information\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# Debuginfo packages contain debug symbols and sources for debugging packaged\n\n# binaries.\n\n#\n\n# Debuginfo RPM packaging has it's own set of variables:\n\n#\n\n# .. variable:: CPACK_RPM_DEBUGINFO_PACKAGE\n\n#               CPACK_RPM_<component>_DEBUGINFO_PACKAGE\n\n#\n\n#  Enable generation of debuginfo RPM package(s).\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : OFF\n\n#\n\n# .. note::\n\n#\n\n#  Binaries must contain debug symbols before packaging so use either ``Debug``\n\n#  or ``RelWithDebInfo`` for :variable:`CMAKE_BUILD_TYPE` variable value.\n\n#\n\n# .. note::\n\n#\n\n#  Packages generated from packages without binary files, with binary files but\n\n#  without execute permissions or without debug symbols will be empty.\n\n#\n\n# .. variable:: CPACK_BUILD_SOURCE_DIRS\n\n#\n\n#  Provides locations of root directories of source files from which binaries\n\n#  were built.\n\n#\n\n#  * Mandatory : YES if :variable:`CPACK_RPM_DEBUGINFO_PACKAGE` is set\n\n#  * Default   : -\n\n#\n\n# .. note::\n\n#\n\n#  For CMake project :variable:`CPACK_BUILD_SOURCE_DIRS` is set by default to\n\n#  point to :variable:`CMAKE_SOURCE_DIR` and :variable:`CMAKE_BINARY_DIR` paths.\n\n#\n\n# .. note::\n\n#\n\n#  Sources with path prefixes that do not fall under any location provided with\n\n#  :variable:`CPACK_BUILD_SOURCE_DIRS` will not be present in debuginfo package.\n\n#\n\n# .. variable:: CPACK_RPM_BUILD_SOURCE_DIRS_PREFIX\n\n#               CPACK_RPM_<component>_BUILD_SOURCE_DIRS_PREFIX\n\n#\n\n#  Prefix of location where sources will be placed during package installation.\n\n#\n\n#  * Mandatory : YES if :variable:`CPACK_RPM_DEBUGINFO_PACKAGE` is set\n\n#  * Default   : \"/usr/src/debug/<CPACK_PACKAGE_FILE_NAME>\" and\n\n#                for component packaging \"/usr/src/debug/<CPACK_PACKAGE_FILE_NAME>-<component>\"\n\n#\n\n# .. note::\n\n#\n\n#  Each source path prefix is additionaly suffixed by ``src_<index>`` where\n\n#  index is index of the path used from :variable:`CPACK_BUILD_SOURCE_DIRS`\n\n#  variable. This produces ``<CPACK_RPM_BUILD_SOURCE_DIRS_PREFIX>/src_<index>``\n\n#  replacement path.\n\n#  Limitation is that replaced path part must be shorter or of equal\n\n#  length than the length of its replacement. If that is not the case either\n\n#  :variable:`CPACK_RPM_BUILD_SOURCE_DIRS_PREFIX` variable has to be set to\n\n#  a shorter path or source directories must be placed on a longer path.\n\n#\n\n# .. variable:: CPACK_RPM_DEBUGINFO_EXCLUDE_DIRS\n\n#\n\n#  Directories containing sources that should be excluded from debuginfo packages.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : \"/usr /usr/src /usr/src/debug\"\n\n#\n\n#  Listed paths are owned by other RPM packages and should therefore not be\n\n#  deleted on debuginfo package uninstallation.\n\n#\n\n# .. variable:: CPACK_RPM_DEBUGINFO_EXCLUDE_DIRS_ADDITION\n\n#\n\n#  Paths that should be appended to :variable:`CPACK_RPM_DEBUGINFO_EXCLUDE_DIRS`\n\n#  for exclusion.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n# .. variable:: CPACK_RPM_DEBUGINFO_SINGLE_PACKAGE\n\n#\n\n#  Create a single debuginfo package even if components packaging is set.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : OFF\n\n#\n\n#  When this variable is enabled it produces a single debuginfo package even if\n\n#  component packaging is enabled.\n\n#\n\n#  When using this feature in combination with components packaging and there is\n\n#  more than one component this variable requires :variable:`CPACK_RPM_MAIN_COMPONENT`\n\n#  to be set.\n\n#\n\n# .. note::\n\n#\n\n#  If none of the :variable:`CPACK_RPM_<component>_DEBUGINFO_PACKAGE` variables\n\n#  is set then :variable:`CPACK_RPM_DEBUGINFO_PACKAGE` is automatically set to\n\n#  ``ON`` when :variable:`CPACK_RPM_DEBUGINFO_SINGLE_PACKAGE` is set.\n\n#\n\n# .. variable:: CPACK_RPM_DEBUGINFO_FILE_NAME\n\n#               CPACK_RPM_<component>_DEBUGINFO_FILE_NAME\n\n#\n\n#  Debuginfo package file name.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : rpmbuild tool generated package file name\n\n#\n\n#  Alternatively provided debuginfo package file name must end with ``.rpm``\n\n#  suffix and should differ from file names of other generated packages.\n\n#\n\n#  Variable may contain ``@cpack_component@`` placeholder which will be\n\n#  replaced by component name if component packaging is enabled otherwise it\n\n#  deletes the placeholder.\n\n#\n\n#  Setting the variable to ``RPM-DEFAULT`` may be used to explicitly set\n\n#  filename generation to default.\n\n#\n\n# .. note::\n\n#\n\n#  :variable:`CPACK_RPM_FILE_NAME` also supports rpmbuild tool generated package\n\n#  file name - disabled by default but can be enabled by setting the variable to\n\n#  ``RPM-DEFAULT``.\n\n#\n\n# Packaging of sources (SRPM)\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# SRPM packaging is enabled by setting :variable:`CPACK_RPM_PACKAGE_SOURCES`\n\n# variable while usually using :variable:`CPACK_INSTALLED_DIRECTORIES` variable\n\n# to provide directory containing CMakeLists.txt and source files.\n\n#\n\n# For CMake projects SRPM package would be product by executing:\n\n#\n\n# ``cpack -G RPM --config ./CPackSourceConfig.cmake``\n\n#\n\n# .. note::\n\n#\n\n#  Produced SRPM package is expected to be built with :manual:`cmake(1)` executable\n\n#  and packaged with :manual:`cpack(1)` executable so CMakeLists.txt has to be\n\n#  located in root source directory and must be able to generate binary rpm\n\n#  packages by executing ``cpack -G`` command. The two executables as well as\n\n#  rpmbuild must also be present when generating binary rpm packages from the\n\n#  produced SRPM package.\n\n#\n\n# Once the SRPM package is generated it can be used to generate binary packages\n\n# by creating a directory structure for rpm generation and executing rpmbuild\n\n# tool:\n\n#\n\n# ``mkdir -p build_dir/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}``\n\n# ``rpmbuild --define \"_topdir <path_to_build_dir>\" --rebuild <SRPM_file_name>``\n\n#\n\n# Generated packages will be located in build_dir/RPMS directory or its sub\n\n# directories.\n\n#\n\n# .. note::\n\n#\n\n#  SRPM package internally uses CPack/RPM generator to generate binary packages\n\n#  so CMakeScripts.txt can decide during the SRPM to binary rpm generation step\n\n#  what content the package(s) should have as well as how they should be packaged\n\n#  (monolithic or components). CMake can decide this for e.g. by reading environment\n\n#  variables set by the package manager before starting the process of generating\n\n#  binary rpm packages. This way a single SRPM package can be used to produce\n\n#  different binary rpm packages on different platforms depending on the platform's\n\n#  packaging rules.\n\n#\n\n# Source RPM packaging has it's own set of variables:\n\n#\n\n# .. variable:: CPACK_RPM_PACKAGE_SOURCES\n\n#\n\n#  Should the content be packaged as a source rpm (default is binary rpm).\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : OFF\n\n#\n\n# .. note::\n\n#\n\n#  For cmake projects :variable:`CPACK_RPM_PACKAGE_SOURCES` variable is set\n\n#  to ``OFF`` in CPackConfig.cmake and ``ON`` in CPackSourceConfig.cmake\n\n#  generated files.\n\n#\n\n# .. variable:: CPACK_RPM_SOURCE_PKG_BUILD_PARAMS\n\n#\n\n#  Additional command-line parameters provided to :manual:`cmake(1)` executable.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n# .. variable:: CPACK_RPM_SOURCE_PKG_PACKAGING_INSTALL_PREFIX\n\n#\n\n#  Packaging install prefix that would be provided in :variable:`CPACK_PACKAGING_INSTALL_PREFIX`\n\n#  variable for producing binary RPM packages.\n\n#\n\n#  * Mandatory : YES\n\n#  * Default   : \"/\"\n\n#\n\n# .. VARIABLE:: CPACK_RPM_BUILDREQUIRES\n\n#\n\n#  List of source rpm build dependencies.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : -\n\n#\n\n#  May be used to set source RPM build dependencies (BuildRequires). Note that\n\n#  you must enclose the complete build requirements string between quotes, for\n\n#  example::\n\n#\n\n#   set(CPACK_RPM_BUILDREQUIRES \"python >= 2.5.0, cmake >= 2.8\")\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Author: Eric Noulard with the help of Alexander Neundorf.\n",
        "Line" : 928,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set appropriate prefix, remove possible trailing slash and convert backslashes to slashes\n",
        "Line" : 960,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# set base path prefix\n",
        "Line" : 972,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# set other path prefixes\n",
        "Line" : 986,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# don't prefix path with a second slash as \"//\" is treated as network path\n\n# by get_filename_component() so it remains in path even inside rpm\n\n# package where it may cause problems with relocation\n",
        "Line" : 991,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# handle cases where path contains extra slashes (e.g. /a//b/ instead of\n\n# /a/b)\n",
        "Line" : 999,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# warn about all the paths that are not relocatable\n",
        "Line" : 1010,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Tell file(GLOB_RECURSE) not to follow directory symlinks\n\n# even if the project does not set this policy to NEW.\n",
        "Line" : 1012,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# get files list\n",
        "Line" : 1042,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# if we are creating a relocatable package, omit parent directories of\n\n# CPACK_RPM_PACKAGE_PREFIX. This is achieved by building a \"filter list\"\n\n# which is passed to the find command that generates the content-list\n",
        "Line" : 1050,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# get a list of the elements in CPACK_RPM_PACKAGE_PREFIXES that are\n\n# destinct parent paths of other relocation paths and remove the\n\n# final element (so the install-prefix dir itself is not omitted\n\n# from the RPM's content-list)\n",
        "Line" : 1054,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Now generate all of the parent dirs of the relocation path\n",
        "Line" : 1070,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# add man paths that will be compressed\n\n# (copied from /usr/lib/rpm/brp-compress - script that does the actual\n\n# compressing)\n",
        "Line" : 1108,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# man pages are files inside a certain location\n",
        "Line" : 1125,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# insert file location that covers compressed man pages\n\n# even if using a wildcard causes duplicates as those are\n\n# handled by RPM and we still keep the same file list\n\n# in spec file - wildcard only represents file type (e.g. .gz)\n",
        "Line" : 1130,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# remove file location that doesn't cover compressed man pages\n",
        "Line" : 1135,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# reverse magic\n",
        "Line" : 1167,
        "CharPositionInLine" : 60
      },
      "19" : {
        "Text" : "# both paths relocated\n",
        "Line" : 1173,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# reverse magic\n",
        "Line" : 1176,
        "CharPositionInLine" : 62
      },
      "21" : {
        "Text" : "# source path relocated\n",
        "Line" : 1212,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# point path relocated\n",
        "Line" : 1240,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# reverse magic\n",
        "Line" : 1243,
        "CharPositionInLine" : 60
      },
      "24" : {
        "Text" : "# no path relocated\n",
        "Line" : 1269,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# source path relocated\n",
        "Line" : 1301,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# both paths relocated\n",
        "Line" : 1308,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# point path relocated\n",
        "Line" : 1312,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# point path relocated\n",
        "Line" : 1321,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# no path relocated\n",
        "Line" : 1327,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# place variables into parent scope\n",
        "Line" : 1331,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Prepend directories in ${CPACK_RPM_INSTALL_FILES} with %dir\n\n# This is necessary to avoid duplicate files since rpmbuild does\n\n# recursion on its own when encountering a pathname which is a directory\n\n# which is not flagged as %dir\n",
        "Line" : 1341,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# make file order consistent on all platforms\n",
        "Line" : 1352,
        "CharPositionInLine" : 32
      },
      "33" : {
        "Text" : "# check that symlink has relocatable format\n",
        "Line" : 1359,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# get destination path\n",
        "Line" : 1370,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# check if path is relative or absolute\n",
        "Line" : 1373,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# prevent absolute paths from having /../ or /./ section inside of them\n",
        "Line" : 1377,
        "CharPositionInLine" : 10
      },
      "37" : {
        "Text" : "# handle relative path\n",
        "Line" : 1380,
        "CharPositionInLine" : 10
      },
      "38" : {
        "Text" : "# recalculate path length after conversion to canonical form\n",
        "Line" : 1384,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# only symlinks that are pointing inside the packaging structure should be checked for relocation\n",
        "Line" : 1388,
        "CharPositionInLine" : 10
      },
      "40" : {
        "Text" : "# location pointed to is ouside WDR so it should be treated as a permanent symlink\n",
        "Line" : 1396,
        "CharPositionInLine" : 10
      },
      "41" : {
        "Text" : "# find matching\n",
        "Line" : 1408,
        "CharPositionInLine" : 10
      },
      "42" : {
        "Text" : "# symlinks have the same subpath\n",
        "Line" : 1417,
        "CharPositionInLine" : 12
      },
      "43" : {
        "Text" : "# permanent symlink\n",
        "Line" : 1419,
        "CharPositionInLine" : 14
      },
      "44" : {
        "Text" : "# relocation subpaths\n",
        "Line" : 1424,
        "CharPositionInLine" : 14
      },
      "45" : {
        "Text" : "# not on the same relocation path\n",
        "Line" : 1429,
        "CharPositionInLine" : 12
      },
      "46" : {
        "Text" : "# point is relocatable\n",
        "Line" : 1434,
        "CharPositionInLine" : 10
      },
      "47" : {
        "Text" : "# is not relocatable or points to non relocatable path - permanent symlink\n",
        "Line" : 1438,
        "CharPositionInLine" : 10
      },
      "48" : {
        "Text" : "# We need to check if the binaries were compiled with debug symbols\n\n# because without them the package will be useless\n",
        "Line" : 1465,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# With objdump we should check the debug symbols\n",
        "Line" : 1474,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# With debugedit we prepare source files list\n",
        "Line" : 1482,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# Check that if the given file was executable or not\n",
        "Line" : 1504,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# Now generate all segments of the path\n",
        "Line" : 1590,
        "CharPositionInLine" : 6
      },
      "53" : {
        "Text" : "# rpmbuild is the basic command for building RPM package\n\n# it may be a simple (symbolic) link to rpm command.\n",
        "Line" : 1624,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Check version of the rpmbuild tool this would be easier to\n\n# track bugs with users and CPackRPM debug mode.\n\n# We may use RPM version in order to check for available version dependent features\n",
        "Line" : 1628,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Display lsb_release output if DEBUG mode enable\n\n# This will help to diagnose problem with CPackRPM\n\n# because we will know on which kind of Linux we are\n",
        "Line" : 1648,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# We may use RPM version in the future in order\n\n# to shut down warning about space in buildtree\n\n# some recent RPM version should support space in different places.\n\n# not checked [yet].\n",
        "Line" : 1667,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# If rpmbuild is found\n\n# we try to discover alien since we may be on non RPM distro like Debian.\n\n# In this case we may try to to use more advanced features\n\n# like generating RPM directly from DEB using alien.\n\n# FIXME feature not finished (yet)\n",
        "Line" : 1675,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Are we packaging components ?\n",
        "Line" : 1685,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "#\n\n# Use user-defined RPM specific variables value\n\n# or generate reasonable default value from\n\n# CPACK_xxx generic values.\n\n# The variables comes from the needed (mandatory or not)\n\n# values found in the RPM specification file aka \".spec\" file.\n\n# The variables which may/should be defined are:\n\n#\n",
        "Line" : 1692,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# CPACK_RPM_PACKAGE_SUMMARY (mandatory)\n",
        "Line" : 1701,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# if neither var is defined lets use the name as summary\n",
        "Line" : 1713,
        "CharPositionInLine" : 6
      },
      "62" : {
        "Text" : "# CPACK_RPM_PACKAGE_NAME (mandatory)\n",
        "Line" : 1718,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# CPACK_RPM_PACKAGE_VERSION (mandatory)\n",
        "Line" : 1736,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# Replace '-' in version with '_'\n\n# '-' character is  an Illegal RPM version character\n\n# it is illegal because it is used to separate\n\n# RPM \"Version\" from RPM \"Release\"\n",
        "Line" : 1743,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "# CPACK_RPM_PACKAGE_ARCHITECTURE (mandatory)\n",
        "Line" : 1749,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# CPACK_RPM_PACKAGE_RELEASE\n\n# The RPM release is the numbering of the RPM package ITSELF\n\n# this is the version of the PACKAGING and NOT the version\n\n# of the CONTENT of the package.\n\n# You may well need to generate a new RPM package release\n\n# without changing the version of the packaged software.\n\n# This is the case when the packaging is buggy (not) the software :=)\n\n# If not set, 1 is a good candidate\n",
        "Line" : 1776,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# CPACK_RPM_PACKAGE_LICENSE\n",
        "Line" : 1792,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# CPACK_RPM_PACKAGE_GROUP\n",
        "Line" : 1797,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# CPACK_RPM_PACKAGE_VENDOR\n",
        "Line" : 1808,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# CPACK_RPM_PACKAGE_SOURCE\n\n# The name of the source tarball in case we generate a source RPM\n",
        "Line" : 1817,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "# CPACK_RPM_PACKAGE_DESCRIPTION\n\n# The variable content may be either\n\n#   - explicitly given by the user or\n\n#   - filled with the content of CPACK_PACKAGE_DESCRIPTION_FILE\n\n#     if it is defined\n\n#   - set to a default value\n\n#\n",
        "Line" : 1820,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# CPACK_RPM_COMPRESSION_TYPE\n\n#\n",
        "Line" : 1843,
        "CharPositionInLine" : 2
      },
      "73" : {
        "Text" : "# kept for back compatibility (provided external RPM spec files)\n",
        "Line" : 1874,
        "CharPositionInLine" : 72
      },
      "74" : {
        "Text" : "# disable relocatable option if building source RPM\n",
        "Line" : 1885,
        "CharPositionInLine" : 45
      },
      "75" : {
        "Text" : "# Check if additional fields for RPM spec header are given\n\n# There may be some COMPONENT specific variables as well\n\n# If component specific var is not provided we use the global one\n\n# for each component\n",
        "Line" : 1894,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# Prefix can be replaced by Prefixes but the old version stil works so we'll ignore it for now\n\n# Requires* is a special case because it gets transformed to Requires(pre/post/preun/postun)\n\n# Auto* is a special case because the tags can not be queried by querytags rpmbuild flag\n",
        "Line" : 1912,
        "CharPositionInLine" : 8
      },
      "77" : {
        "Text" : "# Treat the RPM Spec keyword iff it has been properly defined\n",
        "Line" : 1931,
        "CharPositionInLine" : 4
      },
      "78" : {
        "Text" : "# Transform NAME --> Name e.g. PROVIDES --> Provides\n\n# The Upper-case first letter and lowercase tail is the\n\n# appropriate value required in the final RPM spec file.\n",
        "Line" : 1933,
        "CharPositionInLine" : 6
      },
      "79" : {
        "Text" : "# The following keywords require parentheses around the \"pre\" or \"post\" suffix in the final RPM spec file.\n",
        "Line" : 1940,
        "CharPositionInLine" : 6
      },
      "80" : {
        "Text" : "# CPACK_RPM_SPEC_INSTALL_POST\n\n# May be used to define a RPM post intallation script\n\n# for example setting it to \"/bin/true\" may prevent\n\n# rpmbuild from stripping binaries.\n",
        "Line" : 1955,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# CPACK_RPM_POST_INSTALL_SCRIPT_FILE (or CPACK_RPM_<COMPONENT>_POST_INSTALL_SCRIPT_FILE)\n\n# CPACK_RPM_POST_UNINSTALL_SCRIPT_FILE (or CPACK_RPM_<COMPONENT>_POST_UNINSTALL_SCRIPT_FILE)\n\n# May be used to embed a post (un)installation script in the spec file.\n\n# The refered script file(s) will be read and directly\n\n# put after the %post or %postun section\n\n# ----------------------------------------------------------------\n\n# CPACK_RPM_PRE_INSTALL_SCRIPT_FILE (or CPACK_RPM_<COMPONENT>_PRE_INSTALL_SCRIPT_FILE)\n\n# CPACK_RPM_PRE_UNINSTALL_SCRIPT_FILE (or CPACK_RPM_<COMPONENT>_PRE_UNINSTALL_SCRIPT_FILE)\n\n# May be used to embed a pre (un)installation script in the spec file.\n\n# The refered script file(s) will be read and directly\n\n# put after the %pre or %preun section\n",
        "Line" : 1966,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# Handle file if it has been specified\n",
        "Line" : 1988,
        "CharPositionInLine" : 6
      },
      "83" : {
        "Text" : "# reset SPEC var value if no file has been specified\n\n# (either globally or component-wise)\n",
        "Line" : 1997,
        "CharPositionInLine" : 8
      },
      "84" : {
        "Text" : "# CPACK_RPM_CHANGELOG_FILE\n\n# May be used to embed a changelog in the spec file.\n\n# The refered file will be read and directly put after the %changelog section\n",
        "Line" : 2004,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# CPACK_RPM_SPEC_MORE_DEFINE\n\n# This is a generated spec rpm file spaceholder\n",
        "Line" : 2017,
        "CharPositionInLine" : 2
      },
      "86" : {
        "Text" : "# Now we may create the RPM build tree structure\n",
        "Line" : 2025,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "# Prepare RPM build tree\n",
        "Line" : 2028,
        "CharPositionInLine" : 2
      },
      "88" : {
        "Text" : "# it seems rpmbuild can't handle spaces in the path\n\n# neither escaping (as below) nor putting quotes around the path seem to help\n\n#string(REGEX REPLACE \" \" \"\\\\\\\\ \" CPACK_RPM_DIRECTORY \"${CPACK_TOPLEVEL_DIRECTORY}\")\n",
        "Line" : 2037,
        "CharPositionInLine" : 2
      },
      "89" : {
        "Text" : "# In component case, put CPACK_ABSOLUTE_DESTINATION_FILES_<COMPONENT>\n\n#                   into CPACK_ABSOLUTE_DESTINATION_FILES_INTERNAL\n\n#         otherwise, put CPACK_ABSOLUTE_DESTINATION_FILES\n\n# This must be done BEFORE the CPACK_ABSOLUTE_DESTINATION_FILES_INTERNAL handling\n",
        "Line" : 2044,
        "CharPositionInLine" : 2
      },
      "90" : {
        "Text" : "# In component case, set CPACK_RPM_USER_FILELIST_INTERNAL with CPACK_RPM_<COMPONENT>_USER_FILELIST.\n",
        "Line" : 2065,
        "CharPositionInLine" : 2
      },
      "91" : {
        "Text" : "# Handle user specified file line list in CPACK_RPM_USER_FILELIST_INTERNAL\n\n# Remove those files from CPACK_ABSOLUTE_DESTINATION_FILES_INTERNAL\n\n#                      or CPACK_RPM_INSTALL_FILES,\n\n# hence it must be done before these auto-generated lists are processed.\n",
        "Line" : 2080,
        "CharPositionInLine" : 2
      },
      "92" : {
        "Text" : "# Create CMake list from CPACK_RPM_INSTALL_FILES\n",
        "Line" : 2089,
        "CharPositionInLine" : 4
      },
      "93" : {
        "Text" : "# Rebuild the user list file\n",
        "Line" : 2108,
        "CharPositionInLine" : 6
      },
      "94" : {
        "Text" : "# Remove from CPACK_RPM_INSTALL_FILES and CPACK_ABSOLUTE_DESTINATION_FILES_INTERNAL\n",
        "Line" : 2111,
        "CharPositionInLine" : 6
      },
      "95" : {
        "Text" : "# ABSOLUTE destination files list may not exists at all\n",
        "Line" : 2113,
        "CharPositionInLine" : 6
      },
      "96" : {
        "Text" : "# Rebuild CPACK_RPM_INSTALL_FILES\n",
        "Line" : 2119,
        "CharPositionInLine" : 4
      },
      "97" : {
        "Text" : "# Remove trailing space\n",
        "Line" : 2132,
        "CharPositionInLine" : 4
      },
      "98" : {
        "Text" : "# Transform endline separated - string into CMake List\n",
        "Line" : 2134,
        "CharPositionInLine" : 4
      },
      "99" : {
        "Text" : "# Remove unecessary quotes\n",
        "Line" : 2136,
        "CharPositionInLine" : 4
      },
      "100" : {
        "Text" : "# Remove ABSOLUTE install file from INSTALL FILE LIST\n",
        "Line" : 2138,
        "CharPositionInLine" : 4
      },
      "101" : {
        "Text" : "# Rebuild INSTALL_FILES\n",
        "Line" : 2140,
        "CharPositionInLine" : 4
      },
      "102" : {
        "Text" : "# Build ABSOLUTE_INSTALL_FILES\n",
        "Line" : 2145,
        "CharPositionInLine" : 4
      },
      "103" : {
        "Text" : "# reset vars in order to avoid leakage of value(s) from one component to another\n",
        "Line" : 2155,
        "CharPositionInLine" : 4
      },
      "104" : {
        "Text" : "# handle cases where path contains extra slashes (e.g. /a//b/ instead of\n\n# /a/b)\n",
        "Line" : 2172,
        "CharPositionInLine" : 4
      },
      "105" : {
        "Text" : "# this part is only required by components packaging - with monolithic\n\n# packages we can be certain that there are no other components present\n\n# so CPACK_RPM_DEBUGINFO_SINGLE_PACKAGE is a noop\n",
        "Line" : 2182,
        "CharPositionInLine" : 8
      },
      "106" : {
        "Text" : "# only add current package files to debuginfo list if debuginfo\n\n# generation is enabled for current package\n",
        "Line" : 2186,
        "CharPositionInLine" : 10
      },
      "107" : {
        "Text" : "# if there were other components/groups so we need to move files from them\n\n# to current component otherwise those files won't be found\n",
        "Line" : 2202,
        "CharPositionInLine" : 8
      },
      "108" : {
        "Text" : "# skip current component\n",
        "Line" : 2210,
        "CharPositionInLine" : 12
      },
      "109" : {
        "Text" : "# check that we are not overriding an existing file that doesn't\n\n# match the file that we want to copy\n",
        "Line" : 2226,
        "CharPositionInLine" : 12
      },
      "110" : {
        "Text" : "# Prepare install files\n",
        "Line" : 2286,
        "CharPositionInLine" : 2
      },
      "111" : {
        "Text" : "# set default user and group\n",
        "Line" : 2294,
        "CharPositionInLine" : 2
      },
      "112" : {
        "Text" : "# set default file and dir permissions\n",
        "Line" : 2305,
        "CharPositionInLine" : 2
      },
      "113" : {
        "Text" : "# The name of the final spec file to be used by rpmbuild\n",
        "Line" : 2318,
        "CharPositionInLine" : 2
      },
      "114" : {
        "Text" : "# Print out some debug information if we were asked for that\n",
        "Line" : 2321,
        "CharPositionInLine" : 2
      },
      "115" : {
        "Text" : "#\n\n# USER generated/provided spec file handling.\n\n#\n",
        "Line" : 2334,
        "CharPositionInLine" : 2
      },
      "116" : {
        "Text" : "# We can have a component specific spec file.\n",
        "Line" : 2338,
        "CharPositionInLine" : 2
      },
      "117" : {
        "Text" : "# old file name format for back compatibility\n",
        "Line" : 2359,
        "CharPositionInLine" : 6
      },
      "118" : {
        "Text" : "# this is the main component so ignore the component filename part\n",
        "Line" : 2364,
        "CharPositionInLine" : 8
      },
      "119" : {
        "Text" : "# else example:\n\n#set(CPACK_RPM_FILE_NAME \"${CPACK_RPM_PACKAGE_NAME}-${CPACK_RPM_PACKAGE_VERSION}-${CPACK_RPM_PACKAGE_RELEASE}-${CPACK_RPM_PACKAGE_ARCHITECTURE}.rpm\")\n",
        "Line" : 2370,
        "CharPositionInLine" : 4
      },
      "120" : {
        "Text" : "# source rpm\n",
        "Line" : 2383,
        "CharPositionInLine" : 32
      },
      "121" : {
        "Text" : "# Disable debuginfo packages - srpm generates invalid packages due to\n\n# releasing controll to cpack to generate binary packages.\n\n# Note however that this doesn't prevent cpack to generate debuginfo\n\n# packages when run from srpm with --rebuild.\n",
        "Line" : 2396,
        "CharPositionInLine" : 4
      },
      "122" : {
        "Text" : "# %{?_smp_mflags} -> -j option\n",
        "Line" : 2412,
        "CharPositionInLine" : 22
      },
      "123" : {
        "Text" : "# binary rpm with single debuginfo package\n",
        "Line" : 2474,
        "CharPositionInLine" : 30
      },
      "124" : {
        "Text" : "# binary rpm\n",
        "Line" : 2512,
        "CharPositionInLine" : 10
      },
      "125" : {
        "Text" : "# find generated spec file and take its name\n",
        "Line" : 2514,
        "CharPositionInLine" : 6
      },
      "126" : {
        "Text" : "# We should generate a USER spec file template:\n\n#  - either because the user asked for it : CPACK_RPM_GENERATE_USER_BINARY_SPECFILE_TEMPLATE\n\n#  - or the user did not provide one : NOT CPACK_RPM_USER_BINARY_SPECFILE\n",
        "Line" : 2523,
        "CharPositionInLine" : 4
      },
      "127" : {
        "Text" : "# Stop here if we were asked to only generate a template USER spec file\n\n# The generated file may then be used as a template by user who wants\n\n# to customize their own spec file.\n",
        "Line" : 2614,
        "CharPositionInLine" : 4
      },
      "128" : {
        "Text" : "# After that we may either use a user provided spec file\n\n# or generate one using appropriate variables value.\n",
        "Line" : 2622,
        "CharPositionInLine" : 2
      },
      "129" : {
        "Text" : "# User may have specified SPECFILE just use it\n",
        "Line" : 2625,
        "CharPositionInLine" : 4
      },
      "130" : {
        "Text" : "# The user provided file is processed for @var replacement\n",
        "Line" : 2627,
        "CharPositionInLine" : 4
      },
      "131" : {
        "Text" : "# No User specified spec file, will use the generated spec file\n",
        "Line" : 2630,
        "CharPositionInLine" : 4
      },
      "132" : {
        "Text" : "# Note the just created file is processed for @var replacement\n",
        "Line" : 2632,
        "CharPositionInLine" : 4
      },
      "133" : {
        "Text" : "# generate package\n",
        "Line" : 2636,
        "CharPositionInLine" : 30
      },
      "134" : {
        "Text" : "# Now call rpmbuild using the SPECFILE\n",
        "Line" : 2638,
        "CharPositionInLine" : 6
      },
      "135" : {
        "Text" : "# find generated rpm files and take their names\n",
        "Line" : 2664,
        "CharPositionInLine" : 4
      },
      "136" : {
        "Text" : "# Tell file(GLOB_RECURSE) not to follow directory symlinks\n\n# even if the project does not set this policy to NEW.\n",
        "Line" : 2666,
        "CharPositionInLine" : 6
      },
      "137" : {
        "Text" : "# check if other files have to be renamed\n",
        "Line" : 2701,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 138
    },
    "deps/src/cmake-3.13.4/Modules/CPackWIX.cmake" : {
      "ObjectId" : "1dc37d415fc0e20e679f442e78a86bffbc3507f5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CPackWIX\n\n# --------\n\n#\n\n# CPack WiX generator specific options\n\n#\n\n# Variables specific to CPack WiX generator\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# The following variables are specific to the installers built on\n\n# Windows using WiX.\n\n#\n\n# .. variable:: CPACK_WIX_UPGRADE_GUID\n\n#\n\n#  Upgrade GUID (``Product/@UpgradeCode``)\n\n#\n\n#  Will be automatically generated unless explicitly provided.\n\n#\n\n#  It should be explicitly set to a constant generated globally unique\n\n#  identifier (GUID) to allow your installers to replace existing\n\n#  installations that use the same GUID.\n\n#\n\n#  You may for example explicitly set this variable in your\n\n#  CMakeLists.txt to the value that has been generated per default.  You\n\n#  should not use GUIDs that you did not generate yourself or which may\n\n#  belong to other projects.\n\n#\n\n#  A GUID shall have the following fixed length syntax::\n\n#\n\n#   XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n\n#\n\n#  (each X represents an uppercase hexadecimal digit)\n\n#\n\n# .. variable:: CPACK_WIX_PRODUCT_GUID\n\n#\n\n#  Product GUID (``Product/@Id``)\n\n#\n\n#  Will be automatically generated unless explicitly provided.\n\n#\n\n#  If explicitly provided this will set the Product Id of your installer.\n\n#\n\n#  The installer will abort if it detects a pre-existing installation that\n\n#  uses the same GUID.\n\n#\n\n#  The GUID shall use the syntax described for CPACK_WIX_UPGRADE_GUID.\n\n#\n\n# .. variable:: CPACK_WIX_LICENSE_RTF\n\n#\n\n#  RTF License File\n\n#\n\n#  If CPACK_RESOURCE_FILE_LICENSE has an .rtf extension it is used as-is.\n\n#\n\n#  If CPACK_RESOURCE_FILE_LICENSE has an .txt extension it is implicitly\n\n#  converted to RTF by the WiX Generator.\n\n#  The expected encoding of the .txt file is UTF-8.\n\n#\n\n#  With CPACK_WIX_LICENSE_RTF you can override the license file used by the\n\n#  WiX Generator in case CPACK_RESOURCE_FILE_LICENSE is in an unsupported\n\n#  format or the .txt -> .rtf conversion does not work as expected.\n\n#\n\n# .. variable:: CPACK_WIX_PRODUCT_ICON\n\n#\n\n#  The Icon shown next to the program name in Add/Remove programs.\n\n#\n\n#  If set, this icon is used in place of the default icon.\n\n#\n\n# .. variable:: CPACK_WIX_UI_REF\n\n#\n\n#  This variable allows you to override the Id of the ``<UIRef>`` element\n\n#  in the WiX template.\n\n#\n\n#  The default is ``WixUI_InstallDir`` in case no CPack components have\n\n#  been defined and ``WixUI_FeatureTree`` otherwise.\n\n#\n\n# .. variable:: CPACK_WIX_UI_BANNER\n\n#\n\n#  The bitmap will appear at the top of all installer pages other than the\n\n#  welcome and completion dialogs.\n\n#\n\n#  If set, this image will replace the default banner image.\n\n#\n\n#  This image must be 493 by 58 pixels.\n\n#\n\n# .. variable:: CPACK_WIX_UI_DIALOG\n\n#\n\n#  Background bitmap used on the welcome and completion dialogs.\n\n#\n\n#  If this variable is set, the installer will replace the default dialog\n\n#  image.\n\n#\n\n#  This image must be 493 by 312 pixels.\n\n#\n\n# .. variable:: CPACK_WIX_PROGRAM_MENU_FOLDER\n\n#\n\n#  Start menu folder name for launcher.\n\n#\n\n#  If this variable is not set, it will be initialized with CPACK_PACKAGE_NAME\n\n#\n\n# .. variable:: CPACK_WIX_CULTURES\n\n#\n\n#  Language(s) of the installer\n\n#\n\n#  Languages are compiled into the WixUI extension library.  To use them,\n\n#  simply provide the name of the culture.  If you specify more than one\n\n#  culture identifier in a comma or semicolon delimited list, the first one\n\n#  that is found will be used.  You can find a list of supported languages at:\n\n#  http://wix.sourceforge.net/manual-wix3/WixUI_localization.htm\n\n#\n\n# .. variable:: CPACK_WIX_TEMPLATE\n\n#\n\n#  Template file for WiX generation\n\n#\n\n#  If this variable is set, the specified template will be used to generate\n\n#  the WiX wxs file.  This should be used if further customization of the\n\n#  output is required.\n\n#\n\n#  If this variable is not set, the default MSI template included with CMake\n\n#  will be used.\n\n#\n\n# .. variable:: CPACK_WIX_PATCH_FILE\n\n#\n\n#  Optional list of XML files with fragments to be inserted into\n\n#  generated WiX sources\n\n#\n\n#  This optional variable can be used to specify an XML file that the\n\n#  WiX generator will use to inject fragments into its generated\n\n#  source files.\n\n#\n\n#  Patch files understood by the CPack WiX generator\n\n#  roughly follow this RELAX NG compact schema:\n\n#\n\n#  .. code-block:: none\n\n#\n\n#     start = CPackWiXPatch\n\n#\n\n#     CPackWiXPatch = element CPackWiXPatch { CPackWiXFragment* }\n\n#\n\n#     CPackWiXFragment = element CPackWiXFragment\n\n#     {\n\n#         attribute Id { string },\n\n#         fragmentContent*\n\n#     }\n\n#\n\n#     fragmentContent = element * - CPackWiXFragment\n\n#     {\n\n#         (attribute * { text } | text | fragmentContent)*\n\n#     }\n\n#\n\n#  Currently fragments can be injected into most\n\n#  Component, File, Directory and Feature elements.\n\n#\n\n#  The following additional special Ids can be used:\n\n#\n\n#  * ``#PRODUCT`` for the ``<Product>`` element.\n\n#  * ``#PRODUCTFEATURE`` for the root ``<Feature>`` element.\n\n#\n\n#  The following example illustrates how this works.\n\n#\n\n#  Given that the WiX generator creates the following XML element:\n\n#\n\n#  .. code-block:: xml\n\n#\n\n#     <Component Id=\"CM_CP_applications.bin.my_libapp.exe\" Guid=\"*\"/>\n\n#\n\n#  The following XML patch file may be used to inject an Environment element\n\n#  into it:\n\n#\n\n#  .. code-block:: xml\n\n#\n\n#     <CPackWiXPatch>\n\n#       <CPackWiXFragment Id=\"CM_CP_applications.bin.my_libapp.exe\">\n\n#         <Environment Id=\"MyEnvironment\" Action=\"set\"\n\n#           Name=\"MyVariableName\" Value=\"MyVariableValue\"/>\n\n#       </CPackWiXFragment>\n\n#     </CPackWiXPatch>\n\n#\n\n# .. variable:: CPACK_WIX_EXTRA_SOURCES\n\n#\n\n#  Extra WiX source files\n\n#\n\n#  This variable provides an optional list of extra WiX source files (.wxs)\n\n#  that should be compiled and linked.  The full path to source files is\n\n#  required.\n\n#\n\n# .. variable:: CPACK_WIX_EXTRA_OBJECTS\n\n#\n\n#  Extra WiX object files or libraries\n\n#\n\n#  This variable provides an optional list of extra WiX object (.wixobj)\n\n#  and/or WiX library (.wixlib) files.  The full path to objects and libraries\n\n#  is required.\n\n#\n\n# .. variable:: CPACK_WIX_EXTENSIONS\n\n#\n\n#  This variable provides a list of additional extensions for the WiX\n\n#  tools light and candle.\n\n#\n\n# .. variable:: CPACK_WIX_<TOOL>_EXTENSIONS\n\n#\n\n#  This is the tool specific version of CPACK_WIX_EXTENSIONS.\n\n#  ``<TOOL>`` can be either LIGHT or CANDLE.\n\n#\n\n# .. variable:: CPACK_WIX_<TOOL>_EXTRA_FLAGS\n\n#\n\n#  This list variable allows you to pass additional\n\n#  flags to the WiX tool ``<TOOL>``.\n\n#\n\n#  Use it at your own risk.\n\n#  Future versions of CPack may generate flags which may be in conflict\n\n#  with your own flags.\n\n#\n\n#  ``<TOOL>`` can be either LIGHT or CANDLE.\n\n#\n\n# .. variable:: CPACK_WIX_CMAKE_PACKAGE_REGISTRY\n\n#\n\n#  If this variable is set the generated installer will create\n\n#  an entry in the windows registry key\n\n#  ``HKEY_LOCAL_MACHINE\\Software\\Kitware\\CMake\\Packages\\<package>``\n\n#  The value for ``<package>`` is provided by this variable.\n\n#\n\n#  Assuming you also install a CMake configuration file this will\n\n#  allow other CMake projects to find your package with\n\n#  the :command:`find_package` command.\n\n#\n\n# .. variable:: CPACK_WIX_PROPERTY_<PROPERTY>\n\n#\n\n#  This variable can be used to provide a value for\n\n#  the Windows Installer property ``<PROPERTY>``\n\n#\n\n#  The following list contains some example properties that can be used to\n\n#  customize information under\n\n#  \"Programs and Features\" (also known as \"Add or Remove Programs\")\n\n#\n\n#  * ARPCOMMENTS - Comments\n\n#  * ARPHELPLINK - Help and support information URL\n\n#  * ARPURLINFOABOUT - General information URL\n\n#  * ARPURLUPDATEINFO - Update information URL\n\n#  * ARPHELPTELEPHONE - Help and support telephone number\n\n#  * ARPSIZE - Size (in kilobytes) of the application\n\n#\n\n# .. variable:: CPACK_WIX_ROOT_FEATURE_TITLE\n\n#\n\n#  Sets the name of the root install feature in the WIX installer. Same as\n\n#  CPACK_COMPONENT_<compName>_DISPLAY_NAME for components.\n\n#\n\n# .. variable:: CPACK_WIX_ROOT_FEATURE_DESCRIPTION\n\n#\n\n#  Sets the description of the root install feature in the WIX installer. Same as\n\n#  CPACK_COMPONENT_<compName>_DESCRIPTION for components.\n\n#\n\n# .. variable:: CPACK_WIX_SKIP_PROGRAM_FOLDER\n\n#\n\n#  If this variable is set to true, the default install location\n\n#  of the generated package will be CPACK_PACKAGE_INSTALL_DIRECTORY directly.\n\n#  The install location will not be located relatively below\n\n#  ProgramFiles or ProgramFiles64.\n\n#\n\n#   .. note::\n\n#     Installers created with this feature do not take differences\n\n#     between the system on which the installer is created\n\n#     and the system on which the installer might be used into account.\n\n#\n\n#     It is therefor possible that the installer e.g. might try to install\n\n#     onto a drive that is unavailable or unintended or a path that does not\n\n#     follow the localization or convention of the system on which the\n\n#     installation is performed.\n\n#\n\n# .. variable:: CPACK_WIX_ROOT_FOLDER_ID\n\n#\n\n#  This variable allows specification of a custom root folder ID.\n\n#  The generator specific ``<64>`` token can be used for\n\n#  folder IDs that come in 32-bit and 64-bit variants.\n\n#  In 32-bit builds the token will expand empty while in 64-bit builds\n\n#  it will expand to ``64``.\n\n#\n\n#  When unset generated installers will default installing to\n\n#  ``ProgramFiles<64>Folder``.\n\n#\n\n# .. variable:: CPACK_WIX_ROOT\n\n#\n\n#  This variable can optionally be set to the root directory\n\n#  of a custom WiX Toolset installation.\n\n#\n\n#  When unspecified CPack will try to locate a WiX Toolset\n\n#  installation via the ``WIX`` environment variable instead.\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CPackZIP.cmake" : {
      "ObjectId" : "f619de400cf68ec76727972adee4d069692e69f4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/CSharpUtilities.cmake" : {
      "ObjectId" : "6a4b5c7f7be6a2f1fc934c82843f207b4383e376",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nCSharpUtilities\n---------------\n\nFunctions to make configuration of CSharp/.NET targets easier.\n\nA collection of CMake utility functions useful for dealing with CSharp\ntargets for Visual Studio generators from version 2010 and later.\n\nThe following functions are provided by this module:\n\n**Main functions**\n\n- :command:`csharp_set_windows_forms_properties`\n- :command:`csharp_set_designer_cs_properties`\n- :command:`csharp_set_xaml_cs_properties`\n\n**Helper functions**\n\n- :command:`csharp_get_filename_keys`\n- :command:`csharp_get_filename_key_base`\n- :command:`csharp_get_dependentupon_name`\n\nMain functions provided by the module\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. command:: csharp_set_windows_forms_properties\n\n  Sets source file properties for use of Windows Forms. Use this, if your CSharp\n  target uses Windows Forms::\n\n    csharp_set_windows_forms_properties([<file1> [<file2> [...]]])\n\n  ``<fileN>``\n    List of all source files which are relevant for setting the\n    :prop_sf:`VS_CSHARP_<tagname>` properties (including ``.cs``, ``.resx`` and\n    ``.Designer.cs`` extensions).\n\n  In the list of all given files for all files ending with ``.Designer.cs`` and\n  ``.resx`` is searched.  For every *designer* or *resource* file a file with the\n  same base name but only ``.cs`` as extension is searched.  If this is found, the\n  :prop_sf:`VS_CSHARP_<tagname>` properties are set as follows:\n\n  for the **.cs** file:\n   - VS_CSHARP_SubType \"Form\"\n\n  for the **.Designer.cs** file (if it exists):\n   - VS_CSHARP_DependentUpon <cs-filename>\n   - VS_CSHARP_DesignTime \"\" (delete tag if previously defined)\n   - VS_CSHARP_AutoGen \"\"(delete tag if previously defined)\n\n  for the **.resx** file (if it exists):\n   - VS_RESOURCE_GENERATOR \"\" (delete tag if previously defined)\n   - VS_CSHARP_DependentUpon <cs-filename>\n   - VS_CSHARP_SubType \"Designer\"\n\n.. command:: csharp_set_designer_cs_properties\n\n  Sets source file properties of ``.Designer.cs`` files depending on\n  sibling filenames. Use this, if your CSharp target does **not**\n  use Windows Forms (for Windows Forms use\n  :command:`csharp_set_designer_cs_properties` instead)::\n\n    csharp_set_designer_cs_properties([<file1> [<file2> [...]]])\n\n  ``<fileN>``\n    List of all source files which are relevant for setting the\n    :prop_sf:`VS_CSHARP_<tagname>` properties (including ``.cs``,\n    ``.resx``, ``.settings`` and ``.Designer.cs`` extensions).\n\n  In the list of all given files for all files ending with\n  ``.Designer.cs`` is searched. For every *designer* file all files\n  with the same base name but different extensions are searched. If\n  a match is found, the source file properties of the *designer* file\n  are set depending on the extension of the matched file:\n\n  if match is **.resx** file:\n   - VS_CSHARP_AutoGen \"True\"\n   - VS_CSHARP_DesignTime \"True\"\n   - VS_CSHARP_DependentUpon <resx-filename>\n\n  if match is **.cs** file:\n   - VS_CSHARP_DependentUpon <cs-filename>\n\n  if match is **.settings** file:\n   - VS_CSHARP_AutoGen \"True\"\n   - VS_CSHARP_DesignTimeSharedInput \"True\"\n   - VS_CSHARP_DependentUpon <settings-filename>\n\n.. note::\n\n    Because the source file properties of the ``.Designer.cs`` file are set according\n    to the found matches and every match sets the **VS_CSHARP_DependentUpon**\n    property, there should only be one match for each ``Designer.cs`` file.\n\n.. command:: csharp_set_xaml_cs_properties\n\n  Sets source file properties for use of Windows Presentation Foundation (WPF) and\n  XAML. Use this, if your CSharp target uses WPF/XAML::\n\n    csharp_set_xaml_cs_properties([<file1> [<file2> [...]]])\n\n  ``<fileN>``\n    List of all source files which are relevant for setting the\n    :prop_sf:`VS_CSHARP_<tagname>` properties (including ``.cs``,\n    ``.xaml``, and ``.xaml.cs`` extensions).\n\n  In the list of all given files for all files ending with\n  ``.xaml.cs`` is searched. For every *xaml-cs* file, a file\n  with the same base name but extension ``.xaml`` is searched.\n  If a match is found, the source file properties of the ``.xaml.cs``\n  file are set:\n\n   - VS_CSHARP_DependentUpon <xaml-filename>\n\nHelper functions which are used by the above ones\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. command:: csharp_get_filename_keys\n\n  Helper function which computes a list of key values to identify\n  source files independently of relative/absolute paths given in cmake\n  and eliminates case sensitivity::\n\n    csharp_get_filename_keys(OUT [<file1> [<file2> [...]]])\n\n  ``OUT``\n    Name of the variable in which the list of keys is stored\n\n  ``<fileN>``\n    filename(s) as given to to CSharp target using :command:`add_library`\n    or :command:`add_executable`\n\n  In some way the function applies a canonicalization to the source names.\n  This is necessary to find file matches if the files have been added to\n  the target with different directory prefixes:\n\n  .. code-block:: cmake\n\n    add_library(lib\n      myfile.cs\n      ${CMAKE_CURRENT_SOURCE_DIR}/myfile.Designer.cs)\n\n    set_source_files_properties(myfile.Designer.cs PROPERTIES\n      VS_CSHARP_DependentUpon myfile.cs)\n\n    # this will fail, because in cmake\n    #  - ${CMAKE_CURRENT_SOURCE_DIR}/myfile.Designer.cs\n    #  - myfile.Designer.cs\n    # are not the same source file. The source file property is not set.\n\n.. command:: csharp_get_filename_key_base\n\n  Returns the full filepath and name **without** extension of a key.\n  KEY is expected to be a key from csharp_get_filename_keys. In BASE\n  the value of KEY without the file extension is returned::\n\n    csharp_get_filename_key_base(BASE KEY)\n\n  ``BASE``\n    Name of the variable with the computed \"base\" of ``KEY``.\n\n  ``KEY``\n    The key of which the base will be computed. Expected to be a\n    upper case full filename.\n\n.. command:: csharp_get_dependentupon_name\n\n  Computes a string which can be used as value for the source file property\n  :prop_sf:`VS_CSHARP_<tagname>` with *target* being ``DependentUpon``::\n\n    csharp_get_dependentupon_name(NAME FILE)\n\n  ``NAME``\n    Name of the variable with the result value\n\n  ``FILE``\n    Filename to convert to ``<DependentUpon>`` value\n\n  Actually this is only the filename without any path given at the moment.\n\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if IN_LIST\n",
        "Line" : 188,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "# set properties of main form file\n",
        "Line" : 221,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# set properties of designer file (if found)\n",
        "Line" : 226,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# set properties of corresponding resource file (if found)\n",
        "Line" : 236,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/CTest.cmake" : {
      "ObjectId" : "2ea931d4a3576bc050cf29406c4ff774b04ff390",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nCTest\n-----\n\nConfigure a project for testing with CTest/CDash\n\nInclude this module in the top CMakeLists.txt file of a project to\nenable testing with CTest and dashboard submissions to CDash::\n\n  project(MyProject)\n  ...\n  include(CTest)\n\nThe module automatically creates a ``BUILD_TESTING`` option that selects\nwhether to enable testing support (``ON`` by default).  After including\nthe module, use code like::\n\n  if(BUILD_TESTING)\n    # ... CMake code to create tests ...\n  endif()\n\nto creating tests when testing is enabled.\n\nTo enable submissions to a CDash server, create a ``CTestConfig.cmake``\nfile at the top of the project with content such as::\n\n  set(CTEST_PROJECT_NAME \"MyProject\")\n  set(CTEST_NIGHTLY_START_TIME \"01:00:00 UTC\")\n  set(CTEST_DROP_METHOD \"http\")\n  set(CTEST_DROP_SITE \"my.cdash.org\")\n  set(CTEST_DROP_LOCATION \"/submit.php?project=MyProject\")\n  set(CTEST_DROP_SITE_CDASH TRUE)\n\n(the CDash server can provide the file to a project administrator who\nconfigures ``MyProject``).  Settings in the config file are shared by\nboth this ``CTest`` module and the :manual:`ctest(1)` command-line\n:ref:`Dashboard Client` mode (``ctest -S``).\n\nWhile building a project for submission to CDash, CTest scans the\nbuild output for errors and warnings and reports them with surrounding\ncontext from the build log.  This generic approach works for all build\ntools, but does not give details about the command invocation that\nproduced a given problem.  One may get more detailed reports by setting\nthe :variable:`CTEST_USE_LAUNCHERS` variable::\n\n  set(CTEST_USE_LAUNCHERS 1)\n\nin the ``CTestConfig.cmake`` file.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# function to turn generator name into a version string\n\n# like vs9 or vs10\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Setup some auxiliary macros\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Make sure testing is enabled\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# the project can have a DartConfig.cmake file\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Dashboard is opened for submissions for a 24 hour period starting at\n\n# the specified NIGHTLY_START_TIME. Time is specified in 24 hour format.\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# set the site name\n",
        "Line" : 190,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# set the build name\n",
        "Line" : 192,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# the build command\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# the default build configuration the ctest build handler will use\n\n# if there is no -C arg given to ctest:\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "deps/src/cmake-3.13.4/Modules/CTestCoverageCollectGCOV.cmake" : {
      "ObjectId" : "1203be4c20ac23af524a5c72491c9eb04c3443f2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CTestCoverageCollectGCOV\n\n# ------------------------\n\n#\n\n# This module provides the ``ctest_coverage_collect_gcov`` function.\n\n#\n\n# This function runs gcov on all .gcda files found in the binary tree\n\n# and packages the resulting .gcov files into a tar file.\n\n# This tarball also contains the following:\n\n#\n\n# * *data.json* defines the source and build directories for use by CDash.\n\n# * *Labels.json* indicates any :prop_sf:`LABELS` that have been set on the\n\n#   source files.\n\n# * The *uncovered* directory holds any uncovered files found by\n\n#   :variable:`CTEST_EXTRA_COVERAGE_GLOB`.\n\n#\n\n# After generating this tar file, it can be sent to CDash for display with the\n\n# :command:`ctest_submit(CDASH_UPLOAD)` command.\n\n#\n\n# .. command:: cdash_coverage_collect_gcov\n\n#\n\n#   ::\n\n#\n\n#     ctest_coverage_collect_gcov(TARBALL <tarfile>\n\n#       [SOURCE <source_dir>][BUILD <build_dir>]\n\n#       [GCOV_COMMAND <gcov_command>]\n\n#       [GCOV_OPTIONS <options>...]\n\n#       )\n\n#\n\n#   Run gcov and package a tar file for CDash.  The options are:\n\n#\n\n#   ``TARBALL <tarfile>``\n\n#     Specify the location of the ``.tar`` file to be created for later\n\n#     upload to CDash.  Relative paths will be interpreted with respect\n\n#     to the top-level build directory.\n\n#\n\n#   ``SOURCE <source_dir>``\n\n#     Specify the top-level source directory for the build.\n\n#     Default is the value of :variable:`CTEST_SOURCE_DIRECTORY`.\n\n#\n\n#   ``BUILD <build_dir>``\n\n#     Specify the top-level build directory for the build.\n\n#     Default is the value of :variable:`CTEST_BINARY_DIRECTORY`.\n\n#\n\n#   ``GCOV_COMMAND <gcov_command>``\n\n#     Specify the full path to the ``gcov`` command on the machine.\n\n#     Default is the value of :variable:`CTEST_COVERAGE_COMMAND`.\n\n#\n\n#   ``GCOV_OPTIONS <options>...``\n\n#     Specify options to be passed to gcov.  The ``gcov`` command\n\n#     is run as ``gcov <options>... -o <gcov-dir> <file>.gcda``.\n\n#     If not specified, the default option is just ``-b``.\n\n#\n\n#   ``GLOB``\n\n#     Recursively search for .gcda files in build_dir rather than\n\n#     determining search locations by reading TargetDirectories.txt.\n\n#\n\n#   ``DELETE``\n\n#     Delete coverage files after they've been packaged into the .tar.\n\n#\n\n#   ``QUIET``\n\n#     Suppress non-error messages that otherwise would have been\n\n#     printed out by this function.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# run gcov on each gcda file in the binary tree\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# if we have gcda files then also grab the labels file for that target\n",
        "Line" : 99,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# look for gcda files in the target directories\n\n# this will be faster and only look where the files will be\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# if we have gcda files then also grab the labels file for that target\n",
        "Line" : 113,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# return early if no coverage files were found\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# setup the dir for the coverage files\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# call gcov on each .gcda file\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# get the directory of the gcda file\n",
        "Line" : 136,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# run gcov, this will produce the .gcov file in the current\n\n# working directory\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# create json file with project information\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# collect the gcov files\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# if CTEST_EXTRA_COVERAGE_GLOB was specified we search for files\n\n# that might be uncovered\n",
        "Line" : 170,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Check if this uncovered file should be excluded.\n",
        "Line" : 222,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Copy from source to binary dir, preserving any intermediate subdirectories.\n",
        "Line" : 237,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Strip leading slash.\n",
        "Line" : 242,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# tar up the coverage info with the same date so that the md5\n\n# sum will be the same for the tar file independent of file time\n\n# stamps\n",
        "Line" : 253,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "deps/src/cmake-3.13.4/Modules/CTestScriptMode.cmake" : {
      "ObjectId" : "658840111fd9642148e2d2f6991f91ecf76d8f83",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CTestScriptMode\n\n# ---------------\n\n#\n\n#\n\n#\n\n# This file is read by ctest in script mode (-S)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Determine the current system, so this information can be used\n\n# in ctest scripts\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Also load the system specific file, which sets up e.g. the search paths.\n\n# This makes the FIND_XXX() calls work much better\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/CTestTargets.cmake" : {
      "ObjectId" : "838fbbfebefcb179ea6a433c69559f785db71a6e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make directories in the binary tree\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use CTest\n\n# configure files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Section 3:\n\n#\n\n# Custom targets to perform dashboard builds and submissions.\n\n# These should NOT need to be modified from project to project.\n\n#\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We need to pass the configuration type on the test command line.\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Add convenience targets.  Do this at most once in case of nested\n\n# projects.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# For all generators add basic testing targets.\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# For Makefile generators add more granular targets.\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Make targets for Experimental builds\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# missing purify\n",
        "Line" : 73,
        "CharPositionInLine" : 10
      },
      "10" : {
        "Text" : "# If requested, add an alias that is the equivalent of the built-in \"test\"\n\n# or \"RUN_TESTS\" target:\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "deps/src/cmake-3.13.4/Modules/CTestUseLaunchers.cmake" : {
      "ObjectId" : "dc90513a9cae65f824a6578f175ab3dfd05f38ad",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CTestUseLaunchers\n\n# -----------------\n\n#\n\n# Set the RULE_LAUNCH_* global properties when CTEST_USE_LAUNCHERS is on.\n\n#\n\n# CTestUseLaunchers is automatically included when you include(CTest).\n\n# However, it is split out into its own module file so projects can use\n\n# the CTEST_USE_LAUNCHERS functionality independently.\n\n#\n\n# To use launchers, set CTEST_USE_LAUNCHERS to ON in a ctest -S\n\n# dashboard script, and then also set it in the cache of the configured\n\n# project.  Both cmake and ctest need to know the value of it for the\n\n# launchers to work properly.  CMake needs to know in order to generate\n\n# proper build rules, and ctest, in order to produce the proper error\n\n# and warning analysis.\n\n#\n\n# For convenience, you may set the ENV variable\n\n# CTEST_USE_LAUNCHERS_DEFAULT in your ctest -S script, too.  Then, as\n\n# long as your CMakeLists uses include(CTest) or\n\n# include(CTestUseLaunchers), it will use the value of the ENV variable\n\n# to initialize a CTEST_USE_LAUNCHERS cache variable.  This cache\n\n# variable initialization only occurs if CTEST_USE_LAUNCHERS is not\n\n# already defined. If CTEST_USE_LAUNCHERS is on in a ctest -S script\n\n# the ctest_configure command will add -DCTEST_USE_LAUNCHERS:BOOL=TRUE\n\n# to the cmake command used to configure the project.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CheckCCompilerFlag.cmake" : {
      "ObjectId" : "9d2c74dbd861b7a206e3813713d1d4347fbd51d0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nCheckCCompilerFlag\n------------------\n\nCheck whether the C compiler supports a given flag.\n\n.. command:: check_c_compiler_flag\n\n  ::\n\n    check_c_compiler_flag(<flag> <var>)\n\n  Check that the ``<flag>`` is accepted by the compiler without\n  a diagnostic.  Stores the result in an internal cache entry\n  named ``<var>``.\n\nThis command temporarily sets the ``CMAKE_REQUIRED_DEFINITIONS`` variable\nand calls the ``check_c_source_compiles`` macro from the\n:module:`CheckCSourceCompiles` module.  See documentation of that\nmodule for a listing of variables that can otherwise modify the build.\n\nA positive result from this check indicates only that the compiler did not\nissue a diagnostic message when given the flag.  Whether the flag has any\neffect or even a specific one is beyond the scope of this module.\n\n.. note::\n  Since the :command:`try_compile` command forwards flags from variables\n  like :variable:`CMAKE_C_FLAGS <CMAKE_<LANG>_FLAGS>`, unknown flags\n  in such variables may cause a false negative for this check.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Normalize locale during test compilation.\n",
        "Line" : 43,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# Some compilers do not fail with a bad flag\n",
        "Line" : 51,
        "CharPositionInLine" : 5
      },
      "4" : {
        "Text" : "# GNU\n",
        "Line" : 52,
        "CharPositionInLine" : 71
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/CheckCSourceCompiles.cmake" : {
      "ObjectId" : "2c4b98defd7d23696803f236cb1e5e665d2bc16e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nCheckCSourceCompiles\n--------------------\n\nCheck if given C source compiles and links into an executable.\n\n.. command:: check_c_source_compiles\n\n  ::\n\n    check_c_source_compiles(code resultVar [FAIL_REGEX regex1 [regex2...]])\n\n  Check that the source supplied in ``code`` can be compiled as a C source\n  file and linked as an executable (so it must contain at least a ``main()``\n  function). The result will be stored in the internal cache variable specified\n  by ``resultVar``, with a boolean true value for success and boolean false for\n  failure. If ``FAIL_REGEX`` is provided, then failure is determined by\n  checking if anything in the output matches any of the specified regular\n  expressions.\n\n  The underlying check is performed by the :command:`try_compile` command. The\n  compile and link commands can be influenced by setting any of the following\n  variables prior to calling ``check_c_source_compiles()``:\n\n  ``CMAKE_REQUIRED_FLAGS``\n    Additional flags to pass to the compiler. Note that the contents of\n    :variable:`CMAKE_C_FLAGS <CMAKE_<LANG>_FLAGS>` and its associated\n    configuration-specific variable are automatically added to the compiler\n    command before the contents of ``CMAKE_REQUIRED_FLAGS``.\n\n  ``CMAKE_REQUIRED_DEFINITIONS``\n    A :ref:`;-list <CMake Language Lists>` of compiler definitions of the form\n    ``-DFOO`` or ``-DFOO=bar``. A definition for the name specified by\n    ``resultVar`` will also be added automatically.\n\n  ``CMAKE_REQUIRED_INCLUDES``\n    A :ref:`;-list <CMake Language Lists>` of header search paths to pass to\n    the compiler. These will be the only header search paths used by\n    ``try_compile()``, i.e. the contents of the :prop_dir:`INCLUDE_DIRECTORIES`\n    directory property will be ignored.\n\n  ``CMAKE_REQUIRED_LIBRARIES``\n    A :ref:`;-list <CMake Language Lists>` of libraries to add to the link\n    command. These can be the name of system libraries or they can be\n    :ref:`Imported Targets <Imported Targets>` (see :command:`try_compile` for\n    further details).\n\n  ``CMAKE_REQUIRED_QUIET``\n    If this variable evaluates to a boolean true value, all status messages\n    associated with the check will be suppressed.\n\n  The check is only performed once, with the result cached in the variable\n  named by ``resultVar``. Every subsequent CMake run will re-use this cached\n  value rather than performing the check again, even if the ``code`` changes.\n  In order to force the check to be re-evaluated, the variable named by\n  ``resultVar`` must be manually removed from the cache.\n\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CheckCSourceRuns.cmake" : {
      "ObjectId" : "d8a88ba542b90ec41389768037dcbf66e24f3e59",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nCheckCSourceRuns\n----------------\n\nCheck if given C source compiles and links into an executable and can\nsubsequently be run.\n\n.. command:: check_c_source_runs\n\n  ::\n\n    check_c_source_runs(code resultVar)\n\n  Check that the source supplied in ``code`` can be compiled as a C source\n  file, linked as an executable and then run. The ``code`` must contain at\n  least a ``main()`` function. If the code could be built and run successfully,\n  the internal cache variable specified by ``resultVar`` will be set to 1,\n  otherwise it will be set to an value that evaluates to boolean false (e.g.\n  an empty string or an error message).\n\n  The underlying check is performed by the :command:`try_run` command. The\n  compile and link commands can be influenced by setting any of the following\n  variables prior to calling ``check_c_source_runs()``:\n\n  ``CMAKE_REQUIRED_FLAGS``\n    Additional flags to pass to the compiler. Note that the contents of\n    :variable:`CMAKE_C_FLAGS <CMAKE_<LANG>_FLAGS>` and its associated\n    configuration-specific variable are automatically added to the compiler\n    command before the contents of ``CMAKE_REQUIRED_FLAGS``.\n\n  ``CMAKE_REQUIRED_DEFINITIONS``\n    A :ref:`;-list <CMake Language Lists>` of compiler definitions of the form\n    ``-DFOO`` or ``-DFOO=bar``. A definition for the name specified by\n    ``resultVar`` will also be added automatically.\n\n  ``CMAKE_REQUIRED_INCLUDES``\n    A :ref:`;-list <CMake Language Lists>` of header search paths to pass to\n    the compiler. These will be the only header search paths used by\n    ``try_run()``, i.e. the contents of the :prop_dir:`INCLUDE_DIRECTORIES`\n    directory property will be ignored.\n\n  ``CMAKE_REQUIRED_LIBRARIES``\n    A :ref:`;-list <CMake Language Lists>` of libraries to add to the link\n    command. These can be the name of system libraries or they can be\n    :ref:`Imported Targets <Imported Targets>` (see :command:`try_run` for\n    further details).\n\n  ``CMAKE_REQUIRED_QUIET``\n    If this variable evaluates to a boolean true value, all status messages\n    associated with the check will be suppressed.\n\n  The check is only performed once, with the result cached in the variable\n  named by ``resultVar``. Every subsequent CMake run will re-use this cached\n  value rather than performing the check again, even if the ``code`` changes.\n  In order to force the check to be re-evaluated, the variable named by\n  ``resultVar`` must be manually removed from the cache.\n\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if it did not compile make the return value fail code of 1\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# if the return value was 0 then it worked\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/CheckCXXCompilerFlag.cmake" : {
      "ObjectId" : "8279af9521824907523965ccd149f934e6ad2743",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nCheckCXXCompilerFlag\n------------------------\n\nCheck whether the CXX compiler supports a given flag.\n\n.. command:: check_cxx_compiler_flag\n\n  ::\n\n    check_cxx_compiler_flag(<flag> <var>)\n\n  Check that the ``<flag>`` is accepted by the compiler without\n  a diagnostic.  Stores the result in an internal cache entry\n  named ``<var>``.\n\nThis command temporarily sets the ``CMAKE_REQUIRED_DEFINITIONS`` variable\nand calls the ``check_cxx_source_compiles`` macro from the\n:module:`CheckCXXSourceCompiles` module.  See documentation of that\nmodule for a listing of variables that can otherwise modify the build.\n\nA positive result from this check indicates only that the compiler did not\nissue a diagnostic message when given the flag.  Whether the flag has any\neffect or even a specific one is beyond the scope of this module.\n\n.. note::\n  Since the :command:`try_compile` command forwards flags from variables\n  like :variable:`CMAKE_CXX_FLAGS <CMAKE_<LANG>_FLAGS>`, unknown flags\n  in such variables may cause a false negative for this check.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Normalize locale during test compilation.\n",
        "Line" : 43,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# Some compilers do not fail with a bad flag\n",
        "Line" : 51,
        "CharPositionInLine" : 5
      },
      "4" : {
        "Text" : "# GNU\n",
        "Line" : 52,
        "CharPositionInLine" : 81
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/CheckCXXSourceCompiles.cmake" : {
      "ObjectId" : "3c2d8fd3da32b527ffa41d24c07ddf9ea141c80a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nCheckCXXSourceCompiles\n----------------------\n\nCheck if given C++ source compiles and links into an executable.\n\n.. command:: check_cxx_source_compiles\n\n  ::\n\n    check_cxx_source_compiles(code resultVar [FAIL_REGEX regex1 [regex2...]])\n\n  Check that the source supplied in ``code`` can be compiled as a C++ source\n  file and linked as an executable (so it must contain at least a ``main()``\n  function). The result will be stored in the internal cache variable specified\n  by ``resultVar``, with a boolean true value for success and boolean false for\n  failure. If ``FAIL_REGEX`` is provided, then failure is determined by\n  checking if anything in the output matches any of the specified regular\n  expressions.\n\n  The underlying check is performed by the :command:`try_compile` command. The\n  compile and link commands can be influenced by setting any of the following\n  variables prior to calling ``check_cxx_source_compiles()``:\n\n  ``CMAKE_REQUIRED_FLAGS``\n    Additional flags to pass to the compiler. Note that the contents of\n    :variable:`CMAKE_CXX_FLAGS <CMAKE_<LANG>_FLAGS>` and its associated\n    configuration-specific variable are automatically added to the compiler\n    command before the contents of ``CMAKE_REQUIRED_FLAGS``.\n\n  ``CMAKE_REQUIRED_DEFINITIONS``\n    A :ref:`;-list <CMake Language Lists>` of compiler definitions of the form\n    ``-DFOO`` or ``-DFOO=bar``. A definition for the name specified by\n    ``resultVar`` will also be added automatically.\n\n  ``CMAKE_REQUIRED_INCLUDES``\n    A :ref:`;-list <CMake Language Lists>` of header search paths to pass to\n    the compiler. These will be the only header search paths used by\n    ``try_compile()``, i.e. the contents of the :prop_dir:`INCLUDE_DIRECTORIES`\n    directory property will be ignored.\n\n  ``CMAKE_REQUIRED_LIBRARIES``\n    A :ref:`;-list <CMake Language Lists>` of libraries to add to the link\n    command. These can be the name of system libraries or they can be\n    :ref:`Imported Targets <Imported Targets>` (see :command:`try_compile` for\n    further details).\n\n  ``CMAKE_REQUIRED_QUIET``\n    If this variable evaluates to a boolean true value, all status messages\n    associated with the check will be suppressed.\n\n  The check is only performed once, with the result cached in the variable\n  named by ``resultVar``. Every subsequent CMake run will re-use this cached\n  value rather than performing the check again, even if the ``code`` changes.\n  In order to force the check to be re-evaluated, the variable named by\n  ``resultVar`` must be manually removed from the cache.\n\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CheckCXXSourceRuns.cmake" : {
      "ObjectId" : "febd46af12ca63cebe65054788bf9443f5d5724c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nCheckCXXSourceRuns\n------------------\n\nCheck if given C++ source compiles and links into an executable and can\nsubsequently be run.\n\n.. command:: check_cxx_source_runs\n\n  ::\n\n    check_cxx_source_runs(code resultVar)\n\n  Check that the source supplied in ``code`` can be compiled as a C++ source\n  file, linked as an executable and then run. The ``code`` must contain at\n  least a ``main()`` function. If the code could be built and run successfully,\n  the internal cache variable specified by ``resultVar`` will be set to 1,\n  otherwise it will be set to an value that evaluates to boolean false (e.g.\n  an empty string or an error message).\n\n  The underlying check is performed by the :command:`try_run` command. The\n  compile and link commands can be influenced by setting any of the following\n  variables prior to calling ``check_cxx_source_runs()``:\n\n  ``CMAKE_REQUIRED_FLAGS``\n    Additional flags to pass to the compiler. Note that the contents of\n    :variable:`CMAKE_CXX_FLAGS <CMAKE_<LANG>_FLAGS>` and its associated\n    configuration-specific variable are automatically added to the compiler\n    command before the contents of ``CMAKE_REQUIRED_FLAGS``.\n\n  ``CMAKE_REQUIRED_DEFINITIONS``\n    A :ref:`;-list <CMake Language Lists>` of compiler definitions of the form\n    ``-DFOO`` or ``-DFOO=bar``. A definition for the name specified by\n    ``resultVar`` will also be added automatically.\n\n  ``CMAKE_REQUIRED_INCLUDES``\n    A :ref:`;-list <CMake Language Lists>` of header search paths to pass to\n    the compiler. These will be the only header search paths used by\n    ``try_run()``, i.e. the contents of the :prop_dir:`INCLUDE_DIRECTORIES`\n    directory property will be ignored.\n\n  ``CMAKE_REQUIRED_LIBRARIES``\n    A :ref:`;-list <CMake Language Lists>` of libraries to add to the link\n    command. These can be the name of system libraries or they can be\n    :ref:`Imported Targets <Imported Targets>` (see :command:`try_run` for\n    further details).\n\n  ``CMAKE_REQUIRED_QUIET``\n    If this variable evaluates to a boolean true value, all status messages\n    associated with the check will be suppressed.\n\n  The check is only performed once, with the result cached in the variable\n  named by ``resultVar``. Every subsequent CMake run will re-use this cached\n  value rather than performing the check again, even if the ``code`` changes.\n  In order to force the check to be re-evaluated, the variable named by\n  ``resultVar`` must be manually removed from the cache.\n\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if it did not compile make the return value fail code of 1\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# if the return value was 0 then it worked\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/CheckCXXSymbolExists.cmake" : {
      "ObjectId" : "117a458082e12f5926e2c61a5bc674cf180d9d05",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CheckCXXSymbolExists\n\n# --------------------\n\n#\n\n# Check if a symbol exists as a function, variable, or macro in C++\n\n#\n\n# CHECK_CXX_SYMBOL_EXISTS(<symbol> <files> <variable>)\n\n#\n\n# Check that the <symbol> is available after including given header\n\n# <files> and store the result in a <variable>.  Specify the list of\n\n# files in one argument as a semicolon-separated list.\n\n# CHECK_CXX_SYMBOL_EXISTS() can be used to check in C++ files, as\n\n# opposed to CHECK_SYMBOL_EXISTS(), which works only for C.\n\n#\n\n# If the header files define the symbol as a macro it is considered\n\n# available and assumed to work.  If the header files declare the symbol\n\n# as a function or variable then the symbol must also be available for\n\n# linking.  If the symbol is a type or enum value it will not be\n\n# recognized (consider using CheckTypeSize or CheckCSourceCompiles).\n\n#\n\n# The following variables may be set before calling this macro to modify\n\n# the way the check is run:\n\n#\n\n# ::\n\n#\n\n#   CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#   CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#   CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#   CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n\n#   CMAKE_REQUIRED_QUIET = execute quietly without messages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CheckFortranCompilerFlag.cmake" : {
      "ObjectId" : "2cb25321e45f7d58a0552a5e2a3210ea5d6e5c27",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nCheckFortranCompilerFlag\n------------------------\n\nCheck whether the Fortran compiler supports a given flag.\n\n.. command:: check_fortran_compiler_flag\n\n  ::\n\n    check_fortran_compiler_flag(<flag> <var>)\n\n  Check that the ``<flag>`` is accepted by the compiler without\n  a diagnostic.  Stores the result in an internal cache entry\n  named ``<var>``.\n\nThis command temporarily sets the ``CMAKE_REQUIRED_DEFINITIONS`` variable\nand calls the ``check_fortran_source_compiles`` macro from the\n:module:`CheckFortranSourceCompiles` module.  See documentation of that\nmodule for a listing of variables that can otherwise modify the build.\n\nA positive result from this check indicates only that the compiler did not\nissue a diagnostic message when given the flag.  Whether the flag has any\neffect or even a specific one is beyond the scope of this module.\n\n.. note::\n  Since the :command:`try_compile` command forwards flags from variables\n  like :variable:`CMAKE_Fortran_FLAGS <CMAKE_<LANG>_FLAGS>`, unknown flags\n  in such variables may cause a false negative for this check.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Normalize locale during test compilation.\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Some compilers do not fail with a bad flag\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# GNU\n",
        "Line" : 52,
        "CharPositionInLine" : 76
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/CheckFortranFunctionExists.cmake" : {
      "ObjectId" : "f3ced93d7c5d9750eeaf25aa10c20f7e1fb7c3ae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CheckFortranFunctionExists\n\n# --------------------------\n\n#\n\n# macro which checks if the Fortran function exists\n\n#\n\n# CHECK_FORTRAN_FUNCTION_EXISTS(FUNCTION VARIABLE)\n\n#\n\n# ::\n\n#\n\n#   FUNCTION - the name of the Fortran function\n\n#   VARIABLE - variable to store the result\n\n#              Will be created as an internal cache variable.\n\n#\n\n#\n\n#\n\n# The following variables may be set before calling this macro to modify\n\n# the way the check is run:\n\n#\n\n# ::\n\n#\n\n#   CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    message(STATUS \"${OUTPUT}\")\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/CheckFortranSourceCompiles.cmake" : {
      "ObjectId" : "d2b0ccaf43d577284fd65f9619da4183c0ded0be",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nCheckFortranSourceCompiles\n--------------------------\n\nCheck if given Fortran source compiles and links into an executable.\n\n.. command:: check_fortran_source_compiles\n\n  ::\n\n    check_fortran_source_compiles(code resultVar\n        [FAIL_REGEX regex1 [regex2...]]\n        [SRC_EXT ext]\n    )\n\n  Check that the source supplied in ``code`` can be compiled as a Fortran\n  source file and linked as an executable (so it must contain at least a\n  ``PROGRAM`` entry point). The result will be stored in the internal cache\n  variable specified by ``resultVar``, with a boolean true value for success\n  and boolean false for failure. If ``FAIL_REGEX`` is provided, then failure is\n  determined by checking if anything in the output matches any of the specified\n  regular expressions.\n\n  By default, the test source file will be given a ``.F`` file extension. The\n  ``SRC_EXT`` option can be used to override this with ``.ext`` instead.\n\n  The underlying check is performed by the :command:`try_compile` command. The\n  compile and link commands can be influenced by setting any of the following\n  variables prior to calling ``check_fortran_source_compiles()``:\n\n  ``CMAKE_REQUIRED_FLAGS``\n    Additional flags to pass to the compiler. Note that the contents of\n    :variable:`CMAKE_Fortran_FLAGS <CMAKE_<LANG>_FLAGS>` and its associated\n    configuration-specific variable are automatically added to the compiler\n    command before the contents of ``CMAKE_REQUIRED_FLAGS``.\n\n  ``CMAKE_REQUIRED_DEFINITIONS``\n    A :ref:`;-list <CMake Language Lists>` of compiler definitions of the form\n    ``-DFOO`` or ``-DFOO=bar``. A definition for the name specified by\n    ``resultVar`` will also be added automatically.\n\n  ``CMAKE_REQUIRED_INCLUDES``\n    A :ref:`;-list <CMake Language Lists>` of header search paths to pass to\n    the compiler. These will be the only header search paths used by\n    ``try_compile()``, i.e. the contents of the :prop_dir:`INCLUDE_DIRECTORIES`\n    directory property will be ignored.\n\n  ``CMAKE_REQUIRED_LIBRARIES``\n    A :ref:`;-list <CMake Language Lists>` of libraries to add to the link\n    command. These can be the name of system libraries or they can be\n    :ref:`Imported Targets <Imported Targets>` (see :command:`try_compile` for\n    further details).\n\n  ``CMAKE_REQUIRED_QUIET``\n    If this variable evaluates to a boolean true value, all status messages\n    associated with the check will be suppressed.\n\n  The check is only performed once, with the result cached in the variable\n  named by ``resultVar``. Every subsequent CMake run will re-use this cached\n  value rather than performing the check again, even if the ``code`` changes.\n  In order to force the check to be re-evaluated, the variable named by\n  ``resultVar`` must be manually removed from the cache.\n\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CheckFunctionExists.cmake" : {
      "ObjectId" : "d00aa8ade9e6f0085812838ce95e7e6c3200f819",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CheckFunctionExists\n\n# -------------------\n\n#\n\n# Check if a C function can be linked::\n\n#\n\n#   check_function_exists(<function> <variable>)\n\n#\n\n# Check that the ``<function>`` is provided by libraries on the system and store\n\n# the result in a ``<variable>``. ``<variable>`` will be created as an internal\n\n# cache variable.\n\n#\n\n# The following variables may be set before calling this macro to modify the\n\n# way the check is run:\n\n#\n\n# ::\n\n#\n\n#   CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#   CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#   CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#   CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n\n#   CMAKE_REQUIRED_QUIET = execute quietly without messages\n\n#\n\n# .. note::\n\n#\n\n#   Prefer using :Module:`CheckSymbolExists` instead of this module,\n\n#   for the following reasons:\n\n#\n\n#   * ``check_function_exists()`` can't detect functions that are inlined\n\n#     in headers or specified as a macro.\n\n#\n\n#   * ``check_function_exists()`` can't detect anything in the 32-bit\n\n#     versions of the Win32 API, because of a mismatch in calling conventions.\n\n#\n\n#   * ``check_function_exists()`` only verifies linking, it does not verify\n\n#     that the function is declared in system headers.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CheckIPOSupported.cmake" : {
      "ObjectId" : "ad8852c069b6dc2c99e7e246c2903bb31f0cd57a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nCheckIPOSupported\n-----------------\n\nCheck whether the compiler supports an interprocedural optimization (IPO/LTO).\nUse this before enabling the :prop_tgt:`INTERPROCEDURAL_OPTIMIZATION` target\nproperty.\n\n.. command:: check_ipo_supported\n\n  ::\n\n    check_ipo_supported([RESULT <result>] [OUTPUT <output>]\n                        [LANGUAGES <lang>...])\n\n  Options are:\n\n  ``RESULT <result>``\n    Set ``<result>`` variable to ``YES`` if IPO is supported by the\n    compiler and ``NO`` otherwise.  If this option is not given then\n    the command will issue a fatal error if IPO is not supported.\n  ``OUTPUT <output>``\n    Set ``<output>`` variable with details about any error.\n  ``LANGUAGES <lang>...``\n    Specify languages whose compilers to check.\n    Languages ``C``, ``CXX``, and ``Fortran`` are supported.\n\nIt makes no sense to use this module when :policy:`CMP0069` is set to ``OLD`` so\nmodule will return error in this case. See policy :policy:`CMP0069` for details.\n\nExamples\n^^^^^^^^\n\n.. code-block:: cmake\n\n  check_ipo_supported() # fatal error if IPO is not supported\n  set_property(TARGET foo PROPERTY INTERPROCEDURAL_OPTIMIZATION TRUE)\n\n.. code-block:: cmake\n\n  # Optional IPO. Do not use IPO if it's not supported by compiler.\n  check_ipo_supported(RESULT result OUTPUT output)\n  if(result)\n    set_property(TARGET foo PROPERTY INTERPROCEDURAL_OPTIMIZATION TRUE)\n  else()\n    message(WARNING \"IPO is not supported: ${output}\")\n  endif()\n\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# cmake_parse_arguments\n",
        "Line" : 54,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : "# X_RESULT - name of the final result variable\n\n# X_OUTPUT - name of the variable with information about error\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Run IPO/LTO test\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use:\n\n# * TRY_COMPILE_PROJECT_NAME\n\n# * CMAKE_VERSION\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Introduce:\n\n# * X_RESULT\n\n# * X_OUTPUT\n\n# * X_LANGUAGES\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# User did not set any languages, use defaults\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Modules/CheckIncludeFile.cmake" : {
      "ObjectId" : "24bc3496400ca45762421a7f4073095dd02f6a70",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CheckIncludeFile\n\n# ----------------\n\n#\n\n# Provides a macro to check if a header file can be included in ``C``.\n\n#\n\n# .. command:: CHECK_INCLUDE_FILE\n\n#\n\n#   ::\n\n#\n\n#     CHECK_INCLUDE_FILE(<include> <variable> [<flags>])\n\n#\n\n#   Check if the given ``<include>`` file may be included in a ``C``\n\n#   source file and store the result in an internal cache entry named\n\n#   ``<variable>``.  The optional third argument may be used to add\n\n#   compilation flags to the check (or use ``CMAKE_REQUIRED_FLAGS`` below).\n\n#\n\n# The following variables may be set before calling this macro to modify\n\n# the way the check is run:\n\n#\n\n# ``CMAKE_REQUIRED_FLAGS``\n\n#   string of compile command line flags\n\n# ``CMAKE_REQUIRED_DEFINITIONS``\n\n#   list of macros to define (-DFOO=bar)\n\n# ``CMAKE_REQUIRED_INCLUDES``\n\n#   list of include directories\n\n# ``CMAKE_REQUIRED_LIBRARIES``\n\n#   A list of libraries to link.  See policy :policy:`CMP0075`.\n\n# ``CMAKE_REQUIRED_QUIET``\n\n#   execute quietly without messages\n\n#\n\n# See the :module:`CheckIncludeFiles` module to check for multiple headers\n\n# at once.  See the :module:`CheckIncludeFileCXX` module to check for headers\n\n# using the ``CXX`` language.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# undocumented, do not use outside of CMake\n",
        "Line" : 63,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/CheckIncludeFileCXX.cmake" : {
      "ObjectId" : "f13d983b6c3f606aa9d86ce37c2c283aa7256608",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CheckIncludeFileCXX\n\n# -------------------\n\n#\n\n# Provides a macro to check if a header file can be included in ``CXX``.\n\n#\n\n# .. command:: CHECK_INCLUDE_FILE_CXX\n\n#\n\n#   ::\n\n#\n\n#     CHECK_INCLUDE_FILE_CXX(<include> <variable> [<flags>])\n\n#\n\n#   Check if the given ``<include>`` file may be included in a ``CXX``\n\n#   source file and store the result in an internal cache entry named\n\n#   ``<variable>``.  The optional third argument may be used to add\n\n#   compilation flags to the check (or use ``CMAKE_REQUIRED_FLAGS`` below).\n\n#\n\n# The following variables may be set before calling this macro to modify\n\n# the way the check is run:\n\n#\n\n# ``CMAKE_REQUIRED_FLAGS``\n\n#   string of compile command line flags\n\n# ``CMAKE_REQUIRED_DEFINITIONS``\n\n#   list of macros to define (-DFOO=bar)\n\n# ``CMAKE_REQUIRED_INCLUDES``\n\n#   list of include directories\n\n# ``CMAKE_REQUIRED_LIBRARIES``\n\n#   A list of libraries to link.  See policy :policy:`CMP0075`.\n\n# ``CMAKE_REQUIRED_QUIET``\n\n#   execute quietly without messages\n\n#\n\n# See modules :module:`CheckIncludeFile` and :module:`CheckIncludeFiles`\n\n# to check for one or more ``C`` headers.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# undocumented, do not use outside of CMake\n",
        "Line" : 62,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/CheckIncludeFiles.cmake" : {
      "ObjectId" : "c689f05e9d5da26bd7cd3b3024090521e1372593",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CheckIncludeFiles\n\n# -----------------\n\n#\n\n# Provides a macro to check if a list of one or more header files can\n\n# be included together.\n\n#\n\n# .. command:: CHECK_INCLUDE_FILES\n\n#\n\n#   ::\n\n#\n\n#     CHECK_INCLUDE_FILES(\"<includes>\" <variable> [LANGUAGE <language>])\n\n#\n\n#   Check if the given ``<includes>`` list may be included together\n\n#   in a source file and store the result in an internal cache\n\n#   entry named ``<variable>``.  Specify the ``<includes>`` argument\n\n#   as a :ref:`;-list <CMake Language Lists>` of header file names.\n\n#\n\n# If LANGUAGE is set, the specified compiler will be used to perform the\n\n# check. Acceptable values are ``C`` and ``CXX``. If not set, the C compiler\n\n# will be used if enabled. If the C compiler is not enabled, the C++\n\n# compiler will be used if enabled.\n\n#\n\n# The following variables may be set before calling this macro to modify\n\n# the way the check is run:\n\n#\n\n# ``CMAKE_REQUIRED_FLAGS``\n\n#   string of compile command line flags\n\n# ``CMAKE_REQUIRED_DEFINITIONS``\n\n#   list of macros to define (-DFOO=bar)\n\n# ``CMAKE_REQUIRED_INCLUDES``\n\n#   list of include directories\n\n# ``CMAKE_REQUIRED_LIBRARIES``\n\n#   A list of libraries to link.  See policy :policy:`CMP0075`.\n\n# ``CMAKE_REQUIRED_QUIET``\n\n#   execute quietly without messages\n\n#\n\n# See modules :module:`CheckIncludeFile` and :module:`CheckIncludeFileCXX`\n\n# to check for a single header file in ``C`` or ``CXX`` languages.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# remove empty elements\n",
        "Line" : 90,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : "# undocumented, do not use outside of CMake\n",
        "Line" : 103,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/CheckLanguage.cmake" : {
      "ObjectId" : "ce92bfe6d59cad9d02a3aef3dfe6442ecd6ddc89",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CheckLanguage\n\n# -------------\n\n#\n\n# Check if a language can be enabled\n\n#\n\n# Usage:\n\n#\n\n# ::\n\n#\n\n#   check_language(<lang>)\n\n#\n\n# where <lang> is a language that may be passed to enable_language()\n\n# such as \"Fortran\".  If CMAKE_<lang>_COMPILER is already defined the\n\n# check does nothing.  Otherwise it tries enabling the language in a\n\n# test project.  The result is cached in CMAKE_<lang>_COMPILER as the\n\n# compiler that was found, or NOTFOUND if the language cannot be\n\n# enabled.\n\n#\n\n# Example:\n\n#\n\n# ::\n\n#\n\n#   check_language(Fortran)\n\n#   if(CMAKE_Fortran_COMPILER)\n\n#     enable_language(Fortran)\n\n#   else()\n\n#     message(STATUS \"No Fortran support\")\n\n#   endif()\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CheckLibraryExists.cmake" : {
      "ObjectId" : "487cc592a30c398fa0f829762ffe1bd5b4021bc0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CheckLibraryExists\n\n# ------------------\n\n#\n\n# Check if the function exists.\n\n#\n\n# CHECK_LIBRARY_EXISTS (LIBRARY FUNCTION LOCATION VARIABLE)\n\n#\n\n# ::\n\n#\n\n#   LIBRARY  - the name of the library you are looking for\n\n#   FUNCTION - the name of the function\n\n#   LOCATION - location where the library should be found\n\n#   VARIABLE - variable to store the result\n\n#              Will be created as an internal cache variable.\n\n#\n\n#\n\n#\n\n# The following variables may be set before calling this macro to modify\n\n# the way the check is run:\n\n#\n\n# ::\n\n#\n\n#   CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#   CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#   CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n\n#   CMAKE_REQUIRED_QUIET = execute quietly without messages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CheckPrototypeDefinition.cmake" : {
      "ObjectId" : "dde077513397bb11ce8eb3f3db90884442315dee",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CheckPrototypeDefinition\n\n# ------------------------\n\n#\n\n# Check if the prototype we expect is correct.\n\n#\n\n# check_prototype_definition(FUNCTION PROTOTYPE RETURN HEADER VARIABLE)\n\n#\n\n# ::\n\n#\n\n#   FUNCTION - The name of the function (used to check if prototype exists)\n\n#   PROTOTYPE- The prototype to check.\n\n#   RETURN - The return value of the function.\n\n#   HEADER - The header files required.\n\n#   VARIABLE - The variable to store the result.\n\n#              Will be created as an internal cache variable.\n\n#\n\n# Example:\n\n#\n\n# ::\n\n#\n\n#   check_prototype_definition(getpwent_r\n\n#    \"struct passwd *getpwent_r(struct passwd *src, char *buf, int buflen)\"\n\n#    \"NULL\"\n\n#    \"unistd.h;pwd.h\"\n\n#    SOLARIS_GETPWENT_R)\n\n#\n\n# The following variables may be set before calling this macro to modify\n\n# the way the check is run:\n\n#\n\n# ::\n\n#\n\n#   CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#   CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#   CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#   CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n\n#   CMAKE_REQUIRED_QUIET = execute quietly without messages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/CheckSizeOf.cmake" : {
      "ObjectId" : "bd439e10c5c43c25968982471658ffe9d8b896d7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/CheckStructHasMember.cmake" : {
      "ObjectId" : "8689a5cb9ff4094f8e1f6ff8806f690a7dc2344a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CheckStructHasMember\n\n# --------------------\n\n#\n\n# Check if the given struct or class has the specified member variable\n\n#\n\n# ::\n\n#\n\n#  CHECK_STRUCT_HAS_MEMBER(<struct> <member> <header> <variable>\n\n#                          [LANGUAGE <language>])\n\n#\n\n# ::\n\n#\n\n#   <struct> - the name of the struct or class you are interested in\n\n#   <member> - the member which existence you want to check\n\n#   <header> - the header(s) where the prototype should be declared\n\n#   <variable> - variable to store the result\n\n#   <language> - the compiler to use (C or CXX)\n\n#\n\n#\n\n#\n\n# The following variables may be set before calling this macro to modify\n\n# the way the check is run:\n\n#\n\n# ::\n\n#\n\n#   CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#   CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#   CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#   CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n\n#   CMAKE_REQUIRED_QUIET = execute quietly without messages\n\n#\n\n#\n\n#\n\n# Example: CHECK_STRUCT_HAS_MEMBER(\"struct timeval\" tv_sec sys/select.h\n\n# HAVE_TIMEVAL_TV_SEC LANGUAGE C)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/CheckSymbolExists.cmake" : {
      "ObjectId" : "3483121dca16864f4e3ec7982fb00f424a2c4ad8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nCheckSymbolExists\n-----------------\n\nProvides a macro to check if a symbol exists as a function, variable,\nor macro in ``C``.\n\n.. command:: check_symbol_exists\n\n  ::\n\n    check_symbol_exists(<symbol> <files> <variable>)\n\n  Check that the ``<symbol>`` is available after including given header\n  ``<files>`` and store the result in a ``<variable>``.  Specify the list\n  of files in one argument as a semicolon-separated list.\n  ``<variable>`` will be created as an internal cache variable.\n\nIf the header files define the symbol as a macro it is considered\navailable and assumed to work.  If the header files declare the symbol\nas a function or variable then the symbol must also be available for\nlinking (so intrinsics may not be detected).\nIf the symbol is a type, enum value, or intrinsic it will not be recognized\n(consider using :module:`CheckTypeSize` or :module:`CheckCSourceCompiles`).\nIf the check needs to be done in C++, consider using\n:module:`CheckCXXSymbolExists` instead.\n\nThe following variables may be set before calling this macro to modify\nthe way the check is run:\n\n``CMAKE_REQUIRED_FLAGS``\n  string of compile command line flags\n``CMAKE_REQUIRED_DEFINITIONS``\n  list of macros to define (-DFOO=bar)\n``CMAKE_REQUIRED_INCLUDES``\n  list of include directories\n``CMAKE_REQUIRED_LIBRARIES``\n  list of libraries to link\n``CMAKE_REQUIRED_QUIET``\n  execute quietly without messages\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if() quoted variables not dereferenced\n",
        "Line" : 49,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/CheckTypeSize.cmake" : {
      "ObjectId" : "2b5deec8184f008254e1754b049109c0b0c8164f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CheckTypeSize\n\n# -------------\n\n#\n\n# Check sizeof a type\n\n#\n\n# ::\n\n#\n\n#   CHECK_TYPE_SIZE(TYPE VARIABLE [BUILTIN_TYPES_ONLY]\n\n#                                 [LANGUAGE <language>])\n\n#\n\n# Check if the type exists and determine its size.  On return,\n\n# \"HAVE_${VARIABLE}\" holds the existence of the type, and \"${VARIABLE}\"\n\n# holds one of the following:\n\n#\n\n# ::\n\n#\n\n#    <size> = type has non-zero size <size>\n\n#    \"0\"    = type has arch-dependent size (see below)\n\n#    \"\"     = type does not exist\n\n#\n\n# Both ``HAVE_${VARIABLE}`` and ``${VARIABLE}`` will be created as internal\n\n# cache variables.\n\n#\n\n# Furthermore, the variable \"${VARIABLE}_CODE\" holds C preprocessor code\n\n# to define the macro \"${VARIABLE}\" to the size of the type, or leave\n\n# the macro undefined if the type does not exist.\n\n#\n\n# The variable \"${VARIABLE}\" may be \"0\" when CMAKE_OSX_ARCHITECTURES has\n\n# multiple architectures for building OS X universal binaries.  This\n\n# indicates that the type size varies across architectures.  In this\n\n# case \"${VARIABLE}_CODE\" contains C preprocessor tests mapping from\n\n# each architecture macro to the corresponding type size.  The list of\n\n# architecture macros is stored in \"${VARIABLE}_KEYS\", and the value for\n\n# each key is stored in \"${VARIABLE}-${KEY}\".\n\n#\n\n# If the BUILTIN_TYPES_ONLY option is not given, the macro checks for\n\n# headers <sys/types.h>, <stdint.h>, and <stddef.h>, and saves results\n\n# in HAVE_SYS_TYPES_H, HAVE_STDINT_H, and HAVE_STDDEF_H.  The type size\n\n# check automatically includes the available headers, thus supporting\n\n# checks of types defined in the headers.\n\n#\n\n# If LANGUAGE is set, the specified compiler will be used to perform the\n\n# check. Acceptable values are C and CXX\n\n#\n\n# Despite the name of the macro you may use it to check the size of more\n\n# complex expressions, too.  To check e.g.  for the size of a struct\n\n# member you can do something like this:\n\n#\n\n# ::\n\n#\n\n#   check_type_size(\"((struct something*)0)->member\" SIZEOF_MEMBER)\n\n#\n\n#\n\n#\n\n# The following variables may be set before calling this macro to modify\n\n# the way the check is run:\n\n#\n\n# ::\n\n#\n\n#   CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#   CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#   CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#   CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n\n#   CMAKE_REQUIRED_QUIET = execute quietly without messages\n\n#   CMAKE_EXTRA_INCLUDE_FILES = list of extra headers to include\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Helper function.  DO NOT CALL DIRECTLY.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include header files.\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Perform the check.\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# The check compiled.  Load information from the binary.\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Parse the information strings.\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Get the type size.\n",
        "Line" : 139,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Get the architecture map key.\n",
        "Line" : 148,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Update the architecture-to-size map.\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# The check failed to compile.\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# parse arguments\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# change to MATCHES for more keys\n",
        "Line" : 197,
        "CharPositionInLine" : 43
      },
      "14" : {
        "Text" : "# Optionally check for standard headers.\n",
        "Line" : 219,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Compute or load the size or size map.\n",
        "Line" : 237,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Create preprocessor code.\n",
        "Line" : 247,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "deps/src/cmake-3.13.4/Modules/CheckVariableExists.cmake" : {
      "ObjectId" : "ab456d14d64a40c4e43402d015eea710170f9527",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CheckVariableExists\n\n# -------------------\n\n#\n\n# Check if the variable exists.\n\n#\n\n# ::\n\n#\n\n#   CHECK_VARIABLE_EXISTS(VAR VARIABLE)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#   VAR      - the name of the variable\n\n#   VARIABLE - variable to store the result\n\n#              Will be created as an internal cache variable.\n\n#\n\n#\n\n# This macro is only for C variables.\n\n#\n\n# The following variables may be set before calling this macro to modify\n\n# the way the check is run:\n\n#\n\n# ::\n\n#\n\n#   CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#   CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#   CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n\n#   CMAKE_REQUIRED_QUIET = execute quietly without messages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/ADSP-DetermineCompiler.cmake" : {
      "ObjectId" : "0340f6904fb9d96703ee2051a87180a910a74e54",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/ARMCC-ASM.cmake" : {
      "ObjectId" : "539d5259fa9077f9efec95e878c6fc2000620daa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/ARMCC-C.cmake" : {
      "ObjectId" : "dcdcaab4a6136dc546d3677f2d1eb3860d39c85b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/ARMCC-CXX.cmake" : {
      "ObjectId" : "811fc93bd35f69e197271618ee6e130e5a30db71",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/ARMCC-DetermineCompiler.cmake" : {
      "ObjectId" : "a3667d7c292af60fffb78a3f245522673c946cbd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ARMCC Toolchain\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/ARMCC.cmake" : {
      "ObjectId" : "f9495682180e090efe188cb99c116e237264bade",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See ARM Compiler documentation at:\n\n# http://infocenter.arm.com/help/topic/com.arm.doc.set.swdev/index.html\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Absoft-Fortran.cmake" : {
      "ObjectId" : "76502dca7515bdaacc94fe1af66befb128e33d02",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/AppleClang-ASM.cmake" : {
      "ObjectId" : "f52bde05eb6366e94909a8f39d7cd3b279df16dc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/AppleClang-C-FeatureTests.cmake" : {
      "ObjectId" : "e80b526f1900fca05251554bbd0a9efc3ec07331",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/AppleClang-C.cmake" : {
      "ObjectId" : "a48adec9255a0701d7d4e4474a32a2745bfd8d81",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/AppleClang-CXX-FeatureTests.cmake" : {
      "ObjectId" : "f67082c6a7031d55dcc024b371059558720c3a91",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# No known reference for AppleClang versions.\n\n# Generic reference: http://clang.llvm.org/cxx_status.html\n\n# http://clang.llvm.org/docs/LanguageExtensions.html\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: CXX compiler in Xcode 4.3 does not set __apple_build_version__ and so is\n\n# not recognized as AppleClang.\n\n# Xcode_43 - Apple clang version 3.1 (tags/Apple/clang-318.0.61) (based on LLVM 3.1svn)\n\n# Xcode_44 - Apple clang version 4.0 (tags/Apple/clang-421.0.60) (based on LLVM 3.1svn)\n\n# Xcode_45 - Apple clang version 4.1 (tags/Apple/clang-421.11.66) (based on LLVM 3.1svn)\n\n# Xcode_46 - Apple LLVM version 4.2 (clang-425.0.28) (based on LLVM 3.2svn)\n\n# Xcode_50 - Apple LLVM version 5.0 (clang-500.2.79) (based on LLVM 3.3svn)\n\n# Xcode_51 - Apple LLVM version 5.1 (clang-503.0.38) (based on LLVM 3.4svn)\n\n# Xcode_60 - Apple LLVM version 6.0 (clang-600.0.51) (based on LLVM 3.5svn)\n\n# Xcode_61 - Apple LLVM version 6.0 (clang-600.0.56) (based on LLVM 3.5svn)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# There is some non-correspondance. __has_feature(cxx_user_literals) is\n\n# false for AppleClang 4.0 and 4.1, although it is reported as\n\n# supported in the reference link for Clang 3.1.  The compiler does not pass\n\n# the CompileFeatures/cxx_user_literals.cpp test.\n\n# cxx_attributes is listed as not supported until Clang 3.3. It works without\n\n# warning with AppleClang 5.0, but issues a gcc-compat warning for\n\n# AppleClang 4.0-4.2.\n\n# cxx_alignof and cxx_alignas tests work for early AppleClang versions, though\n\n# they are listed as supported for Clang 3.3 and later.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# http://llvm.org/bugs/show_bug.cgi?id=19242\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# http://llvm.org/bugs/show_bug.cgi?id=19698\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# http://llvm.org/bugs/show_bug.cgi?id=19674\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/AppleClang-CXX.cmake" : {
      "ObjectId" : "e5fd6472175334296745d5be28f55fc0bb192296",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# AppleClang 5.0 knows this flag, but does not set a __cplusplus macro greater than 201103L\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/AppleClang-DetermineCompiler.cmake" : {
      "ObjectId" : "83817f754593735f7ea76f5aa037deb4e587df9d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Borland-DetermineCompiler.cmake" : {
      "ObjectId" : "ef3083b4d116fc83a1e72b58d745e45188b449c8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Bruce-C-DetermineCompiler.cmake" : {
      "ObjectId" : "bb9f4b9899fc980c4df76fbb2b5c2e9184955052",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Bruce-C.cmake" : {
      "ObjectId" : "6b64e58065d60013c0b25a737e331a6a4b618b9a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Bruce C Compiler ignores \"-g\" flag and optimization cannot be\n\n# enabled here (it is implemented only for 8086 target).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/CCur-Fortran.cmake" : {
      "ObjectId" : "6ec06ae11209ef75bf9ac83dd05c3cb0d1537d14",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/CMakeCommonCompilerMacros.cmake" : {
      "ObjectId" : "ad464c77cdd9d946084f8c9eab5d20c96e2f517f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages and compilers; use include guard\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check that a compiler's language standard is properly detected\n\n# Parameters:\n\n#   lang   - Language to check\n\n#   stdver1 - Minimum version to set a given default for\n\n#   std1    - Default to use for compiler ver >= stdver1\n\n#   stdverN - Minimum version to set a given default for\n\n#   stdN    - Default to use for compiler ver >= stdverN\n\n#\n\n#   The order of stdverN stdN pairs passed as arguments is expected to be in\n\n#   monotonically increasing version order.\n\n#\n\n# Note:\n\n#   This macro can be called with multiple version / std pairs to convey that\n\n#   newer compiler versions may use a newer standard default.\n\n#\n\n# Example:\n\n#   To specify that compiler version 6.1 and newer defaults to C++11 while\n\n#   4.8 <= ver < 6.1 default to C++98, you would call:\n\n#\n\n# __compiler_check_default_language_standard(CXX 4.8 98 6.1 11)\n\n#\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If the compiler version is below the threshold of even having CMake\n\n# support for language standards, then don't bother.\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Compiler id was forced so just guess the default standard level.\n",
        "Line" : 53,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# Define to allow compile features to be automatically determined\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define to allow compile features to be automatically determined\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Clang-ASM.cmake" : {
      "ObjectId" : "16c9c159c217f539d18863ba7a9072585f5e0ff2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Clang-C-FeatureTests.cmake" : {
      "ObjectId" : "99c2252c87d38438766fdf2e319ebe619203bba9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Clang-C.cmake" : {
      "ObjectId" : "a07ae40192f4259eaadbb3138410a011e72c4ced",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# clang-cl doesn't have any of these\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Clang-CXX-FeatureTests.cmake" : {
      "ObjectId" : "cd04190cfc097dc64fae91c13ebf291f4d625ba3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Reference: http://clang.llvm.org/cxx_status.html\n\n# http://clang.llvm.org/docs/LanguageExtensions.html\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# http://llvm.org/bugs/show_bug.cgi?id=19242\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# http://llvm.org/bugs/show_bug.cgi?id=19698\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# http://llvm.org/bugs/show_bug.cgi?id=19674\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO: Should be supported by Clang 2.9\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# TODO: Should be supported forever?\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Clang-CXX-TestableFeatures.cmake" : {
      "ObjectId" : "69965a6ce146d3b2144c2978ffb0b80611b498fa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Clang-CXX.cmake" : {
      "ObjectId" : "e99011b3bc6bf2398502ea68e7b4b43588e57c40",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This version of clang-cl and the MSVC version it simulates have\n\n# support for -std: flags.\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# This version of clang-cl, or the MSVC version it simulates, does not have\n\n# language standards.  Set these options as empty strings so the feature\n\n# test infrastructure can at least check to see if they are defined.\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# There is no meaningful default for this\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# There are no compiler modes so we only need to test features once.\n\n# Override the default macro for this special case.  Pretend that\n\n# all language standards are available so that at least compilation\n\n# can be attempted.\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Clang-DetermineCompiler.cmake" : {
      "ObjectId" : "89df1b6dc5b73f386d7787bc7a2230cc89233ca4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Clang-DetermineCompilerInternal.cmake" : {
      "ObjectId" : "08c12305d86fc80a34ce27ce029f71ead356628a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Clang-FindBinUtils.cmake" : {
      "ObjectId" : "b8526600e7594d4df57f7ceec2dedd849fa67f99",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Debian:\n\n# * /usr/bin/llvm-ar-4.0\n\n# * /usr/bin/llvm-ranlib-4.0\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find tools in the same directory as Clang itself\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# http://manpages.ubuntu.com/manpages/precise/en/man1/llvm-ar.1.html\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# http://manpages.ubuntu.com/manpages/precise/en/man1/llvm-ranlib.1.html\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Clang.cmake" : {
      "ObjectId" : "e23470b144ec3ad424aa61bd51af6f5ca808898d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# '-flto=thin' available since Clang 3.9 and Xcode 8\n\n# * http://clang.llvm.org/docs/ThinLTO.html#clang-llvm\n\n# * https://trac.macports.org/wiki/XcodeVersionInfo\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# https://github.com/android-ndk/ndk/issues/242\n",
        "Line" : 70,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Comeau-CXX-DetermineCompiler.cmake" : {
      "ObjectId" : "2265e5ea8f99062d38c2ee132f0bce4cccc02dd7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Compaq-C-DetermineCompiler.cmake" : {
      "ObjectId" : "02e99dca0f4981453361297b965215b042d07b43",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake" : {
      "ObjectId" : "c7d0565ce2f27f4e741de510dea11f7056ef03de",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Cray-C.cmake" : {
      "ObjectId" : "d34154c1f0600e2c453b3230accf3f175006d88e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Cray-CXX.cmake" : {
      "ObjectId" : "ff97e92aab399839465414b21986bfc36785089c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Cray-DetermineCompiler.cmake" : {
      "ObjectId" : "660229425b830ae29c80c8e9412fb5b3cd3c252d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Cray-Fortran.cmake" : {
      "ObjectId" : "dbf28e3a4559f01d40bd5f533892367808271a26",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Cray.cmake" : {
      "ObjectId" : "c214afc69138a6e04f87ad342b282e80e8b31820",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/CrayPrgEnv-C.cmake" : {
      "ObjectId" : "6b461ce0600bfe72d8858de8433fd1e890dfcaba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/CrayPrgEnv-CXX.cmake" : {
      "ObjectId" : "aad85b67e2e6defa290166029073623db94fdd84",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/CrayPrgEnv-Cray-C.cmake" : {
      "ObjectId" : "547a4b4d5d7348a6e06818fa0a2505c7bee86f27",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/CrayPrgEnv-Cray-CXX.cmake" : {
      "ObjectId" : "df8452c15a4308d455d57d778f3e562d20b8b5e9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/CrayPrgEnv-Cray-Fortran.cmake" : {
      "ObjectId" : "9f46a04c8973c58781deb7082a2f623153264e1a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/CrayPrgEnv-Fortran.cmake" : {
      "ObjectId" : "9c4d2694ae5899238527fcd5b1cc9ed01aeea20f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/CrayPrgEnv-GNU-C.cmake" : {
      "ObjectId" : "248081b8720ecadf15203f7b549fe55f0235cddc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/CrayPrgEnv-GNU-CXX.cmake" : {
      "ObjectId" : "be4eb6d544dd1a9b7cbc86abcdac801ccb9281ea",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/CrayPrgEnv-GNU-Fortran.cmake" : {
      "ObjectId" : "8bd23ff88fb51775a1a6093402546e523c2d7d51",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/CrayPrgEnv-Intel-C.cmake" : {
      "ObjectId" : "83c4e3801d5f44f83fb8baed3a0fcae82c353708",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/CrayPrgEnv-Intel-CXX.cmake" : {
      "ObjectId" : "3c3c3e63fdafe214491a71f30d989ad7f30165e7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/CrayPrgEnv-Intel-Fortran.cmake" : {
      "ObjectId" : "08a316d2c4633e1d7010c5f7c12566e18f226dba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/CrayPrgEnv-PGI-C.cmake" : {
      "ObjectId" : "f45767cafbb0c55e71e2a74beb0a173436d8598d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/CrayPrgEnv-PGI-CXX.cmake" : {
      "ObjectId" : "a2a286f8c3ffaf90c24c53ab830f2bfee7c767f4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/CrayPrgEnv-PGI-Fortran.cmake" : {
      "ObjectId" : "f6ba7c0fa0f30e36d867907cc1305a4e8843cc52",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/CrayPrgEnv.cmake" : {
      "ObjectId" : "05e3fc763410a9e995f7cfe06cbf75b2d43495af",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Guard against multiple inclusions\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Flags for the Cray wrappers\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# If the link type is not explicitly specified in the environment then\n\n# the Cray wrappers assume that the code will be built statically so\n\n# we check the following condition(s) are NOT met\n\n#  Compiler flags are explicitly dynamic\n\n#  Env var is dynamic and compiler flags are not explicitly static\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Embarcadero-DetermineCompiler.cmake" : {
      "ObjectId" : "8375624e9c866d8e21e01c8ba0d206f2889c80bf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Flang-FindBinUtils.cmake" : {
      "ObjectId" : "e721c8708ea94fc30d687348a1db4b5e11a8ed18",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Flang-Fortran.cmake" : {
      "ObjectId" : "d5227394780775b591a508ff54cabaf5d96ea390",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Fujitsu-DetermineCompiler.cmake" : {
      "ObjectId" : "73ee38c87e30c5c6fb28794ecf02d3d4361c77c3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/G95-Fortran.cmake" : {
      "ObjectId" : "03b7e08b941cd467431ed55cc94898dca63f0347",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/GHS-C.cmake" : {
      "ObjectId" : "c30bdecaf0084f4b3b88c435b3c15b61d9cc9b52",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/GHS-CXX.cmake" : {
      "ObjectId" : "b3018a7b66031b1184dfbaf975bf44ba25864390",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/GHS-DetermineCompiler.cmake" : {
      "ObjectId" : "56d24e266cd4d8e7a52aa4ddc53b3d05ae85a9a6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/GHS.cmake" : {
      "ObjectId" : "e6a867d04220e102ba9508379360a2265c43e098",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/GNU-ASM.cmake" : {
      "ObjectId" : "e07401d54fa4d651cdcd1d372d5cd0d6564a6806",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is loaded when gcc/g++ is used for assembler files (the \"ASM\" cmake language)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/GNU-C-DetermineCompiler.cmake" : {
      "ObjectId" : "6ddc566981307f1c5344d7763c5a3f71f8d94af0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/GNU-C-FeatureTests.cmake" : {
      "ObjectId" : "0ab5265a58cbfc05d68367667977094297b3e039",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GNU 4.7 correctly sets __STDC_VERSION__ to 201112L, but GNU 4.6 sets it\n\n# to 201000L.  As the former is strictly greater than the latter, test only\n\n# for the latter.  If in the future CMake learns about a C feature which was\n\n# introduced with GNU 4.7, that should test for the correct version, similar\n\n# to the distinction between __cplusplus and __GXX_EXPERIMENTAL_CXX0X__ tests.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Since 3.4 at least:\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/GNU-C.cmake" : {
      "ObjectId" : "f072c546a3d25622798e57085a2cde77342bc415",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake" : {
      "ObjectId" : "c25b1471e1632f0a3dad047480d3935e8a343d7e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/GNU-CXX-FeatureTests.cmake" : {
      "ObjectId" : "d18adaff0ef9510df666d80d2852591271cb8b40",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Reference: http://gcc.gnu.org/projects/cxx0x.html\n\n# http://gcc.gnu.org/projects/cxx1y.html\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GNU 4.9 in c++14 mode sets __cplusplus to 201300L, so don't test for the\n\n# correct value of it below.\n\n# https://patchwork.ozlabs.org/patch/382470/\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GNU 4.3 supports binary literals as an extension, but may warn about\n\n# use of extensions prior to GNU 4.9\n\n# http://stackoverflow.com/questions/16334024/difference-between-gcc-binary-literals-and-c14-ones\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The feature below is documented as available in GNU 4.8 (by implementing an\n\n# earlier draft of the standard paper), but that version of the compiler\n\n# does not set __cplusplus to a value greater than 201103L until GNU 4.9:\n\n# http://gcc.gnu.org/onlinedocs/gcc-4.8.2/cpp/Standard-Predefined-Macros.html#Standard-Predefined-Macros\n\n# http://gcc.gnu.org/onlinedocs/gcc-4.9.0/cpp/Standard-Predefined-Macros.html#Standard-Predefined-Macros\n\n# So, CMake only reports availability for it with GNU 4.9 or later.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Introduced in GCC 4.8.1\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The alignof feature works with GNU 4.7 and -std=c++11, but it is documented\n\n# as available with GNU 4.8, so treat that as true.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOTE: C++11 was ratified in September 2011. GNU 4.7 is the first minor\n\n# release following that (March 2012), and the first minor release to\n\n# support -std=c++11. Prior to that, support for C++11 features is technically\n\n# experiemental and possibly incomplete (see for example the note below about\n\n# cxx_variadic_template_template_parameters)\n\n# GNU does not define __cplusplus correctly before version 4.7.\n\n# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=1773\n\n# __GXX_EXPERIMENTAL_CXX0X__ is defined in prior versions, but may not be\n\n# defined in the future.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TODO: If features are ever recorded for GNU 4.3, there should possibly\n\n# be a new feature added like cxx_variadic_template_template_parameters,\n\n# which is implemented by GNU 4.4, but not 4.3. cxx_variadic_templates is\n\n# actually implemented by GNU 4.3, but variadic template template parameters\n\n# 'completes' it, so that is the version we record as having the variadic\n\n# templates capability in CMake. See\n\n# http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2555.pdf\n\n# TODO: Should be supported by GNU 4.3\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO: Should be supported since GNU 3.4?\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# TODO: Should be supported forever?\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/GNU-CXX.cmake" : {
      "ObjectId" : "00582236a9758fbfb14ddb4e8c82fb85817f9fea",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 4.3 supports 0x variants\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/GNU-FindBinUtils.cmake" : {
      "ObjectId" : "16b7bbda46069225f14659467105e8548a37e933",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ubuntu 16.04:\n\n# * /usr/bin/gcc-ar-5\n\n# * /usr/bin/gcc-ranlib-5\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find tools in the same directory as GCC itself\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# http://manpages.ubuntu.com/manpages/wily/en/man1/gcc-ar.1.html\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# http://manpages.ubuntu.com/manpages/wily/en/man1/gcc-ranlib.1.html\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/GNU-Fortran.cmake" : {
      "ObjectId" : "c333d500b4c1debe878d4439d5cd204e2c5d69e0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# No -DNDEBUG for Fortran.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# No -isystem for Fortran because it will not find .mod files.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fortran-specific feature flags.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/GNU.cmake" : {
      "ObjectId" : "4491d4b395a14f09f04e1964e087042347603e96",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Feature flags.\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Older versions of gcc (< 4.5) contain a bug causing them to report a missing\n\n# header file as a warning if depfiles are enabled, causing check_header_file\n\n# tests to always succeed.  Work around this by disabling dependency tracking\n\n# in try_compile mode.\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# distcc does not transform -o to -MT when invoking the preprocessor\n\n# internally, as it ought to.  Work around this bug by setting -MT here\n\n# even though it isn't strictly necessary.\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Initial configuration flags.\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# work around #4462\n",
        "Line" : 50,
        "CharPositionInLine" : 69
      },
      "7" : {
        "Text" : "# '-flto' introduced since GCC 4.5:\n\n# * https://gcc.gnu.org/onlinedocs/gcc-4.4.7/gcc/Option-Summary.html (no)\n\n# * https://gcc.gnu.org/onlinedocs/gcc-4.5.4/gcc/Option-Summary.html (yes)\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# '-ffat-lto-objects' introduced since GCC 4.7:\n\n# * https://gcc.gnu.org/onlinedocs/gcc-4.6.4/gcc/Option-Summary.html (no)\n\n# * https://gcc.gnu.org/onlinedocs/gcc-4.7.4/gcc/Option-Summary.html (yes)\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Need to use version of 'ar'/'ranlib' with plugin support.\n\n# Quote from [documentation][1]:\n\n#\n\n#   To create static libraries suitable for LTO,\n\n#   use gcc-ar and gcc-ranlib instead of ar and ranlib\n\n#\n\n# [1]: https://gcc.gnu.org/onlinedocs/gcc-4.9.4/gcc/Optimize-Options.html\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/HP-ASM.cmake" : {
      "ObjectId" : "b60f207b4bdce6059105cf71d311ce4cb5899bfe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/HP-C-DetermineCompiler.cmake" : {
      "ObjectId" : "4269799908bdc46bbff09ddaebd12894fae084a8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/HP-C.cmake" : {
      "ObjectId" : "8fa4c08e2ba8fc430ff4b8a662385583528d729a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/HP-CXX-DetermineCompiler.cmake" : {
      "ObjectId" : "3d4d7e49442ef129b6add2afda1cf0d43c1c341d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/HP-CXX.cmake" : {
      "ObjectId" : "5726b64948010bf7cbda5e03aff55200563c03b6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# HP aCC since version 3.80 supports the flag +hpxstd98 to get ANSI C++98\n\n# template support. It is known that version 6.25 doesn't need that flag.\n\n# Current assumption: the flag is needed for every version from 3.80 to 4\n\n# to get it working.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/HP-Fortran.cmake" : {
      "ObjectId" : "63a033135fc1ae3e2c8463417467259ffe792d50",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/IAR-ASM.cmake" : {
      "ObjectId" : "e12bfd18e329e18fc988b4d5bc93fbec58a3ca32",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is processed when the IAR compiler is used for an assembler file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/IAR-C.cmake" : {
      "ObjectId" : "2ed88188cd6c52438a873a91bcd9b3cf68dce88c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is processed when the IAR compiler is used for a C file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The toolchains for ARM and AVR are quite different:\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add the target specific include directory:\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/IAR-CXX.cmake" : {
      "ObjectId" : "5b783b29f40375ba3f9382e719ee5440f5061045",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is processed when the IAR compiler is used for a C++ file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \"(extended) embedded C++\" Mode\n\n# old version: --ec++ or --eec++\n\n# since 8.10:  --c++ --no_exceptions --no_rtti\n\n#\n\n# --c++ is full C++ and supported since 6.10\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# add the target specific include directory:\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/IAR-DetermineCompiler.cmake" : {
      "ObjectId" : "a1bffebdb277833f81d640ab7ee868194bd53927",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# IAR Systems compiler for embedded systems.\n\n#   http://www.iar.com\n\n#   http://supp.iar.com/FilesPublic/UPDINFO/004916/arm/doc/EWARM_DevelopmentGuide.ENU.pdf\n\n#\n\n# __IAR_SYSTEMS_ICC__ An integer that identifies the IAR compiler platform:\n\n#                       9 and higher means C11 and C++14 as language default\n\n#                       8 means C99 and C++03 as language default\n\n#                       7 and lower means C89 and EC++ as language default.\n\n# __ICCARM__          An integer that is set to 1 when the code is compiled with the IAR C/C++ Compiler for ARM\n\n# __VER__             An integer that identifies the version number of the IAR compiler in use. For example,\n\n#                     version 5.11.3 is returned as 5011003.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/IAR-FindBinUtils.cmake" : {
      "ObjectId" : "5fecb2662d7e00494237f4240f1d143b19e844d1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find tools in the same directory as Clang itself\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# could allow using normal binutils ar, since objects are normal ELF files?\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# find auxiliary tools\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# For AVR and AVR32, IAR uses the \"xlink\" linker and the \"xar\" archiver:\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/IAR.cmake" : {
      "ObjectId" : "43243b9d6c648a3b6726945b8b8780cb692df6de",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is processed when the IAR compiler is used for a C or C++ file\n\n# Documentation can be downloaded here: http://www.iar.com/website1/1.0.1.0/675/1/\n\n# The initial feature request is here: https://gitlab.kitware.com/cmake/cmake/issues/10176\n\n# It also contains additional links and information.\n\n# See USER GUIDES -> C/C++ Development Guide and ReleaseNotes for:\n\n# version 6.30.8: http://supp.iar.com/FilesPublic/UPDINFO/006607/arm/doc/infocenter/index.ENU.html\n\n# version 7.60.1: http://supp.iar.com/FilesPublic/UPDINFO/011006/arm/doc/infocenter/index.ENU.html\n\n# version 8.10.1: http://netstorage.iar.com/SuppDB/Public/UPDINFO/011854/arm/doc/infocenter/index.ENU.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C/C++ Standard versions\n\n#\n\n# IAR typically only supports one C and C++ Standard version,\n\n# the exception is C89 which is always supported and can be selected\n\n# if its not the default\n\n#\n\n# C++ is trickier, there were historically 3 switches,\n\n# and some IAR versions support multiple of those.\n\n# they are --eec++, --ec++ and --c++ and where used to\n\n# enable various language features like exceptions\n\n#\n\n# recent versions only have --c++ for full support\n\n# but can choose to disable features with further arguments\n\n#\n\n# C/C++ Standard compliance\n\n#\n\n# IAR has 3 modes: default, strict and extended\n\n# the extended mode is needed for popular libraries like CMSIS\n\n#\n\n# \"Silent\" Operation\n\n#\n\n# this really is different to most programs I know.\n\n# nothing meaningful from the operation is lost, just some redundant\n\n# code and data size printouts (that can be inspected with common tools).\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake" : {
      "ObjectId" : "e5b97412e184f5ef95697e237f752936b0da6666",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake" : {
      "ObjectId" : "63c3e32d6530b7bac7e512c1e4df4b3049f5524c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Intel-ASM.cmake" : {
      "ObjectId" : "c2bf465746ebf02cbd126c49f644177ad2c36543",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Intel-C-FeatureTests.cmake" : {
      "ObjectId" : "5d09767b5a4740a0ec86c0ae59a2d8a5d038f3a3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n#   - https://software.intel.com/en-us/articles/iso-iec-standards-language-conformance-for-intel-c-compiler\n\n#   - https://software.intel.com/en-us/articles/c99-support-in-intel-c-compiler\n\n#   - https://software.intel.com/en-us/articles/c11-support-in-intel-c-compiler\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#static assert is only around in version 1500 update 2 and above\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Intel-C.cmake" : {
      "ObjectId" : "4e4af295619495cf379c4895eb66eafe5f727596",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Intel-CXX-FeatureTests.cmake" : {
      "ObjectId" : "aa35b977e074c81542ac4420d4ca94dab3243093",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n#   - https://software.intel.com/en-us/articles/c0x-features-supported-by-intel-c-compiler\n\n#   - https://software.intel.com/en-us/articles/c14-features-supported-by-intel-c-compiler\n\n#   - http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0096r3.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Notes:\n\n# [1] Some Intel versions define some feature macros under -std=gnu++98\n\n#     that do not work in that mode (or work with warnings):\n\n#     - __cpp_attributes 200809\n\n#     - __cpp_init_captures 201304\n\n#     - __cpp_lambdas 200907\n\n#     - __cpp_rvalue_references 200610\n\n#     - __cpp_variadic_templates 200704\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ICC version 15 update 1 has a bug where __cplusplus is defined as 1 no matter\n\n#if you are compiling as 98/11/14. So to properly detect C++14 with this version\n\n#we look for the existence of __GXX_EXPERIMENTAL_CXX0X__ but not __INTEL_CXX11_MODE__\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# [1]\n",
        "Line" : 39,
        "CharPositionInLine" : 117
      },
      "4" : {
        "Text" : "# Documented as 12.0+ but in testing it only works on 14.0.2+\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Cannot find Intel documentation for N2640: cxx_uniform_initialization\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# [1]\n",
        "Line" : 85,
        "CharPositionInLine" : 121
      },
      "7" : {
        "Text" : "# [1]\n",
        "Line" : 89,
        "CharPositionInLine" : 105
      },
      "8" : {
        "Text" : "# [1]\n",
        "Line" : 92,
        "CharPositionInLine" : 119
      },
      "9" : {
        "Text" : "# [1]\n",
        "Line" : 97,
        "CharPositionInLine" : 99
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Intel-CXX.cmake" : {
      "ObjectId" : "c115b6ade4f9dc3992181b2450674c2a931e0646",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Intel 15.0.2 accepts c++14 instead of c++1y, but not gnu++14\n\n# instead of gnu++1y.  Intel 17.0.0 accepts gnu++14 too.\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Intel-DetermineCompiler.cmake" : {
      "ObjectId" : "d7e453211b72d7b72148acccc5fb418e6dc9ddf1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Intel-Fortran.cmake" : {
      "ObjectId" : "a1320555afc31f5e50be23523dd5f4ee6b75d52d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Intel.cmake" : {
      "ObjectId" : "f2f16e0100c52d673348f26a4b731434140512b0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MSVC-like\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# GNU-like\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/MIPSpro-C.cmake" : {
      "ObjectId" : "675560c2a40deb844140072fc69ac61f082c9473",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/MIPSpro-CXX.cmake" : {
      "ObjectId" : "9fb191c754d2656bf659cb5a4cdda0b087bfacfe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/MIPSpro-DetermineCompiler.cmake" : {
      "ObjectId" : "9e485532b00b1b15a85416199e5e90fa98bea90f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/MIPSpro-Fortran.cmake" : {
      "ObjectId" : "ffceea80de3e405051bfe6462c48a145c6e1220e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/MSVC-ASM.cmake" : {
      "ObjectId" : "45978c5e2e652d75ae44a4bb465ec8a25720eacc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is loaded when Visual Studio is used for the ASM language.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/MSVC-C-FeatureTests.cmake" : {
      "ObjectId" : "3f09be2017c9e3ab2905c77cdcc1a2ff1c45c229",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Not yet supported:\n\n#set(_cmake_feature_test_c_static_assert \"\")\n\n#set(_cmake_feature_test_c_restrict \"\")\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/MSVC-C.cmake" : {
      "ObjectId" : "22c34f80cb3118ca286d82502fba7c2ec1084eeb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MSVC has no specific options to set C language standards, but set them as\n\n# empty strings anyways so the feature test infrastructure can at least check\n\n# to see if they are defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# There is no meaningful default for this\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# There are no C compiler modes so we only need to test features once.\n\n# Override the default macro for this special case.  Pretend that\n\n# all language standards are available so that at least compilation\n\n# can be attempted.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/MSVC-CXX-FeatureTests.cmake" : {
      "ObjectId" : "9c604f202c42003a64396a841717e3295b5f8515",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Reference: https://docs.microsoft.com/en-us/cpp/visual-cpp-language-conformance\n\n# https://blogs.msdn.microsoft.com/vcblog/2015/06/19/c111417-features-in-vs-2015-rtm/\n\n# https://blogs.msdn.microsoft.com/vcblog/2013/12/02/c1114-core-language-features-in-vs-2013-and-the-nov-2013-ctp/\n\n# https://blogs.msdn.microsoft.com/vcblog/2011/09/12/c11-features-in-visual-c-11/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# VS 2017 v15.3 fixes support for incomplete decltypes\n\n# https://docs.microsoft.com/en-us/cpp/cpp-conformance-improvements-2017#update_153\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# VS 2017 introduces support for \"N3652 Extended constexpr\"\n\n# but as of v15.6 there are still bugs in the implementation\n\n#set(_cmake_feature_test_cxx_relaxed_constexpr \"${MSVC_2017}\")\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# VS 2017 Preview introduces support for aggregate initializers.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# VS 2015 Update 2 introduces support for variable templates.\n\n# https://www.visualstudio.com/en-us/news/vs2015-update2-vs.aspx\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Microsoft calls this 'rvalue references v3'\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \"The copies and moves don't interact precisely like the Standard says they\n\n# should. For example, deletion of moves is specified to also suppress\n\n# copies, but Visual C++ in Visual Studio 2013 does not.\"\n\n# http://blogs.msdn.com/b/vcblog/archive/2014/11/17/c-11-14-17-features-in-vs-2015-preview.aspx\n\n# lists this as 'partial' in 2013\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# http://blogs.msdn.com/b/vcblog/archive/2014/11/17/c-11-14-17-features-in-vs-2015-preview.aspx\n\n# Note 1. While previous version of VisualStudio said they supported these\n\n# they silently produced bad code, and are now marked as having partial\n\n# support in previous versions. The footnote says the support will be complete\n\n# in MSVC 2015, so support the feature for that version, assuming that is true.\n\n# The blog post also says that VS 2013 Update 3 generates an error in cases\n\n# that previously produced bad code.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Microsoft now states they support contextual conversions in 2013 and above.\n\n# See footnote 6 at:\n\n# http://blogs.msdn.com/b/vcblog/archive/2014/11/17/c-11-14-17-features-in-vs-2015-preview.aspx\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Support is documented, but possibly partly broken:\n\n# https://msdn.microsoft.com/en-us/library/hh567368.aspx\n\n# http://thread.gmane.org/gmane.comp.lib.boost.devel/244986/focus=245333\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Unset all the variables that we don't need exposed.\n\n# _cmake_oldestSupported is required by WriteCompilerDetectionHeader\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/MSVC-CXX.cmake" : {
      "ObjectId" : "be259ff6f3a87f7633db80c61887ff39cb6fd720",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# VS 2015 Update 3 and above support language standard level flags,\n\n# with the default and minimum level being C++14.\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# All features that we define are available in the base mode, except\n\n# for meta-features for C++14 and above.  Override the default macro\n\n# to avoid doing unnecessary work.\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The main cmake_record_cxx_compile_features macro makes all\n\n# these conditional on CMAKE_CXX##_STANDARD_COMPILE_OPTION,\n\n# but we can skip the conditions because we set them above.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# no flag needed for 11\n",
        "Line" : 44,
        "CharPositionInLine" : 57
      },
      "5" : {
        "Text" : "# MSVC has no specific options to set language standards, but set them as\n\n# empty strings anyways so the feature test infrastructure can at least check\n\n# to see if they are defined.\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# There is no meaningful default for this\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# There are no compiler modes so we only need to test features once.\n\n# Override the default macro for this special case.  Pretend that\n\n# all language standards are available so that at least compilation\n\n# can be attempted.\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/MSVC-DetermineCompiler.cmake" : {
      "ObjectId" : "313de89fa02137554a4312eac4c3b792f42bb11d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/NAG-Fortran.cmake" : {
      "ObjectId" : "9973febc3d909dee52c2c1f72553604448fd95d0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Help CMAKE_PARSE_IMPLICIT_LINK_INFO detect NAG Fortran object files.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Run with -dryrun to see sample \"link\" line.\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Match an object file.\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Parse object directory and convert to a regex.\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/NVIDIA-CUDA.cmake" : {
      "ObjectId" : "05db548f57d8b16459b3aa8e34031b16796c650e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE_SHARED_LIBRARY_CUDA_FLAGS is sent to the host linker so we\n\n# don't need to forward it through nvcc.\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# FIXME: investigate use of --options-file.\n\n# Tell Makefile generator that nvcc does not support @<rspfile> syntax.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/NVIDIA-DetermineCompiler.cmake" : {
      "ObjectId" : "bf9111a242dff4cb7af4ab4bd1478024b3700d0a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake" : {
      "ObjectId" : "2ed116c0920134f4266f25ddcefa888458d4ab91",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/PGI-C.cmake" : {
      "ObjectId" : "3b3848a2c53e9068967e3c256339ff1b2038916f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/PGI-CXX.cmake" : {
      "ObjectId" : "35076bb38f3ab747bcf866d5e08cc8708874083f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/PGI-DetermineCompiler.cmake" : {
      "ObjectId" : "8d3dc9ca64cb49c72cc73c28037ae5b4254a12c1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/PGI-Fortran.cmake" : {
      "ObjectId" : "a183c339bcc990166f6983362c0d82f7bbe3b593",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/PGI.cmake" : {
      "ObjectId" : "4f8b90b13b8187e4bda8eb1a2f4af6a1d6c6107b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Feature flags.\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Initial configuration flags.\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Preprocessing and assembly rules.\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/PathScale-C.cmake" : {
      "ObjectId" : "94c7d0822888587919f18dd27ef050eb2d46c667",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/PathScale-CXX.cmake" : {
      "ObjectId" : "276b81ba518109742f515820d3f8ccf89bcd294f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/PathScale-DetermineCompiler.cmake" : {
      "ObjectId" : "4eb81dec73530876c2d517cd4a24b137dc5a0070",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/PathScale-Fortran.cmake" : {
      "ObjectId" : "d90362104686240ca7222babb8d3f879f8d41f46",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/PathScale.cmake" : {
      "ObjectId" : "d5f8cb12b8869889ea3551674943839c4cdc73a0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Feature flags.\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Initial configuration flags.\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/QCC-C.cmake" : {
      "ObjectId" : "ae4a2f491db13307e97ab6eed40597aeab600ee8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/QCC-CXX.cmake" : {
      "ObjectId" : "e86d1fa4791cc934dc7d7863a5050f02e294e2ba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If the toolchain uses qcc for CMAKE_CXX_COMPILER instead of QCC, the\n\n# default for the driver is not c++.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/QCC.cmake" : {
      "ObjectId" : "9df826909a31796b87c1be275801c0c03c06f8ce",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# http://www.qnx.com/developers/docs/6.4.0/neutrino/utilities/q/qcc.html#examples\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/SCO-C.cmake" : {
      "ObjectId" : "6e762ccae8f0df5b92514245260112f179ef4fee",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/SCO-CXX.cmake" : {
      "ObjectId" : "5b713a0df9f9c30030760ed50d08af46158877f9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/SCO-DetermineCompiler.cmake" : {
      "ObjectId" : "a44b22b71ec70926d75ccbee5a5e051dc0a18621",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/SCO.cmake" : {
      "ObjectId" : "7f643d920fa121dd8448380c1af2c15af7488a1a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Feature flags.\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/SDCC-C-DetermineCompiler.cmake" : {
      "ObjectId" : "4c70c5ec492baa944ea5359632405295760cbb81",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# sdcc, the small devices C compiler for embedded systems,\n\n#   http://sdcc.sourceforge.net  */\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/SunPro-ASM.cmake" : {
      "ObjectId" : "0d67400feaf9bf24a6504852dd2ff72b12198298",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Initialize ASM link type selection flags.  These flags are used when\n\n# building a shared library, shared module, or executable that links\n\n# to other libraries to select whether to use the static or shared\n\n# versions of the libraries.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/SunPro-C-DetermineCompiler.cmake" : {
      "ObjectId" : "e9d7457e74ea445ede08995741fb3f0883ae6dac",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/SunPro-C-FeatureTests.cmake" : {
      "ObjectId" : "cccf3ae5447d05ab054fc361a1ea6fb29e754b81",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/SunPro-C.cmake" : {
      "ObjectId" : "047de43f0007d89a720bbcaa9243df1703ec9366",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Initialize C link type selection flags.  These flags are used when\n\n# building a shared library, shared module, or executable that links\n\n# to other libraries to select whether to use the static or shared\n\n# versions of the libraries.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake" : {
      "ObjectId" : "5c23a957e0a4e74f933c4e4f68ced6568e38f538",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/SunPro-CXX-FeatureTests.cmake" : {
      "ObjectId" : "279d875385975498688cae720f36ef357683e650",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Based on GNU 4.8.2\n\n# https://docs.oracle.com/cd/E37069_01/html/E37071/gncix.html\n\n# https://docs.oracle.com/cd/E77782_01/html/E77784/gkeza.html\n\n# Reference: http://gcc.gnu.org/projects/cxx0x.html\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/SunPro-CXX.cmake" : {
      "ObjectId" : "4c1ac5be622fd1fceec217bc728091aad39c60b9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Initialize C link type selection flags.  These flags are used when\n\n# building a shared library, shared module, or executable that links\n\n# to other libraries to select whether to use the static or shared\n\n# versions of the libraries.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create archives with \"CC -xar\" in case user adds \"-instances=extern\"\n\n# so that template instantiations are available to archive members.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/SunPro-Fortran.cmake" : {
      "ObjectId" : "2247dd085ecb8165c780e74cec1d896977ec6621",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/SunPro.cmake" : {
      "ObjectId" : "52da39a8b5005e080fd878bf9a4a2037a7cb7802",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/TI-ASM.cmake" : {
      "ObjectId" : "a566d70e1637233adf35732ef19dc1d94e6846cb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/TI-C.cmake" : {
      "ObjectId" : "1c0f4bc1fbacec938a0a82b793ab542131015284",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/TI-CXX.cmake" : {
      "ObjectId" : "4c6af06cd7ecd4ef420c972f622ea8588ce97a2f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/TI-DetermineCompiler.cmake" : {
      "ObjectId" : "19aa9e3d428a8b2bc1889daa6494fadbc6f74bda",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake" : {
      "ObjectId" : "8d6de7e4417c0c70856b593977c577eae55289b3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/TinyCC-C.cmake" : {
      "ObjectId" : "6367695b9ceee094a6828d379751e47761cc3a5b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# no optimization in tcc:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake" : {
      "ObjectId" : "97c226313a390400e958518028f15e7bfdc519e2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/VisualAge-C.cmake" : {
      "ObjectId" : "40b609e9a88d1b3e04b7c1b9585b4122d1760c5c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake" : {
      "ObjectId" : "cd53499689f6cc829ee156c41f8b5ef12dfb81dc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/VisualAge-CXX.cmake" : {
      "ObjectId" : "2509b439679b354052670b330b92ed4af615b534",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/VisualAge-Fortran.cmake" : {
      "ObjectId" : "3ef3178d9ffd20a92fcd8aa1e8223f17fe48b98e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/Watcom-DetermineCompiler.cmake" : {
      "ObjectId" : "153e350dbf794186f57658bb4cbb649264c6dee7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/XL-ASM.cmake" : {
      "ObjectId" : "9177b392bbfdef7d463464070346a5b1e31af73a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -qthreaded     = Ensures that all optimizations will be thread-safe\n\n# -qhalt=e       = Halt on error messages (rather than just severe errors)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/XL-C-DetermineCompiler.cmake" : {
      "ObjectId" : "484811efec6ab191514d68a2c37634a8ec62e56d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/XL-C.cmake" : {
      "ObjectId" : "5dc8bc17fad5d16126277081aac741d2af22b8a0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -qthreaded = Ensures that all optimizations will be thread-safe\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XL v13.1.1 for Linux ppc64 little-endian switched to using a clang based\n\n# front end and accepts the -std= option while only reserving -qlanglevel= for\n\n# compatibility.  All other versions (previous versions on Linux ppc64\n\n# little-endian, all versions on Linux ppc64 big-endian, all versions on AIX\n\n# and BGQ, etc) are derived from the UNIX compiler and only accept the\n\n# -qlanglvl option.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/XL-CXX-DetermineCompiler.cmake" : {
      "ObjectId" : "2bf1ec69c3738e6eda4c19f9e6bd1b7986a40756",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/XL-CXX.cmake" : {
      "ObjectId" : "b87e9238bca57cf68e2b6277303915c6876ca3bd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -qthreaded = Ensures that all optimizations will be thread-safe\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XL v13.1.1 for Linux ppc64 little-endian switched to using a clang based\n\n# front end and accepts the -std= option while only reserving -qlanglevel= for\n\n# compatibility.  All other versions (previous versions on Linux ppc64\n\n# little-endian, all versions on Linux ppc64 big-endian, all versions on AIX\n\n# and BGQ, etc) are derived from the UNIX compiler and only accept the\n\n# -qlanglvl option.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The non-clang based Linux ppc64 compiler, both big-endian and\n\n# little-endian lacks, the non-extension language level flags\n",
        "Line" : 31,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/XL-Fortran.cmake" : {
      "ObjectId" : "6bab6f69e0cfc93d2b1ca97cf3eee4ac8a0e3d6a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# [=<right_margin>]\n",
        "Line" : 4,
        "CharPositionInLine" : 47
      },
      "1" : {
        "Text" : "# [=f90|ibm]\n",
        "Line" : 5,
        "CharPositionInLine" : 45
      },
      "2" : {
        "Text" : "# -qthreaded     = Ensures that all optimizations will be thread-safe\n\n# -qhalt=e       = Halt on error messages (rather than just severe errors)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# xlf: 1501-214 (W) command option E reserved for future use - ignored\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/XL.cmake" : {
      "ObjectId" : "21fe5e8c333ebfc0e897697d3460b560ae4dfd53",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find the CreateExportList program that comes with this toolchain.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Feature flags.\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# CMAKE_XL_CreateExportList is part of the AIX XL compilers but not the linux ones.\n\n# If we found the tool, we'll use it to create exports, otherwise stick with the regular\n\n# create shared library compile line.\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# The compiler front-end passes all object files, archive files, and shared\n\n# library files named on the command line to CreateExportList to create a\n\n# list of all symbols to be exported from the shared library.  This causes\n\n# all archive members to be copied into the shared library whether they are\n\n# needed or not.  Instead we run the tool ourselves to pass only the object\n\n# files so that we export only the symbols actually provided by the sources.\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/zOS-C-DetermineCompiler.cmake" : {
      "ObjectId" : "daa378198cf8443f8a3f7c2dc00a7d03df04721d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake" : {
      "ObjectId" : "a08ff57133982b68f465aabc18183ae0bbdaf306",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Dart.cmake" : {
      "ObjectId" : "c4081b84a7253468ad79b70f2fc0483034adbca2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# Dart\n\n# ----\n\n#\n\n# Configure a project for testing with CTest or old Dart Tcl Client\n\n#\n\n# This file is the backwards-compatibility version of the CTest module.\n\n# It supports using the old Dart 1 Tcl client for driving dashboard\n\n# submissions as well as testing with CTest.  This module should be\n\n# included in the CMakeLists.txt file at the top of a project.  Typical\n\n# usage:\n\n#\n\n# ::\n\n#\n\n#   include(Dart)\n\n#   if(BUILD_TESTING)\n\n#     # ... testing related CMake code ...\n\n#   endif()\n\n#\n\n# The BUILD_TESTING option is created by the Dart module to determine\n\n# whether testing support should be enabled.  The default is ON.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This file configures a project to use the Dart testing/dashboard process.\n\n# It is broken into 3 sections.\n\n#\n\n#  Section #1: Locate programs on the client and determine site and build name\n\n#  Section #2: Configure or copy Tcl scripts from the source tree to build tree\n\n#  Section #3: Custom targets for performing dashboard builds.\n\n#\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Section #1:\n\n#\n\n# CMake commands that will not vary from project to project. Locates programs\n\n# on the client and configure site name and build name.\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#\n\n# Section #2:\n\n#\n\n# Make necessary directories and configure testing scripts\n\n#\n\n# find a tcl shell command\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# make directories in the binary tree\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# configure files\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#\n\n# Section 3:\n\n#\n\n# Custom targets to perform dashboard builds and submissions.\n\n# These should NOT need to be modified from project to project.\n\n#\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# add testing targets\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#\n\n# End of Dart.cmake\n\n#\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Modules/DeployQt4.cmake" : {
      "ObjectId" : "c69cd3885c66865c3a7340dca257d97b7a0774f2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nDeployQt4\n---------\n\nFunctions to help assemble a standalone Qt4 executable.\n\nA collection of CMake utility functions useful for deploying Qt4\nexecutables.\n\nThe following functions are provided by this module:\n\n::\n\n   write_qt4_conf\n   resolve_qt4_paths\n   fixup_qt4_executable\n   install_qt4_plugin_path\n   install_qt4_plugin\n   install_qt4_executable\n\nRequires CMake 2.6 or greater because it uses function and\nPARENT_SCOPE.  Also depends on BundleUtilities.cmake.\n\n::\n\n  WRITE_QT4_CONF(<qt_conf_dir> <qt_conf_contents>)\n\nWrites a qt.conf file with the <qt_conf_contents> into <qt_conf_dir>.\n\n::\n\n  RESOLVE_QT4_PATHS(<paths_var> [<executable_path>])\n\nLoop through <paths_var> list and if any don't exist resolve them\nrelative to the <executable_path> (if supplied) or the\nCMAKE_INSTALL_PREFIX.\n\n::\n\n  FIXUP_QT4_EXECUTABLE(<executable>\n    [<qtplugins> <libs> <dirs> <plugins_dir> <request_qt_conf>])\n\nCopies Qt plugins, writes a Qt configuration file (if needed) and\nfixes up a Qt4 executable using BundleUtilities so it is standalone\nand can be drag-and-drop copied to another machine as long as all of\nthe system libraries are compatible.\n\n<executable> should point to the executable to be fixed-up.\n\n<qtplugins> should contain a list of the names or paths of any Qt\nplugins to be installed.\n\n<libs> will be passed to BundleUtilities and should be a list of any\nalready installed plugins, libraries or executables to also be\nfixed-up.\n\n<dirs> will be passed to BundleUtilities and should contain and\ndirectories to be searched to find library dependencies.\n\n<plugins_dir> allows an custom plugins directory to be used.\n\n<request_qt_conf> will force a qt.conf file to be written even if not\nneeded.\n\n::\n\n  INSTALL_QT4_PLUGIN_PATH(plugin executable copy installed_plugin_path_var\n                          <plugins_dir> <component> <configurations>)\n\nInstall (or copy) a resolved <plugin> to the default plugins directory\n(or <plugins_dir>) relative to <executable> and store the result in\n<installed_plugin_path_var>.\n\nIf <copy> is set to TRUE then the plugins will be copied rather than\ninstalled.  This is to allow this module to be used at CMake time\nrather than install time.\n\nIf <component> is set then anything installed will use this COMPONENT.\n\n::\n\n  INSTALL_QT4_PLUGIN(plugin executable copy installed_plugin_path_var\n                     <plugins_dir> <component>)\n\nInstall (or copy) an unresolved <plugin> to the default plugins\ndirectory (or <plugins_dir>) relative to <executable> and store the\nresult in <installed_plugin_path_var>.  See documentation of\nINSTALL_QT4_PLUGIN_PATH.\n\n::\n\n  INSTALL_QT4_EXECUTABLE(<executable>\n    [<qtplugins> <libs> <dirs> <plugins_dir> <request_qt_conf> <component>])\n\nInstalls Qt plugins, writes a Qt configuration file (if needed) and\nfixes up a Qt4 executable using BundleUtilities so it is standalone\nand can be drag-and-drop copied to another machine as long as all of\nthe system libraries are compatible.  The executable will be fixed-up\nat install time.  <component> is the COMPONENT used for bundle fixup\nand plugin installation.  See documentation of FIXUP_QT4_BUNDLE.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The functions defined in this file depend on the fixup_bundle function\n\n# (and others) found in BundleUtilities.cmake\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Documentation.cmake" : {
      "ObjectId" : "6e212490e015f700508fd3892ea6f7f489d0637f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# Documentation\n\n# -------------\n\n#\n\n# DocumentationVTK.cmake\n\n#\n\n# This file provides support for the VTK documentation framework.  It\n\n# relies on several tools (Doxygen, Perl, etc).\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Build the documentation ?\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Check for the tools\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#\n\n# The documentation process is controlled by a batch file.\n\n# We will probably need bash to create the custom target\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/ExternalData.cmake" : {
      "ObjectId" : "e5dbcd96399eff48f556b44cc857e45239acbffc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nExternalData\n------------\n\n.. only:: html\n\n   .. contents::\n\nManage data files stored outside source tree\n\nIntroduction\n^^^^^^^^^^^^\n\nUse this module to unambiguously reference data files stored outside\nthe source tree and fetch them at build time from arbitrary local and\nremote content-addressed locations.  Functions provided by this module\nrecognize arguments with the syntax ``DATA{<name>}`` as references to\nexternal data, replace them with full paths to local copies of those\ndata, and create build rules to fetch and update the local copies.\n\nFor example:\n\n.. code-block:: cmake\n\n include(ExternalData)\n set(ExternalData_URL_TEMPLATES \"file:///local/%(algo)/%(hash)\"\n                                \"file:////host/share/%(algo)/%(hash)\"\n                                \"http://data.org/%(algo)/%(hash)\")\n ExternalData_Add_Test(MyData\n   NAME MyTest\n   COMMAND MyExe DATA{MyInput.png}\n   )\n ExternalData_Add_Target(MyData)\n\nWhen test ``MyTest`` runs the ``DATA{MyInput.png}`` argument will be\nreplaced by the full path to a real instance of the data file\n``MyInput.png`` on disk.  If the source tree contains a content link\nsuch as ``MyInput.png.md5`` then the ``MyData`` target creates a real\n``MyInput.png`` in the build tree.\n\nModule Functions\n^^^^^^^^^^^^^^^^\n\n.. command:: ExternalData_Expand_Arguments\n\n  The ``ExternalData_Expand_Arguments`` function evaluates ``DATA{}``\n  references in its arguments and constructs a new list of arguments::\n\n    ExternalData_Expand_Arguments(\n      <target>   # Name of data management target\n      <outVar>   # Output variable\n      [args...]  # Input arguments, DATA{} allowed\n      )\n\n  It replaces each ``DATA{}`` reference in an argument with the full path of\n  a real data file on disk that will exist after the ``<target>`` builds.\n\n.. command:: ExternalData_Add_Test\n\n  The ``ExternalData_Add_Test`` function wraps around the CMake\n  :command:`add_test` command but supports ``DATA{}`` references in\n  its arguments::\n\n    ExternalData_Add_Test(\n      <target>   # Name of data management target\n      ...        # Arguments of add_test(), DATA{} allowed\n      )\n\n  It passes its arguments through ``ExternalData_Expand_Arguments`` and then\n  invokes the :command:`add_test` command using the results.\n\n.. command:: ExternalData_Add_Target\n\n  The ``ExternalData_Add_Target`` function creates a custom target to\n  manage local instances of data files stored externally::\n\n    ExternalData_Add_Target(\n      <target>   # Name of data management target\n      )\n\n  It creates custom commands in the target as necessary to make data\n  files available for each ``DATA{}`` reference previously evaluated by\n  other functions provided by this module.\n  Data files may be fetched from one of the URL templates specified in\n  the ``ExternalData_URL_TEMPLATES`` variable, or may be found locally\n  in one of the paths specified in the ``ExternalData_OBJECT_STORES``\n  variable.\n\n  Typically only one target is needed to manage all external data within\n  a project.  Call this function once at the end of configuration after\n  all data references have been processed.\n\nModule Variables\n^^^^^^^^^^^^^^^^\n\nThe following variables configure behavior.  They should be set before\ncalling any of the functions provided by this module.\n\n.. variable:: ExternalData_BINARY_ROOT\n\n  The ``ExternalData_BINARY_ROOT`` variable may be set to the directory to\n  hold the real data files named by expanded ``DATA{}`` references.  The\n  default is ``CMAKE_BINARY_DIR``.  The directory layout will mirror that of\n  content links under ``ExternalData_SOURCE_ROOT``.\n\n.. variable:: ExternalData_CUSTOM_SCRIPT_<key>\n\n  Specify a full path to a ``.cmake`` custom fetch script identified by\n  ``<key>`` in entries of the ``ExternalData_URL_TEMPLATES`` list.\n  See `Custom Fetch Scripts`_.\n\n.. variable:: ExternalData_LINK_CONTENT\n\n  The ``ExternalData_LINK_CONTENT`` variable may be set to the name of a\n  supported hash algorithm to enable automatic conversion of real data\n  files referenced by the ``DATA{}`` syntax into content links.  For each\n  such ``<file>`` a content link named ``<file><ext>`` is created.  The\n  original file is renamed to the form ``.ExternalData_<algo>_<hash>`` to\n  stage it for future transmission to one of the locations in the list\n  of URL templates (by means outside the scope of this module).  The\n  data fetch rule created for the content link will use the staged\n  object if it cannot be found using any URL template.\n\n.. variable:: ExternalData_NO_SYMLINKS\n\n  The real data files named by expanded ``DATA{}`` references may be made\n  available under ``ExternalData_BINARY_ROOT`` using symbolic links on\n  some platforms.  The ``ExternalData_NO_SYMLINKS`` variable may be set\n  to disable use of symbolic links and enable use of copies instead.\n\n.. variable:: ExternalData_OBJECT_STORES\n\n  The ``ExternalData_OBJECT_STORES`` variable may be set to a list of local\n  directories that store objects using the layout ``<dir>/%(algo)/%(hash)``.\n  These directories will be searched first for a needed object.  If the\n  object is not available in any store then it will be fetched remotely\n  using the URL templates and added to the first local store listed.  If\n  no stores are specified the default is a location inside the build\n  tree.\n\n.. variable:: ExternalData_SERIES_PARSE\n              ExternalData_SERIES_PARSE_PREFIX\n              ExternalData_SERIES_PARSE_NUMBER\n              ExternalData_SERIES_PARSE_SUFFIX\n              ExternalData_SERIES_MATCH\n\n  See `Referencing File Series`_.\n\n.. variable:: ExternalData_SOURCE_ROOT\n\n  The ``ExternalData_SOURCE_ROOT`` variable may be set to the highest source\n  directory containing any path named by a ``DATA{}`` reference.  The\n  default is ``CMAKE_SOURCE_DIR``.  ``ExternalData_SOURCE_ROOT`` and\n  ``CMAKE_SOURCE_DIR`` must refer to directories within a single source\n  distribution (e.g.  they come together in one tarball).\n\n.. variable:: ExternalData_TIMEOUT_ABSOLUTE\n\n  The ``ExternalData_TIMEOUT_ABSOLUTE`` variable sets the download\n  absolute timeout, in seconds, with a default of ``300`` seconds.\n  Set to ``0`` to disable enforcement.\n\n.. variable:: ExternalData_TIMEOUT_INACTIVITY\n\n  The ``ExternalData_TIMEOUT_INACTIVITY`` variable sets the download\n  inactivity timeout, in seconds, with a default of ``60`` seconds.\n  Set to ``0`` to disable enforcement.\n\n.. variable:: ExternalData_URL_ALGO_<algo>_<key>\n\n  Specify a custom URL component to be substituted for URL template\n  placeholders of the form ``%(algo:<key>)``, where ``<key>`` is a\n  valid C identifier, when fetching an object referenced via hash\n  algorithm ``<algo>``.  If not defined, the default URL component\n  is just ``<algo>`` for any ``<key>``.\n\n.. variable:: ExternalData_URL_TEMPLATES\n\n  The ``ExternalData_URL_TEMPLATES`` may be set to provide a list of\n  of URL templates using the placeholders ``%(algo)`` and ``%(hash)``\n  in each template.  Data fetch rules try each URL template in order\n  by substituting the hash algorithm name for ``%(algo)`` and the hash\n  value for ``%(hash)``.  Alternatively one may use ``%(algo:<key>)``\n  with ``ExternalData_URL_ALGO_<algo>_<key>`` variables to gain more\n  flexibility in remote URLs.\n\nReferencing Files\n^^^^^^^^^^^^^^^^^\n\nReferencing Single Files\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nThe ``DATA{}`` syntax is literal and the ``<name>`` is a full or relative path\nwithin the source tree.  The source tree must contain either a real\ndata file at ``<name>`` or a \"content link\" at ``<name><ext>`` containing a\nhash of the real file using a hash algorithm corresponding to ``<ext>``.\nFor example, the argument ``DATA{img.png}`` may be satisfied by either a\nreal ``img.png`` file in the current source directory or a ``img.png.md5``\nfile containing its MD5 sum.\n\nMultiple content links of the same name with different hash algorithms\nare supported (e.g. ``img.png.sha256`` and ``img.png.sha1``) so long as\nthey all correspond to the same real file.  This allows objects to be\nfetched from sources indexed by different hash algorithms.\n\nReferencing File Series\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nThe ``DATA{}`` syntax can be told to fetch a file series using the form\n``DATA{<name>,:}``, where the ``:`` is literal.  If the source tree\ncontains a group of files or content links named like a series then a\nreference to one member adds rules to fetch all of them.  Although all\nmembers of a series are fetched, only the file originally named by the\n``DATA{}`` argument is substituted for it.  The default configuration\nrecognizes file series names ending with ``#.ext``, ``_#.ext``, ``.#.ext``,\nor ``-#.ext`` where ``#`` is a sequence of decimal digits and ``.ext`` is\nany single extension.  Configure it with a regex that parses ``<number>``\nand ``<suffix>`` parts from the end of ``<name>``::\n\n ExternalData_SERIES_PARSE = regex of the form (<number>)(<suffix>)$\n\nFor more complicated cases set::\n\n ExternalData_SERIES_PARSE = regex with at least two () groups\n ExternalData_SERIES_PARSE_PREFIX = <prefix> regex group number, if any\n ExternalData_SERIES_PARSE_NUMBER = <number> regex group number\n ExternalData_SERIES_PARSE_SUFFIX = <suffix> regex group number\n\nConfigure series number matching with a regex that matches the\n``<number>`` part of series members named ``<prefix><number><suffix>``::\n\n ExternalData_SERIES_MATCH = regex matching <number> in all series members\n\nNote that the ``<suffix>`` of a series does not include a hash-algorithm\nextension.\n\nReferencing Associated Files\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nThe ``DATA{}`` syntax can alternatively match files associated with the\nnamed file and contained in the same directory.  Associated files may\nbe specified by options using the syntax\n``DATA{<name>,<opt1>,<opt2>,...}``.  Each option may specify one file by\nname or specify a regular expression to match file names using the\nsyntax ``REGEX:<regex>``.  For example, the arguments::\n\n DATA{MyData/MyInput.mhd,MyInput.img}                   # File pair\n DATA{MyData/MyFrames00.png,REGEX:MyFrames[0-9]+\\\\.png} # Series\n\nwill pass ``MyInput.mha`` and ``MyFrames00.png`` on the command line but\nensure that the associated files are present next to them.\n\nReferencing Directories\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nThe ``DATA{}`` syntax may reference a directory using a trailing slash and\na list of associated files.  The form ``DATA{<name>/,<opt1>,<opt2>,...}``\nadds rules to fetch any files in the directory that match one of the\nassociated file options.  For example, the argument\n``DATA{MyDataDir/,REGEX:.*}`` will pass the full path to a ``MyDataDir``\ndirectory on the command line and ensure that the directory contains\nfiles corresponding to every file or content link in the ``MyDataDir``\nsource directory.  In order to match associated files in subdirectories,\nspecify a ``RECURSE:`` option, e.g. ``DATA{MyDataDir/,RECURSE:,REGEX:.*}``.\n\nHash Algorithms\n^^^^^^^^^^^^^^^\n\nThe following hash algorithms are supported::\n\n %(algo)     <ext>     Description\n -------     -----     -----------\n MD5         .md5      Message-Digest Algorithm 5, RFC 1321\n SHA1        .sha1     US Secure Hash Algorithm 1, RFC 3174\n SHA224      .sha224   US Secure Hash Algorithms, RFC 4634\n SHA256      .sha256   US Secure Hash Algorithms, RFC 4634\n SHA384      .sha384   US Secure Hash Algorithms, RFC 4634\n SHA512      .sha512   US Secure Hash Algorithms, RFC 4634\n SHA3_224    .sha3-224 Keccak SHA-3\n SHA3_256    .sha3-256 Keccak SHA-3\n SHA3_384    .sha3-384 Keccak SHA-3\n SHA3_512    .sha3-512 Keccak SHA-3\n\nNote that the hashes are used only for unique data identification and\ndownload verification.\n\n.. _`ExternalData Custom Fetch Scripts`:\n\nCustom Fetch Scripts\n^^^^^^^^^^^^^^^^^^^^\n\nWhen a data file must be fetched from one of the URL templates\nspecified in the ``ExternalData_URL_TEMPLATES`` variable, it is\nnormally downloaded using the :command:`file(DOWNLOAD)` command.\nOne may specify usage of a custom fetch script by using a URL\ntemplate of the form ``ExternalDataCustomScript://<key>/<loc>``.\nThe ``<key>`` must be a C identifier, and the ``<loc>`` must\ncontain the ``%(algo)`` and ``%(hash)`` placeholders.\nA variable corresponding to the key, ``ExternalData_CUSTOM_SCRIPT_<key>``,\nmust be set to the full path to a ``.cmake`` script file.  The script\nwill be included to perform the actual fetch, and provided with\nthe following variables:\n\n.. variable:: ExternalData_CUSTOM_LOCATION\n\n  When a custom fetch script is loaded, this variable is set to the\n  location part of the URL, which will contain the substituted hash\n  algorithm name and content hash value.\n\n.. variable:: ExternalData_CUSTOM_FILE\n\n  When a custom fetch script is loaded, this variable is set to the\n  full path to a file in which the script must store the fetched\n  content.  The name of the file is unspecified and should not be\n  interpreted in any way.\n\nThe custom fetch script is expected to store fetched content in the\nfile or set a variable:\n\n.. variable:: ExternalData_CUSTOM_ERROR\n\n  When a custom fetch script fails to fetch the requested content,\n  it must set this variable to a short one-line message describing\n  the reason for failure.\n\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Expand all arguments as a single string to preserve escaped semicolons.\n",
        "Line" : 332,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Store custom script configuration.\n",
        "Line" : 347,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Store custom algorithm name to URL component maps.\n",
        "Line" : 374,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Store configuration for use by build-time script.\n",
        "Line" : 394,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set a \"_ExternalData_FILE_${file}\" variable for each output file to avoid\n\n# duplicate entries within this target.  Set a directory property of the same\n\n# name to avoid repeating custom commands with the same output in this directory.\n\n# Repeating custom commands with the same output across directories or across\n\n# targets in the same directory may be a race, but this is likely okay because\n\n# we use atomic replacement of output files.\n\n#\n\n# Use local data first to prefer real files over content links.\n",
        "Line" : 400,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Custom commands to copy or link local data.\n",
        "Line" : 409,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Custom commands to fetch remote data.\n",
        "Line" : 435,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Users care about the data file, so hide the hash/timestamp file.\n",
        "Line" : 451,
        "CharPositionInLine" : 10
      },
      "10" : {
        "Text" : "# The hash/timestamp file is the output from the build perspective.\n\n# List the real file as a second output in case it is a broken link.\n\n# The files must be listed in this order so CMake can hide from the\n\n# make tool that a symlink target may not be newer than the input.\n",
        "Line" : 453,
        "CharPositionInLine" : 10
      },
      "11" : {
        "Text" : "# Run the data fetch/update script.\n",
        "Line" : 458,
        "CharPositionInLine" : 10
      },
      "12" : {
        "Text" : "# Update whenever the object hash changes.\n",
        "Line" : 464,
        "CharPositionInLine" : 10
      },
      "13" : {
        "Text" : "# Custom target to drive all update commands.\n",
        "Line" : 472,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Replace DATA{} references with real arguments.\n",
        "Line" : 477,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# This list expansion un-escapes semicolons in list element values so we\n\n# must re-escape them below anywhere a new list expansion will occur.\n",
        "Line" : 481,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Re-escape in-value semicolons before expansion in foreach below.\n",
        "Line" : 485,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Split argument into DATA{}-pieces and other pieces.\n",
        "Line" : 487,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Compose output argument with DATA{}-pieces replaced.\n",
        "Line" : 489,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Replace this DATA{}-piece with a file path.\n",
        "Line" : 493,
        "CharPositionInLine" : 10
      },
      "20" : {
        "Text" : "# No replacement needed for this piece.\n",
        "Line" : 497,
        "CharPositionInLine" : 10
      },
      "21" : {
        "Text" : "# No replacements needed in this argument.\n",
        "Line" : 502,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# Re-escape in-value semicolons in resulting list.\n",
        "Line" : 505,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Private helper interface\n",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Separate data path from the options.\n",
        "Line" : 567,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Interpret trailing slashes as directories.\n",
        "Line" : 572,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Convert to full path.\n",
        "Line" : 579,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Convert to relative path under the source tree.\n",
        "Line" : 587,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Handle in-source builds gracefully.\n",
        "Line" : 611,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Entries external to the source tree.\n\n# Entries internal to the source tree.\n",
        "Line" : 620,
        "CharPositionInLine" : 19
      },
      "30" : {
        "Text" : "# Process options.\n",
        "Line" : 625,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Regular expression to match associated files.\n",
        "Line" : 631,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Activate series matching.\n",
        "Line" : 635,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "# Activate recursive matching in directories.\n",
        "Line" : 638,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "# Specific associated file.\n",
        "Line" : 641,
        "CharPositionInLine" : 6
      },
      "35" : {
        "Text" : "# Load a whole file series.\n",
        "Line" : 659,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# Load listed/matching associated files in the directory.\n",
        "Line" : 663,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "# Load the named data file.\n",
        "Line" : 674,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Load listed/matching associated files.\n",
        "Line" : 677,
        "CharPositionInLine" : 6
      },
      "39" : {
        "Text" : "# Make the series available in the build tree.\n",
        "Line" : 698,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# The whole series is in the source tree.\n",
        "Line" : 705,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# Associated files lie in the same directory.\n",
        "Line" : 711,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Find files named explicitly.\n",
        "Line" : 728,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Find files matching the given regular expressions.\n",
        "Line" : 735,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# Match only the named data by itself.\n",
        "Line" : 746,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Configure series parsing and matching.\n",
        "Line" : 752,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Parse the base, number, and extension components of the series.\n",
        "Line" : 785,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Glob files that might match the series.\n\n# Then match base, number, and extension.\n",
        "Line" : 799,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# matches\n",
        "Line" : 821,
        "CharPositionInLine" : 43
      },
      "49" : {
        "Text" : "# not staged obj\n",
        "Line" : 822,
        "CharPositionInLine" : 63
      },
      "50" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Private script mode interface\n",
        "Line" : 863,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Create a temporary file first.\n",
        "Line" : 879,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# Create a symbolic link.\n",
        "Line" : 885,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# Use relative path if files are close enough.\n",
        "Line" : 888,
        "CharPositionInLine" : 6
      },
      "54" : {
        "Text" : "# Create a copy.\n",
        "Line" : 898,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# Atomically create/replace the real destination.\n",
        "Line" : 906,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# Search all object stores for an existing object.\n",
        "Line" : 975,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# Search all object stores for an existing object.\n",
        "Line" : 988,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Download object to the first store.\n",
        "Line" : 1000,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# Verify downloaded object.\n",
        "Line" : 1032,
        "CharPositionInLine" : 6
      },
      "60" : {
        "Text" : "# Check if file already corresponds to the object.\n",
        "Line" : 1123,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# Touch the file to convince the build system it is up to date.\n",
        "Line" : 1135,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# Atomically update the hash/timestamp file to record the object referenced.\n",
        "Line" : 1141,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 63
    },
    "deps/src/cmake-3.13.4/Modules/ExternalProject.cmake" : {
      "ObjectId" : "f987d2d8f1acdc5a728442d4b2b57f28251e4669",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nExternalProject\n---------------\n\n.. only:: html\n\n   .. contents::\n\nExternal Project Definition\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. command:: ExternalProject_Add\n\n  The ``ExternalProject_Add()`` function creates a custom target to drive\n  download, update/patch, configure, build, install and test steps of an\n  external project::\n\n    ExternalProject_Add(<name> [<option>...])\n\n  The individual steps within the process can be driven independently if\n  required (e.g. for CDash submission) and extra custom steps can be defined,\n  along with the ability to control the step dependencies. The directory\n  structure used for the management of the external project can also be\n  customized. The function supports a large number of options which can be used\n  to tailor the external project behavior.\n\n  **Directory Options:**\n    Most of the time, the default directory layout is sufficient. It is largely\n    an implementation detail that the main project usually doesn't need to\n    change. In some circumstances, however, control over the directory layout\n    can be useful or necessary. The directory options are potentially more\n    useful from the point of view that the main build can use the\n    :command:`ExternalProject_Get_Property` command to retrieve their values,\n    thereby allowing the main project to refer to build artifacts of the\n    external project.\n\n    ``PREFIX <dir>``\n      Root directory for the external project. Unless otherwise noted below,\n      all other directories associated with the external project will be\n      created under here.\n\n    ``TMP_DIR <dir>``\n      Directory in which to store temporary files.\n\n    ``STAMP_DIR <dir>``\n      Directory in which to store the timestamps of each step. Log files from\n      individual steps are also created in here (see *Logging Options* below).\n\n    ``DOWNLOAD_DIR <dir>``\n      Directory in which to store downloaded files before unpacking them. This\n      directory is only used by the URL download method, all other download\n      methods use ``SOURCE_DIR`` directly instead.\n\n    ``SOURCE_DIR <dir>``\n      Source directory into which downloaded contents will be unpacked, or for\n      non-URL download methods, the directory in which the repository should be\n      checked out, cloned, etc. If no download method is specified, this must\n      point to an existing directory where the external project has already\n      been unpacked or cloned/checked out.\n\n      .. note::\n         If a download method is specified, any existing contents of the source\n         directory may be deleted. Only the URL download method checks whether\n         this directory is either missing or empty before initiating the\n         download, stopping with an error if it is not empty. All other\n         download methods silently discard any previous contents of the source\n         directory.\n\n    ``BINARY_DIR <dir>``\n      Specify the build directory location. This option is ignored if\n      ``BUILD_IN_SOURCE`` is enabled.\n\n    ``INSTALL_DIR <dir>``\n      Installation prefix to be placed in the ``<INSTALL_DIR>`` placeholder.\n      This does not actually configure the external project to install to\n      the given prefix. That must be done by passing appropriate arguments\n      to the external project configuration step, e.g. using ``<INSTALL_DIR>``.\n\n    If any of the above ``..._DIR`` options are not specified, their defaults\n    are computed as follows. If the ``PREFIX`` option is given or the\n    ``EP_PREFIX`` directory property is set, then an external project is built\n    and installed under the specified prefix::\n\n      TMP_DIR      = <prefix>/tmp\n      STAMP_DIR    = <prefix>/src/<name>-stamp\n      DOWNLOAD_DIR = <prefix>/src\n      SOURCE_DIR   = <prefix>/src/<name>\n      BINARY_DIR   = <prefix>/src/<name>-build\n      INSTALL_DIR  = <prefix>\n\n    Otherwise, if the ``EP_BASE`` directory property is set then components\n    of an external project are stored under the specified base::\n\n      TMP_DIR      = <base>/tmp/<name>\n      STAMP_DIR    = <base>/Stamp/<name>\n      DOWNLOAD_DIR = <base>/Download/<name>\n      SOURCE_DIR   = <base>/Source/<name>\n      BINARY_DIR   = <base>/Build/<name>\n      INSTALL_DIR  = <base>/Install/<name>\n\n    If no ``PREFIX``, ``EP_PREFIX``, or ``EP_BASE`` is specified, then the\n    default is to set ``PREFIX`` to ``<name>-prefix``. Relative paths are\n    interpreted with respect to :variable:`CMAKE_CURRENT_BINARY_DIR` at the\n    point where ``ExternalProject_Add()`` is called.\n\n  **Download Step Options:**\n    A download method can be omitted if the ``SOURCE_DIR`` option is used to\n    point to an existing non-empty directory. Otherwise, one of the download\n    methods below must be specified (multiple download methods should not be\n    given) or a custom ``DOWNLOAD_COMMAND`` provided.\n\n    ``DOWNLOAD_COMMAND <cmd>...``\n      Overrides the command used for the download step\n      (:manual:`generator expressions <cmake-generator-expressions(7)>` are\n      supported). If this option is specified, all other download options will\n      be ignored. Providing an empty string for ``<cmd>`` effectively disables\n      the download step.\n\n    *URL Download*\n      ``URL <url1> [<url2>...]``\n        List of paths and/or URL(s) of the external project's source. When more\n        than one URL is given, they are tried in turn until one succeeds. A URL\n        may be an ordinary path in the local file system (in which case it\n        must be the only URL provided) or any downloadable URL supported by the\n        :command:`file(DOWNLOAD)` command. A local filesystem path may refer to\n        either an existing directory or to an archive file, whereas a URL is\n        expected to point to a file which can be treated as an archive. When an\n        archive is used, it will be unpacked automatically unless the\n        ``DOWNLOAD_NO_EXTRACT`` option is set to prevent it. The archive type\n        is determined by inspecting the actual content rather than using logic\n        based on the file extension.\n\n      ``URL_HASH <algo>=<hashValue>``\n        Hash of the archive file to be downloaded. The argument should be of\n        the form ``<algo>=<hashValue>`` where ``algo`` can be any of the hashing\n        algorithms supported by the :command:`file()` command. Specifying this\n        option is strongly recommended for URL downloads, as it ensures the\n        integrity of the downloaded content. It is also used as a check for a\n        previously downloaded file, allowing connection to the remote location\n        to be avoided altogether if the local directory already has a file from\n        an earlier download that matches the specified hash.\n\n      ``URL_MD5 <md5>``\n        Equivalent to ``URL_HASH MD5=<md5>``.\n\n      ``DOWNLOAD_NAME <fname>``\n        File name to use for the downloaded file. If not given, the end of the\n        URL is used to determine the file name. This option is rarely needed,\n        the default name is generally suitable and is not normally used outside\n        of code internal to the ``ExternalProject`` module.\n\n      ``DOWNLOAD_NO_EXTRACT <bool>``\n        Allows the extraction part of the download step to be disabled by\n        passing a boolean true value for this option. If this option is not\n        given, the downloaded contents will be unpacked automatically if\n        required. If extraction has been disabled, the full path to the\n        downloaded file is available as ``<DOWNLOADED_FILE>`` in subsequent\n        steps or as the property ``DOWNLOADED_FILE`` with the\n        :command:`ExternalProject_Get_Property` command.\n\n      ``DOWNLOAD_NO_PROGRESS <bool>``\n        Can be used to disable logging the download progress. If this option is\n        not given, download progress messages will be logged.\n\n      ``TIMEOUT <seconds>``\n        Maximum time allowed for file download operations.\n\n      ``HTTP_USERNAME <username>``\n        Username for the download operation if authentication is required.\n\n      ``HTTP_PASSWORD <password>``\n        Password for the download operation if authentication is required.\n\n      ``HTTP_HEADER <header1> [<header2>...]``\n        Provides an arbitrary list of HTTP headers for the download operation.\n        This can be useful for accessing content in systems like AWS, etc.\n\n      ``TLS_VERIFY <bool>``\n        Specifies whether certificate verification should be performed for\n        https URLs. If this option is not provided, the default behavior is\n        determined by the ``CMAKE_TLS_VERIFY`` variable (see\n        :command:`file(DOWNLOAD)`). If that is also not set, certificate\n        verification will not be performed. In situations where ``URL_HASH``\n        cannot be provided, this option can be an alternative verification\n        measure.\n\n      ``TLS_CAINFO <file>``\n        Specify a custom certificate authority file to use if ``TLS_VERIFY``\n        is enabled. If this option is not specified, the value of the\n        ``CMAKE_TLS_CAINFO`` variable will be used instead (see\n        :command:`file(DOWNLOAD)`)\n\n      ``NETRC <level>``\n        Specify whether the .netrc file is to be used for operation. If this\n        option is not specified, the value of the ``CMAKE_NETRC`` variable\n        will be used instead (see :command:`file(DOWNLOAD)`)\n        Valid levels are:\n\n        ``IGNORED``\n          The .netrc file is ignored.\n          This is the default.\n        ``OPTIONAL``\n          The .netrc file is optional, and information in the URL is preferred.\n          The file will be scanned to find which ever information is not specified\n          in the URL.\n        ``REQUIRED``\n          The .netrc file is required, and information in the URL is ignored.\n\n      ``NETRC_FILE <file>``\n        Specify an alternative .netrc file to the one in your home directory\n        if the ``NETRC`` level is ``OPTIONAL`` or ``REQUIRED``. If this option\n        is not specified, the value of the ``CMAKE_NETRC_FILE`` variable will\n        be used instead (see :command:`file(DOWNLOAD)`)\n\n    *Git*\n      NOTE: A git version of 1.6.5 or later is required if this download method\n      is used.\n\n      ``GIT_REPOSITORY <url>``\n        URL of the git repository. Any URL understood by the ``git`` command\n        may be used.\n\n      ``GIT_TAG <tag>``\n        Git branch name, tag or commit hash. Note that branch names and tags\n        should generally be specified as remote names (i.e. ``origin/myBranch``\n        rather than simply ``myBranch``). This ensures that if the remote end\n        has its tag moved or branch rebased or history rewritten, the local\n        clone will still be updated correctly. In general, however, specifying\n        a commit hash should be preferred for a number of reasons:\n\n        - If the local clone already has the commit corresponding to the hash,\n          no ``git fetch`` needs to be performed to check for changes each time\n          CMake is re-run. This can result in a significant speed up if many\n          external projects are being used.\n        - Using a specific git hash ensures that the main project's own history\n          is fully traceable to a specific point in the external project's\n          evolution. If a branch or tag name is used instead, then checking out\n          a specific commit of the main project doesn't necessarily pin the\n          whole build to a specific point in the life of the external project.\n          The lack of such deterministic behavior makes the main project lose\n          traceability and repeatability.\n\n      ``GIT_REMOTE_NAME <name>``\n        The optional name of the remote. If this option is not specified, it\n        defaults to ``origin``.\n\n      ``GIT_SUBMODULES <module>...``\n        Specific git submodules that should also be updated. If this option is\n        not provided, all git submodules will be updated.\n\n      ``GIT_SHALLOW <bool>``\n        When this option is enabled, the ``git clone`` operation will be given\n        the ``--depth 1`` option. This performs a shallow clone, which avoids\n        downloading the whole history and instead retrieves just the commit\n        denoted by the ``GIT_TAG`` option.\n\n      ``GIT_PROGRESS <bool>``\n        When enabled, this option instructs the ``git clone`` operation to\n        report its progress by passing it the ``--progress`` option. Without\n        this option, the clone step for large projects may appear to make the\n        build stall, since nothing will be logged until the clone operation\n        finishes. While this option can be used to provide progress to prevent\n        the appearance of the build having stalled, it may also make the build\n        overly noisy if lots of external projects are used.\n\n      ``GIT_CONFIG <option1> [<option2>...]``\n        Specify a list of config options to pass to ``git clone``. Each option\n        listed will be transformed into its own ``--config <option>`` on the\n        ``git clone`` command line, with each option required to be in the\n        form ``key=value``.\n\n    *Subversion*\n      ``SVN_REPOSITORY <url>``\n        URL of the Subversion repository.\n\n      ``SVN_REVISION -r<rev>``\n        Revision to checkout from the Subversion repository.\n\n      ``SVN_USERNAME <username>``\n        Username for the Subversion checkout and update.\n\n      ``SVN_PASSWORD <password>``\n        Password for the Subversion checkout and update.\n\n      ``SVN_TRUST_CERT <bool>``\n        Specifies whether to trust the Subversion server site certificate. If\n        enabled, the ``--trust-server-cert`` option is passed to the ``svn``\n        checkout and update commands.\n\n    *Mercurial*\n      ``HG_REPOSITORY <url>``\n        URL of the mercurial repository.\n\n      ``HG_TAG <tag>``\n        Mercurial branch name, tag or commit id.\n\n    *CVS*\n      ``CVS_REPOSITORY <cvsroot>``\n        CVSROOT of the CVS repository.\n\n      ``CVS_MODULE <mod>``\n        Module to checkout from the CVS repository.\n\n      ``CVS_TAG <tag>``\n        Tag to checkout from the CVS repository.\n\n  **Update/Patch Step Options:**\n    Whenever CMake is re-run, by default the external project's sources will be\n    updated if the download method supports updates (e.g. a git repository\n    would be checked if the ``GIT_TAG`` does not refer to a specific commit).\n\n    ``UPDATE_COMMAND <cmd>...``\n      Overrides the download method's update step with a custom command.\n      The command may use\n      :manual:`generator expressions <cmake-generator-expressions(7)>`.\n\n    ``UPDATE_DISCONNECTED <bool>``\n      When enabled, this option causes the update step to be skipped. It does\n      not, however, prevent the download step. The update step can still be\n      added as a step target (see :command:`ExternalProject_Add_StepTargets`)\n      and called manually. This is useful if you want to allow developers to\n      build the project when disconnected from the network (the network may\n      still be needed for the download step though).\n\n      When this option is present, it is generally advisable to make the value\n      a cache variable under the developer's control rather than hard-coding\n      it. If this option is not present, the default value is taken from the\n      ``EP_UPDATE_DISCONNECTED`` directory property. If that is also not\n      defined, updates are performed as normal. The ``EP_UPDATE_DISCONNECTED``\n      directory property is intended as a convenience for controlling the\n      ``UPDATE_DISCONNECTED`` behavior for an entire section of a project's\n      directory hierarchy and may be a more convenient method of giving\n      developers control over whether or not to perform updates (assuming the\n      project also provides a cache variable or some other convenient method\n      for setting the directory property).\n\n    ``PATCH_COMMAND <cmd>...``\n      Specifies a custom command to patch the sources after an update. By\n      default, no patch command is defined. Note that it can be quite difficult\n      to define an appropriate patch command that performs robustly, especially\n      for download methods such as git where changing the ``GIT_TAG`` will not\n      discard changes from a previous patch, but the patch command will be\n      called again after updating to the new tag.\n\n  **Configure Step Options:**\n    The configure step is run after the download and update steps. By default,\n    the external project is assumed to be a CMake project, but this can be\n    overridden if required.\n\n    ``CONFIGURE_COMMAND <cmd>...``\n      The default configure command runs CMake with options based on the main\n      project. For non-CMake external projects, the ``CONFIGURE_COMMAND``\n      option must be used to override this behavior\n      (:manual:`generator expressions <cmake-generator-expressions(7)>` are\n      supported). For projects that require no configure step, specify this\n      option with an empty string as the command to execute.\n\n    ``CMAKE_COMMAND /.../cmake``\n      Specify an alternative cmake executable for the configure step (use an\n      absolute path). This is generally not recommended, since it is\n      usually desirable to use the same CMake version throughout the whole\n      build. This option is ignored if a custom configure command has been\n      specified with ``CONFIGURE_COMMAND``.\n\n    ``CMAKE_GENERATOR <gen>``\n      Override the CMake generator used for the configure step. Without this\n      option, the same generator as the main build will be used. This option is\n      ignored if a custom configure command has been specified with the\n      ``CONFIGURE_COMMAND`` option.\n\n    ``CMAKE_GENERATOR_PLATFORM <platform>``\n      Pass a generator-specific platform name to the CMake command (see\n      :variable:`CMAKE_GENERATOR_PLATFORM`). It is an error to provide this\n      option without the ``CMAKE_GENERATOR`` option.\n\n    ``CMAKE_GENERATOR_TOOLSET <toolset>``\n      Pass a generator-specific toolset name to the CMake command (see\n      :variable:`CMAKE_GENERATOR_TOOLSET`). It is an error to provide this\n      option without the ``CMAKE_GENERATOR`` option.\n\n    ``CMAKE_GENERATOR_INSTANCE <instance>``\n      Pass a generator-specific instance selection to the CMake command (see\n      :variable:`CMAKE_GENERATOR_INSTANCE`). It is an error to provide this\n      option without the ``CMAKE_GENERATOR`` option.\n\n    ``CMAKE_ARGS <arg>...``\n      The specified arguments are passed to the ``cmake`` command line. They\n      can be any argument the ``cmake`` command understands, not just cache\n      values defined by ``-D...`` arguments (see also\n      :manual:`CMake Options <cmake(1)>`). In addition, arguments may use\n      :manual:`generator expressions <cmake-generator-expressions(7)>`.\n\n    ``CMAKE_CACHE_ARGS <arg>...``\n      This is an alternate way of specifying cache variables where command line\n      length issues may become a problem. The arguments are expected to be in\n      the form ``-Dvar:STRING=value``, which are then transformed into\n      CMake :command:`set` commands with the ``FORCE`` option used. These\n      ``set()`` commands are written to a pre-load script which is then applied\n      using the :manual:`cmake -C <cmake(1)>` command line option. Arguments\n      may use :manual:`generator expressions <cmake-generator-expressions(7)>`.\n\n    ``CMAKE_CACHE_DEFAULT_ARGS <arg>...``\n      This is the same as the ``CMAKE_CACHE_ARGS`` option except the ``set()``\n      commands do not include the ``FORCE`` keyword. This means the values act\n      as initial defaults only and will not override any variables already set\n      from a previous run. Use this option with care, as it can lead to\n      different behavior depending on whether the build starts from a fresh\n      build directory or re-uses previous build contents.\n\n    ``SOURCE_SUBDIR <dir>``\n      When no ``CONFIGURE_COMMAND`` option is specified, the configure step\n      assumes the external project has a ``CMakeLists.txt`` file at the top of\n      its source tree (i.e. in ``SOURCE_DIR``). The ``SOURCE_SUBDIR`` option\n      can be used to point to an alternative directory within the source tree\n      to use as the top of the CMake source tree instead. This must be a\n      relative path and it will be interpreted as being relative to\n      ``SOURCE_DIR``.\n\n  **Build Step Options:**\n    If the configure step assumed the external project uses CMake as its build\n    system, the build step will also. Otherwise, the build step will assume a\n    Makefile-based build and simply run ``make`` with no arguments as the\n    default build step. This can be overridden with custom build commands if\n    required.\n\n    ``BUILD_COMMAND <cmd>...``\n      Overrides the default build command\n      (:manual:`generator expressions <cmake-generator-expressions(7)>` are\n      supported). If this option is not given, the default build command will\n      be chosen to integrate with the main build in the most appropriate way\n      (e.g. using recursive ``make`` for Makefile generators or\n      ``cmake --build`` if the project uses a CMake build). This option can be\n      specified with an empty string as the command to make the build step do\n      nothing.\n\n    ``BUILD_IN_SOURCE <bool>``\n      When this option is enabled, the build will be done directly within the\n      external project's source tree. This should generally be avoided, the use\n      of a separate build directory is usually preferred, but it can be useful\n      when the external project assumes an in-source build. The ``BINARY_DIR``\n      option should not be specified if building in-source.\n\n    ``BUILD_ALWAYS <bool>``\n      Enabling this option forces the build step to always be run. This can be\n      the easiest way to robustly ensure that the external project's own build\n      dependencies are evaluated rather than relying on the default\n      success timestamp-based method. This option is not normally needed unless\n      developers are expected to modify something the external project's build\n      depends on in a way that is not detectable via the step target\n      dependencies (e.g. ``SOURCE_DIR`` is used without a download method and\n      developers might modify the sources in ``SOURCE_DIR``).\n\n    ``BUILD_BYPRODUCTS <file>...``\n      Specifies files that will be generated by the build command but which\n      might or might not have their modification time updated by subsequent\n      builds. These ultimately get passed through as ``BYPRODUCTS`` to the\n      build step's own underlying call to :command:`add_custom_command`.\n\n  **Install Step Options:**\n    If the configure step assumed the external project uses CMake as its build\n    system, the install step will also. Otherwise, the install step will assume\n    a Makefile-based build and simply run ``make install`` as the default build\n    step. This can be overridden with custom install commands if required.\n\n    ``INSTALL_COMMAND <cmd>...``\n      The external project's own install step is invoked as part of the main\n      project's *build*. It is done after the external project's build step\n      and may be before or after the external project's test step (see the\n      ``TEST_BEFORE_INSTALL`` option below). The external project's install\n      rules are not part of the main project's install rules, so if anything\n      from the external project should be installed as part of the main build,\n      these need to be specified in the main build as additional\n      :command:`install` commands. The default install step builds the\n      ``install`` target of the external project, but this can be overridden\n      with a custom command using this option\n      (:manual:`generator expressions <cmake-generator-expressions(7)>` are\n      supported). Passing an empty string as the ``<cmd>`` makes the install\n      step do nothing.\n\n  **Test Step Options:**\n    The test step is only defined if at least one of the following ``TEST_...``\n    options are provided.\n\n    ``TEST_COMMAND <cmd>...``\n      Overrides the default test command\n      (:manual:`generator expressions <cmake-generator-expressions(7)>` are\n      supported). If this option is not given, the default behavior of the test\n      step is to build the external project's own ``test`` target. This option\n      can be specified with ``<cmd>`` as an empty string, which allows the test\n      step to still be defined, but it will do nothing. Do not specify any of\n      the other ``TEST_...`` options if providing an empty string as the test\n      command, but prefer to omit all ``TEST_...`` options altogether if the\n      test step target is not needed.\n\n    ``TEST_BEFORE_INSTALL <bool>``\n      When this option is enabled, the test step will be executed before the\n      install step. The default behavior is for the test step to run after the\n      install step.\n\n    ``TEST_AFTER_INSTALL <bool>``\n      This option is mainly useful as a way to indicate that the test step is\n      desired but all default behavior is sufficient. Specifying this option\n      with a boolean true value ensures the test step is defined and that it\n      comes after the install step. If both ``TEST_BEFORE_INSTALL`` and\n      ``TEST_AFTER_INSTALL`` are enabled, the latter is silently ignored.\n\n    ``TEST_EXCLUDE_FROM_MAIN <bool>``\n      If enabled, the main build's default ALL target will not depend on the\n      test step. This can be a useful way of ensuring the test step is defined\n      but only gets invoked when manually requested.\n\n  **Output Logging Options:**\n    Each of the following ``LOG_...`` options can be used to wrap the relevant\n    step in a script to capture its output to files. The log files will be\n    created in the ``STAMP_DIR`` directory with step-specific file names.\n\n    ``LOG_DOWNLOAD <bool>``\n      When enabled, the output of the download step is logged to files.\n\n    ``LOG_UPDATE <bool>``\n      When enabled, the output of the update step is logged to files.\n\n    ``LOG_CONFIGURE <bool>``\n      When enabled, the output of the configure step is logged to files.\n\n    ``LOG_BUILD <bool>``\n      When enabled, the output of the build step is logged to files.\n\n    ``LOG_INSTALL <bool>``\n      When enabled, the output of the install step is logged to files.\n\n    ``LOG_TEST <bool>``\n      When enabled, the output of the test step is logged to files.\n\n  **Terminal Access Options:**\n    Steps can be given direct access to the terminal in some cases. Giving a\n    step access to the terminal may allow it to receive terminal input if\n    required, such as for authentication details not provided by other options.\n    With the :generator:`Ninja` generator, these options place the steps in the\n    ``console`` :prop_gbl:`job pool <JOB_POOLS>`. Each step can be given access\n    to the terminal individually via the following options:\n\n    ``USES_TERMINAL_DOWNLOAD <bool>``\n      Give the download step access to the terminal.\n\n    ``USES_TERMINAL_UPDATE <bool>``\n      Give the update step access to the terminal.\n\n    ``USES_TERMINAL_CONFIGURE <bool>``\n      Give the configure step access to the terminal.\n\n    ``USES_TERMINAL_BUILD <bool>``\n      Give the build step access to the terminal.\n\n    ``USES_TERMINAL_INSTALL <bool>``\n      Give the install step access to the terminal.\n\n    ``USES_TERMINAL_TEST <bool>``\n      Give the test step access to the terminal.\n\n  **Target Options:**\n    ``DEPENDS <targets>...``\n      Specify other targets on which the external project depends. The other\n      targets will be brought up to date before any of the external project's\n      steps are executed. Because the external project uses additional custom\n      targets internally for each step, the ``DEPENDS`` option is the most\n      convenient way to ensure all of those steps depend on the other targets.\n      Simply doing\n      :command:`add_dependencies(\\<name\\> \\<targets\\>) <add_dependencies>` will\n      not make any of the steps dependent on ``<targets>``.\n\n    ``EXCLUDE_FROM_ALL <bool>``\n      When enabled, this option excludes the external project from the default\n      ALL target of the main build.\n\n    ``STEP_TARGETS <step-target>...``\n      Generate custom targets for the specified steps. This is required if the\n      steps need to be triggered manually or if they need to be used as\n      dependencies of other targets. If this option is not specified, the\n      default value is taken from the ``EP_STEP_TARGETS`` directory property.\n      See :command:`ExternalProject_Add_Step` below for further discussion of\n      the effects of this option.\n\n    ``INDEPENDENT_STEP_TARGETS <step-target>...``\n      Generate custom targets for the specified steps and prevent these targets\n      from having the usual dependencies applied to them. If this option is not\n      specified, the default value is taken from the\n      ``EP_INDEPENDENT_STEP_TARGETS`` directory property. This option is mostly\n      useful for allowing individual steps to be driven independently, such as\n      for a CDash setup where each step should be initiated and reported\n      individually rather than as one whole build. See\n      :command:`ExternalProject_Add_Step` below for further discussion of the\n      effects of this option.\n\n  **Miscellaneous Options:**\n    ``LIST_SEPARATOR <sep>``\n      For any of the various ``..._COMMAND`` options, replace ``;`` with\n      ``<sep>`` in the specified command lines. This can be useful where list\n      variables may be given in commands where they should end up as\n      space-separated arguments (``<sep>`` would be a single space character\n      string in this case).\n\n    ``COMMAND <cmd>...``\n      Any of the other ``..._COMMAND`` options can have additional commands\n      appended to them by following them with as many ``COMMAND ...`` options\n      as needed\n      (:manual:`generator expressions <cmake-generator-expressions(7)>` are\n      supported). For example::\n\n        ExternalProject_Add(example\n          ... # Download options, etc.\n          BUILD_COMMAND ${CMAKE_COMMAND} -E echo \"Starting $<CONFIG> build\"\n          COMMAND       ${CMAKE_COMMAND} --build <BINARY_DIR> --config $<CONFIG>\n          COMMAND       ${CMAKE_COMMAND} -E echo \"$<CONFIG> build complete\"\n        )\n\n  It should also be noted that each build step is created via a call to\n  :command:`ExternalProject_Add_Step`. See that command's documentation for the\n  automatic substitutions that are supported for some options.\n\nObtaining Project Properties\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. command:: ExternalProject_Get_Property\n\n  The ``ExternalProject_Get_Property()`` function retrieves external project\n  target properties::\n\n    ExternalProject_Get_Property(<name> <prop1> [<prop2>...])\n\n  The function stores property values in variables of the same name. Property\n  names correspond to the keyword argument names of ``ExternalProject_Add()``.\n  For example, the source directory might be retrieved like so:\n\n  .. code-block:: cmake\n\n    ExternalProject_Get_property(myExtProj SOURCE_DIR)\n    message(\"Source dir of myExtProj = ${SOURCE_DIR}\")\n\nExplicit Step Management\n^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe ``ExternalProject_Add()`` function on its own is often sufficient for\nincorporating an external project into the main build. Certain scenarios\nrequire additional work to implement desired behavior, such as adding in a\ncustom step or making steps available as manually triggerable targets. The\n``ExternalProject_Add_Step()``, ``ExternalProject_Add_StepTargets()`` and\n``ExternalProject_Add_StepDependencies`` functions provide the lower level\ncontrol needed to implement such step-level capabilities.\n\n.. command:: ExternalProject_Add_Step\n\n  The ``ExternalProject_Add_Step()`` function specifies an additional custom\n  step for an external project defined by an earlier call to\n  :command:`ExternalProject_Add`::\n\n    ExternalProject_Add_Step(<name> <step> [<option>...])\n\n  ``<name>`` is the same as the name passed to the original call to\n  :command:`ExternalProject_Add`. The specified ``<step>`` must not be one of\n  the pre-defined steps (``mkdir``, ``download``, ``update``, ``skip-update``,\n  ``patch``, ``configure``, ``build``, ``install`` or ``test``). The supported\n  options are:\n\n  ``COMMAND <cmd>...``\n    The command line to be executed by this custom step\n    (:manual:`generator expressions <cmake-generator-expressions(7)>` are\n    supported). This option can be repeated multiple times to specify multiple\n    commands to be executed in order.\n\n  ``COMMENT \"<text>...\"``\n    Text to be printed when the custom step executes.\n\n  ``DEPENDEES <step>...``\n    Other steps (custom or pre-defined) on which this step depends.\n\n  ``DEPENDERS <step>...``\n    Other steps (custom or pre-defined) that depend on this new custom step.\n\n  ``DEPENDS <file>...``\n    Files on which this custom step depends.\n\n  ``BYPRODUCTS <file>...``\n    Files that will be generated by this custom step but which might or might\n    not have their modification time updated by subsequent builds. This list of\n    files will ultimately be passed through as the ``BYPRODUCTS`` option to the\n    :command:`add_custom_command` used to implement the custom step internally.\n\n  ``ALWAYS <bool>``\n    When enabled, this option specifies that the custom step should always be\n    run (i.e. that it is always considered out of date).\n\n  ``EXCLUDE_FROM_MAIN <bool>``\n    When enabled, this option specifies that the external project's main target\n    does not depend on the custom step.\n\n  ``WORKING_DIRECTORY <dir>``\n    Specifies the working directory to set before running the custom step's\n    command. If this option is not specified, the directory will be the value\n    of the :variable:`CMAKE_CURRENT_BINARY_DIR` at the point where\n    ``ExternalProject_Add_Step()`` was called.\n\n  ``LOG <bool>``\n    If set, this causes the output from the custom step to be captured to files\n    in the external project's ``STAMP_DIR``.\n\n  ``USES_TERMINAL <bool>``\n    If enabled, this gives the custom step direct access to the terminal if\n    possible.\n\n  The command line, comment, working directory and byproducts of every\n  standard and custom step are processed to replace the tokens\n  ``<SOURCE_DIR>``, ``<SOURCE_SUBDIR>``, ``<BINARY_DIR>``, ``<INSTALL_DIR>``\n  ``<TMP_DIR>``, ``<DOWNLOAD_DIR>`` and ``<DOWNLOADED_FILE>`` with their\n  corresponding property values defined in the original call to\n  :command:`ExternalProject_Add`.\n\n.. command:: ExternalProject_Add_StepTargets\n\n  The ``ExternalProject_Add_StepTargets()`` function generates targets for the\n  steps listed. The name of each created target will be of the form\n  ``<name>-<step>``::\n\n    ExternalProject_Add_StepTargets(<name> [NO_DEPENDS] <step1> [<step2>...])\n\n  Creating a target for a step allows it to be used as a dependency of another\n  target or to be triggered manually. Having targets for specific steps also\n  allows them to be driven independently of each other by specifying targets on\n  build command lines. For example, you may be submitting to a sub-project\n  based dashboard where you want to drive the configure portion of the build,\n  then submit to the dashboard, followed by the build portion, followed\n  by tests. If you invoke a custom target that depends on a step halfway\n  through the step dependency chain, then all the previous steps will also run\n  to ensure everything is up to date.\n\n  If the ``NO_DEPENDS`` option is specified, the step target will not depend on\n  the dependencies of the external project (i.e. on any dependencies of the\n  ``<name>`` custom target created by :command:`ExternalProject_Add`). This is\n  usually safe for the ``download``, ``update`` and ``patch`` steps, since they\n  do not typically require that the dependencies are updated and built. Using\n  ``NO_DEPENDS`` for any of the other pre-defined steps, however, may break\n  parallel builds. Only use ``NO_DEPENDS`` where it is certain that the named\n  steps genuinely do not have dependencies. For custom steps, consider whether\n  or not the custom commands require the dependencies to be configured, built\n  and installed.\n\n  Internally, :command:`ExternalProject_Add` calls\n  :command:`ExternalProject_Add_Step` to create each step. If any\n  ``STEP_TARGETS`` or ``INDEPENDENT_STEP_TARGETS`` were specified, then\n  ``ExternalProject_Add_StepTargets()`` will also be called after\n  :command:`ExternalProject_Add_Step`. ``INDEPENDENT_STEP_TARGETS`` have the\n  ``NO_DEPENDS`` option set, whereas ``STEP_TARGETS`` do not. Other than that,\n  the two options result in ``ExternalProject_Add_StepTargets()`` being called\n  in the same way. Even if a step is not mentioned in either of those two\n  options, ``ExternalProject_Add_StepTargets()`` can still be called later to\n  manually define a target for the step.\n\n  The ``STEP_TARGETS`` and ``INDEPENDENT_STEP_TARGETS`` options for\n  :command:`ExternalProject_Add` are generally the easiest way to ensure\n  targets are created for specific steps of interest. For custom steps,\n  ``ExternalProject_Add_StepTargets()`` must be called explicitly if a target\n  should also be created for that custom step. An alternative to these two\n  options is to populate the ``EP_STEP_TARGETS`` and\n  ``EP_INDEPENDENT_STEP_TARGETS`` directory properties. These act as defaults\n  for the step target options and can save having to repeatedly specify the\n  same set of step targets when multiple external projects are being defined.\n\n.. command:: ExternalProject_Add_StepDependencies\n\n  The ``ExternalProject_Add_StepDependencies()`` function can be used to add\n  dependencies to a step. The dependencies added must be targets CMake already\n  knows about (these can be ordinary executable or library targets, custom\n  targets or even step targets of another external project)::\n\n    ExternalProject_Add_StepDependencies(<name> <step> <target1> [<target2>...])\n\n  This function takes care to set both target and file level dependencies and\n  will ensure that parallel builds will not break. It should be used instead of\n  :command:`add_dependencies` whenever adding a dependency for some of the step\n  targets generated by the ``ExternalProject`` module.\n\nExamples\n^^^^^^^^\n\nThe following example shows how to download and build a hypothetical project\ncalled *FooBar* from github:\n\n.. code-block:: cmake\n\n  include(ExternalProject)\n  ExternalProject_Add(foobar\n    GIT_REPOSITORY    git@github.com:FooCo/FooBar.git\n    GIT_TAG           origin/release/1.2.3\n  )\n\nFor the sake of the example, also define a second hypothetical external project\ncalled *SecretSauce*, which is downloaded from a web server. Two URLs are given\nto take advantage of a faster internal network if available, with a fallback to\na slower external server. The project is a typical ``Makefile`` project with no\nconfigure step, so some of the default commands are overridden. The build is\nonly required to build the *sauce* target:\n\n.. code-block:: cmake\n\n  find_program(MAKE_EXE NAMES gmake nmake make)\n  ExternalProject_Add(secretsauce\n    URL               http://intranet.somecompany.com/artifacts/sauce-2.7.tgz\n                      https://www.somecompany.com/downloads/sauce-2.7.zip\n    URL_HASH          MD5=d41d8cd98f00b204e9800998ecf8427e\n    CONFIGURE_COMMAND \"\"\n    BUILD_COMMAND     ${MAKE_EXE} sauce\n  )\n\nSuppose the build step of ``secretsauce`` requires that ``foobar`` must already\nbe built. This could be enforced like so:\n\n.. code-block:: cmake\n\n  ExternalProject_Add_StepDependencies(secretsauce build foobar)\n\nAnother alternative would be to create a custom target for ``foobar``'s build\nstep and make ``secretsauce`` depend on that rather than the whole ``foobar``\nproject. This would mean ``foobar`` only needs to be built, it doesn't need to\nrun its install or test steps before ``secretsauce`` can be built. The\ndependency can also be defined along with the ``secretsauce`` project:\n\n.. code-block:: cmake\n\n  ExternalProject_Add_StepTargets(foobar build)\n  ExternalProject_Add(secretsauce\n    URL               http://intranet.somecompany.com/artifacts/sauce-2.7.tgz\n                      https://www.somecompany.com/downloads/sauce-2.7.zip\n    URL_HASH          MD5=d41d8cd98f00b204e9800998ecf8427e\n    CONFIGURE_COMMAND \"\"\n    BUILD_COMMAND     ${MAKE_EXE} sauce\n    DEPENDS           foobar-build\n  )\n\nInstead of calling :command:`ExternalProject_Add_StepTargets`, the target could\nbe defined along with the ``foobar`` project itself:\n\n.. code-block:: cmake\n\n  ExternalProject_Add(foobar\n    GIT_REPOSITORY git@github.com:FooCo/FooBar.git\n    GIT_TAG        origin/release/1.2.3\n    STEP_TARGETS   build\n  )\n\nIf many external projects should have the same set of step targets, setting a\ndirectory property may be more convenient. The ``build`` step target could be\ncreated automatically by setting the ``EP_STEP_TARGETS`` directory property\nbefore creating the external projects with :command:`ExternalProject_Add`:\n\n.. code-block:: cmake\n\n  set_property(DIRECTORY PROPERTY EP_STEP_TARGETS build)\n\nLastly, suppose that ``secretsauce`` provides a script called ``makedoc`` which\ncan be used to generate its own documentation. Further suppose that the script\nexpects the output directory to be provided as the only parameter and that it\nshould be run from the ``secretsauce`` source directory. A custom step and a\ncustom target to trigger the script can be defined like so:\n\n.. code-block:: cmake\n\n  ExternalProject_Add_Step(secretsauce docs\n    COMMAND           <SOURCE_DIR>/makedoc <BINARY_DIR>\n    WORKING_DIRECTORY <SOURCE_DIR>\n    COMMENT           \"Building secretsauce docs\"\n    ALWAYS            TRUE\n    EXCLUDE_FROM_MAIN TRUE\n  )\n  ExternalProject_Add_StepTargets(secretsauce docs)\n\nThe custom step could then be triggered from the main build like so::\n\n  cmake --build . --target secretsauce-docs\n\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if() quoted variables not dereferenced\n",
        "Line" : 886,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "# Pre-compute a regex to match documented keywords for each command.\n",
        "Line" : 888,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#message(\"function [${_ep_func}]\")\n",
        "Line" : 899,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# COMMAND should never be included as a keyword,\n\n# for ExternalProject_Add(), as it is treated as a\n\n# special case by argument parsing as an extension\n\n# of a previous ..._COMMAND\n",
        "Line" : 904,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#message(\"  keyword [${_ep_key}]\")\n",
        "Line" : 912,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Save regex matching supported hash algorithm names.\n",
        "Line" : 922,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Transfer the arguments to this function into target properties for the\n\n# new custom target we just added so that we can set up all the build steps\n\n# correctly based on target properties.\n\n#\n\n# We loop through ARGN and consider the namespace starting with an\n\n# upper-case letter followed by at least two more upper-case letters,\n\n# numbers or underscores to be keywords.\n",
        "Line" : 930,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Value\n",
        "Line" : 957,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Missing Keyword\n",
        "Line" : 970,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Use `git checkout <tree-ish> --` to avoid ambiguity with a local path.\n",
        "Line" : 1026,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Use `git checkout <branch>` even though this risks ambiguity with a\n\n# local path.  Unfortunately we cannot use `git checkout <tree-ish> --`\n\n# because that will not search for remote branch names, a common use case.\n",
        "Line" : 1029,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# check for curl globals in the project\n",
        "Line" : 1410,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# now check for curl locals so that the local values\n\n# will override the globals\n",
        "Line" : 1424,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# check for tls_verify argument\n",
        "Line" : 1427,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# check for tls_cainfo argument\n",
        "Line" : 1432,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# check for netrc argument\n",
        "Line" : 1437,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# check for netrc_file argument\n",
        "Line" : 1442,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Used variables:\n\n# * TLS_VERIFY_CODE\n\n# * TLS_CAINFO_CODE\n\n# * ALGO\n\n# * EXPECT_VALUE\n\n# * REMOTE\n\n# * LOCAL\n\n# * SHOW_PROGRESS\n\n# * TIMEOUT_ARGS\n\n# * TIMEOUT_MSG\n\n# * USERPWD_ARGS\n\n# * HTTP_HEADERS_ARGS\n",
        "Line" : 1464,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Used variables:\n\n# * ALGO\n\n# * EXPECT_VALUE\n\n# * LOCAL\n",
        "Line" : 1492,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Prefix with a slash so that when appended to the source directory, it\n\n# behaves as expected.\n",
        "Line" : 1639,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Make the directories at CMake configure time *and* add a custom command\n\n# to make them at build time. They need to exist at makefile generation\n\n# time for Borland make and wmake so that CMake may generate makefiles\n\n# with \"cd C:\\short\\paths\\with\\no\\spaces\" commands in them.\n\n#\n\n# Additionally, the add_custom_command is still used in case somebody\n\n# removes one of the necessary directories and tries to rebuild without\n\n# re-running cmake.\n",
        "Line" : 1648,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# IMPORTANT: this MUST be a macro and not a function because of the\n\n# in-place replacements that occur in each ${var}\n\n#\n",
        "Line" : 1667,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# This is required to build up lists in variables, or complete an entry\n",
        "Line" : 1695,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# Assume this is a list to append to the last var\n",
        "Line" : 1710,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# Catch the final line of the args\n",
        "Line" : 1714,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Write out values into an initial cache, that will be passed to CMake with -C\n\n# Replace location tags.\n",
        "Line" : 1724,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Write out the initial cache file to the location specified.\n",
        "Line" : 1728,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Explicit empty string means no configure step for this project\n",
        "Line" : 1750,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Default is \"use cmake\":\n",
        "Line" : 1754,
        "CharPositionInLine" : 6
      },
      "31" : {
        "Text" : "# Otherwise we have to analyze the value:\n",
        "Line" : 1757,
        "CharPositionInLine" : 6
      },
      "32" : {
        "Text" : "# CMake project.  Select build command based on generator.\n",
        "Line" : 1777,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# The project uses the same Makefile generator.  Use recursive make.\n",
        "Line" : 1781,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "# Drive the project with \"cmake --build\".\n",
        "Line" : 1790,
        "CharPositionInLine" : 6
      },
      "35" : {
        "Text" : "# CMake 3.4 and below used the CMAKE_CFG_INTDIR placeholder value\n\n# provided by multi-configuration generators.  Some projects were\n\n# taking advantage of that undocumented implementation detail to\n\n# specify a specific configuration here.  They should use\n\n# BUILD_COMMAND to change the default command instead, but for\n\n# compatibility honor the value.\n",
        "Line" : 1803,
        "CharPositionInLine" : 10
      },
      "36" : {
        "Text" : "# But for \"TEST\" drive the project with corresponding \"ctest\".\n",
        "Line" : 1820,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "# Non-CMake project.  Guess \"make\" and \"make install\" and \"make test\".\n",
        "Line" : 1830,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Try to get the parallel arguments\n",
        "Line" : 1832,
        "CharPositionInLine" : 6
      },
      "39" : {
        "Text" : "# Use user-specified arguments instead of default arguments, if any.\n",
        "Line" : 1845,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# GNU make recognizes the string \"$(MAKE)\" as recursive make, so\n\n# ensure that it appears directly in the makefile.\n",
        "Line" : 1862,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# Wrap multiple 'COMMAND' lines up into a second-level wrapper\n\n# script so all output can be sent to one log file.\n",
        "Line" : 1891,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Wrap the command in a script to log output to files.\n",
        "Line" : 1925,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# This module used to use \"/${CMAKE_CFG_INTDIR}\" directly and produced\n\n# makefiles with \"/./\" in paths for custom command dependencies. Which\n\n# resulted in problems with parallel make -j invocations.\n\n#\n\n# This function was added so that the suffix (search below for ${cfgdir}) is\n\n# only set to \"/${CMAKE_CFG_INTDIR}\" when ${CMAKE_CFG_INTDIR} is not going to\n\n# be \".\" (multi-configuration build systems like Visual Studio and Xcode...)\n\n#\n",
        "Line" : 1954,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Depend on other external projects (target-level).\n",
        "Line" : 2008,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# Steps depending on this step.\n",
        "Line" : 2034,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Dependencies on files.\n",
        "Line" : 2044,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Byproducts of the step.\n",
        "Line" : 2047,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# Dependencies on steps.\n",
        "Line" : 2050,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# The command to run.\n",
        "Line" : 2057,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# Replace list separators.\n",
        "Line" : 2066,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# Replace location tags.\n",
        "Line" : 2072,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# Custom comment?\n",
        "Line" : 2075,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Uses terminal?\n",
        "Line" : 2081,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Run every time?\n",
        "Line" : 2089,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Remove any existing stamp in case the option changed in an existing tree.\n",
        "Line" : 2094,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# Wrap with log script?\n",
        "Line" : 2108,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# Some generators (i.e. Xcode) will not generate a file level target\n\n# if no command is set, and therefore the dependencies on this\n\n# target will be broken.\n\n# The empty command is replaced by an echo command here in order to\n\n# avoid this issue.\n",
        "Line" : 2115,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# Add custom \"step target\"?\n",
        "Line" : 2136,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# Sanity checks on \"name\" and \"step\".\n",
        "Line" : 2164,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# Always add file-level dependency, but add target-level dependency\n\n# only if the target exists for that step.\n",
        "Line" : 2196,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# TODO: Perhaps file:// should be copied to download dir before extraction.\n",
        "Line" : 2253,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# Use CMake builtin find module\n",
        "Line" : 2326,
        "CharPositionInLine" : 29
      },
      "63" : {
        "Text" : "# The git submodule update '--recursive' flag requires git >= v1.6.5\n\n#\n",
        "Line" : 2332,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# For the download step, and the git clone operation, only the repository\n\n# should be recorded in a configured RepositoryInfo file. If the repo\n\n# changes, the clone script should be run again. But if only the tag\n\n# changes, avoid running the clone script again. Let the 'always' running\n\n# update step checkout the new tag.\n\n#\n",
        "Line" : 2357,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "# Since git clone doesn't succeed if the non-empty source_dir exists,\n\n# create a cmake script to invoke as download command.\n\n# The script will delete the source directory and then call git clone.\n\n#\n",
        "Line" : 2375,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# For the download step, and the hg clone operation, only the repository\n\n# should be recorded in a configured RepositoryInfo file. If the repo\n\n# changes, the clone script should be run again. But if only the tag\n\n# changes, avoid running the clone script again. Let the 'always' running\n\n# update step checkout the new tag.\n\n#\n",
        "Line" : 2397,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# Since hg clone doesn't succeed if the non-empty source_dir exists,\n\n# create a cmake script to invoke as download command.\n\n# The script will delete the source directory and then call hg clone.\n\n#\n",
        "Line" : 2415,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# TODO: Should download and extraction be different steps?\n",
        "Line" : 2471,
        "CharPositionInLine" : 8
      },
      "69" : {
        "Text" : "# Fall back to a default file name.  The actual file name does not\n\n# matter because it is used only internally and our extraction tool\n\n# inspects the file content directly.  If it turns out the wrong URL\n\n# was given that will be revealed during the build which is an easier\n\n# place for users to diagnose than an error here anyway.\n",
        "Line" : 2480,
        "CharPositionInLine" : 10
      },
      "70" : {
        "Text" : "# already verified by 'download_script'\n",
        "Line" : 2508,
        "CharPositionInLine" : 59
      },
      "71" : {
        "Text" : "# Use CMake builtin find module\n",
        "Line" : 2630,
        "CharPositionInLine" : 29
      },
      "72" : {
        "Text" : "# If there are any CMAKE_CACHE_ARGS or CMAKE_CACHE_DEFAULT_ARGS,\n\n# write an initial cache and use it\n",
        "Line" : 2753,
        "CharPositionInLine" : 4
      },
      "73" : {
        "Text" : "# TODO: Make sure external projects use the proper compiler\n",
        "Line" : 2827,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Depend on other external projects (file-level).\n",
        "Line" : 2831,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# If anything about the configure command changes, (command itself, cmake\n\n# used, cmake args or cmake generator) then re-run the configure step.\n\n# Fixes issue https://gitlab.kitware.com/cmake/cmake/issues/10258\n\n#\n",
        "Line" : 2847,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# Only actually add the test step if one of the test related properties is\n\n# explicitly set. (i.e. the test step is omitted unless requested...)\n\n#\n",
        "Line" : 2985,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "# Add a custom target for the external project.\n",
        "Line" : 3044,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# The \"ALL\" option to add_custom_target just tells it to not set the\n\n# EXCLUDE_FROM_ALL target property. Later, if the EXCLUDE_FROM_ALL\n\n# argument was passed, we explicitly set it for the target.\n",
        "Line" : 3048,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# Set the EXCLUDE_FROM_ALL target property if required.\n",
        "Line" : 3061,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "# The 'complete' step depends on all other steps and creates a\n\n# 'done' mark.  A dependent external project's 'configure' step\n\n# depends on the 'done' mark so that it rebuilds when this project\n\n# rebuilds.  It is important that 'done' is not the output of any\n\n# custom command so that CMake does not propagate build rules to\n\n# other external project targets, which may cause problems during\n\n# parallel builds.  However, the Ninja generator needs to see the entire\n\n# dependency graph, and can cope with custom commands belonging to\n\n# multiple targets, so we add the 'done' mark as an output for Ninja only.\n",
        "Line" : 3067,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# Depend on other external projects (target-level).\n",
        "Line" : 3092,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# Set up custom build steps based on the target properties.\n\n# Each step depends on the previous one.\n\n#\n\n# The target depends on the output of the final step.\n\n# (Already set up above in the DEPENDS of the add_custom_target command.)\n\n#\n",
        "Line" : 3098,
        "CharPositionInLine" : 2
      },
      "83" : {
        "Text" : "# Test is special in that it might depend on build, or it might depend\n\n# on install.\n\n#\n",
        "Line" : 3112,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 84
    },
    "deps/src/cmake-3.13.4/Modules/FLTKCompatibility.cmake" : {
      "ObjectId" : "e91531fa7d9e1b1afe88bf6e7ae3c021ae0e3c68",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/FeatureSummary.cmake" : {
      "ObjectId" : "fbce235f5844846b5fe2b50dd24603d7bb353b3c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFeatureSummary\n--------------\n\nFunctions for generating a summary of enabled/disabled features.\n\nThese functions can be used to generate a summary of enabled and disabled\npackages and/or feature for a build tree such as::\n\n    -- The following OPTIONAL packages have been found:\n    LibXml2 (required version >= 2.4), XML processing lib, <http://xmlsoft.org>\n       * Enables HTML-import in MyWordProcessor\n       * Enables odt-export in MyWordProcessor\n    PNG, A PNG image library., <http://www.libpng.org/pub/png/>\n       * Enables saving screenshots\n    -- The following OPTIONAL packages have not been found:\n    Lua51, The Lua scripting language., <http://www.lua.org>\n       * Enables macros in MyWordProcessor\n    Foo, Foo provides cool stuff.\n\nGlobal Properties\n^^^^^^^^^^^^^^^^^\n\n.. variable:: FeatureSummary_PKG_TYPES\n\nThe global property :variable:`FeatureSummary_PKG_TYPES` defines the type of\npackages used by `FeatureSummary`.\n\nThe order in this list is important, the first package type in the list is the\nleast important, the last is the most important. the of a package can only be\nchanged to higher types.\n\nThe default package types are , ``RUNTIME``, ``OPTIONAL``, ``RECOMMENDED`` and\n``REQUIRED``, and their importance is\n``RUNTIME < OPTIONAL < RECOMMENDED < REQUIRED``.\n\n\n.. variable:: FeatureSummary_REQUIRED_PKG_TYPES\n\nThe global property :variable:`FeatureSummary_REQUIRED_PKG_TYPES` defines which\npackage types are required.\n\nIf one or more package in this categories has not been found, CMake will abort\nwhen calling :command:`feature_summary` with the\n'FATAL_ON_MISSING_REQUIRED_PACKAGES' option enabled.\n\nThe default value for this global property is ``REQUIRED``.\n\n\n.. variable:: FeatureSummary_DEFAULT_PKG_TYPE\n\nThe global property :variable:`FeatureSummary_DEFAULT_PKG_TYPE` defines which\npackage type is the default one.\nWhen calling :command:`feature_summary`, if the user did not set the package type\nexplicitly, the package will be assigned to this category.\n\nThis value must be one of the types defined in the\n:variable:`FeatureSummary_PKG_TYPES` global property unless the package type\nis set for all the packages.\n\nThe default value for this global property is ``OPTIONAL``.\n\n\n.. variable:: FeatureSummary_<TYPE>_DESCRIPTION\n\nThe global property :variable:`FeatureSummary_<TYPE>_DESCRIPTION` can be defined\nfor each type to replace the type name with the specified string whenever the\npackage type is used in an output string.\n\nIf not set, the string \"``<TYPE>`` packages\" is used.\n\n\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#[=======================================================================[.rst:\n\nFunctions\n^^^^^^^^^\n\n#]=======================================================================]",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# does this package belong to the type we currently want to list ?\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# check whether the current feature/package should be in the output depending on whether it was QUIET or not\n",
        "Line" : 145,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# skip QUIET packages, except if they are REQUIRED or INCLUDE_QUIET_PACKAGES has been set\n",
        "Line" : 148,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "#[=======================================================================[.rst:\n.. command:: feature_summary\n\n  ::\n\n    feature_summary( [FILENAME <file>]\n                     [APPEND]\n                     [VAR <variable_name>]\n                     [INCLUDE_QUIET_PACKAGES]\n                     [FATAL_ON_MISSING_REQUIRED_PACKAGES]\n                     [DESCRIPTION \"<description>\" | DEFAULT_DESCRIPTION]\n                     [QUIET_ON_EMPTY]\n                     WHAT (ALL\n                          | PACKAGES_FOUND | PACKAGES_NOT_FOUND\n                          | <TYPE>_PACKAGES_FOUND | <TYPE>_PACKAGES_NOT_FOUND\n                          | ENABLED_FEATURES | DISABLED_FEATURES)\n                   )\n\n  The ``feature_summary()`` macro can be used to print information about\n  enabled or disabled packages or features of a project.  By default,\n  only the names of the features/packages will be printed and their\n  required version when one was specified.  Use ``set_package_properties()``\n  to add more useful information, like e.g.  a download URL for the\n  respective package or their purpose in the project.\n\n  The ``WHAT`` option is the only mandatory option.  Here you specify what\n  information will be printed:\n\n  ``ALL``\n   print everything\n  ``ENABLED_FEATURES``\n   the list of all features which are enabled\n  ``DISABLED_FEATURES``\n   the list of all features which are disabled\n  ``PACKAGES_FOUND``\n   the list of all packages which have been found\n  ``PACKAGES_NOT_FOUND``\n   the list of all packages which have not been found\n\n  For each package type ``<TYPE>`` defined by the\n  :variable:`FeatureSummary_PKG_TYPES` global property, the following\n  information can also be used:\n\n  ``<TYPE>_PACKAGES_FOUND``\n   only those packages which have been found which have the type <TYPE>\n  ``<TYPE>_PACKAGES_NOT_FOUND``\n   only those packages which have not been found which have the type <TYPE>\n\n  With the exception of the ``ALL`` value, these values can be combined\n  in order to customize the output. For example:\n\n  .. code-block:: cmake\n\n    feature_summary(WHAT ENABLED_FEATURES DISABLED_FEATURES)\n\n  If a ``FILENAME`` is given, the information is printed into this file.  If\n  ``APPEND`` is used, it is appended to this file, otherwise the file is\n  overwritten if it already existed.  If the VAR option is used, the\n  information is \"printed\" into the specified variable.  If ``FILENAME`` is\n  not used, the information is printed to the terminal.  Using the\n  ``DESCRIPTION`` option a description or headline can be set which will be\n  printed above the actual content.  If only one type of\n  package was requested, no title is printed, unless it is explicitly set using\n  either ``DESCRIPTION`` to use a custom string, or ``DEFAULT_DESCRIPTION`` to\n  use a default title for the requested type.\n  If ``INCLUDE_QUIET_PACKAGES`` is given, packages which have been searched with\n  ``find_package(... QUIET)`` will also be listed. By default they are skipped.\n  If ``FATAL_ON_MISSING_REQUIRED_PACKAGES`` is given, CMake will abort if a\n  package which is marked as one of the package types listed in the\n  :variable:`FeatureSummary_REQUIRED_PKG_TYPES` global property has not been\n  found.\n  The default value for the :variable:`FeatureSummary_REQUIRED_PKG_TYPES` global\n  property is ``REQUIRED``.\n\n  The :variable:`FeatureSummary_DEFAULT_PKG_TYPE` global property can be\n  modified to change the default package type assigned when not explicitly\n  assigned by the user.\n\n  If the ``QUIET_ON_EMPTY`` option is used, if only one type of package was\n  requested, and no packages belonging to that category were found, then no\n  output (including the ``DESCRIPTION``) is printed or added to the ``VAR``\n  variable.\n\n  Example 1, append everything to a file:\n\n  .. code-block:: cmake\n\n   include(FeatureSummary)\n   feature_summary(WHAT ALL\n                   FILENAME ${CMAKE_BINARY_DIR}/all.log APPEND)\n\n  Example 2, print the enabled features into the variable\n  enabledFeaturesText, including QUIET packages:\n\n  .. code-block:: cmake\n\n   include(FeatureSummary)\n   feature_summary(WHAT ENABLED_FEATURES\n                   INCLUDE_QUIET_PACKAGES\n                   DESCRIPTION \"Enabled Features:\"\n                   VAR enabledFeaturesText)\n   message(STATUS \"${enabledFeaturesText}\")\n\n  Example 3, change default package types and print only the categories that\n  are not empty:\n\n  .. code-block:: cmake\n\n   include(FeatureSummary)\n   set_property(GLOBAL APPEND PROPERTY FeatureSummary_PKG_TYPES BUILD)\n   find_package(FOO)\n   set_package_properties(FOO PROPERTIES TYPE BUILD)\n   feature_summary(WHAT BUILD_PACKAGES_FOUND\n                   Description \"Build tools found:\"\n                   QUIET_ON_EMPTY)\n   feature_summary(WHAT BUILD_PACKAGES_NOT_FOUND\n                   Description \"Build tools not found:\"\n                   QUIET_ON_EMPTY)\n\n#]=======================================================================]",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# CMAKE_PARSE_ARGUMENTS(<prefix> <options> <one_value_keywords> <multi_value_keywords> args...)\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#[=======================================================================[.rst:\n.. command:: set_package_properties\n\n  ::\n\n    set_package_properties(<name> PROPERTIES\n                           [ URL <url> ]\n                           [ DESCRIPTION <description> ]\n                           [ TYPE (RUNTIME|OPTIONAL|RECOMMENDED|REQUIRED) ]\n                           [ PURPOSE <purpose> ]\n                          )\n\n  Use this macro to set up information about the named package, which\n  can then be displayed via FEATURE_SUMMARY().  This can be done either\n  directly in the Find-module or in the project which uses the module\n  after the find_package() call.  The features for which information can\n  be set are added automatically by the find_package() command.\n\n  ``URL <url>``\n    This should be the homepage of the package, or something similar.\n    Ideally this is set already directly in the Find-module.\n\n  ``DESCRIPTION <description>``\n    A short description what that package is, at most one sentence.\n    Ideally this is set already directly in the Find-module.\n\n  ``TYPE <type>``\n    What type of dependency has the using project on that package.\n    Default is ``OPTIONAL``.  In this case it is a package which can be used\n    by the project when available at buildtime, but it also work without.\n    ``RECOMMENDED`` is similar to ``OPTIONAL``, i.e.  the project will build if\n    the package is not present, but the functionality of the resulting\n    binaries will be severely limited.  If a ``REQUIRED`` package is not\n    available at buildtime, the project may not even build.  This can be\n    combined with the ``FATAL_ON_MISSING_REQUIRED_PACKAGES`` argument for\n    ``feature_summary()``.  Last, a ``RUNTIME`` package is a package which is\n    actually not used at all during the build, but which is required for\n    actually running the resulting binaries.  So if such a package is\n    missing, the project can still be built, but it may not work later on.\n    If ``set_package_properties()`` is called multiple times for the same\n    package with different TYPEs, the ``TYPE`` is only changed to higher\n    TYPEs (``RUNTIME < OPTIONAL < RECOMMENDED < REQUIRED``), lower TYPEs are\n    ignored.  The ``TYPE`` property is project-specific, so it cannot be set\n    by the Find-module, but must be set in the project.\n    Type accepted can be changed by setting the\n    :variable:`FeatureSummary_PKG_TYPES` global property.\n\n  ``PURPOSE <purpose>``\n    This describes which features this package enables in the\n    project, i.e.  it tells the user what functionality he gets in the\n    resulting binaries.  If set_package_properties() is called multiple\n    times for a package, all PURPOSE properties are appended to a list of\n    purposes of the package in the project.  As the TYPE property, also\n    the PURPOSE property is project-specific, so it cannot be set by the\n    Find-module, but must be set in the project.\n\n  Example for setting the info for a package:\n\n  .. code-block:: cmake\n\n    find_package(LibXml2)\n    set_package_properties(LibXml2 PROPERTIES\n                           DESCRIPTION \"A XML processing library.\"\n                           URL \"http://xmlsoft.org/\")\n    # or\n    set_package_properties(LibXml2 PROPERTIES\n                           TYPE RECOMMENDED\n                           PURPOSE \"Enables HTML-import in MyWordProcessor\")\n    # or\n    set_package_properties(LibXml2 PROPERTIES\n                           TYPE OPTIONAL\n                           PURPOSE \"Enables odt-export in MyWordProcessor\")\n\n    find_package(DBUS)\n    set_package_properties(DBUS PROPERTIES\n      TYPE RUNTIME\n      PURPOSE \"Necessary to disable the screensaver during a presentation\")\n#]=======================================================================]",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# none\n",
        "Line" : 547,
        "CharPositionInLine" : 16
      },
      "10" : {
        "Text" : "# none\n",
        "Line" : 549,
        "CharPositionInLine" : 23
      },
      "11" : {
        "Text" : "# handle the PURPOSE: use APPEND, since there can be multiple purposes for one package inside a project\n",
        "Line" : 577,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# handle the TYPE\n",
        "Line" : 585,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Supported types are listed in FeatureSummary_PKG_TYPES according to their priority\n",
        "Line" : 587,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# make sure a previously set TYPE is not overridden with a lower new TYPE:\n",
        "Line" : 600,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#[=======================================================================[.rst:\n.. command:: add_feature_info\n\n  ::\n\n    add_feature_info(<name> <enabled> <description>)\n\n  Use this macro to add information about a feature with the given ``<name>``.\n  ``<enabled>`` contains whether this feature is enabled or not. It can be a\n  variable or a list of conditions.\n  ``<description>`` is a text describing the feature.  The information can\n  be displayed using ``feature_summary()`` for ``ENABLED_FEATURES`` and\n  ``DISABLED_FEATURES`` respectively.\n\n  Example for setting the info for a feature:\n\n  .. code-block:: cmake\n\n     option(WITH_FOO \"Help for foo\" ON)\n     add_feature_info(Foo WITH_FOO \"The Foo feature provides very cool stuff.\")\n#]=======================================================================]",
        "Line" : 608,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# The stuff below is only kept for compatibility\n",
        "Line" : 649,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#[=======================================================================[.rst:\nLegacy Macros\n^^^^^^^^^^^^^\n\nThe following macros are provided for compatibility with previous\nCMake versions:\n\n.. command:: set_package_info\n\n  ::\n\n    set_package_info(<name> <description> [ <url> [<purpose>] ])\n\n  Use this macro to set up information about the named package, which\n  can then be displayed via ``feature_summary()``.  This can be done either\n  directly in the Find-module or in the project which uses the module\n  after the :command:`find_package` call.  The features for which information\n  can be set are added automatically by the ``find_package()`` command.\n#]=======================================================================]",
        "Line" : 651,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#[=======================================================================[.rst:\n.. command:: set_feature_info\n\n  ::\n\n    set_feature_info(<name> <description> [<url>])\n\n  Does the same as::\n\n    set_package_info(<name> <description> <url>)\n#]=======================================================================]",
        "Line" : 689,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#[=======================================================================[.rst:\n.. command:: print_enabled_features\n\n  ::\n\n    print_enabled_features()\n\n  Does the same as\n\n  .. code-block:: cmake\n\n    feature_summary(WHAT ENABLED_FEATURES DESCRIPTION \"Enabled features:\")\n#]=======================================================================]",
        "Line" : 705,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#[=======================================================================[.rst:\n.. command:: print_disabled_features\n\n  ::\n\n    print_disabled_features()\n\n  Does the same as\n\n  .. code-block:: cmake\n\n    feature_summary(WHAT DISABLED_FEATURES DESCRIPTION \"Disabled features:\")\n#]=======================================================================]",
        "Line" : 724,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "deps/src/cmake-3.13.4/Modules/FetchContent.cmake" : {
      "ObjectId" : "98cdf6cb9682c96ef9bf364d6eeb5916de2615ad",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFetchContent\n------------------\n\n.. only:: html\n\n  .. contents::\n\nOverview\n^^^^^^^^\n\nThis module enables populating content at configure time via any method\nsupported by the :module:`ExternalProject` module.  Whereas\n:command:`ExternalProject_Add` downloads at build time, the\n``FetchContent`` module makes content available immediately, allowing the\nconfigure step to use the content in commands like :command:`add_subdirectory`,\n:command:`include` or :command:`file` operations.\n\nContent population details would normally be defined separately from the\ncommand that performs the actual population.  Projects should also\ncheck whether the content has already been populated somewhere else in the\nproject hierarchy.  Typical usage would look something like this:\n\n.. code-block:: cmake\n\n  FetchContent_Declare(\n    googletest\n    GIT_REPOSITORY https://github.com/google/googletest.git\n    GIT_TAG        release-1.8.0\n  )\n\n  FetchContent_GetProperties(googletest)\n  if(NOT googletest_POPULATED)\n    FetchContent_Populate(googletest)\n    add_subdirectory(${googletest_SOURCE_DIR} ${googletest_BINARY_DIR})\n  endif()\n\nWhen using the above pattern with a hierarchical project arrangement,\nprojects at higher levels in the hierarchy are able to define or override\nthe population details of content specified anywhere lower in the project\nhierarchy.  The ability to detect whether content has already been\npopulated ensures that even if multiple child projects want certain content\nto be available, the first one to populate it wins.  The other child project\ncan simply make use of the already available content instead of repeating\nthe population for itself.  See the\n:ref:`Examples <fetch-content-examples>` section which demonstrates\nthis scenario.\n\nThe ``FetchContent`` module also supports defining and populating\ncontent in a single call, with no check for whether the content has been\npopulated elsewhere in the project already.  This is a more low level\noperation and would not normally be the way the module is used, but it is\nsometimes useful as part of implementing some higher level feature or to\npopulate some content in CMake's script mode.\n\n\nDeclaring Content Details\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. command:: FetchContent_Declare\n\n  .. code-block:: cmake\n\n    FetchContent_Declare(<name> <contentOptions>...)\n\n  The ``FetchContent_Declare()`` function records the options that describe\n  how to populate the specified content, but if such details have already\n  been recorded earlier in this project (regardless of where in the project\n  hierarchy), this and all later calls for the same content ``<name>`` are\n  ignored.  This \"first to record, wins\" approach is what allows hierarchical\n  projects to have parent projects override content details of child projects.\n\n  The content ``<name>`` can be any string without spaces, but good practice\n  would be to use only letters, numbers and underscores.  The name will be\n  treated case-insensitively and it should be obvious for the content it\n  represents, often being the name of the child project or the value given\n  to its top level :command:`project` command (if it is a CMake project).\n  For well-known public projects, the name should generally be the official\n  name of the project.  Choosing an unusual name makes it unlikely that other\n  projects needing that same content will use the same name, leading to\n  the content being populated multiple times.\n\n  The ``<contentOptions>`` can be any of the download or update/patch options\n  that the :command:`ExternalProject_Add` command understands.  The configure,\n  build, install and test steps are explicitly disabled and therefore options\n  related to them will be ignored.  In most cases, ``<contentOptions>`` will\n  just be a couple of options defining the download method and method-specific\n  details like a commit tag or archive hash.  For example:\n\n  .. code-block:: cmake\n\n    FetchContent_Declare(\n      googletest\n      GIT_REPOSITORY https://github.com/google/googletest.git\n      GIT_TAG        release-1.8.0\n    )\n\n    FetchContent_Declare(\n      myCompanyIcons\n      URL      https://intranet.mycompany.com/assets/iconset_1.12.tar.gz\n      URL_HASH 5588a7b18261c20068beabfb4f530b87\n    )\n\n    FetchContent_Declare(\n      myCompanyCertificates\n      SVN_REPOSITORY svn+ssh://svn.mycompany.com/srv/svn/trunk/certs\n      SVN_REVISION   -r12345\n    )\n\nPopulating The Content\n^^^^^^^^^^^^^^^^^^^^^^\n\n.. command:: FetchContent_Populate\n\n  .. code-block:: cmake\n\n    FetchContent_Populate( <name> )\n\n  In most cases, the only argument given to ``FetchContent_Populate()`` is the\n  ``<name>``.  When used this way, the command assumes the content details have\n  been recorded by an earlier call to :command:`FetchContent_Declare`.  The\n  details are stored in a global property, so they are unaffected by things\n  like variable or directory scope.  Therefore, it doesn't matter where in the\n  project the details were previously declared, as long as they have been\n  declared before the call to ``FetchContent_Populate()``.  Those saved details\n  are then used to construct a call to :command:`ExternalProject_Add` in a\n  private sub-build to perform the content population immediately.  The\n  implementation of ``ExternalProject_Add()`` ensures that if the content has\n  already been populated in a previous CMake run, that content will be reused\n  rather than repopulating them again.  For the common case where population\n  involves downloading content, the cost of the download is only paid once.\n\n  An internal global property records when a particular content population\n  request has been processed.  If ``FetchContent_Populate()`` is called more\n  than once for the same content name within a configure run, the second call\n  will halt with an error.  Projects can and should check whether content\n  population has already been processed with the\n  :command:`FetchContent_GetProperties` command before calling\n  ``FetchContent_Populate()``.\n\n  ``FetchContent_Populate()`` will set three variables in the scope of the\n  caller; ``<lcName>_POPULATED``, ``<lcName>_SOURCE_DIR`` and\n  ``<lcName>_BINARY_DIR``, where ``<lcName>`` is the lowercased ``<name>``.\n  ``<lcName>_POPULATED`` will always be set to ``True`` by the call.\n  ``<lcName>_SOURCE_DIR`` is the location where the\n  content can be found upon return (it will have already been populated), while\n  ``<lcName>_BINARY_DIR`` is a directory intended for use as a corresponding\n  build directory.  The main use case for the two directory variables is to\n  call :command:`add_subdirectory` immediately after population, i.e.:\n\n  .. code-block:: cmake\n\n    FetchContent_Populate(FooBar ...)\n    add_subdirectory(${foobar_SOURCE_DIR} ${foobar_BINARY_DIR})\n\n  The values of the three variables can also be retrieved from anywhere in the\n  project hierarchy using the :command:`FetchContent_GetProperties` command.\n\n  A number of cache variables influence the behavior of all content population\n  performed using details saved from a :command:`FetchContent_Declare` call:\n\n  ``FETCHCONTENT_BASE_DIR``\n    In most cases, the saved details do not specify any options relating to the\n    directories to use for the internal sub-build, final source and build areas.\n    It is generally best to leave these decisions up to the ``FetchContent``\n    module to handle on the project's behalf.  The ``FETCHCONTENT_BASE_DIR``\n    cache variable controls the point under which all content population\n    directories are collected, but in most cases developers would not need to\n    change this.  The default location is ``${CMAKE_BINARY_DIR}/_deps``, but if\n    developers change this value, they should aim to keep the path short and\n    just below the top level of the build tree to avoid running into path\n    length problems on Windows.\n\n  ``FETCHCONTENT_QUIET``\n    The logging output during population can be quite verbose, making the\n    configure stage quite noisy.  This cache option (``ON`` by default) hides\n    all population output unless an error is encountered.  If experiencing\n    problems with hung downloads, temporarily switching this option off may\n    help diagnose which content population is causing the issue.\n\n  ``FETCHCONTENT_FULLY_DISCONNECTED``\n    When this option is enabled, no attempt is made to download or update\n    any content.  It is assumed that all content has already been populated in\n    a previous run or the source directories have been pointed at existing\n    contents the developer has provided manually (using options described\n    further below).  When the developer knows that no changes have been made to\n    any content details, turning this option ``ON`` can significantly speed up\n    the configure stage.  It is ``OFF`` by default.\n\n  ``FETCHCONTENT_UPDATES_DISCONNECTED``\n    This is a less severe download/update control compared to\n    ``FETCHCONTENT_FULLY_DISCONNECTED``.  Instead of bypassing all download and\n    update logic, the ``FETCHCONTENT_UPDATES_DISCONNECTED`` only disables the\n    update stage.  Therefore, if content has not been downloaded previously,\n    it will still be downloaded when this option is enabled.  This can speed up\n    the configure stage, but not as much as\n    ``FETCHCONTENT_FULLY_DISCONNECTED``.  It is ``OFF`` by default.\n\n  In addition to the above cache variables, the following cache variables are\n  also defined for each content name (``<ucName>`` is the uppercased value of\n  ``<name>``):\n\n  ``FETCHCONTENT_SOURCE_DIR_<ucName>``\n    If this is set, no download or update steps are performed for the specified\n    content and the ``<lcName>_SOURCE_DIR`` variable returned to the caller is\n    pointed at this location.  This gives developers a way to have a separate\n    checkout of the content that they can modify freely without interference\n    from the build.  The build simply uses that existing source, but it still\n    defines ``<lcName>_BINARY_DIR`` to point inside its own build area.\n    Developers are strongly encouraged to use this mechanism rather than\n    editing the sources populated in the default location, as changes to\n    sources in the default location can be lost when content population details\n    are changed by the project.\n\n  ``FETCHCONTENT_UPDATES_DISCONNECTED_<ucName>``\n    This is the per-content equivalent of\n    ``FETCHCONTENT_UPDATES_DISCONNECTED``. If the global option or this option\n    is ``ON``, then updates will be disabled for the named content.\n    Disabling updates for individual content can be useful for content whose\n    details rarely change, while still leaving other frequently changing\n    content with updates enabled.\n\n\n  The ``FetchContent_Populate()`` command also supports a syntax allowing the\n  content details to be specified directly rather than using any saved\n  details.  This is more low-level and use of this form is generally to be\n  avoided in favour of using saved content details as outlined above.\n  Nevertheless, in certain situations it can be useful to invoke the content\n  population as an isolated operation (typically as part of implementing some\n  other higher level feature or when using CMake in script mode):\n\n  .. code-block:: cmake\n\n    FetchContent_Populate( <name>\n      [QUIET]\n      [SUBBUILD_DIR <subBuildDir>]\n      [SOURCE_DIR <srcDir>]\n      [BINARY_DIR <binDir>]\n      ...\n    )\n\n  This form has a number of key differences to that where only ``<name>`` is\n  provided:\n\n  - All required population details are assumed to have been provided directly\n    in the call to ``FetchContent_Populate()``. Any saved details for\n    ``<name>`` are ignored.\n  - No check is made for whether content for ``<name>`` has already been\n    populated.\n  - No global property is set to record that the population has occurred.\n  - No global properties record the source or binary directories used for the\n    populated content.\n  - The ``FETCHCONTENT_FULLY_DISCONNECTED`` and\n    ``FETCHCONTENT_UPDATES_DISCONNECTED`` cache variables are ignored.\n\n  The ``<lcName>_SOURCE_DIR`` and ``<lcName>_BINARY_DIR`` variables are still\n  returned to the caller, but since these locations are not stored as global\n  properties when this form is used, they are only available to the calling\n  scope and below rather than the entire project hierarchy.  No\n  ``<lcName>_POPULATED`` variable is set in the caller's scope with this form.\n\n  The supported options for ``FetchContent_Populate()`` are the same as those\n  for :command:`FetchContent_Declare()`.  Those few options shown just\n  above are either specific to ``FetchContent_Populate()`` or their behavior is\n  slightly modified from how :command:`ExternalProject_Add` treats them.\n\n  ``QUIET``\n    The ``QUIET`` option can be given to hide the output associated with\n    populating the specified content.  If the population fails, the output will\n    be shown regardless of whether this option was given or not so that the\n    cause of the failure can be diagnosed.  The global ``FETCHCONTENT_QUIET``\n    cache variable has no effect on ``FetchContent_Populate()`` calls where the\n    content details are provided directly.\n\n  ``SUBBUILD_DIR``\n    The ``SUBBUILD_DIR`` argument can be provided to change the location of the\n    sub-build created to perform the population.  The default value is\n    ``${CMAKE_CURRENT_BINARY_DIR}/<lcName>-subbuild`` and it would be unusual\n    to need to override this default.  If a relative path is specified, it will\n    be interpreted as relative to :variable:`CMAKE_CURRENT_BINARY_DIR`.\n\n  ``SOURCE_DIR``, ``BINARY_DIR``\n    The ``SOURCE_DIR`` and ``BINARY_DIR`` arguments are supported by\n    :command:`ExternalProject_Add`, but different default values are used by\n    ``FetchContent_Populate()``.  ``SOURCE_DIR`` defaults to\n    ``${CMAKE_CURRENT_BINARY_DIR}/<lcName>-src`` and ``BINARY_DIR`` defaults to\n    ``${CMAKE_CURRENT_BINARY_DIR}/<lcName>-build``.  If a relative path is\n    specified, it will be interpreted as relative to\n    :variable:`CMAKE_CURRENT_BINARY_DIR`.\n\n  In addition to the above explicit options, any other unrecognized options are\n  passed through unmodified to :command:`ExternalProject_Add` to perform the\n  download, patch and update steps.  The following options are explicitly\n  prohibited (they are disabled by the ``FetchContent_Populate()`` command):\n\n  - ``CONFIGURE_COMMAND``\n  - ``BUILD_COMMAND``\n  - ``INSTALL_COMMAND``\n  - ``TEST_COMMAND``\n\n  If using ``FetchContent_Populate()`` within CMake's script mode, be aware\n  that the implementation sets up a sub-build which therefore requires a CMake\n  generator and build tool to be available. If these cannot be found by\n  default, then the :variable:`CMAKE_GENERATOR` and/or\n  :variable:`CMAKE_MAKE_PROGRAM` variables will need to be set appropriately\n  on the command line invoking the script.\n\n\nRetrieve Population Properties\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. command:: FetchContent_GetProperties\n\n  When using saved content details, a call to :command:`FetchContent_Populate`\n  records information in global properties which can be queried at any time.\n  This information includes the source and binary directories associated with\n  the content and also whether or not the content population has been processed\n  during the current configure run.\n\n  .. code-block:: cmake\n\n    FetchContent_GetProperties( <name>\n      [SOURCE_DIR <srcDirVar>]\n      [BINARY_DIR <binDirVar>]\n      [POPULATED <doneVar>]\n    )\n\n  The ``SOURCE_DIR``, ``BINARY_DIR`` and ``POPULATED`` options can be used to\n  specify which properties should be retrieved.  Each option accepts a value\n  which is the name of the variable in which to store that property.  Most of\n  the time though, only ``<name>`` is given, in which case the call will then\n  set the same variables as a call to\n  :command:`FetchContent_Populate(name) <FetchContent_Populate>`.  This allows\n  the following canonical pattern to be used, which ensures that the relevant\n  variables will always be defined regardless of whether or not the population\n  has been performed elsewhere in the project already:\n\n  .. code-block:: cmake\n\n    FetchContent_GetProperties(foobar)\n    if(NOT foobar_POPULATED)\n      FetchContent_Populate(foobar)\n\n      # Set any custom variables, etc. here, then\n      # populate the content as part of this build\n\n      add_subdirectory(${foobar_SOURCE_DIR} ${foobar_BINARY_DIR})\n    endif()\n\n  The above pattern allows other parts of the overall project hierarchy to\n  re-use the same content and ensure that it is only populated once.\n\n\n.. _`fetch-content-examples`:\n\nExamples\n^^^^^^^^\n\nConsider a project hierarchy where ``projA`` is the top level project and it\ndepends on projects ``projB`` and ``projC``. Both ``projB`` and ``projC``\ncan be built standalone and they also both depend on another project\n``projD``.  For simplicity, this example will assume that all four projects\nare available on a company git server.  The ``CMakeLists.txt`` of each project\nmight have sections like the following:\n\n*projA*:\n\n.. code-block:: cmake\n\n  include(FetchContent)\n  FetchContent_Declare(\n    projB\n    GIT_REPOSITORY git@mycompany.com/git/projB.git\n    GIT_TAG        4a89dc7e24ff212a7b5167bef7ab079d\n  )\n  FetchContent_Declare(\n    projC\n    GIT_REPOSITORY git@mycompany.com/git/projC.git\n    GIT_TAG        4ad4016bd1d8d5412d135cf8ceea1bb9\n  )\n  FetchContent_Declare(\n    projD\n    GIT_REPOSITORY git@mycompany.com/git/projD.git\n    GIT_TAG        origin/integrationBranch\n  )\n\n  FetchContent_GetProperties(projB)\n  if(NOT projb_POPULATED)\n    FetchContent_Populate(projB)\n    add_subdirectory(${projb_SOURCE_DIR} ${projb_BINARY_DIR})\n  endif()\n\n  FetchContent_GetProperties(projC)\n  if(NOT projc_POPULATED)\n    FetchContent_Populate(projC)\n    add_subdirectory(${projc_SOURCE_DIR} ${projc_BINARY_DIR})\n  endif()\n\n*projB*:\n\n.. code-block:: cmake\n\n  include(FetchContent)\n  FetchContent_Declare(\n    projD\n    GIT_REPOSITORY git@mycompany.com/git/projD.git\n    GIT_TAG        20b415f9034bbd2a2e8216e9a5c9e632\n  )\n\n  FetchContent_GetProperties(projD)\n  if(NOT projd_POPULATED)\n    FetchContent_Populate(projD)\n    add_subdirectory(${projd_SOURCE_DIR} ${projd_BINARY_DIR})\n  endif()\n\n\n*projC*:\n\n.. code-block:: cmake\n\n  include(FetchContent)\n  FetchContent_Declare(\n    projD\n    GIT_REPOSITORY git@mycompany.com/git/projD.git\n    GIT_TAG        7d9a17ad2c962aa13e2fbb8043fb6b8a\n  )\n\n  FetchContent_GetProperties(projD)\n  if(NOT projd_POPULATED)\n    FetchContent_Populate(projD)\n    add_subdirectory(${projd_SOURCE_DIR} ${projd_BINARY_DIR})\n  endif()\n\nA few key points should be noted in the above:\n\n- ``projB`` and ``projC`` define different content details for ``projD``,\n  but ``projA`` also defines a set of content details for ``projD`` and\n  because ``projA`` will define them first, the details from ``projB`` and\n  ``projC`` will not be used.  The override details defined by ``projA``\n  are not required to match either of those from ``projB`` or ``projC``, but\n  it is up to the higher level project to ensure that the details it does\n  define still make sense for the child projects.\n- While ``projA`` defined content details for ``projD``, it did not need\n  to explicitly call ``FetchContent_Populate(projD)`` itself.  Instead, it\n  leaves that to a child project to do (in this case it will be ``projB``\n  since it is added to the build ahead of ``projC``).  If ``projA`` needed to\n  customize how the ``projD`` content was brought into the build as well\n  (e.g. define some CMake variables before calling\n  :command:`add_subdirectory` after populating), it would do the call to\n  ``FetchContent_Populate()``, etc. just as it did for the ``projB`` and\n  ``projC`` content.  For higher level projects, it is usually enough to\n  just define the override content details and leave the actual population\n  to the child projects.  This saves repeating the same thing at each level\n  of the project hierarchy unnecessarily.\n- Even though ``projA`` is the top level project in this example, it still\n  checks whether ``projB`` and ``projC`` have already been populated before\n  going ahead to do those populations.  This makes ``projA`` able to be more\n  easily incorporated as a child of some other higher level project in the\n  future if required.  Always protect a call to\n  :command:`FetchContent_Populate` with a check to\n  :command:`FetchContent_GetProperties`, even in what may be considered a top\n  level project at the time.\n\n\nThe following example demonstrates how one might download and unpack a\nfirmware tarball using CMake's :manual:`script mode <cmake(1)>`.  The call to\n:command:`FetchContent_Populate` specifies all the content details and the\nunpacked firmware will be placed in a ``firmware`` directory below the\ncurrent working directory.\n\n*getFirmware.cmake*:\n\n.. code-block:: cmake\n\n  # NOTE: Intended to be run in script mode with cmake -P\n  include(FetchContent)\n  FetchContent_Populate(\n    firmware\n    URL        https://mycompany.com/assets/firmware-1.23-arm.tar.gz\n    URL_HASH   MD5=68247684da89b608d466253762b0ff11\n    SOURCE_DIR firmware\n  )\n\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=======================================================================\n\n# Recording and retrieving content details for later population\n\n#=======================================================================\n",
        "Line" : 492,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal use, projects must not call this directly. It is\n\n# intended for use by FetchContent_Declare() only.\n\n#\n\n# Sets a content-specific global property (not meant for use\n\n# outside of functions defined here in this file) which can later\n\n# be retrieved using __FetchContent_getSavedDetails() with just the\n\n# same content name. If there is already a value stored in the\n\n# property, it is left unchanged and this call has no effect.\n\n# This allows parent projects to define the content details,\n\n# overriding anything a child project may try to set (properties\n\n# are not cached between runs, so the first thing to set it in a\n\n# build will be in control).\n",
        "Line" : 496,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Internal use, projects must not call this directly. It is\n\n# intended for use by the FetchContent_Declare() function.\n\n#\n\n# Retrieves details saved for the specified content in an\n\n# earlier call to __FetchContent_declareDetails().\n",
        "Line" : 524,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Saves population details of the content, sets defaults for the\n\n# SOURCE_DIR and BUILD_DIR.\n",
        "Line" : 543,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add a hash of the svn repository URL to the source dir. This works\n\n# around the problem where if the URL changes, the download would\n\n# fail because it tries to checkout/update rather than switch the\n\n# old URL to the new one. We limit the hash to the first 7 characters\n\n# so that the source path doesn't get overly long (which can be a\n\n# problem on windows due to path length limits).\n",
        "Line" : 556,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# List these last so they can override things we set above\n",
        "Line" : 574,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#=======================================================================\n\n# Set/get whether the specified content has been populated yet.\n\n# The setter also records the source and binary dirs used.\n\n#=======================================================================\n",
        "Line" : 581,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Internal use, projects must not call this directly. It is\n\n# intended for use by the FetchContent_Populate() function to\n\n# record when FetchContent_Populate() is called for a particular\n\n# content name.\n",
        "Line" : 586,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Set variables in the calling scope for any of the retrievable\n\n# properties. If no specific properties are requested, variables\n\n# will be set for all retrievable properties.\n\n#\n\n# This function is intended to also be used by projects as the canonical\n\n# way to detect whether they should call FetchContent_Populate()\n\n# and pull the populated source into the build with add_subdirectory(),\n\n# if they are using the populated content in that way.\n",
        "Line" : 619,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# No specific properties requested, provide them all\n",
        "Line" : 640,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#=======================================================================\n\n# Performing the population\n\n#=======================================================================\n",
        "Line" : 673,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The value of contentName will always have been lowercased by the caller.\n\n# All other arguments are assumed to be options that are understood by\n\n# ExternalProject_Add(), except for QUIET and SUBBUILD_DIR.\n",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Prevent the following from being passed through\n",
        "Line" : 689,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# Ensure the caller can know where to find the source and build directories\n\n# with some convenient variables. Doing this here ensures the caller sees\n\n# the correct result in the case where the default values are overridden by\n\n# the content details set by the project.\n",
        "Line" : 717,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# The unparsed arguments may contain spaces, so build up ARG_EXTRA\n\n# in such a way that it correctly substitutes into the generated\n\n# CMakeLists.txt file with each argument quoted.\n",
        "Line" : 724,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Hide output if requested, but save it to a variable in case there's an\n\n# error so we can show the output upon failure. When not quiet, don't\n\n# capture the output to a variable because the user may want to see the\n\n# output as it happens (e.g. progress during long downloads). Combine both\n\n# stdout and stderr in the one capture variable so the output stays in order.\n",
        "Line" : 732,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Likely we've been invoked via CMake's script mode where no\n\n# generator is set (and hence CMAKE_MAKE_PROGRAM could not be\n\n# trusted even if provided). We will have to rely on being\n\n# able to find the default generator and build tool.\n",
        "Line" : 762,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Create and build a separate CMake project to carry out the population.\n\n# If we've already previously done these steps, they will not cause\n\n# anything to be updated, so extra rebuilds of the project won't occur.\n\n# Make sure to pass through CMAKE_MAKE_PROGRAM in case the main project\n\n# has this set to something not findable on the PATH.\n",
        "Line" : 769,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Populate the specified content using details stored from\n\n# an earlier call to FetchContent_Declare().\n",
        "Line" : 809,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# This is the direct population form with details fully specified\n\n# as part of the call, so we already have everything we need\n",
        "Line" : 820,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Could override any of the above ..._DIR variables\n",
        "Line" : 827,
        "CharPositionInLine" : 15
      },
      "23" : {
        "Text" : "# Pass source and binary dir variables back to the caller\n",
        "Line" : 830,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Don't set global properties, or record that we did this population, since\n\n# this was a direct call outside of the normal declared details form.\n\n# We only want to save values in the global properties for content that\n\n# honours the hierarchical details mechanism so that projects are not\n\n# robbed of the ability to override details set in nested projects.\n",
        "Line" : 834,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# No details provided, so assume they were saved from an earlier call\n\n# to FetchContent_Declare(). Do a check that we haven't already\n\n# populated this content before in case the caller forgot to check.\n",
        "Line" : 842,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# The source directory has been explicitly provided in the cache,\n\n# so no population is required\n",
        "Line" : 856,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Bypass population and assume source is already there from a previous run\n",
        "Line" : 862,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Support both a global \"disconnect all updates\" and a per-content\n\n# update test (either one being set disables updates for this content).\n",
        "Line" : 867,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Put the saved details last so they can override any of the\n\n# the options we set above (this can include SOURCE_DIR or\n\n# BUILD_DIR)\n",
        "Line" : 896,
        "CharPositionInLine" : 6
      },
      "30" : {
        "Text" : "# Pass variables back to the caller. The variables passed back here\n\n# must match what FetchContent_GetProperties() sets when it is called\n\n# with just the content name.\n",
        "Line" : 909,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 31
    },
    "deps/src/cmake-3.13.4/Modules/FindALSA.cmake" : {
      "ObjectId" : "c9cfd60ffffd6b4d23244d754c1b7110abeca3ea",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindALSA\n\n# --------\n\n#\n\n# Find alsa\n\n#\n\n# Find the alsa libraries (asound)\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines :prop_tgt:`IMPORTED` target ``ALSA::ALSA``, if\n\n# ALSA has been found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ``ALSA_FOUND``\n\n#   True if ALSA_INCLUDE_DIR & ALSA_LIBRARY are found\n\n#\n\n# ``ALSA_LIBRARIES``\n\n#   List of libraries when using ALSA.\n\n#\n\n# ``ALSA_INCLUDE_DIRS``\n\n#   Where to find the ALSA headers.\n\n#\n\n# Cache variables\n\n# ^^^^^^^^^^^^^^^\n\n#\n\n# The following cache variables may also be set:\n\n#\n\n# ``ALSA_INCLUDE_DIR``\n\n#   the ALSA include directory\n\n#\n\n# ``ALSA_LIBRARY``\n\n#   the absolute path of the asound library\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindASPELL.cmake" : {
      "ObjectId" : "6944ac1928bdcef2a3f3d2130f74d398e9b55cf8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindASPELL\n\n# ----------\n\n#\n\n# Try to find ASPELL\n\n#\n\n# Once done this will define\n\n#\n\n# ::\n\n#\n\n#   ASPELL_FOUND - system has ASPELL\n\n#   ASPELL_EXECUTABLE - the ASPELL executable\n\n#   ASPELL_INCLUDE_DIR - the ASPELL include directory\n\n#   ASPELL_LIBRARIES - The libraries needed to use ASPELL\n\n#   ASPELL_DEFINITIONS - Compiler switches required for using ASPELL\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindAVIFile.cmake" : {
      "ObjectId" : "2df29cacbd13d43573fc1a2da645683d7640e9ad",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindAVIFile\n\n# -----------\n\n#\n\n# Locate AVIFILE library and include paths\n\n#\n\n# AVIFILE (http://avifile.sourceforge.net/)is a set of libraries for\n\n# i386 machines to use various AVI codecs.  Support is limited beyond\n\n# Linux.  Windows provides native AVI support, and so doesn't need this\n\n# library.  This module defines\n\n#\n\n# ::\n\n#\n\n#   AVIFILE_INCLUDE_DIR, where to find avifile.h , etc.\n\n#   AVIFILE_LIBRARIES, the libraries to link against\n\n#   AVIFILE_DEFINITIONS, definitions to use when compiling\n\n#   AVIFILE_FOUND, If false, don't try to use AVIFILE\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindArmadillo.cmake" : {
      "ObjectId" : "95f0c56295d8b5ddbdce8db3c717cc600646494d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindArmadillo\n\n# -------------\n\n#\n\n# Find Armadillo\n\n#\n\n# Find the Armadillo C++ library\n\n#\n\n# Using Armadillo:\n\n#\n\n# ::\n\n#\n\n#   find_package(Armadillo REQUIRED)\n\n#   include_directories(${ARMADILLO_INCLUDE_DIRS})\n\n#   add_executable(foo foo.cc)\n\n#   target_link_libraries(foo ${ARMADILLO_LIBRARIES})\n\n#\n\n# This module sets the following variables:\n\n#\n\n# ::\n\n#\n\n#   ARMADILLO_FOUND - set to true if the library is found\n\n#   ARMADILLO_INCLUDE_DIRS - list of required include directories\n\n#   ARMADILLO_LIBRARIES - list of libraries to be linked\n\n#   ARMADILLO_VERSION_MAJOR - major version number\n\n#   ARMADILLO_VERSION_MINOR - minor version number\n\n#   ARMADILLO_VERSION_PATCH - patch version number\n\n#   ARMADILLO_VERSION_STRING - version number as a string (ex: \"1.0.4\")\n\n#   ARMADILLO_VERSION_NAME - name of the version (ex: \"Antipodean Antileech\")\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# UNIX paths are standard, no need to write.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Extract version information from <armadillo>\n\n# ------------------------------------------------------------------------\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# WARNING: Early releases of Armadillo didn't have the arma_version.hpp file.\n\n# (e.g. v.0.9.8-1 in ubuntu maverick packages (2001-03-15))\n\n# If the file is missing, set all values to 0\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Read and parse armdillo version header file for version number\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# WARNING: The number of spaces before the version name is not one.\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# version_var fails with cmake < 2.8.4.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Hide internal variables\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "deps/src/cmake-3.13.4/Modules/FindBISON.cmake" : {
      "ObjectId" : "2000f7ff6fa6fe4bc97776a773a3e0cfee1dd7f6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindBISON\n\n# ---------\n\n#\n\n# Find ``bison`` executable and provide a macro to generate custom build rules.\n\n#\n\n# The module defines the following variables:\n\n#\n\n# ``BISON_EXECUTABLE``\n\n#   path to the ``bison`` program\n\n#\n\n# ``BISON_VERSION``\n\n#   version of ``bison``\n\n#\n\n# ``BISON_FOUND``\n\n#   true if the program was found\n\n#\n\n# The minimum required version of ``bison`` can be specified using the\n\n# standard CMake syntax, e.g.  ``find_package(BISON 2.1.3)``.\n\n#\n\n# If ``bison`` is found, the module defines the macro::\n\n#\n\n#   BISON_TARGET(<Name> <YaccInput> <CodeOutput>\n\n#                [COMPILE_FLAGS <flags>]\n\n#                [DEFINES_FILE <file>]\n\n#                [VERBOSE [<file>]]\n\n#                [REPORT_FILE <file>]\n\n#                )\n\n#\n\n# which will create a custom rule to generate a parser.  ``<YaccInput>`` is\n\n# the path to a yacc file.  ``<CodeOutput>`` is the name of the source file\n\n# generated by bison.  A header file is also be generated, and contains\n\n# the token list.\n\n#\n\n# The options are:\n\n#\n\n# ``COMPILE_FLAGS <flags>``\n\n#   Specify flags to be added to the ``bison`` command line.\n\n#\n\n# ``DEFINES_FILE <file>``\n\n#   Specify a non-default header ``<file>`` to be generated by ``bison``.\n\n#\n\n# ``VERBOSE [<file>]``\n\n#   Tell ``bison`` to write a report file of the grammar and parser.\n\n#   If ``<file>`` is given, it specifies path the report file is copied to.\n\n#   ``[<file>]`` is left for backward compatibility of this module.\n\n#   Use ``VERBOSE REPORT_FILE <file>``.\n\n#\n\n# ``REPORT_FILE <file>``\n\n#   Specify a non-default report ``<file>``, if generated.\n\n#\n\n# The macro defines the following variables:\n\n#\n\n# ``BISON_<Name>_DEFINED``\n\n#   true is the macro ran successfully\n\n#\n\n# ``BISON_<Name>_INPUT``\n\n#   The input source file, an alias for <YaccInput>\n\n#\n\n# ``BISON_<Name>_OUTPUT_SOURCE``\n\n#   The source file generated by bison\n\n#\n\n# ``BISON_<Name>_OUTPUT_HEADER``\n\n#   The header file generated by bison\n\n#\n\n# ``BISON_<Name>_OUTPUTS``\n\n#   All files generated by bison including the source, the header and the report\n\n#\n\n# ``BISON_<Name>_COMPILE_FLAGS``\n\n#   Options used in the ``bison`` command line\n\n#\n\n# Example usage:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   find_package(BISON)\n\n#   BISON_TARGET(MyParser parser.y ${CMAKE_CURRENT_BINARY_DIR}/parser.cpp\n\n#                DEFINES_FILE ${CMAKE_CURRENT_BINARY_DIR}/parser.h)\n\n#   add_executable(Foo main.cpp ${BISON_MyParser_OUTPUTS})\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the bison commands should be executed with the C locale, otherwise\n\n# the message (which are parsed) may be translated\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Bison++\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# GNU Bison\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# internal macro\n\n# sets BISON_TARGET_cmdopt\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# internal macro\n\n# sets BISON_TARGET_output_header and BISON_TARGET_cmdopt\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# default header path generated by bison (see option -d)\n",
        "Line" : 128,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# internal macro\n\n# sets BISON_TARGET_verbose_file and BISON_TARGET_cmdopt\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# internal macro\n\n# adds a custom command and sets\n\n#   BISON_TARGET_cmdopt, BISON_TARGET_extraoutputs\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#============================================================\n\n# BISON_TARGET (public macro)\n\n#============================================================\n\n#\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Parsing parameters\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# [VERBOSE [<file>] hack: <file> is non-multi value by usage\n",
        "Line" : 215,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# [VERBOSE [<file>]] is used with no argument or is not used\n",
        "Line" : 225,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# VERBOSE is used without <file>\n",
        "Line" : 229,
        "CharPositionInLine" : 10
      },
      "15" : {
        "Text" : "# define target variables\n",
        "Line" : 243,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "#\n\n#============================================================\n",
        "Line" : 253,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 17
    },
    "deps/src/cmake-3.13.4/Modules/FindBLAS.cmake" : {
      "ObjectId" : "b5546e09498f8c6ebe7c1758bb0a48ea14c8dbd0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindBLAS\n\n# --------\n\n#\n\n# Find BLAS library\n\n#\n\n# This module finds an installed fortran library that implements the\n\n# BLAS linear-algebra interface (see http://www.netlib.org/blas/).  The\n\n# list of libraries searched for is taken from the autoconf macro file,\n\n# acx_blas.m4 (distributed at\n\n# http://ac-archive.sourceforge.net/ac-archive/acx_blas.html).\n\n#\n\n# This module sets the following variables:\n\n#\n\n# ::\n\n#\n\n#   BLAS_FOUND - set to true if a library implementing the BLAS interface\n\n#     is found\n\n#   BLAS_LINKER_FLAGS - uncached list of required linker flags (excluding -l\n\n#     and -L).\n\n#   BLAS_LIBRARIES - uncached list of libraries (using full path name) to\n\n#     link against to use BLAS (may be empty if compiler implicitly links\n\n#     BLAS)\n\n#   BLAS95_LIBRARIES - uncached list of libraries (using full path name)\n\n#     to link against to use BLAS95 interface\n\n#   BLAS95_FOUND - set to true if a library implementing the BLAS f95 interface\n\n#     is found\n\n#\n\n# The following variables can be used to control this module:\n\n#\n\n# ::\n\n#\n\n#   BLA_STATIC  if set on this determines what kind of linkage we do (static)\n\n#   BLA_VENDOR  if set checks only the specified vendor, if not set checks\n\n#      all the possibilities\n\n#   BLA_F95     if set on tries to find the f95 interfaces for BLAS/LAPACK\n\n#   BLA_PREFER_PKGCONFIG  if set pkg-config will be used to search for a BLAS\n\n#      library first and if one is found that is preferred\n\n#\n\n# List of vendors (BLA_VENDOR) valid in this module:\n\n#\n\n# * Goto\n\n# * OpenBLAS\n\n# * FLAME\n\n# * ATLAS PhiPACK\n\n# * CXML\n\n# * DXML\n\n# * SunPerf\n\n# * SCSL\n\n# * SGIMATH\n\n# * IBMESSL\n\n# * Intel10_32 (intel mkl v10 32 bit)\n\n# * Intel10_64lp (intel mkl v10+ 64 bit, threaded code, lp64 model)\n\n# * Intel10_64lp_seq (intel mkl v10+ 64 bit, sequential code, lp64 model)\n\n# * Intel10_64ilp (intel mkl v10+ 64 bit, threaded code, ilp64 model)\n\n# * Intel10_64ilp_seq (intel mkl v10+ 64 bit, sequential code, ilp64 model)\n\n# * Intel (older versions of mkl 32 and 64 bit)\n\n# * ACML\n\n# * ACML_MP\n\n# * ACML_GPU\n\n# * Apple\n\n# * NAS\n\n# * Generic\n\n#\n\n# .. note::\n\n#\n\n#   C/CXX should be enabled to use Intel mkl\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check the language being used\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This macro checks for the existence of the combination of fortran libraries\n\n# given by _list.  If the combination is found, this macro checks (using the\n\n# Check_Fortran_Function_Exists macro) whether can link against that library\n\n# combination using the name of a routine given by _name using the linker\n\n# flags given by _flags.  If the combination of libraries is found and passes\n\n# the link test, LIBRARIES is set to the list of complete library paths that\n\n# have been found.  Otherwise, LIBRARIES is set to FALSE.\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# N.B. _prefix is the prefix applied to the names of all cached variables that\n\n# are generated internally and marked advanced by this macro.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# for ubuntu's libblas3gf and liblapack3gf packages\n",
        "Line" : 144,
        "CharPositionInLine" : 10
      },
      "6" : {
        "Text" : "# Test this combination of libraries.\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#  message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#message(\"DEBUG: ${LIBRARIES} = ${${LIBRARIES}}\")\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Implicitly linked BLAS libraries\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#BLAS in intel mkl 10+ library? (em64t 64bit)\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Find the main file (32-bit or 64-bit)\n",
        "Line" : 235,
        "CharPositionInLine" : 10
      },
      "12" : {
        "Text" : "# Add threading/sequential libs\n",
        "Line" : 246,
        "CharPositionInLine" : 10
      },
      "13" : {
        "Text" : "# old version\n",
        "Line" : 253,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "# mkl >= 10.3\n",
        "Line" : 256,
        "CharPositionInLine" : 12
      },
      "15" : {
        "Text" : "# Cartesian product of the above\n",
        "Line" : 261,
        "CharPositionInLine" : 10
      },
      "16" : {
        "Text" : "# old version\n",
        "Line" : 274,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# mkl >= 10.3\n",
        "Line" : 278,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# Find the main file (32-bit or 64-bit)\n",
        "Line" : 302,
        "CharPositionInLine" : 10
      },
      "19" : {
        "Text" : "# Add threading/sequential libs\n",
        "Line" : 313,
        "CharPositionInLine" : 10
      },
      "20" : {
        "Text" : "# old version\n",
        "Line" : 316,
        "CharPositionInLine" : 12
      },
      "21" : {
        "Text" : "# mkl >= 10.3\n",
        "Line" : 319,
        "CharPositionInLine" : 12
      },
      "22" : {
        "Text" : "# Cartesian product of the above\n",
        "Line" : 328,
        "CharPositionInLine" : 10
      },
      "23" : {
        "Text" : "# old version\n",
        "Line" : 342,
        "CharPositionInLine" : 12
      },
      "24" : {
        "Text" : "# mkl >= 10.3\n",
        "Line" : 346,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "#older vesions of intel mkl libs\n",
        "Line" : 360,
        "CharPositionInLine" : 10
      },
      "26" : {
        "Text" : "# gotoblas (http://www.tacc.utexas.edu/tacc-projects/gotoblas2)\n",
        "Line" : 393,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# OpenBLAS (http://www.openblas.net)\n",
        "Line" : 407,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# FLAME's blis library (https://github.com/flame/blis)\n",
        "Line" : 421,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# BLAS in ATLAS library? (http://math-atlas.sourceforge.net/)\n",
        "Line" : 435,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# BLAS in PhiPACK libraries? (requires generic BLAS lib, too)\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# BLAS in Alpha CXML library?\n",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# BLAS in Alpha DXML library? (now called CXML, see above)\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# BLAS in Sun Performance library?\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# BLAS in SCSL library?  (SGI/Cray Scientific Library)\n",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# BLAS in SGIMATH library?\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# BLAS in IBM ESSL library? (requires generic BLAS lib, too)\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#BLAS in acml library?\n",
        "Line" : 548,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# try to find acml in \"standard\" paths\n",
        "Line" : 554,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# 32 bit builds not supported on Open64 but for code simplicity\n\n# We'll just use the same directory twice\n",
        "Line" : 588,
        "CharPositionInLine" : 6
      },
      "40" : {
        "Text" : "# Either acml or acml_mp should be in LD_LIBRARY_PATH but not both\n",
        "Line" : 652,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# ACML\n",
        "Line" : 683,
        "CharPositionInLine" : 9
      },
      "42" : {
        "Text" : "# Apple BLAS library?\n",
        "Line" : 685,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Generic BLAS library?\n",
        "Line" : 712,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# On compilers that implicitly link BLAS (such as ftn, cc, and CC on Cray HPC machines)\n\n# we used a placeholder for empty BLAS_LIBRARIES to get through our logic above.\n",
        "Line" : 736,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 45
    },
    "deps/src/cmake-3.13.4/Modules/FindBZip2.cmake" : {
      "ObjectId" : "4d7123dd5a685bed615a7f4f55c6268a65516ad4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindBZip2\n\n# ---------\n\n#\n\n# Try to find BZip2\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines :prop_tgt:`IMPORTED` target ``BZip2::BZip2``, if\n\n# BZip2 has been found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ``BZIP2_FOUND``\n\n#   system has BZip2\n\n# ``BZIP2_INCLUDE_DIRS``\n\n#   the BZip2 include directories\n\n# ``BZIP2_LIBRARIES``\n\n#   Link these to use BZip2\n\n# ``BZIP2_NEED_PREFIX``\n\n#   this is set if the functions are prefixed with ``BZ2_``\n\n# ``BZIP2_VERSION_STRING``\n\n#   the version of BZip2 found\n\n#\n\n# Cache variables\n\n# ^^^^^^^^^^^^^^^\n\n#\n\n# The following cache variables may also be set:\n\n#\n\n# ``BZIP2_INCLUDE_DIR``\n\n#   the BZip2 include directory\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindBacktrace.cmake" : {
      "ObjectId" : "59ebdc26d207f6348b817d3449fc78d81982418f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindBacktrace\n\n# -------------\n\n#\n\n# Find provider for backtrace(3).\n\n#\n\n# Checks if OS supports backtrace(3) via either libc or custom library.\n\n# This module defines the following variables:\n\n#\n\n# ``Backtrace_HEADER``\n\n#   The header file needed for backtrace(3). Cached.\n\n#   Could be forcibly set by user.\n\n# ``Backtrace_INCLUDE_DIRS``\n\n#   The include directories needed to use backtrace(3) header.\n\n# ``Backtrace_LIBRARIES``\n\n#   The libraries (linker flags) needed to use backtrace(3), if any.\n\n# ``Backtrace_FOUND``\n\n#   Is set if and only if backtrace(3) support detected.\n\n#\n\n# The following cache variables are also available to set or use:\n\n#\n\n# ``Backtrace_LIBRARY``\n\n#   The external library providing backtrace, if any.\n\n# ``Backtrace_INCLUDE_DIR``\n\n#   The directory holding the backtrace(3) header.\n\n#\n\n# Typical usage is to generate of header file using configure_file() with the\n\n# contents like the following::\n\n#\n\n#  #cmakedefine01 Backtrace_FOUND\n\n#  #if Backtrace_FOUND\n\n#  # include <${Backtrace_HEADER}>\n\n#  #endif\n\n#\n\n# And then reference that generated header file in actual source.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of variables to be provided to find_package_handle_standard_args()\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# First, check if we already have backtrace(), e.g., in libc\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Avoid repeating the message() call below each time CMake is run.\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check for external library, for non-glibc systems\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# OpenBSD has libbacktrace renamed to libexecinfo\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# respect user wishes\n",
        "Line" : 76,
        "CharPositionInLine" : 15
      },
      "8" : {
        "Text" : "# Prepend list with library path as it's more common practice\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "deps/src/cmake-3.13.4/Modules/FindBoost.cmake" : {
      "ObjectId" : "bfab4ca4362b2fc18ef49be6c79c9785cefc51a6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindBoost\n\n# ---------\n\n#\n\n# Find Boost include dirs and libraries\n\n#\n\n# Use this module by invoking find_package with the form::\n\n#\n\n#   find_package(Boost\n\n#     [version] [EXACT]      # Minimum or EXACT version e.g. 1.67.0\n\n#     [REQUIRED]             # Fail with error if Boost is not found\n\n#     [COMPONENTS <libs>...] # Boost libraries by their canonical name\n\n#                            # e.g. \"date_time\" for \"libboost_date_time\"\n\n#     [OPTIONAL_COMPONENTS <libs>...]\n\n#                            # Optional Boost libraries by their canonical name)\n\n#     )                      # e.g. \"date_time\" for \"libboost_date_time\"\n\n#\n\n# This module finds headers and requested component libraries OR a CMake\n\n# package configuration file provided by a \"Boost CMake\" build.  For the\n\n# latter case skip to the \"Boost CMake\" section below.  For the former\n\n# case results are reported in variables::\n\n#\n\n#   Boost_FOUND            - True if headers and requested libraries were found\n\n#   Boost_INCLUDE_DIRS     - Boost include directories\n\n#   Boost_LIBRARY_DIRS     - Link directories for Boost libraries\n\n#   Boost_LIBRARIES        - Boost component libraries to be linked\n\n#   Boost_<C>_FOUND        - True if component <C> was found (<C> is upper-case)\n\n#   Boost_<C>_LIBRARY      - Libraries to link for component <C> (may include\n\n#                            target_link_libraries debug/optimized keywords)\n\n#   Boost_VERSION          - BOOST_VERSION value from boost/version.hpp\n\n#   Boost_LIB_VERSION      - Version string appended to library filenames\n\n#   Boost_MAJOR_VERSION    - Boost major version number (X in X.y.z)\n\n#   Boost_MINOR_VERSION    - Boost minor version number (Y in x.Y.z)\n\n#   Boost_SUBMINOR_VERSION - Boost subminor version number (Z in x.y.Z)\n\n#   Boost_LIB_DIAGNOSTIC_DEFINITIONS (Windows)\n\n#                          - Pass to add_definitions() to have diagnostic\n\n#                            information about Boost's automatic linking\n\n#                            displayed during compilation\n\n#\n\n# Note that Boost Python components require a Python version suffix\n\n# (Boost 1.67 and later), e.g. ``python36`` or ``python27`` for the\n\n# versions built against Python 3.6 and 2.7, respectively.  This also\n\n# applies to additional components using Python including\n\n# ``mpi_python`` and ``numpy``.  Earlier Boost releases may use\n\n# distribution-specific suffixes such as ``2``, ``3`` or ``2.7``.\n\n# These may also be used as suffixes, but note that they are not\n\n# portable.\n\n#\n\n# This module reads hints about search locations from variables::\n\n#\n\n#   BOOST_ROOT             - Preferred installation prefix\n\n#    (or BOOSTROOT)\n\n#   BOOST_INCLUDEDIR       - Preferred include directory e.g. <prefix>/include\n\n#   BOOST_LIBRARYDIR       - Preferred library directory e.g. <prefix>/lib\n\n#   Boost_NO_SYSTEM_PATHS  - Set to ON to disable searching in locations not\n\n#                            specified by these hint variables. Default is OFF.\n\n#   Boost_ADDITIONAL_VERSIONS\n\n#                          - List of Boost versions not known to this module\n\n#                            (Boost install locations may contain the version)\n\n#\n\n# and saves search results persistently in CMake cache entries::\n\n#\n\n#   Boost_INCLUDE_DIR         - Directory containing Boost headers\n\n#   Boost_LIBRARY_DIR_RELEASE - Directory containing release Boost libraries\n\n#   Boost_LIBRARY_DIR_DEBUG   - Directory containing debug Boost libraries\n\n#   Boost_<C>_LIBRARY_DEBUG   - Component <C> library debug variant\n\n#   Boost_<C>_LIBRARY_RELEASE - Component <C> library release variant\n\n#\n\n# The following :prop_tgt:`IMPORTED` targets are also defined::\n\n#\n\n#   Boost::boost                  - Target for header-only dependencies\n\n#                                   (Boost include directory)\n\n#   Boost::<C>                    - Target for specific component dependency\n\n#                                   (shared or static library); <C> is lower-\n\n#                                   case\n\n#   Boost::diagnostic_definitions - interface target to enable diagnostic\n\n#                                   information about Boost's automatic linking\n\n#                                   during compilation (adds BOOST_LIB_DIAGNOSTIC)\n\n#   Boost::disable_autolinking    - interface target to disable automatic\n\n#                                   linking with MSVC (adds BOOST_ALL_NO_LIB)\n\n#   Boost::dynamic_linking        - interface target to enable dynamic linking\n\n#                                   linking with MSVC (adds BOOST_ALL_DYN_LINK)\n\n#\n\n# Implicit dependencies such as Boost::filesystem requiring\n\n# Boost::system will be automatically detected and satisfied, even\n\n# if system is not specified when using find_package and if\n\n# Boost::system is not added to target_link_libraries.  If using\n\n# Boost::thread, then Threads::Threads will also be added automatically.\n\n#\n\n# It is important to note that the imported targets behave differently\n\n# than variables created by this module: multiple calls to\n\n# find_package(Boost) in the same directory or sub-directories with\n\n# different options (e.g. static or shared) will not override the\n\n# values of the targets created by the first call.\n\n#\n\n# Users may set these hints or results as cache entries.  Projects\n\n# should not read these entries directly but instead use the above\n\n# result variables.  Note that some hint names start in upper-case\n\n# \"BOOST\".  One may specify these as environment variables if they are\n\n# not specified as CMake variables or cache entries.\n\n#\n\n# This module first searches for the Boost header files using the above\n\n# hint variables (excluding BOOST_LIBRARYDIR) and saves the result in\n\n# Boost_INCLUDE_DIR.  Then it searches for requested component libraries\n\n# using the above hints (excluding BOOST_INCLUDEDIR and\n\n# Boost_ADDITIONAL_VERSIONS), \"lib\" directories near Boost_INCLUDE_DIR,\n\n# and the library name configuration settings below.  It saves the\n\n# library directories in Boost_LIBRARY_DIR_DEBUG and\n\n# Boost_LIBRARY_DIR_RELEASE and individual library\n\n# locations in Boost_<C>_LIBRARY_DEBUG and Boost_<C>_LIBRARY_RELEASE.\n\n# When one changes settings used by previous searches in the same build\n\n# tree (excluding environment variables) this module discards previous\n\n# search results affected by the changes and searches again.\n\n#\n\n# Boost libraries come in many variants encoded in their file name.\n\n# Users or projects may tell this module which variant to find by\n\n# setting variables::\n\n#\n\n#   Boost_USE_DEBUG_LIBS     - Set to ON or OFF to specify whether to search\n\n#                              and use the debug libraries.  Default is ON.\n\n#   Boost_USE_RELEASE_LIBS   - Set to ON or OFF to specify whether to search\n\n#                              and use the release libraries.  Default is ON.\n\n#   Boost_USE_MULTITHREADED  - Set to OFF to use the non-multithreaded\n\n#                              libraries ('mt' tag).  Default is ON.\n\n#   Boost_USE_STATIC_LIBS    - Set to ON to force the use of the static\n\n#                              libraries.  Default is OFF.\n\n#   Boost_USE_STATIC_RUNTIME - Set to ON or OFF to specify whether to use\n\n#                              libraries linked statically to the C++ runtime\n\n#                              ('s' tag).  Default is platform dependent.\n\n#   Boost_USE_DEBUG_RUNTIME  - Set to ON or OFF to specify whether to use\n\n#                              libraries linked to the MS debug C++ runtime\n\n#                              ('g' tag).  Default is ON.\n\n#   Boost_USE_DEBUG_PYTHON   - Set to ON to use libraries compiled with a\n\n#                              debug Python build ('y' tag). Default is OFF.\n\n#   Boost_USE_STLPORT        - Set to ON to use libraries compiled with\n\n#                              STLPort ('p' tag).  Default is OFF.\n\n#   Boost_USE_STLPORT_DEPRECATED_NATIVE_IOSTREAMS\n\n#                            - Set to ON to use libraries compiled with\n\n#                              STLPort deprecated \"native iostreams\"\n\n#                              ('n' tag).  Default is OFF.\n\n#   Boost_COMPILER           - Set to the compiler-specific library suffix\n\n#                              (e.g. \"-gcc43\").  Default is auto-computed\n\n#                              for the C++ compiler in use.  A list may be\n\n#                              used if multiple compatible suffixes should\n\n#                              be tested for, in decreasing order of\n\n#                              preference.\n\n#   Boost_ARCHITECTURE       - Set to the architecture-specific library suffix\n\n#                              (e.g. \"-x64\").  Default is auto-computed for the\n\n#                              C++ compiler in use.\n\n#   Boost_THREADAPI          - Suffix for \"thread\" component library name,\n\n#                              such as \"pthread\" or \"win32\".  Names with\n\n#                              and without this suffix will both be tried.\n\n#   Boost_NAMESPACE          - Alternate namespace used to build boost with\n\n#                              e.g. if set to \"myboost\", will search for\n\n#                              myboost_thread instead of boost_thread.\n\n#\n\n# Other variables one may set to control this module are::\n\n#\n\n#   Boost_DEBUG              - Set to ON to enable debug output from FindBoost.\n\n#                              Please enable this before filing any bug report.\n\n#   Boost_DETAILED_FAILURE_MSG\n\n#                            - Set to ON to add detailed information to the\n\n#                              failure message even when the REQUIRED option\n\n#                              is not given to the find_package call.\n\n#   Boost_REALPATH           - Set to ON to resolve symlinks for discovered\n\n#                              libraries to assist with packaging.  For example,\n\n#                              the \"system\" component library may be resolved to\n\n#                              \"/usr/lib/libboost_system.so.1.67.0\" instead of\n\n#                              \"/usr/lib/libboost_system.so\".  This does not\n\n#                              affect linking and should not be enabled unless\n\n#                              the user needs this information.\n\n#   Boost_LIBRARY_DIR        - Default value for Boost_LIBRARY_DIR_RELEASE and\n\n#                              Boost_LIBRARY_DIR_DEBUG.\n\n#\n\n# On Visual Studio and Borland compilers Boost headers request automatic\n\n# linking to corresponding libraries.  This requires matching libraries\n\n# to be linked explicitly or available in the link library search path.\n\n# In this case setting Boost_USE_STATIC_LIBS to OFF may not achieve\n\n# dynamic linking.  Boost automatic linking typically requests static\n\n# libraries with a few exceptions (such as Boost.Python).  Use::\n\n#\n\n#   add_definitions(${Boost_LIB_DIAGNOSTIC_DEFINITIONS})\n\n#\n\n# to ask Boost to report information about automatic linking requests.\n\n#\n\n# Example to find Boost headers only::\n\n#\n\n#   find_package(Boost 1.36.0)\n\n#   if(Boost_FOUND)\n\n#     include_directories(${Boost_INCLUDE_DIRS})\n\n#     add_executable(foo foo.cc)\n\n#   endif()\n\n#\n\n# Example to find Boost libraries and use imported targets::\n\n#\n\n#   find_package(Boost 1.56 REQUIRED COMPONENTS\n\n#                date_time filesystem iostreams)\n\n#   add_executable(foo foo.cc)\n\n#   target_link_libraries(foo Boost::date_time Boost::filesystem\n\n#                             Boost::iostreams)\n\n#\n\n# Example to find Boost Python 3.6 libraries and use imported targets::\n\n#\n\n#   find_package(Boost 1.67 REQUIRED COMPONENTS\n\n#                python36 numpy36)\n\n#   add_executable(foo foo.cc)\n\n#   target_link_libraries(foo Boost::python36 Boost::numpy36)\n\n#\n\n# Example to find Boost headers and some *static* (release only) libraries::\n\n#\n\n#   set(Boost_USE_STATIC_LIBS        ON)  # only find static libs\n\n#   set(Boost_USE_DEBUG_LIBS         OFF) # ignore debug libs and\n\n#   set(Boost_USE_RELEASE_LIBS       ON)  # only find release libs\n\n#   set(Boost_USE_MULTITHREADED      ON)\n\n#   set(Boost_USE_STATIC_RUNTIME    OFF)\n\n#   find_package(Boost 1.66.0 COMPONENTS date_time filesystem system ...)\n\n#   if(Boost_FOUND)\n\n#     include_directories(${Boost_INCLUDE_DIRS})\n\n#     add_executable(foo foo.cc)\n\n#     target_link_libraries(foo ${Boost_LIBRARIES})\n\n#   endif()\n\n#\n\n# Boost CMake\n\n# ^^^^^^^^^^^\n\n#\n\n# If Boost was built using the boost-cmake project it provides a package\n\n# configuration file for use with find_package's Config mode.  This\n\n# module looks for the package configuration file called\n\n# BoostConfig.cmake or boost-config.cmake and stores the result in cache\n\n# entry \"Boost_DIR\".  If found, the package configuration file is loaded\n\n# and this module returns with no further action.  See documentation of\n\n# the Boost CMake package configuration for details on what it provides.\n\n#\n\n# Set Boost_NO_BOOST_CMAKE to ON to disable the search for boost-cmake.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Save project's policies\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if IN_LIST\n",
        "Line" : 241,
        "CharPositionInLine" : 30
      },
      "4" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Before we go searching, check whether boost-cmake is available, unless the\n\n# user specifically asked NOT to search for boost-cmake.\n\n#\n\n# If Boost_DIR is set, this behaves as any find_package call would. If not,\n\n# it looks at BOOST_ROOT and BOOSTROOT to find Boost.\n\n#\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If Boost_DIR is not set, look for BOOSTROOT and BOOST_ROOT as alternatives,\n\n# since these are more conventional for Boost.\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Do the same find_package call but look specifically for the CMake version.\n\n# Note that args are passed in the Boost_FIND_xxxxx variables, so there is no\n\n# need to delegate them to this find_package call.\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# If we found boost-cmake, then we're done.  Print out what we found.\n\n# Otherwise let the rest of the module try to find it.\n",
        "Line" : 267,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Restore project's policies\n",
        "Line" : 274,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#  FindBoost functions & macros\n\n#\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "############################################\n\n#\n\n# Check the existence of the libraries.\n\n#\n\n############################################\n\n# This macro was taken directly from the FindQt4.cmake file that is included\n\n# with the CMake distribution. This is NOT my work. All work was done by the\n\n# original authors of the FindQt4.cmake file. Only minor modifications were\n\n# made to remove references to Qt and make this file more generally applicable\n\n# And ELSE/ENDIF pairs were removed for readability.\n\n#########################################################################\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# if the generator is multi-config or if CMAKE_BUILD_TYPE is set for\n\n# single-config generators, set optimized and debug libraries\n",
        "Line" : 300,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# For single-config generators where CMAKE_BUILD_TYPE has no value,\n\n# just use the release libraries\n",
        "Line" : 306,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# FIXME: This probably should be set for both cases\n",
        "Line" : 310,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# if only the release version was found, set the debug variable also to the release version\n",
        "Line" : 314,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# if only the debug version was found, set the release variable also to the debug version\n",
        "Line" : 321,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# If the debug & release library ends up being the same, omit the keywords\n",
        "Line" : 328,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Make variables changeable to the advanced user\n",
        "Line" : 343,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Detect changes in used variables.\n\n# Compares the current variable value with the last one.\n\n# In short form:\n\n# v != v_LAST                      -> CHANGED = 1\n\n# v is defined, v_LAST not         -> CHANGED = 1\n\n# v is not defined, but v_LAST is  -> CHANGED = 1\n\n# otherwise                        -> CHANGED = 0\n\n# CHANGED is returned in variable named ${changed_var}\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\n\n# Find the given library (var).\n\n# Use 'build_type' to support different lib paths for RELEASE or DEBUG builds\n\n#\n",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# If this is the first library found then save Boost_LIBRARY_DIR_[RELEASE,DEBUG].\n",
        "Line" : 389,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Try component-specific hints but do not save Boost_LIBRARY_DIR_[RELEASE,DEBUG].\n",
        "Line" : 395,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# If Boost_LIBRARY_DIR_[RELEASE,DEBUG] is known then search only there.\n",
        "Line" : 399,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Convert CMAKE_CXX_COMPILER_VERSION to boost compiler suffix version.\n",
        "Line" : 412,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#\n\n# Take a list of libraries with \"thread\" in it\n\n# and prepend duplicates with \"thread_${Boost_THREADAPI}\"\n\n# at the front of the list\n\n#\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#\n\n# If a library is found, replace its cache entry with its REALPATH\n\n#\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Guesses Boost's compiler prefix used in built library names\n\n# Returns the guess by setting the variable pointed to by _ret\n",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Good luck!\n",
        "Line" : 473,
        "CharPositionInLine" : 59
      },
      "29" : {
        "Text" : "# yes, this is correct\n",
        "Line" : 474,
        "CharPositionInLine" : 34
      },
      "30" : {
        "Text" : "# VS 6.0 Good luck!\n",
        "Line" : 475,
        "CharPositionInLine" : 11
      },
      "31" : {
        "Text" : "# yes, this is correct\n",
        "Line" : 476,
        "CharPositionInLine" : 34
      },
      "32" : {
        "Text" : "# no GCC version encoding prior to 1.34\n",
        "Line" : 486,
        "CharPositionInLine" : 36
      },
      "33" : {
        "Text" : "# From GCC 5 and clang 4, versioning changes and minor becomes patch.\n\n# For those compilers, patch is exclude from compiler tag in Boost 1.69+ library naming.\n",
        "Line" : 494,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "# no GCC version encoding prior to 1.34\n",
        "Line" : 505,
        "CharPositionInLine" : 36
      },
      "35" : {
        "Text" : "# Determine which version of GCC we have.\n",
        "Line" : 507,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# In Boost 1.36.0 and newer, the mangled compiler name used\n\n# on macOS/Darwin is \"xgcc\".\n",
        "Line" : 511,
        "CharPositionInLine" : 14
      },
      "37" : {
        "Text" : "# In Boost <= 1.35.0, there is no mangled compiler name for\n\n# the macOS/Darwin version of GCC.\n",
        "Line" : 515,
        "CharPositionInLine" : 14
      },
      "38" : {
        "Text" : "# We don't know the Boost version, so assume it's\n\n# pre-1.36.0.\n",
        "Line" : 520,
        "CharPositionInLine" : 12
      },
      "39" : {
        "Text" : "# TODO: Find out any Boost version constraints vs clang support.\n",
        "Line" : 529,
        "CharPositionInLine" : 6
      },
      "40" : {
        "Text" : "# TODO at least Boost_DEBUG here?\n",
        "Line" : 533,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "#\n\n# Get component dependencies.  Requires the dependencies to have been\n\n# defined for the Boost release version.\n\n#\n\n# component - the component to check\n\n# _ret - list of library dependencies\n\n#\n",
        "Line" : 539,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Note: to add a new Boost release, run\n\n#\n\n#   % cmake -DBOOST_DIR=/path/to/boost/source -P Utilities/Scripts/BoostScanDeps.cmake\n\n#\n\n# The output may be added in a new block below.  If it's the same as\n\n# the previous release, simply update the version range of the block\n\n# for the previous release.  Also check if any new components have\n\n# been added, and add any new components to\n\n# _Boost_COMPONENT_HEADERS.\n\n#\n\n# This information was originally generated by running\n\n# BoostScanDeps.cmake against every boost release to date supported\n\n# by FindBoost:\n\n#\n\n#   % for version in /path/to/boost/sources/*\n\n#     do\n\n#       cmake -DBOOST_DIR=$version -P Utilities/Scripts/BoostScanDeps.cmake\n\n#     done\n\n#\n\n# The output was then updated by search and replace with these regexes:\n\n#\n\n# - Strip message(STATUS) prefix dashes\n\n#   s;^-- ;;\n\n# - Indent\n\n#   s;^set(;    set(;;\n\n# - Add conditionals\n\n#   s;Scanning /path/to/boost/sources/boost_\\(.*\\)_\\(.*\\)_\\(.*);  elseif(NOT Boost_VERSION VERSION_LESS \\10\\20\\3 AND Boost_VERSION VERSION_LESS xxxx);\n\n#\n\n# This results in the logic seen below, but will require the xxxx\n\n# replacing with the following Boost release version (or the next\n\n# minor version to be released, e.g. 1.59 was the latest at the time\n\n# of writing, making 1.60 the next, so 106000 is the needed version\n\n# number).  Identical consecutive releases were then merged together\n\n# by updating the end range of the first block and removing the\n\n# following redundant blocks.\n\n#\n\n# Running the script against all historical releases should be\n\n# required only if the BoostScanDeps.cmake script logic is changed.\n\n# The addition of a new release should only require it to be run\n\n# against the new release.\n",
        "Line" : 547,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Handle Python version suffixes\n",
        "Line" : 588,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# message(STATUS \"Dependencies for Boost::${component}: ${_boost_DEPS_STRING}\")\n",
        "Line" : 892,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "#\n\n# Get component headers.  This is the primary header (or headers) for\n\n# a given component, and is used to check that the headers are present\n\n# as well as the library itself as an extra sanity check of the build\n\n# environment.\n\n#\n\n# component - the component to check\n\n# _hdrs\n\n#\n",
        "Line" : 895,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Handle Python version suffixes\n",
        "Line" : 905,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Note: new boost components will require adding here.  The header\n\n# must be present in all versions of Boost providing a library.\n",
        "Line" : 911,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# message(STATUS \"Headers for Boost::${component}: ${_boost_HDRS_STRING}\")\n",
        "Line" : 976,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "#\n\n# Determine if any missing dependencies require adding to the component list.\n\n#\n\n# Sets _Boost_${COMPONENT}_DEPENDENCIES for each required component,\n\n# plus _Boost_IMPORTED_TARGETS (TRUE if imported targets should be\n\n# defined; FALSE if dependency information is unavailable).\n\n#\n\n# componentvar - the component list variable name\n\n# extravar - the indirect dependency list variable name\n\n#\n\n#\n",
        "Line" : 979,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# _boost_unprocessed_components - list of components requiring processing\n\n# _boost_processed_components - components already processed (or currently being processed)\n\n# _boost_new_components - new components discovered for future processing\n\n#\n",
        "Line" : 991,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "#\n\n# Some boost libraries may require particular set of compler features.\n\n# The very first one was `boost::fiber` introduced in Boost 1.62.\n\n# One can check required compiler features of it in\n\n# `${Boost_ROOT}/libs/fiber/build/Jamfile.v2`.\n\n#\n",
        "Line" : 1022,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Boost >= 1.62 and < 1.67\n",
        "Line" : 1029,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "#\n\n# Update library search directory hint variable with paths used by prebuilt boost binaries.\n\n#\n\n# Prebuilt windows binaries (https://sourceforge.net/projects/boost/files/boost-binaries/)\n\n# have library directories named using MSVC compiler version and architecture.\n\n# This function would append corresponding directories if MSVC is a current compiler,\n\n# so having `BOOST_ROOT` would be enough to specify to find everything.\n\n#\n",
        "Line" : 1049,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "#\n\n# End functions/macros\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1075,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# main.\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1080,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# If the user sets Boost_LIBRARY_DIR, use it as the default for both\n\n# configurations.\n",
        "Line" : 1085,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Check the version of Boost against the requested version.\n",
        "Line" : 1107,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# The version may appear in a directory with or without the patch\n\n# level, even when the patch level is non-zero.\n",
        "Line" : 1113,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# The user has not requested an exact version.  Among known\n\n# versions, find those that are acceptable to the user request.\n\n#\n\n# Note: When adding a new Boost release, also update the dependency\n\n# information in _Boost_COMPONENT_DEPENDENCIES and\n\n# _Boost_COMPONENT_HEADERS.  See the instructions at the top of\n\n# _Boost_COMPONENT_DEPENDENCIES.\n",
        "Line" : 1119,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# Select acceptable versions.\n",
        "Line" : 1141,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "# This version is high enough.\n",
        "Line" : 1144,
        "CharPositionInLine" : 8
      },
      "62" : {
        "Text" : "# This version is a short-form for the requested version with\n\n# the patch level dropped.\n",
        "Line" : 1147,
        "CharPositionInLine" : 8
      },
      "63" : {
        "Text" : "# Any version is acceptable.\n",
        "Line" : 1153,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# The reason that we failed to find Boost. This will be set to a\n\n# user-friendly message when we fail to find some necessary piece of\n\n# Boost.\n",
        "Line" : 1158,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Output some of their choices\n",
        "Line" : 1164,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# Supply Boost_LIB_DIAGNOSTIC_DEFINITIONS as a convenience target. It\n\n# will only contain any interface definitions on WIN32, but is created\n\n# on all platforms to keep end user code free from platform dependent\n\n# code.  Also provide convenience targets to disable autolinking and\n\n# enable dynamic linking.\n",
        "Line" : 1179,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# In windows, automatic linking is performed, so you do not have\n\n# to specify the libraries.  If you are linking to a dynamic\n\n# runtime, then you can choose to link to either a static or a\n\n# dynamic Boost library, the default is to do a static link.  You\n\n# can alter this for a specific library \"whatever\" by defining\n\n# BOOST_WHATEVER_DYN_LINK to force Boost library \"whatever\" to be\n\n# linked dynamically.  Alternatively you can force all Boost\n\n# libraries to dynamic link by defining BOOST_ALL_DYN_LINK.\n",
        "Line" : 1190,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# This feature can be disabled for Boost library \"whatever\" by\n\n# defining BOOST_WHATEVER_NO_LIB, or for all of Boost by defining\n\n# BOOST_ALL_NO_LIB.\n",
        "Line" : 1199,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# If you want to observe which libraries are being linked against\n\n# then defining BOOST_LIB_DIAGNOSTIC will cause the auto-linking\n\n# code to emit a #pragma message each time a library is selected\n\n# for linking.\n",
        "Line" : 1203,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# Collect environment variable inputs as hints.  Do not consider changes.\n",
        "Line" : 1220,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Collect inputs and cached results.  Detect changes since the last run.\n",
        "Line" : 1233,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Search for Boost include DIR\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1255,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Clear Boost_INCLUDE_DIR if it did not change but other input affecting the\n\n# location did.  We will find a new one based on the new inputs.\n",
        "Line" : 1261,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Try to find Boost by stepping backwards through the Boost versions\n\n# we know about.\n\n# Build a list of path suffixes for each version.\n",
        "Line" : 1297,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# Add in a path suffix, based on the required version, ideally\n\n# we could read this from version.hpp, but for that to work we'd\n\n# need to know the include dir already\n",
        "Line" : 1302,
        "CharPositionInLine" : 4
      },
      "76" : {
        "Text" : "# Transform 1.35 => 1_35 and 1.36.0 => 1_36_0\n",
        "Line" : 1307,
        "CharPositionInLine" : 4
      },
      "77" : {
        "Text" : "# Look for a standard boost header file.\n",
        "Line" : 1334,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Extract version information from version.hpp\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1342,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Set Boost_FOUND based only on header location and version.\n\n# It will be updated below for component libraries.\n",
        "Line" : 1346,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Extract Boost_VERSION and Boost_LIB_VERSION from version.hpp\n",
        "Line" : 1354,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# Set Boost_FOUND based on requested version.\n",
        "Line" : 1380,
        "CharPositionInLine" : 4
      },
      "82" : {
        "Text" : "# State that we found a version of Boost that is too new or too old.\n",
        "Line" : 1393,
        "CharPositionInLine" : 6
      },
      "83" : {
        "Text" : "# Caller will accept any Boost version.\n",
        "Line" : 1406,
        "CharPositionInLine" : 4
      },
      "84" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Prefix initialization\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1415,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Suffix initialization and compiler suffix detection.\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1429,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Setting some more suffixes for the library\n",
        "Line" : 1446,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Attempt to guess the compiler suffix\n\n# NOTE: this is not perfect yet, if you experience any issues\n\n# please report them and use the Boost_COMPILER variable\n\n# to work around the problems.\n",
        "Line" : 1454,
        "CharPositionInLine" : 2
      },
      "88" : {
        "Text" : "#======================\n\n# Systematically build up the Boost ABI tag for the 'tagged' and 'versioned' layouts\n\n# http://boost.org/doc/libs/1_66_0/more/getting_started/windows.html#library-naming\n\n# http://boost.org/doc/libs/1_66_0/boost/config/auto_link.hpp\n\n# http://boost.org/doc/libs/1_66_0/tools/build/src/tools/common.jam\n\n# http://boost.org/doc/libs/1_66_0/boostcpp.jam\n",
        "Line" : 1474,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# Key       Use this library when:\n\n#  s        linking statically to the C++ standard library and\n\n#           compiler runtime support libraries.\n",
        "Line" : 1482,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "#  g        using debug versions of the standard and runtime\n\n#           support libraries\n",
        "Line" : 1489,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "#  y        using special debug build of python\n",
        "Line" : 1498,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "#  d        using a debug version of your code\n",
        "Line" : 1502,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "#  p        using the STLport standard library rather than the\n\n#           default one supplied with your compiler\n",
        "Line" : 1504,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "#  n        using the STLport deprecated \"native iostreams\" feature\n\n#           removed from the documentation in 1.43.0 but still present in\n\n#           boost/config/auto_link.hpp\n",
        "Line" : 1510,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "#  -x86     Architecture and address model tag\n\n#           First character is the architecture, then word-size, either 32 or 64\n\n#           Only used in 'versioned' layout, added in Boost 1.66.0\n",
        "Line" : 1518,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# {CMAKE_CXX_COMPILER_ARCHITECTURE_ID} is not currently set for all compilers\n",
        "Line" : 1529,
        "CharPositionInLine" : 2
      },
      "97" : {
        "Text" : "# This needs to be kept in-sync with the section of CMakePlatformId.h.in\n\n# inside 'defined(_WIN32) && defined(_MSC_VER)'\n",
        "Line" : 1532,
        "CharPositionInLine" : 4
      },
      "98" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Begin finding boost libraries\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1560,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# Clear Boost_LIBRARY_DIR_${c} if it did not change but other input affecting the\n\n# location did.  We will find a new one based on the new inputs.\n",
        "Line" : 1569,
        "CharPositionInLine" : 2
      },
      "100" : {
        "Text" : "# If Boost_LIBRARY_DIR_[RELEASE,DEBUG] is set, prefer its value.\n",
        "Line" : 1575,
        "CharPositionInLine" : 2
      },
      "101" : {
        "Text" : "# Support preference of static libs by adjusting CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 1624,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# We want to use the tag inline below without risking double dashes\n",
        "Line" : 1634,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# The previous behavior of FindBoost when Boost_USE_STATIC_LIBS was enabled\n\n# on WIN32 was to:\n\n#  1. Search for static libs compiled against a SHARED C++ standard runtime library (use if found)\n\n#  2. Search for static libs compiled against a STATIC C++ standard runtime library (use if found)\n\n# We maintain this behavior since changing it could break people's builds.\n\n# To disable the ambiguous behavior, the user need only\n\n# set Boost_USE_STATIC_RUNTIME either ON or OFF.\n",
        "Line" : 1646,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# On versions < 1.35, remove the System library from the considered list\n\n# since it wasn't added until 1.35.\n",
        "Line" : 1660,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# Additional components may be required via component dependencies.\n\n# Add any missing components to the list.\n",
        "Line" : 1668,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# If thread is required, get the thread libs as a dependency\n",
        "Line" : 1672,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "# If the user changed any of our control inputs flush previous results.\n",
        "Line" : 1683,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "# Compute component-specific hints.\n",
        "Line" : 1702,
        "CharPositionInLine" : 2
      },
      "109" : {
        "Text" : "# Handle Python version suffixes\n",
        "Line" : 1715,
        "CharPositionInLine" : 2
      },
      "110" : {
        "Text" : "# Boost >= 1.67\n",
        "Line" : 1729,
        "CharPositionInLine" : 4
      },
      "111" : {
        "Text" : "# Debian/Ubuntu (Some versions omit the 2 and/or 3 from the suffix)\n",
        "Line" : 1731,
        "CharPositionInLine" : 4
      },
      "112" : {
        "Text" : "# Gentoo\n",
        "Line" : 1734,
        "CharPositionInLine" : 4
      },
      "113" : {
        "Text" : "# RPMs\n",
        "Line" : 1736,
        "CharPositionInLine" : 4
      },
      "114" : {
        "Text" : "# Boost < 1.67\n",
        "Line" : 1740,
        "CharPositionInLine" : 4
      },
      "115" : {
        "Text" : "# Consolidate and report component-specific hints.\n",
        "Line" : 1744,
        "CharPositionInLine" : 2
      },
      "116" : {
        "Text" : "#\n\n# Find headers\n\n#\n",
        "Line" : 1762,
        "CharPositionInLine" : 2
      },
      "117" : {
        "Text" : "# Look for a standard boost header file.\n",
        "Line" : 1766,
        "CharPositionInLine" : 2
      },
      "118" : {
        "Text" : "#\n\n# Find RELEASE libraries\n\n#\n",
        "Line" : 1778,
        "CharPositionInLine" : 2
      },
      "119" : {
        "Text" : "# if Boost_LIBRARY_DIR_RELEASE is not defined,\n\n# but Boost_LIBRARY_DIR_DEBUG is, look there first for RELEASE libs\n",
        "Line" : 1813,
        "CharPositionInLine" : 2
      },
      "120" : {
        "Text" : "# Avoid passing backslashes to _Boost_FIND_LIBRARY due to macro re-parsing.\n",
        "Line" : 1819,
        "CharPositionInLine" : 2
      },
      "121" : {
        "Text" : "#\n\n# Find DEBUG libraries\n\n#\n",
        "Line" : 1831,
        "CharPositionInLine" : 2
      },
      "122" : {
        "Text" : "# if Boost_LIBRARY_DIR_DEBUG is not defined,\n\n# but Boost_LIBRARY_DIR_RELEASE is, look there first for DEBUG libs\n",
        "Line" : 1866,
        "CharPositionInLine" : 2
      },
      "123" : {
        "Text" : "# Avoid passing backslashes to _Boost_FIND_LIBRARY due to macro re-parsing.\n",
        "Line" : 1872,
        "CharPositionInLine" : 2
      },
      "124" : {
        "Text" : "# Check if component requires some compiler features\n",
        "Line" : 1891,
        "CharPositionInLine" : 2
      },
      "125" : {
        "Text" : "# Restore the original find library ordering\n",
        "Line" : 1896,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  End finding boost libraries\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1901,
        "CharPositionInLine" : 0
      },
      "127" : {
        "Text" : "# The above setting of Boost_FOUND was based only on the header files.\n\n# Update it for the requested component libraries.\n",
        "Line" : 1917,
        "CharPositionInLine" : 0
      },
      "128" : {
        "Text" : "# The headers were found.  Check for requested component libs.\n",
        "Line" : 1920,
        "CharPositionInLine" : 2
      },
      "129" : {
        "Text" : "# Optional indirect dependencies are not counted as missing.\n",
        "Line" : 1931,
        "CharPositionInLine" : 4
      },
      "130" : {
        "Text" : "# We were unable to find some libraries, so generate a sensible\n\n# error message that lists the libraries we were unable to find.\n",
        "Line" : 1941,
        "CharPositionInLine" : 4
      },
      "131" : {
        "Text" : "# Compatibility Code for backwards compatibility with CMake\n\n# 2.4's FindBoost module.\n",
        "Line" : 1968,
        "CharPositionInLine" : 4
      },
      "132" : {
        "Text" : "# Look for the boost library path.\n\n# Note that the user may not have installed any libraries\n\n# so it is quite possible the Boost_LIBRARY_DIRS may not exist.\n",
        "Line" : 1971,
        "CharPositionInLine" : 4
      },
      "133" : {
        "Text" : "# Strip off the trailing \"/include\" in the path.\n",
        "Line" : 1981,
        "CharPositionInLine" : 6
      },
      "134" : {
        "Text" : "# Boost headers were not found so no components were found.\n",
        "Line" : 1999,
        "CharPositionInLine" : 2
      },
      "135" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Add imported targets\n\n# ------------------------------------------------------------------------\n",
        "Line" : 2006,
        "CharPositionInLine" : 0
      },
      "136" : {
        "Text" : "# For header-only libraries\n",
        "Line" : 2011,
        "CharPositionInLine" : 2
      },
      "137" : {
        "Text" : "# Even if Boost_USE_STATIC_LIBS is OFF, we might have static\n\n# libraries as a result.\n",
        "Line" : 2027,
        "CharPositionInLine" : 10
      },
      "138" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Notification to end user about what was found\n\n# ------------------------------------------------------------------------\n",
        "Line" : 2074,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "# we opt not to automatically output Boost_ERROR_REASON here as\n\n# it could be quite lengthy and somewhat imposing in its requests\n\n# Since Boost is not always a required dependency we'll leave this\n\n# up to the end-user.\n",
        "Line" : 2103,
        "CharPositionInLine" : 6
      },
      "140" : {
        "Text" : "# Configure display of cache entries in GUI.\n",
        "Line" : 2116,
        "CharPositionInLine" : 0
      },
      "141" : {
        "Text" : "# Record last used values of input variables so we can\n\n# detect on the next run if the user changed them.\n",
        "Line" : 2131,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "# Maintain a persistent list of components requested anywhere since\n\n# the last flush.\n",
        "Line" : 2144,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "# Restore project's policies\n",
        "Line" : 2153,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 144
    },
    "deps/src/cmake-3.13.4/Modules/FindBullet.cmake" : {
      "ObjectId" : "fc6695c35439e262e100a752412c33cc6e72bdef",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindBullet\n\n# ----------\n\n#\n\n# Try to find the Bullet physics engine\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#   This module defines the following variables\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#   BULLET_FOUND - Was bullet found\n\n#   BULLET_INCLUDE_DIRS - the Bullet include directories\n\n#   BULLET_LIBRARIES - Link to this, by default it includes\n\n#                      all bullet components (Dynamics,\n\n#                      Collision, LinearMath, & SoftBody)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#   This module accepts the following variables\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#   BULLET_ROOT - Can be set to bullet install path or Windows build path\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find the libraries\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindCABLE.cmake" : {
      "ObjectId" : "450e32237d4bb0c7b689735364ccaa71d99532b9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindCABLE\n\n# ---------\n\n#\n\n# Find CABLE\n\n#\n\n# This module finds if CABLE is installed and determines where the\n\n# include files and libraries are.  This code sets the following\n\n# variables:\n\n#\n\n# ::\n\n#\n\n#   CABLE             the path to the cable executable\n\n#   CABLE_TCL_LIBRARY the path to the Tcl wrapper library\n\n#   CABLE_INCLUDE_DIR the path to the include directory\n\n#\n\n#\n\n#\n\n# To build Tcl wrappers, you should add shared library and link it to\n\n# ${CABLE_TCL_LIBRARY}.  You should also add ${CABLE_INCLUDE_DIR} as an\n\n# include directory.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find the cable executable in the path.\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Get the path where the executable sits, but without the executable\n\n# name on it.\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Find the cable include directory in a path relative to the cable\n\n# executable.\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Find the WrapTclFacility library in a path relative to the cable\n\n# executable.\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/FindCUDA.cmake" : {
      "ObjectId" : "3527979e7731ec1d3def316817ffd782c14c466f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindCUDA\n\n# --------\n\n#\n\n# .. note::\n\n#\n\n#   The FindCUDA module has been superseded by first-class support\n\n#   for the CUDA language in CMake.  It is no longer necessary to\n\n#   use this module or call ``find_package(CUDA)``.  This module\n\n#   now exists only for compatibility with projects that have not\n\n#   been ported.\n\n#\n\n#   Instead, list ``CUDA`` among the languages named in the top-level\n\n#   call to the :command:`project` command, or call the\n\n#   :command:`enable_language` command with ``CUDA``.\n\n#   Then one can add CUDA (``.cu``) sources to programs directly\n\n#   in calls to :command:`add_library` and :command:`add_executable`.\n\n#\n\n# Tools for building CUDA C files: libraries and build dependencies.\n\n#\n\n# This script locates the NVIDIA CUDA C tools.  It should work on Linux,\n\n# Windows, and macOS and should be reasonably up to date with CUDA C\n\n# releases.\n\n#\n\n# This script makes use of the standard :command:`find_package` arguments of\n\n# ``<VERSION>``, ``REQUIRED`` and ``QUIET``.  ``CUDA_FOUND`` will report if an\n\n# acceptable version of CUDA was found.\n\n#\n\n# The script will prompt the user to specify ``CUDA_TOOLKIT_ROOT_DIR`` if\n\n# the prefix cannot be determined by the location of nvcc in the system\n\n# path and ``REQUIRED`` is specified to :command:`find_package`.  To use\n\n# a different installed version of the toolkit set the environment variable\n\n# ``CUDA_BIN_PATH`` before running cmake (e.g.\n\n# ``CUDA_BIN_PATH=/usr/local/cuda1.0`` instead of the default\n\n# ``/usr/local/cuda``) or set ``CUDA_TOOLKIT_ROOT_DIR`` after configuring.  If\n\n# you change the value of ``CUDA_TOOLKIT_ROOT_DIR``, various components that\n\n# depend on the path will be relocated.\n\n#\n\n# It might be necessary to set ``CUDA_TOOLKIT_ROOT_DIR`` manually on certain\n\n# platforms, or to use a CUDA runtime not installed in the default\n\n# location.  In newer versions of the toolkit the CUDA library is\n\n# included with the graphics driver -- be sure that the driver version\n\n# matches what is needed by the CUDA runtime version.\n\n#\n\n# The following variables affect the behavior of the macros in the\n\n# script (in alphabetical order).  Note that any of these flags can be\n\n# changed multiple times in the same directory before calling\n\n# ``CUDA_ADD_EXECUTABLE``, ``CUDA_ADD_LIBRARY``, ``CUDA_COMPILE``,\n\n# ``CUDA_COMPILE_PTX``, ``CUDA_COMPILE_FATBIN``, ``CUDA_COMPILE_CUBIN``\n\n# or ``CUDA_WRAP_SRCS``::\n\n#\n\n#   CUDA_64_BIT_DEVICE_CODE (Default matches host bit size)\n\n#   -- Set to ON to compile for 64 bit device code, OFF for 32 bit device code.\n\n#      Note that making this different from the host code when generating object\n\n#      or C files from CUDA code just won't work, because size_t gets defined by\n\n#      nvcc in the generated source.  If you compile to PTX and then load the\n\n#      file yourself, you can mix bit sizes between device and host.\n\n#\n\n#   CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE (Default ON)\n\n#   -- Set to ON if you want the custom build rule to be attached to the source\n\n#      file in Visual Studio.  Turn OFF if you add the same cuda file to multiple\n\n#      targets.\n\n#\n\n#      This allows the user to build the target from the CUDA file; however, bad\n\n#      things can happen if the CUDA source file is added to multiple targets.\n\n#      When performing parallel builds it is possible for the custom build\n\n#      command to be run more than once and in parallel causing cryptic build\n\n#      errors.  VS runs the rules for every source file in the target, and a\n\n#      source can have only one rule no matter how many projects it is added to.\n\n#      When the rule is run from multiple targets race conditions can occur on\n\n#      the generated file.  Eventually everything will get built, but if the user\n\n#      is unaware of this behavior, there may be confusion.  It would be nice if\n\n#      this script could detect the reuse of source files across multiple targets\n\n#      and turn the option off for the user, but no good solution could be found.\n\n#\n\n#   CUDA_BUILD_CUBIN (Default OFF)\n\n#   -- Set to ON to enable and extra compilation pass with the -cubin option in\n\n#      Device mode. The output is parsed and register, shared memory usage is\n\n#      printed during build.\n\n#\n\n#   CUDA_BUILD_EMULATION (Default OFF for device mode)\n\n#   -- Set to ON for Emulation mode. -D_DEVICEEMU is defined for CUDA C files\n\n#      when CUDA_BUILD_EMULATION is TRUE.\n\n#\n\n#   CUDA_LINK_LIBRARIES_KEYWORD (Default \"\")\n\n#    -- The <PRIVATE|PUBLIC|INTERFACE> keyword to use for internal\n\n#       target_link_libraries calls. The default is to use no keyword which\n\n#       uses the old \"plain\" form of target_link_libraries. Note that is matters\n\n#       because whatever is used inside the FindCUDA module must also be used\n\n#       outside - the two forms of target_link_libraries cannot be mixed.\n\n#\n\n#   CUDA_GENERATED_OUTPUT_DIR (Default CMAKE_CURRENT_BINARY_DIR)\n\n#   -- Set to the path you wish to have the generated files placed.  If it is\n\n#      blank output files will be placed in CMAKE_CURRENT_BINARY_DIR.\n\n#      Intermediate files will always be placed in\n\n#      CMAKE_CURRENT_BINARY_DIR/CMakeFiles.\n\n#\n\n#   CUDA_HOST_COMPILATION_CPP (Default ON)\n\n#   -- Set to OFF for C compilation of host code.\n\n#\n\n#   CUDA_HOST_COMPILER (Default CMAKE_C_COMPILER)\n\n#   -- Set the host compiler to be used by nvcc.  Ignored if -ccbin or\n\n#      --compiler-bindir is already present in the CUDA_NVCC_FLAGS or\n\n#      CUDA_NVCC_FLAGS_<CONFIG> variables.  For Visual Studio targets,\n\n#      the host compiler is constructed with one or more visual studio macros\n\n#      such as $(VCInstallDir), that expands out to the path when\n\n#      the command is run from within VS.\n\n#      If the CUDAHOSTCXX environment variable is set it will\n\n#      be used as the default.\n\n#\n\n#   CUDA_NVCC_FLAGS\n\n#   CUDA_NVCC_FLAGS_<CONFIG>\n\n#   -- Additional NVCC command line arguments.  NOTE: multiple arguments must be\n\n#      semi-colon delimited (e.g. --compiler-options;-Wall)\n\n#\n\n#   CUDA_PROPAGATE_HOST_FLAGS (Default ON)\n\n#   -- Set to ON to propagate CMAKE_{C,CXX}_FLAGS and their configuration\n\n#      dependent counterparts (e.g. CMAKE_C_FLAGS_DEBUG) automatically to the\n\n#      host compiler through nvcc's -Xcompiler flag.  This helps make the\n\n#      generated host code match the rest of the system better.  Sometimes\n\n#      certain flags give nvcc problems, and this will help you turn the flag\n\n#      propagation off.  This does not affect the flags supplied directly to nvcc\n\n#      via CUDA_NVCC_FLAGS or through the OPTION flags specified through\n\n#      CUDA_ADD_LIBRARY, CUDA_ADD_EXECUTABLE, or CUDA_WRAP_SRCS.  Flags used for\n\n#      shared library compilation are not affected by this flag.\n\n#\n\n#   CUDA_SEPARABLE_COMPILATION (Default OFF)\n\n#   -- If set this will enable separable compilation for all CUDA runtime object\n\n#      files.  If used outside of CUDA_ADD_EXECUTABLE and CUDA_ADD_LIBRARY\n\n#      (e.g. calling CUDA_WRAP_SRCS directly),\n\n#      CUDA_COMPUTE_SEPARABLE_COMPILATION_OBJECT_FILE_NAME and\n\n#      CUDA_LINK_SEPARABLE_COMPILATION_OBJECTS should be called.\n\n#\n\n#   CUDA_SOURCE_PROPERTY_FORMAT\n\n#   -- If this source file property is set, it can override the format specified\n\n#      to CUDA_WRAP_SRCS (OBJ, PTX, CUBIN, or FATBIN).  If an input source file\n\n#      is not a .cu file, setting this file will cause it to be treated as a .cu\n\n#      file. See documentation for set_source_files_properties on how to set\n\n#      this property.\n\n#\n\n#   CUDA_USE_STATIC_CUDA_RUNTIME (Default ON)\n\n#   -- When enabled the static version of the CUDA runtime library will be used\n\n#      in CUDA_LIBRARIES.  If the version of CUDA configured doesn't support\n\n#      this option, then it will be silently disabled.\n\n#\n\n#   CUDA_VERBOSE_BUILD (Default OFF)\n\n#   -- Set to ON to see all the commands used when building the CUDA file.  When\n\n#      using a Makefile generator the value defaults to VERBOSE (run make\n\n#      VERBOSE=1 to see output), although setting CUDA_VERBOSE_BUILD to ON will\n\n#      always print the output.\n\n#\n\n# The script creates the following macros (in alphabetical order)::\n\n#\n\n#   CUDA_ADD_CUFFT_TO_TARGET( cuda_target )\n\n#   -- Adds the cufft library to the target (can be any target).  Handles whether\n\n#      you are in emulation mode or not.\n\n#\n\n#   CUDA_ADD_CUBLAS_TO_TARGET( cuda_target )\n\n#   -- Adds the cublas library to the target (can be any target).  Handles\n\n#      whether you are in emulation mode or not.\n\n#\n\n#   CUDA_ADD_EXECUTABLE( cuda_target file0 file1 ...\n\n#                        [WIN32] [MACOSX_BUNDLE] [EXCLUDE_FROM_ALL] [OPTIONS ...] )\n\n#   -- Creates an executable \"cuda_target\" which is made up of the files\n\n#      specified.  All of the non CUDA C files are compiled using the standard\n\n#      build rules specified by CMAKE and the cuda files are compiled to object\n\n#      files using nvcc and the host compiler.  In addition CUDA_INCLUDE_DIRS is\n\n#      added automatically to include_directories().  Some standard CMake target\n\n#      calls can be used on the target after calling this macro\n\n#      (e.g. set_target_properties and target_link_libraries), but setting\n\n#      properties that adjust compilation flags will not affect code compiled by\n\n#      nvcc.  Such flags should be modified before calling CUDA_ADD_EXECUTABLE,\n\n#      CUDA_ADD_LIBRARY or CUDA_WRAP_SRCS.\n\n#\n\n#   CUDA_ADD_LIBRARY( cuda_target file0 file1 ...\n\n#                     [STATIC | SHARED | MODULE] [EXCLUDE_FROM_ALL] [OPTIONS ...] )\n\n#   -- Same as CUDA_ADD_EXECUTABLE except that a library is created.\n\n#\n\n#   CUDA_BUILD_CLEAN_TARGET()\n\n#   -- Creates a convenience target that deletes all the dependency files\n\n#      generated.  You should make clean after running this target to ensure the\n\n#      dependency files get regenerated.\n\n#\n\n#   CUDA_COMPILE( generated_files file0 file1 ... [STATIC | SHARED | MODULE]\n\n#                 [OPTIONS ...] )\n\n#   -- Returns a list of generated files from the input source files to be used\n\n#      with ADD_LIBRARY or ADD_EXECUTABLE.\n\n#\n\n#   CUDA_COMPILE_PTX( generated_files file0 file1 ... [OPTIONS ...] )\n\n#   -- Returns a list of PTX files generated from the input source files.\n\n#\n\n#   CUDA_COMPILE_FATBIN( generated_files file0 file1 ... [OPTIONS ...] )\n\n#   -- Returns a list of FATBIN files generated from the input source files.\n\n#\n\n#   CUDA_COMPILE_CUBIN( generated_files file0 file1 ... [OPTIONS ...] )\n\n#   -- Returns a list of CUBIN files generated from the input source files.\n\n#\n\n#   CUDA_COMPUTE_SEPARABLE_COMPILATION_OBJECT_FILE_NAME( output_file_var\n\n#                                                        cuda_target\n\n#                                                        object_files )\n\n#   -- Compute the name of the intermediate link file used for separable\n\n#      compilation.  This file name is typically passed into\n\n#      CUDA_LINK_SEPARABLE_COMPILATION_OBJECTS.  output_file_var is produced\n\n#      based on cuda_target the list of objects files that need separable\n\n#      compilation as specified by object_files.  If the object_files list is\n\n#      empty, then output_file_var will be empty.  This function is called\n\n#      automatically for CUDA_ADD_LIBRARY and CUDA_ADD_EXECUTABLE.  Note that\n\n#      this is a function and not a macro.\n\n#\n\n#   CUDA_INCLUDE_DIRECTORIES( path0 path1 ... )\n\n#   -- Sets the directories that should be passed to nvcc\n\n#      (e.g. nvcc -Ipath0 -Ipath1 ... ). These paths usually contain other .cu\n\n#      files.\n\n#\n\n#\n\n#   CUDA_LINK_SEPARABLE_COMPILATION_OBJECTS( output_file_var cuda_target\n\n#                                            nvcc_flags object_files)\n\n#   -- Generates the link object required by separable compilation from the given\n\n#      object files.  This is called automatically for CUDA_ADD_EXECUTABLE and\n\n#      CUDA_ADD_LIBRARY, but can be called manually when using CUDA_WRAP_SRCS\n\n#      directly.  When called from CUDA_ADD_LIBRARY or CUDA_ADD_EXECUTABLE the\n\n#      nvcc_flags passed in are the same as the flags passed in via the OPTIONS\n\n#      argument.  The only nvcc flag added automatically is the bitness flag as\n\n#      specified by CUDA_64_BIT_DEVICE_CODE.  Note that this is a function\n\n#      instead of a macro.\n\n#\n\n#   CUDA_SELECT_NVCC_ARCH_FLAGS(out_variable [target_CUDA_architectures])\n\n#   -- Selects GPU arch flags for nvcc based on target_CUDA_architectures\n\n#      target_CUDA_architectures : Auto | Common | All | LIST(ARCH_AND_PTX ...)\n\n#       - \"Auto\" detects local machine GPU compute arch at runtime.\n\n#       - \"Common\" and \"All\" cover common and entire subsets of architectures\n\n#      ARCH_AND_PTX : NAME | NUM.NUM | NUM.NUM(NUM.NUM) | NUM.NUM+PTX\n\n#      NAME: Fermi Kepler Maxwell Kepler+Tegra Kepler+Tesla Maxwell+Tegra Pascal\n\n#      NUM: Any number. Only those pairs are currently accepted by NVCC though:\n\n#            2.0 2.1 3.0 3.2 3.5 3.7 5.0 5.2 5.3 6.0 6.2\n\n#      Returns LIST of flags to be added to CUDA_NVCC_FLAGS in ${out_variable}\n\n#      Additionally, sets ${out_variable}_readable to the resulting numeric list\n\n#      Example:\n\n#       CUDA_SELECT_NVCC_ARCH_FLAGS(ARCH_FLAGS 3.0 3.5+PTX 5.2(5.0) Maxwell)\n\n#        LIST(APPEND CUDA_NVCC_FLAGS ${ARCH_FLAGS})\n\n#\n\n#      More info on CUDA architectures: https://en.wikipedia.org/wiki/CUDA\n\n#      Note that this is a function instead of a macro.\n\n#\n\n#   CUDA_WRAP_SRCS ( cuda_target format generated_files file0 file1 ...\n\n#                    [STATIC | SHARED | MODULE] [OPTIONS ...] )\n\n#   -- This is where all the magic happens.  CUDA_ADD_EXECUTABLE,\n\n#      CUDA_ADD_LIBRARY, CUDA_COMPILE, and CUDA_COMPILE_PTX all call this\n\n#      function under the hood.\n\n#\n\n#      Given the list of files (file0 file1 ... fileN) this macro generates\n\n#      custom commands that generate either PTX or linkable objects (use \"PTX\" or\n\n#      \"OBJ\" for the format argument to switch).  Files that don't end with .cu\n\n#      or have the HEADER_FILE_ONLY property are ignored.\n\n#\n\n#      The arguments passed in after OPTIONS are extra command line options to\n\n#      give to nvcc.  You can also specify per configuration options by\n\n#      specifying the name of the configuration followed by the options.  General\n\n#      options must precede configuration specific options.  Not all\n\n#      configurations need to be specified, only the ones provided will be used.\n\n#\n\n#         OPTIONS -DFLAG=2 \"-DFLAG_OTHER=space in flag\"\n\n#         DEBUG -g\n\n#         RELEASE --use_fast_math\n\n#         RELWITHDEBINFO --use_fast_math;-g\n\n#         MINSIZEREL --use_fast_math\n\n#\n\n#      For certain configurations (namely VS generating object files with\n\n#      CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE set to ON), no generated file will\n\n#      be produced for the given cuda file.  This is because when you add the\n\n#      cuda file to Visual Studio it knows that this file produces an object file\n\n#      and will link in the resulting object file automatically.\n\n#\n\n#      This script will also generate a separate cmake script that is used at\n\n#      build time to invoke nvcc.  This is for several reasons.\n\n#\n\n#        1. nvcc can return negative numbers as return values which confuses\n\n#        Visual Studio into thinking that the command succeeded.  The script now\n\n#        checks the error codes and produces errors when there was a problem.\n\n#\n\n#        2. nvcc has been known to not delete incomplete results when it\n\n#        encounters problems.  This confuses build systems into thinking the\n\n#        target was generated when in fact an unusable file exists.  The script\n\n#        now deletes the output files if there was an error.\n\n#\n\n#        3. By putting all the options that affect the build into a file and then\n\n#        make the build rule dependent on the file, the output files will be\n\n#        regenerated when the options change.\n\n#\n\n#      This script also looks at optional arguments STATIC, SHARED, or MODULE to\n\n#      determine when to target the object compilation for a shared library.\n\n#      BUILD_SHARED_LIBS is ignored in CUDA_WRAP_SRCS, but it is respected in\n\n#      CUDA_ADD_LIBRARY.  On some systems special flags are added for building\n\n#      objects intended for shared libraries.  A preprocessor macro,\n\n#      <target_name>_EXPORTS is defined when a shared library compilation is\n\n#      detected.\n\n#\n\n#      Flags passed into add_definitions with -D or /D are passed along to nvcc.\n\n#\n\n#\n\n#\n\n# The script defines the following variables::\n\n#\n\n#   CUDA_VERSION_MAJOR    -- The major version of cuda as reported by nvcc.\n\n#   CUDA_VERSION_MINOR    -- The minor version.\n\n#   CUDA_VERSION\n\n#   CUDA_VERSION_STRING   -- CUDA_VERSION_MAJOR.CUDA_VERSION_MINOR\n\n#   CUDA_HAS_FP16         -- Whether a short float (float16,fp16) is supported.\n\n#\n\n#   CUDA_TOOLKIT_ROOT_DIR -- Path to the CUDA Toolkit (defined if not set).\n\n#   CUDA_SDK_ROOT_DIR     -- Path to the CUDA SDK.  Use this to find files in the\n\n#                            SDK.  This script will not directly support finding\n\n#                            specific libraries or headers, as that isn't\n\n#                            supported by NVIDIA.  If you want to change\n\n#                            libraries when the path changes see the\n\n#                            FindCUDA.cmake script for an example of how to clear\n\n#                            these variables.  There are also examples of how to\n\n#                            use the CUDA_SDK_ROOT_DIR to locate headers or\n\n#                            libraries, if you so choose (at your own risk).\n\n#   CUDA_INCLUDE_DIRS     -- Include directory for cuda headers.  Added automatically\n\n#                            for CUDA_ADD_EXECUTABLE and CUDA_ADD_LIBRARY.\n\n#   CUDA_LIBRARIES        -- Cuda RT library.\n\n#   CUDA_CUFFT_LIBRARIES  -- Device or emulation library for the Cuda FFT\n\n#                            implementation (alternative to:\n\n#                            CUDA_ADD_CUFFT_TO_TARGET macro)\n\n#   CUDA_CUBLAS_LIBRARIES -- Device or emulation library for the Cuda BLAS\n\n#                            implementation (alternative to:\n\n#                            CUDA_ADD_CUBLAS_TO_TARGET macro).\n\n#   CUDA_cudart_static_LIBRARY -- Statically linkable cuda runtime library.\n\n#                                 Only available for CUDA version 5.5+\n\n#   CUDA_cudadevrt_LIBRARY -- Device runtime library.\n\n#                             Required for separable compilation.\n\n#   CUDA_cupti_LIBRARY    -- CUDA Profiling Tools Interface library.\n\n#                            Only available for CUDA version 4.0+.\n\n#   CUDA_curand_LIBRARY   -- CUDA Random Number Generation library.\n\n#                            Only available for CUDA version 3.2+.\n\n#   CUDA_cusolver_LIBRARY -- CUDA Direct Solver library.\n\n#                            Only available for CUDA version 7.0+.\n\n#   CUDA_cusparse_LIBRARY -- CUDA Sparse Matrix library.\n\n#                            Only available for CUDA version 3.2+.\n\n#   CUDA_npp_LIBRARY      -- NVIDIA Performance Primitives lib.\n\n#                            Only available for CUDA version 4.0+.\n\n#   CUDA_nppc_LIBRARY     -- NVIDIA Performance Primitives lib (core).\n\n#                            Only available for CUDA version 5.5+.\n\n#   CUDA_nppi_LIBRARY     -- NVIDIA Performance Primitives lib (image processing).\n\n#                            Only available for CUDA version 5.5 - 8.0.\n\n#   CUDA_nppial_LIBRARY   -- NVIDIA Performance Primitives lib (image processing).\n\n#                            Only available for CUDA version 9.0.\n\n#   CUDA_nppicc_LIBRARY   -- NVIDIA Performance Primitives lib (image processing).\n\n#                            Only available for CUDA version 9.0.\n\n#   CUDA_nppicom_LIBRARY  -- NVIDIA Performance Primitives lib (image processing).\n\n#                            Only available for CUDA version 9.0.\n\n#   CUDA_nppidei_LIBRARY  -- NVIDIA Performance Primitives lib (image processing).\n\n#                            Only available for CUDA version 9.0.\n\n#   CUDA_nppif_LIBRARY    -- NVIDIA Performance Primitives lib (image processing).\n\n#                            Only available for CUDA version 9.0.\n\n#   CUDA_nppig_LIBRARY    -- NVIDIA Performance Primitives lib (image processing).\n\n#                            Only available for CUDA version 9.0.\n\n#   CUDA_nppim_LIBRARY    -- NVIDIA Performance Primitives lib (image processing).\n\n#                            Only available for CUDA version 9.0.\n\n#   CUDA_nppist_LIBRARY   -- NVIDIA Performance Primitives lib (image processing).\n\n#                            Only available for CUDA version 9.0.\n\n#   CUDA_nppisu_LIBRARY   -- NVIDIA Performance Primitives lib (image processing).\n\n#                            Only available for CUDA version 9.0.\n\n#   CUDA_nppitc_LIBRARY   -- NVIDIA Performance Primitives lib (image processing).\n\n#                            Only available for CUDA version 9.0.\n\n#   CUDA_npps_LIBRARY     -- NVIDIA Performance Primitives lib (signal processing).\n\n#                            Only available for CUDA version 5.5+.\n\n#   CUDA_nvcuvenc_LIBRARY -- CUDA Video Encoder library.\n\n#                            Only available for CUDA version 3.2+.\n\n#                            Windows only.\n\n#   CUDA_nvcuvid_LIBRARY  -- CUDA Video Decoder library.\n\n#                            Only available for CUDA version 3.2+.\n\n#                            Windows only.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   James Bigler, NVIDIA Corp (nvidia.com - jbigler)\n\n#   Abe Stephens, SCI Institute -- http://www.sci.utah.edu/~abe/FindCuda.html\n\n#\n\n#   Copyright (c) 2008 - 2009 NVIDIA Corporation.  All rights reserved.\n\n#\n\n#   Copyright (c) 2007-2009\n\n#   Scientific Computing and Imaging Institute, University of Utah\n\n#\n\n#   This code is licensed under the MIT License.  See the FindCUDA.cmake script\n\n#   for the text of the license.\n",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The MIT License\n\n#\n\n# License for the specific language governing rights and limitations under\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and associated documentation files (the \"Software\"),\n\n# to deal in the Software without restriction, including without limitation\n\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n# and/or sell copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n#\n\n###############################################################################\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FindCUDA.cmake\n",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This macro helps us find the location of helper files we will need the full path to\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CMAKE_CURRENT_LIST_FILE contains the full path to the file currently being\n\n# processed.  Using this variable, we can pull out the current path, and\n\n# provide a way to get access to the other files we need local to here.\n",
        "Line" : 416,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set this variable as internal, so the user isn't bugged with it.\n",
        "Line" : 431,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#####################################################################\n\n## CUDA_INCLUDE_NVCC_DEPENDENCIES\n\n##\n",
        "Line" : 435,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# So we want to try and include the dependency file if it exists.  If\n\n# it doesn't exist then we need to create an empty one, so we can\n\n# include it.\n",
        "Line" : 439,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If it does exist, then we need to check to see if all the files it\n\n# depends on exist.  If they don't then we should clear the dependency\n\n# file and regenerate it later.  This covers the case where a header\n\n# file has disappeared or moved.\n",
        "Line" : 443,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Include the dependency file.  Create it first if it doesn't exist .  The\n\n# INCLUDE puts a dependency that will force CMake to rerun and bring in the\n\n# new info when it changes.  DO NOT REMOVE THIS (as I did and spent a few\n\n# hours figuring out why it didn't work.\n",
        "Line" : 453,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Always include this file to force CMake to run again next\n\n# invocation and rebuild the dependencies.\n\n#message(\"including dependency_file = ${dependency_file}\")\n",
        "Line" : 460,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Now we need to verify the existence of all the included files\n\n# here.  If they aren't there we need to just blank this variable and\n\n# make the file regenerate again.\n",
        "Line" : 465,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#   if(DEFINED CUDA_NVCC_DEPEND)\n\n#     message(\"CUDA_NVCC_DEPEND set\")\n\n#   else()\n\n#     message(\"CUDA_NVCC_DEPEND NOT set\")\n\n#   endif()\n",
        "Line" : 468,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#message(\"CUDA_NVCC_DEPEND found\")\n",
        "Line" : 474,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# message(\"searching for ${f}\")\n",
        "Line" : 476,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "#message(\"file ${f} not found\")\n",
        "Line" : 478,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "#message(\"CUDA_NVCC_DEPEND false\")\n\n# No dependencies, so regenerate the file.\n",
        "Line" : 483,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#message(\"CUDA_NVCC_DEPEND_REGENERATE = ${CUDA_NVCC_DEPEND_REGENERATE}\")\n\n# No incoming dependencies, so we need to generate them.  Make the\n\n# output depend on the dependency file itself, which should cause the\n\n# rule to re-run.\n",
        "Line" : 488,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#message(\"Generating an empty dependency_file: ${dependency_file}\")\n",
        "Line" : 494,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Setup variables' defaults\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 500,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Allow the user to specify if the device code is supposed to be 32 or 64 bit.\n",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Attach the build rule to the source file in VS.  This option\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Prints out extra information about the cuda file during compilation\n",
        "Line" : 517,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Set whether we are using emulation or device mode.\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Where to put the generated output.\n",
        "Line" : 523,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Parse HOST_COMPILATION mode.\n",
        "Line" : 526,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Extra user settable flags\n",
        "Line" : 529,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Using cc which is symlink to clang may let NVCC think it is GCC and issue\n\n# unhandled -dumpspecs option to clang. Also in case neither\n\n# CMAKE_C_COMPILER is defined (project does not use C language) nor\n\n# CUDA_HOST_COMPILER is specified manually we should skip -ccbin and let\n\n# nvcc use its own default C compiler.\n\n# Only care about this on APPLE with clang to avoid\n\n# following symlinks to things like ccache\n",
        "Line" : 546,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# if the real path does not end up being clang then\n\n# go back to using CMAKE_C_COMPILER\n",
        "Line" : 555,
        "CharPositionInLine" : 6
      },
      "30" : {
        "Text" : "# NVCC does not think it will work if it is passed clcache.exe or sccache.exe\n\n# as the host compiler, which means that builds with CC=cl.exe won't work.\n\n# Best to just feed it whatever the actual cl.exe is as the host compiler.\n",
        "Line" : 565,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Propagate the host flags to the host compiler via -Xcompiler\n",
        "Line" : 575,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Enable CUDA_SEPARABLE_COMPILATION\n",
        "Line" : 578,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Specifies whether the commands used when compiling the .cu file will be printed out.\n",
        "Line" : 581,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Single config generators like Makefiles or Ninja don't usually have\n\n# CMAKE_CONFIGURATION_TYPES defined (but note that it can be defined if set by\n\n# projects or developers). Even CMAKE_BUILD_TYPE might not be defined for\n\n# single config generators (and should not be defined for multi-config\n\n# generators). To ensure we get a complete superset of all possible\n\n# configurations, we combine CMAKE_CONFIGURATION_TYPES, CMAKE_BUILD_TYPE and\n\n# all of the standard configurations, then weed out duplicates with\n\n# list(REMOVE_DUPLICATES). Looping over the unique set then ensures we have\n\n# each configuration-specific set of nvcc flags defined and marked as advanced.\n",
        "Line" : 597,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Locate CUDA, Set Build Type, etc.\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 609,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Make sure you run this before you unset CUDA_VERSION.\n",
        "Line" : 619,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# This only existed in the 3.0 version of the CUDA toolkit\n",
        "Line" : 621,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Check to see if the CUDA_TOOLKIT_ROOT_DIR and CUDA_SDK_ROOT_DIR have changed,\n\n# if they have then clear the cache variables, so that will be detected again.\n",
        "Line" : 644,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\n\n#  End of unset()\n\n#\n",
        "Line" : 657,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\n\n#  Start looking for things\n\n#\n",
        "Line" : 661,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Search for the cuda distribution.\n",
        "Line" : 665,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Search in the CUDA_BIN_PATH first.\n",
        "Line" : 667,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Now search default paths\n",
        "Line" : 679,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# We need to force this back into the cache.\n",
        "Line" : 689,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# Support for NVPACK\n",
        "Line" : 706,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# Support for arm cross compilation\n",
        "Line" : 709,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# Support for aarch64 cross compilation\n",
        "Line" : 712,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# add known CUDA targetr root path to the set of directories we search for programs, libraries and headers\n",
        "Line" : 726,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# for non-cross-compile, find_host_program == find_program and CUDA_TOOLKIT_TARGET_DIR == CUDA_TOOLKIT_ROOT_DIR\n",
        "Line" : 736,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# CUDA_NVCC_EXECUTABLE\n",
        "Line" : 744,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Search default search paths, after we search our own set of paths.\n",
        "Line" : 756,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# Compute the version.\n",
        "Line" : 762,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Need to set these based off of the cached value\n",
        "Line" : 769,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Always set this convenience variable\n",
        "Line" : 775,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# CUDA_TOOLKIT_INCLUDE\n",
        "Line" : 778,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Header included in toolkit\n",
        "Line" : 780,
        "CharPositionInLine" : 21
      },
      "57" : {
        "Text" : "# Search default search paths, after we search our own set of paths.\n",
        "Line" : 787,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Set the user list of include dir to nothing to initialize it.\n",
        "Line" : 797,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# CUDA 3.2+ on Windows moved the library directories, so we need the new\n\n# and old paths.\n",
        "Line" : 803,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# CUDA 3.2+ on Windows moved the library directories, so we need to new\n\n# (lib/Win32) and the old path (lib).\n",
        "Line" : 807,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# Search default search paths, after we search our own set of paths.\n",
        "Line" : 819,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# CUDA_LIBRARIES\n",
        "Line" : 837,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# The cudartemu library only existed for the 3.0 version of CUDA.\n",
        "Line" : 840,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# If static cudart available, use it by default, but provide a user-visible option to disable it.\n",
        "Line" : 854,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "# If not available, silently disable the option.\n",
        "Line" : 857,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# Check for the dependent libraries.  Here we look for pthreads.\n",
        "Line" : 874,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# Many of the FindXYZ CMake comes with makes use of try_compile with int main(){return 0;}\n\n# as the source file.  Unfortunately this causes a warning with -Wstrict-prototypes and\n\n# -Werror causes the try_compile to fail.  We will just temporarily disable other flags\n\n# when doing the find_package command here.\n",
        "Line" : 880,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "#On Linux, you must link against librt when using the static cuda runtime.\n",
        "Line" : 897,
        "CharPositionInLine" : 6
      },
      "69" : {
        "Text" : "# CUPTI library showed up in cuda toolkit 4.0\n",
        "Line" : 906,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Set the CUDA_LIBRARIES variable.  This is the set of stuff to link against if you are\n\n# using the CUDA runtime.  For the dynamic version of the runtime, most of the\n\n# dependencies are brough in, but for the static version there are additional libraries\n\n# and linker commands needed.\n\n# Initialize to empty\n",
        "Line" : 912,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# If we are using emulation mode and we found the cudartemu library then use\n\n# that one instead of cudart.\n",
        "Line" : 919,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# We need to add the default path to the driver (libcuda.dylib) as an rpath, so that\n\n# the static cuda runtime can find it at runtime.\n",
        "Line" : 929,
        "CharPositionInLine" : 4
      },
      "73" : {
        "Text" : "# 1.1 toolkit on linux doesn't appear to have a separate library on\n\n# some platforms.\n",
        "Line" : 937,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "#######################\n\n# Look for some of the toolkit helper libraries\n",
        "Line" : 946,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "#######################\n\n# Disable emulation for v3.1 onward\n",
        "Line" : 953,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Search for additional CUDA toolkit libraries.\n",
        "Line" : 961,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Emulation libraries aren't available in version 3.1 onward.\n",
        "Line" : 963,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# cusparse showed up in version 3.2\n",
        "Line" : 970,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# In CUDA 9.2 cublas_device was deprecated\n",
        "Line" : 979,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "# In CUDA 9.0 NPP was nppi was removed\n",
        "Line" : 984,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# In CUDA 5.5 NPP was split into 3 separate libraries.\n",
        "Line" : 999,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# cusolver showed up in version 7.0\n",
        "Line" : 1008,
        "CharPositionInLine" : 2
      },
      "83" : {
        "Text" : "########################\n\n# Look for the SDK stuff.  As of CUDA 3.0 NVSDKCUDA_ROOT has been replaced with\n\n# NVSDKCOMPUTE_ROOT with the old CUDA C contents moved into the C subdirectory\n",
        "Line" : 1020,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Keep the CUDA_SDK_ROOT_DIR first in order to be able to override the\n\n# environment variables.\n",
        "Line" : 1032,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Example of how to find an include file from the CUDA_SDK_ROOT_DIR\n",
        "Line" : 1044,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# find_path(CUDA_CUT_INCLUDE_DIR\n\n#   cutil.h\n\n#   PATHS ${CUDA_SDK_SEARCH_PATH}\n\n#   PATH_SUFFIXES \"common/inc\"\n\n#   DOC \"Location of cutil.h\"\n\n#   NO_DEFAULT_PATH\n\n#   )\n\n# # Now search system paths\n\n# find_path(CUDA_CUT_INCLUDE_DIR cutil.h DOC \"Location of cutil.h\")\n",
        "Line" : 1046,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# mark_as_advanced(CUDA_CUT_INCLUDE_DIR)\n",
        "Line" : 1056,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# Example of how to find a library in the CUDA_SDK_ROOT_DIR\n",
        "Line" : 1059,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# # cutil library is called cutil64 for 64 bit builds on windows.  We don't want\n\n# # to get these confused, so we are setting the name based on the word size of\n\n# # the build.\n",
        "Line" : 1061,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# if(CMAKE_SIZEOF_VOID_P EQUAL 8)\n\n#   set(cuda_cutil_name cutil64)\n\n# else()\n\n#   set(cuda_cutil_name cutil32)\n\n# endif()\n",
        "Line" : 1065,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# find_library(CUDA_CUT_LIBRARY\n\n#   NAMES cutil ${cuda_cutil_name}\n\n#   PATHS ${CUDA_SDK_SEARCH_PATH}\n\n#   # The new version of the sdk shows up in common/lib, but the old one is in lib\n\n#   PATH_SUFFIXES \"common/lib\" \"lib\"\n\n#   DOC \"Location of cutil library\"\n\n#   NO_DEFAULT_PATH\n\n#   )\n\n# # Now search system paths\n\n# find_library(CUDA_CUT_LIBRARY NAMES cutil ${cuda_cutil_name} DOC \"Location of cutil library\")\n\n# mark_as_advanced(CUDA_CUT_LIBRARY)\n\n# set(CUDA_CUT_LIBRARIES ${CUDA_CUT_LIBRARY})\n",
        "Line" : 1071,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "#############################\n\n# Check for required components\n",
        "Line" : 1086,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Macros\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1111,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "###############################################################################\n\n# Add include directories to pass to the nvcc command.\n",
        "Line" : 1117,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "##############################################################################\n",
        "Line" : 1126,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "##############################################################################\n\n# Separate the OPTIONS out from the sources\n\n#\n",
        "Line" : 1132,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# Assume this is a file\n",
        "Line" : 1156,
        "CharPositionInLine" : 8
      },
      "98" : {
        "Text" : "##############################################################################\n\n# Parse the OPTIONS from ARGN and set the variables prefixed by _option_prefix\n\n#\n",
        "Line" : 1163,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# Determine if we are dealing with a perconfiguration flag\n",
        "Line" : 1169,
        "CharPositionInLine" : 4
      },
      "100" : {
        "Text" : "# Set arg to nothing to keep it from being processed further\n",
        "Line" : 1174,
        "CharPositionInLine" : 8
      },
      "101" : {
        "Text" : "##############################################################################\n\n# Helper to add the include directory for CUDA only once\n",
        "Line" : 1185,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# If SHARED, MODULE, or STATIC aren't already in the list of arguments, then\n\n# add SHARED or STATIC based on the value of BUILD_SHARED_LIBS.\n",
        "Line" : 1204,
        "CharPositionInLine" : 2
      },
      "103" : {
        "Text" : "##############################################################################\n\n# Helper to avoid clashes of files with the same basename but different paths.\n\n# This doesn't attempt to do exactly what CMake internals do, which is to only\n\n# add this path when there is a conflict, since by the time a second collision\n\n# in names is detected it's already too late to fix the first one.  For\n\n# consistency sake the relative path will be added to all files.\n",
        "Line" : 1223,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "#message(\"CUDA_COMPUTE_BUILD_PATH([${path}] ${build_path})\")\n\n# Only deal with CMake style paths from here on out\n",
        "Line" : 1230,
        "CharPositionInLine" : 2
      },
      "105" : {
        "Text" : "# Absolute paths are generally unnessary, especially if something like\n\n# file(GLOB_RECURSE) is used to pick up the files.\n",
        "Line" : 1234,
        "CharPositionInLine" : 4
      },
      "106" : {
        "Text" : "# This recipe is from cmLocalGenerator::CreateSafeUniqueObjectFileName in the\n\n# CMake source.\n",
        "Line" : 1245,
        "CharPositionInLine" : 2
      },
      "107" : {
        "Text" : "# Remove leading /\n",
        "Line" : 1248,
        "CharPositionInLine" : 2
      },
      "108" : {
        "Text" : "# Avoid absolute paths by removing ':'\n",
        "Line" : 1250,
        "CharPositionInLine" : 2
      },
      "109" : {
        "Text" : "# Avoid relative paths that go up the tree\n",
        "Line" : 1252,
        "CharPositionInLine" : 2
      },
      "110" : {
        "Text" : "# Avoid spaces\n",
        "Line" : 1254,
        "CharPositionInLine" : 2
      },
      "111" : {
        "Text" : "# Strip off the filename.  I wait until here to do it, since removin the\n\n# basename can make a path that looked like path/../basename turn into\n\n# path/.. (notice the trailing slash).\n",
        "Line" : 1257,
        "CharPositionInLine" : 2
      },
      "112" : {
        "Text" : "#message(\"${build_path} = ${bpath}\")\n",
        "Line" : 1263,
        "CharPositionInLine" : 2
      },
      "113" : {
        "Text" : "##############################################################################\n\n# This helper macro populates the following variables and setups up custom\n\n# commands and targets to invoke the nvcc compiler to generate C or PTX source\n\n# dependent upon the format parameter.  The compiler is invoked once with -M\n\n# to generate a dependency file and a second time with -cuda or -ptx to generate\n\n# a .cpp or .ptx file.\n\n# INPUT:\n\n#   cuda_target         - Target name\n\n#   format              - PTX, CUBIN, FATBIN or OBJ\n\n#   FILE1 .. FILEN      - The remaining arguments are the sources to be wrapped.\n\n#   OPTIONS             - Extra options to NVCC\n\n# OUTPUT:\n\n#   generated_files     - List of generated files\n\n##############################################################################\n\n##############################################################################\n",
        "Line" : 1266,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "# Put optional arguments in list.\n",
        "Line" : 1284,
        "CharPositionInLine" : 2
      },
      "115" : {
        "Text" : "# If one of the given optional arguments is \"PHONY\", make a note of it, then\n\n# remove it from the list.\n",
        "Line" : 1286,
        "CharPositionInLine" : 2
      },
      "116" : {
        "Text" : "# If CMake doesn't support separable compilation, complain\n",
        "Line" : 1296,
        "CharPositionInLine" : 2
      },
      "117" : {
        "Text" : "# Set up all the command line flags here, so that they can be overridden on a per target basis.\n",
        "Line" : 1301,
        "CharPositionInLine" : 2
      },
      "118" : {
        "Text" : "# Emulation if the card isn't present.\n",
        "Line" : 1305,
        "CharPositionInLine" : 2
      },
      "119" : {
        "Text" : "# Emulation.\n",
        "Line" : 1307,
        "CharPositionInLine" : 4
      },
      "120" : {
        "Text" : "# Device mode.  No flags necessary.\n",
        "Line" : 1310,
        "CharPositionInLine" : 4
      },
      "121" : {
        "Text" : "# This needs to be passed in at this stage, because VS needs to fill out the\n\n# various macros from within VS.  Note that CCBIN is only used if\n\n# -ccbin or --compiler-bindir isn't used and CUDA_HOST_COMPILER matches\n\n# _CUDA_MSVC_HOST_COMPILER\n",
        "Line" : 1336,
        "CharPositionInLine" : 2
      },
      "122" : {
        "Text" : "# Figure out which configure we will use and pass that in as an argument to\n\n# the script.  We need to defer the decision until compilation time, because\n\n# for VS projects we won't know if we are making a debug or release build\n\n# until build time.\n",
        "Line" : 1346,
        "CharPositionInLine" : 2
      },
      "123" : {
        "Text" : "# Initialize our list of includes with the user ones followed by the CUDA system ones.\n",
        "Line" : 1356,
        "CharPositionInLine" : 2
      },
      "124" : {
        "Text" : "# If the passed in target name isn't a real target (i.e., this is from a call to one of the\n\n# cuda_compile_* functions), need to query directory properties to get include directories\n\n# and compile definitions.\n",
        "Line" : 1359,
        "CharPositionInLine" : 4
      },
      "125" : {
        "Text" : "# Append the include directories for this target via generator expression, which is\n\n# expanded by the FILE(GENERATE) call below.  This generator expression captures all\n\n# include dirs set by the user, whether via directory properties or target properties\n",
        "Line" : 1368,
        "CharPositionInLine" : 4
      },
      "126" : {
        "Text" : "# Do the same thing with compile definitions\n",
        "Line" : 1373,
        "CharPositionInLine" : 4
      },
      "127" : {
        "Text" : "# Reset these variables\n",
        "Line" : 1378,
        "CharPositionInLine" : 2
      },
      "128" : {
        "Text" : "# Figure out if we are building a shared library.  BUILD_SHARED_LIBS is\n\n# respected in CUDA_ADD_LIBRARY.\n",
        "Line" : 1388,
        "CharPositionInLine" : 2
      },
      "129" : {
        "Text" : "# SHARED, MODULE\n",
        "Line" : 1391,
        "CharPositionInLine" : 2
      },
      "130" : {
        "Text" : "# STATIC\n",
        "Line" : 1397,
        "CharPositionInLine" : 2
      },
      "131" : {
        "Text" : "# CUDA_HOST_FLAGS\n",
        "Line" : 1403,
        "CharPositionInLine" : 2
      },
      "132" : {
        "Text" : "# If we are setting up code for a shared library, then we need to add extra flags for\n\n# compiling objects for shared libraries.\n",
        "Line" : 1405,
        "CharPositionInLine" : 4
      },
      "133" : {
        "Text" : "# Only add the CMAKE_{C,CXX}_FLAGS if we are propagating host flags.  We\n\n# always need to set the SHARED_FLAGS, though.\n",
        "Line" : 1411,
        "CharPositionInLine" : 2
      },
      "134" : {
        "Text" : "# Loop over all the configuration types to generate appropriate flags for run_nvcc.cmake\n",
        "Line" : 1420,
        "CharPositionInLine" : 2
      },
      "135" : {
        "Text" : "# CMAKE_FLAGS are strings and not lists.  By not putting quotes around CMAKE_FLAGS\n\n# we convert the strings to lists (like we want).\n",
        "Line" : 1423,
        "CharPositionInLine" : 4
      },
      "136" : {
        "Text" : "# nvcc chokes on -g3 in versions previous to 3.0, so replace it with -g\n",
        "Line" : 1427,
        "CharPositionInLine" : 6
      },
      "137" : {
        "Text" : "# Note that if we ever want CUDA_NVCC_FLAGS_<CONFIG> to be string (instead of a list\n\n# like it is currently), we can remove the quotes around the\n\n# ${CUDA_NVCC_FLAGS_${config_upper}} variable like the CMAKE_HOST_FLAGS_<CONFIG> variable.\n",
        "Line" : 1447,
        "CharPositionInLine" : 4
      },
      "138" : {
        "Text" : "# Process the C++11 flag.  If the host sets the flag, we need to add it to nvcc and\n\n# remove it from the host. This is because -Xcompile -std=c++ will choke nvcc (it uses\n\n# the C preprocessor).  In order to get this to work correctly, we need to use nvcc's\n\n# specific c++11 flag.\n",
        "Line" : 1453,
        "CharPositionInLine" : 2
      },
      "139" : {
        "Text" : "# Add the c++11 flag to nvcc if it isn't already present.  Note that we only look at\n\n# the main flag instead of the configuration specific flags.\n",
        "Line" : 1458,
        "CharPositionInLine" : 4
      },
      "140" : {
        "Text" : "# Reset the output variable\n",
        "Line" : 1470,
        "CharPositionInLine" : 2
      },
      "141" : {
        "Text" : "# Iterate over the macro arguments and create custom\n\n# commands for all the .cu files.\n",
        "Line" : 1473,
        "CharPositionInLine" : 2
      },
      "142" : {
        "Text" : "# Ignore any file marked as a HEADER_FILE_ONLY\n",
        "Line" : 1476,
        "CharPositionInLine" : 4
      },
      "143" : {
        "Text" : "# Allow per source file overrides of the format.  Also allows compiling non-.cu files.\n",
        "Line" : 1478,
        "CharPositionInLine" : 4
      },
      "144" : {
        "Text" : "# If file isn't a .cu file, we need to tell nvcc to treat it as such.\n",
        "Line" : 1485,
        "CharPositionInLine" : 6
      },
      "145" : {
        "Text" : "# Don't use any of the host compilation flags for PTX targets.\n",
        "Line" : 1508,
        "CharPositionInLine" : 8
      },
      "146" : {
        "Text" : "# Determine output directory\n",
        "Line" : 1516,
        "CharPositionInLine" : 6
      },
      "147" : {
        "Text" : "# Add a custom target to generate a c or ptx file. ######################\n",
        "Line" : 1529,
        "CharPositionInLine" : 6
      },
      "148" : {
        "Text" : "# Set all of our file names.  Make sure that whatever filenames that have\n\n# generated_file_path in them get passed in through as a command line\n\n# argument, so that the ${CMAKE_CFG_INTDIR} gets expanded at run time\n\n# instead of configure time.\n",
        "Line" : 1547,
        "CharPositionInLine" : 6
      },
      "149" : {
        "Text" : "# Setup properties for obj files:\n",
        "Line" : 1558,
        "CharPositionInLine" : 6
      },
      "150" : {
        "Text" : "# This is an object file not to be compiled, but only be linked.\n",
        "Line" : 1562,
        "CharPositionInLine" : 31
      },
      "151" : {
        "Text" : "# Don't add CMAKE_CURRENT_SOURCE_DIR if the path is already an absolute path.\n",
        "Line" : 1566,
        "CharPositionInLine" : 6
      },
      "152" : {
        "Text" : "# Bring in the dependencies.  Creates a variable CUDA_NVCC_DEPEND #######\n",
        "Line" : 1578,
        "CharPositionInLine" : 6
      },
      "153" : {
        "Text" : "# Convenience string for output #########################################\n",
        "Line" : 1581,
        "CharPositionInLine" : 6
      },
      "154" : {
        "Text" : "# Build the NVCC made dependency file ###################################\n",
        "Line" : 1588,
        "CharPositionInLine" : 6
      },
      "155" : {
        "Text" : "# Configure the build script\n",
        "Line" : 1596,
        "CharPositionInLine" : 6
      },
      "156" : {
        "Text" : "# So if a user specifies the same cuda file as input more than once, you\n\n# can have bad things happen with dependencies.  Here we check an option\n\n# to see if this is the behavior they want.\n",
        "Line" : 1603,
        "CharPositionInLine" : 6
      },
      "157" : {
        "Text" : "# Create up the comment string\n",
        "Line" : 1620,
        "CharPositionInLine" : 6
      },
      "158" : {
        "Text" : "# Build the generated file and dependency file ##########################\n",
        "Line" : 1633,
        "CharPositionInLine" : 6
      },
      "159" : {
        "Text" : "# These output files depend on the source_file and the contents of cmake_dependency_file\n",
        "Line" : 1636,
        "CharPositionInLine" : 8
      },
      "160" : {
        "Text" : "# Make sure the output directory exists before trying to write to it.\n",
        "Line" : 1640,
        "CharPositionInLine" : 8
      },
      "161" : {
        "Text" : "# Make sure the build system knows the file is generated.\n",
        "Line" : 1654,
        "CharPositionInLine" : 6
      },
      "162" : {
        "Text" : "# Add the other files that we want cmake to clean on a cleanup ##########\n",
        "Line" : 1659,
        "CharPositionInLine" : 6
      },
      "163" : {
        "Text" : "# Set the return parameter\n",
        "Line" : 1667,
        "CharPositionInLine" : 2
      },
      "164" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Separable Compilation Link\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1682,
        "CharPositionInLine" : 0
      },
      "165" : {
        "Text" : "# Compute the filename to be used by CUDA_LINK_SEPARABLE_COMPILATION_OBJECTS\n",
        "Line" : 1688,
        "CharPositionInLine" : 0
      },
      "166" : {
        "Text" : "# Setup the build rule for the separable compilation intermediate link file.\n",
        "Line" : 1700,
        "CharPositionInLine" : 0
      },
      "167" : {
        "Text" : "# This is an object file not to be compiled, but only\n\n# be linked.\n\n# This file is generated during the build\n",
        "Line" : 1706,
        "CharPositionInLine" : 27
      },
      "168" : {
        "Text" : "# For now we are ignoring all the configuration specific flags.\n",
        "Line" : 1711,
        "CharPositionInLine" : 4
      },
      "169" : {
        "Text" : "# If -ccbin, --compiler-bindir has been specified, don't do anything.  Otherwise add it here.\n",
        "Line" : 1719,
        "CharPositionInLine" : 4
      },
      "170" : {
        "Text" : "# Match VERBATIM check below.\n",
        "Line" : 1723,
        "CharPositionInLine" : 6
      },
      "171" : {
        "Text" : "# Create a list of flags specified by CUDA_NVCC_FLAGS_${CONFIG} and CMAKE_${CUDA_C_OR_CXX}_FLAGS*\n",
        "Line" : 1731,
        "CharPositionInLine" : 4
      },
      "172" : {
        "Text" : "# Add config specific flags\n",
        "Line" : 1736,
        "CharPositionInLine" : 6
      },
      "173" : {
        "Text" : "# Add CMAKE_${CUDA_C_OR_CXX}_FLAGS\n",
        "Line" : 1746,
        "CharPositionInLine" : 4
      },
      "174" : {
        "Text" : "# Add our general CUDA_NVCC_FLAGS with the configuration specifig flags\n",
        "Line" : 1753,
        "CharPositionInLine" : 4
      },
      "175" : {
        "Text" : "# Some generators don't handle the multiple levels of custom command\n\n# dependencies correctly (obj1 depends on file1, obj2 depends on obj1), so\n\n# we work around that issue by compiling the intermediate link object as a\n\n# pre-link custom command in that situation.\n",
        "Line" : 1758,
        "CharPositionInLine" : 4
      },
      "176" : {
        "Text" : "# VS 2010 and 2012 have this problem.\n",
        "Line" : 1764,
        "CharPositionInLine" : 6
      },
      "177" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# ADD LIBRARY\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1798,
        "CharPositionInLine" : 0
      },
      "178" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 1807,
        "CharPositionInLine" : 2
      },
      "179" : {
        "Text" : "# Create custom commands and targets for each file.\n",
        "Line" : 1810,
        "CharPositionInLine" : 2
      },
      "180" : {
        "Text" : "# Compute the file name of the intermedate link file used for separable\n\n# compilation.\n",
        "Line" : 1815,
        "CharPositionInLine" : 2
      },
      "181" : {
        "Text" : "# Add the library.\n",
        "Line" : 1819,
        "CharPositionInLine" : 2
      },
      "182" : {
        "Text" : "# Add a link phase for the separable compilation if it has been enabled.  If\n\n# it has been enabled then the ${cuda_target}_SEPARABLE_COMPILATION_OBJECTS\n\n# variable will have been defined.\n",
        "Line" : 1826,
        "CharPositionInLine" : 2
      },
      "183" : {
        "Text" : "# We need to set the linker language based on what the expected generated file\n\n# would be. CUDA_C_OR_CXX is computed based on CUDA_HOST_COMPILATION_CPP.\n",
        "Line" : 1841,
        "CharPositionInLine" : 2
      },
      "184" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# ADD EXECUTABLE\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1851,
        "CharPositionInLine" : 0
      },
      "185" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 1860,
        "CharPositionInLine" : 2
      },
      "186" : {
        "Text" : "# Create custom commands and targets for each file.\n",
        "Line" : 1862,
        "CharPositionInLine" : 2
      },
      "187" : {
        "Text" : "# Compute the file name of the intermedate link file used for separable\n\n# compilation.\n",
        "Line" : 1865,
        "CharPositionInLine" : 2
      },
      "188" : {
        "Text" : "# Add the library.\n",
        "Line" : 1869,
        "CharPositionInLine" : 2
      },
      "189" : {
        "Text" : "# Add a link phase for the separable compilation if it has been enabled.  If\n\n# it has been enabled then the ${cuda_target}_SEPARABLE_COMPILATION_OBJECTS\n\n# variable will have been defined.\n",
        "Line" : 1876,
        "CharPositionInLine" : 2
      },
      "190" : {
        "Text" : "# We need to set the linker language based on what the expected generated file\n\n# would be. CUDA_C_OR_CXX is computed based on CUDA_HOST_COMPILATION_CPP.\n",
        "Line" : 1885,
        "CharPositionInLine" : 2
      },
      "191" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# (Internal) helper for manually added cuda source files with specific targets\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1895,
        "CharPositionInLine" : 0
      },
      "192" : {
        "Text" : "# Update a counter in this directory, to keep phony target names unique.\n",
        "Line" : 1901,
        "CharPositionInLine" : 2
      },
      "193" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 1912,
        "CharPositionInLine" : 2
      },
      "194" : {
        "Text" : "# Create custom commands and targets for each file.\n",
        "Line" : 1915,
        "CharPositionInLine" : 2
      },
      "195" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA COMPILE\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1923,
        "CharPositionInLine" : 0
      },
      "196" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA COMPILE PTX\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1932,
        "CharPositionInLine" : 0
      },
      "197" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA COMPILE FATBIN\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1941,
        "CharPositionInLine" : 0
      },
      "198" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA COMPILE CUBIN\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1950,
        "CharPositionInLine" : 0
      },
      "199" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA ADD CUFFT TO TARGET\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1960,
        "CharPositionInLine" : 0
      },
      "200" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA ADD CUBLAS TO TARGET\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1973,
        "CharPositionInLine" : 0
      },
      "201" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA BUILD CLEAN TARGET\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1986,
        "CharPositionInLine" : 0
      },
      "202" : {
        "Text" : "# Call this after you add all your CUDA targets, and you will get a\n\n# convenience target.  You should also make clean after running this target\n\n# to get the build system to generate all the code again.\n",
        "Line" : 1992,
        "CharPositionInLine" : 2
      },
      "203" : {
        "Text" : "# Clear out the variable, so the next time we configure it will be empty.\n\n# This is useful so that the files won't persist in the list after targets\n\n# have been removed.\n",
        "Line" : 2003,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 204
    },
    "deps/src/cmake-3.13.4/Modules/FindCUDA/make2cmake.cmake" : {
      "ObjectId" : "580f24a400d8c5662ec572c4631db9e3e47645d9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  James Bigler, NVIDIA Corp (nvidia.com - jbigler)\n\n#  Abe Stephens, SCI Institute -- http://www.sci.utah.edu/~abe/FindCuda.html\n\n#\n\n#  Copyright (c) 2008 - 2009 NVIDIA Corporation.  All rights reserved.\n\n#\n\n#  Copyright (c) 2007-2009\n\n#  Scientific Computing and Imaging Institute, University of Utah\n\n#\n\n#  This code is licensed under the MIT License.  See the FindCUDA.cmake script\n\n#  for the text of the license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MIT License\n\n#\n\n# License for the specific language governing rights and limitations under\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and associated documentation files (the \"Software\"),\n\n# to deal in the Software without restriction, including without limitation\n\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n# and/or sell copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################################################\n\n# This converts a file written in makefile syntax into one that can be included\n\n# by CMake.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Input variables\n\n#\n\n# verbose:BOOL=<>          OFF: Be as quiet as possible (default)\n\n#                          ON : Extra output\n\n#\n\n# input_file:FILEPATH=<>   Path to dependency file in makefile format\n\n#\n\n# output_file:FILEPATH=<>  Path to file with dependencies in CMake readable variable\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# message(\"FOUND DEPENDS\")\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# This works for the nvcc -M generated dependency files.\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# OK, now if we had a UNC path, nvcc has a tendency to only output the first '/'\n\n# instead of '//'.  Here we will test to see if the file exists, if it doesn't then\n\n# try to prepend another '/' to the path and test again.  If it still fails remove the\n\n# path.\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Make sure we check to see if we have a file, before asking if it is not a directory.\n\n# if(NOT IS_DIRECTORY \"\") will return TRUE.\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# If softlinks start to matter, we should change this to REALPATH.  For now we need\n\n# to flatten paths, because nvcc can generate stuff like /bin/../include instead of\n\n# just /include.\n",
        "Line" : 85,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# message(\"FOUND NO DEPENDS\")\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Remove the duplicate entries and sort them.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "deps/src/cmake-3.13.4/Modules/FindCUDA/parse_cubin.cmake" : {
      "ObjectId" : "25ceb49f3dd8e684e35cac49834c4db0aa5c338a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  James Bigler, NVIDIA Corp (nvidia.com - jbigler)\n\n#  Abe Stephens, SCI Institute -- http://www.sci.utah.edu/~abe/FindCuda.html\n\n#\n\n#  Copyright (c) 2008 - 2009 NVIDIA Corporation.  All rights reserved.\n\n#\n\n#  Copyright (c) 2007-2009\n\n#  Scientific Computing and Imaging Institute, University of Utah\n\n#\n\n#  This code is licensed under the MIT License.  See the FindCUDA.cmake script\n\n#  for the text of the license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MIT License\n\n#\n\n# License for the specific language governing rights and limitations under\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and associated documentation files (the \"Software\"),\n\n# to deal in the Software without restriction, including without limitation\n\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n# and/or sell copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################################################\n\n# Parses a .cubin file produced by nvcc and reports statistics about the file.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Only look at \"code { }\" blocks.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Break into individual lines.\n",
        "Line" : 52,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Extract kernel names.\n",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Check to see if the kernel name starts with \"_\"\n",
        "Line" : 61,
        "CharPositionInLine" : 10
      },
      "7" : {
        "Text" : "# if (${entry} MATCHES \"^_\")\n",
        "Line" : 63,
        "CharPositionInLine" : 10
      },
      "8" : {
        "Text" : "# Skip the rest of this block.\n\n# message(\"Skipping ${entry}\")\n\n# set(skip TRUE)\n",
        "Line" : 64,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# else ()\n",
        "Line" : 67,
        "CharPositionInLine" : 10
      },
      "10" : {
        "Text" : "# endif ()\n",
        "Line" : 69,
        "CharPositionInLine" : 10
      },
      "11" : {
        "Text" : "# Skip the rest of the block if necessary\n",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Registers\n",
        "Line" : 76,
        "CharPositionInLine" : 10
      },
      "13" : {
        "Text" : "# Local memory\n",
        "Line" : 82,
        "CharPositionInLine" : 10
      },
      "14" : {
        "Text" : "# Shared memory\n",
        "Line" : 88,
        "CharPositionInLine" : 10
      },
      "15" : {
        "Text" : "# message(\"FOUND NO DEPENDS\")\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    },
    "deps/src/cmake-3.13.4/Modules/FindCUDA/run_nvcc.cmake" : {
      "ObjectId" : "6fc2439ad8d47846e27dfac976e2d078c7887562",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  James Bigler, NVIDIA Corp (nvidia.com - jbigler)\n\n#\n\n#  Copyright (c) 2008 - 2009 NVIDIA Corporation.  All rights reserved.\n\n#\n\n#  This code is licensed under the MIT License.  See the FindCUDA.cmake script\n\n#  for the text of the license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MIT License\n\n#\n\n# License for the specific language governing rights and limitations under\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and associated documentation files (the \"Software\"),\n\n# to deal in the Software without restriction, including without limitation\n\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n# and/or sell copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##########################################################################\n\n# This file runs the nvcc commands to produce the desired output file along with\n\n# the dependency file needed by CMake to compute dependencies.  In addition the\n\n# file checks the output of each command and if the command fails it deletes the\n\n# output files.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Input variables\n\n#\n\n# verbose:BOOL=<>          OFF: Be as quiet as possible (default)\n\n#                          ON : Describe each step\n\n#\n\n# build_configuration:STRING=<> Typically one of Debug, MinSizeRel, Release, or\n\n#                               RelWithDebInfo, but it should match one of the\n\n#                               entries in CUDA_HOST_FLAGS. This is the build\n\n#                               configuration used when compiling the code.  If\n\n#                               blank or unspecified Debug is assumed as this is\n\n#                               what CMake does.\n\n#\n\n# generated_file:STRING=<> File to generate.  This argument must be passed in.\n\n#\n\n# generated_cubin_file:STRING=<> File to generate.  This argument must be passed\n\n#                                                   in if build_cubin is true.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set these up as variables to make reading the generated file easier\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# path\n",
        "Line" : 60,
        "CharPositionInLine" : 37
      },
      "6" : {
        "Text" : "# path\n",
        "Line" : 61,
        "CharPositionInLine" : 33
      },
      "7" : {
        "Text" : "# path\n",
        "Line" : 62,
        "CharPositionInLine" : 71
      },
      "8" : {
        "Text" : "# path\n",
        "Line" : 63,
        "CharPositionInLine" : 53
      },
      "9" : {
        "Text" : "# path\n",
        "Line" : 64,
        "CharPositionInLine" : 41
      },
      "10" : {
        "Text" : "# path\n",
        "Line" : 65,
        "CharPositionInLine" : 43
      },
      "11" : {
        "Text" : "# bool\n",
        "Line" : 66,
        "CharPositionInLine" : 31
      },
      "12" : {
        "Text" : "# path\n",
        "Line" : 67,
        "CharPositionInLine" : 47
      },
      "13" : {
        "Text" : "# We won't actually use these variables for now, but we need to set this, in\n\n# order to force this file to be run again if it changes.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# path\n",
        "Line" : 70,
        "CharPositionInLine" : 49
      },
      "15" : {
        "Text" : "# path\n",
        "Line" : 71,
        "CharPositionInLine" : 48
      },
      "16" : {
        "Text" : "# path\n",
        "Line" : 72,
        "CharPositionInLine" : 60
      },
      "17" : {
        "Text" : "# path\n",
        "Line" : 74,
        "CharPositionInLine" : 51
      },
      "18" : {
        "Text" : "# list\n",
        "Line" : 75,
        "CharPositionInLine" : 72
      },
      "19" : {
        "Text" : "# list\n",
        "Line" : 77,
        "CharPositionInLine" : 29
      },
      "20" : {
        "Text" : "# list (needs to be in quotes to handle spaces properly).\n",
        "Line" : 78,
        "CharPositionInLine" : 55
      },
      "21" : {
        "Text" : "# list (needs to be in lua quotes see #16510 ).\n",
        "Line" : 79,
        "CharPositionInLine" : 75
      },
      "22" : {
        "Text" : "# string\n",
        "Line" : 80,
        "CharPositionInLine" : 33
      },
      "23" : {
        "Text" : "# list\n",
        "Line" : 81,
        "CharPositionInLine" : 45
      },
      "24" : {
        "Text" : "# Clean up list of include directories and add -I flags\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Extra quotes are added around each flag to help nvcc parse out flags with spaces.\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Clean up list of compile definitions, add -D flags, and append to nvcc_flags\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# This is the list of host compilation flags.  It C or CXX should already have\n\n# been chosen by FindCUDA.cmake.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Take the compiler flags and package them up to be sent to the compiler via -Xcompiler\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# If we weren't given a build_configuration, use Debug.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#message(\"CUDA_NVCC_HOST_COMPILER_FLAGS = ${CUDA_NVCC_HOST_COMPILER_FLAGS}\")\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Extra quotes are added around each flag to help nvcc parse out flags with spaces.\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "#message(\"nvcc_host_compiler_flags = \\\"${nvcc_host_compiler_flags}\\\"\")\n\n# Add the build specific configuration flags\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Any -ccbin existing in CUDA_NVCC_FLAGS gets highest priority\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# cuda_execute_process - Executes a command with optional command echo and status message.\n\n#\n\n#   status  - Status message to print if verbose is true\n\n#   command - COMMAND argument from the usual execute_process argument structure\n\n#   ARGN    - Remaining arguments are the command with arguments\n\n#\n\n#   CUDA_result - return value from running the command\n\n#\n\n# Make this a macro instead of a function, so that things like RESULT_VARIABLE\n\n# and other return variables are present after executing the process.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Now we need to build up our command string.  We are accounting for quotes\n\n# and spaces, anything else is left up to the user to fix if they want to\n\n# copy and paste a runnable command line.\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# If there are quotes, excape them, so they come through.\n",
        "Line" : 157,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "# Args with spaces need quotes around them to get them to be parsed as a single argument.\n",
        "Line" : 159,
        "CharPositionInLine" : 6
      },
      "38" : {
        "Text" : "# Echo the command\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# Run the command\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Delete the target file\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# For CUDA 2.3 and below, -G -M doesn't work, so remove the -G flag\n\n# for dependency generation and hope for the best.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Note that this will remove all occurrences of -G.\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# nvcc doesn't define __CUDACC__ for some reason when generating dependency files.  This\n\n# can cause incorrect dependencies when #including files based on this macro which is\n\n# defined in the generating passes of nvcc invocation.  We will go ahead and manually\n\n# define this for now until a future version fixes this bug.\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Generate the dependency file\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Generate the cmake readable dependency file to a temp file.  Don't put the\n\n# quotes just around the filenames for the input_file and output_file variables.\n\n# CMake will pass the quotes through and not be able to find the file.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Copy the file if it is different\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Delete the temporary file\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Generate the code\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Since nvcc can sometimes leave half done files make sure that we delete the output file.\n",
        "Line" : 266,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# Cubin resource report commands.\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Run with -cubin to produce resource usage report.\n",
        "Line" : 280,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# Execute the parser script.\n",
        "Line" : 295,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 53
    },
    "deps/src/cmake-3.13.4/Modules/FindCUDA/select_compute_arch.cmake" : {
      "ObjectId" : "7ddb7096988e04d55fd92fffeb24debb5f9b53e5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Synopsis:\n\n#   CUDA_SELECT_NVCC_ARCH_FLAGS(out_variable [target_CUDA_architectures])\n\n#   -- Selects GPU arch flags for nvcc based on target_CUDA_architectures\n\n#      target_CUDA_architectures : Auto | Common | All | LIST(ARCH_AND_PTX ...)\n\n#       - \"Auto\" detects local machine GPU compute arch at runtime.\n\n#       - \"Common\" and \"All\" cover common and entire subsets of architectures\n\n#      ARCH_AND_PTX : NAME | NUM.NUM | NUM.NUM(NUM.NUM) | NUM.NUM+PTX\n\n#      NAME: Fermi Kepler Maxwell Kepler+Tegra Kepler+Tesla Maxwell+Tegra Pascal Volta Turing\n\n#      NUM: Any number. Only those pairs are currently accepted by NVCC though:\n\n#            2.0 2.1 3.0 3.2 3.5 3.7 5.0 5.2 5.3 6.0 6.2 7.0 7.2 7.5\n\n#      Returns LIST of flags to be added to CUDA_NVCC_FLAGS in ${out_variable}\n\n#      Additionally, sets ${out_variable}_readable to the resulting numeric list\n\n#      Example:\n\n#       CUDA_SELECT_NVCC_ARCH_FLAGS(ARCH_FLAGS 3.0 3.5+PTX 5.2(5.0) Maxwell)\n\n#        LIST(APPEND CUDA_NVCC_FLAGS ${ARCH_FLAGS})\n\n#\n\n#      More info on CUDA architectures: https://en.wikipedia.org/wiki/CUDA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CUDA as a language\n",
        "Line" : 20,
        "CharPositionInLine" : 31
      },
      "2" : {
        "Text" : "# See: https://docs.nvidia.com/cuda/cuda-compiler-driver-nvcc/index.html#gpu-feature-list\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This list will be used for CUDA_ARCH_NAME = All option\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This list will be used for CUDA_ARCH_NAME = Common option (enabled by default)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This list is used to filter CUDA archs when autodetecting\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "################################################################################################\n\n# A function for automatic detection of GPUs installed  (if autodetection is enabled)\n\n# Usage:\n\n#   CUDA_DETECT_INSTALLED_GPUS(OUT_VARIABLE)\n\n#\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# CUDA as a language\n",
        "Line" : 90,
        "CharPositionInLine" : 35
      },
      "8" : {
        "Text" : "# CUDA as a language\n",
        "Line" : 113,
        "CharPositionInLine" : 35
      },
      "9" : {
        "Text" : "# Filter unrelated content out of the output.\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Filter based on CUDA version supported archs\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "################################################################################################\n\n# Function for selecting GPU arch flags for nvcc based on CUDA architectures from parameter list\n\n# Usage:\n\n#   SELECT_NVCC_ARCH_FLAGS(out_variable [list of CUDA compute archs])\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Now process the list and look for names\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Check to see if we are compiling PTX\n",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Look for it in our list of known architectures\n",
        "Line" : 193,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# remove dots and convert to lists\n",
        "Line" : 233,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Tell NVCC to add binaries for the specified GPUs\n",
        "Line" : 249,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# User explicitly specified ARCH for the concrete CODE\n",
        "Line" : 252,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# User didn't explicitly specify ARCH for the concrete CODE, we assume ARCH=CODE\n",
        "Line" : 256,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Tell NVCC to add PTX intermediate code for the specified architectures\n",
        "Line" : 262,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 20
    },
    "deps/src/cmake-3.13.4/Modules/FindCURL.cmake" : {
      "ObjectId" : "60ddf7b8f0bcb4c51a0e8f5ccb97aa110fbb4c29",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindCURL\n\n# --------\n\n#\n\n# Find the native CURL headers and libraries.\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines :prop_tgt:`IMPORTED` target ``CURL::libcurl``, if\n\n# curl has been found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ``CURL_FOUND``\n\n#   True if curl found.\n\n#\n\n# ``CURL_INCLUDE_DIRS``\n\n#   where to find curl/curl.h, etc.\n\n#\n\n# ``CURL_LIBRARIES``\n\n#   List of libraries when using curl.\n\n#\n\n# ``CURL_VERSION_STRING``\n\n#   The version of curl found.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for the library (sorted from most current/relevant entry to least).\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Windows MSVC prebuilts:\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Windows older \"Win32 - MSVC\" prebuilts (libcurl.lib, e.g. libcurl-7.15.5-win32-msvc.zip):\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Windows MSVC CMake builds in debug configuration on vcpkg:\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/FindCVS.cmake" : {
      "ObjectId" : "d59dfb097041a10bcb0fae2e639a58e58a5b960d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindCVS\n\n# -------\n\n#\n\n#\n\n#\n\n# The module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#    CVS_EXECUTABLE - path to cvs command line client\n\n#    CVS_FOUND - true if the command line client was found\n\n#\n\n# Example usage:\n\n#\n\n# ::\n\n#\n\n#    find_package(CVS)\n\n#    if(CVS_FOUND)\n\n#      message(\"CVS found: ${CVS_EXECUTABLE}\")\n\n#    endif()\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CVSNT\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# WinCVS (in case CVSNT was installed in the same directory)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TortoiseCVS (in case CVSNT was installed in the same directory)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set CVS_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/FindCoin3D.cmake" : {
      "ObjectId" : "f11903d6a3b6e897bfc0b77ab2204eb35b5228ff",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindCoin3D\n\n# ----------\n\n#\n\n# Find Coin3D (Open Inventor)\n\n#\n\n# Coin3D is an implementation of the Open Inventor API.  It provides\n\n# data structures and algorithms for 3D visualization.\n\n#\n\n# This module defines the following variables\n\n#\n\n# ::\n\n#\n\n#   COIN3D_FOUND         - system has Coin3D - Open Inventor\n\n#   COIN3D_INCLUDE_DIRS  - where the Inventor include directory can be found\n\n#   COIN3D_LIBRARIES     - Link to this to use Coin3D\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindCups.cmake" : {
      "ObjectId" : "13d3b98d6baff72a70eaaa9d9bff3b0b95548331",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindCups\n\n# --------\n\n#\n\n# Try to find the Cups printing system\n\n#\n\n# Once done this will define\n\n#\n\n# ::\n\n#\n\n#   CUPS_FOUND - system has Cups\n\n#   CUPS_INCLUDE_DIR - the Cups include directory\n\n#   CUPS_LIBRARIES - Libraries needed to use Cups\n\n#   CUPS_VERSION_STRING - version of Cups found (since CMake 2.8.8)\n\n#   Set CUPS_REQUIRE_IPP_DELETE_ATTRIBUTE to TRUE if you need a version which\n\n#   features this function (i.e. at least 1.1.19)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ippDeleteAttribute is new in cups-1.1.19 (and used by kdeprint)\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindCurses.cmake" : {
      "ObjectId" : "4f59d2c1e8cdd6406f7f41dbdf5390bcd7402228",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindCurses\n\n# ----------\n\n#\n\n# Find the curses or ncurses include file and library.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ``CURSES_FOUND``\n\n#   True if Curses is found.\n\n# ``CURSES_INCLUDE_DIRS``\n\n#   The include directories needed to use Curses.\n\n# ``CURSES_LIBRARIES``\n\n#   The libraries needed to use Curses.\n\n# ``CURSES_HAVE_CURSES_H``\n\n#   True if curses.h is available.\n\n# ``CURSES_HAVE_NCURSES_H``\n\n#   True if ncurses.h is available.\n\n# ``CURSES_HAVE_NCURSES_NCURSES_H``\n\n#   True if ``ncurses/ncurses.h`` is available.\n\n# ``CURSES_HAVE_NCURSES_CURSES_H``\n\n#   True if ``ncurses/curses.h`` is available.\n\n#\n\n# Set ``CURSES_NEED_NCURSES`` to ``TRUE`` before the\n\n# ``find_package(Curses)`` call if NCurses functionality is required.\n\n# Set ``CURSES_NEED_WIDE`` to ``TRUE`` before the\n\n# ``find_package(Curses)`` call if unicode functionality is required.\n\n#\n\n# Backward Compatibility\n\n# ^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# The following variable are provided for backward compatibility:\n\n#\n\n# ``CURSES_INCLUDE_DIR``\n\n#   Path to Curses include.  Use ``CURSES_INCLUDE_DIRS`` instead.\n\n# ``CURSES_LIBRARY``\n\n#   Path to Curses library.  Use ``CURSES_LIBRARIES`` instead.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# we don't know anything about cursesw, so only ncurses\n\n# may be ncursesw\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Also, if we are searchig fo wide curses - we are actually searching\n\n# for ncurses, we don't know about any other unicode version.\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# http://cygwin.com/ml/cygwin-announce/2010-01/msg00002.html\n\n# cygwin ncurses stopped providing curses.h symlinks see above\n\n# message.  Cygwin is an ncurses package, so force ncurses on\n\n# cygwin if the curses.h is missing\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Not sure the logic is correct here.\n\n# If NCurses is required, use the function wsyncup() to check if the library\n\n# has NCurses functionality (at least this is where it breaks on NetBSD).\n\n# If wsyncup is in curses, use this one.\n\n# If not, try to find ncurses and check if this has the symbol.\n\n# Once the ncurses library is found, search the ncurses.h header first, but\n\n# some web pages also say that even with ncurses there is not always a ncurses.h:\n\n# http://osdir.com/ml/gnome.apps.mc.devel/2002-06/msg00029.html\n\n# So at first try ncurses.h, if not found, try to find curses.h under the same\n\n# prefix as the library was found, if still not found, try curses.h with the\n\n# default search paths.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Use CURSES_NCURSES_INCLUDE_PATH if set, for compatibility.\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Previous versions of FindCurses provided these values.\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#We can't find anything with CURSES_NEED_WIDE because we know\n\n#only about ncursesw unicode curses version\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Previous versions of FindCurses provided these values.\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Report whether each possible header name exists in the include directory.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#ncursesw can't be found for this paths\n",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Previous versions of FindCurses provided these values.\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Need to provide the *_LIBRARIES\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Provide the *_INCLUDE_DIRS result.\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# compatibility\n",
        "Line" : 242,
        "CharPositionInLine" : 47
      },
      "CommentCount" : 16
    },
    "deps/src/cmake-3.13.4/Modules/FindCxxTest.cmake" : {
      "ObjectId" : "25454fd9e98d3069c9dbd6200238080f5fa2c0bb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindCxxTest\n\n# -----------\n\n#\n\n# Find CxxTest\n\n#\n\n# Find the CxxTest suite and declare a helper macro for creating unit\n\n# tests and integrating them with CTest.  For more details on CxxTest\n\n# see http://cxxtest.tigris.org\n\n#\n\n# INPUT Variables\n\n#\n\n# ::\n\n#\n\n#    CXXTEST_USE_PYTHON [deprecated since 1.3]\n\n#        Only used in the case both Python & Perl\n\n#        are detected on the system to control\n\n#        which CxxTest code generator is used.\n\n#        Valid only for CxxTest version 3.\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        NOTE: In older versions of this Find Module,\n\n#        this variable controlled if the Python test\n\n#        generator was used instead of the Perl one,\n\n#        regardless of which scripting language the\n\n#        user had installed.\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    CXXTEST_TESTGEN_ARGS (since CMake 2.8.3)\n\n#        Specify a list of options to pass to the CxxTest code\n\n#        generator.  If not defined, --error-printer is\n\n#        passed.\n\n#\n\n#\n\n#\n\n# OUTPUT Variables\n\n#\n\n# ::\n\n#\n\n#    CXXTEST_FOUND\n\n#        True if the CxxTest framework was found\n\n#    CXXTEST_INCLUDE_DIRS\n\n#        Where to find the CxxTest include directory\n\n#    CXXTEST_PERL_TESTGEN_EXECUTABLE\n\n#        The perl-based test generator\n\n#    CXXTEST_PYTHON_TESTGEN_EXECUTABLE\n\n#        The python-based test generator\n\n#    CXXTEST_TESTGEN_EXECUTABLE (since CMake 2.8.3)\n\n#        The test generator that is actually used (chosen using user preferences\n\n#        and interpreters found in the system)\n\n#    CXXTEST_TESTGEN_INTERPRETER (since CMake 2.8.3)\n\n#        The full path to the Perl or Python executable on the system, on\n\n#        platforms where the script cannot be executed using its shebang line.\n\n#\n\n#\n\n#\n\n# MACROS for optional use by CMake users:\n\n#\n\n# ::\n\n#\n\n#     CXXTEST_ADD_TEST(<test_name> <gen_source_file> <input_files_to_testgen...>)\n\n#        Creates a CxxTest runner and adds it to the CTest testing suite\n\n#        Parameters:\n\n#            test_name               The name of the test\n\n#            gen_source_file         The generated source filename to be\n\n#                                    generated by CxxTest\n\n#            input_files_to_testgen  The list of header files containing the\n\n#                                    CxxTest::TestSuite's to be included in\n\n#                                    this runner\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        #==============\n\n#        Example Usage:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#            find_package(CxxTest)\n\n#            if(CXXTEST_FOUND)\n\n#                include_directories(${CXXTEST_INCLUDE_DIR})\n\n#                enable_testing()\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#                CXXTEST_ADD_TEST(unittest_foo foo_test.cc\n\n#                                  ${CMAKE_CURRENT_SOURCE_DIR}/foo_test.h)\n\n#                target_link_libraries(unittest_foo foo) # as needed\n\n#            endif()\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#               This will (if CxxTest is found):\n\n#               1. Invoke the testgen executable to autogenerate foo_test.cc in the\n\n#                  binary tree from \"foo_test.h\" in the current source directory.\n\n#               2. Create an executable and test called unittest_foo.\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#       #=============\n\n#       Example foo_test.h:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#           #include <cxxtest/TestSuite.h>\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#           class MyTestSuite : public CxxTest::TestSuite\n\n#           {\n\n#           public:\n\n#              void testAddition( void )\n\n#              {\n\n#                 TS_ASSERT( 1 + 1 > 1 );\n\n#                 TS_ASSERT_EQUALS( 1 + 1, 2 );\n\n#              }\n\n#           };\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Version 1.4 (11/18/10) (CMake 2.8.4)\n\n#     Issue 11384: Added support to the CXX_ADD_TEST macro so header\n\n#                  files (containing the tests themselves) show up in\n\n#                  Visual Studio and other IDEs.\n\n#\n\n# Version 1.3 (8/19/10) (CMake 2.8.3)\n\n#     Included patch by Simone Rossetto to check if either Python or Perl\n\n#     are present in the system.  Whichever interpreter that is detected\n\n#     is now used to run the test generator program.  If both interpreters\n\n#     are detected, the CXXTEST_USE_PYTHON variable is obeyed.\n\n#\n\n#     Also added support for CXXTEST_TESTGEN_ARGS, for manually specifying\n\n#     options to the CxxTest code generator.\n\n# Version 1.2 (3/2/08)\n\n#     Included patch from Tyler Roscoe to have the perl & python binaries\n\n#     detected based on CXXTEST_INCLUDE_DIR\n\n# Version 1.1 (2/9/08)\n\n#     Clarified example to illustrate need to call target_link_libraries()\n\n#     Changed commands to lowercase\n\n#     Added licensing info\n\n# Version 1.0 (1/8/08)\n\n#     Fixed CXXTEST_INCLUDE_DIRS so it will work properly\n\n#     Eliminated superfluous CXXTEST_FOUND assignment\n\n#     Cleaned up and added more documentation\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=============================================================\n\n# CXXTEST_ADD_TEST (public macro)\n\n#=============================================================\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#=============================================================\n\n# main()\n\n#=============================================================\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/FindCygwin.cmake" : {
      "ObjectId" : "092a3bd498f7afb73e2081f7246b82b39109b14f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindCygwin\n\n# ----------\n\n#\n\n# this module looks for Cygwin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindDCMTK.cmake" : {
      "ObjectId" : "39c1a5b3491cec71479c01177cc4ebf0d8178d54",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindDCMTK\n\n# ---------\n\n#\n\n# Find DCMTK libraries and applications\n\n#\n\n# The module defines the following variables::\n\n#\n\n#  DCMTK_INCLUDE_DIRS  - Directories to include to use DCMTK\n\n#  DCMTK_LIBRARIES     - Files to link against to use DCMTK\n\n#  DCMTK_FOUND         - If false, don't try to use DCMTK\n\n#  DCMTK_DIR           - (optional) Source directory for DCMTK\n\n#\n\n# Compatibility\n\n# ^^^^^^^^^^^^^\n\n#\n\n# This module is able to find a version of DCMTK that does or does not export\n\n# a *DCMTKConfig.cmake* file. It applies a two step process:\n\n#\n\n# * Step 1:  Attempt to find DCMTK version providing a *DCMTKConfig.cmake* file.\n\n# * Step 2:  If step 1 failed, rely on *FindDCMTK.cmake* to set `DCMTK_*` variables details below.\n\n#\n\n#\n\n# `Recent DCMTK\n\n# <http://git.dcmtk.org/web?p=dcmtk.git;a=commit;h=662ae187c493c6b9a73dd5e3875372cebd0c11fe>`_\n\n# provides a *DCMTKConfig.cmake* :manual:`package configuration file\n\n# <cmake-packages(7)>`. To exclusively use the package configuration file\n\n# (recommended when possible), pass the `NO_MODULE` option to\n\n# :command:`find_package`. For example, `find_package(DCMTK NO_MODULE)`.\n\n# This requires official DCMTK snapshot *3.6.1_20140617* or newer.\n\n#\n\n#\n\n# Until all clients update to the more recent DCMTK, build systems will need\n\n# to support different versions of DCMTK.\n\n#\n\n# On any given system, the following combinations of DCMTK versions could be\n\n# considered:\n\n#\n\n# +--------+---------------------+-----------------------+-------------------+\n\n# |        |   SYSTEM DCMTK      |      LOCAL DCMTK      |     Supported ?   |\n\n# +--------+---------------------+-----------------------+-------------------+\n\n# | Case A |   NA                |      [ ] DCMTKConfig  |         YES       |\n\n# +--------+---------------------+-----------------------+-------------------+\n\n# | Case B |   NA                |      [X] DCMTKConfig  |         YES       |\n\n# +--------+---------------------+-----------------------+-------------------+\n\n# | Case C |   [ ] DCMTKConfig   |      NA               |         YES       |\n\n# +--------+---------------------+-----------------------+-------------------+\n\n# | Case D |   [X] DCMTKConfig   |      NA               |         YES       |\n\n# +--------+---------------------+-----------------------+-------------------+\n\n# | Case E |   [ ] DCMTKConfig   |      [ ] DCMTKConfig  |         YES (*)   |\n\n# +--------+---------------------+-----------------------+-------------------+\n\n# | Case F |   [X] DCMTKConfig   |      [ ] DCMTKConfig  |         NO        |\n\n# +--------+---------------------+-----------------------+-------------------+\n\n# | Case G |   [ ] DCMTKConfig   |      [X] DCMTKConfig  |         YES       |\n\n# +--------+---------------------+-----------------------+-------------------+\n\n# | Case H |   [X] DCMTKConfig   |      [X] DCMTKConfig  |         YES       |\n\n# +--------+---------------------+-----------------------+-------------------+\n\n#\n\n#  (*) See Troubleshooting section.\n\n#\n\n# Legend:\n\n#\n\n#   NA ...............: Means that no System or Local DCMTK is available\n\n#\n\n#   [ ] DCMTKConfig ..: Means that the version of DCMTK does NOT export a DCMTKConfig.cmake file.\n\n#\n\n#   [X] DCMTKConfig ..: Means that the version of DCMTK exports a DCMTKConfig.cmake file.\n\n#\n\n#\n\n# Troubleshooting\n\n# ^^^^^^^^^^^^^^^\n\n#\n\n# What to do if my project finds a different version of DCMTK?\n\n#\n\n# Remove DCMTK entry from the CMake cache per :command:`find_package`\n\n# documentation.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Written for VXL by Amitha Perera.\n\n# Upgraded for GDCM by Mathieu Malaterre.\n\n# Modified for EasyViz by Thomas Sondergaard.\n\n#\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Ensure that DCMTK_DIR is set to a reasonable default value\n\n# so that DCMTK libraries can be found on a standard Unix distribution.\n\n# It also overwrite the value of DCMTK_DIR after this one has been\n\n# set by a successful discovery of DCMTK by the unpatched FindDCMTK.cmake module\n\n# distributed with CMake (as of 0167cea)\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Step1: Attempt to find a version of DCMTK providing a DCMTKConfig.cmake file.\n\n#\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Restore the value reset by the previous call to 'find_package(DCMTK QUIET NO_MODULE)'\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Step2: Attempt to find a version of DCMTK that does NOT provide a DCMTKConfig.cmake file.\n\n#\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# prefer DCMTK_DIR over default system paths like /usr/lib\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# this is given to FIND_LIBRARY or FIND_PATH\n",
        "Line" : 135,
        "CharPositionInLine" : 63
      },
      "9" : {
        "Text" : "# Find all libraries, store debug and release separately\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Find Release libraries\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Find Debug libraries\n",
        "Line" : 170,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Add libraries to variable according to build type\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Hack - Not having a DCMTKConfig.cmake file to read the settings from, we will attempt to\n\n# find the library in all cases.\n\n# Ideally, pthread library should be discovered only if DCMTK_WITH_THREADS is enabled.\n",
        "Line" : 199,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#\n\n# SPECIFIC CASE FOR DCMTK BUILD DIR as DCMTK_DIR\n\n# (as opposed to a DCMTK install dir)\n\n# Have to find the source directory.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# add the 'include' path so eg\n\n#include \"dcmtk/dcmimgle/dcmimage.h\"\n\n# works\n",
        "Line" : 274,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Compatibility: This variable is deprecated\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Workaround bug in packaging of DCMTK 3.6.0 on Debian.\n\n# See http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=637687\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "deps/src/cmake-3.13.4/Modules/FindDart.cmake" : {
      "ObjectId" : "acd4ef62d4102138eaa0f8a791cc9cbfcdfd7748",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindDart\n\n# --------\n\n#\n\n# Find DART\n\n#\n\n# This module looks for the dart testing software and sets DART_ROOT to\n\n# point to where it found it.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindDevIL.cmake" : {
      "ObjectId" : "e904a30fcc3f553b7569deaf7af5f89988b761c6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindDevIL\n\n# ---------\n\n#\n\n#\n\n#\n\n# This module locates the developer's image library.\n\n# http://openil.sourceforge.net/\n\n#\n\n# This module sets:\n\n#\n\n# ::\n\n#\n\n#    IL_LIBRARIES -   the name of the IL library. These include the full path to\n\n#                     the core DevIL library. This one has to be linked into the\n\n#                     application.\n\n#    ILU_LIBRARIES -  the name of the ILU library. Again, the full path. This\n\n#                     library is for filters and effects, not actual loading. It\n\n#                     doesn't have to be linked if the functionality it provides\n\n#                     is not used.\n\n#    ILUT_LIBRARIES - the name of the ILUT library. Full path. This part of the\n\n#                     library interfaces with OpenGL. It is not strictly needed\n\n#                     in applications.\n\n#    IL_INCLUDE_DIR - where to find the il.h, ilu.h and ilut.h files.\n\n#    DevIL_FOUND    - this is set to TRUE if all the above variables were set.\n\n#                     This will be set to false if ILU or ILUT are not found,\n\n#                     even if they are not needed. In most systems, if one\n\n#                     library is found all the others are as well. That's the\n\n#                     way the DevIL developers release it.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: Add version support.\n\n# Tested under Linux and Windows (MSVC)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#message(\"IL_INCLUDE_DIR is ${IL_INCLUDE_DIR}\")\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#message(\"IL_LIBRARIES is ${IL_LIBRARIES}\")\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#message(\"ILUT_LIBRARIES is ${ILUT_LIBRARIES}\")\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#message(\"ILU_LIBRARIES is ${ILU_LIBRARIES}\")\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# provide legacy variable for compatibility\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Modules/FindDoxygen.cmake" : {
      "ObjectId" : "cb4738bab41ee9ef48691f55a12706e9d2cd6ef6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindDoxygen\n-----------\n\nDoxygen is a documentation generation tool (see http://www.doxygen.org).\nThis module looks for Doxygen and some optional tools it supports. These\ntools are enabled as components in the :command:`find_package` command:\n\n``dot``\n  `Graphviz <http://graphviz.org>`_ ``dot`` utility used to render various\n  graphs.\n``mscgen``\n  `Message Chart Generator <http://www.mcternan.me.uk/mscgen/>`_ utility used\n  by Doxygen's ``\\msc`` and ``\\mscfile`` commands.\n``dia``\n  `Dia <https://wiki.gnome.org/Apps/Dia>`_ the diagram editor used by Doxygen's\n  ``\\diafile`` command.\n\nExamples:\n\n.. code-block:: cmake\n\n  # Require dot, treat the other components as optional\n  find_package(Doxygen\n               REQUIRED dot\n               OPTIONAL_COMPONENTS mscgen dia)\n\nThe following variables are defined by this module:\n\n.. variable:: DOXYGEN_FOUND\n\n  True if the ``doxygen`` executable was found.\n\n.. variable:: DOXYGEN_VERSION\n\n  The version reported by ``doxygen --version``.\n\nThe module defines ``IMPORTED`` targets for Doxygen and each component found.\nThese can be used as part of custom commands, etc. and should be preferred over\nold-style (and now deprecated) variables like ``DOXYGEN_EXECUTABLE``. The\nfollowing import targets are defined if their corresponding executable could be\nfound (the component import targets will only be defined if that component was\nrequested):\n\n::\n\n  Doxygen::doxygen\n  Doxygen::dot\n  Doxygen::mscgen\n  Doxygen::dia\n\n\nFunctions\n^^^^^^^^^\n\n.. command:: doxygen_add_docs\n\n  This function is intended as a convenience for adding a target for generating\n  documentation with Doxygen. It aims to provide sensible defaults so that\n  projects can generally just provide the input files and directories and that\n  will be sufficient to give sensible results. The function supports the\n  ability to customize the Doxygen configuration used to build the\n  documentation.\n\n  ::\n\n    doxygen_add_docs(targetName\n        [filesOrDirs...]\n        [ALL]\n        [WORKING_DIRECTORY dir]\n        [COMMENT comment])\n\n  The function constructs a ``Doxyfile`` and defines a custom target that runs\n  Doxygen on that generated file. The listed files and directories are used as\n  the ``INPUT`` of the generated ``Doxyfile`` and they can contain wildcards.\n  Any files that are listed explicitly will also be added as ``SOURCES`` of the\n  custom target so they will show up in an IDE project's source list.\n\n  So that relative input paths work as expected, by default the working\n  directory of the Doxygen command will be the current source directory (i.e.\n  :variable:`CMAKE_CURRENT_SOURCE_DIR`). This can be overridden with the\n  ``WORKING_DIRECTORY`` option to change the directory used as the relative\n  base point. Note also that Doxygen's default behavior is to strip the working\n  directory from relative paths in the generated documentation (see the\n  ``STRIP_FROM_PATH`` `Doxygen config option\n  <http://www.doxygen.org/manual/config.html>`_ for details).\n\n  If provided, the optional ``comment`` will be passed as the ``COMMENT`` for\n  the :command:`add_custom_target` command used to create the custom target\n  internally.\n\n  If ALL is set, the target will be added to the default build target.\n\n  The contents of the generated ``Doxyfile`` can be customized by setting CMake\n  variables before calling ``doxygen_add_docs()``. Any variable with a name of\n  the form ``DOXYGEN_<tag>`` will have its value substituted for the\n  corresponding ``<tag>`` configuration option in the ``Doxyfile``. See the\n  `Doxygen documentation <http://www.doxygen.org/manual/config.html>`_ for the\n  full list of supported configuration options.\n\n  Some of Doxygen's defaults are overridden to provide more appropriate\n  behavior for a CMake project. Each of the following will be explicitly set\n  unless the variable already has a value before ``doxygen_add_docs()`` is\n  called (with some exceptions noted):\n\n  .. variable:: DOXYGEN_HAVE_DOT\n\n    Set to ``YES`` if the ``dot`` component was requested and it was found,\n    ``NO`` otherwise. Any existing value of ``DOXYGEN_HAVE_DOT`` is ignored.\n\n  .. variable:: DOXYGEN_DOT_MULTI_TARGETS\n\n    Set to ``YES`` by this module (note that this requires a ``dot`` version\n    newer than 1.8.10). This option is only meaningful if ``DOXYGEN_HAVE_DOT``\n    is also set to ``YES``.\n\n  .. variable:: DOXYGEN_GENERATE_LATEX\n\n    Set to ``NO`` by this module.\n\n  .. variable:: DOXYGEN_WARN_FORMAT\n\n    For Visual Studio based generators, this is set to the form recognized by\n    the Visual Studio IDE: ``$file($line) : $text``. For all other generators,\n    Doxygen's default value is not overridden.\n\n  .. variable:: DOXYGEN_PROJECT_NAME\n\n    Populated with the name of the current project (i.e.\n    :variable:`PROJECT_NAME`).\n\n  .. variable:: DOXYGEN_PROJECT_NUMBER\n\n    Populated with the version of the current project (i.e.\n    :variable:`PROJECT_VERSION`).\n\n  .. variable:: DOXYGEN_PROJECT_BRIEF\n\n    Populated with the description of the current project (i.e.\n    :variable:`PROJECT_DESCRIPTION`).\n\n  .. variable:: DOXYGEN_INPUT\n\n    Projects should not set this variable. It will be populated with the set of\n    files and directories passed to ``doxygen_add_docs()``, thereby providing\n    consistent behavior with the other built-in commands like\n    :command:`add_executable`, :command:`add_library` and\n    :command:`add_custom_target`. If a variable named ``DOXYGEN_INPUT`` is set\n    by the project, it will be ignored and a warning will be issued.\n\n  .. variable:: DOXYGEN_RECURSIVE\n\n    Set to ``YES`` by this module.\n\n  .. variable:: DOXYGEN_EXCLUDE_PATTERNS\n\n    If the set of inputs includes directories, this variable will specify\n    patterns used to exclude files from them. The following patterns are added\n    by ``doxygen_add_docs()`` to ensure CMake-specific files and directories\n    are not included in the input. If the project sets\n    ``DOXYGEN_EXCLUDE_PATTERNS``, those contents are merged with these\n    additional patterns rather than replacing them:\n\n    ::\n\n      */.git/*\n      */.svn/*\n      */.hg/*\n      */CMakeFiles/*\n      */_CPack_Packages/*\n      DartConfiguration.tcl\n      CMakeLists.txt\n      CMakeCache.txt\n\n  .. variable:: DOXYGEN_OUTPUT_DIRECTORY\n\n    Set to :variable:`CMAKE_CURRENT_BINARY_DIR` by this module. Note that if\n    the project provides its own value for this and it is a relative path, it\n    will be converted to an absolute path relative to the current binary\n    directory. This is necessary because doxygen will normally be run from a\n    directory within the source tree so that relative source paths work as\n    expected. If this directory does not exist, it will be recursively created\n    prior to executing the doxygen commands.\n\nTo change any of these defaults or override any other Doxygen config option,\nset relevant variables before calling ``doxygen_add_docs()``. For example:\n\n  .. code-block:: cmake\n\n    set(DOXYGEN_GENERATE_HTML NO)\n    set(DOXYGEN_GENERATE_MAN YES)\n\n    doxygen_add_docs(\n        doxygen\n        ${PROJECT_SOURCE_DIR}\n        COMMENT \"Generate man pages\"\n    )\n\nA number of Doxygen config options accept lists of values, but Doxygen requires\nthem to be separated by whitespace. CMake variables hold lists as a string with\nitems separated by semi-colons, so a conversion needs to be performed. The\n``doxygen_add_docs()`` command specifically checks the following Doxygen config\noptions and will convert their associated CMake variable's contents into the\nrequired form if set.\n\n::\n\n  ABBREVIATE_BRIEF\n  ALIASES\n  CITE_BIB_FILES\n  DIAFILE_DIRS\n  DOTFILE_DIRS\n  DOT_FONTPATH\n  ENABLED_SECTIONS\n  EXAMPLE_PATH\n  EXAMPLE_PATTERNS\n  EXCLUDE\n  EXCLUDE_PATTERNS\n  EXCLUDE_SYMBOLS\n  EXPAND_AS_DEFINED\n  EXTENSION_MAPPING\n  EXTRA_PACKAGES\n  EXTRA_SEARCH_MAPPINGS\n  FILE_PATTERNS\n  FILTER_PATTERNS\n  FILTER_SOURCE_PATTERNS\n  HTML_EXTRA_FILES\n  HTML_EXTRA_STYLESHEET\n  IGNORE_PREFIX\n  IMAGE_PATH\n  INCLUDE_FILE_PATTERNS\n  INCLUDE_PATH\n  INPUT\n  LATEX_EXTRA_FILES\n  LATEX_EXTRA_STYLESHEET\n  MATHJAX_EXTENSIONS\n  MSCFILE_DIRS\n  PLANTUML_INCLUDE_PATH\n  PREDEFINED\n  QHP_CUST_FILTER_ATTRS\n  QHP_SECT_FILTER_ATTRS\n  STRIP_FROM_INC_PATH\n  STRIP_FROM_PATH\n  TAGFILES\n  TCL_SUBST\n\nThe following single value Doxygen options will be quoted automatically\nif they contain at least one space:\n\n::\n\n  CHM_FILE\n  DIA_PATH\n  DOCBOOK_OUTPUT\n  DOCSET_FEEDNAME\n  DOCSET_PUBLISHER_NAME\n  DOT_FONTNAME\n  DOT_PATH\n  EXTERNAL_SEARCH_ID\n  FILE_VERSION_FILTER\n  GENERATE_TAGFILE\n  HHC_LOCATION\n  HTML_FOOTER\n  HTML_HEADER\n  HTML_OUTPUT\n  HTML_STYLESHEET\n  INPUT_FILTER\n  LATEX_FOOTER\n  LATEX_HEADER\n  LATEX_OUTPUT\n  LAYOUT_FILE\n  MAN_OUTPUT\n  MAN_SUBDIR\n  MATHJAX_CODEFILE\n  MSCGEN_PATH\n  OUTPUT_DIRECTORY\n  PERL_PATH\n  PLANTUML_JAR_PATH\n  PROJECT_BRIEF\n  PROJECT_LOGO\n  PROJECT_NAME\n  QCH_FILE\n  QHG_LOCATION\n  QHP_CUST_FILTER_NAME\n  QHP_VIRTUAL_FOLDER\n  RTF_EXTENSIONS_FILE\n  RTF_OUTPUT\n  RTF_STYLESHEET_FILE\n  SEARCHDATA_FILE\n  USE_MDFILE_AS_MAINPAGE\n  WARN_FORMAT\n  WARN_LOGFILE\n  XML_OUTPUT\n\nThere are situations where it may be undesirable for a particular config option\nto be automatically quoted by ``doxygen_add_docs()``, such as ``ALIASES`` which\nmay need to include its own embedded quoting.  The ``DOXYGEN_VERBATIM_VARS``\nvariable can be used to specify a list of Doxygen variables (including the\nleading ``DOXYGEN_`` prefix) which should not be quoted.  The project is then\nresponsible for ensuring that those variables' values make sense when placed\ndirectly in the Doxygen input file.  In the case of list variables, list items\nare still separated by spaces, it is only the automatic quoting that is\nskipped.  For example, the following allows ``doxygen_add_docs()`` to apply\nquoting to ``DOXYGEN_PROJECT_BRIEF``, but not each item in the\n``DOXYGEN_ALIASES`` list (:ref:`bracket syntax <Bracket Argument>` can also\nbe used to make working with embedded quotes easier):\n\n.. code-block:: cmake\n\n  set(DOXYGEN_PROJECT_BRIEF \"String with spaces\")\n  set(DOXYGEN_ALIASES\n      [[somealias=\"@some_command param\"]]\n      \"anotherAlias=@foobar\"\n  )\n  set(DOXYGEN_VERBATIM_VARS DOXYGEN_ALIASES)\n\nThe resultant ``Doxyfile`` will contain the following lines:\n\n.. code-block:: text\n\n  PROJECT_BRIEF = \"String with spaces\"\n  ALIASES       = somealias=\"@some_command param\" anotherAlias=@foobar\n\n\nDeprecated Result Variables\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor compatibility with previous versions of CMake, the following variables\nare also defined but they are deprecated and should no longer be used:\n\n.. variable:: DOXYGEN_EXECUTABLE\n\n  The path to the ``doxygen`` command. If projects need to refer to the\n  ``doxygen`` executable directly, they should use the ``Doxygen::doxygen``\n  import target instead.\n\n.. variable:: DOXYGEN_DOT_FOUND\n\n  True if the ``dot`` executable was found.\n\n.. variable:: DOXYGEN_DOT_EXECUTABLE\n\n  The path to the ``dot`` command. If projects need to refer to the ``dot``\n  executable directly, they should use the ``Doxygen::dot`` import target\n  instead.\n\n.. variable:: DOXYGEN_DOT_PATH\n\n  The path to the directory containing the ``dot`` executable as reported in\n  ``DOXYGEN_DOT_EXECUTABLE``. The path may have forward slashes even on Windows\n  and is not suitable for direct substitution into a ``Doxyfile.in`` template.\n  If you need this value, get the :prop_tgt:`IMPORTED_LOCATION` property of the\n  ``Doxygen::dot`` target and use :command:`get_filename_component` to extract\n  the directory part of that path. You may also want to consider using\n  :command:`file(TO_NATIVE_PATH)` to prepare the path for a Doxygen\n  configuration file.\n\n\nDeprecated Hint Variables\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. variable:: DOXYGEN_SKIP_DOT\n\n  This variable has no effect for the component form of ``find_package``.\n  In backward compatibility mode (i.e. without components list) it prevents\n  the finder module from searching for Graphviz's ``dot`` utility.\n\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if IN_LIST\n",
        "Line" : 374,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "# For backwards compatibility support\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ===== Rationale for OS X AppBundle mods below =====\n\n#  With the OS X GUI version, Doxygen likes to be installed to /Applications\n\n#  and it contains the doxygen executable in the bundle. In the versions I've\n\n#  seen, it is located in Resources, but in general, more often binaries are\n\n#  located in MacOS.\n\n#\n\n#  NOTE: The official Doxygen.app distributed for OS X uses non-standard\n\n#  conventions. Instead of the command-line \"doxygen\" tool being placed in\n\n#  Doxygen.app/Contents/MacOS, \"Doxywizard\" is placed there instead and\n\n#  \"doxygen\" is placed in Contents/Resources.  This is most likely done\n\n#  so that something happens when people double-click on the Doxygen.app\n\n#  package. Unfortunately, CMake gets confused by this as when it sees the\n\n#  bundle it uses \"Doxywizard\" as the executable to use instead of\n\n#  \"doxygen\". Therefore to work-around this issue we temporarily disable\n\n#  the app-bundle feature, just for this CMake module:\n\n#\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Save the old setting\n",
        "Line" : 398,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Disable the App-bundle detection feature\n",
        "Line" : 400,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# FYI:\n\n# In older versions of OS X Doxygen, dot was included with the Doxygen bundle,\n\n# but newer versions require you to download Graphviz.app which contains \"dot\"\n\n# or use something like homebrew.\n\n# ============== End OSX stuff ================\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Find Doxygen...\n\n#\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Create an imported target for Doxygen\n",
        "Line" : 437,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "#\n\n# Find Diagram Editor...\n\n#\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The Doxyfile wants the path to the utility, not the entire path\n\n# including file name\n",
        "Line" : 463,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Create an imported target for component\n",
        "Line" : 472,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "#\n\n# Find Graphviz Dot...\n\n#\n",
        "Line" : 484,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# The Doxyfile wants the path to the utility, not the entire path\n\n# including file name\n",
        "Line" : 513,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Create an imported target for component\n",
        "Line" : 522,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "#\n\n# Find Message Sequence Chart...\n\n#\n",
        "Line" : 535,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# The Doxyfile wants the path to the utility, not the entire path\n\n# including file name\n",
        "Line" : 551,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Create an imported target for component\n",
        "Line" : 560,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Make sure `doxygen` is one of the components to find\n",
        "Line" : 572,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Search at least for `doxygen` executable\n",
        "Line" : 575,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Preserve backward compatibility:\n\n# search for `dot` also if `DOXYGEN_SKIP_DOT` is not explicitly disable this.\n",
        "Line" : 577,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#\n\n# Find all requested components of Doxygen...\n\n#\n",
        "Line" : 587,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Verify find results\n",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\n\n# Backwards compatibility...\n\n#\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Restore the old app-bundle setting\n",
        "Line" : 626,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Maintain the _FOUND variables as \"YES\" or \"NO\" for backwards\n\n# compatibility. This allows people to substitute them directly into\n\n# Doxyfile with configure_file().\n",
        "Line" : 630,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# For backwards compatibility support for even older CMake versions\n",
        "Line" : 645,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# No need to keep any backward compatibility for `DOXYGEN_MSCGEN_XXX`\n\n# and `DOXYGEN_DIA_XXX` since they were not supported before component\n\n# support was added\n",
        "Line" : 649,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "#\n\n# Allow full control of Doxygen from CMakeLists.txt\n\n#\n",
        "Line" : 655,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Prepare a template Doxyfile and Doxygen's default values CMake file\n",
        "Line" : 659,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# If doxygen was found, use it to generate a minimal default Doxyfile.\n\n# We will delete this file after we have finished using it below to\n\n# generate the other files that doxygen_add_docs() will use.\n",
        "Line" : 661,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Write a do-not-edit header to files we are going to generate...\n",
        "Line" : 678,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# We only need one copy of these across the whole build, since their\n\n# content is only dependent on the version of Doxygen being used. Therefore\n\n# we always put them at the top of the build tree so that they are in a\n\n# predictable location.\n",
        "Line" : 687,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Get strings containing a configuration key from the template Doxyfile\n\n# we obtained from this version of Doxygen. Because some options are split\n\n# across multiple lines by ending lines with backslashes, we cannot just\n\n# use file(STRINGS...) with a REGEX. Instead, read lines without a REGEX\n\n# so that file(STRINGS...) handles the trailing backslash as a line\n\n# continuation. It stores multi-lines as lists, so we then have to replace\n\n# the \";\" list separator with backslashed newlines again so that we get the\n\n# original content stored back as the value part.\n",
        "Line" : 697,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Build up a Doxyfile that provides @configVar@ substitutions for each\n\n# Doxygen config option as well as a separate CMake script which provides\n\n# the default value for each of those options if the project doesn't supply\n\n# them. Each config option will support substitution of a CMake variable\n\n# of the same name except with DOXYGEN_ prepended.\n",
        "Line" : 718,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# Ok, this is a config key with a value\n",
        "Line" : 725,
        "CharPositionInLine" : 12
      },
      "37" : {
        "Text" : "# Remove the backslashes we had to preserve to handle newlines\n",
        "Line" : 729,
        "CharPositionInLine" : 16
      },
      "38" : {
        "Text" : "# Ok, this is a config key with empty default value\n",
        "Line" : 736,
        "CharPositionInLine" : 12
      },
      "39" : {
        "Text" : "# Ok, dumped defaults are not needed anymore...\n",
        "Line" : 750,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# Quote a value of the given variable if:\n\n# - VARIABLE parameter was really given\n\n# - the variable it names is defined and is not present in the list\n\n#   specified by DOXYGEN_VERBATIM_VARS (if set)\n\n# - the value of the named variable isn't already quoted\n\n# - the value has spaces\n",
        "Line" : 761,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# Have to test if list items should be treated as verbatim here\n\n# because we lose the variable name when we pass just one list item\n\n# to doxygen_quote_value() below\n",
        "Line" : 780,
        "CharPositionInLine" : 8
      },
      "42" : {
        "Text" : "# If not already defined, set some relevant defaults based on the\n\n# assumption that the documentation is for the whole project. Details\n\n# specified in the project() command will be used to populate a number of\n\n# these defaults.\n",
        "Line" : 828,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# The PROJECT_NAME tag is a single word (or a sequence of words\n\n# surrounded by double-quotes, unless you are using Doxywizard) that\n\n# should identify the project for which the documentation is generated.\n\n# This name is used in the title of most generated pages and in a few\n\n# other places. The default value is: My Project.\n",
        "Line" : 834,
        "CharPositionInLine" : 8
      },
      "44" : {
        "Text" : "# The PROJECT_NUMBER tag can be used to enter a project or revision\n\n# number. This could be handy for archiving the generated documentation\n\n# or if some version control system is used.\n",
        "Line" : 843,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# Using the PROJECT_BRIEF tag one can provide an optional one line\n\n# description for a project that appears at the top of each page and\n\n# should give viewer a quick idea about the purpose of the project.\n\n# Keep the description short.\n",
        "Line" : 850,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# The RECURSIVE tag can be used to specify whether or not\n\n# subdirectories should be searched for input files as well. CMake\n\n# projects generally evolve to span multiple directories, so it makes\n\n# more sense for this to be on by default. Doxygen's default value\n\n# has this setting turned off, so we override it.\n",
        "Line" : 858,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "# The OUTPUT_DIRECTORY tag is used to specify the (relative or\n\n# absolute) path into which the generated documentation will be\n\n# written. If a relative path is used, Doxygen will interpret it as\n\n# being relative to the location where doxygen was started, but we need\n\n# to run Doxygen in the source tree so that relative input paths work\n\n# intuitively. Therefore, we ensure that the output directory is always\n\n# an absolute path and if the project provided a relative path, we\n\n# treat it as relative to the current BINARY directory so that output\n\n# is not generated inside the source tree.\n",
        "Line" : 867,
        "CharPositionInLine" : 8
      },
      "48" : {
        "Text" : "# If you set the HAVE_DOT tag to YES then doxygen will assume the dot\n\n# tool is available from the path. This tool is part of Graphviz (see:\n\n# http://www.graphviz.org/), a graph visualization toolkit from AT&T\n\n# and Lucent Bell Labs. The other options in this section have no\n\n# effect if this option is set to NO.\n\n# Doxygen's default value is: NO.\n",
        "Line" : 885,
        "CharPositionInLine" : 8
      },
      "49" : {
        "Text" : "# Set the DOT_MULTI_TARGETS tag to YES to allow dot to generate\n\n# multiple output files in one run (i.e. multiple -o and -T options on\n\n# the command line). This makes dot run faster, but since only newer\n\n# versions of dot (>1.8.10) support this, Doxygen disables this feature\n\n# by default.\n\n# This tag requires that the tag HAVE_DOT is set to YES.\n",
        "Line" : 899,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "# If the GENERATE_LATEX tag is set to YES, doxygen will generate LaTeX\n\n# output. We only want the HTML output enabled by default, so we turn\n\n# this off if the project hasn't specified it.\n",
        "Line" : 909,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "# The WARN_FORMAT tag determines the format of the warning messages\n\n# that doxygen can produce. The string should contain the $file,\n\n# $line and $text tags, which will be replaced by the file and line\n\n# number from which the warning originated and the warning text.\n\n# Optionally, the format may contain $version, which will be\n\n# replaced by the version of the file (if it could be obtained via\n\n# FILE_VERSION_FILTER).\n\n# Doxygen's default value is: $file:$line: $text\n",
        "Line" : 917,
        "CharPositionInLine" : 12
      },
      "52" : {
        "Text" : "# The WARN_LOGFILE tag can be used to specify a file to which warning and error\n\n# messages should be written. If left blank the output is written to standard\n\n# error (stderr).\n",
        "Line" : 930,
        "CharPositionInLine" : 8
      },
      "53" : {
        "Text" : "# Any files from the INPUT that match any of the EXCLUDE_PATTERNS will be\n\n# excluded from the set of input files. We provide some additional patterns\n\n# to prevent commonly unwanted things from CMake builds being pulled in.\n\n#\n\n# Note that the wildcards are matched against the file with absolute path,\n\n# so to exclude all test directories for example use the pattern */test/*\n",
        "Line" : 939,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# Now bring in Doxgen's defaults for those things the project has not\n\n# already set and we have not provided above\n",
        "Line" : 958,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# Cleanup built HTMLs on \"make clean\"\n\n# TODO Any other dirs?\n",
        "Line" : 962,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# Build up a list of files we can identify from the inputs so we can list\n\n# them as SOURCES in the custom target (makes them display in IDEs). We\n\n# must do this before we transform the various DOXYGEN_... variables below\n\n# because we need to process DOXYGEN_INPUT as a list first.\n",
        "Line" : 975,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# Transform known list type options into space separated strings.\n",
        "Line" : 993,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# Transform known single value variables which may contain spaces, such as\n\n# paths or description strings.\n",
        "Line" : 1038,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# Store the unmodified value of DOXYGEN_OUTPUT_DIRECTORY prior to invoking\n\n# doxygen_quote_value() below. This will mutate the string specifically for\n\n# consumption by Doxygen's config file, which we do not want when we use it\n\n# later in the custom target's commands.\n",
        "Line" : 1085,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# Prepare doxygen configuration file\n",
        "Line" : 1095,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "# Add the target\n",
        "Line" : 1105,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 62
    },
    "deps/src/cmake-3.13.4/Modules/FindEXPAT.cmake" : {
      "ObjectId" : "39086e499d9c6016823df9a8a66b59f646a81af2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindEXPAT\n\n# ---------\n\n#\n\n# Find the native Expat headers and library.\n\n#\n\n# Imported Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``EXPAT::EXPAT``\n\n#   The Expat ``expat`` library, if found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``EXPAT_INCLUDE_DIRS``\n\n#   where to find expat.h, etc.\n\n# ``EXPAT_LIBRARIES``\n\n#   the libraries to link against to use Expat.\n\n# ``EXPAT_FOUND``\n\n#   true if the Expat headers and libraries were found.\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for the library.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Copy the results to the output variables and target.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/FindFLEX.cmake" : {
      "ObjectId" : "3945b788481073dab90d9e9809e33126ddcfd35a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindFLEX\n\n# --------\n\n#\n\n# Find flex executable and provides a macro to generate custom build rules\n\n#\n\n#\n\n#\n\n# The module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#   FLEX_FOUND - true is flex executable is found\n\n#   FLEX_EXECUTABLE - the path to the flex executable\n\n#   FLEX_VERSION - the version of flex\n\n#   FLEX_LIBRARIES - The flex libraries\n\n#   FLEX_INCLUDE_DIRS - The path to the flex headers\n\n#\n\n#\n\n#\n\n# The minimum required version of flex can be specified using the\n\n# standard syntax, e.g.  find_package(FLEX 2.5.13)\n\n#\n\n#\n\n#\n\n# If flex is found on the system, the module provides the macro:\n\n#\n\n# ::\n\n#\n\n#   FLEX_TARGET(Name FlexInput FlexOutput\n\n#               [COMPILE_FLAGS <string>]\n\n#               [DEFINES_FILE <string>]\n\n#               )\n\n#\n\n# which creates a custom command to generate the <FlexOutput> file from\n\n# the <FlexInput> file.  If COMPILE_FLAGS option is specified, the next\n\n# parameter is added to the flex command line. If flex is configured to\n\n# output a header file, the DEFINES_FILE option may be used to specify its\n\n# name. Name is an alias used to get details of this custom command.\n\n# Indeed the macro defines the following variables:\n\n#\n\n# ::\n\n#\n\n#   FLEX_${Name}_DEFINED - true is the macro ran successfully\n\n#   FLEX_${Name}_OUTPUTS - the source file generated by the custom rule, an\n\n#   alias for FlexOutput\n\n#   FLEX_${Name}_INPUT - the flex source file, an alias for ${FlexInput}\n\n#   FLEX_${Name}_OUTPUT_HEADER - the header flex output, if any.\n\n#\n\n#\n\n#\n\n# Flex scanners often use tokens defined by Bison: the code generated\n\n# by Flex depends of the header generated by Bison.  This module also\n\n# defines a macro:\n\n#\n\n# ::\n\n#\n\n#   ADD_FLEX_BISON_DEPENDENCY(FlexTarget BisonTarget)\n\n#\n\n# which adds the required dependency between a scanner and a parser\n\n# where <FlexTarget> and <BisonTarget> are the first parameters of\n\n# respectively FLEX_TARGET and BISON_TARGET macros.\n\n#\n\n# ::\n\n#\n\n#   ====================================================================\n\n#   Example:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    find_package(BISON)\n\n#    find_package(FLEX)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    BISON_TARGET(MyParser parser.y ${CMAKE_CURRENT_BINARY_DIR}/parser.cpp)\n\n#    FLEX_TARGET(MyScanner lexer.l  ${CMAKE_CURRENT_BINARY_DIR}/lexer.cpp)\n\n#    ADD_FLEX_BISON_DEPENDENCY(MyScanner MyParser)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    include_directories(${CMAKE_CURRENT_BINARY_DIR})\n\n#    add_executable(Foo\n\n#       Foo.cc\n\n#       ${BISON_MyParser_OUTPUTS}\n\n#       ${FLEX_MyScanner_OUTPUTS}\n\n#    )\n\n#   ====================================================================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# older versions of flex printed \"/full/path/to/executable version X.Y\"\n\n# newer versions use \"basename(executable) X.Y\"\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#============================================================\n\n# FLEX_TARGET (public macro)\n\n#============================================================\n\n#\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#============================================================\n",
        "Line" : 192,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#============================================================\n\n# ADD_FLEX_BISON_DEPENDENCY (public macro)\n\n#============================================================\n\n#\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#============================================================\n",
        "Line" : 212,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/FindFLTK.cmake" : {
      "ObjectId" : "82c63efd4f1de902560c8fc44aa91df63cb0bde7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindFLTK\n\n# --------\n\n#\n\n# Find the FLTK library\n\n#\n\n# Input Variables\n\n# ^^^^^^^^^^^^^^^\n\n#\n\n# By default this module will search for all of the FLTK components and\n\n# add them to the FLTK_LIBRARIES variable.  You can limit the components\n\n# which get placed in FLTK_LIBRARIES by defining one or more of the\n\n# following three options:\n\n#\n\n# ``FLTK_SKIP_OPENGL``\n\n#   Set to true to disable searching for the FLTK GL library\n\n#\n\n# ``FLTK_SKIP_FORMS``\n\n#   Set to true to disable searching for the FLTK Forms library\n\n#\n\n# ``FLTK_SKIP_IMAGES``\n\n#   Set to true to disable searching for the FLTK Images library\n\n#\n\n# FLTK is composed also by a binary tool. You can set the following option:\n\n#\n\n# ``FLTK_SKIP_FLUID``\n\n#   Set to true to not look for the FLUID binary\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# The following variables will be defined:\n\n#\n\n# ``FLTK_FOUND``\n\n#   True if all components not skipped were found\n\n#\n\n# ``FLTK_INCLUDE_DIR``\n\n#   Path to the include directory for FLTK header files\n\n#\n\n# ``FLTK_LIBRARIES``\n\n#   List of the FLTK libraries found\n\n#\n\n# ``FLTK_FLUID_EXECUTABLE``\n\n#   Path to the FLUID binary tool\n\n#\n\n# ``FLTK_WRAP_UI``\n\n#   True if FLUID is found, used to enable the FLTK_WRAP_UI command\n\n#\n\n# Cache Variables\n\n# ^^^^^^^^^^^^^^^\n\n#\n\n# The following cache variables are also available to set or use:\n\n#\n\n# ``FLTK_BASE_LIBRARY_RELEASE``\n\n#   The FLTK base library (optimized)\n\n#\n\n# ``FLTK_BASE_LIBRARY_DEBUG``\n\n#   The FLTK base library (debug)\n\n#\n\n# ``FLTK_GL_LIBRARY_RELEASE``\n\n#   The FLTK GL library (optimized)\n\n#\n\n# ``FLTK_GL_LIBRARY_DEBUG``\n\n#   The FLTK GL library (debug)\n\n#\n\n# ``FLTK_FORMS_LIBRARY_RELEASE``\n\n#   The FLTK Forms library (optimized)\n\n#\n\n# ``FLTK_FORMS_LIBRARY_DEBUG``\n\n#   The FLTK Forms library (debug)\n\n#\n\n# ``FLTK_IMAGES_LIBRARY_RELEASE``\n\n#   The FLTK Images protobuf library (optimized)\n\n#\n\n# ``FLTK_IMAGES_LIBRARY_DEBUG``\n\n#   The FLTK Images library (debug)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  Platform dependent libraries required by FLTK\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If FLTK_INCLUDE_DIR is already defined we assigne its value to FLTK_DIR\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If FLTK has been built using CMake we try to find everything directly\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Search only if the location is not already known.\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Get the system search path as a list.\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Construct a set of paths relative to the system search path.\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#\n\n# Look for an installation or build tree.\n\n#\n",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Look for an environment variable FLTK_DIR.\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Look in places relative to the system executable search path.\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Help the user find it if we cannot.\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Check if FLTK was built using CMake\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Fluid\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# mark_as_advanced(FLTK_FLUID_EXECUTABLE)\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Add the extra libraries\n",
        "Line" : 179,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# if FLTK was not built using CMake\n\n# Find fluid executable.\n",
        "Line" : 202,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Use location of fluid to help find everything else.\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#\n\n# Try to find FLTK include dir using fltk-config\n\n#\n",
        "Line" : 218,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Use fltk-config to generate a list of possible include directories\n",
        "Line" : 222,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# fltk 1.1.9 has Fl.H (#8376)\n",
        "Line" : 242,
        "CharPositionInLine" : 31
      },
      "21" : {
        "Text" : "#\n\n# Try to find FLTK library\n",
        "Line" : 246,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Allow libraries to be set manually\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Find the extra libraries needed for the fltk_images library.\n",
        "Line" : 283,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# The EXEC_PROGRAM will not be inherited into subdirectories from\n\n# the file that originally included this module.  Save the answer.\n",
        "Line" : 291,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# Append all of the required libraries together (by default, everything)\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# The following deprecated settings are for compatibility with CMake 1.4\n",
        "Line" : 330,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 27
    },
    "deps/src/cmake-3.13.4/Modules/FindFLTK2.cmake" : {
      "ObjectId" : "b785e460a3dca422b715d84f5f1a46db4df2c3a1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindFLTK2\n\n# ---------\n\n#\n\n# Find the native FLTK2 includes and library\n\n#\n\n# The following settings are defined\n\n#\n\n# ::\n\n#\n\n#   FLTK2_FLUID_EXECUTABLE, where to find the Fluid tool\n\n#   FLTK2_WRAP_UI, This enables the FLTK2_WRAP_UI command\n\n#   FLTK2_INCLUDE_DIR, where to find include files\n\n#   FLTK2_LIBRARIES, list of fltk2 libraries\n\n#   FLTK2_FOUND, Don't use FLTK2 if false.\n\n#\n\n# The following settings should not be used in general.\n\n#\n\n# ::\n\n#\n\n#   FLTK2_BASE_LIBRARY   = the full path to fltk2.lib\n\n#   FLTK2_GL_LIBRARY     = the full path to fltk2_gl.lib\n\n#   FLTK2_IMAGES_LIBRARY = the full path to fltk2_images.lib\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  Platform dependent libraries required by FLTK2\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If FLTK2_INCLUDE_DIR is already defined we assign its value to FLTK2_DIR\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If FLTK2 has been built using CMake we try to find everything directly\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Search only if the location is not already known.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Get the system search path as a list.\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Construct a set of paths relative to the system search path.\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#\n\n# Look for an installation or build tree.\n\n#\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Look for an environment variable FLTK2_DIR.\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Look in places relative to the system executable search path.\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Help the user find it if we cannot.\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# If FLTK2 was found, load the configuration file to get the rest of the\n\n# settings.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Check if FLTK2 was built using CMake\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Fluid\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Add the extra libraries\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# if FLTK2 was not built using CMake\n\n# Find fluid executable.\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Use location of fluid to help find everything else.\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Find the extra libraries needed for the fltk_images library.\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# The EXEC_PROGRAM will not be inherited into subdirectories from\n\n# the file that originally included this module.  Save the answer.\n",
        "Line" : 198,
        "CharPositionInLine" : 10
      },
      "20" : {
        "Text" : "# The following deprecated settings are for compatibility with CMake 1.4\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# make FIND_PACKAGE friendly\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "deps/src/cmake-3.13.4/Modules/FindFreetype.cmake" : {
      "ObjectId" : "61643be4554c1cabb129aa6eab6955e5a3904cba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindFreetype\n\n# ------------\n\n#\n\n# Find the FreeType font renderer includes and library.\n\n#\n\n# Imported Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` target:\n\n#\n\n# ``Freetype::Freetype``\n\n#   The Freetype ``freetype`` library, if found\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``FREETYPE_FOUND``\n\n#   true if the Freetype headers and libraries were found\n\n# ``FREETYPE_INCLUDE_DIRS``\n\n#   directories containing the Freetype headers. This is the\n\n#   concatenation of the variables:\n\n#\n\n#   ``FREETYPE_INCLUDE_DIR_ft2build``\n\n#     directory holding the main Freetype API configuration header\n\n#   ``FREETYPE_INCLUDE_DIR_freetype2``\n\n#     directory holding Freetype public headers\n\n# ``FREETYPE_LIBRARIES``\n\n#   the library to link against\n\n# ``FREETYPE_VERSION_STRING``\n\n#   the version of freetype found (since CMake 2.8.8)\n\n#\n\n# Hints\n\n# ^^^^^\n\n#\n\n# The user may set the environment variable ``FREETYPE_DIR`` to the root\n\n# directory of a Freetype installation.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Created by Eric Wing.\n\n# Modifications by Alexander Neundorf.\n\n# This file has been renamed to \"FindFreetype.cmake\" instead of the correct\n\n# \"FindFreeType.cmake\" in order to be compatible with the one from KDE4, Alex.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Ugh, FreeType seems to use some #include trickery which\n\n# makes this harder than it should be. It looks like they\n\n# put ft2build.h in a common/easier-to-find location which\n\n# then contains a #include to a more specific header in a\n\n# more specific location (#include <freetype/config/ftheader.h>).\n\n# Then from there, they need to set a bunch of #define's\n\n# so you can do something like:\n\n# #include FT_FREETYPE_H\n\n# Unfortunately, using CMake's mechanisms like include_directories()\n\n# wants explicit full paths and this trickery doesn't work too well.\n\n# I'm going to attempt to cut out the middleman and hope\n\n# everything still works.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# on Windows, ensure paths are in canonical format (forward slahes):\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# set the user variables\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/FindGCCXML.cmake" : {
      "ObjectId" : "1f8d738f825fbd58a63955d4389dd039715cd4af",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindGCCXML\n\n# ----------\n\n#\n\n# Find the GCC-XML front-end executable.\n\n#\n\n#\n\n#\n\n# This module will define the following variables:\n\n#\n\n# ::\n\n#\n\n#   GCCXML - the GCC-XML front-end executable.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindGDAL.cmake" : {
      "ObjectId" : "ff2976e6a2e4863e6449cba88e18a37b14f67849",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindGDAL\n\n# --------\n\n#\n\n#\n\n#\n\n# Locate gdal\n\n#\n\n# This module accepts the following environment variables:\n\n#\n\n# ::\n\n#\n\n#     GDAL_DIR or GDAL_ROOT - Specify the location of GDAL\n\n#\n\n#\n\n#\n\n# This module defines the following CMake variables:\n\n#\n\n# ::\n\n#\n\n#     GDAL_FOUND - True if libgdal is found\n\n#     GDAL_LIBRARY - A variable pointing to the GDAL library\n\n#     GDAL_INCLUDE_DIR - Where to find the headers\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# $GDALDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$GDAL_DIR\n\n# used in building gdal.\n\n#\n\n# Created by Eric Wing. I'm not a gdal user, but OpenSceneGraph uses it\n\n# for osgTerrain so I whipped this module together for completeness.\n\n# I actually don't know the conventions or where files are typically\n\n# placed in distros.\n\n# Any real gdal users are encouraged to correct this (but please don't\n\n# break the OS X framework stuff when doing so which is what usually seems\n\n# to happen).\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This makes the presumption that you are include gdal.h like\n\n#\n\n#include \"gdal.h\"\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use gdal-config to obtain the library version (this should hopefully\n\n# allow us to -lgdal1.x.y where x.y are correct version)\n\n# For some reason, libgdal development packages do not contain\n\n# libgdal.so...\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# treat the output as a command line and split it up\n",
        "Line" : 71,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# only consider libraries whose name matches this pattern\n",
        "Line" : 74,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# consider each entry as a possible library path, name, or parent directory\n",
        "Line" : 77,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# library name\n",
        "Line" : 79,
        "CharPositionInLine" : 16
      },
      "9" : {
        "Text" : "# only consider libraries whose name matches the expected pattern\n",
        "Line" : 83,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "# library search path\n",
        "Line" : 87,
        "CharPositionInLine" : 16
      },
      "11" : {
        "Text" : "# assume this is a full path to a library\n",
        "Line" : 90,
        "CharPositionInLine" : 16
      },
      "12" : {
        "Text" : "# extract the file name\n",
        "Line" : 92,
        "CharPositionInLine" : 20
      },
      "13" : {
        "Text" : "# only consider libraries whose name matches the expected pattern\n",
        "Line" : 95,
        "CharPositionInLine" : 20
      },
      "14" : {
        "Text" : "# extract the file directory\n",
        "Line" : 100,
        "CharPositionInLine" : 20
      },
      "15" : {
        "Text" : "# remove library prefixes/suffixes\n",
        "Line" : 103,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "# use the file name and directory as hints\n",
        "Line" : 107,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 17
    },
    "deps/src/cmake-3.13.4/Modules/FindGIF.cmake" : {
      "ObjectId" : "efc397318f3a54da5253177b3ed8f695efb03c75",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindGIF\n\n# -------\n\n#\n\n# This finds the GIF library (giflib)\n\n#\n\n# The module defines the following variables:\n\n#\n\n# ``GIF_FOUND``\n\n#   True if giflib was found\n\n# ``GIF_LIBRARIES``\n\n#   Libraries to link to in order to use giflib\n\n# ``GIF_INCLUDE_DIR``\n\n#   where to find the headers\n\n# ``GIF_VERSION``\n\n#   3, 4 or a full version string (eg 5.1.4) for versions >= 4.1.6\n\n#\n\n# The minimum required version of giflib can be specified using the\n\n# standard syntax, e.g.  find_package(GIF 4)\n\n#\n\n# $GIF_DIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$GIF_DIR\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Created by Eric Wing.\n\n# Modifications by Alexander Neundorf, Ben Campbell\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the gif library can have many names :-/\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# see readme.txt\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Very basic version detection.\n\n# The GIF_LIB_VERSION string in gif_lib.h seems to be unreliable, since it seems\n\n# to be always \" Version 2.0, \" in versions 3.x of giflib.\n\n# In version 4 the member UserData was added to GifFileType, so we check for this\n\n# one.\n\n# Versions after 4.1.6 define GIFLIB_MAJOR, GIFLIB_MINOR, and GIFLIB_RELEASE\n\n# see http://giflib.sourceforge.net/gif_lib.html#compatibility\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check for the specific version defines (>=4.1.6 only)\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# yay - got exact version info\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# use UserData field to sniff version instead\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "deps/src/cmake-3.13.4/Modules/FindGLEW.cmake" : {
      "ObjectId" : "11e872446783729cf0fe5982f265eb044f756d86",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindGLEW\n\n# --------\n\n#\n\n# Find the OpenGL Extension Wrangler Library (GLEW)\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the :prop_tgt:`IMPORTED` target ``GLEW::GLEW``,\n\n# if GLEW has been found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#   GLEW_INCLUDE_DIRS - include directories for GLEW\n\n#   GLEW_LIBRARIES - libraries to link against GLEW\n\n#   GLEW_FOUND - true if GLEW has been found and can be used\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindGLU.cmake" : {
      "ObjectId" : "98928059cdff0b00eb68b5d22d9a851115674606",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use of this file is deprecated, and is here for backwards compatibility with CMake 1.4\n\n# GLU library is now found by FindOpenGL.cmake\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindGLUT.cmake" : {
      "ObjectId" : "1779683874860e678bbedaa7307fb04d66ea5be9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindGLUT\n\n# --------\n\n#\n\n# try to find glut library and include files.\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``GLUT::GLUT``\n\n#  Defined if the system has GLUT.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module sets the following variables:\n\n#\n\n# ::\n\n#\n\n#   GLUT_INCLUDE_DIR, where to find GL/glut.h, etc.\n\n#   GLUT_LIBRARIES, the libraries to link against\n\n#   GLUT_FOUND, If false, do not try to use GLUT.\n\n#\n\n# Also defined, but not for general use are:\n\n#\n\n# ::\n\n#\n\n#   GLUT_glut_LIBRARY = the full path to the glut library.\n\n#   GLUT_Xmu_LIBRARY  = the full path to the Xmu library.\n\n#   GLUT_Xi_LIBRARY   = the full path to the Xi Library.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Cocoa should always be a Framework, but we check to make sure.\n",
        "Line" : 64,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# Is -lXi and -lXmu required on all platforms that have it?\n\n# If not, we need some way to figure out what platform we are on.\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#The following deprecated settings are for backwards compatibility with CMake1.4\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/FindGSL.cmake" : {
      "ObjectId" : "8d10b6ce5c5e53b1981b10cea5f9b76924ea5334",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindGSL\n\n# --------\n\n#\n\n# Find the native GSL includes and libraries.\n\n#\n\n# The GNU Scientific Library (GSL) is a numerical library for C and C++\n\n# programmers. It is free software under the GNU General Public\n\n# License.\n\n#\n\n# Imported Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# If GSL is found, this module defines the following :prop_tgt:`IMPORTED`\n\n# targets::\n\n#\n\n#  GSL::gsl      - The main GSL library.\n\n#  GSL::gslcblas - The CBLAS support library used by GSL.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project::\n\n#\n\n#  GSL_FOUND          - True if GSL found on the local system\n\n#  GSL_INCLUDE_DIRS   - Location of GSL header files.\n\n#  GSL_LIBRARIES      - The GSL libraries.\n\n#  GSL_VERSION        - The version of the discovered GSL install.\n\n#\n\n# Hints\n\n# ^^^^^\n\n#\n\n# Set ``GSL_ROOT_DIR`` to a directory that contains a GSL installation.\n\n#\n\n# This script expects to find libraries at ``$GSL_ROOT_DIR/lib`` and the GSL\n\n# headers at ``$GSL_ROOT_DIR/include/gsl``.  The library directory may\n\n# optionally provide Release and Debug folders. If available, the libraries\n\n# named ``gsld``, ``gslblasd`` or ``cblasd`` are recognized as debug libraries.\n\n# For Unix-like systems, this script will use ``$GSL_ROOT_DIR/bin/gsl-config``\n\n# (if found) to aid in the discovery of GSL.\n\n#\n\n# Cache Variables\n\n# ^^^^^^^^^^^^^^^\n\n#\n\n# This module may set the following variables depending on platform and type\n\n# of GSL installation discovered.  These variables may optionally be set to\n\n# help this module find the correct files::\n\n#\n\n#  GSL_CBLAS_LIBRARY       - Location of the GSL CBLAS library.\n\n#  GSL_CBLAS_LIBRARY_DEBUG - Location of the debug GSL CBLAS library (if any).\n\n#  GSL_CONFIG_EXECUTABLE   - Location of the ``gsl-config`` script (if any).\n\n#  GSL_LIBRARY             - Location of the GSL library.\n\n#  GSL_LIBRARY_DEBUG       - Location of the debug GSL library (if any).\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# If the user has provided ``GSL_ROOT_DIR``, use it!  Choose items found\n\n# at this location over system locations.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=============================================================================\n\n# As a first try, use the PkgConfig module.  This will work on many\n\n# *NIX systems.  See :module:`findpkgconfig`\n\n# This will return ``GSL_INCLUDEDIR`` and ``GSL_LIBDIR`` used below.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#=============================================================================\n\n# Set GSL_INCLUDE_DIRS and GSL_LIBRARIES. If we skipped the PkgConfig step, try\n\n# to find the libraries at $GSL_ROOT_DIR (if provided) or in standard system\n\n# locations.  These find_library and find_path calls will prefer custom\n\n# locations over standard locations (HINTS).  If the requested file is not found\n\n# at the HINTS location, standard system locations will be still be searched\n\n# (/usr/lib64 (Redhat), lib/i386-linux-gnu (Debian)).\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Do we also have debug versions?\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If we didn't use PkgConfig, try to find the version via gsl-config or by\n\n# reading gsl_version.h.\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# 1. If gsl-config exists, query for the version.\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# 2. If gsl-config is not available, try looking in gsl/gsl_version.h\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# might also try scraping the directory name for a regex match \"gsl-X.X\"\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#=============================================================================\n\n# handle the QUIETLY and REQUIRED arguments and set GSL_FOUND to TRUE if all\n\n# listed variables are TRUE\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#=============================================================================\n\n# Register imported libraries:\n\n# 1. If we can find a Windows .dll file (or if we can find both Debug and\n\n#    Release libraries), we will set appropriate target properties for these.\n\n# 2. However, for most systems, we will only register the import location and\n\n#    include directory.\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Look for dlls, or Release and Debug libraries.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Windows systems with dll libraries.\n",
        "Line" : 181,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Windows with dlls, but only Release libraries.\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# If we have both Debug and Release libraries\n",
        "Line" : 200,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# For all other environments (ones without dll libraries), create\n\n# the imported library targets.\n",
        "Line" : 214,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 17
    },
    "deps/src/cmake-3.13.4/Modules/FindGTK.cmake" : {
      "ObjectId" : "d4c07d9a69f586439daf94b8b9fcbc5f0f667d69",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindGTK\n\n# -------\n\n#\n\n# try to find GTK (and glib) and GTKGLArea\n\n#\n\n# ::\n\n#\n\n#   GTK_INCLUDE_DIR   - Directories to include to use GTK\n\n#   GTK_LIBRARIES     - Files to link against to use GTK\n\n#   GTK_FOUND         - GTK was found\n\n#   GTK_GL_FOUND      - GTK's GL features were found\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# don't even bother under WIN32\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Some Linux distributions (e.g. Red Hat) have glibconfig.h\n\n# and glib.h in different directories, so we need to look\n\n# for both.\n\n#  - Atanas Georgiev <atanas@cs.columbia.edu>\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#\n\n# The 12 suffix is thanks to the FreeBSD ports collection\n\n#\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Assume that if gtk and glib were found, the other\n\n# supporting libraries have also been found.\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/FindGTK2.cmake" : {
      "ObjectId" : "15d123059d31719c123bf5c9c8c82264f7a3bb22",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindGTK2\n\n# --------\n\n#\n\n# FindGTK2.cmake\n\n#\n\n# This module can find the GTK2 widget libraries and several of its\n\n# other optional components like gtkmm, glade, and glademm.\n\n#\n\n# NOTE: If you intend to use version checking, CMake 2.6.2 or later is\n\n#\n\n# ::\n\n#\n\n#        required.\n\n#\n\n#\n\n#\n\n# Specify one or more of the following components as you call this find\n\n# module.  See example below.\n\n#\n\n# ::\n\n#\n\n#    gtk\n\n#    gtkmm\n\n#    glade\n\n#    glademm\n\n#\n\n#\n\n#\n\n# The following variables will be defined for your use\n\n#\n\n# ::\n\n#\n\n#    GTK2_FOUND - Were all of your specified components found?\n\n#    GTK2_INCLUDE_DIRS - All include directories\n\n#    GTK2_LIBRARIES - All libraries\n\n#    GTK2_TARGETS - All imported targets\n\n#    GTK2_DEFINITIONS - Additional compiler flags\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    GTK2_VERSION - The version of GTK2 found (x.y.z)\n\n#    GTK2_MAJOR_VERSION - The major version of GTK2\n\n#    GTK2_MINOR_VERSION - The minor version of GTK2\n\n#    GTK2_PATCH_VERSION - The patch version of GTK2\n\n#\n\n#\n\n#\n\n# Optional variables you can define prior to calling this module:\n\n#\n\n# ::\n\n#\n\n#    GTK2_DEBUG - Enables verbose debugging of the module\n\n#    GTK2_ADDITIONAL_SUFFIXES - Allows defining additional directories to\n\n#                               search for include files\n\n#\n\n#\n\n#\n\n# ================= Example Usage:\n\n#\n\n# ::\n\n#\n\n#    Call find_package() once, here are some examples to pick from:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    Require GTK 2.6 or later\n\n#        find_package(GTK2 2.6 REQUIRED gtk)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    Require GTK 2.10 or later and Glade\n\n#        find_package(GTK2 2.10 REQUIRED gtk glade)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    Search for GTK/GTKMM 2.8 or later\n\n#        find_package(GTK2 2.8 COMPONENTS gtk gtkmm)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    if(GTK2_FOUND)\n\n#       include_directories(${GTK2_INCLUDE_DIRS})\n\n#       add_executable(mygui mygui.cc)\n\n#       target_link_libraries(mygui ${GTK2_LIBRARIES})\n\n#    endif()\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Version 1.6 (CMake 3.0)\n\n#   * Create targets for each library\n\n#   * Do not link libfreetype\n\n# Version 1.5 (CMake 2.8.12)\n\n#   * 14236: Detect gthread library\n\n#            Detect pangocairo on windows\n\n#            Detect pangocairo with gtk module instead of with gtkmm\n\n#   * 14259: Use vc100 libraries with VS 11\n\n#   * 14260: Export a GTK2_DEFINITIONS variable to set /vd2 when appropriate\n\n#            (i.e. MSVC)\n\n#   * Use the optimized/debug syntax for _LIBRARY and _LIBRARIES variables when\n\n#     appropriate. A new set of _RELEASE variables was also added.\n\n#   * Remove GTK2_SKIP_MARK_AS_ADVANCED option, as now the variables are\n\n#     marked as advanced by SelectLibraryConfigurations\n\n#   * Detect gmodule, pangoft2 and pangoxft libraries\n\n# Version 1.4 (10/4/2012) (CMake 2.8.10)\n\n#   * 12596: Missing paths for FindGTK2 on NetBSD\n\n#   * 12049: Fixed detection of GTK include files in the lib folder on\n\n#            multiarch systems.\n\n# Version 1.3 (11/9/2010) (CMake 2.8.4)\n\n#   * 11429: Add support for detecting GTK2 built with Visual Studio 10.\n\n#            Thanks to Vincent Levesque for the patch.\n\n# Version 1.2 (8/30/2010) (CMake 2.8.3)\n\n#   * Merge patch for detecting gdk-pixbuf library (split off\n\n#     from core GTK in 2.21).  Thanks to Vincent Untz for the patch\n\n#     and Ricardo Cruz for the heads up.\n\n# Version 1.1 (8/19/2010) (CMake 2.8.3)\n\n#   * Add support for detecting GTK2 under macports (thanks to Gary Kramlich)\n\n# Version 1.0 (8/12/2010) (CMake 2.8.3)\n\n#   * Add support for detecting new pangommconfig.h header file\n\n#     (Thanks to Sune Vuorela & the Debian Project for the patch)\n\n#   * Add support for detecting fontconfig.h header\n\n#   * Call find_package(Freetype) since it's required\n\n#   * Add support for allowing users to add additional library directories\n\n#     via the GTK2_ADDITIONAL_SUFFIXES variable (kind of a future-kludge in\n\n#     case the GTK developers change versions on any of the directories in the\n\n#     future).\n\n# Version 0.8 (1/4/2010)\n\n#   * Get module working under MacOSX fink by adding /sw/include, /sw/lib\n\n#     to PATHS and the gobject library\n\n# Version 0.7 (3/22/09)\n\n#   * Checked into CMake CVS\n\n#   * Added versioning support\n\n#   * Module now defaults to searching for GTK if COMPONENTS not specified.\n\n#   * Added HKCU prior to HKLM registry key and GTKMM specific environment\n\n#      variable as per mailing list discussion.\n\n#   * Added lib64 to include search path and a few other search paths where GTK\n\n#      may be installed on Unix systems.\n\n#   * Switched to lowercase CMake commands\n\n#   * Prefaced internal variables with _GTK2 to prevent collision\n\n#   * Changed internal macros to functions\n\n#   * Enhanced documentation\n\n# Version 0.6 (1/8/08)\n\n#   Added GTK2_SKIP_MARK_AS_ADVANCED option\n\n# Version 0.5 (12/19/08)\n\n#   Second release to cmake mailing list\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=============================================================\n\n# _GTK2_GET_VERSION\n\n# Internal function to parse the version number in gtkversion.h\n\n#   _OUT_major = Major version number\n\n#   _OUT_minor = Minor version number\n\n#   _OUT_micro = Micro version number\n\n#   _gtkversion_hdr = Header file to parse\n\n#=============================================================\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#=============================================================\n\n# _GTK2_SIGCXX_GET_VERSION\n\n# Internal function to parse the version number in\n\n# sigc++config.h\n\n#   _OUT_major = Major version number\n\n#   _OUT_minor = Minor version number\n\n#   _OUT_micro = Micro version number\n\n#   _sigcxxversion_hdr = Header file to parse\n\n#=============================================================\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The header does not have the version macros; assume it is ``0.0.0``.\n",
        "Line" : 226,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#=============================================================\n\n# _GTK2_FIND_INCLUDE_DIR\n\n# Internal function to find the GTK include directories\n\n#   _var = variable to set (_INCLUDE_DIR is appended)\n\n#   _hdr = header file to look for\n\n#=============================================================\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If these ever change, things will break.\n",
        "Line" : 248,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#\n\n# NOTE: The following suffixes cause searching for header files in both of\n\n# these directories:\n\n#         /usr/include/<pkg>\n\n#         /usr/lib/<pkg>/include\n\n#\n",
        "Line" : 268,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# for /usr/lib/gtk-2.0/include\n",
        "Line" : 278,
        "CharPositionInLine" : 45
      },
      "10" : {
        "Text" : "#=============================================================\n\n# _GTK2_FIND_LIBRARY\n\n# Internal function to find libraries packaged with GTK2\n\n#   _var = library variable to create (_LIBRARY is appended)\n\n#=============================================================\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Not GTK versions per se but the versions encoded into Windows\n\n# import libraries (GtkMM 2.14.1 has a gtkmm-vc80-2_4.lib for example)\n\n# Also the MSVC libraries use _ for . (this is handled below)\n",
        "Line" : 340,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Add vc80/vc90/vc100 midfixes\n",
        "Line" : 354,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Up to gtkmm-win 2.22.0-2 there are no vc110 libraries but vc100 can be used\n",
        "Line" : 358,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "# For some silly reason the MSVC libraries use _ instead of .\n\n# in the version fields\n",
        "Line" : 386,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# And for debug\n",
        "Line" : 395,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Copy list back to original names\n",
        "Line" : 402,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "#=============================================================\n\n# _GTK2_ADD_TARGET\n\n# Internal function to create targets for GTK2\n\n#   _var = target to create\n\n#=============================================================\n",
        "Line" : 516,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Do not create the target if dependencies are missing\n",
        "Line" : 533,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "#=============================================================\n",
        "Line" : 589,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\n\n# main()\n\n#\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Assume they only want GTK\n",
        "Line" : 602,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#\n\n# If specified, enforce version number\n\n#\n",
        "Line" : 606,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# If we can't find the GTK include dir, we can't do version checking\n",
        "Line" : 634,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# If the version check fails, exit out of the module here\n",
        "Line" : 650,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "#\n\n# On MSVC, according to https://wiki.gnome.org/gtkmm/MSWindows, the /vd2 flag needs to be\n\n# passed to the compiler in order to use gtkmm\n\n#\n",
        "Line" : 655,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#\n\n# Find all components\n\n#\n",
        "Line" : 669,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Left for compatibility with previous versions.\n",
        "Line" : 680,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# Since sigc++ 2.5.1 c++11 support is required\n",
        "Line" : 764,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# These are the features needed by clients in order to include the\n\n# project headers:\n",
        "Line" : 771,
        "CharPositionInLine" : 16
      },
      "30" : {
        "Text" : "#\n\n# Solve for the GTK2 version if we haven't already\n\n#\n",
        "Line" : 861,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\n\n# Try to enforce components\n\n#\n",
        "Line" : 872,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# This gets set to GTK2_FOUND\n",
        "Line" : 876,
        "CharPositionInLine" : 40
      },
      "33" : {
        "Text" : "# Unset our variables.\n",
        "Line" : 941,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 34
    },
    "deps/src/cmake-3.13.4/Modules/FindGTest.cmake" : {
      "ObjectId" : "b0579d967324ad46b5d43c8593844b1790ebf54b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindGTest\n\n# ---------\n\n#\n\n# Locate the Google C++ Testing Framework.\n\n#\n\n# Imported targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``GTest::GTest``\n\n#   The Google Test ``gtest`` library, if found; adds Thread::Thread\n\n#   automatically\n\n# ``GTest::Main``\n\n#   The Google Test ``gtest_main`` library, if found\n\n#\n\n#\n\n# Result variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``GTEST_FOUND``\n\n#   Found the Google Testing framework\n\n# ``GTEST_INCLUDE_DIRS``\n\n#   the directory containing the Google Test headers\n\n#\n\n# The library variables below are set as normal variables.  These\n\n# contain debug/optimized keywords when a debugging library is found.\n\n#\n\n# ``GTEST_LIBRARIES``\n\n#   The Google Test ``gtest`` library; note it also requires linking\n\n#   with an appropriate thread library\n\n# ``GTEST_MAIN_LIBRARIES``\n\n#   The Google Test ``gtest_main`` library\n\n# ``GTEST_BOTH_LIBRARIES``\n\n#   Both ``gtest`` and ``gtest_main``\n\n#\n\n# Cache variables\n\n# ^^^^^^^^^^^^^^^\n\n#\n\n# The following cache variables may also be set:\n\n#\n\n# ``GTEST_ROOT``\n\n#   The root directory of the Google Test installation (may also be\n\n#   set as an environment variable)\n\n# ``GTEST_MSVC_SEARCH``\n\n#   If compiling with MSVC, this variable can be set to ``MT`` or\n\n#   ``MD`` (the default) to enable searching a GTest build tree\n\n#\n\n#\n\n# Example usage\n\n# ^^^^^^^^^^^^^\n\n#\n\n# ::\n\n#\n\n#     enable_testing()\n\n#     find_package(GTest REQUIRED)\n\n#\n\n#     add_executable(foo foo.cc)\n\n#     target_link_libraries(foo GTest::GTest GTest::Main)\n\n#\n\n#     add_test(AllTestsInFoo foo)\n\n#\n\n#\n\n# Deeper integration with CTest\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# See :module:`GoogleTest` for information on the :command:`gtest_add_tests`\n\n# and :command:`gtest_discover_tests` commands.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For now, at least, only Windows really needs to know the library type\n",
        "Line" : 114,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# If we get here, no determination was made from the above checks\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The provided /MD project files for Google Test add -md suffixes to the\n\n# library names.\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/FindGettext.cmake" : {
      "ObjectId" : "9623b85dd419cf11da15a900a9dd4956ce42d2ca",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindGettext\n\n# -----------\n\n#\n\n# Find GNU gettext tools\n\n#\n\n# This module looks for the GNU gettext tools.  This module defines the\n\n# following values:\n\n#\n\n# ::\n\n#\n\n#   GETTEXT_MSGMERGE_EXECUTABLE: the full path to the msgmerge tool.\n\n#   GETTEXT_MSGFMT_EXECUTABLE: the full path to the msgfmt tool.\n\n#   GETTEXT_FOUND: True if gettext has been found.\n\n#   GETTEXT_VERSION_STRING: the version of gettext found (since CMake 2.8.8)\n\n#\n\n#\n\n#\n\n# Additionally it provides the following macros:\n\n#\n\n# GETTEXT_CREATE_TRANSLATIONS ( outputFile [ALL] file1 ...  fileN )\n\n#\n\n# ::\n\n#\n\n#     This will create a target \"translations\" which will convert the\n\n#     given input po files into the binary output mo file. If the\n\n#     ALL option is used, the translations will also be created when\n\n#     building the default target.\n\n#\n\n# GETTEXT_PROCESS_POT_FILE( <potfile> [ALL] [INSTALL_DESTINATION <destdir>]\n\n# LANGUAGES <lang1> <lang2> ...  )\n\n#\n\n# ::\n\n#\n\n#      Process the given pot file to mo files.\n\n#      If INSTALL_DESTINATION is given then automatically install rules will\n\n#      be created, the language subdirectory will be taken into account\n\n#      (by default use share/locale/).\n\n#      If ALL is specified, the pot file is processed when building the all traget.\n\n#      It creates a custom target \"potfile\".\n\n#\n\n# GETTEXT_PROCESS_PO_FILES( <lang> [ALL] [INSTALL_DESTINATION <dir>]\n\n# PO_FILES <po1> <po2> ...  )\n\n#\n\n# ::\n\n#\n\n#      Process the given po files to mo files for the given language.\n\n#      If INSTALL_DESTINATION is given then automatically install rules will\n\n#      be created, the language subdirectory will be taken into account\n\n#      (by default use share/locale/).\n\n#      If ALL is specified, the po files are processed when building the all traget.\n\n#      It creates a custom target \"pofiles\".\n\n#\n\n# .. note::\n\n#   If you wish to use the Gettext library (libintl), use :module:`FindIntl`.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# make it a real variable, so we can modify it here\n",
        "Line" : 96,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindGit.cmake" : {
      "ObjectId" : "fae31eb835fbed5ee2a30420eeb8de5eaa5329c8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindGit\n\n# -------\n\n#\n\n# The module defines the following variables:\n\n#\n\n# ``GIT_EXECUTABLE``\n\n#   Path to Git command-line client.\n\n# ``Git_FOUND``, ``GIT_FOUND``\n\n#   True if the Git command-line client was found.\n\n# ``GIT_VERSION_STRING``\n\n#   The version of Git found.\n\n#\n\n# Example usage:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    find_package(Git)\n\n#    if(Git_FOUND)\n\n#      message(\"Git found: ${GIT_EXECUTABLE}\")\n\n#    endif()\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for 'git' or 'eg' (easy git)\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prefer .cmd variants on Windows unless running in a Makefile\n\n# in the MSYS shell.\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# GitHub search path for Windows\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# SourceTree search path for Windows\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# First search the PATH and specific locations.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Now look for installations in Git/ directories under typical installation\n\n# prefixes on Windows.  Exclude PATH from this search because VS 2017's\n\n# command prompt happens to have a PATH entry with a Git/ subdirectory\n\n# containing a minimal git not meant for general use.\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Modules/FindGnuTLS.cmake" : {
      "ObjectId" : "1a97d99ea729563b151923b93b6b8af1ce073016",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindGnuTLS\n\n# ----------\n\n#\n\n# Try to find the GNU Transport Layer Security library (gnutls)\n\n#\n\n#\n\n#\n\n# Once done this will define\n\n#\n\n# ::\n\n#\n\n#   GNUTLS_FOUND - System has gnutls\n\n#   GNUTLS_INCLUDE_DIR - The gnutls include directory\n\n#   GNUTLS_LIBRARIES - The libraries needed to use gnutls\n\n#   GNUTLS_DEFINITIONS - Compiler switches required for using gnutls\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note that this doesn't try to find the gnutls-extra package.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# in cache already\n",
        "Line" : 25,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# try using pkg-config to get the directories and then use these values\n\n# in the find_path() and find_library() calls\n\n# also fills in GNUTLS_DEFINITIONS, although that isn't normally useful\n",
        "Line" : 30,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/FindGnuplot.cmake" : {
      "ObjectId" : "aa4cd6c26ac3854bc7af18d31060eebae9932a04",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindGnuplot\n\n# -----------\n\n#\n\n# this module looks for gnuplot\n\n#\n\n#\n\n#\n\n# Once done this will define\n\n#\n\n# ::\n\n#\n\n#   GNUPLOT_FOUND - system has Gnuplot\n\n#   GNUPLOT_EXECUTABLE - the Gnuplot executable\n\n#   GNUPLOT_VERSION_STRING - the version of Gnuplot found (since CMake 2.8.8)\n\n#\n\n#\n\n#\n\n# GNUPLOT_VERSION_STRING will not work for old versions like 3.7.1.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for compatibility\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindHDF5.cmake" : {
      "ObjectId" : "41b10025bba476dad6ada558c036626e60c63f23",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindHDF5\n\n# --------\n\n#\n\n# Find HDF5, a library for reading and writing self describing array data.\n\n#\n\n#\n\n#\n\n# This module invokes the HDF5 wrapper compiler that should be installed\n\n# alongside HDF5.  Depending upon the HDF5 Configuration, the wrapper\n\n# compiler is called either h5cc or h5pcc.  If this succeeds, the module\n\n# will then call the compiler with the -show argument to see what flags\n\n# are used when compiling an HDF5 client application.\n\n#\n\n# The module will optionally accept the COMPONENTS argument.  If no\n\n# COMPONENTS are specified, then the find module will default to finding\n\n# only the HDF5 C library.  If one or more COMPONENTS are specified, the\n\n# module will attempt to find the language bindings for the specified\n\n# components.  The only valid components are C, CXX, Fortran, HL, and\n\n# Fortran_HL.  If the COMPONENTS argument is not given, the module will\n\n# attempt to find only the C bindings.\n\n#\n\n# This module will read the variable\n\n# HDF5_USE_STATIC_LIBRARIES to determine whether or not to prefer a\n\n# static link to a dynamic link for HDF5 and all of it's dependencies.\n\n# To use this feature, make sure that the HDF5_USE_STATIC_LIBRARIES\n\n# variable is set before the call to find_package.\n\n#\n\n# To provide the module with a hint about where to find your HDF5\n\n# installation, you can set the environment variable HDF5_ROOT.  The\n\n# Find module will then look in this path when searching for HDF5\n\n# executables, paths, and libraries.\n\n#\n\n# Both the serial and parallel HDF5 wrappers are considered and the first\n\n# directory to contain either one will be used.  In the event that both appear\n\n# in the same directory the serial version is preferentially selected. This\n\n# behavior can be reversed by setting the variable HDF5_PREFER_PARALLEL to\n\n# true.\n\n#\n\n# In addition to finding the includes and libraries required to compile\n\n# an HDF5 client application, this module also makes an effort to find\n\n# tools that come with the HDF5 distribution that may be useful for\n\n# regression testing.\n\n#\n\n# This module will define the following variables:\n\n#\n\n# ::\n\n#\n\n#   HDF5_FOUND - true if HDF5 was found on the system\n\n#   HDF5_VERSION - HDF5 version in format Major.Minor.Release\n\n#   HDF5_INCLUDE_DIRS - Location of the hdf5 includes\n\n#   HDF5_INCLUDE_DIR - Location of the hdf5 includes (deprecated)\n\n#   HDF5_DEFINITIONS - Required compiler definitions for HDF5\n\n#   HDF5_LIBRARIES - Required libraries for all requested bindings\n\n#   HDF5_HL_LIBRARIES - Required libraries for the HDF5 high level API for all\n\n#                       bindings, if the HL component is enabled\n\n#\n\n# Available components are: C CXX Fortran and HL.  For each enabled language\n\n# binding, a corresponding HDF5_${LANG}_LIBRARIES variable, and potentially\n\n# HDF5_${LANG}_DEFINITIONS, will be defined.\n\n# If the HL component is enabled, then an HDF5_${LANG}_HL_LIBRARIES will\n\n# also be defined.  With all components enabled, the following variables will be defined:\n\n#\n\n# ::\n\n#\n\n#   HDF5_C_DEFINITIONS -- Required compiler definitions for HDF5 C bindings\n\n#   HDF5_CXX_DEFINITIONS -- Required compiler definitions for HDF5 C++ bindings\n\n#   HDF5_Fortran_DEFINITIONS -- Required compiler definitions for HDF5 Fortran bindings\n\n#   HDF5_C_INCLUDE_DIRS -- Required include directories for HDF5 C bindings\n\n#   HDF5_CXX_INCLUDE_DIRS -- Required include directories for HDF5 C++ bindings\n\n#   HDF5_Fortran_INCLUDE_DIRS -- Required include directories for HDF5 Fortran bindings\n\n#   HDF5_C_LIBRARIES - Required libraries for the HDF5 C bindings\n\n#   HDF5_CXX_LIBRARIES - Required libraries for the HDF5 C++ bindings\n\n#   HDF5_Fortran_LIBRARIES - Required libraries for the HDF5 Fortran bindings\n\n#   HDF5_C_HL_LIBRARIES - Required libraries for the high level C bindings\n\n#   HDF5_CXX_HL_LIBRARIES - Required libraries for the high level C++ bindings\n\n#   HDF5_Fortran_HL_LIBRARIES - Required libraries for the high level Fortran\n\n#                               bindings.\n\n#\n\n#   HDF5_IS_PARALLEL - Whether or not HDF5 was found with parallel IO support\n\n#   HDF5_C_COMPILER_EXECUTABLE - the path to the HDF5 C wrapper compiler\n\n#   HDF5_CXX_COMPILER_EXECUTABLE - the path to the HDF5 C++ wrapper compiler\n\n#   HDF5_Fortran_COMPILER_EXECUTABLE - the path to the HDF5 Fortran wrapper compiler\n\n#   HDF5_C_COMPILER_EXECUTABLE_NO_INTERROGATE - path to the primary C compiler\n\n#                                               which is also the HDF5 wrapper\n\n#   HDF5_CXX_COMPILER_EXECUTABLE_NO_INTERROGATE - path to the primary C++\n\n#                                                 compiler which is also\n\n#                                                 the HDF5 wrapper\n\n#   HDF5_Fortran_COMPILER_EXECUTABLE_NO_INTERROGATE - path to the primary\n\n#                                                     Fortran compiler which\n\n#                                                     is also the HDF5 wrapper\n\n#   HDF5_DIFF_EXECUTABLE - the path to the HDF5 dataset comparison tool\n\n#\n\n# The following variable can be set to guide the search for HDF5 libraries and includes:\n\n#\n\n# ``HDF5_ROOT``\n\n#   Specify the path to the HDF5 installation to use.\n\n#\n\n# ``HDF5_FIND_DEBUG``\n\n#   Set to a true value to get some extra debugging output.\n\n#\n\n# ``HDF5_NO_FIND_PACKAGE_CONFIG_FILE``\n\n#   Set to a true value to skip trying to find ``hdf5-config.cmake``.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This module is maintained by Will Dicharry <wdicharry@stellarscience.com>.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List of the valid HDF5 components\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Validate the list of find components.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# add the extra specified components, ensuring that they are valid.\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# only for compatibility\n",
        "Line" : 129,
        "CharPositionInLine" : 44
      },
      "7" : {
        "Text" : "# replaced by Fortran and HL\n",
        "Line" : 147,
        "CharPositionInLine" : 52
      },
      "8" : {
        "Text" : "# Determine whether to search for serial or parallel executable first\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# We may have picked up some duplicates in various lists during the above\n\n# process for the language bindings (both the C and C++ bindings depend on\n\n# libz for example).  Remove the duplicates. It appears that the default\n\n# CMake behavior is to remove duplicates from the end of a list. However,\n\n# for link lines, this is incorrect since unresolved symbols are searched\n\n# for down the link line. Therefore, we reverse the list, remove the\n\n# duplicates, and then reverse it again to get the duplicates removed from\n\n# the beginning.\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Test first if the current compilers automatically wrap HDF5\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Invoke the HDF5 wrapper compiler.  The compiler return value is stored to the\n\n# return_value argument, the text output is stored to the output variable.\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Parse a compile line for definitions, includes, library paths, and libraries.\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# include directory\n",
        "Line" : 367,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# compile definition\n",
        "Line" : 370,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# library search path\n",
        "Line" : 373,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# library name (hl)\n",
        "Line" : 376,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# library name\n",
        "Line" : 379,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# library file\n",
        "Line" : 382,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Select a preferred imported configuration from a target\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# We will first assign the value to a local variable _imported_conf, then assign\n\n# it to the function argument at the end.\n",
        "Line" : 401,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Get available imported configurations by examining target properties\n",
        "Line" : 405,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Find the imported configuration that we prefer.\n\n# We do this by making list of configurations in order of preference,\n\n# starting with ${CMAKE_BUILD_TYPE} and ending with the first imported_conf\n",
        "Line" : 410,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# Now find the first of these that is present in imported_conf\n",
        "Line" : 419,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# support IN_LISTS\n",
        "Line" : 421,
        "CharPositionInLine" : 38
      },
      "25" : {
        "Text" : "# assign value to function argument\n",
        "Line" : 433,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Try to find HDF5 using an installed hdf5-config.cmake\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Some HDF5 versions (e.g. 1.8.18) used hdf5::hdf5 etc\n",
        "Line" : 461,
        "CharPositionInLine" : 12
      },
      "28" : {
        "Text" : "#Older versions of hdf5 don't have a static/shared suffix so\n\n#if we detect that occurrence clear the suffix\n",
        "Line" : 478,
        "CharPositionInLine" : 12
      },
      "29" : {
        "Text" : "#can't find this component with or without the suffix\n\n#so bail out, and let the following locate HDF5\n",
        "Line" : 482,
        "CharPositionInLine" : 16
      },
      "30" : {
        "Text" : "# Find library for this target. Complicated as on Windows with a DLL, we need to search for the import-lib.\n",
        "Line" : 493,
        "CharPositionInLine" : 12
      },
      "31" : {
        "Text" : "# no import lib, just try LOCATION\n",
        "Line" : 497,
        "CharPositionInLine" : 16
      },
      "32" : {
        "Text" : "# Only search for languages we've enabled\n",
        "Line" : 534,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# First check to see if our regular compiler is one of wrappers\n",
        "Line" : 536,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# If this language isn't using the wrapper, then try to seed the\n\n# search options with the wrapper\n",
        "Line" : 571,
        "CharPositionInLine" : 6
      },
      "35" : {
        "Text" : "# hdf5 library\n",
        "Line" : 600,
        "CharPositionInLine" : 14
      },
      "36" : {
        "Text" : "# external library\n",
        "Line" : 610,
        "CharPositionInLine" : 14
      },
      "37" : {
        "Text" : "# hdf5 library\n",
        "Line" : 632,
        "CharPositionInLine" : 16
      },
      "38" : {
        "Text" : "# external library\n",
        "Line" : 642,
        "CharPositionInLine" : 16
      },
      "39" : {
        "Text" : "# No arguments necessary, all languages can use the compiler wrappers\n",
        "Line" : 696,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Compiler wrappers aren't being used by the build but were found and used\n\n# to determine necessary include and library flags\n",
        "Line" : 701,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# seed the initial lists of libraries to find with items we know we need\n",
        "Line" : 738,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# find the HDF5 include directories\n",
        "Line" : 749,
        "CharPositionInLine" : 8
      },
      "43" : {
        "Text" : "# set the _DIRS variable as this is what the user will normally use\n",
        "Line" : 765,
        "CharPositionInLine" : 8
      },
      "44" : {
        "Text" : "# find the HDF5 libraries\n",
        "Line" : 769,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# According to bug 1643 on the CMake bug tracker, this is the\n\n# preferred method for searching for a static library.\n\n# See https://gitlab.kitware.com/cmake/cmake/issues/1643.  We search\n\n# first for the full static library name, but fall back to a\n\n# generic search on the name if the static search fails.\n",
        "Line" : 772,
        "CharPositionInLine" : 16
      },
      "46" : {
        "Text" : "# Append the libraries for this language binding to the list of all\n\n# required libraries.\n",
        "Line" : 805,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "# According to bug 1643 on the CMake bug tracker, this is the\n\n# preferred method for searching for a static library.\n\n# See https://gitlab.kitware.com/cmake/cmake/issues/1643.  We search\n\n# first for the full static library name, but fall back to a\n\n# generic search on the name if the static search fails.\n",
        "Line" : 812,
        "CharPositionInLine" : 20
      },
      "48" : {
        "Text" : "# Append the libraries for this language binding to the list of all\n\n# required libraries.\n",
        "Line" : 839,
        "CharPositionInLine" : 12
      },
      "49" : {
        "Text" : "# If the HDF5 include directory was found, open H5pubconf.h to determine if\n\n# HDF5 was compiled with parallel IO support\n",
        "Line" : 853,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# For backwards compatibility we set HDF5_INCLUDE_DIR to the value of\n\n# HDF5_INCLUDE_DIRS\n",
        "Line" : 892,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# If HDF5_REQUIRED_VARS is empty at this point, then it's likely that\n\n# something external is trying to explicitly pass already found\n\n# locations\n",
        "Line" : 898,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# hide HDF5_DIR for the non-advanced user to avoid confusion with\n\n# HDF5_DIR-NOT_FOUND while HDF5 was found.\n",
        "Line" : 914,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 53
    },
    "deps/src/cmake-3.13.4/Modules/FindHSPELL.cmake" : {
      "ObjectId" : "bb0e2f08e9082ba40d5a17c3d072ba245c3280de",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindHSPELL\n\n# ----------\n\n#\n\n# Try to find Hspell\n\n#\n\n# Once done this will define\n\n#\n\n# ::\n\n#\n\n#   HSPELL_FOUND - system has Hspell\n\n#   HSPELL_INCLUDE_DIR - the Hspell include directory\n\n#   HSPELL_LIBRARIES - The libraries needed to use Hspell\n\n#   HSPELL_DEFINITIONS - Compiler switches required for using Hspell\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#   HSPELL_VERSION_STRING - The version of Hspell found (x.y)\n\n#   HSPELL_MAJOR_VERSION  - the major version of Hspell\n\n#   HSPELL_MINOR_VERSION  - The minor version of Hspell\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindHTMLHelp.cmake" : {
      "ObjectId" : "6aab8a712b6c5be2df412c7b433aa5f25a7c7069",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindHTMLHelp\n\n# ------------\n\n#\n\n# This module looks for Microsoft HTML Help Compiler\n\n#\n\n# It defines:\n\n#\n\n# ::\n\n#\n\n#    HTML_HELP_COMPILER     : full path to the Compiler (hhc.exe)\n\n#    HTML_HELP_INCLUDE_PATH : include path to the API (htmlhelp.h)\n\n#    HTML_HELP_LIBRARY      : full path to the library (htmlhelp.lib)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindHg.cmake" : {
      "ObjectId" : "8aa553e792654436aacde4b2c2f8d35a182be54e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindHg\n\n# ------\n\n#\n\n# Extract information from a mercurial working copy.\n\n#\n\n# The module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#    HG_EXECUTABLE - path to mercurial command line client (hg)\n\n#    HG_FOUND - true if the command line client was found\n\n#    HG_VERSION_STRING - the version of mercurial found\n\n#\n\n# If the command line client executable is found the following macro is defined:\n\n#\n\n# ::\n\n#\n\n#   HG_WC_INFO(<dir> <var-prefix>)\n\n#\n\n# Hg_WC_INFO extracts information of a mercurial working copy\n\n# at a given location.  This macro defines the following variables:\n\n#\n\n# ::\n\n#\n\n#   <var-prefix>_WC_CHANGESET - current changeset\n\n#   <var-prefix>_WC_REVISION - current revision\n\n#\n\n# Example usage:\n\n#\n\n# ::\n\n#\n\n#    find_package(Hg)\n\n#    if(HG_FOUND)\n\n#      message(\"hg found: ${HG_EXECUTABLE}\")\n\n#      HG_WC_INFO(${PROJECT_SOURCE_DIR} Project)\n\n#      message(\"Current revision is ${Project_WC_REVISION}\")\n\n#      message(\"Current changeset is ${Project_WC_CHANGESET}\")\n\n#    endif()\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindICU.cmake" : {
      "ObjectId" : "aa531d5225cdc4bda9f8e18de6970b02779c41ae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindICU\n\n# -------\n\n#\n\n# Find the International Components for Unicode (ICU) libraries and\n\n# programs.\n\n#\n\n# This module supports multiple components.\n\n# Components can include any of: ``data``, ``i18n``, ``io``, ``le``,\n\n# ``lx``, ``test``, ``tu`` and ``uc``.\n\n#\n\n# Note that on Windows ``data`` is named ``dt`` and ``i18n`` is named\n\n# ``in``; any of the names may be used, and the appropriate\n\n# platform-specific library name will be automatically selected.\n\n#\n\n# This module reports information about the ICU installation in\n\n# several variables.  General variables::\n\n#\n\n#   ICU_VERSION - ICU release version\n\n#   ICU_FOUND - true if the main programs and libraries were found\n\n#   ICU_LIBRARIES - component libraries to be linked\n\n#   ICU_INCLUDE_DIRS - the directories containing the ICU headers\n\n#\n\n# Imported targets::\n\n#\n\n#   ICU::<C>\n\n#\n\n# Where ``<C>`` is the name of an ICU component, for example\n\n# ``ICU::i18n``.\n\n#\n\n# ICU programs are reported in::\n\n#\n\n#   ICU_GENCNVAL_EXECUTABLE - path to gencnval executable\n\n#   ICU_ICUINFO_EXECUTABLE - path to icuinfo executable\n\n#   ICU_GENBRK_EXECUTABLE - path to genbrk executable\n\n#   ICU_ICU-CONFIG_EXECUTABLE - path to icu-config executable\n\n#   ICU_GENRB_EXECUTABLE - path to genrb executable\n\n#   ICU_GENDICT_EXECUTABLE - path to gendict executable\n\n#   ICU_DERB_EXECUTABLE - path to derb executable\n\n#   ICU_PKGDATA_EXECUTABLE - path to pkgdata executable\n\n#   ICU_UCONV_EXECUTABLE - path to uconv executable\n\n#   ICU_GENCFU_EXECUTABLE - path to gencfu executable\n\n#   ICU_MAKECONV_EXECUTABLE - path to makeconv executable\n\n#   ICU_GENNORM2_EXECUTABLE - path to gennorm2 executable\n\n#   ICU_GENCCODE_EXECUTABLE - path to genccode executable\n\n#   ICU_GENSPREP_EXECUTABLE - path to gensprep executable\n\n#   ICU_ICUPKG_EXECUTABLE - path to icupkg executable\n\n#   ICU_GENCMN_EXECUTABLE - path to gencmn executable\n\n#\n\n# ICU component libraries are reported in::\n\n#\n\n#   ICU_<C>_FOUND - ON if component was found\n\n#   ICU_<C>_LIBRARIES - libraries for component\n\n#\n\n# ICU datafiles are reported in::\n\n#\n\n#   ICU_MAKEFILE_INC - Makefile.inc\n\n#   ICU_PKGDATA_INC - pkgdata.inc\n\n#\n\n# Note that ``<C>`` is the uppercased name of the component.\n\n#\n\n# This module reads hints about search results from::\n\n#\n\n#   ICU_ROOT - the root of the ICU installation\n\n#\n\n# The environment variable ``ICU_ROOT`` may also be used; the\n\n# ICU_ROOT variable takes precedence.\n\n#\n\n# The following cache variables may also be set::\n\n#\n\n#   ICU_<P>_EXECUTABLE - the path to executable <P>\n\n#   ICU_INCLUDE_DIR - the directory containing the ICU headers\n\n#   ICU_<C>_LIBRARY - the library for component <C>\n\n#\n\n# .. note::\n\n#\n\n#   In most cases none of the above variables will require setting,\n\n#   unless multiple ICU versions are available and a specific version\n\n#   is required.\n\n#\n\n# Other variables one may set to control this module are::\n\n#\n\n#   ICU_DEBUG - Set to ON to enable debug output from FindICU.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Written by Roger Leigh <rleigh@codelibre.net>\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The ICU checks are contained in a function due to the large number\n\n# of temporary variables needed.\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set up search paths, taking compiler into account.  Search ICU_ROOT,\n\n# with ICU_ROOT in the environment as a fallback if unset.\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Find include directory\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Get version\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# 64-bit binary directory\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# 64-bit library directory\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Find all ICU programs\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Find all ICU libraries\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# static icu libraries compiled with MSVC have the prefix 's'\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Special case deliberate library naming mismatches between Unix\n\n# and Windows builds\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Note there is no debug variant at present\n",
        "Line" : 197,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Note there is no debug variant at present\n",
        "Line" : 202,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# Find all ICU data files\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    },
    "deps/src/cmake-3.13.4/Modules/FindIce.cmake" : {
      "ObjectId" : "df76e5a66d9e8c856a34982c5a48ac6c112bb288",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindIce\n\n# -------\n\n#\n\n# Find the ZeroC Internet Communication Engine (ICE) programs,\n\n# libraries and datafiles.\n\n#\n\n# This module supports multiple components.\n\n# Components can include any of: ``Freeze``, ``Glacier2``, ``Ice``,\n\n# ``IceBox``, ``IceDB``, ``IceDiscovery``, ``IceGrid``,\n\n# ``IceLocatorDiscovery``, ``IcePatch``, ``IceSSL``, ``IceStorm``,\n\n# ``IceUtil``, ``IceXML``, or ``Slice``.\n\n#\n\n# Ice 3.7 and later also include C++11-specific components:\n\n# ``Glacier2++11``, ``Ice++11``, ``IceBox++11``, ``IceDiscovery++11``\n\n# ``IceGrid``, ``IceLocatorDiscovery++11``, ``IceSSL++11``,\n\n# ``IceStorm++11``\n\n#\n\n# Note that the set of supported components is Ice version-specific.\n\n#\n\n# This module reports information about the Ice installation in\n\n# several variables.  General variables::\n\n#\n\n#   Ice_VERSION - Ice release version\n\n#   Ice_FOUND - true if the main programs and libraries were found\n\n#   Ice_LIBRARIES - component libraries to be linked\n\n#   Ice_INCLUDE_DIRS - the directories containing the Ice headers\n\n#   Ice_SLICE_DIRS - the directories containing the Ice slice interface\n\n#                    definitions\n\n#\n\n# Imported targets::\n\n#\n\n#   Ice::<C>\n\n#\n\n# Where ``<C>`` is the name of an Ice component, for example\n\n# ``Ice::Glacier2`` or ``Ice++11``.\n\n#\n\n# Ice slice programs are reported in::\n\n#\n\n#   Ice_SLICE2CPP_EXECUTABLE - path to slice2cpp executable\n\n#   Ice_SLICE2CS_EXECUTABLE - path to slice2cs executable\n\n#   Ice_SLICE2FREEZEJ_EXECUTABLE - path to slice2freezej executable\n\n#   Ice_SLICE2FREEZE_EXECUTABLE - path to slice2freeze executable\n\n#   Ice_SLICE2HTML_EXECUTABLE - path to slice2html executable\n\n#   Ice_SLICE2JAVA_EXECUTABLE - path to slice2java executable\n\n#   Ice_SLICE2JS_EXECUTABLE - path to slice2js executable\n\n#   Ice_SLICE2OBJC_EXECUTABLE - path to slice2objc executable\n\n#   Ice_SLICE2PHP_EXECUTABLE - path to slice2php executable\n\n#   Ice_SLICE2PY_EXECUTABLE - path to slice2py executable\n\n#   Ice_SLICE2RB_EXECUTABLE - path to slice2rb executable\n\n#\n\n# Ice programs are reported in::\n\n#\n\n#   Ice_GLACIER2ROUTER_EXECUTABLE - path to glacier2router executable\n\n#   Ice_ICEBOX_EXECUTABLE - path to icebox executable\n\n#   Ice_ICEBOXXX11_EXECUTABLE - path to icebox++11 executable\n\n#   Ice_ICEBOXADMIN_EXECUTABLE - path to iceboxadmin executable\n\n#   Ice_ICEBOXD_EXECUTABLE - path to iceboxd executable\n\n#   Ice_ICEBOXNET_EXECUTABLE - path to iceboxnet executable\n\n#   Ice_ICEBRIDGE_EXECUTABLE - path to icebridge executable\n\n#   Ice_ICEGRIDADMIN_EXECUTABLE - path to icegridadmin executable\n\n#   Ice_ICEGRIDDB_EXECUTABLE - path to icegriddb executable\n\n#   Ice_ICEGRIDNODE_EXECUTABLE - path to icegridnode executable\n\n#   Ice_ICEGRIDNODED_EXECUTABLE - path to icegridnoded executable\n\n#   Ice_ICEGRIDREGISTRY_EXECUTABLE - path to icegridregistry executable\n\n#   Ice_ICEGRIDREGISTRYD_EXECUTABLE - path to icegridregistryd executable\n\n#   Ice_ICEPATCH2CALC_EXECUTABLE - path to icepatch2calc executable\n\n#   Ice_ICEPATCH2CLIENT_EXECUTABLE - path to icepatch2client executable\n\n#   Ice_ICEPATCH2SERVER_EXECUTABLE - path to icepatch2server executable\n\n#   Ice_ICESERVICEINSTALL_EXECUTABLE - path to iceserviceinstall executable\n\n#   Ice_ICESTORMADMIN_EXECUTABLE - path to icestormadmin executable\n\n#   Ice_ICESTORMDB_EXECUTABLE - path to icestormdb executable\n\n#   Ice_ICESTORMMIGRATE_EXECUTABLE - path to icestormmigrate executable\n\n#\n\n# Ice db programs (Windows only; standard system versions on all other\n\n# platforms) are reported in::\n\n#\n\n#   Ice_DB_ARCHIVE_EXECUTABLE - path to db_archive executable\n\n#   Ice_DB_CHECKPOINT_EXECUTABLE - path to db_checkpoint executable\n\n#   Ice_DB_DEADLOCK_EXECUTABLE - path to db_deadlock executable\n\n#   Ice_DB_DUMP_EXECUTABLE - path to db_dump executable\n\n#   Ice_DB_HOTBACKUP_EXECUTABLE - path to db_hotbackup executable\n\n#   Ice_DB_LOAD_EXECUTABLE - path to db_load executable\n\n#   Ice_DB_LOG_VERIFY_EXECUTABLE - path to db_log_verify executable\n\n#   Ice_DB_PRINTLOG_EXECUTABLE - path to db_printlog executable\n\n#   Ice_DB_RECOVER_EXECUTABLE - path to db_recover executable\n\n#   Ice_DB_STAT_EXECUTABLE - path to db_stat executable\n\n#   Ice_DB_TUNER_EXECUTABLE - path to db_tuner executable\n\n#   Ice_DB_UPGRADE_EXECUTABLE - path to db_upgrade executable\n\n#   Ice_DB_VERIFY_EXECUTABLE - path to db_verify executable\n\n#   Ice_DUMPDB_EXECUTABLE - path to dumpdb executable\n\n#   Ice_TRANSFORMDB_EXECUTABLE - path to transformdb executable\n\n#\n\n# Ice component libraries are reported in::\n\n#\n\n#   Ice_<C>_FOUND - ON if component was found\n\n#   Ice_<C>_LIBRARIES - libraries for component\n\n#\n\n# Note that ``<C>`` is the uppercased name of the component.\n\n#\n\n# This module reads hints about search results from::\n\n#\n\n#   Ice_HOME - the root of the Ice installation\n\n#\n\n# The environment variable ``ICE_HOME`` may also be used; the\n\n# Ice_HOME variable takes precedence.\n\n#\n\n# .. note::\n\n#   On Windows, Ice 3.7.0 and later provide libraries via the NuGet\n\n#   package manager.  Appropriate NuGet packages will be searched for\n\n#   using ``CMAKE_PREFIX_PATH``, or alternatively ``Ice_HOME`` may be\n\n#   set to the location of a specific NuGet package to restrict the\n\n#   search.\n\n#\n\n# The following cache variables may also be set::\n\n#\n\n#   Ice_<P>_EXECUTABLE - the path to executable <P>\n\n#   Ice_INCLUDE_DIR - the directory containing the Ice headers\n\n#   Ice_SLICE_DIR - the directory containing the Ice slice interface\n\n#                   definitions\n\n#   Ice_<C>_LIBRARY - the library for component <C>\n\n#\n\n# .. note::\n\n#\n\n#   In most cases none of the above variables will require setting,\n\n#   unless multiple Ice versions are available and a specific version\n\n#   is required.  On Windows, the most recent version of Ice will be\n\n#   found through the registry.  On Unix, the programs, headers and\n\n#   libraries will usually be in standard locations, but Ice_SLICE_DIRS\n\n#   might not be automatically detected (commonly known locations are\n\n#   searched).  All the other variables are defaulted using Ice_HOME,\n\n#   if set.  It's possible to set Ice_HOME and selectively specify\n\n#   alternative locations for the other components; this might be\n\n#   required for e.g. newer versions of Visual Studio if the\n\n#   heuristics are not sufficient to identify the correct programs and\n\n#   libraries for the specific Visual Studio version.\n\n#\n\n# Other variables one may set to control this module are::\n\n#\n\n#   Ice_DEBUG - Set to ON to enable debug output from FindIce.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Written by Roger Leigh <rleigh@codelibre.net>\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The Ice checks are contained in a function due to the large number\n\n# of temporary variables needed.\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Released versions of Ice, including generic short forms\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Set up search paths, taking compiler into account.  Search Ice_HOME,\n\n# with ICE_HOME in the environment as a fallback if unset.\n",
        "Line" : 232,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# 64-bit path suffix\n",
        "Line" : 250,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# 64-bit library directory\n",
        "Line" : 252,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Unknown version\n",
        "Line" : 268,
        "CharPositionInLine" : 11
      },
      "9" : {
        "Text" : "# For compatibility with ZeroC Windows builds.\n",
        "Line" : 273,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Earlier Ice (3.3) builds don't use vcnnn subdirectories, but are harmless to check.\n",
        "Line" : 279,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Generic 64-bit and 32-bit directories\n",
        "Line" : 285,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# On Windows, look in the registry for install locations.  Different\n\n# versions of Ice install support different compiler versions.\n",
        "Line" : 295,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Ice 3.3 releases use a Visual Studio year suffix and value is\n\n# enclosed in double quotes, though only the leading quote is\n\n# returned by get_filename_component.\n",
        "Line" : 319,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Ice 3.4+ releases don't use a suffix\n",
        "Line" : 334,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# Prefer 64-bit variants if present (and using a 64-bit compiler)\n",
        "Line" : 347,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Find all Ice programs\n",
        "Line" : 352,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Get version.\n",
        "Line" : 365,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Execute in C locale for safety\n",
        "Line" : 367,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# restore the previous LC_ALL\n",
        "Line" : 375,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Make short version\n",
        "Line" : 378,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Find include directory\n",
        "Line" : 387,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# In common use on Linux, MacOS X (homebrew) and FreeBSD; prefer\n\n# version-specific dir\n",
        "Line" : 402,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Find slice directory\n",
        "Line" : 412,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Find all Ice libraries\n",
        "Line" : 422,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 25
    },
    "deps/src/cmake-3.13.4/Modules/FindIconv.cmake" : {
      "ObjectId" : "bf20f6f7ea1e67a9912ecda837a1ae535edd37b4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindIconv\n---------\n\nThis module finds the ``iconv()`` POSIX.1 functions on the system.\nThese functions might be provided in the regular C library or externally\nin the form of an additional library.\n\nThe following variables are provided to indicate iconv support:\n\n.. variable:: Iconv_FOUND\n\n  Variable indicating if the iconv support was found.\n\n.. variable:: Iconv_INCLUDE_DIRS\n\n  The directories containing the iconv headers.\n\n.. variable:: Iconv_LIBRARIES\n\n  The iconv libraries to be linked.\n\n.. variable:: Iconv_IS_BUILT_IN\n\n  A variable indicating whether iconv support is stemming from the\n  C library or not. Even if the C library provides `iconv()`, the presence of\n  an external `libiconv` implementation might lead to this being false.\n\nAdditionally, the following :prop_tgt:`IMPORTED` target is being provided:\n\n.. variable:: Iconv::Iconv\n\n  Imported target for using iconv.\n\nThe following cache variables may also be set:\n\n.. variable:: Iconv_INCLUDE_DIR\n\n  The directory containing the iconv headers.\n\n.. variable:: Iconv_LIBRARY\n\n  The iconv library (if not implicitly given in the C library).\n\n.. note::\n  On POSIX platforms, iconv might be part of the C library and the cache\n  variables ``Iconv_INCLUDE_DIR`` and ``Iconv_LIBRARY`` might be empty.\n\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If neither C nor CXX are loaded, implicit iconv makes no sense.\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# iconv can only be provided in libc on a POSIX system.\n\n# If any cache variable is already set, we'll skip this test.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We always suppress the message here: Otherwise on supported systems\n\n# not having iconv in their C library (e.g. those using libiconv)\n\n# would always display a confusing \"Looking for iconv - not found\" message\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# The following code will not work, but it's sufficient to see if it compiles.\n\n# Note: libiconv will define the iconv functions as macros, so CheckSymbolExists\n\n# will not yield correct results.\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/FindIcotool.cmake" : {
      "ObjectId" : "26e95a0fafc2c7cf1e0a6d06a366b0ae558a45f0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindIcotool\n\n# -----------\n\n#\n\n# Find icotool\n\n#\n\n# This module looks for icotool.  This module defines the following\n\n# values:\n\n#\n\n# ::\n\n#\n\n#   ICOTOOL_EXECUTABLE: the full path to the icotool tool.\n\n#   ICOTOOL_FOUND: True if icotool has been found.\n\n#   ICOTOOL_VERSION_STRING: the version of icotool found.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindImageMagick.cmake" : {
      "ObjectId" : "6d94d3b682f4fa79dfe5ab74853979b997427c39",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindImageMagick\n\n# ---------------\n\n#\n\n# Find the ImageMagick binary suite.\n\n#\n\n# This module will search for a set of ImageMagick tools specified as\n\n# components in the FIND_PACKAGE call.  Typical components include, but\n\n# are not limited to (future versions of ImageMagick might have\n\n# additional components not listed here):\n\n#\n\n# ::\n\n#\n\n#   animate\n\n#   compare\n\n#   composite\n\n#   conjure\n\n#   convert\n\n#   display\n\n#   identify\n\n#   import\n\n#   mogrify\n\n#   montage\n\n#   stream\n\n#\n\n#\n\n#\n\n# If no component is specified in the FIND_PACKAGE call, then it only\n\n# searches for the ImageMagick executable directory.  This code defines\n\n# the following variables:\n\n#\n\n# ::\n\n#\n\n#   ImageMagick_FOUND                  - TRUE if all components are found.\n\n#   ImageMagick_EXECUTABLE_DIR         - Full path to executables directory.\n\n#   ImageMagick_<component>_FOUND      - TRUE if <component> is found.\n\n#   ImageMagick_<component>_EXECUTABLE - Full path to <component> executable.\n\n#   ImageMagick_VERSION_STRING         - the version of ImageMagick found\n\n#                                        (since CMake 2.8.8)\n\n#\n\n#\n\n#\n\n# ImageMagick_VERSION_STRING will not work for old versions like 5.2.3.\n\n#\n\n# There are also components for the following ImageMagick APIs:\n\n#\n\n# ::\n\n#\n\n#   Magick++\n\n#   MagickWand\n\n#   MagickCore\n\n#\n\n#\n\n#\n\n# For these components the following variables are set:\n\n#\n\n# ::\n\n#\n\n#   ImageMagick_FOUND                    - TRUE if all components are found.\n\n#   ImageMagick_INCLUDE_DIRS             - Full paths to all include dirs.\n\n#   ImageMagick_LIBRARIES                - Full paths to all libraries.\n\n#   ImageMagick_<component>_FOUND        - TRUE if <component> is found.\n\n#   ImageMagick_<component>_INCLUDE_DIRS - Full path to <component> include dirs.\n\n#   ImageMagick_<component>_LIBRARIES    - Full path to <component> libraries.\n\n#\n\n#\n\n#\n\n# Example Usages:\n\n#\n\n# ::\n\n#\n\n#   find_package(ImageMagick)\n\n#   find_package(ImageMagick COMPONENTS convert)\n\n#   find_package(ImageMagick COMPONENTS convert mogrify display)\n\n#   find_package(ImageMagick COMPONENTS Magick++)\n\n#   find_package(ImageMagick COMPONENTS Magick++ convert)\n\n#\n\n#\n\n#\n\n# Note that the standard FIND_PACKAGE features are supported (i.e.,\n\n# QUIET, REQUIRED, etc.).\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Helper functions\n\n#---------------------------------------------------------------------\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# old version have only indep dir\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Construct per-component include directories.\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Add the per-component include directories to the full include dirs.\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Start Actual Work\n\n#---------------------------------------------------------------------\n\n# Try to find a ImageMagick installation binary path.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find each component. Search for all tools in same dir\n\n# <ImageMagick_EXECUTABLE_DIR>; otherwise they should be found\n\n# independently and not in a cohesive module such as this one.\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# DEPRECATED: forced components for backward compatibility\n",
        "Line" : 196,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# if no components were requested explicitly put all (default) executables\n\n# in the list\n",
        "Line" : 243,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# No components were requested, and none of the default components were\n\n# found. Just insert mogrify into the list of the default components to\n\n# find so FPHSA below has something to check\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Standard Package Output\n\n#---------------------------------------------------------------------\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Maintain consistency with all other variables.\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---------------------------------------------------------------------\n\n# DEPRECATED: Setting variables for backward compatibility.\n\n#---------------------------------------------------------------------\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "deps/src/cmake-3.13.4/Modules/FindIntl.cmake" : {
      "ObjectId" : "f887721d643ddca9c8538719a0200879c0839493",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindIntl\n\n# --------\n\n#\n\n# Find the Gettext libintl headers and libraries.\n\n#\n\n# This module reports information about the Gettext libintl\n\n# installation in several variables.  General variables::\n\n#\n\n#   Intl_FOUND - true if the libintl headers and libraries were found\n\n#   Intl_INCLUDE_DIRS - the directory containing the libintl headers\n\n#   Intl_LIBRARIES - libintl libraries to be linked\n\n#\n\n# The following cache variables may also be set::\n\n#\n\n#   Intl_INCLUDE_DIR - the directory containing the libintl headers\n\n#   Intl_LIBRARY - the libintl library (if any)\n\n#\n\n# .. note::\n\n#   On some platforms, such as Linux with GNU libc, the gettext\n\n#   functions are present in the C standard library and libintl\n\n#   is not required.  ``Intl_LIBRARIES`` will be empty in this\n\n#   case.\n\n#\n\n# .. note::\n\n#   If you wish to use the Gettext tools (``msgmerge``,\n\n#   ``msgfmt``, etc.), use :module:`FindGettext`.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Written by Roger Leigh <rleigh@codelibre.net>\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find include directory\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find all Intl libraries\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/FindJNI.cmake" : {
      "ObjectId" : "fdddcc7e08a8abdfdb6c37a2a8657a8221dcda4e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindJNI\n-------\n\nFind Java Native Interface (JNI) libraries.\n\nJNI enables Java code running in a Java Virtual Machine (JVM) to call\nand be called by native applications and libraries written in other\nlanguages such as C, C++.\n\nThis module finds if Java is installed and determines where the\ninclude files and libraries are.  It also determines what the name of\nthe library is.  The caller may set variable ``JAVA_HOME`` to specify a\nJava installation prefix explicitly.\n\nResult Variables\n^^^^^^^^^^^^^^^^\n\nThis module sets the following result variables:\n\n``JNI_INCLUDE_DIRS``\n  the include dirs to use\n``JNI_LIBRARIES``\n  the libraries to use (JAWT and JVM)\n``JNI_FOUND``\n  TRUE if JNI headers and libraries were found.\n\nCache Variables\n^^^^^^^^^^^^^^^\n\nThe following cache variables are also available to set or use:\n\n``JAVA_AWT_LIBRARY``\n  the path to the Java AWT Native Interface (JAWT) library\n``JAVA_JVM_LIBRARY``\n  the path to the Java Virtual Machine (JVM) library\n``JAVA_INCLUDE_PATH``\n  the include path to jni.h\n``JAVA_INCLUDE_PATH2``\n  the include path to jni_md.h and jniport.h\n``JAVA_AWT_INCLUDE_PATH``\n  the include path to jawt.h\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Expand {libarch} occurrences to java_libarch subdirectory(-ies) and set ${_var}\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Determine java arch-specific library subdir\n\n# Mostly based on openjdk/jdk/make/common/shared/Platform.gmk as of openjdk\n\n# 1.6.0_18 + icedtea patches. However, it would be much better to base the\n\n# guess on the first part of the GNU config.guess platform triplet.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Subdir is \"arm\" for both big-endian (arm) and little-endian (armel).\n",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# mips* machines are bi-endian mostly so processor does not tell\n\n# endianness of the underlying system.\n",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Both flavours can run on the same processor\n",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# s390 binaries can run on s390x machines\n",
        "Line" : 86,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Append default list architectures if CMAKE_SYSTEM_PROCESSOR was empty or\n\n# system is non-Linux (where the code above has not been well tested)\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Sometimes ${CMAKE_SYSTEM_PROCESSOR} is added to the list to prefer\n\n# current value to a hardcoded list. Remove possible duplicates.\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Save CMAKE_FIND_FRAMEWORK\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# sort versions. Most recent first\n\n## handle version 9 apart from other versions to get correct ordering\n",
        "Line" : 153,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# can this one be removed according to #8821 ? Alex\n",
        "Line" : 199,
        "CharPositionInLine" : 59
      },
      "13" : {
        "Text" : "# fedora\n",
        "Line" : 201,
        "CharPositionInLine" : 67
      },
      "14" : {
        "Text" : "# Debian specific paths for default JVM\n",
        "Line" : 202,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Arch Linux specific paths for default JVM\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Ubuntu specific paths for default JVM\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Ubuntu 18.04 LTS\n\n# Ubuntu 15.10\n\n# Ubuntu 15.10\n\n# Ubuntu 15.10\n",
        "Line" : 210,
        "CharPositionInLine" : 62
      },
      "18" : {
        "Text" : "# OpenBSD specific paths for default JVM\n",
        "Line" : 214,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# SuSE specific paths for default JVM\n",
        "Line" : 219,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# IBM SDK, Java Technology Edition, specific paths\n",
        "Line" : 230,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# can this one be removed according to #8821 ? Alex\n",
        "Line" : 262,
        "CharPositionInLine" : 49
      },
      "22" : {
        "Text" : "# ubuntu 15.10\n\n# ubuntu 15.10\n\n# ubuntu 15.10\n",
        "Line" : 264,
        "CharPositionInLine" : 49
      },
      "23" : {
        "Text" : "# Debian specific path for default JVM\n",
        "Line" : 271,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Arch specific path for default JVM\n",
        "Line" : 273,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# OpenBSD specific path for default JVM\n",
        "Line" : 275,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# SuSE specific paths for default JVM\n",
        "Line" : 278,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Find headers matching the library.\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# add in the include path\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Restore CMAKE_FIND_FRAMEWORK\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "deps/src/cmake-3.13.4/Modules/FindJPEG.cmake" : {
      "ObjectId" : "7290724ce0abd49353fac8efb34ae7e9af0f86f0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindJPEG\n\n# --------\n\n#\n\n# Find the JPEG library (libjpeg)\n\n#\n\n# Imported targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``JPEG::JPEG``\n\n#   The JPEG library, if found.\n\n#\n\n# Result variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``JPEG_FOUND``\n\n#   If false, do not try to use JPEG.\n\n# ``JPEG_INCLUDE_DIRS``\n\n#   where to find jpeglib.h, etc.\n\n# ``JPEG_LIBRARIES``\n\n#   the libraries needed to use JPEG.\n\n# ``JPEG_VERSION``\n\n#   the version of the JPEG library found\n\n#\n\n# Cache variables\n\n# ^^^^^^^^^^^^^^^\n\n#\n\n# The following cache variables may also be set:\n\n#\n\n# ``JPEG_INCLUDE_DIRS``\n\n#   where to find jpeglib.h, etc.\n\n# ``JPEG_LIBRARY_RELEASE``\n\n#   where to find the JPEG library (optimized).\n\n# ``JPEG_LIBRARY_DEBUG``\n\n#   where to find the JPEG library (debug).\n\n#\n\n# Obsolete variables\n\n# ^^^^^^^^^^^^^^^^^^\n\n#\n\n# ``JPEG_INCLUDE_DIR``\n\n#   where to find jpeglib.h, etc. (same as JPEG_INCLUDE_DIRS)\n\n# ``JPEG_LIBRARY``\n\n#   where to find the JPEG library.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# libjpeg-turbo sticks JPEG_LIB_VERSION in jconfig.h\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindJasper.cmake" : {
      "ObjectId" : "db766576b035edd0269f5427550b49ee2f3a9e9a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindJasper\n\n# ----------\n\n#\n\n# Try to find the Jasper JPEG2000 library\n\n#\n\n# Once done this will define\n\n#\n\n# ::\n\n#\n\n#   JASPER_FOUND - system has Jasper\n\n#   JASPER_INCLUDE_DIR - the Jasper include directory\n\n#   JASPER_LIBRARIES - the libraries needed to use Jasper\n\n#   JASPER_VERSION_STRING - the version of Jasper found (since CMake 2.8.8)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindJava.cmake" : {
      "ObjectId" : "bcdf166fdf60779397ab4ea1deaa4ca0be034ee2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindJava\n\n# --------\n\n#\n\n# Find Java\n\n#\n\n# This module finds if Java is installed and determines where the\n\n# include files and libraries are.  The caller may set variable ``JAVA_HOME``\n\n# to specify a Java installation prefix explicitly.\n\n#\n\n# See also the :module:`FindJNI` module to find Java Native Interface (JNI).\n\n#\n\n# Specify one or more of the following components as you call this find module. See example below.\n\n#\n\n# ::\n\n#\n\n#   Runtime     = Java Runtime Environment used to execute Java byte-compiled applications\n\n#   Development = Development tools (java, javac, javah, jar and javadoc), includes Runtime component\n\n#   IdlJ        = Interface Description Language (IDL) to Java compiler\n\n#   JarSigner   = Signer and verifier tool for Java Archive (JAR) files\n\n#\n\n#\n\n# This module sets the following result variables:\n\n#\n\n# ::\n\n#\n\n#   Java_JAVA_EXECUTABLE      = the full path to the Java runtime\n\n#   Java_JAVAC_EXECUTABLE     = the full path to the Java compiler\n\n#   Java_JAVAH_EXECUTABLE     = the full path to the Java header generator\n\n#   Java_JAVADOC_EXECUTABLE   = the full path to the Java documentation generator\n\n#   Java_IDLJ_EXECUTABLE      = the full path to the Java idl compiler\n\n#   Java_JAR_EXECUTABLE       = the full path to the Java archiver\n\n#   Java_JARSIGNER_EXECUTABLE = the full path to the Java jar signer\n\n#   Java_VERSION_STRING       = Version of java found, eg. 1.6.0_12\n\n#   Java_VERSION_MAJOR        = The major version of the package found.\n\n#   Java_VERSION_MINOR        = The minor version of the package found.\n\n#   Java_VERSION_PATCH        = The patch version of the package found.\n\n#   Java_VERSION_TWEAK        = The tweak version of the package found (after '_')\n\n#   Java_VERSION              = This is set to: $major[.$minor[.$patch[.$tweak]]]\n\n#\n\n#\n\n#\n\n# The minimum required version of Java can be specified using the\n\n# :command:`find_package` syntax, e.g.\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   find_package(Java 1.8)\n\n#\n\n# NOTE: ``${Java_VERSION}`` and ``${Java_VERSION_STRING}`` are not guaranteed to\n\n# be identical.  For example some java version may return:\n\n# ``Java_VERSION_STRING = 1.8.0_17`` and ``Java_VERSION = 1.8.0.17``\n\n#\n\n# another example is the Java OEM, with: ``Java_VERSION_STRING = 1.8.0-oem``\n\n# and ``Java_VERSION = 1.8.0``\n\n#\n\n# For these components the following variables are set:\n\n#\n\n# ::\n\n#\n\n#   Java_FOUND                    - TRUE if all components are found.\n\n#   Java_<component>_FOUND        - TRUE if <component> is found.\n\n#\n\n#\n\n#\n\n# Example Usages:\n\n#\n\n# ::\n\n#\n\n#   find_package(Java)\n\n#   find_package(Java 1.8 REQUIRED)\n\n#   find_package(Java COMPONENTS Runtime)\n\n#   find_package(Java COMPONENTS Development)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The HINTS option should only be used for values computed from the system.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# sort versions. Most recent first\n\n## handle version 9 apart from other versions to get correct ordering\n",
        "Line" : 94,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# search for installed versions for version 9 and upper\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Hard-coded guesses should still go in PATHS. This ensures that the user\n\n# environment can always override hard guesses.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# sun-java output to stderr\n",
        "Line" : 158,
        "CharPositionInLine" : 25
      },
      "7" : {
        "Text" : "# Extract version components (up to 4 levels) from \"java -version\" output.\n",
        "Line" : 171,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Sun, GCJ, older OpenJDK\n",
        "Line" : 174,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# OpenJDK\n",
        "Line" : 189,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# OpenJDK 9 early access builds or locally built\n",
        "Line" : 204,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Kaffe style\n",
        "Line" : 211,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# User just want to execute some Java byte-compiled\n",
        "Line" : 283,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Check for Development\n",
        "Line" : 329,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# LEGACY\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "deps/src/cmake-3.13.4/Modules/FindKDE3.cmake" : {
      "ObjectId" : "50a25f3493d3beac64ae695ac9ae249c69571c83",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindKDE3\n\n# --------\n\n#\n\n# Find the KDE3 include and library dirs, KDE preprocessors and define a some macros\n\n#\n\n#\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ``KDE3_DEFINITIONS``\n\n#   compiler definitions required for compiling KDE software\n\n# ``KDE3_INCLUDE_DIR``\n\n#   the KDE include directory\n\n# ``KDE3_INCLUDE_DIRS``\n\n#   the KDE and the Qt include directory, for use with include_directories()\n\n# ``KDE3_LIB_DIR``\n\n#   the directory where the KDE libraries are installed, for use with link_directories()\n\n# ``QT_AND_KDECORE_LIBS``\n\n#   this contains both the Qt and the kdecore library\n\n# ``KDE3_DCOPIDL_EXECUTABLE``\n\n#   the dcopidl executable\n\n# ``KDE3_DCOPIDL2CPP_EXECUTABLE``\n\n#   the dcopidl2cpp executable\n\n# ``KDE3_KCFGC_EXECUTABLE``\n\n#   the kconfig_compiler executable\n\n# ``KDE3_FOUND``\n\n#   set to TRUE if all of the above has been found\n\n#\n\n# The following user adjustable options are provided:\n\n#\n\n# ``KDE3_BUILD_TESTS``\n\n#   enable this to build KDE testcases\n\n#\n\n# It also adds the following macros (from KDE3Macros.cmake) SRCS_VAR is\n\n# always the variable which contains the list of source files for your\n\n# application or library.\n\n#\n\n# KDE3_AUTOMOC(file1 ...  fileN)\n\n#\n\n# ::\n\n#\n\n#     Call this if you want to have automatic moc file handling.\n\n#     This means if you include \"foo.moc\" in the source file foo.cpp\n\n#     a moc file for the header foo.h will be created automatically.\n\n#     You can set the property SKIP_AUTOMAKE using set_source_files_properties()\n\n#     to exclude some files in the list from being processed.\n\n#\n\n#\n\n#\n\n# KDE3_ADD_MOC_FILES(SRCS_VAR file1 ...  fileN )\n\n#\n\n# ::\n\n#\n\n#     If you don't use the KDE3_AUTOMOC() macro, for the files\n\n#     listed here moc files will be created (named \"foo.moc.cpp\")\n\n#\n\n#\n\n#\n\n# KDE3_ADD_DCOP_SKELS(SRCS_VAR header1.h ...  headerN.h )\n\n#\n\n# ::\n\n#\n\n#     Use this to generate DCOP skeletions from the listed headers.\n\n#\n\n#\n\n#\n\n# KDE3_ADD_DCOP_STUBS(SRCS_VAR header1.h ...  headerN.h )\n\n#\n\n# ::\n\n#\n\n#      Use this to generate DCOP stubs from the listed headers.\n\n#\n\n#\n\n#\n\n# KDE3_ADD_UI_FILES(SRCS_VAR file1.ui ...  fileN.ui )\n\n#\n\n# ::\n\n#\n\n#     Use this to add the Qt designer ui files to your application/library.\n\n#\n\n#\n\n#\n\n# KDE3_ADD_KCFG_FILES(SRCS_VAR file1.kcfgc ...  fileN.kcfgc )\n\n#\n\n# ::\n\n#\n\n#     Use this to add KDE kconfig compiler files to your application/library.\n\n#\n\n#\n\n#\n\n# KDE3_INSTALL_LIBTOOL_FILE(target)\n\n#\n\n# ::\n\n#\n\n#     This will create and install a simple libtool file for the given target.\n\n#\n\n#\n\n#\n\n# KDE3_ADD_EXECUTABLE(name file1 ...  fileN )\n\n#\n\n# ::\n\n#\n\n#     Currently identical to add_executable(), may provide some advanced\n\n#     features in the future.\n\n#\n\n#\n\n#\n\n# KDE3_ADD_KPART(name [WITH_PREFIX] file1 ...  fileN )\n\n#\n\n# ::\n\n#\n\n#     Create a KDE plugin (KPart, kioslave, etc.) from the given source files.\n\n#     If WITH_PREFIX is given, the resulting plugin will have the prefix \"lib\",\n\n#     otherwise it won't.\n\n#     It creates and installs an appropriate libtool la-file.\n\n#\n\n#\n\n#\n\n# KDE3_ADD_KDEINIT_EXECUTABLE(name file1 ...  fileN )\n\n#\n\n# ::\n\n#\n\n#     Create a KDE application in the form of a module loadable via kdeinit.\n\n#     A library named kdeinit_<name> will be created and a small executable\n\n#     which links to it.\n\n#\n\n#\n\n#\n\n# The option KDE3_ENABLE_FINAL to enable all-in-one compilation is no\n\n# longer supported.\n\n#\n\n#\n\n#\n\n# Author: Alexander Neundorf <neundorf@kde.org>\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If Qt4 has already been found, fail.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(QT_MIN_VERSION \"3.0.0\")\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#this line includes FindQt.cmake, which searches the Qt library and headers\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#now try to find some kde stuff\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# at first the KDE include directory\n\n# kpassdlg.h comes from kdeui and doesn't exist in KDE4 anymore\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#now the KDE library directory\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#now search for the dcop utilities\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#SET KDE3_FOUND\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# add some KDE specific stuff\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# set compiler flags only if KDE3 has actually been found\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# use flags for gnu compiler\n",
        "Line" : 273,
        "CharPositionInLine" : 32
      },
      "13" : {
        "Text" : "# gnu gcc 2.96 does not work with flags\n\n# I guess 2.95 also doesn't then\n",
        "Line" : 276,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "#only on linux, but NOT e.g. on FreeBSD:\n",
        "Line" : 283,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "# works on FreeBSD, NOT tested on NetBSD and OpenBSD\n",
        "Line" : 290,
        "CharPositionInLine" : 3
      },
      "16" : {
        "Text" : "# if no special buildtype is selected, add -O2 as default optimization\n",
        "Line" : 296,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "#set(CMAKE_SHARED_LINKER_FLAGS \"-avoid-version -module -Wl,--no-undefined -Wl,--allow-shlib-undefined\")\n\n#set(CMAKE_SHARED_LINKER_FLAGS \"-Wl,--fatal-warnings -avoid-version -Wl,--no-undefined -lc\")\n\n#set(CMAKE_MODULE_LINKER_FLAGS \"-Wl,--fatal-warnings -avoid-version -Wl,--no-undefined -lc\")\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# KDE3Macros.cmake contains all the KDE specific macros\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#bail out if something wasn't found\n",
        "Line" : 347,
        "CharPositionInLine" : 3
      },
      "20" : {
        "Text" : "#add the found Qt and KDE include directories to the current include path\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "deps/src/cmake-3.13.4/Modules/FindKDE4.cmake" : {
      "ObjectId" : "bb98e53bdd7bc2b2592bf7e80bcb227ed9582d00",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindKDE4\n\n# --------\n\n#\n\n#\n\n#\n\n# Find KDE4 and provide all necessary variables and macros to compile\n\n# software for it.  It looks for KDE 4 in the following directories in\n\n# the given order:\n\n#\n\n# ::\n\n#\n\n#   CMAKE_INSTALL_PREFIX\n\n#   KDEDIRS\n\n#   /opt/kde4\n\n#\n\n#\n\n#\n\n# Please look in FindKDE4Internal.cmake and KDE4Macros.cmake for more\n\n# information.  They are installed with the KDE 4 libraries in\n\n# $KDEDIRS/share/apps/cmake/modules/.\n\n#\n\n# Author: Alexander Neundorf <neundorf@kde.org>\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If Qt3 has already been found, fail.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# when cross compiling, searching kde4-config in order to run it later on\n\n# doesn't make a lot of sense. We'll have to do something about this.\n\n# Searching always in the target environment ? Then we get at least the correct one,\n\n# still it can't be used to run it. Alex\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# For KDE4 kde-config has been renamed to kde4-config\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# the suffix must be used since KDEDIRS can be a list of directories which don't have bin/ appended\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# when cross compiling, KDE4_DATA_DIR may be already preset\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# when cross compiling, don't run kde4-config but use its location as install dir\n",
        "Line" : 68,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# then ask kde4-config for the kde data dirs\n",
        "Line" : 72,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# then check the data dirs for FindKDE4Internal.cmake\n",
        "Line" : 77,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# if it has been found...\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# use FindKDE4Internal.cmake to do the rest\n",
        "Line" : 96,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 12
    },
    "deps/src/cmake-3.13.4/Modules/FindLAPACK.cmake" : {
      "ObjectId" : "dc94079effe12776d4d6f4eafd2d316935ca10f7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindLAPACK\n\n# ----------\n\n#\n\n# Find LAPACK library\n\n#\n\n# This module finds an installed fortran library that implements the\n\n# LAPACK linear-algebra interface (see http://www.netlib.org/lapack/).\n\n#\n\n# The approach follows that taken for the autoconf macro file,\n\n# acx_lapack.m4 (distributed at\n\n# http://ac-archive.sourceforge.net/ac-archive/acx_lapack.html).\n\n#\n\n# This module sets the following variables:\n\n#\n\n# ::\n\n#\n\n#   LAPACK_FOUND - set to true if a library implementing the LAPACK interface\n\n#     is found\n\n#   LAPACK_LINKER_FLAGS - uncached list of required linker flags (excluding -l\n\n#     and -L).\n\n#   LAPACK_LIBRARIES - uncached list of libraries (using full path name) to\n\n#     link against to use LAPACK\n\n#   LAPACK95_LIBRARIES - uncached list of libraries (using full path name) to\n\n#     link against to use LAPACK95\n\n#   LAPACK95_FOUND - set to true if a library implementing the LAPACK f95\n\n#     interface is found\n\n#   BLA_STATIC  if set on this determines what kind of linkage we do (static)\n\n#   BLA_VENDOR  if set checks only the specified vendor, if not set checks\n\n#      all the possibilities\n\n#   BLA_F95     if set on tries to find the f95 interfaces for BLAS/LAPACK\n\n#\n\n# List of vendors (BLA_VENDOR) valid in this module:\n\n#\n\n# * Intel(mkl)\n\n# * OpenBLAS\n\n# * FLAME\n\n# * ACML\n\n# * Apple\n\n# * NAS\n\n# * Generic\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check the language being used\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: move this stuff to separate module\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This macro checks for the existence of the combination of fortran libraries\n\n# given by _list.  If the combination is found, this macro checks (using the\n\n# Check_Fortran_Function_Exists macro) whether can link against that library\n\n# combination using the name of a routine given by _name using the linker\n\n# flags given by _flags.  If the combination of libraries is found and passes\n\n# the link test, LIBRARIES is set to the list of complete library paths that\n\n# have been found.  Otherwise, LIBRARIES is set to FALSE.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# N.B. _prefix is the prefix applied to the names of all cached variables that\n\n# are generated internally and marked advanced by this macro.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# for ubuntu's libblas3gf and liblapack3gf packages\n",
        "Line" : 113,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Test this combination of libraries.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#  message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#message(\"DEBUG: ${LIBRARIES} = ${${LIBRARIES}}\")\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#acml lapack\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Apple LAPACK library?\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Generic LAPACK library?\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#intel lapack\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# old\n",
        "Line" : 294,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# new >= 10.3\n",
        "Line" : 297,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# old\n",
        "Line" : 307,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# new >= 10.3\n",
        "Line" : 310,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# First try empty lapack libs\n",
        "Line" : 315,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Then try the search libs\n",
        "Line" : 327,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 20
    },
    "deps/src/cmake-3.13.4/Modules/FindLATEX.cmake" : {
      "ObjectId" : "d1f4fa497527e1c1e4b74db32ec9ccbe6fa71c88",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindLATEX\n\n# ---------\n\n#\n\n# Find Latex\n\n#\n\n# This module finds an installed Latex and determines the location\n\n# of the compiler.  Additionally the module looks for Latex-related\n\n# software like BibTeX.\n\n#\n\n# This module sets the following result variables::\n\n#\n\n#   LATEX_FOUND:          whether found Latex and requested components\n\n#   LATEX_<component>_FOUND:  whether found <component>\n\n#   LATEX_COMPILER:       path to the LaTeX compiler\n\n#   PDFLATEX_COMPILER:    path to the PdfLaTeX compiler\n\n#   XELATEX_COMPILER:     path to the XeLaTeX compiler\n\n#   LUALATEX_COMPILER:    path to the LuaLaTeX compiler\n\n#   BIBTEX_COMPILER:      path to the BibTeX compiler\n\n#   BIBER_COMPILER:       path to the Biber compiler\n\n#   MAKEINDEX_COMPILER:   path to the MakeIndex compiler\n\n#   XINDY_COMPILER:       path to the xindy compiler\n\n#   DVIPS_CONVERTER:      path to the DVIPS converter\n\n#   DVIPDF_CONVERTER:     path to the DVIPDF converter\n\n#   PS2PDF_CONVERTER:     path to the PS2PDF converter\n\n#   PDFTOPS_CONVERTER:    path to the pdftops converter\n\n#   LATEX2HTML_CONVERTER: path to the LaTeX2Html converter\n\n#   HTLATEX_COMPILER:     path to the htlatex compiler\n\n#\n\n# Possible components are::\n\n#\n\n#   PDFLATEX\n\n#   XELATEX\n\n#   LUALATEX\n\n#   BIBTEX\n\n#   BIBER\n\n#   MAKEINDEX\n\n#   XINDY\n\n#   DVIPS\n\n#   DVIPDF\n\n#   PS2PDF\n\n#   PDFTOPS\n\n#   LATEX2HTML\n\n#   HTLATEX\n\n#\n\n# Example Usages::\n\n#\n\n#   find_package(LATEX)\n\n#   find_package(LATEX COMPONENTS PDFLATEX)\n\n#   find_package(LATEX COMPONENTS BIBTEX PS2PDF)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Try to find the MikTex binary path (look for its package manager).\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Try to find the GhostScript binary path (look for gswin32).\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# try to find Latex and the related programs\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# find pdflatex\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# find xelatex\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# find lualatex\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# find bibtex\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# find biber\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# find makeindex\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# find xindy\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# find dvips\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# find dvipdf\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# find ps2pdf\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# find pdftops\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# find latex2html\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# find htlatex\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "deps/src/cmake-3.13.4/Modules/FindLTTngUST.cmake" : {
      "ObjectId" : "00d5e7aed83d3c829074ce96305f886438d0f163",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindLTTngUST\n\n# ------------\n\n#\n\n# This module finds the `LTTng-UST <http://lttng.org/>`__ library.\n\n#\n\n# Imported target\n\n# ^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` target:\n\n#\n\n# ``LTTng::UST``\n\n#   The LTTng-UST library, if found\n\n#\n\n# Result variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module sets the following\n\n#\n\n# ``LTTNGUST_FOUND``\n\n#   ``TRUE`` if system has LTTng-UST\n\n# ``LTTNGUST_INCLUDE_DIRS``\n\n#   The LTTng-UST include directories\n\n# ``LTTNGUST_LIBRARIES``\n\n#   The libraries needed to use LTTng-UST\n\n# ``LTTNGUST_VERSION_STRING``\n\n#   The LTTng-UST version\n\n# ``LTTNGUST_HAS_TRACEF``\n\n#   ``TRUE`` if the ``tracef()`` API is available in the system's LTTng-UST\n\n# ``LTTNGUST_HAS_TRACELOG``\n\n#   ``TRUE`` if the ``tracelog()`` API is available in the system's LTTng-UST\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find tracef() and tracelog() support\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# get version\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# add libdl to required libraries\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/FindLibArchive.cmake" : {
      "ObjectId" : "38e512fa35d407d00b709b939660af492f3f3f11",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindLibArchive\n\n# --------------\n\n#\n\n# Find libarchive library and headers\n\n#\n\n# The module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#   LibArchive_FOUND        - true if libarchive was found\n\n#   LibArchive_INCLUDE_DIRS - include search path\n\n#   LibArchive_LIBRARIES    - libraries to link\n\n#   LibArchive_VERSION      - libarchive 3-component version number\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Extract the version number from the header.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The version string appears in one of three known formats in the header:\n\n#  #define ARCHIVE_LIBRARY_VERSION \"libarchive 2.4.12\"\n\n#  #define ARCHIVE_VERSION_STRING \"libarchive 2.8.4\"\n\n#  #define ARCHIVE_VERSION_ONLY_STRING \"3.2.0\"\n\n# Match any format.\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/FindLibLZMA.cmake" : {
      "ObjectId" : "d203eafa1953f08fc4d67a9116cd15898d96cfad",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindLibLZMA\n\n# -----------\n\n#\n\n# Find LibLZMA\n\n#\n\n# Find LibLZMA headers and library\n\n#\n\n# ::\n\n#\n\n#   LIBLZMA_FOUND             - True if liblzma is found.\n\n#   LIBLZMA_INCLUDE_DIRS      - Directory where liblzma headers are located.\n\n#   LIBLZMA_LIBRARIES         - Lzma libraries to link against.\n\n#   LIBLZMA_HAS_AUTO_DECODER  - True if lzma_auto_decoder() is found (required).\n\n#   LIBLZMA_HAS_EASY_ENCODER  - True if lzma_easy_encoder() is found (required).\n\n#   LIBLZMA_HAS_LZMA_PRESET   - True if lzma_lzma_preset() is found (required).\n\n#   LIBLZMA_VERSION_MAJOR     - The major version of lzma\n\n#   LIBLZMA_VERSION_MINOR     - The minor version of lzma\n\n#   LIBLZMA_VERSION_PATCH     - The patch version of lzma\n\n#   LIBLZMA_VERSION_STRING    - version number as a string (ex: \"5.0.3\")\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We're using new code known now as XZ, even library still been called LZMA\n\n# it can be found in http://tukaani.org/xz/\n\n# Avoid using old codebase\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindLibXml2.cmake" : {
      "ObjectId" : "615de49e336d00ae6b2b89a9bc568059d9b152f3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindLibXml2\n\n# -----------\n\n#\n\n# Find the XML processing library (libxml2).\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines :prop_tgt:`IMPORTED` target ``LibXml2::LibXml2``, if\n\n# libxml2 has been found.\n\n#\n\n# Result variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``LIBXML2_FOUND``\n\n#   true if libxml2 headers and libraries were found\n\n# ``LIBXML2_INCLUDE_DIR``\n\n#   the directory containing LibXml2 headers\n\n# ``LIBXML2_INCLUDE_DIRS``\n\n#   list of the include directories needed to use LibXml2\n\n# ``LIBXML2_LIBRARIES``\n\n#   LibXml2 libraries to be linked\n\n# ``LIBXML2_DEFINITIONS``\n\n#   the compiler switches required for using LibXml2\n\n# ``LIBXML2_XMLLINT_EXECUTABLE``\n\n#   path to the XML checking tool xmllint coming with LibXml2\n\n# ``LIBXML2_VERSION_STRING``\n\n#   the version of LibXml2 found (since CMake 2.8.8)\n\n#\n\n# Cache variables\n\n# ^^^^^^^^^^^^^^^\n\n#\n\n# The following cache variables may also be set:\n\n#\n\n# ``LIBXML2_INCLUDE_DIR``\n\n#   the directory containing LibXml2 headers\n\n# ``LIBXML2_LIBRARY``\n\n#   path to the LibXml2 library\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the find_path() and find_library() calls\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMake 3.9 and below used 'LIBXML2_LIBRARIES' as the name of\n\n# the cache entry storing the find_library result.  Use the\n\n# value if it was set by the project or user.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# for backwards compat. with KDE 4.0.x:\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/FindLibXslt.cmake" : {
      "ObjectId" : "abd1963d5d84e58804a6aa94b0140d3ac2a0dfe8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindLibXslt\n\n# -----------\n\n#\n\n# Try to find the LibXslt library\n\n#\n\n# Once done this will define\n\n#\n\n# ::\n\n#\n\n#   LIBXSLT_FOUND - system has LibXslt\n\n#   LIBXSLT_INCLUDE_DIR - the LibXslt include directory\n\n#   LIBXSLT_LIBRARIES - Link these to LibXslt\n\n#   LIBXSLT_DEFINITIONS - Compiler switches required for using LibXslt\n\n#   LIBXSLT_VERSION_STRING - version of LibXslt found (since CMake 2.8.8)\n\n#\n\n# Additionally, the following two variables are set (but not required\n\n# for using xslt):\n\n#\n\n# ``LIBXSLT_EXSLT_LIBRARIES``\n\n#   Link to these if you need to link against the exslt library.\n\n# ``LIBXSLT_XSLTPROC_EXECUTABLE``\n\n#   Contains the full path to the xsltproc executable if found.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the find_path() and find_library() calls\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindLua.cmake" : {
      "ObjectId" : "68530b3532d710c18681af95d376182326630c37",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindLua\n\n# -------\n\n#\n\n#\n\n#\n\n# Locate Lua library This module defines\n\n#\n\n# ::\n\n#\n\n#   LUA_FOUND          - if false, do not try to link to Lua\n\n#   LUA_LIBRARIES      - both lua and lualib\n\n#   LUA_INCLUDE_DIR    - where to find lua.h\n\n#   LUA_VERSION_STRING - the version of Lua found\n\n#   LUA_VERSION_MAJOR  - the major version of Lua\n\n#   LUA_VERSION_MINOR  - the minor version of Lua\n\n#   LUA_VERSION_PATCH  - the patch version of Lua\n\n#\n\n#\n\n#\n\n# Note that the expected include convention is\n\n#\n\n# ::\n\n#\n\n#   #include \"lua.h\"\n\n#\n\n# and not\n\n#\n\n# ::\n\n#\n\n#   #include <lua/lua.h>\n\n#\n\n# This is because, the lua location is not standardized and may exist in\n\n# locations other than lua/\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Policies apply to functions at definition-time\n",
        "Line" : 39,
        "CharPositionInLine" : 20
      },
      "3" : {
        "Text" : "# For while(TRUE)\n",
        "Line" : 40,
        "CharPositionInLine" : 31
      },
      "4" : {
        "Text" : "# this is a function only to have all the variables inside go away automatically\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# once there is a different major version supported this should become a loop\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# New version -> Search for it (heuristic only! Defines in include might have changed)\n",
        "Line" : 65,
        "CharPositionInLine" : 16
      },
      "7" : {
        "Text" : "# once there is a different major version supported this should become a loop\n",
        "Line" : 72,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Prepend \"include/\" to each path directly after the path\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# At least 5.[012] have different ways to express the version\n\n# so all of them need to be tested. Lua 5.2 defines LUA_VERSION\n\n# and LUA_RELEASE as joined by the C preprocessor, so avoid those.\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Initialize as local variable\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Find the next header to test. Check each possible subdir in order\n\n# This prefers e.g. higher versions as they are earlier in the list\n\n# It is also consistent with previous versions of FindLua\n",
        "Line" : 149,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Did not found header -> Fail\n",
        "Line" : 162,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Found accepted version -> Ok\n",
        "Line" : 167,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Found wrong version -> Ignore this path and retry\n",
        "Line" : 174,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# include the math library for Unix\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# include dl library for statically-linked Lua library\n",
        "Line" : 214,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# For Windows and Mac, don't need to explicitly include the math library\n",
        "Line" : 220,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LUA_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "deps/src/cmake-3.13.4/Modules/FindLua50.cmake" : {
      "ObjectId" : "efb4c3625ffc4d921678ff17dfd6443ede5d5b21",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindLua50\n\n# ---------\n\n#\n\n#\n\n#\n\n# Locate Lua library This module defines\n\n#\n\n# ::\n\n#\n\n#   LUA50_FOUND, if false, do not try to link to Lua\n\n#   LUA_LIBRARIES, both lua and lualib\n\n#   LUA_INCLUDE_DIR, where to find lua.h and lualib.h (and probably lauxlib.h)\n\n#\n\n#\n\n#\n\n# Note that the expected include convention is\n\n#\n\n# ::\n\n#\n\n#   #include \"lua.h\"\n\n#\n\n# and not\n\n#\n\n# ::\n\n#\n\n#   #include <lua/lua.h>\n\n#\n\n# This is because, the lua location is not standardized and may exist in\n\n# locations other than lua/\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 42,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 43,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 44,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# In an OS X framework, lualib is usually included as part of the framework\n\n# (like GLU in OpenGL.framework)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# include the math library for Unix\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# For Windows and Mac, don't need to explicitly include the math library\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LUA_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "deps/src/cmake-3.13.4/Modules/FindLua51.cmake" : {
      "ObjectId" : "f57467b7556ad68dc7ef767ce42439a1dc0c17e9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindLua51\n\n# ---------\n\n#\n\n#\n\n#\n\n# Locate Lua library This module defines\n\n#\n\n# ::\n\n#\n\n#   LUA51_FOUND, if false, do not try to link to Lua\n\n#   LUA_LIBRARIES\n\n#   LUA_INCLUDE_DIR, where to find lua.h\n\n#   LUA_VERSION_STRING, the version of Lua found (since CMake 2.8.8)\n\n#\n\n#\n\n#\n\n# Note that the expected include convention is\n\n#\n\n# ::\n\n#\n\n#   #include \"lua.h\"\n\n#\n\n# and not\n\n#\n\n# ::\n\n#\n\n#   #include <lua/lua.h>\n\n#\n\n# This is because, the lua location is not standardized and may exist in\n\n# locations other than lua/\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 43,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 44,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 45,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# include the math library for Unix\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# For Windows and Mac, don't need to explicitly include the math library\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LUA_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Modules/FindMFC.cmake" : {
      "ObjectId" : "3baaf3208c7a7c6863656ada3c8a1b1efdd284e5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindMFC\n\n# -------\n\n#\n\n# Find MFC on Windows\n\n#\n\n# Find the native MFC - i.e.  decide if an application can link to the\n\n# MFC libraries.\n\n#\n\n# ::\n\n#\n\n#   MFC_FOUND - Was MFC support found\n\n#\n\n# You don't need to include anything or link anything to use it.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Assume no MFC support\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Only attempt the try_compile call if it has a chance to succeed:\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Try both shared and static as the root project may have set the /MT flag\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/FindMPEG.cmake" : {
      "ObjectId" : "850a57e4d1f2c5d2129886cc6fad427af46a95e4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindMPEG\n\n# --------\n\n#\n\n# Find the native MPEG includes and library\n\n#\n\n# This module defines\n\n#\n\n# ::\n\n#\n\n#   MPEG_INCLUDE_DIR, where to find MPEG.h, etc.\n\n#   MPEG_LIBRARIES, the libraries required to use MPEG.\n\n#   MPEG_FOUND, If false, do not try to use MPEG.\n\n#\n\n# also defined, but not for general use are\n\n#\n\n# ::\n\n#\n\n#   MPEG_mpeg2_LIBRARY, where to find the MPEG library.\n\n#   MPEG_vo_LIBRARY, where to find the vo library.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindMPEG2.cmake" : {
      "ObjectId" : "f9ccd6ae1997787da3d3402f82c4c91d952ffe91",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindMPEG2\n\n# ---------\n\n#\n\n# Find the native MPEG2 includes and library\n\n#\n\n# This module defines\n\n#\n\n# ::\n\n#\n\n#   MPEG2_INCLUDE_DIR, path to mpeg2dec/mpeg2.h, etc.\n\n#   MPEG2_LIBRARIES, the libraries required to use MPEG2.\n\n#   MPEG2_FOUND, If false, do not try to use MPEG2.\n\n#\n\n# also defined, but not for general use are\n\n#\n\n# ::\n\n#\n\n#   MPEG2_mpeg2_LIBRARY, where to find the MPEG2 library.\n\n#   MPEG2_vo_LIBRARY, where to find the vo library.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#some native mpeg2 installations will depend\n\n#on libSDL, if found, add it in.\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindMPI.cmake" : {
      "ObjectId" : "b94e69eac37d278bf12157911d793e1123e93544",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindMPI\n\n# -------\n\n#\n\n# Find a Message Passing Interface (MPI) implementation.\n\n#\n\n# The Message Passing Interface (MPI) is a library used to write\n\n# high-performance distributed-memory parallel applications, and is\n\n# typically deployed on a cluster.  MPI is a standard interface (defined\n\n# by the MPI forum) for which many implementations are available.\n\n#\n\n# Variables for using MPI\n\n# ^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# The module exposes the components ``C``, ``CXX``, ``MPICXX`` and ``Fortran``.\n\n# Each of these controls the various MPI languages to search for.\n\n# The difference between ``CXX`` and ``MPICXX`` is that ``CXX`` refers to the\n\n# MPI C API being usable from C++, whereas ``MPICXX`` refers to the MPI-2 C++ API\n\n# that was removed again in MPI-3.\n\n#\n\n# Depending on the enabled components the following variables will be set:\n\n#\n\n# ``MPI_FOUND``\n\n#   Variable indicating that MPI settings for all requested languages have been found.\n\n#   If no components are specified, this is true if MPI settings for all enabled languages\n\n#   were detected. Note that the ``MPICXX`` component does not affect this variable.\n\n# ``MPI_VERSION``\n\n#   Minimal version of MPI detected among the requested languages, or all enabled languages\n\n#   if no components were specified.\n\n#\n\n# This module will set the following variables per language in your\n\n# project, where ``<lang>`` is one of C, CXX, or Fortran:\n\n#\n\n# ``MPI_<lang>_FOUND``\n\n#   Variable indicating the MPI settings for ``<lang>`` were found and that\n\n#   simple MPI test programs compile with the provided settings.\n\n# ``MPI_<lang>_COMPILER``\n\n#   MPI compiler for ``<lang>`` if such a program exists.\n\n# ``MPI_<lang>_COMPILE_OPTIONS``\n\n#   Compilation options for MPI programs in ``<lang>``, given as a :ref:`;-list <CMake Language Lists>`.\n\n# ``MPI_<lang>_COMPILE_DEFINITIONS``\n\n#   Compilation definitions for MPI programs in ``<lang>``, given as a :ref:`;-list <CMake Language Lists>`.\n\n# ``MPI_<lang>_INCLUDE_DIRS``\n\n#   Include path(s) for MPI header.\n\n# ``MPI_<lang>_LINK_FLAGS``\n\n#   Linker flags for MPI programs.\n\n# ``MPI_<lang>_LIBRARIES``\n\n#   All libraries to link MPI programs against.\n\n#\n\n# Additionally, the following :prop_tgt:`IMPORTED` targets are defined:\n\n#\n\n# ``MPI::MPI_<lang>``\n\n#   Target for using MPI from ``<lang>``.\n\n#\n\n# The following variables indicating which bindings are present will be defined:\n\n#\n\n# ``MPI_MPICXX_FOUND``\n\n#   Variable indicating whether the MPI-2 C++ bindings are present (introduced in MPI-2, removed with MPI-3).\n\n# ``MPI_Fortran_HAVE_F77_HEADER``\n\n#   True if the Fortran 77 header ``mpif.h`` is available.\n\n# ``MPI_Fortran_HAVE_F90_MODULE``\n\n#   True if the Fortran 90 module ``mpi`` can be used for accessing MPI (MPI-2 and higher only).\n\n# ``MPI_Fortran_HAVE_F08_MODULE``\n\n#   True if the Fortran 2008 ``mpi_f08`` is available to MPI programs (MPI-3 and higher only).\n\n#\n\n# If possible, the MPI version will be determined by this module. The facilities to detect the MPI version\n\n# were introduced with MPI-1.2, and therefore cannot be found for older MPI versions.\n\n#\n\n# ``MPI_<lang>_VERSION_MAJOR``\n\n#   Major version of MPI implemented for ``<lang>`` by the MPI distribution.\n\n# ``MPI_<lang>_VERSION_MINOR``\n\n#   Minor version of MPI implemented for ``<lang>`` by the MPI distribution.\n\n# ``MPI_<lang>_VERSION``\n\n#   MPI version implemented for ``<lang>`` by the MPI distribution.\n\n#\n\n# Note that there's no variable for the C bindings being accessible through ``mpi.h``, since the MPI standards\n\n# always have required this binding to work in both C and C++ code.\n\n#\n\n# For running MPI programs, the module sets the following variables\n\n#\n\n# ``MPIEXEC_EXECUTABLE``\n\n#   Executable for running MPI programs, if such exists.\n\n# ``MPIEXEC_NUMPROC_FLAG``\n\n#   Flag to pass to ``mpiexec`` before giving it the number of processors to run on.\n\n# ``MPIEXEC_MAX_NUMPROCS``\n\n#   Number of MPI processors to utilize. Defaults to the number\n\n#   of processors detected on the host system.\n\n# ``MPIEXEC_PREFLAGS``\n\n#   Flags to pass to ``mpiexec`` directly before the executable to run.\n\n# ``MPIEXEC_POSTFLAGS``\n\n#   Flags to pass to ``mpiexec`` after other flags.\n\n#\n\n# Variables for locating MPI\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# This module performs a three step search for an MPI implementation:\n\n#\n\n# 1. Check if the compiler has MPI support built-in. This is the case if the user passed a\n\n#    compiler wrapper as ``CMAKE_<LANG>_COMPILER`` or if they're on a Cray system.\n\n# 2. Attempt to find an MPI compiler wrapper and determine the compiler information from it.\n\n# 3. Try to find an MPI implementation that does not ship such a wrapper by guessing settings.\n\n#    Currently, only Microsoft MPI and MPICH2 on Windows are supported.\n\n#\n\n# For controlling the second step, the following variables may be set:\n\n#\n\n# ``MPI_<lang>_COMPILER``\n\n#   Search for the specified compiler wrapper and use it.\n\n# ``MPI_<lang>_COMPILER_FLAGS``\n\n#   Flags to pass to the MPI compiler wrapper during interrogation. Some compiler wrappers\n\n#   support linking debug or tracing libraries if a specific flag is passed and this variable\n\n#   may be used to obtain them.\n\n# ``MPI_COMPILER_FLAGS``\n\n#   Used to initialize ``MPI_<lang>_COMPILER_FLAGS`` if no language specific flag has been given.\n\n#   Empty by default.\n\n# ``MPI_EXECUTABLE_SUFFIX``\n\n#   A suffix which is appended to all names that are being looked for. For instance you may set this\n\n#   to ``.mpich`` or ``.openmpi`` to prefer the one or the other on Debian and its derivatives.\n\n#\n\n# In order to control the guessing step, the following variable may be set:\n\n#\n\n# ``MPI_GUESS_LIBRARY_NAME``\n\n#   Valid values are ``MSMPI`` and ``MPICH2``. If set, only the given library will be searched for.\n\n#   By default, ``MSMPI`` will be preferred over ``MPICH2`` if both are available.\n\n#   This also sets ``MPI_SKIP_COMPILER_WRAPPER`` to ``true``, which may be overridden.\n\n#\n\n# Each of the search steps may be skipped with the following control variables:\n\n#\n\n# ``MPI_ASSUME_NO_BUILTIN_MPI``\n\n#   If true, the module assumes that the compiler itself does not provide an MPI implementation and\n\n#   skips to step 2.\n\n# ``MPI_SKIP_COMPILER_WRAPPER``\n\n#   If true, no compiler wrapper will be searched for.\n\n# ``MPI_SKIP_GUESSING``\n\n#   If true, the guessing step will be skipped.\n\n#\n\n# Additionally, the following control variable is available to change search behavior:\n\n#\n\n# ``MPI_CXX_SKIP_MPICXX``\n\n#   Add some definitions that will disable the MPI-2 C++ bindings.\n\n#   Currently supported are MPICH, Open MPI, Platform MPI and derivatives thereof,\n\n#   for example MVAPICH or Intel MPI.\n\n#\n\n# If the find procedure fails for a variable ``MPI_<lang>_WORKS``, then the settings detected by or passed to\n\n# the module did not work and even a simple MPI test program failed to compile.\n\n#\n\n# If all of these parameters were not sufficient to find the right MPI implementation, a user may\n\n# disable the entire autodetection process by specifying both a list of libraries in ``MPI_<lang>_LIBRARIES``\n\n# and a list of include directories in ``MPI_<lang>_ADDITIONAL_INCLUDE_DIRS``.\n\n# Any other variable may be set in addition to these two. The module will then validate the MPI settings and store the\n\n# settings in the cache.\n\n#\n\n# Cache variables for MPI\n\n# ^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# The variable ``MPI_<lang>_INCLUDE_DIRS`` will be assembled from the following variables.\n\n# For C and CXX:\n\n#\n\n# ``MPI_<lang>_HEADER_DIR``\n\n#   Location of the ``mpi.h`` header on disk.\n\n#\n\n# For Fortran:\n\n#\n\n# ``MPI_Fortran_F77_HEADER_DIR``\n\n#   Location of the Fortran 77 header ``mpif.h``, if it exists.\n\n# ``MPI_Fortran_MODULE_DIR``\n\n#   Location of the ``mpi`` or ``mpi_f08`` modules, if available.\n\n#\n\n# For all languages the following variables are additionally considered:\n\n#\n\n# ``MPI_<lang>_ADDITIONAL_INCLUDE_DIRS``\n\n#   A :ref:`;-list <CMake Language Lists>` of paths needed in addition to the normal include directories.\n\n# ``MPI_<include_name>_INCLUDE_DIR``\n\n#   Path variables for include folders referred to by ``<include_name>``.\n\n# ``MPI_<lang>_ADDITIONAL_INCLUDE_VARS``\n\n#   A :ref:`;-list <CMake Language Lists>` of ``<include_name>`` that will be added to the include locations of ``<lang>``.\n\n#\n\n# The variable ``MPI_<lang>_LIBRARIES`` will be assembled from the following variables:\n\n#\n\n# ``MPI_<lib_name>_LIBRARY``\n\n#   The location of a library called ``<lib_name>`` for use with MPI.\n\n# ``MPI_<lang>_LIB_NAMES``\n\n#   A :ref:`;-list <CMake Language Lists>` of ``<lib_name>`` that will be added to the include locations of ``<lang>``.\n\n#\n\n# Usage of mpiexec\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# When using ``MPIEXEC_EXECUTABLE`` to execute MPI applications, you should typically\n\n# use all of the ``MPIEXEC_EXECUTABLE`` flags as follows:\n\n#\n\n# ::\n\n#\n\n#    ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} ${MPIEXEC_MAX_NUMPROCS}\n\n#      ${MPIEXEC_PREFLAGS} EXECUTABLE ${MPIEXEC_POSTFLAGS} ARGS\n\n#\n\n# where ``EXECUTABLE`` is the MPI program, and ``ARGS`` are the arguments to\n\n# pass to the MPI program.\n\n#\n\n# Advanced variables for using MPI\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# The module can perform some advanced feature detections upon explicit request.\n\n#\n\n# **Important notice:** The following checks cannot be performed without *executing* an MPI test program.\n\n# Consider the special considerations for the behavior of :command:`try_run` during cross compilation.\n\n# Moreover, running an MPI program can cause additional issues, like a firewall notification on some systems.\n\n# You should only enable these detections if you absolutely need the information.\n\n#\n\n# If the following variables are set to true, the respective search will be performed:\n\n#\n\n# ``MPI_DETERMINE_Fortran_CAPABILITIES``\n\n#   Determine for all available Fortran bindings what the values of ``MPI_SUBARRAYS_SUPPORTED`` and\n\n#   ``MPI_ASYNC_PROTECTS_NONBLOCKING`` are and make their values available as ``MPI_Fortran_<binding>_SUBARRAYS``\n\n#   and ``MPI_Fortran_<binding>_ASYNCPROT``, where ``<binding>`` is one of ``F77_HEADER``, ``F90_MODULE`` and\n\n#   ``F08_MODULE``.\n\n# ``MPI_DETERMINE_LIBRARY_VERSION``\n\n#   For each language, find the output of ``MPI_Get_library_version`` and make it available as ``MPI_<lang>_LIBRARY_VERSION``.\n\n#   This information is usually tied to the runtime component of an MPI implementation and might differ depending on ``<lang>``.\n\n#   Note that the return value is entirely implementation defined. This information might be used to identify\n\n#   the MPI vendor and for example pick the correct one of multiple third party binaries that matches the MPI vendor.\n\n#\n\n# Backward Compatibility\n\n# ^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# For backward compatibility with older versions of FindMPI, these\n\n# variables are set, but deprecated:\n\n#\n\n# ::\n\n#\n\n#    MPI_COMPILER        MPI_LIBRARY        MPI_EXTRA_LIBRARY\n\n#    MPI_COMPILE_FLAGS   MPI_INCLUDE_PATH   MPI_LINK_FLAGS\n\n#    MPI_LIBRARIES\n\n#\n\n# In new projects, please use the ``MPI_<lang>_XXX`` equivalents.\n\n# Additionally, the following variables are deprecated:\n\n#\n\n# ``MPI_<lang>_COMPILE_FLAGS``\n\n#   Use ``MPI_<lang>_COMPILE_OPTIONS`` and ``MPI_<lang>_COMPILE_DEFINITIONS`` instead.\n\n# ``MPI_<lang>_INCLUDE_PATH``\n\n#   For consumption use ``MPI_<lang>_INCLUDE_DIRS`` and for specifying folders use ``MPI_<lang>_ADDITIONAL_INCLUDE_DIRS`` instead.\n\n# ``MPIEXEC``\n\n#   Use ``MPIEXEC_EXECUTABLE`` instead.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if IN_LIST\n",
        "Line" : 247,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "# Generic compiler names\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# GNU compiler names\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Intel MPI compiler names on Windows\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Intel MPI compiler names\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Intel MPI compiler names for MSMPI\n",
        "Line" : 277,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Intel compiler names\n",
        "Line" : 281,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# PGI compiler names\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# XLC MPI Compiler names\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Prepend vendor-specific compiler wrappers to the list. If we don't know the compiler,\n\n# attempt all of them.\n\n# By attempting vendor-specific compiler names first, we should avoid situations where the compiler wrapper\n\n# stems from a proprietary MPI and won't know which compiler it's being used for. For instance, Intel MPI\n\n# controls its settings via the I_MPI_CC environment variables if the generic name is being used.\n\n# If we know which compiler we're working with, we can use the most specialized wrapper there is in order to\n\n# pick up the right settings for it.\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Names to try for mpiexec\n\n# Only mpiexec commands are guaranteed to behave as described in the standard,\n\n# mpirun commands are not covered by the standard in any way whatsoever.\n\n# lamexec is the executable for LAM/MPI, srun is for SLURM or Open MPI with SLURM support.\n\n# srun -n X <executable> is however a valid command, so it behaves 'like' mpiexec.\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Some compiler wrappers will yield spurious zero return values, for example\n\n# Intel MPI tolerates unknown arguments and if the MPI wrappers loads a shared\n\n# library that has invalid or missing version information there would be warning\n\n# messages emitted by ld.so in the compiler output. In either case, we'll treat\n\n# the output as invalid.\n",
        "Line" : 344,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Ensure that no error output might be passed upwards.\n",
        "Line" : 352,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Strip leading whitespace\n",
        "Line" : 356,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Define the MPICH and Intel MPI compiler variables to the compilers set in CMake.\n\n# It's possible to have a per-compiler configuration in these MPI implementations and\n\n# a particular MPICH derivate might check compiler interoperability.\n\n# Intel MPI in particular does this with I_MPI_CHECK_COMPILER.\n",
        "Line" : 389,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# On Windows, the Intel MPI batch scripts can only work with filnames - Full paths will break them.\n\n# Due to the lack of other MPICH-based wrappers for Visual C++, we may treat this as default.\n",
        "Line" : 394,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Set these two variables for Intel MPI:\n\n#   - I_MPI_DEBUG_INFO_STRIP: It adds 'objcopy' lines to the compiler output. We support stripping them\n\n#     (see below), but if we can avoid them in the first place, we should.\n\n#   - I_MPI_FORT_BIND: By default Intel MPI makes the C/C++ compiler wrappers link Fortran bindings.\n\n#     This is so that mixed-language code doesn't require additional libraries when linking with mpicc.\n\n#     For our purposes, this makes little sense, since correct MPI usage from CMake already circumvenes this.\n",
        "Line" : 414,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Check whether the -showme:compile option works. This indicates that we have either Open MPI\n\n# or a newer version of LAM/MPI, and implies that -showme:link will also work.\n\n# Open MPI also supports -show, but separates linker and compiler information\n",
        "Line" : 424,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# MPICH and MVAPICH offer -compile-info and -link-info.\n\n# For modern versions, both do the same as -show. However, for old versions, they do differ\n\n# when called for mpicxx and mpif90 and it's necessary to use them over -show in order to find the\n\n# removed MPI C++ bindings.\n",
        "Line" : 436,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# MPICH, MVAPICH2 and Intel MPI just use \"-show\". Open MPI also offers this, but the\n\n# -showme commands are more specialized.\n",
        "Line" : 452,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Older versions of LAM/MPI have \"-showme\". Open MPI also supports this.\n\n# Unknown to MPICH, MVAPICH and Intel MPI.\n",
        "Line" : 458,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Intel MPI can be run with -compchk or I_MPI_CHECK_COMPILER set to 1.\n\n# In this case, -show will be prepended with a line to the compiler checker. This is a script that performs\n\n# compatibility checks and returns a non-zero exit code together with an error if something fails.\n\n# It has to be called as \"compchk.sh <arch> <compiler>\". Here, <arch> is one out of 32 (i686), 64 (ia64) or 32e (x86_64).\n\n# The compiler is identified by filename, and can be either the MPI compiler or the underlying compiler.\n\n# NOTE: It is vital to run this script while the environment variables are set up, otherwise it can check the wrong compiler.\n",
        "Line" : 465,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Now CMAKE_MATCH_1 contains the path to the compchk.sh file and CMAKE_MATCH_2 the architecture flag.\n",
        "Line" : 472,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# If it returned a non-zero value, the check below will fail and cause the interrogation to be aborted.\n",
        "Line" : 479,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# Since the check passed, we can remove the compchk.sh script.\n",
        "Line" : 485,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# Revert changes to the environment made previously\n",
        "Line" : 491,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Cannot interrogate this compiler, so exit.\n",
        "Line" : 511,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# We have our command lines, but we might need to copy MPI_COMPILE_CMDLINE\n\n# into MPI_LINK_CMDLINE, if we didn't find the link line.\n",
        "Line" : 517,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Visual Studio parsers permit each flag prefixed by either / or -.\n\n# We'll normalize this to the - syntax we use for CMake purposes anyways.\n",
        "Line" : 523,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# The Intel MPI wrappers on Windows prefix their output with some copyright boilerplate.\n\n# To prevent possible problems, we discard this text before proceeding with any further matching.\n",
        "Line" : 527,
        "CharPositionInLine" : 6
      },
      "32" : {
        "Text" : "# For MSVC and cl-compatible compilers, the keyword /link indicates a point after which\n\n# everything following is passed to the linker. In this case, we drop all prior information\n\n# from the link line and treat any unknown extra flags as linker flags.\n",
        "Line" : 536,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# At this point, we obtained some output from a compiler wrapper that works.\n\n# We'll now try to parse it into variables with meaning to us.\n",
        "Line" : 549,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# If MPICH (and derivates) didn't recognize the Fortran compiler include flag during configuration,\n\n# they'll return a set of three commands, consisting out of a symlink command for mpif.h,\n\n# the actual compiler command and deletion of the created symlink.\n\n# Especially with M(VA)PICH-1, this appears to happen erroneously, and therefore we should translate\n\n# this output into an additional include directory and then drop it from the output.\n",
        "Line" : 552,
        "CharPositionInLine" : 6
      },
      "35" : {
        "Text" : "# If Intel MPI was configured for static linkage with -static_mpi, the wrapper will by default strip\n\n# debug information from resulting binaries (see I_MPI_DEBUG_INFO_STRIP).\n\n# Since we cannot process this information into CMake logic, we need to discard the resulting objcopy\n\n# commands from the output.\n",
        "Line" : 566,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# For Visual C++, extracting compiler options in a generic fashion isn't easy. However, no MPI implementation\n\n# on Windows seems to require any specific ones, either.\n",
        "Line" : 574,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Extract compile options from the compile command line.\n",
        "Line" : 577,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Ignore -fstack-protector directives: These occur on MPICH and MVAPICH when the libraries\n\n# themselves were built with this flag. However, this flag is unrelated to using MPI, and\n\n# we won't match the accompanying --param-ssp-size and -Wp,-D_FORTIFY_SOURCE flags and therefore\n\n# produce inconsistent results with the regularly flags.\n\n# Similarly, aliasing flags do not belong into our flag array.\n",
        "Line" : 583,
        "CharPositionInLine" : 6
      },
      "39" : {
        "Text" : "# For GNU-style compilers, it's possible to prefix includes and definitions with certain flags to pass them\n\n# only to the preprocessor. For CMake purposes, we need to treat, but ignore such scopings.\n\n# Note that we do not support spaces between the arguments, i.e. -Wp,-I -Wp,/opt/mympi will not be parsed\n\n# correctly. This form does not seem to occur in any common MPI implementation, however.\n",
        "Line" : 594,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Same deal as above, for the definitions.\n",
        "Line" : 604,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Extract include paths from compile command line\n",
        "Line" : 615,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# If extracting failed to work, we'll try using -showme:incdirs.\n\n# Unlike before, we do this without the environment variables set up, but since only MPICH derivates are affected by any of them, and\n\n# -showme:... is only supported by Open MPI and LAM/MPI, this isn't a concern.\n",
        "Line" : 619,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# The next step are linker flags and library directories. Here, we first take the flags given in raw -L or -LIBPATH: syntax.\n",
        "Line" : 636,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# If the link commandline hasn't been filtered (e.g. when using MSVC and /link), we need to extract the relevant parts first.\n",
        "Line" : 643,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# In this case, we could also find some indirectly given linker paths, e.g. prefixed by -Xlinker or -Wl,\n\n# Since syntaxes like -Wl,-L -Wl,/my/path/to/lib are also valid, we parse these paths by first removing -Wl, and -Xlinker\n\n# from the list of filtered flags and then parse the remainder of the output.\n",
        "Line" : 647,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# Now we can parse the leftover output. Note that spaces can now be handled since the above example would reduce to\n\n# -L /my/path/to/lib and can be extracted correctly.\n",
        "Line" : 652,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# We need to remove the flags we extracted from the linker flag list now.\n",
        "Line" : 662,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# Some MPI implementations pass on options they themselves were built with. Since -z,noexecstack is a common\n\n# hardening, we should strip it. In general, the -z options should be undesirable.\n",
        "Line" : 666,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# We only consider options of the form -Wl or -Xlinker:\n",
        "Line" : 671,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# As a next step, we assemble the linker flags extracted in a preliminary flags string\n",
        "Line" : 674,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# In the filtered case, we obtain the link time flags by just stripping the library paths.\n",
        "Line" : 684,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# If we failed to extract any linker paths, we'll try using the -showme:libdirs option with the MPI compiler.\n\n# This will return a list of folders, not a set of flags!\n",
        "Line" : 688,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# We need to remove potential quotes and convert the paths to CMake syntax while resolving them, too.\n",
        "Line" : 697,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Extract the set of libraries to link against from the link command line\n\n# This only makes sense if CMAKE_LINK_LIBRARY_FLAG is defined, i.e. a -lxxxx syntax is supported by the compiler.\n",
        "Line" : 704,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Treat linker objects given by full path, for example static libraries, import libraries\n\n# or shared libraries if there aren't any import libraries in use on the system.\n\n# Note that we do not consider CMAKE_<TYPE>_LIBRARY_PREFIX intentionally here: The linker will for a given file\n\n# decide how to link it based on file type, not based on a prefix like 'lib'.\n",
        "Line" : 717,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# Save the explicitly given link directories\n",
        "Line" : 743,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# An MPI compiler wrapper could have its MPI libraries in the implictly\n\n# linked directories of the compiler itself.\n",
        "Line" : 746,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Determine full path names for all of the libraries that one needs\n\n# to link against in an MPI program\n",
        "Line" : 752,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# Remove the directory from the remainder list.\n",
        "Line" : 764,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# Add the link directories given explicitly that we haven't used back as linker directories.\n",
        "Line" : 771,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# Deal with the libraries given with full path next\n",
        "Line" : 785,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# Directly linked objects should be linked first in case some generic linker flags are needed for them.\n",
        "Line" : 793,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# MPI might require pthread to work. The above mechanism wouldn't detect it, but we need to\n\n# link it in that case. -lpthread is covered by the normal library treatment on the other hand.\n",
        "Line" : 798,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# If we found MPI, set up all of the appropriate cache entries\n",
        "Line" : 819,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "# Currently only MSMPI and MPICH2 on Windows are supported, so we can skip this search if we're not targeting that.\n",
        "Line" : 840,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# MSMPI\n",
        "Line" : 842,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# The environment variables MSMPI_INC and MSMPILIB32/64 are the only ways of locating the MSMPI_SDK,\n\n# which is installed separately from the runtime. Thus it's possible to have mpiexec but not MPI headers\n\n# or import libraries and vice versa.\n",
        "Line" : 844,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# We first attempt to locate the msmpi.lib. Should be find it, we'll assume that the MPI present is indeed\n\n# Microsoft MPI.\n",
        "Line" : 848,
        "CharPositionInLine" : 6
      },
      "69" : {
        "Text" : "# Next, we attempt to locate the MPI header. Note that for Fortran we know that mpif.h is a way\n\n# MSMPI can be used and therefore that header has to be present.\n",
        "Line" : 865,
        "CharPositionInLine" : 8
      },
      "70" : {
        "Text" : "# For MSMPI, one can compile the MPI module by building the mpi.f90 shipped with the MSMPI SDK,\n\n# thus it might be present or provided by the user. Figuring out which is supported is done later on.\n\n# The PGI Fortran compiler for instance ships a prebuilt set of modules in its own include folder.\n\n# Should a user be employing PGI or have built its own set and provided it via cache variables, the\n\n# splitting routine would have located the module files.\n",
        "Line" : 873,
        "CharPositionInLine" : 8
      },
      "71" : {
        "Text" : "# For C and C++, we're done here (MSMPI does not ship the MPI-2 C++ bindings) - however, for Fortran\n\n# we need some extra library to glue Fortran support together:\n\n# MSMPI ships 2-4 Fortran libraries, each for different Fortran compiler behaviors. The library names\n\n# ending with a c are using the cdecl calling convention, whereas those ending with an s are for Fortran\n\n# implementations using stdcall. Therefore, the 64-bit MSMPI only ships those ending in 'c', whereas the 32-bit\n\n# has both variants available.\n\n# The second difference is the last but one letter, if it's an e(nd), the length of a string argument is\n\n# passed by the Fortran compiler after all other arguments on the parameter list, if it's an m(ixed),\n\n# it's passed immediately after the string address.\n",
        "Line" : 879,
        "CharPositionInLine" : 8
      },
      "72" : {
        "Text" : "# To summarize:\n\n#   - msmpifec: CHARACTER length passed after the parameter list and using cdecl calling convention\n\n#   - msmpifmc: CHARACTER length passed directly after string address and using cdecl calling convention\n\n#   - msmpifes: CHARACTER length passed after the parameter list and using stdcall calling convention\n\n#   - msmpifms: CHARACTER length passed directly after string address and using stdcall calling convention\n\n# 32-bit MSMPI ships all four libraries, 64-bit MSMPI ships only the first two.\n",
        "Line" : 889,
        "CharPositionInLine" : 8
      },
      "73" : {
        "Text" : "# As is, Intel Fortran and PGI Fortran both use the 'ec' variant of the calling convention, whereas\n\n# the old Compaq Visual Fortran compiler defaulted to the 'ms' version. It's possible to make Intel Fortran\n\n# use the CVF calling convention using /iface:cvf, but we assume - and this is also assumed in FortranCInterface -\n\n# this isn't the case. It's also possible to make CVF use the 'ec' variant, using /iface=(cref,nomixed_str_len_arg).\n",
        "Line" : 896,
        "CharPositionInLine" : 8
      },
      "74" : {
        "Text" : "# Our strategy is now to locate all libraries, but enter msmpifec into the LIB_NAMES array.\n\n# Should this not be adequate it's a straightforward way for a user to change the LIB_NAMES array and\n\n# have his library found. Still, this should not be necessary outside of exceptional cases, as reasoned.\n",
        "Line" : 901,
        "CharPositionInLine" : 8
      },
      "75" : {
        "Text" : "# At this point we're *not* done. MSMPI requires an additional include file for Fortran giving the value\n\n# of MPI_AINT. This file is called mpifptr.h located in the x64 and x86 subfolders, respectively.\n",
        "Line" : 922,
        "CharPositionInLine" : 10
      },
      "76" : {
        "Text" : "# At this point there's not many MPIs that we could still consider.\n\n# OpenMPI 1.6.x and below supported Windows, but these ship compiler wrappers that still work.\n\n# The only other relevant MPI implementation without a wrapper is MPICH2, which had Windows support in 1.4.1p1 and older.\n",
        "Line" : 951,
        "CharPositionInLine" : 4
      },
      "77" : {
        "Text" : "# All of C, C++ and Fortran will need mpi.lib, so we'll look for this first\n",
        "Line" : 961,
        "CharPositionInLine" : 6
      },
      "78" : {
        "Text" : "# If we found mpi.lib, we detect the rest of MPICH2\n",
        "Line" : 966,
        "CharPositionInLine" : 6
      },
      "79" : {
        "Text" : "# If MPI-2 C++ bindings are requested, we need to locate cxx.lib as well.\n\n# Otherwise, MPICH_SKIP_MPICXX will be defined and these bindings aren't needed.\n",
        "Line" : 969,
        "CharPositionInLine" : 8
      },
      "80" : {
        "Text" : "# For Fortran, MPICH2 provides three different libraries:\n\n#   fmpich2.lib which uses uppercase symbols and cdecl,\n\n#   fmpich2s.lib which uses uppercase symbols and stdcall (32-bit only),\n\n#   fmpich2g.lib which uses lowercase symbols with double underscores and cdecl.\n\n# fmpich2s.lib would be useful for Compaq Visual Fortran, fmpich2g.lib has to be used with GNU g77 and is also\n\n# provided in the form of an .a archive for MinGW and Cygwin. From our perspective, fmpich2.lib is the only one\n\n# we need to try, and if it doesn't work with the given Fortran compiler we'd find out later on during validation\n",
        "Line" : 977,
        "CharPositionInLine" : 8
      },
      "81" : {
        "Text" : "# For MPICH2, the include folder would be in ../include relative to the library folder.\n",
        "Line" : 1004,
        "CharPositionInLine" : 10
      },
      "82" : {
        "Text" : "# To disable the C++ bindings, we need to pass some definitions since the mpi.h header has to deal with both C and C++\n\n# bindings in MPI-2.\n",
        "Line" : 1033,
        "CharPositionInLine" : 4
      },
      "83" : {
        "Text" : "# MPICH_SKIP_MPICXX is being used in MPICH and derivatives like MVAPICH or Intel MPI\n\n# OMPI_SKIP_MPICXX is being used in Open MPI\n\n# _MPICC_H is being used for IBM Platform MPI\n",
        "Line" : 1036,
        "CharPositionInLine" : 6
      },
      "84" : {
        "Text" : "# Only for libraries do we need to check whether the compiler's linking stage is separate.\n",
        "Line" : 1047,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# Fortran\n",
        "Line" : 1064,
        "CharPositionInLine" : 11
      },
      "86" : {
        "Text" : "# Backwards compatibility: Search INCLUDE_PATH if given.\n",
        "Line" : 1084,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "# We try to find the headers/modules among those paths (and system paths)\n\n# For C/C++, we just need to have a look for mpi.h.\n",
        "Line" : 1089,
        "CharPositionInLine" : 2
      },
      "88" : {
        "Text" : "# Fortran is more complicated here: An implementation could provide\n\n# any of the Fortran 77/90/2008 APIs for MPI. For example, MSMPI\n\n# only provides Fortran 77 and - if mpi.f90 is built - potentially\n\n# a Fortran 90 module.\n",
        "Line" : 1099,
        "CharPositionInLine" : 2
      },
      "89" : {
        "Text" : "# Remove duplicates and default system directories from the list.\n",
        "Line" : 1119,
        "CharPositionInLine" : 2
      },
      "90" : {
        "Text" : "# When this is consumed for compiling CUDA, use '-Xcompiler' to wrap '-pthread'.\n",
        "Line" : 1134,
        "CharPositionInLine" : 2
      },
      "91" : {
        "Text" : "# If the compiler links MPI implicitly, no libraries will be found as they're contained within\n\n# CMAKE_<LANG>_IMPLICIT_LINK_LIBRARIES already.\n",
        "Line" : 1146,
        "CharPositionInLine" : 2
      },
      "92" : {
        "Text" : "# Given the new design of FindMPI, INCLUDE_DIRS will always be located, even under implicit linking.\n",
        "Line" : 1151,
        "CharPositionInLine" : 2
      },
      "93" : {
        "Text" : "# F77 header\n",
        "Line" : 1165,
        "CharPositionInLine" : 11
      },
      "94" : {
        "Text" : "# C\n",
        "Line" : 1176,
        "CharPositionInLine" : 9
      },
      "95" : {
        "Text" : "# For Fortran we may have by the MPI-3 standard an implementation that provides:\n\n#   - the mpi_f08 module\n\n#   - *both*, the mpi module and 'mpif.h'\n\n# Since older MPI standards (MPI-1) did not define anything but 'mpif.h', we need to check all three individually.\n",
        "Line" : 1196,
        "CharPositionInLine" : 2
      },
      "96" : {
        "Text" : "# MPI-1 versions had no MPI_INTGER_KIND defined, so we need to try without it.\n\n# However, MPI-1 also did not define the Fortran 90 and 08 modules, so we only try the F77 header.\n",
        "Line" : 1217,
        "CharPositionInLine" : 6
      },
      "97" : {
        "Text" : "# If 'test_mpi' built correctly, we've found valid MPI settings. There might not be MPI-2 C++ support, but there can't\n\n# be MPI-2 C++ support without the C bindings being present, so checking for them is sufficient.\n",
        "Line" : 1229,
        "CharPositionInLine" : 6
      },
      "98" : {
        "Text" : "# Some systems install various MPI implementations in separate folders in some MPI prefix\n\n# This macro enumerates all such subfolders and adds them to the list of hints that will be searched.\n",
        "Line" : 1236,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# SUSE Linux Enterprise Server stores its MPI implementations under /usr/lib64/mpi/gcc/<name>\n\n# We enumerate the subfolders and append each as a prefix\n",
        "Line" : 1251,
        "CharPositionInLine" : 2
      },
      "100" : {
        "Text" : "# FreeBSD ships mpich under the normal system paths - but available openmpi implementations\n\n# will be found in /usr/local/mpi/<name>\n",
        "Line" : 1255,
        "CharPositionInLine" : 2
      },
      "101" : {
        "Text" : "# Most MPI distributions have some form of mpiexec or mpirun which gives us something we can look for.\n\n# The MPI standard does not mandate the existence of either, but instead only makes requirements if a distribution\n\n# ships an mpiexec program (mpirun executables are not regulated by the standard).\n",
        "Line" : 1260,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# We defer searching for mpiexec binaries belonging to guesses until later. By doing so, mismatches between mpiexec\n\n# and the MPI we found should be reduced.\n",
        "Line" : 1264,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# call get_filename_component twice to remove mpiexec and the directory it exists in (typically bin).\n\n# This gives us a fairly reliable base directory to search for /bin /lib and /include from.\n",
        "Line" : 1278,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# According to the MPI standard, section 8.8 -n is a guaranteed, and the only guaranteed way to\n\n# launch an MPI process using mpiexec if such a program exists.\n",
        "Line" : 1283,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# Set the number of processes to the physical processor count\n",
        "Line" : 1289,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "#=============================================================================\n\n# Backward compatibility input hacks.  Propagate the FindMPI hints to C and\n\n# CXX if the respective new versions are not defined.  Translate the old\n\n# MPI_LIBRARY and MPI_EXTRA_LIBRARY to respective MPI_${LANG}_LIBRARIES.\n\n#\n\n# Once we find the new variables, we translate them back into their old\n\n# equivalents below.\n",
        "Line" : 1295,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "# Old input variables.\n",
        "Line" : 1304,
        "CharPositionInLine" : 4
      },
      "108" : {
        "Text" : "# Set new vars based on their old equivalents, if the new versions are not already set.\n",
        "Line" : 1307,
        "CharPositionInLine" : 4
      },
      "109" : {
        "Text" : "# Chop the old compile flags into options and definitions\n",
        "Line" : 1314,
        "CharPositionInLine" : 4
      },
      "110" : {
        "Text" : "# If a list of libraries was given, we'll split it into new-style cache variables\n",
        "Line" : 1330,
        "CharPositionInLine" : 4
      },
      "111" : {
        "Text" : "#=============================================================================\n",
        "Line" : 1350,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "# If the user specified a library name we assume they prefer that library over a wrapper. If not, they can disable skipping manually.\n",
        "Line" : 1358,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "# This loop finds the compilers and sends them off for interrogation.\n",
        "Line" : 1363,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "# Should the imported targets be empty, we effectively try whether the compiler supports MPI on its own, which is the case on e.g.\n\n# Cray PrgEnv.\n",
        "Line" : 1387,
        "CharPositionInLine" : 8
      },
      "115" : {
        "Text" : "# If the compiler can build MPI code on its own, it functions as an MPI compiler and we'll set the variable to point to it.\n",
        "Line" : 1392,
        "CharPositionInLine" : 8
      },
      "116" : {
        "Text" : "# If the user supplies a compiler *name* instead of an absolute path, assume that we need to find THAT compiler.\n",
        "Line" : 1406,
        "CharPositionInLine" : 12
      },
      "117" : {
        "Text" : "# Get rid of our default list of names and just search for the name the user wants.\n",
        "Line" : 1408,
        "CharPositionInLine" : 14
      },
      "118" : {
        "Text" : "# If the user specifies a compiler, we don't want to try to search libraries either.\n",
        "Line" : 1412,
        "CharPositionInLine" : 12
      },
      "119" : {
        "Text" : "# If we have an MPI base directory, we'll try all compiler names in that one first.\n\n# This should prevent mixing different MPI environments\n",
        "Line" : 1416,
        "CharPositionInLine" : 10
      },
      "120" : {
        "Text" : "# If the base directory did not help (for example because the mpiexec isn't in the same directory as the compilers),\n\n# we shall try searching in the default paths.\n",
        "Line" : 1428,
        "CharPositionInLine" : 10
      },
      "121" : {
        "Text" : "# If we haven't made the implicit compiler test yet, perform it now.\n",
        "Line" : 1439,
        "CharPositionInLine" : 12
      },
      "122" : {
        "Text" : "# Should the MPI compiler not work implicitly for MPI, still interrogate it.\n\n# Otherwise, MPI compilers for which CMake has separate linking stages, e.g. Intel MPI on Windows where link.exe is being used\n\n# directly during linkage instead of CMAKE_<LANG>_COMPILER will not work.\n",
        "Line" : 1445,
        "CharPositionInLine" : 12
      },
      "123" : {
        "Text" : "# If MPI_PINNED_COMPILER wasn't given, and the MPI compiler we potentially found didn't work, we withdraw it.\n",
        "Line" : 1460,
        "CharPositionInLine" : 10
      },
      "124" : {
        "Text" : "# For C++, we may use the settings for C. Should a given compiler wrapper for C++ not exist, but one for C does, we copy over the\n\n# settings for C. An MPI distribution that is in this situation would be IBM Platform MPI.\n",
        "Line" : 1463,
        "CharPositionInLine" : 12
      },
      "125" : {
        "Text" : "# We always create imported targets even if they're empty\n",
        "Line" : 1484,
        "CharPositionInLine" : 4
      },
      "126" : {
        "Text" : "# Next, we'll initialize the MPI variables that have not been previously set.\n",
        "Line" : 1491,
        "CharPositionInLine" : 4
      },
      "127" : {
        "Text" : "# If we've found MPI, then we'll perform additional analysis: Determine the MPI version, MPI library version, supported\n\n# MPI APIs (i.e. MPI-2 C++ bindings). For Fortran we also need to find specific parameters if we're under MPI-3.\n",
        "Line" : 1502,
        "CharPositionInLine" : 4
      },
      "128" : {
        "Text" : "# At this point, we know the bindings present but not the MPI version or anything else.\n",
        "Line" : 1518,
        "CharPositionInLine" : 6
      },
      "129" : {
        "Text" : "# For Fortran, we'll want to use the most modern MPI binding to test capabilities other than the\n\n# Fortran parameters, since those depend on the method of consumption.\n\n# For C++, we can always use the C bindings, and should do so, since the C++ bindings do not exist in MPI-3\n\n# whereas the C bindings do, and the C++ bindings never offered any feature advantage over their C counterparts.\n",
        "Line" : 1525,
        "CharPositionInLine" : 6
      },
      "130" : {
        "Text" : "# Another difference between C and Fortran is that we can't use the preprocessor to determine whether MPI_VERSION\n\n# and MPI_SUBVERSION are provided. These defines did not exist in MPI 1.0 and 1.1 and therefore might not\n\n# exist. For C/C++, test_mpi.c will handle the MPI_VERSION extraction, but for Fortran, we need mpiver.f90.\n",
        "Line" : 1538,
        "CharPositionInLine" : 8
      },
      "131" : {
        "Text" : "# Finally, we want to find out which capabilities a given interface supports, compare the MPI-3 standard.\n\n# This is determined by interface specific parameters MPI_SUBARRAYS_SUPPORTED and MPI_ASYNC_PROTECTS_NONBLOCKING\n\n# and might vary between the different methods of consumption.\n",
        "Line" : 1553,
        "CharPositionInLine" : 8
      },
      "132" : {
        "Text" : "# By the MPI-2 standard, MPI_VERSION and MPI_SUBVERSION are valid for both C and C++ bindings.\n",
        "Line" : 1581,
        "CharPositionInLine" : 8
      },
      "133" : {
        "Text" : "# At this point, we have dealt with determining the MPI version and parameters for each Fortran method available.\n\n# The one remaining issue is to determine which MPI library is installed.\n\n# Determining the version and vendor of the MPI library is only possible via MPI_Get_library_version() at runtime,\n\n# and therefore we cannot do this while cross-compiling (a user may still define MPI_<lang>_LIBRARY_VERSION_STRING\n\n# themselves and we'll attempt splitting it, which is equivalent to provide the try_run output).\n\n# It's also worth noting that the installed version string can depend on the language, or on the system the binary\n\n# runs on if MPI is not statically linked.\n",
        "Line" : 1594,
        "CharPositionInLine" : 6
      },
      "134" : {
        "Text" : "# For Fortran we only need one of the module or header directories to have *some* support for MPI.\n",
        "Line" : 1624,
        "CharPositionInLine" : 8
      },
      "135" : {
        "Text" : "# Append the works variable now. If the settings did not work, this will show up properly.\n",
        "Line" : 1639,
        "CharPositionInLine" : 6
      },
      "136" : {
        "Text" : "# If the compiler worked implicitly, use its path as output.\n\n# Should the compiler variable be set, we also require it to work.\n",
        "Line" : 1642,
        "CharPositionInLine" : 6
      },
      "137" : {
        "Text" : "#=============================================================================\n\n# More backward compatibility stuff\n",
        "Line" : 1676,
        "CharPositionInLine" : 0
      },
      "138" : {
        "Text" : "# For compatibility reasons, we also define MPIEXEC\n",
        "Line" : 1679,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "# Copy over MPI_<LANG>_INCLUDE_PATH from the assembled INCLUDE_DIRS.\n",
        "Line" : 1682,
        "CharPositionInLine" : 0
      },
      "140" : {
        "Text" : "# Bare MPI sans ${LANG} vars are set to CXX then C, depending on what was found.\n\n# This mimics the behavior of the old language-oblivious FindMPI.\n",
        "Line" : 1698,
        "CharPositionInLine" : 0
      },
      "141" : {
        "Text" : "# Chop MPI_LIBRARIES into the old-style MPI_LIBRARY and MPI_EXTRA_LIBRARY, and set them in cache.\n",
        "Line" : 1711,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "#=============================================================================\n",
        "Line" : 1730,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "# unset these vars to cleanup namespace\n",
        "Line" : 1732,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 144
    },
    "deps/src/cmake-3.13.4/Modules/FindMatlab.cmake" : {
      "ObjectId" : "547a33085d58e119f739e0286d84237d29825366",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindMatlab\n\n# ----------\n\n#\n\n# Finds Matlab or Matlab Compiler Runtime (MCR) and provides Matlab tools,\n\n# libraries and compilers to CMake.\n\n#\n\n# This package primary purpose is to find the libraries associated with Matlab\n\n# or the MCR in order to be able to build Matlab extensions (mex files). It\n\n# can also be used:\n\n#\n\n# * to run specific commands in Matlab in case Matlab is available\n\n# * for declaring Matlab unit test\n\n# * to retrieve various information from Matlab (mex extensions, versions and\n\n#   release queries, ...)\n\n#\n\n# The module supports the following components:\n\n#\n\n# * ``MX_LIBRARY``, ``ENG_LIBRARY`` and ``MAT_LIBRARY``: respectively the ``MX``,\n\n#   ``ENG`` and ``MAT`` libraries of Matlab\n\n# * ``ENGINE_LIBRARY``, ``DATAARRAY_LIBRARY``: respectively the ``MatlabEngine``\n\n#   and ``MatlabDataArray`` libraries of Matlab (Matlab 2018a and later)\n\n# * ``MAIN_PROGRAM`` the Matlab binary program. Note that this component is not\n\n#   available on the MCR version, and will yield an error if the MCR is found\n\n#   instead of the regular Matlab installation.\n\n# * ``MEX_COMPILER`` the MEX compiler.\n\n# * ``MCC_COMPILER`` the MCC compiler, included with the Matlab Compiler add-on.\n\n# * ``SIMULINK`` the Simulink environment.\n\n#\n\n# .. note::\n\n#\n\n#   The version given to the :command:`find_package` directive is the Matlab\n\n#   **version**, which should not be confused with the Matlab *release* name\n\n#   (eg. `R2014`).\n\n#   The :command:`matlab_get_version_from_release_name` and\n\n#   :command:`matlab_get_release_name_from_version` provide a mapping\n\n#   between the release name and the version.\n\n#\n\n# The variable :variable:`Matlab_ROOT_DIR` may be specified in order to give\n\n# the path of the desired Matlab version. Otherwise, the behaviour is platform\n\n# specific:\n\n#\n\n# * Windows: The installed versions of Matlab/MCR are retrieved from the\n\n#   Windows registry\n\n# * OS X: The installed versions of Matlab/MCR are given by the MATLAB\n\n#   default installation paths in ``/Application``. If no such application is\n\n#   found, it falls back to the one that might be accessible from the ``PATH``.\n\n# * Unix: The desired Matlab should be accessible from the ``PATH``. This does\n\n#   not work for MCR installation and :variable:`Matlab_ROOT_DIR` should be\n\n#   specified on this platform.\n\n#\n\n# Additional information is provided when :variable:`MATLAB_FIND_DEBUG` is set.\n\n# When a Matlab/MCR installation is found automatically and the ``MATLAB_VERSION``\n\n# is not given, the version is queried from Matlab directly (on Windows this\n\n# may pop up a Matlab window) or from the MCR installation.\n\n#\n\n# The mapping of the release names and the version of Matlab is performed by\n\n# defining pairs (name, version).  The variable\n\n# :variable:`MATLAB_ADDITIONAL_VERSIONS` may be provided before the call to\n\n# the :command:`find_package` in order to handle additional versions.\n\n#\n\n# A Matlab scripts can be added to the set of tests using the\n\n# :command:`matlab_add_unit_test`. By default, the Matlab unit test framework\n\n# will be used (>= 2013a) to run this script, but regular ``.m`` files\n\n# returning an exit code can be used as well (0 indicating a success).\n\n#\n\n# Module Input Variables\n\n# ^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# Users or projects may set the following variables to configure the module\n\n# behaviour:\n\n#\n\n# :variable:`Matlab_ROOT_DIR`\n\n#   the root of the Matlab installation.\n\n# :variable:`MATLAB_FIND_DEBUG`\n\n#   outputs debug information\n\n# :variable:`MATLAB_ADDITIONAL_VERSIONS`\n\n#   additional versions of Matlab for the automatic retrieval of the installed\n\n#   versions.\n\n#\n\n# Variables defined by the module\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# Result variables\n\n# \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n#\n\n# ``Matlab_FOUND``\n\n#   ``TRUE`` if the Matlab installation is found, ``FALSE``\n\n#   otherwise. All variable below are defined if Matlab is found.\n\n# ``Matlab_ROOT_DIR``\n\n#   the final root of the Matlab installation determined by the FindMatlab\n\n#   module.\n\n# ``Matlab_MAIN_PROGRAM``\n\n#   the Matlab binary program. Available only if the component ``MAIN_PROGRAM``\n\n#   is given in the :command:`find_package` directive.\n\n# ``Matlab_INCLUDE_DIRS``\n\n#  the path of the Matlab libraries headers\n\n# ``Matlab_MEX_LIBRARY``\n\n#   library for mex, always available.\n\n# ``Matlab_MX_LIBRARY``\n\n#   mx library of Matlab (arrays). Available only if the component\n\n#   ``MX_LIBRARY`` has been requested.\n\n# ``Matlab_ENG_LIBRARY``\n\n#   Matlab engine library. Available only if the component ``ENG_LIBRARY``\n\n#   is requested.\n\n# ``Matlab_MAT_LIBRARY``\n\n#   Matlab matrix library. Available only if the component ``MAT_LIBRARY``\n\n#   is requested.\n\n# ``Matlab_ENGINE_LIBRARY``\n\n#   Matlab C++ engine library. Available only if the component ``ENGINE_LIBRARY``\n\n#   is requested.\n\n# ``Matlab_DATAARRAY_LIBRARY``\n\n#   Matlab C++ data array library. Available only if the component ``DATAARRAY_LIBRARY``\n\n#   is requested.\n\n# ``Matlab_LIBRARIES``\n\n#   the whole set of libraries of Matlab\n\n# ``Matlab_MEX_COMPILER``\n\n#   the mex compiler of Matlab. Currently not used.\n\n#   Available only if the component ``MEX_COMPILER`` is requested.\n\n# ``Matlab_MCC_COMPILER``\n\n#   the mcc compiler of Matlab. Included with the Matlab Compiler add-on.\n\n#   Available only if the component ``MCC_COMPILER`` is requested.\n\n#\n\n# Cached variables\n\n# \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n#\n\n# ``Matlab_MEX_EXTENSION``\n\n#   the extension of the mex files for the current platform (given by Matlab).\n\n# ``Matlab_ROOT_DIR``\n\n#   the location of the root of the Matlab installation found. If this value\n\n#   is changed by the user, the result variables are recomputed.\n\n#\n\n# Provided macros\n\n# ^^^^^^^^^^^^^^^\n\n#\n\n# :command:`matlab_get_version_from_release_name`\n\n#   returns the version from the release name\n\n# :command:`matlab_get_release_name_from_version`\n\n#   returns the release name from the Matlab version\n\n#\n\n# Provided functions\n\n# ^^^^^^^^^^^^^^^^^^\n\n#\n\n# :command:`matlab_add_mex`\n\n#   adds a target compiling a MEX file.\n\n# :command:`matlab_add_unit_test`\n\n#   adds a Matlab unit test file as a test to the project.\n\n# :command:`matlab_extract_all_installed_versions_from_registry`\n\n#   parses the registry for all Matlab versions. Available on Windows only.\n\n#   The part of the registry parsed is dependent on the host processor\n\n# :command:`matlab_get_all_valid_matlab_roots_from_registry`\n\n#   returns all the possible Matlab or MCR paths, according to a previously\n\n#   given list. Only the existing/accessible paths are kept. This is mainly\n\n#   useful for the searching all possible Matlab installation.\n\n# :command:`matlab_get_mex_suffix`\n\n#   returns the suffix to be used for the mex files\n\n#   (platform/architecture dependent)\n\n# :command:`matlab_get_version_from_matlab_run`\n\n#   returns the version of Matlab/MCR, given the full directory of the Matlab/MCR\n\n#   installation path.\n\n#\n\n#\n\n# Known issues\n\n# ^^^^^^^^^^^^\n\n#\n\n# **Symbol clash in a MEX target**\n\n#   By default, every symbols inside a MEX\n\n#   file defined with the command :command:`matlab_add_mex` have hidden\n\n#   visibility, except for the entry point. This is the default behaviour of\n\n#   the MEX compiler, which lowers the risk of symbol collision between the\n\n#   libraries shipped with Matlab, and the libraries to which the MEX file is\n\n#   linking to. This is also the default on Windows platforms.\n\n#\n\n#   However, this is not sufficient in certain case, where for instance your\n\n#   MEX file is linking against libraries that are already loaded by Matlab,\n\n#   even if those libraries have different SONAMES.\n\n#   A possible solution is to hide the symbols of the libraries to which the\n\n#   MEX target is linking to. This can be achieved in GNU GCC compilers with\n\n#   the linker option ``-Wl,--exclude-libs,ALL``.\n\n#\n\n# **Tests using GPU resources**\n\n#   in case your MEX file is using the GPU and\n\n#   in order to be able to run unit tests on this MEX file, the GPU resources\n\n#   should be properly released by Matlab. A possible solution is to make\n\n#   Matlab aware of the use of the GPU resources in the session, which can be\n\n#   performed by a command such as ``D = gpuDevice()`` at the beginning of\n\n#   the test script (or via a fixture).\n\n#\n\n#\n\n# Reference\n\n# ^^^^^^^^^\n\n#\n\n# .. variable:: Matlab_ROOT_DIR\n\n#\n\n#    The root folder of the Matlab installation. If set before the call to\n\n#    :command:`find_package`, the module will look for the components in that\n\n#    path. If not set, then an automatic search of Matlab\n\n#    will be performed. If set, it should point to a valid version of Matlab.\n\n#\n\n# .. variable:: MATLAB_FIND_DEBUG\n\n#\n\n#    If set, the lookup of Matlab and the intermediate configuration steps are\n\n#    outputted to the console.\n\n#\n\n# .. variable:: MATLAB_ADDITIONAL_VERSIONS\n\n#\n\n#   If set, specifies additional versions of Matlab that may be looked for.\n\n#   The variable should be a list of strings, organised by pairs of release\n\n#   name and versions, such as follows::\n\n#\n\n#     set(MATLAB_ADDITIONAL_VERSIONS\n\n#         \"release_name1=corresponding_version1\"\n\n#         \"release_name2=corresponding_version2\"\n\n#         ...\n\n#         )\n\n#\n\n#   Example::\n\n#\n\n#     set(MATLAB_ADDITIONAL_VERSIONS\n\n#         \"R2013b=8.2\"\n\n#         \"R2013a=8.1\"\n\n#         \"R2012b=8.0\")\n\n#\n\n#   The order of entries in this list matters when several versions of\n\n#   Matlab are installed. The priority is set according to the ordering in\n\n#   this list.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The currently supported versions. Other version can be added by the user by\n\n# providing MATLAB_ADDITIONAL_VERSIONS\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# temporary folder for all Matlab runs\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_get_version_from_release_name\n\n#\n\n#   Returns the version of Matlab (17.58) from a release name (R2017k)\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_get_release_name_from_version\n\n#\n\n#   Returns the release name (R2017k) from the version of Matlab (17.58)\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# extracts all the supported release names (R2017k...) of Matlab\n\n# internal use\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# extracts all the supported versions of Matlab\n\n# internal use\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_extract_all_installed_versions_from_registry\n\n#\n\n#   This function parses the registry and founds the Matlab versions that are\n\n#   installed. The found versions are returned in `matlab_versions`.\n\n#   Set `win64` to `TRUE` if the 64 bit version of Matlab should be looked for\n\n#   The returned list contains all versions under\n\n#   ``HKLM\\\\SOFTWARE\\\\Mathworks\\\\MATLAB`` and\n\n#   ``HKLM\\\\SOFTWARE\\\\Mathworks\\\\MATLAB Runtime`` or an empty list in case an\n\n#   error occurred (or nothing found).\n\n#\n\n#   .. note::\n\n#\n\n#     Only the versions are provided. No check is made over the existence of the\n\n#     installation referenced in the registry,\n\n#\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# /reg:64 should be added on 64 bits capable OSs in order to enable the\n\n# redirection of 64 bits applications\n",
        "Line" : 388,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# (internal)\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# get the supported versions\n",
        "Line" : 438,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# this is a manual population of the versions we want to look for\n\n# this can be done as is, but preferably with the call to\n\n# matlab_get_supported_versions and variable\n",
        "Line" : 443,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# populating the versions we want to look for\n\n# set(matlab_supported_versions)\n",
        "Line" : 447,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# # Matlab 7\n\n# set(matlab_major 7)\n\n# foreach(current_matlab_minor RANGE 4 20)\n",
        "Line" : 450,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# list(APPEND matlab_supported_versions \"${matlab_major}.${current_matlab_minor}\")\n",
        "Line" : 453,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# endforeach(current_matlab_minor)\n",
        "Line" : 454,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# # Matlab 8\n\n# set(matlab_major 8)\n\n# foreach(current_matlab_minor RANGE 0 5)\n",
        "Line" : 456,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# list(APPEND matlab_supported_versions \"${matlab_major}.${current_matlab_minor}\")\n",
        "Line" : 459,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# endforeach(current_matlab_minor)\n",
        "Line" : 460,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# # taking into account the possible additional versions provided by the user\n\n# if(DEFINED MATLAB_ADDITIONAL_VERSIONS)\n",
        "Line" : 462,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# list(APPEND matlab_supported_versions MATLAB_ADDITIONAL_VERSIONS)\n",
        "Line" : 464,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# endif()\n",
        "Line" : 465,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# we order from more recent to older\n",
        "Line" : 467,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_get_all_valid_matlab_roots_from_registry\n\n#\n\n#   Populates the Matlab root with valid versions of Matlab or\n\n#   Matlab Runtime (MCR).\n\n#   The returned matlab_roots is organized in triplets\n\n#   ``(type,version_number,matlab_root_path)``, where ``type``\n\n#   indicates either ``MATLAB`` or ``MCR``.\n\n#\n\n#   ::\n\n#\n\n#     matlab_get_all_valid_matlab_roots_from_registry(\n\n#         matlab_versions\n\n#         matlab_roots)\n\n#\n\n#   ``matlab_versions``\n\n#     the versions of each of the Matlab or MCR installations\n\n#   ``matlab_roots``\n\n#     the location of each of the Matlab or MCR installations\n",
        "Line" : 480,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# The matlab_versions comes either from\n\n# extract_matlab_versions_from_registry_brute_force or\n\n# matlab_extract_all_installed_versions_from_registry.\n",
        "Line" : 501,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# check for Matlab installations\n",
        "Line" : 506,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Check for MCR installations\n",
        "Line" : 519,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# remove the dot\n",
        "Line" : 526,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_get_mex_suffix\n\n#\n\n#   Returns the extension of the mex files (the suffixes).\n\n#   This function should not be called before the appropriate Matlab root has\n\n#   been found.\n\n#\n\n#   ::\n\n#\n\n#     matlab_get_mex_suffix(\n\n#         matlab_root\n\n#         mex_suffix)\n\n#\n\n#   ``matlab_root``\n\n#     the root of the Matlab/MCR installation\n\n#   ``mex_suffix``\n\n#     the variable name in which the suffix will be returned.\n",
        "Line" : 537,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# todo setup the extension properly. Currently I do not know if this is\n\n# sufficient for all win32 distributions.\n\n# there is also CMAKE_EXECUTABLE_SUFFIX that could be tweaked\n",
        "Line" : 556,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# we first try without suffix, since cmake does not understand a list with\n\n# one empty string element\n",
        "Line" : 564,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# this call should populate the cache automatically\n",
        "Line" : 576,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "# the program has been found?\n",
        "Line" : 590,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# this is the preferred way. If this does not work properly (eg. MCR on Windows), then we use our own knowledge\n",
        "Line" : 608,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "#RESULT_VARIABLE _matlab_mex_extension_call\n",
        "Line" : 612,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# this is only for intel architecture\n",
        "Line" : 618,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_get_version_from_matlab_run\n\n#\n\n#   This function runs Matlab program specified on arguments and extracts its\n\n#   version. If the path provided for the Matlab installation points to an MCR\n\n#   installation, the version is extracted from the installed files.\n\n#\n\n#   ::\n\n#\n\n#     matlab_get_version_from_matlab_run(\n\n#         matlab_binary_path\n\n#         matlab_list_versions)\n\n#\n\n#   ``matlab_binary_path``\n\n#     the location of the `matlab` binary executable\n\n#   ``matlab_list_versions``\n\n#     the version extracted from Matlab\n",
        "Line" : 639,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# the log file is needed since on windows the command executes in a new\n\n# window and it is not possible to get back the answer of Matlab\n\n# the -wait command is needed on windows, otherwise the call returns\n\n# immediately after the program launches itself.\n",
        "Line" : 672,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# timeout set to 120 seconds, in case it does not start\n\n# note as said before OUTPUT_VARIABLE cannot be used in a platform\n\n# independent manner however, not setting it would flush the output of Matlab\n\n# in the current console (unix variant)\n",
        "Line" : 687,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# if successful, read back the log\n",
        "Line" : 721,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_add_unit_test\n\n#\n\n#   Adds a Matlab unit test to the test set of cmake/ctest.\n\n#   This command requires the component ``MAIN_PROGRAM`` and hence is not\n\n#   available for an MCR installation.\n\n#\n\n#   The unit test uses the Matlab unittest framework (default, available\n\n#   starting Matlab 2013b+) except if the option ``NO_UNITTEST_FRAMEWORK``\n\n#   is given.\n\n#\n\n#   The function expects one Matlab test script file to be given.\n\n#   In the case ``NO_UNITTEST_FRAMEWORK`` is given, the unittest script file\n\n#   should contain the script to be run, plus an exit command with the exit\n\n#   value. This exit value will be passed to the ctest framework (0 success,\n\n#   non 0 failure). Additional arguments accepted by :command:`add_test` can be\n\n#   passed through ``TEST_ARGS`` (eg. ``CONFIGURATION <config> ...``).\n\n#\n\n#   ::\n\n#\n\n#     matlab_add_unit_test(\n\n#         NAME <name>\n\n#         UNITTEST_FILE matlab_file_containing_unittest.m\n\n#         [CUSTOM_TEST_COMMAND matlab_command_to_run_as_test]\n\n#         [UNITTEST_PRECOMMAND matlab_command_to_run]\n\n#         [TIMEOUT timeout]\n\n#         [ADDITIONAL_PATH path1 [path2 ...]]\n\n#         [MATLAB_ADDITIONAL_STARTUP_OPTIONS option1 [option2 ...]]\n\n#         [TEST_ARGS arg1 [arg2 ...]]\n\n#         [NO_UNITTEST_FRAMEWORK]\n\n#         )\n\n#\n\n#   The function arguments are:\n\n#\n\n#   ``NAME``\n\n#     name of the unittest in ctest.\n\n#   ``UNITTEST_FILE``\n\n#     the matlab unittest file. Its path will be automatically\n\n#     added to the Matlab path.\n\n#   ``CUSTOM_TEST_COMMAND``\n\n#     Matlab script command to run as the test.\n\n#     If this is not set, then the following is run:\n\n#     ``runtests('matlab_file_name'), exit(max([ans(1,:).Failed]))``\n\n#     where ``matlab_file_name`` is the ``UNITTEST_FILE`` without the extension.\n\n#   ``UNITTEST_PRECOMMAND``\n\n#     Matlab script command to be ran before the file\n\n#     containing the test (eg. GPU device initialisation based on CMake\n\n#     variables).\n\n#   ``TIMEOUT``\n\n#     the test timeout in seconds. Defaults to 180 seconds as the\n\n#     Matlab unit test may hang.\n\n#   ``ADDITIONAL_PATH``\n\n#     a list of paths to add to the Matlab path prior to\n\n#     running the unit test.\n\n#   ``MATLAB_ADDITIONAL_STARTUP_OPTIONS``\n\n#     a list of additional option in order\n\n#     to run Matlab from the command line.\n\n#     ``-nosplash -nodesktop -nodisplay`` are always added.\n\n#   ``TEST_ARGS``\n\n#     Additional options provided to the add_test command. These\n\n#     options are added to the default options (eg. \"CONFIGURATIONS Release\")\n\n#   ``NO_UNITTEST_FRAMEWORK``\n\n#     when set, indicates that the test should not\n\n#     use the unittest framework of Matlab (available for versions >= R2013a).\n\n#   ``WORKING_DIRECTORY``\n\n#     This will be the working directory for the test. If specified it will\n\n#     also be the output directory used for the log file of the test run.\n\n#     If not specified the temporary directory ``${CMAKE_BINARY_DIR}/Matlab`` will\n\n#     be used as the working directory and the log location.\n\n#\n",
        "Line" : 757,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_add_mex\n\n#\n\n#   Adds a Matlab MEX target.\n\n#   This commands compiles the given sources with the current tool-chain in\n\n#   order to produce a MEX file. The final name of the produced output may be\n\n#   specified, as well as additional link libraries, and a documentation entry\n\n#   for the MEX file. Remaining arguments of the call are passed to the\n\n#   :command:`add_library` or :command:`add_executable` command.\n\n#\n\n#   ::\n\n#\n\n#      matlab_add_mex(\n\n#          NAME <name>\n\n#          [EXECUTABLE | MODULE | SHARED]\n\n#          SRC src1 [src2 ...]\n\n#          [OUTPUT_NAME output_name]\n\n#          [DOCUMENTATION file.txt]\n\n#          [LINK_TO target1 target2 ...]\n\n#          [...]\n\n#      )\n\n#\n\n#   ``NAME``\n\n#     name of the target.\n\n#   ``SRC``\n\n#     list of source files.\n\n#   ``LINK_TO``\n\n#     a list of additional link dependencies.  The target links to ``libmex``\n\n#     by default. If ``Matlab_MX_LIBRARY`` is defined, it also\n\n#     links to ``libmx``.\n\n#   ``OUTPUT_NAME``\n\n#     if given, overrides the default name. The default name is\n\n#     the name of the target without any prefix and\n\n#     with ``Matlab_MEX_EXTENSION`` suffix.\n\n#   ``DOCUMENTATION``\n\n#     if given, the file ``file.txt`` will be considered as\n\n#     being the documentation file for the MEX file. This file is copied into\n\n#     the same folder without any processing, with the same name as the final\n\n#     mex file, and with extension `.m`. In that case, typing ``help <name>``\n\n#     in Matlab prints the documentation contained in this file.\n\n#   ``MODULE`` or ``SHARED`` may be given to specify the type of library to be\n\n#     created. ``EXECUTABLE`` may be given to create an executable instead of\n\n#     a library. If no type is given explicitly, the type is ``SHARED``.\n\n#\n\n#   The documentation file is not processed and should be in the following\n\n#   format:\n\n#\n\n#   ::\n\n#\n\n#     % This is the documentation\n\n#     function ret = mex_target_output_name(input1)\n\n#\n",
        "Line" : 865,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# we do not need all this on Windows\n\n# pthread options\n",
        "Line" : 920,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# we should use try_compile instead, the link flags are discarded from\n\n# this compiler_flag function.\n\n#check_cxx_compiler_flag(-Wl,--exclude-libs,ALL HAS_SYMBOL_HIDING_CAPABILITY)\n",
        "Line" : 927,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# documentation\n",
        "Line" : 989,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# documentation\n",
        "Line" : 998,
        "CharPositionInLine" : 10
      },
      "47" : {
        "Text" : "# entry point in the mex file + taking care of visibility and symbol clashes.\n",
        "Line" : 1000,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# Apparently, compiling with -pthread generated the proper link flags\n\n# and some defines at compilation\n",
        "Line" : 1022,
        "CharPositionInLine" : 6
      },
      "49" : {
        "Text" : "# if we do not do that, the symbols linked from eg. boost remain weak and\n\n# then clash with the ones defined in the matlab process. So by default\n\n# the symbols are hidden.\n\n# This also means that for shared libraries (like MEX), the entry point\n\n# should be explicitly declared with default visibility, otherwise Matlab\n\n# cannot find the entry point.\n\n# Note that this is particularly meaningful if the MEX wrapper itself\n\n# contains symbols that are clashing with Matlab (that are compiled in the\n\n# MEX file). In order to propagate the visibility options to the libraries\n\n# to which the MEX file is linked against, the -Wl,--exclude-libs,ALL\n\n# option should also be specified.\n",
        "Line" : 1028,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "#  get_target_property(\n\n#    _previous_link_flags\n\n#    ${${prefix}_NAME}\n\n#    LINK_FLAGS)\n\n#  if(NOT _previous_link_flags)\n\n#    set(_previous_link_flags)\n\n#  endif()\n",
        "Line" : 1047,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "#  if(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"GNU\")\n\n#    set_target_properties(${${prefix}_NAME}\n\n#      PROPERTIES\n\n#        LINK_FLAGS \"${_previous_link_flags} -Wl,--exclude-libs,ALL\"\n\n#        # -Wl,--version-script=${_FindMatlab_SELF_DIR}/MatlabLinuxVisibility.map\"\n\n#    )\n\n#  elseif(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\")\n\n#    # in this case, all other symbols become hidden.\n\n#    set_target_properties(${${prefix}_NAME}\n\n#      PROPERTIES\n\n#        LINK_FLAGS \"${_previous_link_flags} -Wl,-exported_symbol,_mexFunction\"\n\n#        #-Wl,-exported_symbols_list,${_FindMatlab_SELF_DIR}/MatlabOSXVisilibity.map\"\n\n#    )\n\n#  endif()\n",
        "Line" : 1055,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# (internal)\n\n# Used to get the version of matlab, using caching. This basically transforms the\n\n# output of the root list, with possible unknown version, to a version\n\n# This can possibly run Matlab for extracting the version.\n",
        "Line" : 1083,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# if the version is not trivial, we query matlab (if not MCR) for that\n\n# we keep track of the location of matlab that induced this version\n\n#if(NOT DEFINED Matlab_PROG_VERSION_STRING_AUTO_DETECT)\n\n#  set(Matlab_PROG_VERSION_STRING_AUTO_DETECT \"\" CACHE INTERNAL \"internal matlab location for the discovered version\")\n\n#endif()\n",
        "Line" : 1089,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# the version is known, we just return it\n",
        "Line" : 1096,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# we inspect the application version.xml file that contains the product information\n",
        "Line" : 1108,
        "CharPositionInLine" : 6
      },
      "56" : {
        "Text" : "# default fallback to Matlab\n",
        "Line" : 1115,
        "CharPositionInLine" : 6
      },
      "57" : {
        "Text" : "# UNKNOWN is the default behaviour in case we\n\n# - have an erroneous matlab_root\n\n# - have an initial 'UNKNOWN'\n",
        "Line" : 1131,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# MATLAB versions\n",
        "Line" : 1135,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# do we already have a matlab program?\n",
        "Line" : 1138,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# if not found, clear the dependent variables\n",
        "Line" : 1155,
        "CharPositionInLine" : 6
      },
      "61" : {
        "Text" : "# full real path for path comparison\n",
        "Line" : 1166,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# is it the same as the previous one?\n",
        "Line" : 1171,
        "CharPositionInLine" : 4
      },
      "63" : {
        "Text" : "# update the location of the program\n",
        "Line" : 1177,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# set the version into the cache\n",
        "Line" : 1192,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "# warning, just in case several versions found (should not happen)\n",
        "Line" : 1195,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# return the updated value\n",
        "Line" : 1200,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# MCR\n\n# we cannot run anything in order to extract the version. We assume that the file\n\n# VersionInfo.xml exists under the MatlabRoot, we look for it and extract the version from there\n",
        "Line" : 1203,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# parses \"<version>9.2.0.538062</version>\"\n",
        "Line" : 1210,
        "CharPositionInLine" : 6
      },
      "69" : {
        "Text" : "# Matlab or MCR\n",
        "Line" : 1227,
        "CharPositionInLine" : 10
      },
      "70" : {
        "Text" : "# Utility function for finding Matlab or MCR on Win32\n",
        "Line" : 1232,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# On WIN32, we look for Matlab installation in the registry\n\n# if unsuccessful, we look for all known revision and filter the existing\n\n# ones.\n",
        "Line" : 1234,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# testing if we are able to extract the needed information from the registry\n",
        "Line" : 1238,
        "CharPositionInLine" : 2
      },
      "73" : {
        "Text" : "# the returned list is empty, doing the search on all known versions\n",
        "Line" : 1249,
        "CharPositionInLine" : 2
      },
      "74" : {
        "Text" : "# filtering the results with the registry keys\n",
        "Line" : 1257,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# Utility function for finding Matlab or MCR on OSX\n",
        "Line" : 1263,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# on mac, we look for the /Application paths\n\n# this corresponds to the behaviour on Windows. On Linux, we do not have\n\n# any other guess.\n",
        "Line" : 1267,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "# Check Matlab, has precedence over MCR\n",
        "Line" : 1281,
        "CharPositionInLine" : 4
      },
      "78" : {
        "Text" : "# Checks MCR\n",
        "Line" : 1289,
        "CharPositionInLine" : 4
      },
      "79" : {
        "Text" : "# Utility function for finding Matlab or MCR from the PATH\n",
        "Line" : 1303,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# At this point, we have no other choice than trying to find it from PATH.\n\n# If set by the user, this wont change\n",
        "Line" : 1308,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# we then populate the list of roots, with empty version\n",
        "Line" : 1315,
        "CharPositionInLine" : 4
      },
      "82" : {
        "Text" : "# resolve symlinks\n",
        "Line" : 1320,
        "CharPositionInLine" : 4
      },
      "83" : {
        "Text" : "# get the directory (the command below has to be run twice)\n\n# this will be the matlab root\n",
        "Line" : 1323,
        "CharPositionInLine" : 4
      },
      "84" : {
        "Text" : "# Matlab should be in bin\n",
        "Line" : 1326,
        "CharPositionInLine" : 93
      },
      "85" : {
        "Text" : "# We found the Matlab program\n",
        "Line" : 1328,
        "CharPositionInLine" : 4
      },
      "86" : {
        "Text" : "# we remove this from the CACHE\n",
        "Line" : 1331,
        "CharPositionInLine" : 4
      },
      "87" : {
        "Text" : "# we then populate the list of roots, with empty version\n",
        "Line" : 1338,
        "CharPositionInLine" : 6
      },
      "88" : {
        "Text" : "# resolve symlinks\n",
        "Line" : 1343,
        "CharPositionInLine" : 6
      },
      "89" : {
        "Text" : "# get the directory (the command below has to be run twice)\n\n# this will be the matlab root\n",
        "Line" : 1346,
        "CharPositionInLine" : 6
      },
      "90" : {
        "Text" : "# Matlab Runtime mex compiler should be in bin\n",
        "Line" : 1349,
        "CharPositionInLine" : 89
      },
      "91" : {
        "Text" : "# We found the Matlab program\n",
        "Line" : 1351,
        "CharPositionInLine" : 6
      },
      "92" : {
        "Text" : "# ###################################\n\n# Exploring the possible Matlab_ROOTS\n",
        "Line" : 1368,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# this variable will get all Matlab installations found in the current system.\n",
        "Line" : 1371,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# if the user specifies a possible root, we keep this one\n",
        "Line" : 1375,
        "CharPositionInLine" : 2
      },
      "95" : {
        "Text" : "# if Matlab_ROOT_DIR specified but erroneous\n",
        "Line" : 1378,
        "CharPositionInLine" : 4
      },
      "96" : {
        "Text" : "# NOTFOUND indicates the code below to search for the version automatically\n",
        "Line" : 1383,
        "CharPositionInLine" : 4
      },
      "97" : {
        "Text" : "# empty version, empty MCR/Matlab indication\n",
        "Line" : 1385,
        "CharPositionInLine" : 82
      },
      "98" : {
        "Text" : "# cached version\n",
        "Line" : 1387,
        "CharPositionInLine" : 105
      },
      "99" : {
        "Text" : "# if the user does not specify the possible installation root, we look for\n\n# one installation using the appropriate heuristics.\n\n# There is apparently no standard way on Linux.\n",
        "Line" : 1392,
        "CharPositionInLine" : 2
      },
      "100" : {
        "Text" : "# if we have not found anything, we fall back on the PATH\n",
        "Line" : 1407,
        "CharPositionInLine" : 2
      },
      "101" : {
        "Text" : "# take the first possible Matlab root\n",
        "Line" : 1420,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# adding a warning in case of ambiguity\n",
        "Line" : 1429,
        "CharPositionInLine" : 2
      },
      "103" : {
        "Text" : "# check if the root changed wrt. the previous defined one, if so\n\n# clear all the cached variables for being able to reconfigure properly\n",
        "Line" : 1437,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# internal\n",
        "Line" : 1456,
        "CharPositionInLine" : 8
      },
      "105" : {
        "Text" : "#Matlab_PROG_VERSION_STRING_AUTO_DETECT\n",
        "Line" : 1459,
        "CharPositionInLine" : 8
      },
      "106" : {
        "Text" : "# Fix the version, in case this one is NOTFOUND\n",
        "Line" : 1473,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "# i should be for intel\n",
        "Line" : 1498,
        "CharPositionInLine" : 32
      },
      "108" : {
        "Text" : "# This variable goes to the cache.\n",
        "Line" : 1544,
        "CharPositionInLine" : 2
      },
      "109" : {
        "Text" : "# internal\n\n# This small stub around find_library is to prevent any pollution of CMAKE_FIND_LIBRARY_PREFIXES in the global scope.\n\n# This is the function to be used below instead of the find_library directives.\n",
        "Line" : 1556,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "# the MEX library/header are required\n",
        "Line" : 1568,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "# the MEX extension is required\n",
        "Line" : 1587,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "# the matlab root is required\n",
        "Line" : 1590,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "# component Mex Compiler\n",
        "Line" : 1593,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "# component Matlab program\n",
        "Line" : 1609,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "# Component MX library\n",
        "Line" : 1625,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "# Component ENG library\n",
        "Line" : 1641,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "# Component MAT library\n",
        "Line" : 1657,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "# Component Simulink\n",
        "Line" : 1673,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "# component MCC Compiler\n",
        "Line" : 1689,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "# component MatlabEngine\n",
        "Line" : 1705,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "# component MatlabDataArray\n",
        "Line" : 1722,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 122
    },
    "deps/src/cmake-3.13.4/Modules/FindMotif.cmake" : {
      "ObjectId" : "7304d957cbfb070ecbef0051100932deed82c03f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindMotif\n\n# ---------\n\n#\n\n# Try to find Motif (or lesstif)\n\n#\n\n# Once done this will define:\n\n#\n\n# ::\n\n#\n\n#   MOTIF_FOUND        - system has MOTIF\n\n#   MOTIF_INCLUDE_DIR  - include paths to use Motif\n\n#   MOTIF_LIBRARIES    - Link these to use Motif\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindODBC.cmake" : {
      "ObjectId" : "c8ca477cca8b636a7b86d782f6b4ca3ca5f3a696",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindODBC\n--------\n\nFind an Open Database Connectivity (ODBC) include directory and library.\n\nOn Windows, when building with Visual Studio, this module assumes the ODBC\nlibrary is provided by the available Windows SDK.\n\nOn Unix, this module allows to search for ODBC library provided by\nunixODBC or iODBC implementations of ODBC API.\nThis module reads hint about location of the config program:\n\n.. variable:: ODBC_CONFIG\n\n  Location of odbc_config or iodbc-config program\n\nOtherwise, this module tries to find the config program,\nfirst from unixODBC, then from iODBC.\nIf no config program found, this module searches for ODBC header\nand library in list of known locations.\n\nImported targets\n^^^^^^^^^^^^^^^^\n\nThis module defines the following :prop_tgt:`IMPORTED` targets:\n\n.. variable:: ODBC::ODBC\n\n  Imported target for using the ODBC library, if found.\n\nResult variables\n^^^^^^^^^^^^^^^^\n\n.. variable:: ODBC_FOUND\n\n  Set to true if ODBC library found, otherwise false or undefined.\n\n.. variable:: ODBC_INCLUDE_DIRS\n\n  Paths to include directories listed in one variable for use by ODBC client.\n  May be empty on Windows, where the include directory corresponding to the\n  expected Windows SDK is already available in the compilation environment.\n\n.. variable:: ODBC_LIBRARIES\n\n  Paths to libraries to linked against to use ODBC.\n  May just a library name on Windows, where the library directory corresponding\n  to the expected Windows SDK is already available in the compilation environment.\n\n.. variable:: ODBC_CONFIG\n\n  Path to unixODBC or iODBC config program, if found or specified.\n\nCache variables\n^^^^^^^^^^^^^^^\n\nFor users who wish to edit and control the module behavior, this module\nreads hints about search locations from the following variables:\n\n.. variable:: ODBC_INCLUDE_DIR\n\n  Path to ODBC include directory with ``sql.h`` header.\n\n.. variable:: ODBC_LIBRARY\n\n  Path to ODBC library to be linked.\n\nThese variables should not be used directly by project code.\n\nLimitations\n^^^^^^^^^^^\n\nOn Windows, this module does not search for iODBC.\nOn Unix, there is no way to prefer unixODBC over iODBC, or vice versa,\nother than providing the config program location using the ``ODBC_CONFIG``.\nThis module does not allow to search for a specific ODBC driver.\n\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define lists used internally\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### Try Windows Kits ##########################################################\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# List names of ODBC libraries on Windows\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# List additional libraries required to use ODBC library\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "### Try unixODBC or iODBC config program ######################################\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# unixODBC and iODBC accept unified command line options\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Collect paths of include directories from CFLAGS\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Collect paths of library names and directories from LIBS\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "### Try unixODBC or iODBC in include/lib filesystems ##########################\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# List names of both ODBC libraries, unixODBC and iODBC\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "### Find include directories ##################################################\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "### Find libraries ############################################################\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# system parths or collected from ODBC_CONFIG\n",
        "Line" : 172,
        "CharPositionInLine" : 31
      },
      "15" : {
        "Text" : "# Unset internal lists as no longer used\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "### Set result variables ######################################################\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "### Import targets ############################################################\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "deps/src/cmake-3.13.4/Modules/FindOpenACC.cmake" : {
      "ObjectId" : "dc8321daa799df5b9c3742835f9d88b44277c263",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindOpenACC\n-----------\n\nDetect OpenACC support by the compiler.\n\nThis module can be used to detect OpenACC support in a compiler.\nIf the compiler supports OpenACC, the flags required to compile with\nOpenACC support are returned in variables for the different languages.\nCurrently, only PGI, GNU and Cray compilers are supported.\n\nVariables\n^^^^^^^^^\n\nThis module will set the following variables per language in your\nproject, where ``<lang>`` is one of C, CXX, or Fortran:\n\n``OpenACC_<lang>_FOUND``\n  Variable indicating if OpenACC support for ``<lang>`` was detected.\n``OpenACC_<lang>_FLAGS``\n  OpenACC compiler flags for ``<lang>``, separated by spaces.\n\nThe module will also try to provide the OpenACC version variables:\n\n``OpenACC_<lang>_SPEC_DATE``\n  Date of the OpenACC specification implemented by the ``<lang>`` compiler.\n``OpenACC_<lang>_VERSION_MAJOR``\n  Major version of OpenACC implemented by the ``<lang>`` compiler.\n``OpenACC_<lang>_VERSION_MINOR``\n  Minor version of OpenACC implemented by the ``<lang>`` compiler.\n``OpenACC_<lang>_VERSION``\n  OpenACC version implemented by the ``<lang>`` compiler.\n\nThe specification date is formatted as given in the OpenACC standard:\n``yyyymm`` where ``yyyy`` and ``mm`` represents the year and month of\nthe OpenACC specification implemented by the ``<lang>`` compiler.\n\nInput Variables\n^^^^^^^^^^^^^^^\n\n``OpenACC_ACCEL_TARGET=<target>``\nIf set, will the correct target accelerator flag set to the <target> will\nbe returned with OpenACC_<lang>_FLAGS.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fall back to a few common flags.\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Find target accelerator flags.\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Find compiler's verbose flag for OpenACC.\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# -Minfo=accel prints out OpenACC's messages on optimizations.\n",
        "Line" : 177,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Combined versions, 2.5 onwards\n",
        "Line" : 210,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# 2013 08 is the corrected version.\n",
        "Line" : 212,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Modules/FindOpenAL.cmake" : {
      "ObjectId" : "7521d51211dbd51ca3b9363c1ebe1c6b1c6e028d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindOpenAL\n\n# ----------\n\n#\n\n#\n\n#\n\n# Locate OpenAL This module defines OPENAL_LIBRARY OPENAL_FOUND, if\n\n# false, do not try to link to OpenAL OPENAL_INCLUDE_DIR, where to find\n\n# the headers\n\n#\n\n# $OPENALDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$OPENALDIR used in building OpenAL.\n\n#\n\n# Created by Eric Wing.  This was influenced by the FindSDL.cmake\n\n# module.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This makes the presumption that you are include al.h like\n\n# #include \"al.h\"\n\n# and not\n\n# #include <AL/al.h>\n\n# The reason for this is that the latter is not entirely portable.\n\n# Windows/Creative Labs does not by default put their headers in AL/ and\n\n# OS X uses the convention <OpenAL/al.h>.\n\n#\n\n# For Windows, Creative Labs seems to have added a registry key for their\n\n# OpenAL 1.1 installer. I have added that key to the list of search paths,\n\n# however, the key looks like it could be a little fragile depending on\n\n# if they decide to change the 1.00.0000 number for bug fix releases.\n\n# Also, they seem to have laid down groundwork for multiple library platforms\n\n# which puts the library in an extra subdirectory. Currently there is only\n\n# Win32 and I have hardcoded that here. This may need to be adjusted as\n\n# platforms are introduced.\n\n# The OpenAL 1.0 installer doesn't seem to have a useful key I can use.\n\n# I do not know if the Nvidia OpenAL SDK has a registry key.\n\n#\n\n# For OS X, remember that OpenAL was added by Apple in 10.4 (Tiger).\n\n# To support the framework, I originally wrote special framework detection\n\n# code in this module which I have now removed with CMake's introduction\n\n# of native support for frameworks.\n\n# In addition, OpenAL is open source, and it is possible to compile on Panther.\n\n# Furthermore, due to bugs in the initial OpenAL release, and the\n\n# transition to OpenAL 1.1, it is common to need to override the built-in\n\n# framework.\n\n# Per my request, CMake should search for frameworks first in\n\n# the following order:\n\n# ~/Library/Frameworks/OpenAL.framework/Headers\n\n# /Library/Frameworks/OpenAL.framework/Headers\n\n# /System/Library/Frameworks/OpenAL.framework/Headers\n\n#\n\n# On OS X, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# OPENAL_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 66,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "# Blastwave\n",
        "Line" : 67,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/FindOpenCL.cmake" : {
      "ObjectId" : "fe162b49b52f5258ab2497019c76c1f8e05d5f20",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindOpenCL\n\n# ----------\n\n#\n\n# Try to find OpenCL\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines :prop_tgt:`IMPORTED` target ``OpenCL::OpenCL``, if\n\n# OpenCL has been found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables::\n\n#\n\n#   OpenCL_FOUND          - True if OpenCL was found\n\n#   OpenCL_INCLUDE_DIRS   - include directories for OpenCL\n\n#   OpenCL_LIBRARIES      - link against this library to use OpenCL\n\n#   OpenCL_VERSION_STRING - Highest supported OpenCL version (eg. 1.2)\n\n#   OpenCL_VERSION_MAJOR  - The major version of the OpenCL implementation\n\n#   OpenCL_VERSION_MINOR  - The minor version of the OpenCL implementation\n\n#\n\n# The module will also define two cache variables::\n\n#\n\n#   OpenCL_INCLUDE_DIR    - the OpenCL include directory\n\n#   OpenCL_LIBRARY        - the path to the OpenCL library\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindOpenGL.cmake" : {
      "ObjectId" : "4d0786cd2fcd3ca375b67552f3b4202386c7f9bc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindOpenGL\n\n# ----------\n\n#\n\n# FindModule for OpenGL and GLU.\n\n#\n\n# Optional COMPONENTS\n\n# ^^^^^^^^^^^^^^^^^^^\n\n#\n\n# This module respects several optional COMPONENTS: ``EGL``, ``GLX``, and\n\n# ``OpenGL``.  There are corresponding import targets for each of these flags.\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``OpenGL::GL``\n\n#  Defined to the platform-specific OpenGL libraries if the system has OpenGL.\n\n# ``OpenGL::OpenGL``\n\n#  Defined to libOpenGL if the system is GLVND-based.\n\n# ``OpenGL::GLU``\n\n#  Defined if the system has GLU.\n\n# ``OpenGL::GLX``\n\n#  Defined if the system has GLX.\n\n# ``OpenGL::EGL``\n\n#  Defined if the system has EGL.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module sets the following variables:\n\n#\n\n# ``OPENGL_FOUND``\n\n#  True, if the system has OpenGL and all components are found.\n\n# ``OPENGL_XMESA_FOUND``\n\n#  True, if the system has XMESA.\n\n# ``OPENGL_GLU_FOUND``\n\n#  True, if the system has GLU.\n\n# ``OpenGL_OpenGL_FOUND``\n\n#  True, if the system has an OpenGL library.\n\n# ``OpenGL_GLX_FOUND``\n\n#  True, if the system has GLX.\n\n# ``OpenGL_EGL_FOUND``\n\n#  True, if the system has EGL.\n\n# ``OPENGL_INCLUDE_DIR``\n\n#  Path to the OpenGL include directory.\n\n# ``OPENGL_EGL_INCLUDE_DIRS``\n\n#  Path to the EGL include directory.\n\n# ``OPENGL_LIBRARIES``\n\n#  Paths to the OpenGL library, windowing system libraries, and GLU libraries.\n\n#  On Linux, this assumes GLX and is never correct for EGL-based targets.\n\n#  Clients are encouraged to use the ``OpenGL::*`` import targets instead.\n\n#\n\n# Cache variables\n\n# ^^^^^^^^^^^^^^^\n\n#\n\n# The following cache variables may also be set:\n\n#\n\n# ``OPENGL_egl_LIBRARY``\n\n#  Path to the EGL library.\n\n# ``OPENGL_glu_LIBRARY``\n\n#  Path to the GLU library.\n\n# ``OPENGL_glx_LIBRARY``\n\n#  Path to the GLVND 'GLX' library.\n\n# ``OPENGL_opengl_LIBRARY``\n\n#  Path to the GLVND 'OpenGL' library\n\n# ``OPENGL_gl_LIBRARY``\n\n#  Path to the OpenGL library.  New code should prefer the ``OpenGL::*`` import\n\n#  targets.\n\n#\n\n# Linux-specific\n\n# ^^^^^^^^^^^^^^\n\n#\n\n# Some Linux systems utilize GLVND as a new ABI for OpenGL.  GLVND separates\n\n# context libraries from OpenGL itself; OpenGL lives in \"libOpenGL\", and\n\n# contexts are defined in \"libGLX\" or \"libEGL\".  GLVND is currently the only way\n\n# to get OpenGL 3+ functionality via EGL in a manner portable across vendors.\n\n# Projects may use GLVND explicitly with target ``OpenGL::OpenGL`` and either\n\n# ``OpenGL::GLX`` or ``OpenGL::EGL``.\n\n#\n\n# Projects may use the ``OpenGL::GL`` target (or ``OPENGL_LIBRARIES`` variable)\n\n# to use legacy GL interfaces.  These will use the legacy GL library located\n\n# by ``OPENGL_gl_LIBRARY``, if available.  If ``OPENGL_gl_LIBRARY`` is empty or\n\n# not found and GLVND is available, the ``OpenGL::GL`` target will use GLVND\n\n# ``OpenGL::OpenGL`` and ``OpenGL::GLX`` (and the ``OPENGL_LIBRARIES``\n\n# variable will use the corresponding libraries).  Thus, for non-EGL-based\n\n# Linux targets, the ``OpenGL::GL`` target is most portable.\n\n#\n\n# A ``OpenGL_GL_PREFERENCE`` variable may be set to specify the preferred way\n\n# to provide legacy GL interfaces in case multiple choices are available.\n\n# The value may be one of:\n\n#\n\n# ``GLVND``\n\n#  If the GLVND OpenGL and GLX libraries are available, prefer them.\n\n#  This forces ``OPENGL_gl_LIBRARY`` to be empty.\n\n#  This is the default if components were requested (since components\n\n#  correspond to GLVND libraries) or if policy :policy:`CMP0072` is\n\n#  set to ``NEW``.\n\n#\n\n# ``LEGACY``\n\n#  Prefer to use the legacy libGL library, if available.\n\n#  This is the default if no components were requested and\n\n#  policy :policy:`CMP0072` is not set to ``NEW``.\n\n#\n\n# For EGL targets the client must rely on GLVND support on the user's system.\n\n# Linking should use the ``OpenGL::OpenGL OpenGL::EGL`` targets.  Using GLES*\n\n# libraries is theoretically possible in place of ``OpenGL::OpenGL``, but this\n\n# module does not currently support that; contributions welcome.\n\n#\n\n# ``OPENGL_egl_LIBRARY`` and ``OPENGL_EGL_INCLUDE_DIRS`` are defined in the case of\n\n# GLVND.  For non-GLVND Linux and other systems these are left undefined.\n\n#\n\n# macOS-Specific\n\n# ^^^^^^^^^^^^^^\n\n#\n\n# On OSX FindOpenGL defaults to using the framework version of OpenGL. People\n\n# will have to change the cache values of OPENGL_glu_LIBRARY and\n\n# OPENGL_gl_LIBRARY to use OpenGL with X11 on OSX.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Provide OPENGL_USE_<C> variables for each component.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The OpenGL.framework provides both gl and glu\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Handle HP-UX cases where we only want to find OpenGL in either hpux64\n\n# or hpux32 depending on if we're doing a 64 bit build.\n",
        "Line" : 159,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# The first line below is to make sure that the proper headers\n\n# are used on a Linux machine with the NVidia drivers installed.\n\n# They replace Mesa with NVidia's own library but normally do not\n\n# install headers and that causes the linking to\n\n# fail since the compiler finds the Mesa headers but NVidia's library.\n\n# Make sure the NVIDIA directory comes BEFORE the others.\n\n#  - Atanas Georgiev <atanas@cs.columbia.edu>\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Search for the GLVND libraries.  We do this regardless of COMPONENTS; we'll\n\n# take into account the COMPONENTS logic later.\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# A preference has been explicitly specified.\n",
        "Line" : 227,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# No preference was explicitly specified, but the caller did request\n\n# at least one GLVND component.  Prefer GLVND for legacy GL.\n",
        "Line" : 235,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# No preference was explicitly specified and no GLVND components were\n\n# requested.  Use a policy to choose the default.\n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# We can provide legacy GL using GLVND libraries.\n\n# Do not use any legacy GL library.\n",
        "Line" : 254,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# We cannot provide legacy GL using GLVND libraries.\n\n# Search for the legacy GL library.\n",
        "Line" : 258,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# FPHSA cannot handle \"this OR that is required\", so we conditionally set what\n\n# it must look for.  First clear any previous config we might have done:\n",
        "Line" : 286,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# now we append the libraries as appropriate.  The complicated logic\n\n# basically comes down to \"use libOpenGL when we can, and add in specific\n\n# context mechanisms when requested, or we need them to preserve the previous\n\n# default where glx is always available.\"\n",
        "Line" : 290,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# GLVND GLX library.  Preferred when available.\n",
        "Line" : 308,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# GLVND EGL library.\n",
        "Line" : 325,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Old-style \"libGL\" library: used as a fallback when GLVND isn't available.\n",
        "Line" : 330,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# We always need the 'gl.h' include dir.\n",
        "Line" : 341,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# OpenGL_OpenGL_FOUND is a bit unique in that it is okay if /either/ libOpenGL\n\n# or libGL is found.\n\n# Using libGL with libEGL is never okay, though; we handle that case later.\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# User-visible names should be plural.\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# OpenGL:: targets\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# ::OpenGL is a GLVND library, and thus Linux-only: we don't bother checking\n\n# for a framework version of this library.\n",
        "Line" : 401,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# ::GLX is a GLVND library, and thus Linux-only: we don't bother checking\n\n# for a framework version of this library.\n",
        "Line" : 417,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# A legacy GL library is available, so use it for the legacy GL target.\n",
        "Line" : 436,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# A legacy GL library is not available, but we can provide the legacy GL\n\n# target using GLVND OpenGL+GLX.\n",
        "Line" : 458,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# ::EGL is a GLVND library, and thus Linux-only: we don't bother checking\n\n# for a framework version of this library.\n\n# Note we test for OpenGL::OpenGL as a target.  When this module is updated to\n\n# support GLES, we would additionally want to check for the hypothetical GLES\n\n# target and enable EGL if either ::GLES or ::OpenGL is created.\n",
        "Line" : 469,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Note that EGL's include directory is different from OpenGL/GLX's!\n",
        "Line" : 486,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# OPENGL_LIBRARIES mirrors OpenGL::GL's logic ...\n",
        "Line" : 514,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# ... and also includes GLU, if available.\n",
        "Line" : 522,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# This deprecated setting is for backward compatibility with CMake1.4\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# This deprecated setting is for backward compatibility with CMake1.4\n",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "deps/src/cmake-3.13.4/Modules/FindOpenMP.cmake" : {
      "ObjectId" : "cbc6ed8463f79d115b9fcc3401ca3707f3e6747e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindOpenMP\n\n# ----------\n\n#\n\n# Finds OpenMP support\n\n#\n\n# This module can be used to detect OpenMP support in a compiler.  If\n\n# the compiler supports OpenMP, the flags required to compile with\n\n# OpenMP support are returned in variables for the different languages.\n\n# The variables may be empty if the compiler does not need a special\n\n# flag to support OpenMP.\n\n#\n\n# Variables\n\n# ^^^^^^^^^\n\n#\n\n# The module exposes the components ``C``, ``CXX``, and ``Fortran``.\n\n# Each of these controls the various languages to search OpenMP support for.\n\n#\n\n# Depending on the enabled components the following variables will be set:\n\n#\n\n# ``OpenMP_FOUND``\n\n#   Variable indicating that OpenMP flags for all requested languages have been found.\n\n#   If no components are specified, this is true if OpenMP settings for all enabled languages\n\n#   were detected.\n\n# ``OpenMP_VERSION``\n\n#   Minimal version of the OpenMP standard detected among the requested languages,\n\n#   or all enabled languages if no components were specified.\n\n#\n\n# This module will set the following variables per language in your\n\n# project, where ``<lang>`` is one of C, CXX, or Fortran:\n\n#\n\n# ``OpenMP_<lang>_FOUND``\n\n#   Variable indicating if OpenMP support for ``<lang>`` was detected.\n\n# ``OpenMP_<lang>_FLAGS``\n\n#   OpenMP compiler flags for ``<lang>``, separated by spaces.\n\n#\n\n# For linking with OpenMP code written in ``<lang>``, the following\n\n# variables are provided:\n\n#\n\n# ``OpenMP_<lang>_LIB_NAMES``\n\n#   :ref:`;-list <CMake Language Lists>` of libraries for OpenMP programs for ``<lang>``.\n\n# ``OpenMP_<libname>_LIBRARY``\n\n#   Location of the individual libraries needed for OpenMP support in ``<lang>``.\n\n# ``OpenMP_<lang>_LIBRARIES``\n\n#   A list of libraries needed to link with OpenMP code written in ``<lang>``.\n\n#\n\n# Additionally, the module provides :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``OpenMP::OpenMP_<lang>``\n\n#   Target for using OpenMP from ``<lang>``.\n\n#\n\n# Specifically for Fortran, the module sets the following variables:\n\n#\n\n# ``OpenMP_Fortran_HAVE_OMPLIB_HEADER``\n\n#   Boolean indicating if OpenMP is accessible through ``omp_lib.h``.\n\n# ``OpenMP_Fortran_HAVE_OMPLIB_MODULE``\n\n#   Boolean indicating if OpenMP is accessible through the ``omp_lib`` Fortran module.\n\n#\n\n# The module will also try to provide the OpenMP version variables:\n\n#\n\n# ``OpenMP_<lang>_SPEC_DATE``\n\n#   Date of the OpenMP specification implemented by the ``<lang>`` compiler.\n\n# ``OpenMP_<lang>_VERSION_MAJOR``\n\n#   Major version of OpenMP implemented by the ``<lang>`` compiler.\n\n# ``OpenMP_<lang>_VERSION_MINOR``\n\n#   Minor version of OpenMP implemented by the ``<lang>`` compiler.\n\n# ``OpenMP_<lang>_VERSION``\n\n#   OpenMP version implemented by the ``<lang>`` compiler.\n\n#\n\n# The specification date is formatted as given in the OpenMP standard:\n\n# ``yyyymm`` where ``yyyy`` and ``mm`` represents the year and month of\n\n# the OpenMP specification implemented by the ``<lang>`` compiler.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if() recognizes numbers and booleans\n\n# if() quoted variables not dereferenced\n\n# if IN_LIST\n",
        "Line" : 78,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "# Cray compiler activate OpenMP with -h omp, which is enabled by default.\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# If we know the correct flags, use those\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Fall back to reasonable default tries otherwise\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# sample openmp source code to test\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# in Fortran, an implementation may provide an omp_lib.h header\n\n# or omp_lib module, or both (OpenMP standard, section 3.1)\n\n# Furthmore !$ is the Fortran equivalent of #ifdef _OPENMP (OpenMP standard, 2.2.2)\n\n# Without the conditional compilation, some compilers (e.g. PGI) might compile OpenMP code\n\n# while not actually enabling OpenMP, building code sequentially\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We do not know how to extract implicit OpenMP libraries for this compiler.\n\n# Assume that it handles them automatically, e.g. the Intel Compiler on\n\n# Windows should put the dependency in its object files.\n",
        "Line" : 245,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Check for separate OpenMP library on AppleClang 7+\n",
        "Line" : 254,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Preview versions\n",
        "Line" : 347,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# OpenMP 5.0 preview 1\n",
        "Line" : 348,
        "CharPositionInLine" : 17
      },
      "12" : {
        "Text" : "# Combined versions, 2.5 onwards\n",
        "Line" : 349,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# C/C++ version 2.0\n",
        "Line" : 355,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Fortran version 2.0\n",
        "Line" : 357,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Fortran version 1.1\n",
        "Line" : 359,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# C/C++ version 1.0 (there's no 1.1 for C/C++)\n",
        "Line" : 361,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Fortran version 1.0\n",
        "Line" : 363,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 18
    },
    "deps/src/cmake-3.13.4/Modules/FindOpenSSL.cmake" : {
      "ObjectId" : "d5cd8bc02ddbfafba0fab52fea916d53ed48159b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindOpenSSL\n\n# -----------\n\n#\n\n# Find the OpenSSL encryption library.\n\n#\n\n# Optional COMPONENTS\n\n# ^^^^^^^^^^^^^^^^^^^\n\n#\n\n# This module supports two optional COMPONENTS: ``Crypto`` and ``SSL``.  Both\n\n# components have associated imported targets, as described below.\n\n#\n\n# Imported Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``OpenSSL::SSL``\n\n#   The OpenSSL ``ssl`` library, if found.\n\n# ``OpenSSL::Crypto``\n\n#   The OpenSSL ``crypto`` library, if found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``OPENSSL_FOUND``\n\n#   System has the OpenSSL library. If no components are requested it only\n\n#   requires the crypto library.\n\n# ``OPENSSL_INCLUDE_DIR``\n\n#   The OpenSSL include directory.\n\n# ``OPENSSL_CRYPTO_LIBRARY``\n\n#   The OpenSSL crypto library.\n\n# ``OPENSSL_SSL_LIBRARY``\n\n#   The OpenSSL SSL library.\n\n# ``OPENSSL_LIBRARIES``\n\n#   All OpenSSL libraries.\n\n# ``OPENSSL_VERSION``\n\n#   This is set to ``$major.$minor.$revision$patch`` (e.g. ``0.9.8s``).\n\n#\n\n# Hints\n\n# ^^^^^\n\n#\n\n# Set ``OPENSSL_ROOT_DIR`` to the root directory of an OpenSSL installation.\n\n# Set ``OPENSSL_USE_STATIC_LIBS`` to ``TRUE`` to look for static libraries.\n\n# Set ``OPENSSL_MSVC_STATIC_RT`` set ``TRUE`` to choose the MT version of the lib.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Support preference of static libs by adjusting CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# http://www.slproweb.com/products/Win32OpenSSL.html\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# /MD and /MDd are the standard values - if someone wants to use\n\n# others, the libnames have to change here too\n\n# use also ssl and ssleay32 in debug as fallback for openssl < 0.9.8b\n\n# enable OPENSSL_MSVC_STATIC_RT to get the libs build /MT (Multithreaded no-DLL)\n\n# In Visual C++ naming convention each of these four kinds of Windows libraries has it's standard suffix:\n\n#   * MD for dynamic-release\n\n#   * MDd for dynamic-debug\n\n#   * MT for static-release\n\n#   * MTd for static-debug\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Implementation details:\n\n# We are using the libraries located in the VC subdir instead of the parent directory even though :\n\n# libeay32MD.lib is identical to ../libeay32.lib, and\n\n# ssleay32MD.lib is identical to ../ssleay32.lib\n\n# enable OPENSSL_USE_STATIC_LIBS to use the static libs located in lib/VC/static\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Since OpenSSL 1.1, lib names are like libcrypto32MTd.lib and libssl32MTd.lib\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# same player, for MinGW\n",
        "Line" : 222,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Not sure what to pick for -say- intel, let's use the toplevel ones and hope someone report issues:\n",
        "Line" : 251,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# compat defines\n",
        "Line" : 308,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# The version number is encoded as 0xMNNFFPPS: major minor fix patch status\n\n# The status gives if this is a developer or prerelease and is ignored here.\n\n# Major, minor, and fix directly translate into the version numbers shown in\n\n# the string. The patch field translates to the single character suffix that\n\n# indicates the bug fix state, which 00 -> nothing, 01 -> a, 02 -> b and so\n\n# on.\n",
        "Line" : 350,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# 96 is the ASCII code of 'a' minus 1\n",
        "Line" : 368,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Once anyone knows how OpenSSL would call the patch versions beyond 'z'\n\n# this should be updated to handle that, too. This has not happened yet\n\n# so it is simply ignored here for now.\n",
        "Line" : 371,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Restore the original find library ordering\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "deps/src/cmake-3.13.4/Modules/FindOpenSceneGraph.cmake" : {
      "ObjectId" : "425aa458158cdbdef04f65ee3c80086ce280c407",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindOpenSceneGraph\n\n# ------------------\n\n#\n\n# Find OpenSceneGraph\n\n#\n\n# This module searches for the OpenSceneGraph core \"osg\" library as well\n\n# as OpenThreads, and whatever additional COMPONENTS (nodekits) that you\n\n# specify.\n\n#\n\n# ::\n\n#\n\n#     See http://www.openscenegraph.org\n\n#\n\n#\n\n#\n\n# NOTE: To use this module effectively you must either require CMake >=\n\n# 2.6.3 with cmake_minimum_required(VERSION 2.6.3) or download and place\n\n# FindOpenThreads.cmake, Findosg_functions.cmake, Findosg.cmake, and\n\n# Find<etc>.cmake files into your CMAKE_MODULE_PATH.\n\n#\n\n# ==================================\n\n#\n\n# This module accepts the following variables (note mixed case)\n\n#\n\n# ::\n\n#\n\n#     OpenSceneGraph_DEBUG - Enable debugging output\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#     OpenSceneGraph_MARK_AS_ADVANCED - Mark cache variables as advanced\n\n#                                       automatically\n\n#\n\n#\n\n#\n\n# The following environment variables are also respected for finding the\n\n# OSG and it's various components.  CMAKE_PREFIX_PATH can also be used\n\n# for this (see find_library() CMake documentation).\n\n#\n\n# ``<MODULE>_DIR``\n\n#   (where MODULE is of the form \"OSGVOLUME\" and there is a FindosgVolume.cmake file)\n\n# ``OSG_DIR``\n\n#   ..\n\n# ``OSGDIR``\n\n#   ..\n\n# ``OSG_ROOT``\n\n#   ..\n\n#\n\n#\n\n# [CMake 2.8.10]: The CMake variable OSG_DIR can now be used as well to\n\n# influence detection, instead of needing to specify an environment\n\n# variable.\n\n#\n\n# This module defines the following output variables:\n\n#\n\n# ::\n\n#\n\n#     OPENSCENEGRAPH_FOUND - Was the OSG and all of the specified components found?\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#     OPENSCENEGRAPH_VERSION - The version of the OSG which was found\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#     OPENSCENEGRAPH_INCLUDE_DIRS - Where to find the headers\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#     OPENSCENEGRAPH_LIBRARIES - The OSG libraries\n\n#\n\n#\n\n#\n\n# ================================== Example Usage:\n\n#\n\n# ::\n\n#\n\n#   find_package(OpenSceneGraph 2.0.0 REQUIRED osgDB osgUtil)\n\n#       # libOpenThreads & libosg automatically searched\n\n#   include_directories(${OPENSCENEGRAPH_INCLUDE_DIRS})\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#   add_executable(foo foo.cc)\n\n#   target_link_libraries(foo ${OPENSCENEGRAPH_LIBRARIES})\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Naming convention:\n\n#  Local variables of the form _osg_foo\n\n#  Input variables of the form OpenSceneGraph_FOO\n\n#  Output variables of the form OPENSCENEGRAPH_FOO\n\n#\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# First we need to find and parse osg/Version\n\n#\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Try to ascertain the version...\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Here we call find_package() on all of the components\n\n#\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# append to list if module was found OR is required\n",
        "Line" : 196,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#\n\n# Check each module to see if it's found\n\n#\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Modules/FindOpenThreads.cmake" : {
      "ObjectId" : "91545e0ea5da68629fafacc7a3ec49042b3108c3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindOpenThreads\n\n# ---------------\n\n#\n\n#\n\n#\n\n# OpenThreads is a C++ based threading library.  Its largest userbase\n\n# seems to OpenSceneGraph so you might notice I accept OSGDIR as an\n\n# environment path.  I consider this part of the Findosg* suite used to\n\n# find OpenSceneGraph components.  Each component is separate and you\n\n# must opt in to each module.\n\n#\n\n# Locate OpenThreads This module defines OPENTHREADS_LIBRARY\n\n# OPENTHREADS_FOUND, if false, do not try to link to OpenThreads\n\n# OPENTHREADS_INCLUDE_DIR, where to find the headers\n\n#\n\n# $OPENTHREADS_DIR is an environment variable that would correspond to\n\n# the ./configure --prefix=$OPENTHREADS_DIR used in building osg.\n\n#\n\n# [CMake 2.8.10]: The CMake variables OPENTHREADS_DIR or OSG_DIR can now\n\n# be used as well to influence detection, instead of needing to specify\n\n# an environment variable.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <OpenThreads/Thread>\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# To make it easier for one-step automated configuration/builds,\n\n# we leverage environmental paths. This is preferable\n\n# to the -DVAR=value switches because it insulates the\n\n# users from changes we may make in this script.\n\n# It also offers a little more flexibility than setting\n\n# the CMAKE_*_PATH since we can target specific components.\n\n# However, the default CMake behavior will search system paths\n\n# before anything else. This is problematic in the cases\n\n# where you have an older (stable) version installed, but\n\n# are trying to build a newer version.\n\n# CMake doesn't offer a nice way to globally control this behavior\n\n# so we have to do a nasty \"double FIND_\" in this module.\n\n# The first FIND disables the CMAKE_ search paths and only checks\n\n# the environmental paths.\n\n# If nothing is found, then the second find will search the\n\n# standard install paths.\n\n# Explicit -DVAR=value arguments should still be able to override everything.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/FindPHP4.cmake" : {
      "ObjectId" : "426453bd4fb273b12bb0d38fabdc55087af64dda",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindPHP4\n\n# --------\n\n#\n\n# Find PHP4\n\n#\n\n# This module finds if PHP4 is installed and determines where the\n\n# include files and libraries are.  It also determines what the name of\n\n# the library is.  This code sets the following variables:\n\n#\n\n# ::\n\n#\n\n#   PHP4_INCLUDE_PATH       = path to where php.h can be found\n\n#   PHP4_EXECUTABLE         = full path to the php4 binary\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# this is a hack for now\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindPNG.cmake" : {
      "ObjectId" : "936f01fed27179f793537ab03d734dcfc83a631a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindPNG\n\n# -------\n\n#\n\n# Find libpng, the official reference library for the PNG image format.\n\n#\n\n# Imported targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` target:\n\n#\n\n# ``PNG::PNG``\n\n#   The libpng library, if found.\n\n#\n\n# Result variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``PNG_INCLUDE_DIRS``\n\n#   where to find png.h, etc.\n\n# ``PNG_LIBRARIES``\n\n#   the libraries to link against to use PNG.\n\n# ``PNG_DEFINITIONS``\n\n#   You should add_definitions(${PNG_DEFINITIONS}) before compiling code\n\n#   that includes png library files.\n\n# ``PNG_FOUND``\n\n#   If false, do not try to use PNG.\n\n# ``PNG_VERSION_STRING``\n\n#   the version of the PNG library found (since CMake 2.8.8)\n\n#\n\n# Obsolete variables\n\n# ^^^^^^^^^^^^^^^^^^\n\n#\n\n# The following variables may also be set, for backwards compatibility:\n\n#\n\n# ``PNG_LIBRARY``\n\n#   where to find the PNG library.\n\n# ``PNG_INCLUDE_DIR``\n\n#   where to find the PNG headers (same as PNG_INCLUDE_DIRS)\n\n#\n\n# Since PNG depends on the ZLib compression library, none of the above\n\n# will be defined unless ZLib can be found.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For compatibility with versions prior to this multi-config search, honor\n\n# any PNG_LIBRARY that is already specified and skip the search.\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Set by select_library_configurations(), but we want the one from\n\n# find_package_handle_standard_args() below.\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# png.h includes zlib.h. Sigh.\n",
        "Line" : 92,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# for backward compatibility\n",
        "Line" : 94,
        "CharPositionInLine" : 48
      },
      "6" : {
        "Text" : "# No need to define PNG_USE_DLL here, because it's default for Cygwin.\n",
        "Line" : 99,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "1722d6aafbf072b08b96272e83d8cae4a1cefaa6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindPackageHandleStandardArgs\n-----------------------------\n\nThis module provides a function intended to be used in :ref:`Find Modules`\nimplementing :command:`find_package(<PackageName>)` calls.  It handles the\n``REQUIRED``, ``QUIET`` and version-related arguments of ``find_package``.\nIt also sets the ``<PackageName>_FOUND`` variable.  The package is\nconsidered found if all variables listed contain valid results, e.g.\nvalid filepaths.\n\n.. command:: find_package_handle_standard_args\n\n  There are two signatures::\n\n    find_package_handle_standard_args(<PackageName>\n      (DEFAULT_MSG|<custom-failure-message>)\n      <required-var>...\n      )\n\n    find_package_handle_standard_args(<PackageName>\n      [FOUND_VAR <result-var>]\n      [REQUIRED_VARS <required-var>...]\n      [VERSION_VAR <version-var>]\n      [HANDLE_COMPONENTS]\n      [CONFIG_MODE]\n      [FAIL_MESSAGE <custom-failure-message>]\n      )\n\n  The ``<PackageName>_FOUND`` variable will be set to ``TRUE`` if all\n  the variables ``<required-var>...`` are valid and any optional\n  constraints are satisfied, and ``FALSE`` otherwise.  A success or\n  failure message may be displayed based on the results and on\n  whether the ``REQUIRED`` and/or ``QUIET`` option was given to\n  the :command:`find_package` call.\n\n  The options are:\n\n  ``(DEFAULT_MSG|<custom-failure-message>)``\n    In the simple signature this specifies the failure message.\n    Use ``DEFAULT_MSG`` to ask for a default message to be computed\n    (recommended).  Not valid in the full signature.\n\n  ``FOUND_VAR <result-var>``\n    Obsolete.  Specifies either ``<PackageName>_FOUND`` or\n    ``<PACKAGENAME>_FOUND`` as the result variable.  This exists only\n    for compatibility with older versions of CMake and is now ignored.\n    Result variables of both names are always set for compatibility.\n\n  ``REQUIRED_VARS <required-var>...``\n    Specify the variables which are required for this package.\n    These may be named in the generated failure message asking the\n    user to set the missing variable values.  Therefore these should\n    typically be cache entries such as ``FOO_LIBRARY`` and not output\n    variables like ``FOO_LIBRARIES``.\n\n  ``VERSION_VAR <version-var>``\n    Specify the name of a variable that holds the version of the package\n    that has been found.  This version will be checked against the\n    (potentially) specified required version given to the\n    :command:`find_package` call, including its ``EXACT`` option.\n    The default messages include information about the required\n    version and the version which has been actually found, both\n    if the version is ok or not.\n\n  ``HANDLE_COMPONENTS``\n    Enable handling of package components.  In this case, the command\n    will report which components have been found and which are missing,\n    and the ``<PackageName>_FOUND`` variable will be set to ``FALSE``\n    if any of the required components (i.e. not the ones listed after\n    the ``OPTIONAL_COMPONENTS`` option of :command:`find_package`) are\n    missing.\n\n  ``CONFIG_MODE``\n    Specify that the calling find module is a wrapper around a\n    call to ``find_package(<PackageName> NO_MODULE)``.  This implies\n    a ``VERSION_VAR`` value of ``<PackageName>_VERSION``.  The command\n    will automatically check whether the package configuration file\n    was found.\n\n  ``FAIL_MESSAGE <custom-failure-message>``\n    Specify a custom failure message instead of using the default\n    generated message.  Not recommended.\n\nExample for the simple signature:\n\n.. code-block:: cmake\n\n  find_package_handle_standard_args(LibXml2 DEFAULT_MSG\n    LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR)\n\nThe ``LibXml2`` package is considered to be found if both\n``LIBXML2_LIBRARY`` and ``LIBXML2_INCLUDE_DIR`` are valid.\nThen also ``LibXml2_FOUND`` is set to ``TRUE``.  If it is not found\nand ``REQUIRED`` was used, it fails with a\n:command:`message(FATAL_ERROR)`, independent whether ``QUIET`` was\nused or not.  If it is found, success will be reported, including\nthe content of the first ``<required-var>``.  On repeated CMake runs,\nthe same message will not be printed again.\n\nExample for the full signature:\n\n.. code-block:: cmake\n\n  find_package_handle_standard_args(LibArchive\n    REQUIRED_VARS LibArchive_LIBRARY LibArchive_INCLUDE_DIR\n    VERSION_VAR LibArchive_VERSION)\n\nIn this case, the ``LibArchive`` package is considered to be found if\nboth ``LibArchive_LIBRARY`` and ``LibArchive_INCLUDE_DIR`` are valid.\nAlso the version of ``LibArchive`` will be checked by using the version\ncontained in ``LibArchive_VERSION``.  Since no ``FAIL_MESSAGE`` is given,\nthe default messages will be printed.\n\nAnother example for the full signature:\n\n.. code-block:: cmake\n\n  find_package(Automoc4 QUIET NO_MODULE HINTS /opt/automoc4)\n  find_package_handle_standard_args(Automoc4  CONFIG_MODE)\n\nIn this case, a ``FindAutmoc4.cmake`` module wraps a call to\n``find_package(Automoc4 NO_MODULE)`` and adds an additional search\ndirectory for ``automoc4``.  Then the call to\n``find_package_handle_standard_args`` produces a proper success/failure\nmessage.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# internal helper macro\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# internal helper macro to generate the failure message when used in CONFIG_MODE:\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# <PackageName>_CONFIG is set, but FOUND is false, this means that some other of the REQUIRED_VARS was not found:\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If _CONSIDERED_CONFIGS is set, the config-file has been found, but no suitable version.\n\n# List them all in the error message:\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Simple case: No Config-file was found at all:\n",
        "Line" : 169,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Set up the arguments for `cmake_parse_arguments`.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Check whether we are in 'simple' or 'extended' mode:\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# In config-mode, we rely on the variable <PackageName>_CONFIG, which is set by find_package()\n\n# when it successfully found the config-file, including version checking:\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# now that we collected all arguments, process them\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# collect all variables which were not found, so they can be printed, so the\n\n# user knows better what went wrong (#6375)\n",
        "Line" : 236,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# check if all passed variables are valid\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# component handling\n",
        "Line" : 258,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# version handling:\n",
        "Line" : 289,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# check with DEFINED here as the requested or found version may be \"0\"\n",
        "Line" : 293,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# exact version required\n",
        "Line" : 298,
        "CharPositionInLine" : 44
      },
      "17" : {
        "Text" : "# count the dots in the version string\n",
        "Line" : 299,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# add one dot because there is one dot more than there are components\n",
        "Line" : 301,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Because of the C++ implementation of find_package() ${_NAME}_FIND_VERSION_COUNT\n\n# is at most 4 here. Therefore a simple lookup table is used.\n",
        "Line" : 304,
        "CharPositionInLine" : 10
      },
      "20" : {
        "Text" : "# minimum version specified:\n",
        "Line" : 334,
        "CharPositionInLine" : 17
      },
      "21" : {
        "Text" : "# if the package was not found, but a version was given, add that to the output:\n",
        "Line" : 345,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# Check with DEFINED as the found version may be 0.\n",
        "Line" : 354,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# print the result:\n",
        "Line" : 367,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 24
    },
    "deps/src/cmake-3.13.4/Modules/FindPackageMessage.cmake" : {
      "ObjectId" : "6821cee4f77a9d84c74f2c140870a2163ae5a5f0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindPackageMessage\n\n# ------------------\n\n#\n\n#\n\n#\n\n# FIND_PACKAGE_MESSAGE(<name> \"message for user\" \"find result details\")\n\n#\n\n# This macro is intended to be used in FindXXX.cmake modules files.  It\n\n# will print a message once for each unique find result.  This is useful\n\n# for telling the user where a package was found.  The first argument\n\n# specifies the name (XXX) of the package.  The second argument\n\n# specifies the message to display.  The third argument lists details\n\n# about the find result so that if they change the message will be\n\n# displayed again.  The macro also obeys the QUIET argument to the\n\n# find_package command.\n\n#\n\n# Example:\n\n#\n\n# ::\n\n#\n\n#   if(X11_FOUND)\n\n#     FIND_PACKAGE_MESSAGE(X11 \"Found X11: ${X11_X11_LIB}\"\n\n#       \"[${X11_X11_LIB}][${X11_INCLUDE_DIR}]\")\n\n#   else()\n\n#    ...\n\n#   endif()\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Avoid printing a message repeatedly for the same find result.\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The message has not yet been printed.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Save the find details in the cache to avoid printing the same\n\n# message again.\n",
        "Line" : 41,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/FindPatch.cmake" : {
      "ObjectId" : "3ebcae909cc741f2882a89280067480b679d4a45",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindPatch\n\n# ---------\n\n#\n\n# The module defines the following variables:\n\n#\n\n# ``Patch_EXECUTABLE``\n\n#   Path to patch command-line executable.\n\n# ``Patch_FOUND``\n\n#   True if the patch command-line executable was found.\n\n#\n\n# The following :prop_tgt:`IMPORTED` targets are also defined:\n\n#\n\n# ``Patch::patch``\n\n#   The command-line executable.\n\n#\n\n# Example usage:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    find_package(Patch)\n\n#    if(Patch_FOUND)\n\n#      message(\"Patch found: ${Patch_EXECUTABLE}\")\n\n#    endif()\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# First search the PATH\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Now look for installations in Git/ directories under typical installation\n\n# prefixes on Windows.\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/FindPerl.cmake" : {
      "ObjectId" : "c38527cfa31aad330b33ec712d273f90f442bab9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindPerl\n\n# --------\n\n#\n\n# Find perl\n\n#\n\n# this module looks for Perl\n\n#\n\n# ::\n\n#\n\n#   PERL_EXECUTABLE     - the full path to perl\n\n#   PERL_FOUND          - If false, don't attempt to use perl.\n\n#   PERL_VERSION_STRING - version of perl found (since CMake 2.8.8)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### PERL_VERSION\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Deprecated settings for compatibility with CMake1.4\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/FindPerlLibs.cmake" : {
      "ObjectId" : "0b902e74d073b98aaf2feaf193f646a0ff8602b0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindPerlLibs\n\n# ------------\n\n#\n\n# Find Perl libraries\n\n#\n\n# This module finds if PERL is installed and determines where the\n\n# include files and libraries are.  It also determines what the name of\n\n# the library is.  This code sets the following variables:\n\n#\n\n# ::\n\n#\n\n#   PERLLIBS_FOUND    = True if perl.h & libperl were found\n\n#   PERL_INCLUDE_PATH = path to where perl.h is found\n\n#   PERL_LIBRARY      = path to libperl\n\n#   PERL_EXECUTABLE   = full path to the perl binary\n\n#\n\n#\n\n#\n\n# The minimum required version of Perl can be specified using the\n\n# standard syntax, e.g.  find_package(PerlLibs 6.0)\n\n#\n\n# ::\n\n#\n\n#   The following variables are also available if needed\n\n#   (introduced after CMake 2.6.4)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#   PERL_SITESEARCH     = path to the sitesearch install dir (-V:installsitesearch)\n\n#   PERL_SITEARCH       = path to the sitelib install directory (-V:installsitearch)\n\n#   PERL_SITELIB        = path to the sitelib install directory (-V:installsitelib)\n\n#   PERL_VENDORARCH     = path to the vendor arch install directory (-V:installvendorarch)\n\n#   PERL_VENDORLIB      = path to the vendor lib install directory (-V:installvendorlib)\n\n#   PERL_ARCHLIB        = path to the core arch lib install directory (-V:archlib)\n\n#   PERL_PRIVLIB        = path to the core priv lib install directory (-V:privlib)\n\n#   PERL_UPDATE_ARCHLIB = path to the update arch lib install directory (-V:installarchlib)\n\n#   PERL_UPDATE_PRIVLIB = path to the update priv lib install directory (-V:installprivlib)\n\n#   PERL_EXTRA_C_FLAGS = Compilation flags used to build perl\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find the perl executable\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### PERL_PREFIX\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "### PERL_ARCHNAME\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "### PERL_EXTRA_C_FLAGS\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "### PERL_SITESEARCH\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "### PERL_SITEARCH\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "### PERL_SITELIB\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "### PERL_VENDORARCH\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "### PERL_VENDORLIB\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "### PERL_ARCHLIB\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "### PERL_PRIVLIB\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "### PERL_UPDATE_ARCHLIB\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "### PERL_UPDATE_PRIVLIB\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "### PERL_POSSIBLE_LIBRARY_NAMES\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# on MSYS and CYGWIN environments, current perl -V:libperl gives shared library name\n\n# rather than the import library. So, extends possible library names\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "### PERL_INCLUDE_PATH\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "### PERL_LIBRARY\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Introduced after CMake 2.6.4 to bring module into compliance\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# For backward compatibility with CMake before 2.8.8\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "deps/src/cmake-3.13.4/Modules/FindPhysFS.cmake" : {
      "ObjectId" : "cfe9b0f19ed377f2ddf142b6ad4952fa9837f00b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindPhysFS\n\n# ----------\n\n#\n\n#\n\n#\n\n# Locate PhysFS library This module defines PHYSFS_LIBRARY, the name of\n\n# the library to link against PHYSFS_FOUND, if false, do not try to link\n\n# to PHYSFS PHYSFS_INCLUDE_DIR, where to find physfs.h\n\n#\n\n# $PHYSFSDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$PHYSFSDIR used in building PHYSFS.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 26,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 27,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 28,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/FindPike.cmake" : {
      "ObjectId" : "ec71c949a13518fefeb80dcb47e917e6656e4337",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindPike\n\n# --------\n\n#\n\n# Find Pike\n\n#\n\n# This module finds if PIKE is installed and determines where the\n\n# include files and libraries are.  It also determines what the name of\n\n# the library is.  This code sets the following variables:\n\n#\n\n# ::\n\n#\n\n#   PIKE_INCLUDE_PATH       = path to where program.h is found\n\n#   PIKE_EXECUTABLE         = full path to the pike binary\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindPkgConfig.cmake" : {
      "ObjectId" : "06beb7d8425adf15fba8029b6308908bf28516b5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[========================================[.rst:\nFindPkgConfig\n-------------\n\nA ``pkg-config`` module for CMake.\n\nFinds the ``pkg-config`` executable and adds the :command:`pkg_get_variable`,\n:command:`pkg_check_modules` and :command:`pkg_search_module` commands. The\nfollowing variables will also be set::\n\n  PKG_CONFIG_FOUND          ... if pkg-config executable was found\n  PKG_CONFIG_EXECUTABLE     ... pathname of the pkg-config program\n  PKG_CONFIG_VERSION_STRING ... the version of the pkg-config program found\n                                (since CMake 2.8.8)\n\n#]========================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Common stuff ####\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# find pkg-config, use PKG_CONFIG if set\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is needed because the module name is \"PkgConfig\" but the name of\n\n# this variable has always been PKG_CONFIG_FOUND so this isn't automatically\n\n# handled by FPHSA.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Unsets the given variables\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Invokes pkgconfig, cleans up the result and sets variables\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#message(STATUS \"  ${_varname} ... ${_pkgconfig_invoke_result}\")\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#[========================================[.rst:\n.. command:: pkg_get_variable\n\n  Retrieves the value of a pkg-config variable ``varName`` and stores it in the\n  result variable ``resultVar`` in the calling scope. ::\n\n    pkg_get_variable(<resultVar> <moduleName> <varName>)\n\n  If ``pkg-config`` returns multiple values for the specified variable,\n  ``resultVar`` will contain a :ref:`;-list <CMake Language Lists>`.\n\n  For example:\n\n  .. code-block:: cmake\n\n    pkg_get_variable(GI_GIRDIR gobject-introspection-1.0 girdir)\n#]========================================]",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Invokes pkgconfig two times; once without '--static' and once with\n\n# '--static'\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Splits given arguments into options and a package list\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add the content of a variable or an environment variable to a list of\n\n# paths\n\n# Usage:\n\n#  - _pkgconfig_add_extra_path(_extra_paths VAR)\n\n#  - _pkgconfig_add_extra_path(_extra_paths ENV VAR)\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# scan the LDFLAGS returned by pkg-config for library directories and\n\n# libraries, figure out the absolute paths of that libraries in the\n\n# given directories\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# set the options that are used as long as the .pc file does not provide a library\n\n# path to look into\n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Firstly search in -L paths\n",
        "Line" : 222,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# create an imported target from all the information returned by pkg-config\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# only create the target if it is linkable, i.e. no executables\n",
        "Line" : 238,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# recalculate the dynamic output\n\n# this is a macro and not a function so the result of _pkg_find_libs is automatically propagated\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "###\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# create a better addressable variable of the modules and calculate its size\n",
        "Line" : 295,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# give out status message telling checked module\n",
        "Line" : 300,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Save the PKG_CONFIG_PATH environment variable, and add paths\n\n# from the CMAKE_PREFIX_PATH variables\n",
        "Line" : 327,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# Create a list of the possible pkgconfig subfolder (depending on\n\n# the system\n",
        "Line" : 335,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# is this a debian system ?\n",
        "Line" : 341,
        "CharPositionInLine" : 41
      },
      "24" : {
        "Text" : "# not debian, check the FIND_LIBRARY_USE_LIB32_PATHS and FIND_LIBRARY_USE_LIB64_PATHS properties\n",
        "Line" : 346,
        "CharPositionInLine" : 10
      },
      "25" : {
        "Text" : "# Check if directories exist and eventually append them to the\n\n# pkgconfig path list\n",
        "Line" : 367,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# Prepare and set the environment variable\n",
        "Line" : 378,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# remove empty values from the list\n",
        "Line" : 380,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# Unset variables\n",
        "Line" : 390,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# iterate through module list and check whether they exist and match the required version\n",
        "Line" : 395,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# check whether version is given\n",
        "Line" : 399,
        "CharPositionInLine" : 6
      },
      "31" : {
        "Text" : "# create the final query which is of the format:\n\n# * <pkg-name> > <version>\n\n# * <pkg-name> >= <version>\n\n# * <pkg-name> = <version>\n\n# * <pkg-name> <= <version>\n\n# * <pkg-name> < <version>\n\n# * --exists <pkg-name>\n",
        "Line" : 417,
        "CharPositionInLine" : 6
      },
      "32" : {
        "Text" : "# execute the query\n",
        "Line" : 432,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "# evaluate result and tell failures\n",
        "Line" : 439,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "# fail when requested\n",
        "Line" : 450,
        "CharPositionInLine" : 6
      },
      "35" : {
        "Text" : "# when we are here, we checked whether requested modules\n\n# exist. Now, go through them and set variables\n",
        "Line" : 455,
        "CharPositionInLine" : 6
      },
      "36" : {
        "Text" : "# iterate through all modules again and set individual variables\n",
        "Line" : 461,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "# handle case when there is only one package required\n",
        "Line" : 463,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# set variables which are combined for multiple modules\n",
        "Line" : 483,
        "CharPositionInLine" : 6
      },
      "39" : {
        "Text" : "# Restore the environment variable\n",
        "Line" : 497,
        "CharPositionInLine" : 6
      },
      "40" : {
        "Text" : "#[========================================[.rst:\n.. command:: pkg_check_modules\n\n  Checks for all the given modules, setting a variety of result variables in\n  the calling scope. ::\n\n    pkg_check_modules(<prefix>\n                      [REQUIRED] [QUIET]\n                      [NO_CMAKE_PATH]\n                      [NO_CMAKE_ENVIRONMENT_PATH]\n                      [IMPORTED_TARGET [GLOBAL]]\n                      <moduleSpec> [<moduleSpec>...])\n\n  When the ``REQUIRED`` argument is given, the command will fail with an error\n  if module(s) could not be found.\n\n  When the ``QUIET`` argument is given, no status messages will be printed.\n\n  By default, if :variable:`CMAKE_MINIMUM_REQUIRED_VERSION` is 3.1 or\n  later, or if :variable:`PKG_CONFIG_USE_CMAKE_PREFIX_PATH` is set to a\n  boolean ``True`` value, then the :variable:`CMAKE_PREFIX_PATH`,\n  :variable:`CMAKE_FRAMEWORK_PATH`, and :variable:`CMAKE_APPBUNDLE_PATH` cache\n  and environment variables will be added to the ``pkg-config`` search path.\n  The ``NO_CMAKE_PATH`` and ``NO_CMAKE_ENVIRONMENT_PATH`` arguments\n  disable this behavior for the cache variables and environment variables\n  respectively.\n\n  The ``IMPORTED_TARGET`` argument will create an imported target named\n  ``PkgConfig::<prefix>`` that can be passed directly as an argument to\n  :command:`target_link_libraries`. The ``GLOBAL`` argument will make the\n  imported target available in global scope.\n\n  Each ``<moduleSpec>`` can be either a bare module name or it can be a\n  module name with a version constraint (operators ``=``, ``<``, ``>``,\n  ``<=`` and ``>=`` are supported).  The following are examples for a module\n  named ``foo`` with various constraints::\n\n    foo           # Any version matches\n    foo<2         # Only match versions before 2\n    foo>=3.1      # Match any version from 3.1 or later\n    foo=1.2.3     # Foo must be exactly version 1.2.3\n\n  The following variables may be set upon return.  Two sets of values exist,\n  one for the common case (``<XXX> = <prefix>``) and another for the\n  information ``pkg-config`` provides when it is called with the ``--static``\n  option (``<XXX> = <prefix>_STATIC``)::\n\n    <XXX>_FOUND          ... set to 1 if module(s) exist\n    <XXX>_LIBRARIES      ... only the libraries (without the '-l')\n    <XXX>_LINK_LIBRARIES ... the libraries and their absolute paths\n    <XXX>_LIBRARY_DIRS   ... the paths of the libraries (without the '-L')\n    <XXX>_LDFLAGS        ... all required linker flags\n    <XXX>_LDFLAGS_OTHER  ... all other linker flags\n    <XXX>_INCLUDE_DIRS   ... the '-I' preprocessor flags (without the '-I')\n    <XXX>_CFLAGS         ... all required cflags\n    <XXX>_CFLAGS_OTHER   ... the other compiler flags\n\n  All but ``<XXX>_FOUND`` may be a :ref:`;-list <CMake Language Lists>` if the\n  associated variable returned from ``pkg-config`` has multiple values.\n\n  There are some special variables whose prefix depends on the number of\n  ``<moduleSpec>`` given.  When there is only one ``<moduleSpec>``,\n  ``<YYY>`` will simply be ``<prefix>``, but if two or more ``<moduleSpec>``\n  items are given, ``<YYY>`` will be ``<prefix>_<moduleName>``::\n\n    <YYY>_VERSION    ... version of the module\n    <YYY>_PREFIX     ... prefix directory of the module\n    <YYY>_INCLUDEDIR ... include directory of the module\n    <YYY>_LIBDIR     ... lib directory of the module\n\n  Examples\n\n  .. code-block:: cmake\n\n    pkg_check_modules (GLIB2 glib-2.0)\n\n  Looks for any version of glib2.  If found, the output variable\n  ``GLIB2_VERSION`` will hold the actual version found.\n\n  .. code-block:: cmake\n\n    pkg_check_modules (GLIB2 glib-2.0>=2.10)\n\n  Looks for at least version 2.10 of glib2.  If found, the output variable\n  ``GLIB2_VERSION`` will hold the actual version found.\n\n  .. code-block:: cmake\n\n    pkg_check_modules (FOO glib-2.0>=2.10 gtk+-2.0)\n\n  Looks for both glib2-2.0 (at least version 2.10) and any version of\n  gtk2+-2.0.  Only if both are found will ``FOO`` be considered found.\n  The ``FOO_glib-2.0_VERSION`` and ``FOO_gtk+-2.0_VERSION`` variables will be\n  set to their respective found module versions.\n\n  .. code-block:: cmake\n\n    pkg_check_modules (XRENDER REQUIRED xrender)\n\n  Requires any version of ``xrender``.  Example output variables set by a\n  successful call::\n\n    XRENDER_LIBRARIES=Xrender;X11\n    XRENDER_STATIC_LIBRARIES=Xrender;X11;pthread;Xau;Xdmcp\n#]========================================]",
        "Line" : 511,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# check cached value\n",
        "Line" : 618,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "#[========================================[.rst:\n.. command:: pkg_search_module\n\n  The behavior of this command is the same as :command:`pkg_check_modules`,\n  except that rather than checking for all the specified modules, it searches\n  for just the first successful match. ::\n\n    pkg_search_module(<prefix>\n                      [REQUIRED] [QUIET]\n                      [NO_CMAKE_PATH]\n                      [NO_CMAKE_ENVIRONMENT_PATH]\n                      [IMPORTED_TARGET [GLOBAL]]\n                      <moduleSpec> [<moduleSpec>...])\n\n  Examples\n\n  .. code-block:: cmake\n\n    pkg_search_module (BAR libxml-2.0 libxml2 libxml>=2)\n#]========================================]",
        "Line" : 636,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# check cached value\n",
        "Line" : 658,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# iterate through all modules and stop at the first working one.\n",
        "Line" : 666,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "#[========================================[.rst:\nVariables Affecting Behavior\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. variable:: PKG_CONFIG_EXECUTABLE\n\n  This can be set to the path of the pkg-config executable.  If not provided,\n  it will be set by the module as a result of calling :command:`find_program`\n  internally.  The ``PKG_CONFIG`` environment variable can be used as a hint.\n\n.. variable:: PKG_CONFIG_USE_CMAKE_PREFIX_PATH\n\n  Specifies whether :command:`pkg_check_modules` and\n  :command:`pkg_search_module` should add the paths in the\n  :variable:`CMAKE_PREFIX_PATH`, :variable:`CMAKE_FRAMEWORK_PATH` and\n  :variable:`CMAKE_APPBUNDLE_PATH` cache and environment variables to the\n  ``pkg-config`` search path.\n\n  If this variable is not set, this behavior is enabled by default if\n  :variable:`CMAKE_MINIMUM_REQUIRED_VERSION` is 3.1 or later, disabled\n  otherwise.\n#]========================================]",
        "Line" : 690,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "### Local Variables:\n\n### mode: cmake\n\n### End:\n",
        "Line" : 714,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "deps/src/cmake-3.13.4/Modules/FindPostgreSQL.cmake" : {
      "ObjectId" : "c044ab3b70869fcdcb4745e0487b3ad3bb87647e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindPostgreSQL\n\n# --------------\n\n#\n\n# Find the PostgreSQL installation.\n\n#\n\n# This module defines\n\n#\n\n# ::\n\n#\n\n#   PostgreSQL_LIBRARIES - the PostgreSQL libraries needed for linking\n\n#   PostgreSQL_INCLUDE_DIRS - the directories of the PostgreSQL headers\n\n#   PostgreSQL_LIBRARY_DIRS  - the link directories for PostgreSQL libraries\n\n#   PostgreSQL_VERSION_STRING - the version of PostgreSQL found (since CMake 2.8.8)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# History:\n\n# This module is derived from the module originally found in the VTK source tree.\n\n#\n\n# ----------------------------------------------------------------------------\n\n# Note:\n\n# PostgreSQL_ADDITIONAL_VERSIONS is a variable that can be used to set the\n\n# version number of the implementation of PostgreSQL.\n\n# In Windows the default installation of PostgreSQL uses that as part of the path.\n\n# E.g C:\\Program Files\\PostgreSQL\\8.4.\n\n# Currently, the following version numbers are known to this module:\n\n# \"11\" \"10\" \"9.6\" \"9.5\" \"9.4\" \"9.3\" \"9.2\" \"9.1\" \"9.0\" \"8.4\" \"8.3\" \"8.2\" \"8.1\" \"8.0\"\n\n#\n\n# To use this variable just do something like this:\n\n# set(PostgreSQL_ADDITIONAL_VERSIONS \"9.2\" \"8.4.4\")\n\n# before calling find_package(PostgreSQL) in your CMakeLists.txt file.\n\n# This will mean that the versions you set here will be found first in the order\n\n# specified before the default ones are searched.\n\n#\n\n# ----------------------------------------------------------------------------\n\n# You may need to manually set:\n\n#  PostgreSQL_INCLUDE_DIR  - the path to where the PostgreSQL include files are.\n\n#  PostgreSQL_LIBRARY_DIR  - The path to where the PostgreSQL library files are.\n\n# If FindPostgreSQL.cmake cannot find the include files or the library files.\n\n#\n\n# ----------------------------------------------------------------------------\n\n# The following variables are set if PostgreSQL is found:\n\n#  PostgreSQL_FOUND         - Set to true when PostgreSQL is found.\n\n#  PostgreSQL_INCLUDE_DIRS  - Include directories for PostgreSQL\n\n#  PostgreSQL_LIBRARY_DIRS  - Link directories for PostgreSQL libraries\n\n#  PostgreSQL_LIBRARIES     - The PostgreSQL libraries.\n\n#\n\n# ----------------------------------------------------------------------------\n\n# If you have installed PostgreSQL in a non-standard location.\n\n# (Please note that in the following comments, it is assumed that <Your Path>\n\n# points to the root directory of the include directory of PostgreSQL.)\n\n# Then you have three options.\n\n# 1) After CMake runs, set PostgreSQL_INCLUDE_DIR to <Your Path>/include and\n\n#    PostgreSQL_LIBRARY_DIR to wherever the library pq (or libpq in windows) is\n\n# 2) Use CMAKE_INCLUDE_PATH to set a path to <Your Path>/PostgreSQL<-version>. This will allow find_path()\n\n#    to locate PostgreSQL_INCLUDE_DIR by utilizing the PATH_SUFFIXES option. e.g. In your CMakeLists.txt file\n\n#    set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} \"<Your Path>/include\")\n\n# 3) Set an environment variable called ${PostgreSQL_ROOT} that points to the root of where you have\n\n#    installed PostgreSQL, e.g. <Your Path>.\n\n#\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define additional search paths for root directories.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Look for an installation.\n\n#\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Look in other places.\n",
        "Line" : 107,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Help the user find it if we cannot.\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Look in other places.\n",
        "Line" : 121,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# Help the user find it if we cannot.\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# The PostgreSQL library.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Setting some more prefixes for the library\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Help the user find it if we cannot.\n",
        "Line" : 149,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Some platforms include multiple pg_config.hs for multi-lib configurations\n\n# This is a temporary workaround.  A better solution would be to compile\n\n# a dummy c file and extract the value of the symbol.\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Did we find anything?\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Now try to get the include and library path.\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "deps/src/cmake-3.13.4/Modules/FindProducer.cmake" : {
      "ObjectId" : "500c8edf6e7699971ff6d0f8fafe33692ef35429",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindProducer\n\n# ------------\n\n#\n\n#\n\n#\n\n# Though Producer isn't directly part of OpenSceneGraph, its primary\n\n# user is OSG so I consider this part of the Findosg* suite used to find\n\n# OpenSceneGraph components.  You'll notice that I accept OSGDIR as an\n\n# environment path.\n\n#\n\n# Each component is separate and you must opt in to each module.  You\n\n# must also opt into OpenGL (and OpenThreads?) as these modules won't do\n\n# it for you.  This is to allow you control over your own system piece\n\n# by piece in case you need to opt out of certain components or change\n\n# the Find behavior for a particular module (perhaps because the default\n\n# FindOpenGL.cmake module doesn't work with your system as an example).\n\n# If you want to use a more convenient module that includes everything,\n\n# use the FindOpenSceneGraph.cmake instead of the Findosg*.cmake\n\n# modules.\n\n#\n\n# Locate Producer This module defines PRODUCER_LIBRARY PRODUCER_FOUND,\n\n# if false, do not try to link to Producer PRODUCER_INCLUDE_DIR, where\n\n# to find the headers\n\n#\n\n# $PRODUCER_DIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$PRODUCER_DIR used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <Producer/CameraGroup>\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Try the user's environment request before anything else.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Fink\n",
        "Line" : 47,
        "CharPositionInLine" : 16
      },
      "5" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 48,
        "CharPositionInLine" : 23
      },
      "6" : {
        "Text" : "# Blastwave\n",
        "Line" : 49,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/FindProtobuf.cmake" : {
      "ObjectId" : "eda03615803a848434ffd37169e5e4de81e7df21",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindProtobuf\n\n# ------------\n\n#\n\n# Locate and configure the Google Protocol Buffers library.\n\n#\n\n# The following variables can be set and are optional:\n\n#\n\n# ``Protobuf_SRC_ROOT_FOLDER``\n\n#   When compiling with MSVC, if this cache variable is set\n\n#   the protobuf-default VS project build locations\n\n#   (vsprojects/Debug and vsprojects/Release\n\n#   or vsprojects/x64/Debug and vsprojects/x64/Release)\n\n#   will be searched for libraries and binaries.\n\n# ``Protobuf_IMPORT_DIRS``\n\n#   List of additional directories to be searched for\n\n#   imported .proto files.\n\n# ``Protobuf_DEBUG``\n\n#   Show debug messages.\n\n# ``Protobuf_USE_STATIC_LIBS``\n\n#   Set to ON to force the use of the static libraries.\n\n#   Default is OFF.\n\n#\n\n# Defines the following variables:\n\n#\n\n# ``Protobuf_FOUND``\n\n#   Found the Google Protocol Buffers library\n\n#   (libprotobuf & header files)\n\n# ``Protobuf_VERSION``\n\n#   Version of package found.\n\n# ``Protobuf_INCLUDE_DIRS``\n\n#   Include directories for Google Protocol Buffers\n\n# ``Protobuf_LIBRARIES``\n\n#   The protobuf libraries\n\n# ``Protobuf_PROTOC_LIBRARIES``\n\n#   The protoc libraries\n\n# ``Protobuf_LITE_LIBRARIES``\n\n#   The protobuf-lite libraries\n\n#\n\n# The following :prop_tgt:`IMPORTED` targets are also defined:\n\n#\n\n# ``protobuf::libprotobuf``\n\n#   The protobuf library.\n\n# ``protobuf::libprotobuf-lite``\n\n#   The protobuf lite library.\n\n# ``protobuf::libprotoc``\n\n#   The protoc library.\n\n# ``protobuf::protoc``\n\n#   The protoc compiler.\n\n#\n\n# The following cache variables are also available to set or use:\n\n#\n\n# ``Protobuf_LIBRARY``\n\n#   The protobuf library\n\n# ``Protobuf_PROTOC_LIBRARY``\n\n#   The protoc library\n\n# ``Protobuf_INCLUDE_DIR``\n\n#   The include directory for protocol buffers\n\n# ``Protobuf_PROTOC_EXECUTABLE``\n\n#   The protoc compiler\n\n# ``Protobuf_LIBRARY_DEBUG``\n\n#   The protobuf library (debug)\n\n# ``Protobuf_PROTOC_LIBRARY_DEBUG``\n\n#   The protoc library (debug)\n\n# ``Protobuf_LITE_LIBRARY``\n\n#   The protobuf lite library\n\n# ``Protobuf_LITE_LIBRARY_DEBUG``\n\n#   The protobuf lite library (debug)\n\n#\n\n# Example:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   find_package(Protobuf REQUIRED)\n\n#   include_directories(${Protobuf_INCLUDE_DIRS})\n\n#   include_directories(${CMAKE_CURRENT_BINARY_DIR})\n\n#   protobuf_generate_cpp(PROTO_SRCS PROTO_HDRS foo.proto)\n\n#   protobuf_generate_cpp(PROTO_SRCS PROTO_HDRS EXPORT_MACRO DLL_EXPORT foo.proto)\n\n#   protobuf_generate_cpp(PROTO_SRCS PROTO_HDRS DESCRIPTORS PROTO_DESCS foo.proto)\n\n#   protobuf_generate_python(PROTO_PY foo.proto)\n\n#   add_executable(bar bar.cc ${PROTO_SRCS} ${PROTO_HDRS})\n\n#   target_link_libraries(bar ${Protobuf_LIBRARIES})\n\n#\n\n# .. note::\n\n#   The ``protobuf_generate_cpp`` and ``protobuf_generate_python``\n\n#   functions and :command:`add_executable` or :command:`add_library`\n\n#   calls only work properly within the same directory.\n\n#\n\n# .. command:: protobuf_generate_cpp\n\n#\n\n#   Add custom commands to process ``.proto`` files to C++::\n\n#\n\n#     protobuf_generate_cpp (<SRCS> <HDRS>\n\n#         [DESCRIPTORS <DESC>] [EXPORT_MACRO <MACRO>] [<ARGN>...])\n\n#\n\n#   ``SRCS``\n\n#     Variable to define with autogenerated source files\n\n#   ``HDRS``\n\n#     Variable to define with autogenerated header files\n\n#   ``DESCRIPTORS``\n\n#     Variable to define with autogenerated descriptor files, if requested.\n\n#   ``EXPORT_MACRO``\n\n#     is a macro which should expand to ``__declspec(dllexport)`` or\n\n#     ``__declspec(dllimport)`` depending on what is being compiled.\n\n#   ``ARGN``\n\n#     ``.proto`` files\n\n#\n\n# .. command:: protobuf_generate_python\n\n#\n\n#   Add custom commands to process ``.proto`` files to Python::\n\n#\n\n#     protobuf_generate_python (<PY> [<ARGN>...])\n\n#\n\n#   ``PY``\n\n#     Variable to define with autogenerated Python files\n\n#   ``ARGN``\n\n#     ``.proto`` filess\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create an include path for each file specified\n",
        "Line" : 183,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Output some of their choices\n",
        "Line" : 316,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Backwards compatibility\n\n# Define camel case versions of input variables\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Support preference of static libs by adjusting CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Internal function: search for normal library as well as a debug one\n\n#    if the debug one is specified also include debug/optimized keywords\n\n#    in *_LIBRARIES variable\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Use result recorded by a previous call.\n",
        "Line" : 367,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Honor cache entry used by CMake 3.5 and lower.\n",
        "Line" : 370,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#\n\n# Main.\n\n#\n",
        "Line" : 394,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# By default have PROTOBUF_GENERATE_CPP macro pass -I to protoc\n\n# for each directory where a proto file is referenced.\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Google's provided vcproj files generate libraries with a \"lib\"\n\n# prefix on Windows\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Protobuf headers may depend on threading.\n",
        "Line" : 415,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# The Protobuf library\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#DOC \"The Google Protocol Buffers RELEASE Library\"\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# The Protobuf Protoc Library\n",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Restore original find library prefixes\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Find the include directory\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Find the protoc Executable\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Check Protobuf compiler version to be aligned with libraries version\n",
        "Line" : 481,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Restore the original find library ordering\n",
        "Line" : 604,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Backwards compatibility\n\n# Define upper case versions of output variables\n",
        "Line" : 609,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "deps/src/cmake-3.13.4/Modules/FindPython.cmake" : {
      "ObjectId" : "8645a0db59300bb2f7b45500a5dab94a10f634f8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindPython\n----------\n\nFind Python interpreter, compiler and development environment (include\ndirectories and libraries).\n\nThree components are supported:\n\n* ``Interpreter``: search for Python interpreter.\n* ``Compiler``: search for Python compiler. Only offered by IronPython.\n* ``Development``: search for development artifacts (include directories and\n  libraries).\n\nIf no ``COMPONENTS`` is specified, ``Interpreter`` is assumed.\n\nTo ensure consistent versions between components ``Interpreter``, ``Compiler``\nand ``Development``, specify all components at the same time::\n\n  find_package (Python COMPONENTS Interpreter Development)\n\nThis module looks preferably for version 3 of Python. If not found, version 2\nis searched.\nTo manage concurrent versions 3 and 2 of Python, use :module:`FindPython3` and\n:module:`FindPython2` modules rather than this one.\n\nImported Targets\n^^^^^^^^^^^^^^^^\n\nThis module defines the following :ref:`Imported Targets <Imported Targets>`:\n\n``Python::Interpreter``\n  Python interpreter. Target defined if component ``Interpreter`` is found.\n``Python::Compiler``\n  Python compiler. Target defined if component ``Compiler`` is found.\n``Python::Python``\n  Python library. Target defined if component ``Development`` is found.\n\nResult Variables\n^^^^^^^^^^^^^^^^\n\nThis module will set the following variables in your project\n(see :ref:`Standard Variable Names <CMake Developer Standard Variable Names>`):\n\n``Python_FOUND``\n  System has the Python requested components.\n``Python_Interpreter_FOUND``\n  System has the Python interpreter.\n``Python_EXECUTABLE``\n  Path to the Python interpreter.\n``Python_INTERPRETER_ID``\n  A short string unique to the interpreter. Possible values include:\n    * Python\n    * ActivePython\n    * Anaconda\n    * Canopy\n    * IronPython\n``Python_STDLIB``\n  Standard platform independent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=True)``.\n``Python_STDARCH``\n  Standard platform dependent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=True)``.\n``Python_SITELIB``\n  Third-party platform independent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=False)``.\n``Python_SITEARCH``\n  Third-party platform dependent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=False)``.\n``Python_Compiler_FOUND``\n  System has the Python compiler.\n``Python_COMPILER``\n  Path to the Python compiler. Only offered by IronPython.\n``Python_COMPILER_ID``\n  A short string unique to the compiler. Possible values include:\n    * IronPython\n``Python_Development_FOUND``\n  System has the Python development artifacts.\n``Python_INCLUDE_DIRS``\n  The Python include directories.\n``Python_LIBRARIES``\n  The Python libraries.\n``Python_LIBRARY_DIRS``\n  The Python library directories.\n``Python_RUNTIME_LIBRARY_DIRS``\n  The Python runtime library directories.\n``Python_VERSION``\n  Python version.\n``Python_VERSION_MAJOR``\n  Python major version.\n``Python_VERSION_MINOR``\n  Python minor version.\n``Python_VERSION_PATCH``\n  Python patch version.\n\nHints\n^^^^^\n\n``Python_ROOT_DIR``\n  Define the root directory of a Python installation.\n\n``Python_USE_STATIC_LIBS``\n  * If not defined, search for shared libraries and static libraries in that\n    order.\n  * If set to TRUE, search **only** for static libraries.\n  * If set to FALSE, search **only** for shared libraries.\n\n``Python_FIND_REGISTRY``\n  On Windows the ``Python_FIND_REGISTRY`` variable determine the order\n  of preference between registry and environment variables.\n  the ``Python_FIND_REGISTRY`` variable can be set to empty or one of the\n  following:\n\n  * ``FIRST``: Try to use registry before environment variables.\n    This is the default.\n  * ``LAST``: Try to use registry after environment variables.\n  * ``NEVER``: Never try to use registry.\n\n``CMAKE_FIND_FRAMEWORK``\n  On OS X the :variable:`CMAKE_FIND_FRAMEWORK` variable determine the order of\n  preference between Apple-style and unix-style package components.\n\n  .. note::\n\n    Value ``ONLY`` is not supported so ``FIRST`` will be used instead.\n\n.. note::\n\n  If a Python virtual environment is configured, set variable\n  ``Python_FIND_REGISTRY`` (Windows) or ``CMAKE_FIND_FRAMEWORK`` (macOS) with\n  value ``LAST`` or ``NEVER`` to select it preferably.\n\nCommands\n^^^^^^^^\n\nThis module defines the command ``Python_add_library`` which have the same\nsemantic as :command:`add_library` but take care of Python module naming rules\n(only applied if library is of type ``MODULE``) and add dependency to target\n``Python::Python``::\n\n  Python_add_library (my_module MODULE src1.cpp)\n\nIf library type is not specified, ``MODULE`` is assumed.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# iterate over versions in quiet and NOT required modes to avoid multiple\n\n# \"Found\" messages and prematurally failure.\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# clean-up some CACHE variables to ensure look-up restart from scratch\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# call again validation command to get \"Found\" or error message\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/FindPython/Support.cmake" : {
      "ObjectId" : "e0ebb9033766cc12a48468a34a96722f04ddee3f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# This file is a \"template\" file used by various FindPython modules.\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Initial configuration\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# helper commands\n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# executable found must have a specific version\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# interpreter not usable or has wrong major version\n",
        "Line" : 98,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# executable found do not have version in name\n\n# ensure major version is OK\n",
        "Line" : 104,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# interpreter not usable or has wrong major version\n",
        "Line" : 113,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# In this case, interpreter must have same architecture as environment\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# interpreter not usable or has wrong architecture\n",
        "Line" : 130,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# retrieve python environment version from compiler\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Compiler not usable or has wrong major version\n",
        "Line" : 159,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# look at runtime part on systems supporting it\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# MSYS has a special syntax for runtime libraries\n",
        "Line" : 172,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# If major version is specified, it must be the same as internal major version\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# handle components\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Set versions to search\n\n## default: search any version\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# add all compatible versions\n",
        "Line" : 224,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Python and Anaconda distributions: define which architectures can be used\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# In this case, search only for 64bit or 32bit\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# architecture unknown, search for both 64bit and 32bit\n",
        "Line" : 239,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# IronPython support\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# In this case, search only for 64bit or 32bit\n",
        "Line" : 246,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# architecture unknown, search for natural interpreter\n",
        "Line" : 250,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Apple frameworks handling\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Save CMAKE_FIND_APPBUNDLE\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# To avoid app bundle lookup\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Save CMAKE_FIND_FRAMEWORK\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# To avoid framework lookup\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Windows Registry handling\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# first step, search for the interpreter\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# look-up for various versions and locations\n",
        "Line" : 309,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Apple frameworks handling\n",
        "Line" : 315,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Windows registry\n",
        "Line" : 329,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# try using HINTS\n",
        "Line" : 354,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# try using standard paths.\n",
        "Line" : 365,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# Apple frameworks handling\n",
        "Line" : 380,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Windows registry\n",
        "Line" : 391,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# No specific version found. Retry with generic names\n\n# try using HINTS\n",
        "Line" : 421,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# try using standard paths.\n\n# NAMES_PER_DIR is not defined on purpose to have a chance to find\n\n# expected version.\n\n# For example, typical systems have 'python' for version 2.* and 'python3'\n\n# for version 3.*. So looking for names per dir will find, potentially,\n\n# systematically 'python' (i.e. version 2) even if version 3 is searched.\n",
        "Line" : 432,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# retrieve exact version of executable found\n",
        "Line" : 446,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Interpreter is not usable\n",
        "Line" : 460,
        "CharPositionInLine" : 6
      },
      "42" : {
        "Text" : "# Use interpreter version for future searches to ensure consistency\n",
        "Line" : 469,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# determine interpreter architecture\n",
        "Line" : 475,
        "CharPositionInLine" : 6
      },
      "44" : {
        "Text" : "# retrieve interpreter identity\n",
        "Line" : 491,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# try to get a more precise ID\n",
        "Line" : 504,
        "CharPositionInLine" : 10
      },
      "46" : {
        "Text" : "# retrieve various package installation directories\n",
        "Line" : 521,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# second step, search for compiler (IronPython)\n",
        "Line" : 543,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# IronPython specific artifacts\n\n# If IronPython interpreter is found, use its path\n",
        "Line" : 550,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# try using root dir and registry\n",
        "Line" : 557,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# no specific version found, re-try in standard paths\n",
        "Line" : 590,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# retrieve python environment version from compiler\n",
        "Line" : 597,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# set public version information\n",
        "Line" : 616,
        "CharPositionInLine" : 8
      },
      "53" : {
        "Text" : "# compiler not usable\n",
        "Line" : 623,
        "CharPositionInLine" : 6
      },
      "54" : {
        "Text" : "# Compiler must be compatible with interpreter\n",
        "Line" : 631,
        "CharPositionInLine" : 6
      },
      "55" : {
        "Text" : "# Use compiler version for future searches to ensure consistency\n",
        "Line" : 637,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# third step, search for the development artifacts\n\n## Development environment is not compatible with IronPython interpreter\n",
        "Line" : 652,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Support preference of static libs by adjusting CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 667,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# if python interpreter is found, use its location and version to ensure consistency\n\n# between interpreter and development environment\n",
        "Line" : 679,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# try to use pythonX.Y-config tool\n",
        "Line" : 698,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# check that config tool match library architecture\n",
        "Line" : 715,
        "CharPositionInLine" : 6
      },
      "61" : {
        "Text" : "# retrieve root install directory\n",
        "Line" : 732,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# python-config is not usable\n",
        "Line" : 739,
        "CharPositionInLine" : 6
      },
      "63" : {
        "Text" : "# retrieve library\n",
        "Line" : 745,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# retrieve library directory\n",
        "Line" : 752,
        "CharPositionInLine" : 6
      },
      "65" : {
        "Text" : "# retrieve library name\n",
        "Line" : 756,
        "CharPositionInLine" : 6
      },
      "66" : {
        "Text" : "# retrieve runtime library\n",
        "Line" : 768,
        "CharPositionInLine" : 6
      },
      "67" : {
        "Text" : "# retrieve include directory\n",
        "Line" : 781,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# retrieve include directory\n",
        "Line" : 788,
        "CharPositionInLine" : 6
      },
      "69" : {
        "Text" : "# Rely on HINTS and standard paths if config tool failed to locate artifacts\n",
        "Line" : 805,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# search in HINTS locations\n",
        "Line" : 865,
        "CharPositionInLine" : 6
      },
      "71" : {
        "Text" : "# search in all default paths\n",
        "Line" : 895,
        "CharPositionInLine" : 6
      },
      "72" : {
        "Text" : "# retrieve runtime library\n",
        "Line" : 911,
        "CharPositionInLine" : 6
      },
      "73" : {
        "Text" : "# search for debug library\n",
        "Line" : 926,
        "CharPositionInLine" : 8
      },
      "74" : {
        "Text" : "# use library location as a hint\n",
        "Line" : 928,
        "CharPositionInLine" : 10
      },
      "75" : {
        "Text" : "# search first in known locations\n",
        "Line" : 936,
        "CharPositionInLine" : 10
      },
      "76" : {
        "Text" : "# search in all default paths\n",
        "Line" : 947,
        "CharPositionInLine" : 10
      },
      "77" : {
        "Text" : "# Don't search for include dir until library location is known\n",
        "Line" : 965,
        "CharPositionInLine" : 6
      },
      "78" : {
        "Text" : "# pick up include directory from configuration\n",
        "Line" : 970,
        "CharPositionInLine" : 10
      },
      "79" : {
        "Text" : "# Use the library's install prefix as a hint\n",
        "Line" : 985,
        "CharPositionInLine" : 12
      },
      "80" : {
        "Text" : "# assume library is in a directory under root\n",
        "Line" : 993,
        "CharPositionInLine" : 14
      },
      "81" : {
        "Text" : "# search header file in standard locations\n",
        "Line" : 1051,
        "CharPositionInLine" : 4
      },
      "82" : {
        "Text" : "# retrieve version from header file\n",
        "Line" : 1057,
        "CharPositionInLine" : 4
      },
      "83" : {
        "Text" : "# set public version information\n",
        "Line" : 1068,
        "CharPositionInLine" : 6
      },
      "84" : {
        "Text" : "# define public variables\n",
        "Line" : 1076,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# development environment must be compatible with interpreter/compiler\n",
        "Line" : 1108,
        "CharPositionInLine" : 6
      },
      "86" : {
        "Text" : "# Restore the original find library ordering\n",
        "Line" : 1117,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "# final validation\n",
        "Line" : 1123,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# Create imported targets and helper functions\n",
        "Line" : 1135,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# System manage shared libraries in two parts: import and runtime\n",
        "Line" : 1170,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "# extend link information with dependent libraries\n",
        "Line" : 1204,
        "CharPositionInLine" : 4
      },
      "91" : {
        "Text" : "# remove elements relative to python library itself\n",
        "Line" : 1212,
        "CharPositionInLine" : 6
      },
      "92" : {
        "Text" : "#\n\n# PYTHON_ADD_LIBRARY (<name> [STATIC|SHARED|MODULE] src1 src2 ... srcN)\n\n# It is used to build modules for python.\n\n#\n",
        "Line" : 1222,
        "CharPositionInLine" : 2
      },
      "93" : {
        "Text" : "# customize library name to follow module name rules\n",
        "Line" : 1239,
        "CharPositionInLine" : 4
      },
      "94" : {
        "Text" : "# final clean-up\n",
        "Line" : 1250,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# Restore CMAKE_FIND_APPBUNDLE\n",
        "Line" : 1252,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# Restore CMAKE_FIND_FRAMEWORK\n",
        "Line" : 1259,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 97
    },
    "deps/src/cmake-3.13.4/Modules/FindPython2.cmake" : {
      "ObjectId" : "998e99223ca7c07a381da8bfd5f4601467c750fe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindPython2\n-----------\n\nFind Python 2 interpreter, compiler and development environment (include\ndirectories and libraries).\n\nThree components are supported:\n\n* ``Interpreter``: search for Python 2 interpreter\n* ``Compiler``: search for Python 2 compiler. Only offered by IronPython.\n* ``Development``: search for development artifacts (include directories and\n  libraries)\n\nIf no ``COMPONENTS`` is specified, ``Interpreter`` is assumed.\n\nTo ensure consistent versions between components ``Interpreter``, ``Compiler``\nand ``Development``, specify all components at the same time::\n\n  find_package (Python2 COMPONENTS Interpreter Development)\n\nThis module looks only for version 2 of Python. This module can be used\nconcurrently with :module:`FindPython3` module to use both Python versions.\n\nThe :module:`FindPython` module can be used if Python version does not matter\nfor you.\n\nImported Targets\n^^^^^^^^^^^^^^^^\n\nThis module defines the following :ref:`Imported Targets <Imported Targets>`:\n\n``Python2::Interpreter``\n  Python 2 interpreter. Target defined if component ``Interpreter`` is found.\n``Python2::Compiler``\n  Python 2 compiler. Target defined if component ``Compiler`` is found.\n``Python2::Python``\n  Python 2 library. Target defined if component ``Development`` is found.\n\nResult Variables\n^^^^^^^^^^^^^^^^\n\nThis module will set the following variables in your project\n(see :ref:`Standard Variable Names <CMake Developer Standard Variable Names>`):\n\n``Python2_FOUND``\n  System has the Python 2 requested components.\n``Python2_Interpreter_FOUND``\n  System has the Python 2 interpreter.\n``Python2_EXECUTABLE``\n  Path to the Python 2 interpreter.\n``Python2_INTERPRETER_ID``\n  A short string unique to the interpreter. Possible values include:\n    * Python\n    * ActivePython\n    * Anaconda\n    * Canopy\n    * IronPython\n``Python2_STDLIB``\n  Standard platform independent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=True)``.\n``Python2_STDARCH``\n  Standard platform dependent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=True)``.\n``Python2_SITELIB``\n  Third-party platform independent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=False)``.\n``Python2_SITEARCH``\n  Third-party platform dependent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=False)``.\n``Python2_Compiler_FOUND``\n  System has the Python 2 compiler.\n``Python2_COMPILER``\n  Path to the Python 2 compiler. Only offered by IronPython.\n``Python2_COMPILER_ID``\n  A short string unique to the compiler. Possible values include:\n    * IronPython\n``Python2_Development_FOUND``\n  System has the Python 2 development artifacts.\n``Python2_INCLUDE_DIRS``\n  The Python 2 include directories.\n``Python2_LIBRARIES``\n  The Python 2 libraries.\n``Python2_LIBRARY_DIRS``\n  The Python 2 library directories.\n``Python2_RUNTIME_LIBRARY_DIRS``\n  The Python 2 runtime library directories.\n``Python2_VERSION``\n  Python 2 version.\n``Python2_VERSION_MAJOR``\n  Python 2 major version.\n``Python2_VERSION_MINOR``\n  Python 2 minor version.\n``Python2_VERSION_PATCH``\n  Python 2 patch version.\n\nHints\n^^^^^\n\n``Python2_ROOT_DIR``\n  Define the root directory of a Python 2 installation.\n\n``Python2_USE_STATIC_LIBS``\n  * If not defined, search for shared libraries and static libraries in that\n    order.\n  * If set to TRUE, search **only** for static libraries.\n  * If set to FALSE, search **only** for shared libraries.\n\n``Python2_FIND_REGISTRY``\n  On Windows the ``Python2_FIND_REGISTRY`` variable determine the order\n  of preference between registry and environment variables.\n  the ``Python2_FIND_REGISTRY`` variable can be set to empty or one of the\n  following:\n\n  * ``FIRST``: Try to use registry before environment variables.\n    This is the default.\n  * ``LAST``: Try to use registry after environment variables.\n  * ``NEVER``: Never try to use registry.\n\n``CMAKE_FIND_FRAMEWORK``\n  On macOS the :variable:`CMAKE_FIND_FRAMEWORK` variable determine the order of\n  preference between Apple-style and unix-style package components.\n\n  .. note::\n\n    Value ``ONLY`` is not supported so ``FIRST`` will be used instead.\n\n.. note::\n\n  If a Python virtual environment is configured, set variable\n  ``Python_FIND_REGISTRY`` (Windows) or ``CMAKE_FIND_FRAMEWORK`` (macOS) with\n  value ``LAST`` or ``NEVER`` to select it preferably.\n\nCommands\n^^^^^^^^\n\nThis module defines the command ``Python2_add_library`` which have the same\nsemantic as :command:`add_library` but take care of Python module naming rules\n(only applied if library is of type ``MODULE``) and add dependency to target\n``Python2::Python``::\n\n  Python2_add_library (my_module MODULE src1.cpp)\n\nIf library type is not specified, ``MODULE`` is assumed.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindPython3.cmake" : {
      "ObjectId" : "2176f3f4f402c333d5f0bc63beb061006519cd7c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindPython3\n-----------\n\nFind Python 3 interpreter, compiler and development environment (include\ndirectories and libraries).\n\nThree components are supported:\n\n* ``Interpreter``: search for Python 3 interpreter\n* ``Compiler``: search for Python 3 compiler. Only offered by IronPython.\n* ``Development``: search for development artifacts (include directories and\n  libraries)\n\nIf no ``COMPONENTS`` is specified, ``Interpreter`` is assumed.\n\nTo ensure consistent versions between components ``Interpreter``, ``Compiler``\nand ``Development``, specify all components at the same time::\n\n  find_package (Python3 COMPONENTS Interpreter Development)\n\nThis module looks only for version 3 of Python. This module can be used\nconcurrently with :module:`FindPython2` module to use both Python versions.\n\nThe :module:`FindPython` module can be used if Python version does not matter\nfor you.\n\nImported Targets\n^^^^^^^^^^^^^^^^\n\nThis module defines the following :ref:`Imported Targets <Imported Targets>`:\n\n``Python3::Interpreter``\n  Python 3 interpreter. Target defined if component ``Interpreter`` is found.\n``Python3::Compiler``\n  Python 3 compiler. Target defined if component ``Compiler`` is found.\n``Python3::Python``\n  Python 3 library. Target defined if component ``Development`` is found.\n\nResult Variables\n^^^^^^^^^^^^^^^^\n\nThis module will set the following variables in your project\n(see :ref:`Standard Variable Names <CMake Developer Standard Variable Names>`):\n\n``Python3_FOUND``\n  System has the Python 3 requested components.\n``Python3_Interpreter_FOUND``\n  System has the Python 3 interpreter.\n``Python3_EXECUTABLE``\n  Path to the Python 3 interpreter.\n``Python3_INTERPRETER_ID``\n  A short string unique to the interpreter. Possible values include:\n    * Python\n    * ActivePython\n    * Anaconda\n    * Canopy\n    * IronPython\n``Python3_STDLIB``\n  Standard platform independent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=True)``.\n``Python3_STDARCH``\n  Standard platform dependent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=True)``.\n``Python3_SITELIB``\n  Third-party platform independent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=False)``.\n``Python3_SITEARCH``\n  Third-party platform dependent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=False)``.\n``Python3_Compiler_FOUND``\n  System has the Python 3 compiler.\n``Python3_COMPILER``\n  Path to the Python 3 compiler. Only offered by IronPython.\n``Python3_COMPILER_ID``\n  A short string unique to the compiler. Possible values include:\n    * IronPython\n``Python3_Development_FOUND``\n  System has the Python 3 development artifacts.\n``Python3_INCLUDE_DIRS``\n  The Python 3 include directories.\n``Python3_LIBRARIES``\n  The Python 3 libraries.\n``Python3_LIBRARY_DIRS``\n  The Python 3 library directories.\n``Python3_RUNTIME_LIBRARY_DIRS``\n  The Python 3 runtime library directories.\n``Python3_VERSION``\n  Python 3 version.\n``Python3_VERSION_MAJOR``\n  Python 3 major version.\n``Python3_VERSION_MINOR``\n  Python 3 minor version.\n``Python3_VERSION_PATCH``\n  Python 3 patch version.\n\nHints\n^^^^^\n\n``Python3_ROOT_DIR``\n  Define the root directory of a Python 3 installation.\n\n``Python3_USE_STATIC_LIBS``\n  * If not defined, search for shared libraries and static libraries in that\n    order.\n  * If set to TRUE, search **only** for static libraries.\n  * If set to FALSE, search **only** for shared libraries.\n\n``Python3_FIND_REGISTRY``\n  On Windows the ``Python3_FIND_REGISTRY`` variable determine the order\n  of preference between registry and environment variables.\n  the ``Python3_FIND_REGISTRY`` variable can be set to empty or one of the\n  following:\n\n  * ``FIRST``: Try to use registry before environment variables.\n    This is the default.\n  * ``LAST``: Try to use registry after environment variables.\n  * ``NEVER``: Never try to use registry.\n\n``CMAKE_FIND_FRAMEWORK``\n  On OS X the :variable:`CMAKE_FIND_FRAMEWORK` variable determine the order of\n  preference between Apple-style and unix-style package components.\n\n  .. note::\n\n    Value ``ONLY`` is not supported so ``FIRST`` will be used instead.\n\n.. note::\n\n  If a Python virtual environment is configured, set variable\n  ``Python_FIND_REGISTRY`` (Windows) or ``CMAKE_FIND_FRAMEWORK`` (macOS) with\n  value ``LAST`` or ``NEVER`` to select it preferably.\n\nCommands\n^^^^^^^^\n\nThis module defines the command ``Python3_add_library`` which have the same\nsemantic as :command:`add_library` but take care of Python module naming rules\n(only applied if library is of type ``MODULE``) and add dependency to target\n``Python3::Python``::\n\n  Python3_add_library (my_module MODULE src1.cpp)\n\nIf library type is not specified, ``MODULE`` is assumed.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindPythonInterp.cmake" : {
      "ObjectId" : "370e5e42245a76e440df12450480cc2a1598607c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindPythonInterp\n\n# ----------------\n\n#\n\n# Find python interpreter\n\n#\n\n# .. deprecated:: 3.12\n\n#\n\n#   Use :module:`FindPython3`, :module:`FindPython2` or :module:`FindPython` instead.\n\n#\n\n# This module finds if Python interpreter is installed and determines\n\n# where the executables are.  This code sets the following variables:\n\n#\n\n# ::\n\n#\n\n#   PYTHONINTERP_FOUND         - Was the Python executable found\n\n#   PYTHON_EXECUTABLE          - path to the Python interpreter\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#   PYTHON_VERSION_STRING      - Python version found e.g. 2.5.2\n\n#   PYTHON_VERSION_MAJOR       - Python major version found e.g. 2\n\n#   PYTHON_VERSION_MINOR       - Python minor version found e.g. 5\n\n#   PYTHON_VERSION_PATCH       - Python patch version found e.g. 2\n\n#\n\n#\n\n#\n\n# The Python_ADDITIONAL_VERSIONS variable can be used to specify a list\n\n# of version numbers that should be taken into account when searching\n\n# for Python.  You need to set this variable before calling\n\n# find_package(PythonInterp).\n\n#\n\n# If calling both ``find_package(PythonInterp)`` and\n\n# ``find_package(PythonLibs)``, call ``find_package(PythonInterp)`` first to\n\n# get the currently active Python version by default with a consistent version\n\n# of PYTHON_LIBRARIES.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set up the versions we know about, in the order we will search. Always add\n\n# the user supplied additional versions to the front.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If FindPythonInterp has already found the major and minor version,\n\n# insert that version next to get consistent versions of the interpreter and\n\n# library.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Search for the current active python version first\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Search for newest python version if python executable isn't found\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# determine python version string\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# it's called \"Python 2.7\", not \"2.7.0\"\n",
        "Line" : 127,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# sys.version predates sys.version_info, so use that\n",
        "Line" : 131,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# sys.version was first documented for Python 1.5, so assume\n\n# this is older.\n",
        "Line" : 146,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Modules/FindPythonLibs.cmake" : {
      "ObjectId" : "6da87a88f918dc4e189228f797202a5940daa496",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindPythonLibs\n\n# --------------\n\n#\n\n# Find python libraries\n\n#\n\n# .. deprecated:: 3.12\n\n#\n\n#   Use :module:`FindPython3`, :module:`FindPython2` or :module:`FindPython` instead.\n\n#\n\n# This module finds if Python is installed and determines where the\n\n# include files and libraries are.  It also determines what the name of\n\n# the library is.  This code sets the following variables:\n\n#\n\n# ::\n\n#\n\n#   PYTHONLIBS_FOUND           - have the Python libs been found\n\n#   PYTHON_LIBRARIES           - path to the python library\n\n#   PYTHON_INCLUDE_PATH        - path to where Python.h is found (deprecated)\n\n#   PYTHON_INCLUDE_DIRS        - path to where Python.h is found\n\n#   PYTHON_DEBUG_LIBRARIES     - path to the debug library (deprecated)\n\n#   PYTHONLIBS_VERSION_STRING  - version of the Python libs found (since CMake 2.8.8)\n\n#\n\n#\n\n#\n\n# The Python_ADDITIONAL_VERSIONS variable can be used to specify a list\n\n# of version numbers that should be taken into account when searching\n\n# for Python.  You need to set this variable before calling\n\n# find_package(PythonLibs).\n\n#\n\n# If you'd like to specify the installation of Python to use, you should\n\n# modify the following cache variables:\n\n#\n\n# ::\n\n#\n\n#   PYTHON_LIBRARY             - path to the python library\n\n#   PYTHON_INCLUDE_DIR         - path to where Python.h is found\n\n#\n\n# If calling both ``find_package(PythonInterp)`` and\n\n# ``find_package(PythonLibs)``, call ``find_package(PythonInterp)`` first to\n\n# get the currently active Python version by default with a consistent version\n\n# of PYTHON_LIBRARIES.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use the executable's path as a hint\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for the python framework on Apple.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Save CMAKE_FIND_FRAMEWORK\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# To avoid picking up the system Python.h pre-maturely.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set up the versions we know about, in the order we will search. Always add\n\n# the user supplied additional versions to the front.\n\n# If FindPythonInterp has already found the major and minor version,\n\n# insert that version between the user supplied versions and the stock\n\n# version list.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Python distribution: define which architectures can be used\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# In this case, search only for 64bit or 32bit\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# determine interpreter architecture\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# architecture unknown, search for both 64bit and 32bit\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Look for the static library in the Python config directory\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# This is where the static library is usually located\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Don't search for include dir until library location is known\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Use the library's install prefix as a hint\n",
        "Line" : 212,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# PYTHON_LIBRARY may contain a list because of SelectLibraryConfigurations\n\n# which may have been run previously. If it is the case, the list can be:\n\n#   optimized;<FILEPATH_TO_RELEASE_LIBRARY>;debug;<FILEPATH_TO_DEBUG_LIBRARY>\n",
        "Line" : 214,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Add framework directories to the search paths\n",
        "Line" : 228,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# For backward compatibility, set PYTHON_INCLUDE_PATH.\n",
        "Line" : 257,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# We use PYTHON_INCLUDE_DIR, PYTHON_LIBRARY and PYTHON_DEBUG_LIBRARY for the\n\n# cache entries because they are meant to specify the location of a single\n\n# library. We now set the variables listed by the documentation for this\n\n# module.\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# These variables have been historically named in this module different from\n\n# what SELECT_LIBRARY_CONFIGURATIONS() expects.\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# SELECT_LIBRARY_CONFIGURATIONS() sets ${PREFIX}_FOUND if it has a library.\n\n# Unset this, this prefix doesn't match the module prefix, they are different\n\n# for historical reasons.\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Restore CMAKE_FIND_FRAMEWORK\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# PYTHON_ADD_MODULE(<name> src1 src2 ... srcN) is used to build modules for python.\n\n# PYTHON_WRITE_MODULES_HEADER(<filename>) writes a header file you can include\n\n# in your sources to initialize the static python modules\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Mark these options as advanced\n",
        "Line" : 323,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "#    target_link_libraries(${_NAME} ${PYTHON_LIBRARIES})\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# with configure_file() cmake complains that you may not use a file created using file(WRITE) as input file for configure_file()\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "deps/src/cmake-3.13.4/Modules/FindQt.cmake" : {
      "ObjectId" : "68dfa7d285df51049154b9d99a27a2239aa27c9d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindQt\n\n# ------\n\n#\n\n# Searches for all installed versions of Qt.\n\n#\n\n# This should only be used if your project can work with multiple\n\n# versions of Qt.  If not, you should just directly use FindQt4 or\n\n# FindQt3.  If multiple versions of Qt are found on the machine, then\n\n# The user must set the option DESIRED_QT_VERSION to the version they\n\n# want to use.  If only one version of qt is found on the machine, then\n\n# the DESIRED_QT_VERSION is set to that version and the matching FindQt3\n\n# or FindQt4 module is included.  Once the user sets DESIRED_QT_VERSION,\n\n# then the FindQt3 or FindQt4 module is included.\n\n#\n\n# This module can only detect and switch between Qt versions 3 and 4. It\n\n# cannot handle Qt5 or any later versions.\n\n#\n\n# ::\n\n#\n\n#   QT_REQUIRED if this is set to TRUE then if CMake can\n\n#               not find Qt4 or Qt3 an error is raised\n\n#               and a message is sent to the user.\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#   DESIRED_QT_VERSION OPTION is created\n\n#   QT4_INSTALLED is set to TRUE if qt4 is found.\n\n#   QT3_INSTALLED is set to TRUE if qt3 is found.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# look for signs of qt3 installations\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# look for qt4 installations\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# now find qmake\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# force user to pick if we have both\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# if only one found then pick that one\n",
        "Line" : 139,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/FindQt3.cmake" : {
      "ObjectId" : "a034210d8c831dfd73f57c192626fd3b32a2070d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindQt3\n\n# -------\n\n#\n\n# Locate Qt include paths and libraries\n\n#\n\n# This module defines:\n\n#\n\n# ::\n\n#\n\n#   QT_INCLUDE_DIR    - where to find qt.h, etc.\n\n#   QT_LIBRARIES      - the libraries to link against to use Qt.\n\n#   QT_DEFINITIONS    - definitions to use when\n\n#                       compiling code that uses Qt.\n\n#   QT_FOUND          - If false, don't try to use Qt.\n\n#   QT_VERSION_STRING - the version of Qt found\n\n#\n\n#\n\n#\n\n# If you need the multithreaded version of Qt, set QT_MT_REQUIRED to\n\n# TRUE\n\n#\n\n# Also defined, but not for general use are:\n\n#\n\n# ::\n\n#\n\n#   QT_MOC_EXECUTABLE, where to find the moc tool.\n\n#   QT_UIC_EXECUTABLE, where to find the uic tool.\n\n#   QT_QT_LIBRARY, where to find the Qt library.\n\n#   QT_QTMAIN_LIBRARY, where to find the qtmain\n\n#    library. This is only required by Qt3 on Windows.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These are around for backwards compatibility\n\n# they will be set\n\n#  QT_WRAP_CPP, set true if QT_MOC_EXECUTABLE is found\n\n#  QT_WRAP_UI set true if QT_UIC_EXECUTABLE is found\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If Qt4 has already been found, fail.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if qglobal.h is not in the qt_include_dir then set\n\n# QT_INCLUDE_DIR to NOTFOUND\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#extract the version string from qglobal.h\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Under windows the qt library (MSVC) has the format qt-mtXYZ where XYZ is the\n\n# version X.Y.Z, so we need to remove the dots from version\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Qt 3 should prefer QTDIR over the PATH\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Qt 3 should prefer QTDIR over the PATH\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#support old QT_MIN_VERSION if set, but not if version is supplied by find_package()\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# if the include a library are found then we have it\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# for version 3\n",
        "Line" : 212,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# for version 2\n",
        "Line" : 217,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Backwards compatibility for CMake1.4 and 1.2\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# for unix add X11 stuff\n",
        "Line" : 237,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 15
    },
    "deps/src/cmake-3.13.4/Modules/FindQt4.cmake" : {
      "ObjectId" : "1e66395042921060e65b9e5e355ffb26266c127d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindQt4\n\n# -------\n\n#\n\n# Finding and Using Qt4\n\n# ^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# This module can be used to find Qt4.  The most important issue is that\n\n# the Qt4 qmake is available via the system path.  This qmake is then\n\n# used to detect basically everything else.  This module defines a\n\n# number of :prop_tgt:`IMPORTED` targets, macros and variables.\n\n#\n\n# Typical usage could be something like:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    set(CMAKE_AUTOMOC ON)\n\n#    set(CMAKE_INCLUDE_CURRENT_DIR ON)\n\n#    find_package(Qt4 4.4.3 REQUIRED QtGui QtXml)\n\n#    add_executable(myexe main.cpp)\n\n#    target_link_libraries(myexe Qt4::QtGui Qt4::QtXml)\n\n#\n\n# .. note::\n\n#\n\n#  When using :prop_tgt:`IMPORTED` targets, the qtmain.lib static library is\n\n#  automatically linked on Windows for :prop_tgt:`WIN32 <WIN32_EXECUTABLE>`\n\n#  executables. To disable that globally, set the\n\n#  ``QT4_NO_LINK_QTMAIN`` variable before finding Qt4. To disable that\n\n#  for a particular executable, set the ``QT4_NO_LINK_QTMAIN`` target\n\n#  property to ``TRUE`` on the executable.\n\n#\n\n# Qt Build Tools\n\n# ^^^^^^^^^^^^^^\n\n#\n\n# Qt relies on some bundled tools for code generation, such as ``moc`` for\n\n# meta-object code generation,``uic`` for widget layout and population,\n\n# and ``rcc`` for virtual filesystem content generation.  These tools may be\n\n# automatically invoked by :manual:`cmake(1)` if the appropriate conditions\n\n# are met.  See :manual:`cmake-qt(7)` for more.\n\n#\n\n# Qt Macros\n\n# ^^^^^^^^^\n\n#\n\n# In some cases it can be necessary or useful to invoke the Qt build tools in a\n\n# more-manual way. Several macros are available to add targets for such uses.\n\n#\n\n# ::\n\n#\n\n#   macro QT4_WRAP_CPP(outfiles inputfile ... [TARGET tgt] OPTIONS ...)\n\n#         create moc code from a list of files containing Qt class with\n\n#         the Q_OBJECT declaration.  Per-directory preprocessor definitions\n\n#         are also added.  If the <tgt> is specified, the\n\n#         INTERFACE_INCLUDE_DIRECTORIES and INTERFACE_COMPILE_DEFINITIONS from\n\n#         the <tgt> are passed to moc.  Options may be given to moc, such as\n\n#         those found when executing \"moc -help\".\n\n#\n\n#\n\n# ::\n\n#\n\n#   macro QT4_WRAP_UI(outfiles inputfile ... OPTIONS ...)\n\n#         create code from a list of Qt designer ui files.\n\n#         Options may be given to uic, such as those found\n\n#         when executing \"uic -help\"\n\n#\n\n#\n\n# ::\n\n#\n\n#   macro QT4_ADD_RESOURCES(outfiles inputfile ... OPTIONS ...)\n\n#         create code from a list of Qt resource files.\n\n#         Options may be given to rcc, such as those found\n\n#         when executing \"rcc -help\"\n\n#\n\n#\n\n# ::\n\n#\n\n#   macro QT4_GENERATE_MOC(inputfile outputfile [TARGET tgt])\n\n#         creates a rule to run moc on infile and create outfile.\n\n#         Use this if for some reason QT4_WRAP_CPP() isn't appropriate, e.g.\n\n#         because you need a custom filename for the moc file or something\n\n#         similar.  If the <tgt> is specified, the\n\n#         INTERFACE_INCLUDE_DIRECTORIES and INTERFACE_COMPILE_DEFINITIONS from\n\n#         the <tgt> are passed to moc.\n\n#\n\n#\n\n# ::\n\n#\n\n#   macro QT4_ADD_DBUS_INTERFACE(outfiles interface basename)\n\n#         Create the interface header and implementation files with the\n\n#         given basename from the given interface xml file and add it to\n\n#         the list of sources.\n\n#\n\n#         You can pass additional parameters to the qdbusxml2cpp call by setting\n\n#         properties on the input file:\n\n#\n\n#         INCLUDE the given file will be included in the generate interface header\n\n#\n\n#         CLASSNAME the generated class is named accordingly\n\n#\n\n#         NO_NAMESPACE the generated class is not wrapped in a namespace\n\n#\n\n#\n\n# ::\n\n#\n\n#   macro QT4_ADD_DBUS_INTERFACES(outfiles inputfile ... )\n\n#         Create the interface header and implementation files\n\n#         for all listed interface xml files.\n\n#         The basename will be automatically determined from the name\n\n#         of the xml file.\n\n#\n\n#         The source file properties described for\n\n#         QT4_ADD_DBUS_INTERFACE also apply here.\n\n#\n\n#\n\n# ::\n\n#\n\n#   macro QT4_ADD_DBUS_ADAPTOR(outfiles xmlfile parentheader parentclassname\n\n#                              [basename] [classname])\n\n#         create a dbus adaptor (header and implementation file) from the xml file\n\n#         describing the interface, and add it to the list of sources. The adaptor\n\n#         forwards the calls to a parent class, defined in parentheader and named\n\n#         parentclassname. The name of the generated files will be\n\n#         <basename>adaptor.{cpp,h} where basename defaults to the basename of the\n\n#         xml file.\n\n#         If <classname> is provided, then it will be used as the classname of the\n\n#         adaptor itself.\n\n#\n\n#\n\n# ::\n\n#\n\n#   macro QT4_GENERATE_DBUS_INTERFACE( header [interfacename] OPTIONS ...)\n\n#         generate the xml interface file from the given header.\n\n#         If the optional argument interfacename is omitted, the name of the\n\n#         interface file is constructed from the basename of the header with\n\n#         the suffix .xml appended.\n\n#         Options may be given to qdbuscpp2xml, such as those found when\n\n#         executing \"qdbuscpp2xml --help\"\n\n#\n\n#\n\n# ::\n\n#\n\n#   macro QT4_CREATE_TRANSLATION( qm_files directories ... sources ...\n\n#                                 ts_files ... OPTIONS ...)\n\n#         out: qm_files\n\n#         in:  directories sources ts_files\n\n#         options: flags to pass to lupdate, such as -extensions to specify\n\n#         extensions for a directory scan.\n\n#         generates commands to create .ts (vie lupdate) and .qm\n\n#         (via lrelease) - files from directories and/or sources. The ts files are\n\n#         created and/or updated in the source tree (unless given with full paths).\n\n#         The qm files are generated in the build tree.\n\n#         Updating the translations can be done by adding the qm_files\n\n#         to the source list of your library/executable, so they are\n\n#         always updated, or by adding a custom target to control when\n\n#         they get updated/generated.\n\n#\n\n#\n\n# ::\n\n#\n\n#   macro QT4_ADD_TRANSLATION( qm_files ts_files ... )\n\n#         out: qm_files\n\n#         in:  ts_files\n\n#         generates commands to create .qm from .ts - files. The generated\n\n#         filenames can be found in qm_files. The ts_files\n\n#         must exist and are not updated in any way.\n\n#\n\n#\n\n# ::\n\n#\n\n#   macro QT4_AUTOMOC(sourcefile1 sourcefile2 ... [TARGET tgt])\n\n#         The qt4_automoc macro is obsolete.  Use the CMAKE_AUTOMOC feature instead.\n\n#         This macro is still experimental.\n\n#         It can be used to have moc automatically handled.\n\n#         So if you have the files foo.h and foo.cpp, and in foo.h a\n\n#         a class uses the Q_OBJECT macro, moc has to run on it. If you don't\n\n#         want to use QT4_WRAP_CPP() (which is reliable and mature), you can insert\n\n#         #include \"foo.moc\"\n\n#         in foo.cpp and then give foo.cpp as argument to QT4_AUTOMOC(). This will\n\n#         scan all listed files at cmake-time for such included moc files and if it\n\n#         finds them cause a rule to be generated to run moc at build time on the\n\n#         accompanying header file foo.h.\n\n#         If a source file has the SKIP_AUTOMOC property set it will be ignored by\n\n#         this macro.\n\n#         If the <tgt> is specified, the INTERFACE_INCLUDE_DIRECTORIES and\n\n#         INTERFACE_COMPILE_DEFINITIONS from the <tgt> are passed to moc.\n\n#\n\n#\n\n# ::\n\n#\n\n#  function QT4_USE_MODULES( target [link_type] modules...)\n\n#         This function is obsolete. Use target_link_libraries with IMPORTED targets\n\n#         instead.\n\n#         Make <target> use the <modules> from Qt. Using a Qt module means\n\n#         to link to the library, add the relevant include directories for the\n\n#         module, and add the relevant compiler defines for using the module.\n\n#         Modules are roughly equivalent to components of Qt4, so usage would be\n\n#         something like:\n\n#          qt4_use_modules(myexe Core Gui Declarative)\n\n#         to use QtCore, QtGui and QtDeclarative. The optional <link_type> argument\n\n#         can be specified as either LINK_PUBLIC or LINK_PRIVATE to specify the\n\n#         same argument to the target_link_libraries call.\n\n#\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# A particular Qt library may be used by using the corresponding\n\n# :prop_tgt:`IMPORTED` target with the :command:`target_link_libraries`\n\n# command:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   target_link_libraries(myexe Qt4::QtGui Qt4::QtXml)\n\n#\n\n# Using a target in this way causes :cmake(1)` to use the appropriate include\n\n# directories and compile definitions for the target when compiling ``myexe``.\n\n#\n\n# Targets are aware of their dependencies, so for example it is not necessary\n\n# to list ``Qt4::QtCore`` if another Qt library is listed, and it is not\n\n# necessary to list ``Qt4::QtGui`` if ``Qt4::QtDeclarative`` is listed.\n\n# Targets may be tested for existence in the usual way with the\n\n# :command:`if(TARGET)` command.\n\n#\n\n# The Qt toolkit may contain both debug and release libraries.\n\n# :manual:`cmake(1)` will choose the appropriate version based on the build\n\n# configuration.\n\n#\n\n# ``Qt4::QtCore``\n\n#  The QtCore target\n\n# ``Qt4::QtGui``\n\n#  The QtGui target\n\n# ``Qt4::Qt3Support``\n\n#  The Qt3Support target\n\n# ``Qt4::QtAssistant``\n\n#  The QtAssistant target\n\n# ``Qt4::QtAssistantClient``\n\n#  The QtAssistantClient target\n\n# ``Qt4::QAxContainer``\n\n#  The QAxContainer target (Windows only)\n\n# ``Qt4::QAxServer``\n\n#  The QAxServer target (Windows only)\n\n# ``Qt4::QtDBus``\n\n#  The QtDBus target\n\n# ``Qt4::QtDeclarative``\n\n#  The QtDeclarative target\n\n# ``Qt4::QtDesigner``\n\n#  The QtDesigner target\n\n# ``Qt4::QtDesignerComponents``\n\n#  The QtDesignerComponents target\n\n# ``Qt4::QtHelp``\n\n#  The QtHelp target\n\n# ``Qt4::QtMotif``\n\n#  The QtMotif target\n\n# ``Qt4::QtMultimedia``\n\n#  The QtMultimedia target\n\n# ``Qt4::QtNetwork``\n\n#  The QtNetwork target\n\n# ``Qt4::QtNsPLugin``\n\n#  The QtNsPLugin target\n\n# ``Qt4::QtOpenGL``\n\n#  The QtOpenGL target\n\n# ``Qt4::QtScript``\n\n#  The QtScript target\n\n# ``Qt4::QtScriptTools``\n\n#  The QtScriptTools target\n\n# ``Qt4::QtSql``\n\n#  The QtSql target\n\n# ``Qt4::QtSvg``\n\n#  The QtSvg target\n\n# ``Qt4::QtTest``\n\n#  The QtTest target\n\n# ``Qt4::QtUiTools``\n\n#  The QtUiTools target\n\n# ``Qt4::QtWebKit``\n\n#  The QtWebKit target\n\n# ``Qt4::QtXml``\n\n#  The QtXml target\n\n# ``Qt4::QtXmlPatterns``\n\n#  The QtXmlPatterns target\n\n# ``Qt4::phonon``\n\n#  The phonon target\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n#   Below is a detailed list of variables that FindQt4.cmake sets.\n\n#\n\n# ``Qt4_FOUND``\n\n#  If false, don't try to use Qt 4.\n\n# ``QT_FOUND``\n\n#  If false, don't try to use Qt. This variable is for compatibility only.\n\n# ``QT4_FOUND``\n\n#  If false, don't try to use Qt 4. This variable is for compatibility only.\n\n# ``QT_VERSION_MAJOR``\n\n#  The major version of Qt found.\n\n# ``QT_VERSION_MINOR``\n\n#  The minor version of Qt found.\n\n# ``QT_VERSION_PATCH``\n\n#  The patch version of Qt found.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use find_package( Qt4 COMPONENTS ... ) to enable modules\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# To make sure we don't use QtCore or QtGui when not in COMPONENTS\n",
        "Line" : 310,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# If Qt3 has already been found, fail.\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# convenience macro for dealing with debug/release library names\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The name of the imported targets, i.e. the prefix \"Qt4::\" must not change,\n\n# since it is stored in EXPORT-files as name of a required library. If the name would change\n\n# here, this would lead to the imported Qt4-library targets not being resolved by cmake anymore.\n",
        "Line" : 348,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# If QT_USE_IMPORTED_TARGETS is enabled, the QT_QTFOO_LIBRARY variables are set to point at these\n\n# imported targets. This works better in general, and is also in almost all cases fully\n\n# backward compatible. The only issue is when a project A which had this enabled then exports its\n\n# libraries via export or export_library_dependencies(). In this case the libraries from project\n\n# A will depend on the imported Qt targets, and the names of these imported targets will be stored\n\n# in the dependency files on disk. This means when a project B then uses project A, these imported\n\n# targets must be created again, otherwise e.g. \"Qt4__QtCore\" will be interpreted as name of a\n\n# library file on disk, and not as a target, and linking will fail:\n",
        "Line" : 386,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# if the release- as well as the debug-version of the library have been found:\n",
        "Line" : 399,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# if the generator is multi-config or if CMAKE_BUILD_TYPE is set for\n\n# single-config generators, set optimized and debug libraries\n",
        "Line" : 401,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# For single-config generators where CMAKE_BUILD_TYPE has no value,\n\n# just use the release libraries\n",
        "Line" : 407,
        "CharPositionInLine" : 10
      },
      "11" : {
        "Text" : "# if only the release version was found, set the debug variable also to the release version\n",
        "Line" : 414,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# if only the debug version was found, set the release variable also to the debug version\n",
        "Line" : 421,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# put the value in the cache:\n",
        "Line" : 428,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "#add the include directory to QT_INCLUDES\n",
        "Line" : 442,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Make variables changeable to the advanced user\n",
        "Line" : 446,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Restore possibly found qmake and it's version; these are used later\n\n# in error message if incorrect version is found\n",
        "Line" : 504,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Qt5CoreConfig sets QT_MOC_EXECUTABLE as a non-cache variable to the Qt 5\n\n# path to moc.  Unset that variable when Qt 4 and 5 are used together, so\n\n# that when find_program looks for moc, it is not set to the Qt 5 version.\n\n# If FindQt4 has already put the Qt 4 path in the cache, the unset()\n\n# command 'unhides' the (correct) cache variable.\n",
        "Line" : 527,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# ask qmake for the mkspecs directory\n\n# we do this first because QT_LIBINFIX might be set\n",
        "Line" : 541,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# do not replace : on windows as it might be a drive letter\n\n# and windows should already use ; as a separator\n",
        "Line" : 545,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# ask qmake for the library dir as a hint, then search for QtCore library and use that as a reference for finding the\n\n# others and for setting QT_LIBRARY_DIR\n",
        "Line" : 569,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# try dropping a hint if trying to use Visual Studio with Qt built by MinGW\n",
        "Line" : 597,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# set QT_LIBRARY_DIR based on location of QtCore found.\n",
        "Line" : 606,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# ask qmake for the binary dir\n",
        "Line" : 631,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# ask qmake for the include dir\n",
        "Line" : 648,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Set QT_HEADERS_DIR based on finding QtCore header\n",
        "Line" : 664,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# Set QT_INCLUDE_DIR based on QT_HEADERS_DIR\n",
        "Line" : 682,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Qt/Mac frameworks has two include dirs.\n\n# One is the framework include for which CMake will add a -F flag\n\n# and the other is an include dir for non-framework Qt modules\n",
        "Line" : 685,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# Set QT_INCLUDES\n",
        "Line" : 694,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# ask qmake for the documentation directory\n",
        "Line" : 698,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# ask qmake for the plugins directory\n",
        "Line" : 705,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# ask qmake for the translations directory\n",
        "Line" : 719,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# ask qmake for the imports directory\n",
        "Line" : 725,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Make variables changeable to the advanced user\n",
        "Line" : 738,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "#############################################\n\n#\n\n# Find out what window system we're using\n\n#\n\n#############################################\n",
        "Line" : 745,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Add QT_INCLUDE_DIR to CMAKE_REQUIRED_INCLUDES\n",
        "Line" : 751,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Check for Window system symbols (note: only one should end up being set)\n",
        "Line" : 754,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "#\n\n#############################################\n",
        "Line" : 774,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "########################################\n\n#\n\n#       Setting the INCLUDE-Variables\n\n#\n\n########################################\n",
        "Line" : 779,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# phonon doesn't seem consistent, let's try phonondefs.h for some\n\n# installations\n",
        "Line" : 832,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# Set QT_AXCONTAINER_INCLUDE_DIR and QT_AXSERVER_INCLUDE_DIR\n",
        "Line" : 846,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# Set QT_QTDESIGNERCOMPONENTS_INCLUDE_DIR\n",
        "Line" : 857,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Set QT_QTASSISTANT_INCLUDE_DIR\n",
        "Line" : 865,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Set QT_QTASSISTANTCLIENT_INCLUDE_DIR\n",
        "Line" : 873,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "########################################\n\n#\n\n#       Setting the LIBRARY-Variables\n\n#\n\n########################################\n",
        "Line" : 881,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# find the libraries\n",
        "Line" : 887,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Release framework library file does not exist... Force to NOTFOUND:\n",
        "Line" : 900,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "# Debug framework library file does not exist... Force to NOTFOUND:\n",
        "Line" : 906,
        "CharPositionInLine" : 8
      },
      "48" : {
        "Text" : "# QtUiTools is sometimes not in the same directory as the other found libraries\n\n# e.g. on Mac, its never a framework like the others are\n",
        "Line" : 912,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# Set QT_QTDESIGNERCOMPONENTS_LIBRARY\n",
        "Line" : 918,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# Set QT_QTMAIN_LIBRARY\n",
        "Line" : 922,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# Set QT_QTASSISTANTCLIENT_LIBRARY\n",
        "Line" : 928,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# Set QT_QTASSISTANT_LIBRARY\n",
        "Line" : 932,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Set QT_QTHELP_LIBRARY\n",
        "Line" : 936,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "############################################\n\n#\n\n# Check the existence of the libraries.\n\n#\n\n############################################\n",
        "Line" : 944,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Set QT_xyz_LIBRARY variable and add\n\n# library include path to QT_INCLUDES\n",
        "Line" : 991,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# platform dependent libraries\n",
        "Line" : 1020,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# Only public dependencies are listed here.\n\n# Eg, QtDBus links to QtXml, but users of QtDBus do not need to\n\n# link to QtXml because QtDBus only uses it internally, not in public\n\n# headers.\n\n# Everything depends on QtCore, but that is covered above already\n",
        "Line" : 1036,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# An additional define is required for QT3_SUPPORT\n",
        "Line" : 1043,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "#######################################\n\n#\n\n#       Check the executables of Qt\n\n#          ( moc, uic, rcc )\n\n#\n\n#######################################\n",
        "Line" : 1101,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# get the directory of the current file, used later on in the file\n",
        "Line" : 1168,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "###############################################\n\n#\n\n#       configuration/system dependent settings\n\n#\n\n###############################################\n",
        "Line" : 1172,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "#######################################\n\n#\n\n#       Check the plugins of Qt\n\n#\n\n#######################################\n",
        "Line" : 1181,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# find_library works better than find_file but we need to set prefixes to only match plugins\n",
        "Line" : 1232,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# find_library works easier/better than find_file but we need to set suffixes to only match plugins\n",
        "Line" : 1249,
        "CharPositionInLine" : 8
      },
      "65" : {
        "Text" : "######################################\n\n#\n\n#       Macros for building Qt files\n\n#\n\n######################################\n",
        "Line" : 1267,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "#support old QT_MIN_VERSION if set, but not if version is supplied by find_package()\n",
        "Line" : 1277,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# if components specified in find_package(), make sure each of those pieces were found\n",
        "Line" : 1284,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# if no components specified, we'll make a default set of required variables to say Qt is found\n",
        "Line" : 1303,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "#######################################\n\n#\n\n#       compatibility settings\n\n#\n\n#######################################\n\n# Backwards compatibility for CMake1.4 and 1.2\n",
        "Line" : 1326,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 70
    },
    "deps/src/cmake-3.13.4/Modules/FindQuickTime.cmake" : {
      "ObjectId" : "995d8826b2654683900e7e3fc131e049c72f2fdd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindQuickTime\n\n# -------------\n\n#\n\n#\n\n#\n\n# Locate QuickTime This module defines QUICKTIME_LIBRARY\n\n# QUICKTIME_FOUND, if false, do not try to link to gdal\n\n# QUICKTIME_INCLUDE_DIR, where to find the headers\n\n#\n\n# $QUICKTIME_DIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$QUICKTIME_DIR\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindRTI.cmake" : {
      "ObjectId" : "b2ef0761a731c04ad8cf13c60853412898191819",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindRTI\n\n# -------\n\n#\n\n# Try to find M&S HLA RTI libraries\n\n#\n\n# This module finds if any HLA RTI is installed and locates the standard\n\n# RTI include files and libraries.\n\n#\n\n# RTI is a simulation infrastructure standardized by IEEE and SISO.  It\n\n# has a well defined C++ API that assures that simulation applications\n\n# are independent on a particular RTI implementation.\n\n#\n\n# ::\n\n#\n\n#   http://en.wikipedia.org/wiki/Run-Time_Infrastructure_(simulation)\n\n#\n\n#\n\n#\n\n# This code sets the following variables:\n\n#\n\n# ::\n\n#\n\n#   RTI_INCLUDE_DIR = the directory where RTI includes file are found\n\n#   RTI_LIBRARIES = The libraries to link against to use RTI\n\n#   RTI_DEFINITIONS = -DRTI_USES_STD_FSTREAM\n\n#   RTI_FOUND = Set to FALSE if any HLA RTI was not found\n\n#\n\n#\n\n#\n\n# Report problems to <certi-devel@nongnu.org>\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Detect the CERTI installation, http://www.cert.fr/CERTI\n\n# Detect the MAK Technologies RTI installation, http://www.mak.com/products/rti.php\n\n# note: the following list is ordered to find the most recent version first\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The MAK RTI has the \"lib\" prefix even on Windows.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the modified system variables back to the original value.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# $Id$\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/FindRuby.cmake" : {
      "ObjectId" : "bd9f8357db25df995f028b4a5162aca6ce593692",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindRuby\n\n# --------\n\n#\n\n# Find Ruby\n\n#\n\n# This module finds if Ruby is installed and determines where the\n\n# include files and libraries are.  Ruby 1.8, 1.9, 2.0 and 2.1 are\n\n# supported.\n\n#\n\n# The minimum required version of Ruby can be specified using the\n\n# standard syntax, e.g.  find_package(Ruby 1.8)\n\n#\n\n# It also determines what the name of the library is.  This code sets\n\n# the following variables:\n\n#\n\n# ``RUBY_EXECUTABLE``\n\n#   full path to the ruby binary\n\n# ``RUBY_INCLUDE_DIRS``\n\n#   include dirs to be used when using the ruby library\n\n# ``RUBY_LIBRARY``\n\n#   full path to the ruby library\n\n# ``RUBY_VERSION``\n\n#   the version of ruby which was found, e.g. \"1.8.7\"\n\n# ``RUBY_FOUND``\n\n#   set to true if ruby ws found successfully\n\n#\n\n# Also:\n\n#\n\n# ``RUBY_INCLUDE_PATH``\n\n#   same as RUBY_INCLUDE_DIRS, only provided for compatibility reasons, don't use it\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#   RUBY_ARCHDIR=`$RUBY -r rbconfig -e 'printf(\"%s\",Config::CONFIG@<:@\"archdir\"@:>@)'`\n\n#   RUBY_SITEARCHDIR=`$RUBY -r rbconfig -e 'printf(\"%s\",Config::CONFIG@<:@\"sitearchdir\"@:>@)'`\n\n#   RUBY_SITEDIR=`$RUBY -r rbconfig -e 'printf(\"%s\",Config::CONFIG@<:@\"sitelibdir\"@:>@)'`\n\n#   RUBY_LIBDIR=`$RUBY -r rbconfig -e 'printf(\"%s\",Config::CONFIG@<:@\"libdir\"@:>@)'`\n\n#   RUBY_LIBRUBYARG=`$RUBY -r rbconfig -e 'printf(\"%s\",Config::CONFIG@<:@\"LIBRUBYARG_SHARED\"@:>@)'`\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# uncomment the following line to get debug output for this file\n\n# set(_RUBY_DEBUG_OUTPUT TRUE)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Determine the list of possible names of the ruby executable depending\n\n# on which version of ruby is required\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# if 1.9 is required, don't look for ruby18 and ruby1.8, default to version 1.8\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# we can't construct that if only major version is given\n",
        "Line" : 52,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# if we want a version below 1.9, also look for ruby 1.8\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# query the ruby version\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# query the different directories\n",
        "Line" : 100,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# site_ruby\n",
        "Line" : 108,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# vendor_ruby available ?\n",
        "Line" : 112,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# save the results in the cache so we don't have to run ruby the next time again\n",
        "Line" : 121,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "# In case RUBY_EXECUTABLE could not be executed (e.g. cross compiling)\n\n# try to detect which version we found. This is not too good.\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# by default assume 1.8.0\n",
        "Line" : 157,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "# check whether we found 1.9.x\n",
        "Line" : 161,
        "CharPositionInLine" : 3
      },
      "16" : {
        "Text" : "# check whether we found 2.0.x\n",
        "Line" : 166,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# check whether we found 2.1.x\n",
        "Line" : 171,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# check whether we found 2.2.x\n",
        "Line" : 176,
        "CharPositionInLine" : 3
      },
      "19" : {
        "Text" : "# check whether we found 2.3.x\n",
        "Line" : 181,
        "CharPositionInLine" : 3
      },
      "20" : {
        "Text" : "# check whether we found 2.4.x\n",
        "Line" : 186,
        "CharPositionInLine" : 3
      },
      "21" : {
        "Text" : "# if ruby > 1.8 is required or if ruby > 1.8 was found, search for the config.h dir\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Determine the list of possible names for the ruby library\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Set some variables for compatibility with previous version of this file\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "deps/src/cmake-3.13.4/Modules/FindSDL.cmake" : {
      "ObjectId" : "3410018972b0b9ddf7c281a9af046495804f5e6f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindSDL\n\n# -------\n\n#\n\n# Locate SDL library\n\n#\n\n# This module defines\n\n#\n\n# ::\n\n#\n\n#   SDL_LIBRARY, the name of the library to link against\n\n#   SDL_FOUND, if false, do not try to link to SDL\n\n#   SDL_INCLUDE_DIR, where to find SDL.h\n\n#   SDL_VERSION_STRING, human-readable string containing the version of SDL\n\n#\n\n#\n\n#\n\n# This module responds to the flag:\n\n#\n\n# ::\n\n#\n\n#   SDL_BUILDING_LIBRARY\n\n#     If this is defined, then no SDL_main will be linked in because\n\n#     only applications need main().\n\n#     Otherwise, it is assumed you are building an application and this\n\n#     module will attempt to locate and set the proper link flags\n\n#     as part of the returned SDL_LIBRARY variable.\n\n#\n\n#\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version.  (Other versions link to -lSDLmain which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL_LIBRARY_TEMP in your\n\n# configuration and no SDL_LIBRARY, it means CMake did not find your SDL\n\n# library (SDL.dll, libsdl.so, SDL.framework, etc).  Set\n\n# SDL_LIBRARY_TEMP to point to your SDL library, and configure again.\n\n# Similarly, if you see an empty SDLMAIN_LIBRARY, you should set this\n\n# value as appropriate.  These values are used to generate the final\n\n# SDL_LIBRARY variable, but when these values are unset, SDL_LIBRARY\n\n# does not get created.\n\n#\n\n#\n\n#\n\n# $SDLDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$SDLDIR used in building SDL.  l.e.galup 9-20-02\n\n#\n\n# Modified by Eric Wing.  Added code to assist with automated building\n\n# by using environmental variables and providing a more\n\n# controlled/consistent search behavior.  Added new modifications to\n\n# recognize OS X frameworks and additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL\n\n# guidelines.  Added a search for SDLmain which is needed by some\n\n# platforms.  Added a search for threads which is needed by some\n\n# platforms.  Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of SDL_LIBRARY to\n\n# override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention is #include\n\n# \"SDL.h\", not <SDL/SDL.h>.  This is done for portability reasons\n\n# because not all systems place things in SDL/ (see FreeBSD).\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path suffixes to search inside ENV{SDLDIR}\n",
        "Line" : 78,
        "CharPositionInLine" : 16
      },
      "3" : {
        "Text" : "# SDL-1.1 is the name used by FreeBSD ports...\n\n# don't confuse it for the version number.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Hide this cache variable from the user, it's an internal implementation\n\n# detail. The documented library variable for the user is SDL_LIBRARY\n\n# which is derived from SDL_LIBRARY_TEMP further below.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDLmain. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDLmain for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# SDL may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MinGW needs an additional link flag, -mwindows\n\n# It's total link flags should look like -lmingw32 -lSDLmain -lSDL -mwindows\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For SDLmain\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# For OS X, SDL uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# For MinGW library\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 13
    },
    "deps/src/cmake-3.13.4/Modules/FindSDL_image.cmake" : {
      "ObjectId" : "8cdaa7a05e191ef1611de3670df75922ed74c511",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindSDL_image\n\n# -------------\n\n#\n\n# Locate SDL_image library\n\n#\n\n# This module defines:\n\n#\n\n# ::\n\n#\n\n#   SDL_IMAGE_LIBRARIES, the name of the library to link against\n\n#   SDL_IMAGE_INCLUDE_DIRS, where to find the headers\n\n#   SDL_IMAGE_FOUND, if false, do not try to link against\n\n#   SDL_IMAGE_VERSION_STRING - human-readable string containing the\n\n#                              version of SDL_image\n\n#\n\n#\n\n#\n\n# For backward compatibility the following variables are also set:\n\n#\n\n# ::\n\n#\n\n#   SDLIMAGE_LIBRARY (same value as SDL_IMAGE_LIBRARIES)\n\n#   SDLIMAGE_INCLUDE_DIR (same value as SDL_IMAGE_INCLUDE_DIRS)\n\n#   SDLIMAGE_FOUND (same value as SDL_IMAGE_FOUND)\n\n#\n\n#\n\n#\n\n# $SDLDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$SDLDIR used in building SDL.\n\n#\n\n# Created by Eric Wing.  This was influenced by the FindSDL.cmake\n\n# module, but with modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path suffixes to search inside ENV{SDLDIR}\n",
        "Line" : 48,
        "CharPositionInLine" : 16
      },
      "3" : {
        "Text" : "# for backward compatibility\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/FindSDL_mixer.cmake" : {
      "ObjectId" : "35233d1215d0a68660cead41a637bf0b315ec167",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindSDL_mixer\n\n# -------------\n\n#\n\n# Locate SDL_mixer library\n\n#\n\n# This module defines:\n\n#\n\n# ::\n\n#\n\n#   SDL_MIXER_LIBRARIES, the name of the library to link against\n\n#   SDL_MIXER_INCLUDE_DIRS, where to find the headers\n\n#   SDL_MIXER_FOUND, if false, do not try to link against\n\n#   SDL_MIXER_VERSION_STRING - human-readable string containing the\n\n#                              version of SDL_mixer\n\n#\n\n#\n\n#\n\n# For backward compatibility the following variables are also set:\n\n#\n\n# ::\n\n#\n\n#   SDLMIXER_LIBRARY (same value as SDL_MIXER_LIBRARIES)\n\n#   SDLMIXER_INCLUDE_DIR (same value as SDL_MIXER_INCLUDE_DIRS)\n\n#   SDLMIXER_FOUND (same value as SDL_MIXER_FOUND)\n\n#\n\n#\n\n#\n\n# $SDLDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$SDLDIR used in building SDL.\n\n#\n\n# Created by Eric Wing.  This was influenced by the FindSDL.cmake\n\n# module, but with modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path suffixes to search inside ENV{SDLDIR}\n",
        "Line" : 48,
        "CharPositionInLine" : 16
      },
      "3" : {
        "Text" : "# for backward compatibility\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/FindSDL_net.cmake" : {
      "ObjectId" : "b40694668fbd3a0fdbd7413f44bdd829a36019f2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindSDL_net\n\n# -----------\n\n#\n\n# Locate SDL_net library\n\n#\n\n# This module defines:\n\n#\n\n# ::\n\n#\n\n#   SDL_NET_LIBRARIES, the name of the library to link against\n\n#   SDL_NET_INCLUDE_DIRS, where to find the headers\n\n#   SDL_NET_FOUND, if false, do not try to link against\n\n#   SDL_NET_VERSION_STRING - human-readable string containing the version of SDL_net\n\n#\n\n#\n\n#\n\n# For backward compatibility the following variables are also set:\n\n#\n\n# ::\n\n#\n\n#   SDLNET_LIBRARY (same value as SDL_NET_LIBRARIES)\n\n#   SDLNET_INCLUDE_DIR (same value as SDL_NET_INCLUDE_DIRS)\n\n#   SDLNET_FOUND (same value as SDL_NET_FOUND)\n\n#\n\n#\n\n#\n\n# $SDLDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$SDLDIR used in building SDL.\n\n#\n\n# Created by Eric Wing.  This was influenced by the FindSDL.cmake\n\n# module, but with modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path suffixes to search inside ENV{SDLDIR}\n",
        "Line" : 47,
        "CharPositionInLine" : 16
      },
      "3" : {
        "Text" : "# for backward compatibility\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/FindSDL_sound.cmake" : {
      "ObjectId" : "cf33a4c2cc80b91b31cb54096f4b8be7aa782b53",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindSDL_sound\n\n# -------------\n\n#\n\n# Locates the SDL_sound library\n\n#\n\n#\n\n#\n\n# This module depends on SDL being found and must be called AFTER\n\n# FindSDL.cmake is called.\n\n#\n\n# This module defines\n\n#\n\n# ::\n\n#\n\n#   SDL_SOUND_INCLUDE_DIR, where to find SDL_sound.h\n\n#   SDL_SOUND_FOUND, if false, do not try to link to SDL_sound\n\n#   SDL_SOUND_LIBRARIES, this contains the list of libraries that you need\n\n#     to link against.\n\n#   SDL_SOUND_EXTRAS, this is an optional variable for you to add your own\n\n#     flags to SDL_SOUND_LIBRARIES. This is prepended to SDL_SOUND_LIBRARIES.\n\n#     This is available mostly for cases this module failed to anticipate for\n\n#     and you must add additional flags. This is marked as ADVANCED.\n\n#   SDL_SOUND_VERSION_STRING, human-readable string containing the\n\n#     version of SDL_sound\n\n#\n\n#\n\n#\n\n# This module also defines (but you shouldn't need to use directly)\n\n#\n\n# ::\n\n#\n\n#    SDL_SOUND_LIBRARY, the name of just the SDL_sound library you would link\n\n#    against. Use SDL_SOUND_LIBRARIES for you link instructions and not this one.\n\n#\n\n# And might define the following as needed\n\n#\n\n# ::\n\n#\n\n#    MIKMOD_LIBRARY\n\n#    MODPLUG_LIBRARY\n\n#    OGG_LIBRARY\n\n#    VORBIS_LIBRARY\n\n#    SMPEG_LIBRARY\n\n#    FLAC_LIBRARY\n\n#    SPEEX_LIBRARY\n\n#\n\n#\n\n#\n\n# Typically, you should not use these variables directly, and you should\n\n# use SDL_SOUND_LIBRARIES which contains SDL_SOUND_LIBRARY and the other\n\n# audio libraries (if needed) to successfully compile on your system.\n\n#\n\n# Created by Eric Wing.  This module is a bit more complicated than the\n\n# other FindSDL* family modules.  The reason is that SDL_sound can be\n\n# compiled in a large variety of different ways which are independent of\n\n# platform.  SDL_sound may dynamically link against other 3rd party\n\n# libraries to get additional codec support, such as Ogg Vorbis, SMPEG,\n\n# ModPlug, MikMod, FLAC, Speex, and potentially others.  Under some\n\n# circumstances which I don't fully understand, there seems to be a\n\n# requirement that dependent libraries of libraries you use must also be\n\n# explicitly linked against in order to successfully compile.  SDL_sound\n\n# does not currently have any system in place to know how it was\n\n# compiled.  So this CMake module does the hard work in trying to\n\n# discover which 3rd party libraries are required for building (if any).\n\n# This module uses a brute force approach to create a test program that\n\n# uses SDL_sound, and then tries to build it.  If the build fails, it\n\n# parses the error output for known symbol names to figure out which\n\n# libraries are needed.\n\n#\n\n# Responds to the $SDLDIR and $SDLSOUNDDIR environmental variable that\n\n# would correspond to the ./configure --prefix=$SDLDIR used in building\n\n# SDL.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of SDL_LIBRARY to\n\n# override this selectionor set the CMake environment CMAKE_INCLUDE_PATH\n\n# to modify the search paths.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find SDL_sound.h\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# path suffixes to search inside ENV{SDLDIR}\n",
        "Line" : 92,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# CMake is giving me problems using TRY_COMPILE with the CMAKE_FLAGS\n\n# for the :STRING syntax if I have multiple values contained in a\n\n# single variable. This is a problem for the SDL_LIBRARY variable\n\n# because it does just that. When I feed this variable to the command,\n\n# only the first value gets the appropriate modifier (e.g. -I) and\n\n# the rest get dropped.\n\n# To get multiple single variables to work, I must separate them with a \"\\;\"\n\n# I could go back and modify the FindSDL.cmake module, but that's kind of painful.\n\n# The solution would be to try something like:\n\n# string(APPEND SDL_TRY_COMPILE_LIBRARY_LIST \"\\;${CMAKE_THREAD_LIBS_INIT}\")\n\n# Instead, it was suggested on the mailing list to write a temporary CMakeLists.txt\n\n# with a temporary test project and invoke that with TRY_COMPILE.\n\n# See message thread \"Figuring out dependencies for a library in order to build\"\n\n# 2005-07-16\n\n#     try_compile(\n\n#             MY_RESULT\n\n#             ${CMAKE_BINARY_DIR}\n\n#             ${PROJECT_SOURCE_DIR}/DetermineSoundLibs.c\n\n#             CMAKE_FLAGS\n\n#                     -DINCLUDE_DIRECTORIES:STRING=${SDL_INCLUDE_DIR}\\;${SDL_SOUND_INCLUDE_DIR}\n\n#                     -DLINK_LIBRARIES:STRING=${SDL_SOUND_LIBRARY}\\;${SDL_LIBRARY}\n\n#             OUTPUT_VARIABLE MY_OUTPUT\n\n#     )\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# To minimize external dependencies, create a sdlsound test program\n\n# which will be used to figure out if additional link dependencies are\n\n# required for the link phase.\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Calling\n\n# target_link_libraries(DetermineSoundLibs \"${SDL_SOUND_LIBRARY} ${SDL_LIBRARY})\n\n# causes problems when SDL_LIBRARY looks like\n\n# /Library/Frameworks/SDL.framework;-framework Cocoa\n\n# The ;-framework Cocoa seems to be confusing CMake once the OS X\n\n# framework support was added. I was told that breaking up the list\n\n# would fix the problem.\n",
        "Line" : 156,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# message(\"TMP_TRY_LIBS ${TMP_TRY_LIBS}\")\n",
        "Line" : 168,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# Write the CMakeLists.txt and test project\n\n# Weird, this is still sketchy. If I don't quote the variables\n\n# in the TARGET_LINK_LIBRARIES, I seem to loose everything\n\n# in the SDL_LIBRARY string after the \"-framework\".\n\n# But if I quote the stuff in INCLUDE_DIRECTORIES, it doesn't work.\n",
        "Line" : 170,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# message(\"${MY_RESULT}\")\n\n# message(${MY_OUTPUT})\n",
        "Line" : 191,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# I expect that MPGLIB, VOC, WAV, AIFF, and SHN are compiled in statically.\n\n# I think Timidity is also compiled in statically.\n\n# I've never had to explcitly link against Quicktime, so I'll skip that for now.\n",
        "Line" : 196,
        "CharPositionInLine" : 5
      },
      "11" : {
        "Text" : "# Find MikMod\n",
        "Line" : 202,
        "CharPositionInLine" : 5
      },
      "12" : {
        "Text" : "# Find ModPlug\n",
        "Line" : 222,
        "CharPositionInLine" : 5
      },
      "13" : {
        "Text" : "# Find Ogg and Vorbis\n",
        "Line" : 243,
        "CharPositionInLine" : 5
      },
      "14" : {
        "Text" : "# Find SMPEG\n",
        "Line" : 283,
        "CharPositionInLine" : 5
      },
      "15" : {
        "Text" : "# Find FLAC\n",
        "Line" : 304,
        "CharPositionInLine" : 5
      },
      "16" : {
        "Text" : "# Hmmm...Speex seems to depend on Ogg. This might be a problem if\n\n# the TRY_COMPILE attempt gets blocked at SPEEX before it can pull\n\n# in the Ogg symbols. I'm not sure if I should duplicate the ogg stuff\n\n# above for here or if two ogg entries will screw up things.\n",
        "Line" : 325,
        "CharPositionInLine" : 5
      },
      "17" : {
        "Text" : "# Find OGG (needed for Speex)\n",
        "Line" : 347,
        "CharPositionInLine" : 7
      },
      "18" : {
        "Text" : "# We might have already found Ogg for Vorbis, so skip it if so.\n",
        "Line" : 348,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 19
    },
    "deps/src/cmake-3.13.4/Modules/FindSDL_ttf.cmake" : {
      "ObjectId" : "aa705f22665be443d3b670e4cf1322fc15483f8e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindSDL_ttf\n\n# -----------\n\n#\n\n# Locate SDL_ttf library\n\n#\n\n# This module defines:\n\n#\n\n# ::\n\n#\n\n#   SDL_TTF_LIBRARIES, the name of the library to link against\n\n#   SDL_TTF_INCLUDE_DIRS, where to find the headers\n\n#   SDL_TTF_FOUND, if false, do not try to link against\n\n#   SDL_TTF_VERSION_STRING - human-readable string containing the version of SDL_ttf\n\n#\n\n#\n\n#\n\n# For backward compatibility the following variables are also set:\n\n#\n\n# ::\n\n#\n\n#   SDLTTF_LIBRARY (same value as SDL_TTF_LIBRARIES)\n\n#   SDLTTF_INCLUDE_DIR (same value as SDL_TTF_INCLUDE_DIRS)\n\n#   SDLTTF_FOUND (same value as SDL_TTF_FOUND)\n\n#\n\n#\n\n#\n\n# $SDLDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$SDLDIR used in building SDL.\n\n#\n\n# Created by Eric Wing.  This was influenced by the FindSDL.cmake\n\n# module, but with modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path suffixes to search inside ENV{SDLDIR}\n",
        "Line" : 47,
        "CharPositionInLine" : 16
      },
      "3" : {
        "Text" : "# for backward compatibility\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/FindSWIG.cmake" : {
      "ObjectId" : "92c032f6ad2b5d65b972f1f6f20549639828fa57",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindSWIG\n\n# --------\n\n#\n\n# Find SWIG\n\n#\n\n# This module finds an installed SWIG.  It sets the following variables:\n\n#\n\n# ::\n\n#\n\n#   SWIG_FOUND - set to true if SWIG is found\n\n#   SWIG_DIR - the directory where swig is installed\n\n#   SWIG_EXECUTABLE - the path to the swig executable\n\n#   SWIG_VERSION   - the version number of the swig executable\n\n#\n\n#\n\n#\n\n# The minimum required version of SWIG can be specified using the\n\n# standard syntax, e.g.  find_package(SWIG 1.1)\n\n#\n\n# All information is collected from the SWIG_EXECUTABLE so the version\n\n# to be found can be changed from the command line by means of setting\n\n# SWIG_EXECUTABLE\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindSelfPackers.cmake" : {
      "ObjectId" : "ac2c7cf883bf03c5774aceb15c78b15852bada3d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindSelfPackers\n\n# ---------------\n\n#\n\n# Find upx\n\n#\n\n# This module looks for some executable packers (i.e.  software that\n\n# compress executables or shared libs into on-the-fly self-extracting\n\n# executables or shared libs.  Examples:\n\n#\n\n# ::\n\n#\n\n#   UPX: http://wildsau.idv.uni-linz.ac.at/mfx/upx.html\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Set flags\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindSquish.cmake" : {
      "ObjectId" : "d1ce2002a7b93f1dec3508eebc908093cd4db686",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindSquish\n\n# ----------\n\n#\n\n# -- Typical Use\n\n#\n\n#\n\n#\n\n# This module can be used to find Squish.  Currently Squish versions 3\n\n# and 4 are supported.\n\n#\n\n# ::\n\n#\n\n#   SQUISH_FOUND                    If false, don't try to use Squish\n\n#   SQUISH_VERSION                  The full version of Squish found\n\n#   SQUISH_VERSION_MAJOR            The major version of Squish found\n\n#   SQUISH_VERSION_MINOR            The minor version of Squish found\n\n#   SQUISH_VERSION_PATCH            The patch version of Squish found\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#   SQUISH_INSTALL_DIR              The Squish installation directory\n\n#                                   (containing bin, lib, etc)\n\n#   SQUISH_SERVER_EXECUTABLE        The squishserver executable\n\n#   SQUISH_CLIENT_EXECUTABLE        The squishrunner executable\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#   SQUISH_INSTALL_DIR_FOUND        Was the install directory found?\n\n#   SQUISH_SERVER_EXECUTABLE_FOUND  Was the server executable found?\n\n#   SQUISH_CLIENT_EXECUTABLE_FOUND  Was the client executable found?\n\n#\n\n#\n\n#\n\n# It provides the function squish_v4_add_test() for adding a squish test\n\n# to cmake using Squish 4.x:\n\n#\n\n# ::\n\n#\n\n#    squish_v4_add_test(cmakeTestName\n\n#      AUT targetName SUITE suiteName TEST squishTestName\n\n#      [SETTINGSGROUP group] [PRE_COMMAND command] [POST_COMMAND command] )\n\n#\n\n#\n\n#\n\n# The arguments have the following meaning:\n\n#\n\n# ``cmakeTestName``\n\n#   this will be used as the first argument for add_test()\n\n# ``AUT targetName``\n\n#   the name of the cmake target which will be used as AUT, i.e. the\n\n#   executable which will be tested.\n\n# ``SUITE suiteName``\n\n#   this is either the full path to the squish suite, or just the\n\n#   last directory of the suite, i.e. the suite name. In this case\n\n#   the CMakeLists.txt which calls squish_add_test() must be located\n\n#   in the parent directory of the suite directory.\n\n# ``TEST squishTestName``\n\n#   the name of the squish test, i.e. the name of the subdirectory\n\n#   of the test inside the suite directory.\n\n# ``SETTINGSGROUP group``\n\n#   if specified, the given settings group will be used for executing the test.\n\n#   If not specified, the groupname will be \"CTest_<username>\"\n\n# ``PRE_COMMAND command``\n\n#   if specified, the given command will be executed before starting the squish test.\n\n# ``POST_COMMAND command``\n\n#   same as PRE_COMMAND, but after the squish test has been executed.\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    enable_testing()\n\n#    find_package(Squish 4.0)\n\n#    if (SQUISH_FOUND)\n\n#       squish_v4_add_test(myTestName\n\n#         AUT myApp\n\n#         SUITE ${CMAKE_SOURCE_DIR}/tests/mySuite\n\n#         TEST someSquishTest\n\n#         SETTINGSGROUP myGroup\n\n#         )\n\n#    endif ()\n\n#\n\n#\n\n#\n\n#\n\n#\n\n# For users of Squish version 3.x the macro squish_v3_add_test() is\n\n# provided:\n\n#\n\n# ::\n\n#\n\n#    squish_v3_add_test(testName applicationUnderTest testCase envVars testWrapper)\n\n#    Use this macro to add a test using Squish 3.x.\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#   enable_testing()\n\n#   find_package(Squish)\n\n#   if (SQUISH_FOUND)\n\n#     squish_v3_add_test(myTestName myApplication testCase envVars testWrapper)\n\n#   endif ()\n\n#\n\n#\n\n#\n\n# macro SQUISH_ADD_TEST(testName applicationUnderTest testCase envVars\n\n# testWrapper)\n\n#\n\n# ::\n\n#\n\n#    This is deprecated. Use SQUISH_V3_ADD_TEST() if you are using Squish 3.x instead.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search only if the location is not already known.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Get the system search path as a list.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Construct a set of paths relative to the system search path.\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Look for an installation\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Look for an environment variable SQUISH_INSTALL_DIR.\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Look in places relative to the system executable search path.\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# search for the executables\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# find the client program\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# find the server program\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# record if executables are set\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# record if Squish was found\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "deps/src/cmake-3.13.4/Modules/FindSubversion.cmake" : {
      "ObjectId" : "e18ae880f78ea5d3d8720c91416a1b87ad692869",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindSubversion\n\n# --------------\n\n#\n\n# Extract information from a subversion working copy\n\n#\n\n# The module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#   Subversion_SVN_EXECUTABLE - path to svn command line client\n\n#   Subversion_VERSION_SVN - version of svn command line client\n\n#   Subversion_FOUND - true if the command line client was found\n\n#   SUBVERSION_FOUND - same as Subversion_FOUND, set for compatibility reasons\n\n#\n\n#\n\n#\n\n# The minimum required version of Subversion can be specified using the\n\n# standard syntax, e.g. ``find_package(Subversion 1.4)``.\n\n#\n\n# If the command line client executable is found two macros are defined:\n\n#\n\n# ::\n\n#\n\n#   Subversion_WC_INFO(<dir> <var-prefix> [IGNORE_SVN_FAILURE])\n\n#   Subversion_WC_LOG(<dir> <var-prefix>)\n\n#\n\n# ``Subversion_WC_INFO`` extracts information of a subversion working copy at a\n\n# given location.  This macro defines the following variables if running\n\n# Subversion's ``info`` command on ``<dir>`` succeeds; otherwise a\n\n# ``SEND_ERROR`` message is generated. The error can be ignored by providing the\n\n# ``IGNORE_SVN_FAILURE`` option, which causes these variables to remain\n\n# undefined.\n\n#\n\n# ::\n\n#\n\n#   <var-prefix>_WC_URL - url of the repository (at <dir>)\n\n#   <var-prefix>_WC_ROOT - root url of the repository\n\n#   <var-prefix>_WC_REVISION - current revision\n\n#   <var-prefix>_WC_LAST_CHANGED_AUTHOR - author of last commit\n\n#   <var-prefix>_WC_LAST_CHANGED_DATE - date of last commit\n\n#   <var-prefix>_WC_LAST_CHANGED_REV - revision of last commit\n\n#   <var-prefix>_WC_INFO - output of command `svn info <dir>'\n\n#\n\n# ``Subversion_WC_LOG`` retrieves the log message of the base revision of a\n\n# subversion working copy at a given location.  This macro defines the variable:\n\n#\n\n# ::\n\n#\n\n#   <var-prefix>_LAST_CHANGED_LOG - last log of base revision\n\n#\n\n# Example usage:\n\n#\n\n# ::\n\n#\n\n#   find_package(Subversion)\n\n#   if(SUBVERSION_FOUND)\n\n#     Subversion_WC_INFO(${PROJECT_SOURCE_DIR} Project)\n\n#     message(\"Current revision is ${Project_WC_REVISION}\")\n\n#     Subversion_WC_LOG(${PROJECT_SOURCE_DIR} Project)\n\n#     message(\"Last changed log is ${Project_LAST_CHANGED_LOG}\")\n\n#   endif()\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the subversion commands should be executed with the C locale, otherwise\n\n# the message (which are parsed) may be translated, Alex\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# restore the previous LC_ALL\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# the subversion commands should be executed with the C locale, otherwise\n\n# the message (which are parsed) may be translated, Alex\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# restore the previous LC_ALL\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# This macro can block if the certificate is not signed:\n\n# svn ask you to accept the certificate and wait for your answer\n\n# This macro requires a svn server network access (Internet most of the time)\n\n# and can also be slow since it access the svn server\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# for compatibility\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Modules/FindTCL.cmake" : {
      "ObjectId" : "ad16e0de19865813481dabd5362de6c2a1825141",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindTCL\n\n# -------\n\n#\n\n# TK_INTERNAL_PATH was removed.\n\n#\n\n# This module finds if Tcl is installed and determines where the include\n\n# files and libraries are.  It also determines what the name of the\n\n# library is.  This code sets the following variables:\n\n#\n\n# ::\n\n#\n\n#   TCL_FOUND              = Tcl was found\n\n#   TK_FOUND               = Tk was found\n\n#   TCLTK_FOUND            = Tcl and Tk were found\n\n#   TCL_LIBRARY            = path to Tcl library (tcl tcl80)\n\n#   TCL_INCLUDE_PATH       = path to where tcl.h can be found\n\n#   TCL_TCLSH              = path to tclsh binary (tcl tcl80)\n\n#   TK_LIBRARY             = path to Tk library (tk tk80 etc)\n\n#   TK_INCLUDE_PATH        = path to where tk.h can be found\n\n#   TK_WISH                = full path to the wish executable\n\n#\n\n#\n\n#\n\n# In an effort to remove some clutter and clear up some issues for\n\n# people who are not necessarily Tcl/Tk gurus/developers, some\n\n# variables were moved or removed.  Changes compared to CMake 2.4 are:\n\n#\n\n# ::\n\n#\n\n#    => they were only useful for people writing Tcl/Tk extensions.\n\n#    => these libs are not packaged by default with Tcl/Tk distributions.\n\n#       Even when Tcl/Tk is built from source, several flavors of debug libs\n\n#       are created and there is no real reason to pick a single one\n\n#       specifically (say, amongst tcl84g, tcl84gs, or tcl84sgx).\n\n#       Let's leave that choice to the user by allowing him to assign\n\n#       TCL_LIBRARY to any Tcl library, debug or not.\n\n#    => this ended up being only a Win32 variable, and there is a lot of\n\n#       confusion regarding the location of this file in an installed Tcl/Tk\n\n#       tree anyway (see 8.5 for example). If you need the internal path at\n\n#       this point it is safer you ask directly where the *source* tree is\n\n#       and dig from there.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindTIFF.cmake" : {
      "ObjectId" : "b622ca61ca8cb454686f19ac423bf919f4b08ebe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindTIFF\n\n# --------\n\n#\n\n# Find the TIFF library (libtiff).\n\n#\n\n# Imported targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``TIFF::TIFF``\n\n#   The TIFF library, if found.\n\n#\n\n# Result variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``TIFF_FOUND``\n\n#   true if the TIFF headers and libraries were found\n\n# ``TIFF_INCLUDE_DIR``\n\n#   the directory containing the TIFF headers\n\n# ``TIFF_INCLUDE_DIRS``\n\n#   the directory containing the TIFF headers\n\n# ``TIFF_LIBRARIES``\n\n#   TIFF libraries to be linked\n\n#\n\n# Cache variables\n\n# ^^^^^^^^^^^^^^^\n\n#\n\n# The following cache variables may also be set:\n\n#\n\n# ``TIFF_INCLUDE_DIR``\n\n#   the directory containing the TIFF headers\n\n# ``TIFF_LIBRARY``\n\n#   the path to the TIFF library\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindTclStub.cmake" : {
      "ObjectId" : "db0a7a17622fc717ee027df42c03201905c02396",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindTclStub\n\n# -----------\n\n#\n\n# TCL_STUB_LIBRARY_DEBUG and TK_STUB_LIBRARY_DEBUG were removed.\n\n#\n\n# This module finds Tcl stub libraries.  It first finds Tcl include\n\n# files and libraries by calling FindTCL.cmake.  How to Use the Tcl\n\n# Stubs Library:\n\n#\n\n# ::\n\n#\n\n#    http://tcl.activestate.com/doc/howto/stubs.html\n\n#\n\n# Using Stub Libraries:\n\n#\n\n# ::\n\n#\n\n#    http://safari.oreilly.com/0130385603/ch48lev1sec3\n\n#\n\n# This code sets the following variables:\n\n#\n\n# ::\n\n#\n\n#   TCL_STUB_LIBRARY       = path to Tcl stub library\n\n#   TK_STUB_LIBRARY        = path to Tk stub library\n\n#   TTK_STUB_LIBRARY       = path to ttk stub library\n\n#\n\n#\n\n#\n\n# In an effort to remove some clutter and clear up some issues for\n\n# people who are not necessarily Tcl/Tk gurus/developers, some\n\n# variables were moved or removed.  Changes compared to CMake 2.4 are:\n\n#\n\n# ::\n\n#\n\n#    => these libs are not packaged by default with Tcl/Tk distributions.\n\n#       Even when Tcl/Tk is built from source, several flavors of debug libs\n\n#       are created and there is no real reason to pick a single one\n\n#       specifically (say, amongst tclstub84g, tclstub84gs, or tclstub84sgx).\n\n#       Let's leave that choice to the user by allowing him to assign\n\n#       TCL_STUB_LIBRARY to any Tcl library, debug or not.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindTclsh.cmake" : {
      "ObjectId" : "9bf935d8e0e2fcc3648af3d87c55f76d0975597f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindTclsh\n\n# ---------\n\n#\n\n# Find tclsh\n\n#\n\n# This module finds if TCL is installed and determines where the include\n\n# files and libraries are.  It also determines what the name of the\n\n# library is.  This code sets the following variables:\n\n#\n\n# ::\n\n#\n\n#   TCLSH_FOUND = TRUE if tclsh has been found\n\n#   TCL_TCLSH = the path to the tclsh executable\n\n#\n\n# In cygwin, look for the cygwin version first.  Don't look for it later\n\n# to avoid finding the cygwin version on a Win32 build.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindThreads.cmake" : {
      "ObjectId" : "75e83ea4a00efcaa6beddc6fffc5017a4fac3193",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindThreads\n\n# -----------\n\n#\n\n# This module determines the thread library of the system.\n\n#\n\n# The following variables are set\n\n#\n\n# ::\n\n#\n\n#   CMAKE_THREAD_LIBS_INIT     - the thread library\n\n#   CMAKE_USE_SPROC_INIT       - are we using sproc?\n\n#   CMAKE_USE_WIN32_THREADS_INIT - using WIN32 threads?\n\n#   CMAKE_USE_PTHREADS_INIT    - are we using pthreads\n\n#   CMAKE_HP_PTHREADS_INIT     - are we using hp pthreads\n\n#\n\n# The following import target is created\n\n#\n\n# ::\n\n#\n\n#   Threads::Threads\n\n#\n\n# For systems with multiple thread libraries, caller can set\n\n#\n\n# ::\n\n#\n\n#   CMAKE_THREAD_PREFER_PTHREAD\n\n#\n\n# If the use of the -pthread compiler and linker flag is preferred then the\n\n# caller can set\n\n#\n\n# ::\n\n#\n\n#   THREADS_PREFER_PTHREAD_FLAG\n\n#\n\n# Please note that the compiler flag can only be used with the imported\n\n# target. Use of both the imported target as well as this switch is highly\n\n# recommended for new code.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do we have sproc?\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal helper macro.\n\n# Do NOT even think about using it outside of this file!\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Internal helper macro.\n\n# Do NOT even think about using it outside of this file!\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we did not found -lpthread, -lpthread, or -lthread, look for -pthread\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# We have sproc\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Do we have pthreads?\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#\n\n# We have pthread.h\n\n# Let's check for the library now.\n\n#\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Check if pthread functions are in normal C library\n",
        "Line" : 133,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Check for -pthread first if enabled. This is the recommended\n\n# way, but not backwards compatible as one must also pass -pthread\n\n# as compiler flag then.\n",
        "Line" : 141,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# On sun also check for -lthread\n",
        "Line" : 151,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "# Use libcma if it exists and can be used.  It provides more\n\n# symbols than the plain pthread library.  CMA threads\n\n# have actually been deprecated:\n\n#   http://docs.hp.com/en/B3920-90091/ch12s03.html#d0e11395\n\n#   http://docs.hp.com/en/947/d8.html\n\n# but we need to maintain compatibility here.\n\n# The CMAKE_HP_PTHREADS setting actually indicates whether CMA threads\n\n# are available.\n",
        "Line" : 173,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 13
    },
    "deps/src/cmake-3.13.4/Modules/FindUnixCommands.cmake" : {
      "ObjectId" : "45047a94973461345904ec1352dec391de7a0259",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindUnixCommands\n\n# ----------------\n\n#\n\n# Find Unix commands, including the ones from Cygwin\n\n#\n\n# This module looks for the Unix commands bash, cp, gzip, mv, rm, and tar\n\n# and stores the result in the variables BASH, CP, GZIP, MV, RM, and TAR.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindVulkan.cmake" : {
      "ObjectId" : "4c60ed7da6cbc36e1d7b275e61ebe1e980a194b9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindVulkan\n\n# ----------\n\n#\n\n# Try to find Vulkan\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines :prop_tgt:`IMPORTED` target ``Vulkan::Vulkan``, if\n\n# Vulkan has been found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables::\n\n#\n\n#   Vulkan_FOUND          - True if Vulkan was found\n\n#   Vulkan_INCLUDE_DIRS   - include directories for Vulkan\n\n#   Vulkan_LIBRARIES      - link against this library to use Vulkan\n\n#\n\n# The module will also define two cache variables::\n\n#\n\n#   Vulkan_INCLUDE_DIR    - the Vulkan include directory\n\n#   Vulkan_LIBRARY        - the path to the Vulkan library\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindWget.cmake" : {
      "ObjectId" : "4fcb2fa37826f45a75b5168f3ee64be9dee09a49",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindWget\n\n# --------\n\n#\n\n# Find wget\n\n#\n\n# This module looks for wget.  This module defines the following values:\n\n#\n\n# ::\n\n#\n\n#   WGET_EXECUTABLE: the full path to the wget tool.\n\n#   WGET_FOUND: True if wget has been found.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# WGET option is deprecated.\n\n# use WGET_EXECUTABLE instead.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindWish.cmake" : {
      "ObjectId" : "b64b04138e62a76e6e9f5d2aee1965e2c99832c9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindWish\n\n# --------\n\n#\n\n# Find wish installation\n\n#\n\n# This module finds if TCL is installed and determines where the include\n\n# files and libraries are.  It also determines what the name of the\n\n# library is.  This code sets the following variables:\n\n#\n\n# ::\n\n#\n\n#   TK_WISH = the path to the wish executable\n\n#\n\n#\n\n#\n\n# if UNIX is defined, then it will look for the cygwin version first\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/FindX11.cmake" : {
      "ObjectId" : "f7dfc825795abd2f3a3f269dc2b9d7215385f7ce",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindX11\n\n# -------\n\n#\n\n# Find X11 installation\n\n#\n\n# Try to find X11 on UNIX systems. The following values are defined\n\n#\n\n# ::\n\n#\n\n#   X11_FOUND        - True if X11 is available\n\n#   X11_INCLUDE_DIR  - include directories to use X11\n\n#   X11_LIBRARIES    - link against these to use X11\n\n#\n\n# and also the following more fine grained variables:\n\n#\n\n# ::\n\n#\n\n#   X11_ICE_INCLUDE_PATH,          X11_ICE_LIB,        X11_ICE_FOUND\n\n#   X11_SM_INCLUDE_PATH,           X11_SM_LIB,         X11_SM_FOUND\n\n#   X11_X11_INCLUDE_PATH,          X11_X11_LIB\n\n#   X11_Xaccessrules_INCLUDE_PATH,                     X11_Xaccess_FOUND\n\n#   X11_Xaccessstr_INCLUDE_PATH,                       X11_Xaccess_FOUND\n\n#   X11_Xau_INCLUDE_PATH,          X11_Xau_LIB,        X11_Xau_FOUND\n\n#   X11_Xcomposite_INCLUDE_PATH,   X11_Xcomposite_LIB, X11_Xcomposite_FOUND\n\n#   X11_Xcursor_INCLUDE_PATH,      X11_Xcursor_LIB,    X11_Xcursor_FOUND\n\n#   X11_Xdamage_INCLUDE_PATH,      X11_Xdamage_LIB,    X11_Xdamage_FOUND\n\n#   X11_Xdmcp_INCLUDE_PATH,        X11_Xdmcp_LIB,      X11_Xdmcp_FOUND\n\n#   X11_Xext_LIB,       X11_Xext_FOUND\n\n#   X11_dpms_INCLUDE_PATH,         (in X11_Xext_LIB),  X11_dpms_FOUND\n\n#   X11_XShm_INCLUDE_PATH,         (in X11_Xext_LIB),  X11_XShm_FOUND\n\n#   X11_Xshape_INCLUDE_PATH,       (in X11_Xext_LIB),  X11_Xshape_FOUND\n\n#   X11_xf86misc_INCLUDE_PATH,     X11_Xxf86misc_LIB,  X11_xf86misc_FOUND\n\n#   X11_xf86vmode_INCLUDE_PATH,    X11_Xxf86vm_LIB     X11_xf86vmode_FOUND\n\n#   X11_Xfixes_INCLUDE_PATH,       X11_Xfixes_LIB,     X11_Xfixes_FOUND\n\n#   X11_Xft_INCLUDE_PATH,          X11_Xft_LIB,        X11_Xft_FOUND\n\n#   X11_Xi_INCLUDE_PATH,           X11_Xi_LIB,         X11_Xi_FOUND\n\n#   X11_Xinerama_INCLUDE_PATH,     X11_Xinerama_LIB,   X11_Xinerama_FOUND\n\n#   X11_Xinput_INCLUDE_PATH,       X11_Xinput_LIB,     X11_Xinput_FOUND\n\n#   X11_Xkb_INCLUDE_PATH,                              X11_Xkb_FOUND\n\n#   X11_Xkblib_INCLUDE_PATH,                           X11_Xkb_FOUND\n\n#   X11_Xkbfile_INCLUDE_PATH,      X11_Xkbfile_LIB,    X11_Xkbfile_FOUND\n\n#   X11_Xmu_INCLUDE_PATH,          X11_Xmu_LIB,        X11_Xmu_FOUND\n\n#   X11_Xpm_INCLUDE_PATH,          X11_Xpm_LIB,        X11_Xpm_FOUND\n\n#   X11_XTest_INCLUDE_PATH,        X11_XTest_LIB,      X11_XTest_FOUND\n\n#   X11_Xrandr_INCLUDE_PATH,       X11_Xrandr_LIB,     X11_Xrandr_FOUND\n\n#   X11_Xrender_INCLUDE_PATH,      X11_Xrender_LIB,    X11_Xrender_FOUND\n\n#   X11_Xscreensaver_INCLUDE_PATH, X11_Xscreensaver_LIB, X11_Xscreensaver_FOUND\n\n#   X11_Xt_INCLUDE_PATH,           X11_Xt_LIB,         X11_Xt_FOUND\n\n#   X11_Xutil_INCLUDE_PATH,                            X11_Xutil_FOUND\n\n#   X11_Xv_INCLUDE_PATH,           X11_Xv_LIB,         X11_Xv_FOUND\n\n#   X11_XSync_INCLUDE_PATH,        (in X11_Xext_LIB),  X11_XSync_FOUND\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# X11 is never a framework and some header files may be\n\n# found in tcl on the mac\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Look for includes; keep the list sorted by name of the cmake *_INCLUDE_PATH\n\n# variable (which doesn't need to match the include file name).\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Solaris lacks XKBrules.h, so we should skip kxkbd there.\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Find additional X libraries. Keep list sorted by library name.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# start with empty list\n",
        "Line" : 160,
        "CharPositionInLine" : 23
      },
      "7" : {
        "Text" : "# start with empty list\n",
        "Line" : 179,
        "CharPositionInLine" : 21
      },
      "8" : {
        "Text" : "# Most of the X11 headers will be in the same directories, avoid\n\n# creating a huge list of duplicates.\n",
        "Line" : 331,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Deprecated variable for backwards compatibility with CMake 1.4\n",
        "Line" : 337,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Translated from an autoconf-generated configure script.\n\n# See libs.m4 in autoconf's m4 directory.\n",
        "Line" : 346,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# See if XOpenDisplay in X11 works by itself.\n",
        "Line" : 353,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Find library needed for dnet_ntoa.\n",
        "Line" : 356,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Find library needed for gethostbyname.\n",
        "Line" : 368,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Find library needed for connect.\n",
        "Line" : 382,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# Find library needed for remove.\n",
        "Line" : 391,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Find library needed for shmat.\n",
        "Line" : 400,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Build the final list of libraries.\n",
        "Line" : 421,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# X11_FIND_REQUIRED_<component> could be checked too\n",
        "Line" : 502,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "deps/src/cmake-3.13.4/Modules/FindXCTest.cmake" : {
      "ObjectId" : "849733661e7edb891ea6c8c6b352ce8cf09b9731",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindXCTest\n----------\n\nFunctions to help creating and executing XCTest bundles.\n\nAn XCTest bundle is a CFBundle with a special product-type\nand bundle extension. The Mac Developer Library provides more\ninformation in the `Testing with Xcode`_ document.\n\n.. _Testing with Xcode: http://developer.apple.com/library/mac/documentation/DeveloperTools/Conceptual/testing_with_xcode/\n\nModule Functions\n^^^^^^^^^^^^^^^^\n\n.. command:: xctest_add_bundle\n\n  The ``xctest_add_bundle`` function creates a XCTest bundle named\n  <target> which will test the target <testee>. Supported target types\n  for testee are Frameworks and App Bundles::\n\n    xctest_add_bundle(\n      <target>  # Name of the XCTest bundle\n      <testee>  # Target name of the testee\n      )\n\n.. command:: xctest_add_test\n\n  The ``xctest_add_test`` function adds an XCTest bundle to the\n  project to be run by :manual:`ctest(1)`. The test will be named\n  <name> and tests <bundle>::\n\n    xctest_add_test(\n      <name>    # Test name\n      <bundle>  # Target name of XCTest bundle\n      )\n\nModule Variables\n^^^^^^^^^^^^^^^^\n\nThe following variables are set by including this module:\n\n.. variable:: XCTest_FOUND\n\n  True if the XCTest Framework and executable were found.\n\n.. variable:: XCTest_EXECUTABLE\n\n  The path to the xctest command line tool used to execute XCTest bundles.\n\n.. variable:: XCTest_INCLUDE_DIRS\n\n  The directory containing the XCTest Framework headers.\n\n.. variable:: XCTest_LIBRARIES\n\n  The location of the XCTest Framework.\n\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# retrieve testee target type\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# testee is a Framework\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# testee is a static library\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# testee is an App Bundle\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# check that bundle is a XCTest Bundle\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# get and check testee properties\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# register test\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# point loader to testee in case rpath is disabled\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Modules/FindXMLRPC.cmake" : {
      "ObjectId" : "e7ae9197d9d68238a202aae422b39a25becc9273",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindXMLRPC\n\n# ----------\n\n#\n\n# Find xmlrpc\n\n#\n\n# Find the native XMLRPC headers and libraries.\n\n#\n\n# ::\n\n#\n\n#   XMLRPC_INCLUDE_DIRS      - where to find xmlrpc.h, etc.\n\n#   XMLRPC_LIBRARIES         - List of libraries when using xmlrpc.\n\n#   XMLRPC_FOUND             - True if xmlrpc found.\n\n#\n\n# XMLRPC modules may be specified as components for this find module.\n\n# Modules may be listed by running \"xmlrpc-c-config\".  Modules include:\n\n#\n\n# ::\n\n#\n\n#   c++            C++ wrapper code\n\n#   libwww-client  libwww-based client\n\n#   cgi-server     CGI-based server\n\n#   abyss-server   ABYSS-based server\n\n#\n\n# Typical usage:\n\n#\n\n# ::\n\n#\n\n#   find_package(XMLRPC REQUIRED libwww-client)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# First find the config script from which to obtain other values.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check whether we found anything.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Lookup the include directories needed for the components requested.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Parse the include flags.\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Convert the compile flags to a CMake list.\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Look for -I options.\n\n# FIXME: Use these as hints to a find_path call to find the headers.\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Lookup the libraries needed for the components requested.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Parse the library names and directories.\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Look for -L flags for directories and -l flags for library names.\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Search for each library needed using the directories given.\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Look for this library.\n",
        "Line" : 102,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# If any library is not found then the whole package is not found.\n",
        "Line" : 109,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Build an ordered list of all the libraries needed.\n",
        "Line" : 114,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# Report the results.\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "deps/src/cmake-3.13.4/Modules/FindXalanC.cmake" : {
      "ObjectId" : "1951b49e1e3f3e042860eafca29fad432a3c33a6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindXalanC\n\n# -----------\n\n#\n\n# Find the Apache Xalan-C++ XSL transform processor headers and libraries.\n\n#\n\n# Imported targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``XalanC::XalanC``\n\n#   The Xalan-C++ ``xalan-c`` library, if found.\n\n#\n\n# Result variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``XalanC_FOUND``\n\n#   true if the Xalan headers and libraries were found\n\n# ``XalanC_VERSION``\n\n#   Xalan release version\n\n# ``XalanC_INCLUDE_DIRS``\n\n#   the directory containing the Xalan headers; note\n\n#   ``XercesC_INCLUDE_DIRS`` is also required\n\n# ``XalanC_LIBRARIES``\n\n#   Xalan libraries to be linked; note ``XercesC_LIBRARIES`` is also\n\n#   required\n\n#\n\n# Cache variables\n\n# ^^^^^^^^^^^^^^^\n\n#\n\n# The following cache variables may also be set:\n\n#\n\n# ``XalanC_INCLUDE_DIR``\n\n#   the directory containing the Xalan headers\n\n# ``XalanC_LIBRARY``\n\n#   the Xalan library\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Written by Roger Leigh <rleigh@codelibre.net>\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find include directory\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find all XalanC libraries\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# For header-only libraries\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/FindXercesC.cmake" : {
      "ObjectId" : "55db7aeb7f4131077d7e36e72108d057bbc75b95",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindXercesC\n\n# -----------\n\n#\n\n# Find the Apache Xerces-C++ validating XML parser headers and libraries.\n\n#\n\n# Imported targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``XercesC::XercesC``\n\n#   The Xerces-C++ ``xerces-c`` library, if found.\n\n#\n\n# Result variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``XercesC_FOUND``\n\n#   true if the Xerces headers and libraries were found\n\n# ``XercesC_VERSION``\n\n#   Xerces release version\n\n# ``XercesC_INCLUDE_DIRS``\n\n#   the directory containing the Xerces headers\n\n# ``XercesC_LIBRARIES``\n\n#   Xerces libraries to be linked\n\n#\n\n# Cache variables\n\n# ^^^^^^^^^^^^^^^\n\n#\n\n# The following cache variables may also be set:\n\n#\n\n# ``XercesC_INCLUDE_DIR``\n\n#   the directory containing the Xerces headers\n\n# ``XercesC_LIBRARY``\n\n#   the Xerces library\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Written by Roger Leigh <rleigh@codelibre.net>\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find include directory\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find all XercesC libraries\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# For header-only libraries\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/FindZLIB.cmake" : {
      "ObjectId" : "1a4635a7d616973a5a2dc0b6af3affc631bc687f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindZLIB\n\n# --------\n\n#\n\n# Find the native ZLIB includes and library.\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines :prop_tgt:`IMPORTED` target ``ZLIB::ZLIB``, if\n\n# ZLIB has been found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#   ZLIB_INCLUDE_DIRS   - where to find zlib.h, etc.\n\n#   ZLIB_LIBRARIES      - List of libraries when using zlib.\n\n#   ZLIB_FOUND          - True if zlib found.\n\n#\n\n# ::\n\n#\n\n#   ZLIB_VERSION_STRING - The version of zlib found (x.y.z)\n\n#   ZLIB_VERSION_MAJOR  - The major version of zlib\n\n#   ZLIB_VERSION_MINOR  - The minor version of zlib\n\n#   ZLIB_VERSION_PATCH  - The patch version of zlib\n\n#   ZLIB_VERSION_TWEAK  - The tweak version of zlib\n\n#\n\n# Backward Compatibility\n\n# ^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# The following variable are provided for backward compatibility\n\n#\n\n# ::\n\n#\n\n#   ZLIB_MAJOR_VERSION  - The major version of zlib\n\n#   ZLIB_MINOR_VERSION  - The minor version of zlib\n\n#   ZLIB_PATCH_VERSION  - The patch version of zlib\n\n#\n\n# Hints\n\n# ^^^^^\n\n#\n\n# A user may set ``ZLIB_ROOT`` to a zlib installation root to tell this\n\n# module where to look.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search ZLIB_ROOT first if it is set.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Normal search.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Try each search configuration.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Allow ZLIB_LIBRARY to be set manually, as the location of the zlib library\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# only append a TWEAK version if it exists:\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/Findosg.cmake" : {
      "ObjectId" : "474ea82b5c2283f43d3755ca7f06006f91b3c711",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# Findosg\n\n# -------\n\n#\n\n#\n\n#\n\n#\n\n#\n\n# NOTE: It is highly recommended that you use the new\n\n# FindOpenSceneGraph.cmake introduced in CMake 2.6.3 and not use this\n\n# Find module directly.\n\n#\n\n# This is part of the Findosg* suite used to find OpenSceneGraph\n\n# components.  Each component is separate and you must opt in to each\n\n# module.  You must also opt into OpenGL and OpenThreads (and Producer\n\n# if needed) as these modules won't do it for you.  This is to allow you\n\n# control over your own system piece by piece in case you need to opt\n\n# out of certain components or change the Find behavior for a particular\n\n# module (perhaps because the default FindOpenGL.cmake module doesn't\n\n# work with your system as an example).  If you want to use a more\n\n# convenient module that includes everything, use the\n\n# FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n#\n\n# Locate osg This module defines\n\n#\n\n# OSG_FOUND - Was the Osg found? OSG_INCLUDE_DIR - Where to find the\n\n# headers OSG_LIBRARIES - The libraries to link against for the OSG (use\n\n# this)\n\n#\n\n# OSG_LIBRARY - The OSG library OSG_LIBRARY_DEBUG - The OSG debug\n\n# library\n\n#\n\n# $OSGDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$OSGDIR used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgUtil/SceneView>\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindosgAnimation.cmake" : {
      "ObjectId" : "5b26b64853dfda9d763fb7388f8d635e069243d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindosgAnimation\n\n# ----------------\n\n#\n\n#\n\n#\n\n# This is part of the Findosg* suite used to find OpenSceneGraph\n\n# components.  Each component is separate and you must opt in to each\n\n# module.  You must also opt into OpenGL and OpenThreads (and Producer\n\n# if needed) as these modules won't do it for you.  This is to allow you\n\n# control over your own system piece by piece in case you need to opt\n\n# out of certain components or change the Find behavior for a particular\n\n# module (perhaps because the default FindOpenGL.cmake module doesn't\n\n# work with your system as an example).  If you want to use a more\n\n# convenient module that includes everything, use the\n\n# FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n#\n\n# Locate osgAnimation This module defines\n\n#\n\n# OSGANIMATION_FOUND - Was osgAnimation found? OSGANIMATION_INCLUDE_DIR\n\n# - Where to find the headers OSGANIMATION_LIBRARIES - The libraries to\n\n# link against for the OSG (use this)\n\n#\n\n# OSGANIMATION_LIBRARY - The OSG library OSGANIMATION_LIBRARY_DEBUG -\n\n# The OSG debug library\n\n#\n\n# $OSGDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$OSGDIR used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgAnimation/Animation>\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindosgDB.cmake" : {
      "ObjectId" : "6ddf53ce01b1d1ca8bc54445329988e94c4d2d25",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindosgDB\n\n# ---------\n\n#\n\n#\n\n#\n\n# This is part of the Findosg* suite used to find OpenSceneGraph\n\n# components.  Each component is separate and you must opt in to each\n\n# module.  You must also opt into OpenGL and OpenThreads (and Producer\n\n# if needed) as these modules won't do it for you.  This is to allow you\n\n# control over your own system piece by piece in case you need to opt\n\n# out of certain components or change the Find behavior for a particular\n\n# module (perhaps because the default FindOpenGL.cmake module doesn't\n\n# work with your system as an example).  If you want to use a more\n\n# convenient module that includes everything, use the\n\n# FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n#\n\n# Locate osgDB This module defines\n\n#\n\n# OSGDB_FOUND - Was osgDB found? OSGDB_INCLUDE_DIR - Where to find the\n\n# headers OSGDB_LIBRARIES - The libraries to link against for the osgDB\n\n# (use this)\n\n#\n\n# OSGDB_LIBRARY - The osgDB library OSGDB_LIBRARY_DEBUG - The osgDB\n\n# debug library\n\n#\n\n# $OSGDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$OSGDIR used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgDB/DatabasePager>\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindosgFX.cmake" : {
      "ObjectId" : "e4bc276d75428c226e45c5d9cef39543e4847559",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindosgFX\n\n# ---------\n\n#\n\n#\n\n#\n\n# This is part of the Findosg* suite used to find OpenSceneGraph\n\n# components.  Each component is separate and you must opt in to each\n\n# module.  You must also opt into OpenGL and OpenThreads (and Producer\n\n# if needed) as these modules won't do it for you.  This is to allow you\n\n# control over your own system piece by piece in case you need to opt\n\n# out of certain components or change the Find behavior for a particular\n\n# module (perhaps because the default FindOpenGL.cmake module doesn't\n\n# work with your system as an example).  If you want to use a more\n\n# convenient module that includes everything, use the\n\n# FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n#\n\n# Locate osgFX This module defines\n\n#\n\n# OSGFX_FOUND - Was osgFX found? OSGFX_INCLUDE_DIR - Where to find the\n\n# headers OSGFX_LIBRARIES - The libraries to link against for the osgFX\n\n# (use this)\n\n#\n\n# OSGFX_LIBRARY - The osgFX library OSGFX_LIBRARY_DEBUG - The osgFX\n\n# debug library\n\n#\n\n# $OSGDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$OSGDIR used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgFX/BumpMapping>\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindosgGA.cmake" : {
      "ObjectId" : "97adeb7af18ac70cbb18272a2b35da8529fd76eb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindosgGA\n\n# ---------\n\n#\n\n#\n\n#\n\n# This is part of the Findosg* suite used to find OpenSceneGraph\n\n# components.  Each component is separate and you must opt in to each\n\n# module.  You must also opt into OpenGL and OpenThreads (and Producer\n\n# if needed) as these modules won't do it for you.  This is to allow you\n\n# control over your own system piece by piece in case you need to opt\n\n# out of certain components or change the Find behavior for a particular\n\n# module (perhaps because the default FindOpenGL.cmake module doesn't\n\n# work with your system as an example).  If you want to use a more\n\n# convenient module that includes everything, use the\n\n# FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n#\n\n# Locate osgGA This module defines\n\n#\n\n# OSGGA_FOUND - Was osgGA found? OSGGA_INCLUDE_DIR - Where to find the\n\n# headers OSGGA_LIBRARIES - The libraries to link against for the osgGA\n\n# (use this)\n\n#\n\n# OSGGA_LIBRARY - The osgGA library OSGGA_LIBRARY_DEBUG - The osgGA\n\n# debug library\n\n#\n\n# $OSGDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$OSGDIR used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgGA/FlightManipulator>\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindosgIntrospection.cmake" : {
      "ObjectId" : "e735942c3626d8d30d2f9af78056c8d88c0aca26",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindosgIntrospection\n\n# --------------------\n\n#\n\n#\n\n#\n\n# This is part of the Findosg* suite used to find OpenSceneGraph\n\n# components.  Each component is separate and you must opt in to each\n\n# module.  You must also opt into OpenGL and OpenThreads (and Producer\n\n# if needed) as these modules won't do it for you.  This is to allow you\n\n# control over your own system piece by piece in case you need to opt\n\n# out of certain components or change the Find behavior for a particular\n\n# module (perhaps because the default FindOpenGL.cmake module doesn't\n\n# work with your system as an example).  If you want to use a more\n\n# convenient module that includes everything, use the\n\n# FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n#\n\n# Locate osgINTROSPECTION This module defines\n\n#\n\n# OSGINTROSPECTION_FOUND - Was osgIntrospection found?\n\n# OSGINTROSPECTION_INCLUDE_DIR - Where to find the headers\n\n# OSGINTROSPECTION_LIBRARIES - The libraries to link for\n\n# osgIntrospection (use this)\n\n#\n\n# OSGINTROSPECTION_LIBRARY - The osgIntrospection library\n\n# OSGINTROSPECTION_LIBRARY_DEBUG - The osgIntrospection debug library\n\n#\n\n# $OSGDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$OSGDIR used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgIntrospection/Reflection>\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindosgManipulator.cmake" : {
      "ObjectId" : "b88f1a4142e22ce6a261f0733df90e32bd33e13f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindosgManipulator\n\n# ------------------\n\n#\n\n#\n\n#\n\n# This is part of the Findosg* suite used to find OpenSceneGraph\n\n# components.  Each component is separate and you must opt in to each\n\n# module.  You must also opt into OpenGL and OpenThreads (and Producer\n\n# if needed) as these modules won't do it for you.  This is to allow you\n\n# control over your own system piece by piece in case you need to opt\n\n# out of certain components or change the Find behavior for a particular\n\n# module (perhaps because the default FindOpenGL.cmake module doesn't\n\n# work with your system as an example).  If you want to use a more\n\n# convenient module that includes everything, use the\n\n# FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n#\n\n# Locate osgManipulator This module defines\n\n#\n\n# OSGMANIPULATOR_FOUND - Was osgManipulator found?\n\n# OSGMANIPULATOR_INCLUDE_DIR - Where to find the headers\n\n# OSGMANIPULATOR_LIBRARIES - The libraries to link for osgManipulator\n\n# (use this)\n\n#\n\n# OSGMANIPULATOR_LIBRARY - The osgManipulator library\n\n# OSGMANIPULATOR_LIBRARY_DEBUG - The osgManipulator debug library\n\n#\n\n# $OSGDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$OSGDIR used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgManipulator/TrackballDragger>\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindosgParticle.cmake" : {
      "ObjectId" : "059746a61948cff2df9a41e0434a80a67a9167d5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindosgParticle\n\n# ---------------\n\n#\n\n#\n\n#\n\n# This is part of the Findosg* suite used to find OpenSceneGraph\n\n# components.  Each component is separate and you must opt in to each\n\n# module.  You must also opt into OpenGL and OpenThreads (and Producer\n\n# if needed) as these modules won't do it for you.  This is to allow you\n\n# control over your own system piece by piece in case you need to opt\n\n# out of certain components or change the Find behavior for a particular\n\n# module (perhaps because the default FindOpenGL.cmake module doesn't\n\n# work with your system as an example).  If you want to use a more\n\n# convenient module that includes everything, use the\n\n# FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n#\n\n# Locate osgParticle This module defines\n\n#\n\n# OSGPARTICLE_FOUND - Was osgParticle found? OSGPARTICLE_INCLUDE_DIR -\n\n# Where to find the headers OSGPARTICLE_LIBRARIES - The libraries to\n\n# link for osgParticle (use this)\n\n#\n\n# OSGPARTICLE_LIBRARY - The osgParticle library\n\n# OSGPARTICLE_LIBRARY_DEBUG - The osgParticle debug library\n\n#\n\n# $OSGDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$OSGDIR used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgParticle/FireEffect>\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindosgPresentation.cmake" : {
      "ObjectId" : "84a410526a0c3f09e2be7e20ccc6ce7f0b943acb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindosgPresentation\n\n# -------------------\n\n#\n\n#\n\n#\n\n# This is part of the Findosg* suite used to find OpenSceneGraph\n\n# components.  Each component is separate and you must opt in to each\n\n# module.  You must also opt into OpenGL and OpenThreads (and Producer\n\n# if needed) as these modules won't do it for you.  This is to allow you\n\n# control over your own system piece by piece in case you need to opt\n\n# out of certain components or change the Find behavior for a particular\n\n# module (perhaps because the default FindOpenGL.cmake module doesn't\n\n# work with your system as an example).  If you want to use a more\n\n# convenient module that includes everything, use the\n\n# FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n#\n\n# Locate osgPresentation This module defines\n\n#\n\n# OSGPRESENTATION_FOUND - Was osgPresentation found?\n\n# OSGPRESENTATION_INCLUDE_DIR - Where to find the headers\n\n# OSGPRESENTATION_LIBRARIES - The libraries to link for osgPresentation\n\n# (use this)\n\n#\n\n# OSGPRESENTATION_LIBRARY - The osgPresentation library\n\n# OSGPRESENTATION_LIBRARY_DEBUG - The osgPresentation debug library\n\n#\n\n# $OSGDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$OSGDIR used in building osg.\n\n#\n\n# Created by Eric Wing.  Modified to work with osgPresentation by Robert\n\n# Osfield, January 2012.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgPresentation/SlideEventHandler>\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindosgProducer.cmake" : {
      "ObjectId" : "e5700bfc46646c4d29702a23344dcf8353460111",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindosgProducer\n\n# ---------------\n\n#\n\n#\n\n#\n\n# This is part of the Findosg* suite used to find OpenSceneGraph\n\n# components.  Each component is separate and you must opt in to each\n\n# module.  You must also opt into OpenGL and OpenThreads (and Producer\n\n# if needed) as these modules won't do it for you.  This is to allow you\n\n# control over your own system piece by piece in case you need to opt\n\n# out of certain components or change the Find behavior for a particular\n\n# module (perhaps because the default FindOpenGL.cmake module doesn't\n\n# work with your system as an example).  If you want to use a more\n\n# convenient module that includes everything, use the\n\n# FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n#\n\n# Locate osgProducer This module defines\n\n#\n\n# OSGPRODUCER_FOUND - Was osgProducer found? OSGPRODUCER_INCLUDE_DIR -\n\n# Where to find the headers OSGPRODUCER_LIBRARIES - The libraries to\n\n# link for osgProducer (use this)\n\n#\n\n# OSGPRODUCER_LIBRARY - The osgProducer library\n\n# OSGPRODUCER_LIBRARY_DEBUG - The osgProducer debug library\n\n#\n\n# $OSGDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$OSGDIR used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgProducer/OsgSceneHandler>\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindosgQt.cmake" : {
      "ObjectId" : "04a2393e582bc3526b99524fe4efc4ae39755932",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindosgQt\n\n# ---------\n\n#\n\n#\n\n#\n\n# This is part of the Findosg* suite used to find OpenSceneGraph\n\n# components.  Each component is separate and you must opt in to each\n\n# module.  You must also opt into OpenGL and OpenThreads (and Producer\n\n# if needed) as these modules won't do it for you.  This is to allow you\n\n# control over your own system piece by piece in case you need to opt\n\n# out of certain components or change the Find behavior for a particular\n\n# module (perhaps because the default FindOpenGL.cmake module doesn't\n\n# work with your system as an example).  If you want to use a more\n\n# convenient module that includes everything, use the\n\n# FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n#\n\n# Locate osgQt This module defines\n\n#\n\n# OSGQT_FOUND - Was osgQt found? OSGQT_INCLUDE_DIR - Where to find the\n\n# headers OSGQT_LIBRARIES - The libraries to link for osgQt (use this)\n\n#\n\n# OSGQT_LIBRARY - The osgQt library OSGQT_LIBRARY_DEBUG - The osgQt\n\n# debug library\n\n#\n\n# $OSGDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$OSGDIR used in building osg.\n\n#\n\n# Created by Eric Wing.  Modified to work with osgQt by Robert Osfield,\n\n# January 2012.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgQt/GraphicsWindowQt>\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindosgShadow.cmake" : {
      "ObjectId" : "0a7ba23790c9eadc3d9cb460058bd2d83a89836a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindosgShadow\n\n# -------------\n\n#\n\n#\n\n#\n\n# This is part of the Findosg* suite used to find OpenSceneGraph\n\n# components.  Each component is separate and you must opt in to each\n\n# module.  You must also opt into OpenGL and OpenThreads (and Producer\n\n# if needed) as these modules won't do it for you.  This is to allow you\n\n# control over your own system piece by piece in case you need to opt\n\n# out of certain components or change the Find behavior for a particular\n\n# module (perhaps because the default FindOpenGL.cmake module doesn't\n\n# work with your system as an example).  If you want to use a more\n\n# convenient module that includes everything, use the\n\n# FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n#\n\n# Locate osgShadow This module defines\n\n#\n\n# OSGSHADOW_FOUND - Was osgShadow found? OSGSHADOW_INCLUDE_DIR - Where\n\n# to find the headers OSGSHADOW_LIBRARIES - The libraries to link for\n\n# osgShadow (use this)\n\n#\n\n# OSGSHADOW_LIBRARY - The osgShadow library OSGSHADOW_LIBRARY_DEBUG -\n\n# The osgShadow debug library\n\n#\n\n# $OSGDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$OSGDIR used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgShadow/ShadowTexture>\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindosgSim.cmake" : {
      "ObjectId" : "15426a273111df45abaf1cb1da6b5713df2b7230",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindosgSim\n\n# ----------\n\n#\n\n#\n\n#\n\n# This is part of the Findosg* suite used to find OpenSceneGraph\n\n# components.  Each component is separate and you must opt in to each\n\n# module.  You must also opt into OpenGL and OpenThreads (and Producer\n\n# if needed) as these modules won't do it for you.  This is to allow you\n\n# control over your own system piece by piece in case you need to opt\n\n# out of certain components or change the Find behavior for a particular\n\n# module (perhaps because the default FindOpenGL.cmake module doesn't\n\n# work with your system as an example).  If you want to use a more\n\n# convenient module that includes everything, use the\n\n# FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n#\n\n# Locate osgSim This module defines\n\n#\n\n# OSGSIM_FOUND - Was osgSim found? OSGSIM_INCLUDE_DIR - Where to find\n\n# the headers OSGSIM_LIBRARIES - The libraries to link for osgSim (use\n\n# this)\n\n#\n\n# OSGSIM_LIBRARY - The osgSim library OSGSIM_LIBRARY_DEBUG - The osgSim\n\n# debug library\n\n#\n\n# $OSGDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$OSGDIR used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgSim/ImpostorSprite>\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindosgTerrain.cmake" : {
      "ObjectId" : "04eae1450e76066f4ab72e484ce3414e9a4954b7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindosgTerrain\n\n# --------------\n\n#\n\n#\n\n#\n\n# This is part of the Findosg* suite used to find OpenSceneGraph\n\n# components.  Each component is separate and you must opt in to each\n\n# module.  You must also opt into OpenGL and OpenThreads (and Producer\n\n# if needed) as these modules won't do it for you.  This is to allow you\n\n# control over your own system piece by piece in case you need to opt\n\n# out of certain components or change the Find behavior for a particular\n\n# module (perhaps because the default FindOpenGL.cmake module doesn't\n\n# work with your system as an example).  If you want to use a more\n\n# convenient module that includes everything, use the\n\n# FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n#\n\n# Locate osgTerrain This module defines\n\n#\n\n# OSGTERRAIN_FOUND - Was osgTerrain found? OSGTERRAIN_INCLUDE_DIR -\n\n# Where to find the headers OSGTERRAIN_LIBRARIES - The libraries to link\n\n# for osgTerrain (use this)\n\n#\n\n# OSGTERRAIN_LIBRARY - The osgTerrain library OSGTERRAIN_LIBRARY_DEBUG -\n\n# The osgTerrain debug library\n\n#\n\n# $OSGDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$OSGDIR used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgTerrain/Terrain>\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindosgText.cmake" : {
      "ObjectId" : "1e2d9fdfd8511c5b7d2845c53f9c095430359d30",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindosgText\n\n# -----------\n\n#\n\n#\n\n#\n\n# This is part of the Findosg* suite used to find OpenSceneGraph\n\n# components.  Each component is separate and you must opt in to each\n\n# module.  You must also opt into OpenGL and OpenThreads (and Producer\n\n# if needed) as these modules won't do it for you.  This is to allow you\n\n# control over your own system piece by piece in case you need to opt\n\n# out of certain components or change the Find behavior for a particular\n\n# module (perhaps because the default FindOpenGL.cmake module doesn't\n\n# work with your system as an example).  If you want to use a more\n\n# convenient module that includes everything, use the\n\n# FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n#\n\n# Locate osgText This module defines\n\n#\n\n# OSGTEXT_FOUND - Was osgText found? OSGTEXT_INCLUDE_DIR - Where to find\n\n# the headers OSGTEXT_LIBRARIES - The libraries to link for osgText (use\n\n# this)\n\n#\n\n# OSGTEXT_LIBRARY - The osgText library OSGTEXT_LIBRARY_DEBUG - The\n\n# osgText debug library\n\n#\n\n# $OSGDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$OSGDIR used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgText/Text>\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindosgUtil.cmake" : {
      "ObjectId" : "13e0b803e2d8b4e2f4c4cd64519626f0ec142106",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindosgUtil\n\n# -----------\n\n#\n\n#\n\n#\n\n# This is part of the Findosg* suite used to find OpenSceneGraph\n\n# components.  Each component is separate and you must opt in to each\n\n# module.  You must also opt into OpenGL and OpenThreads (and Producer\n\n# if needed) as these modules won't do it for you.  This is to allow you\n\n# control over your own system piece by piece in case you need to opt\n\n# out of certain components or change the Find behavior for a particular\n\n# module (perhaps because the default FindOpenGL.cmake module doesn't\n\n# work with your system as an example).  If you want to use a more\n\n# convenient module that includes everything, use the\n\n# FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n#\n\n# Locate osgUtil This module defines\n\n#\n\n# OSGUTIL_FOUND - Was osgUtil found? OSGUTIL_INCLUDE_DIR - Where to find\n\n# the headers OSGUTIL_LIBRARIES - The libraries to link for osgUtil (use\n\n# this)\n\n#\n\n# OSGUTIL_LIBRARY - The osgUtil library OSGUTIL_LIBRARY_DEBUG - The\n\n# osgUtil debug library\n\n#\n\n# $OSGDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$OSGDIR used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgUtil/SceneView>\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindosgViewer.cmake" : {
      "ObjectId" : "a91c49c14f9781e5ee633520f886044650ff02ad",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindosgViewer\n\n# -------------\n\n#\n\n#\n\n#\n\n# This is part of the Findosg* suite used to find OpenSceneGraph\n\n# components.  Each component is separate and you must opt in to each\n\n# module.  You must also opt into OpenGL and OpenThreads (and Producer\n\n# if needed) as these modules won't do it for you.  This is to allow you\n\n# control over your own system piece by piece in case you need to opt\n\n# out of certain components or change the Find behavior for a particular\n\n# module (perhaps because the default FindOpenGL.cmake module doesn't\n\n# work with your system as an example).  If you want to use a more\n\n# convenient module that includes everything, use the\n\n# FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n#\n\n# Locate osgViewer This module defines\n\n#\n\n# OSGVIEWER_FOUND - Was osgViewer found? OSGVIEWER_INCLUDE_DIR - Where\n\n# to find the headers OSGVIEWER_LIBRARIES - The libraries to link for\n\n# osgViewer (use this)\n\n#\n\n# OSGVIEWER_LIBRARY - The osgViewer library OSGVIEWER_LIBRARY_DEBUG -\n\n# The osgViewer debug library\n\n#\n\n# $OSGDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$OSGDIR used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgViewer/Viewer>\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindosgVolume.cmake" : {
      "ObjectId" : "1178ed37d1fa3e9073b715539d4a5baaf6db3961",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindosgVolume\n\n# -------------\n\n#\n\n#\n\n#\n\n# This is part of the Findosg* suite used to find OpenSceneGraph\n\n# components.  Each component is separate and you must opt in to each\n\n# module.  You must also opt into OpenGL and OpenThreads (and Producer\n\n# if needed) as these modules won't do it for you.  This is to allow you\n\n# control over your own system piece by piece in case you need to opt\n\n# out of certain components or change the Find behavior for a particular\n\n# module (perhaps because the default FindOpenGL.cmake module doesn't\n\n# work with your system as an example).  If you want to use a more\n\n# convenient module that includes everything, use the\n\n# FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n#\n\n# Locate osgVolume This module defines\n\n#\n\n# OSGVOLUME_FOUND - Was osgVolume found? OSGVOLUME_INCLUDE_DIR - Where\n\n# to find the headers OSGVOLUME_LIBRARIES - The libraries to link for\n\n# osgVolume (use this)\n\n#\n\n# OSGVOLUME_LIBRARY - The osgVolume library OSGVOLUME_LIBRARY_DEBUG -\n\n# The osgVolume debug library\n\n#\n\n# $OSGDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$OSGDIR used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgVolume/Volume>\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/FindosgWidget.cmake" : {
      "ObjectId" : "78999ec3fde7664554223a195a5dd1eb3fc462c9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindosgWidget\n\n# -------------\n\n#\n\n#\n\n#\n\n# This is part of the Findosg* suite used to find OpenSceneGraph\n\n# components.  Each component is separate and you must opt in to each\n\n# module.  You must also opt into OpenGL and OpenThreads (and Producer\n\n# if needed) as these modules won't do it for you.  This is to allow you\n\n# control over your own system piece by piece in case you need to opt\n\n# out of certain components or change the Find behavior for a particular\n\n# module (perhaps because the default FindOpenGL.cmake module doesn't\n\n# work with your system as an example).  If you want to use a more\n\n# convenient module that includes everything, use the\n\n# FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n#\n\n# Locate osgWidget This module defines\n\n#\n\n# OSGWIDGET_FOUND - Was osgWidget found? OSGWIDGET_INCLUDE_DIR - Where\n\n# to find the headers OSGWIDGET_LIBRARIES - The libraries to link for\n\n# osgWidget (use this)\n\n#\n\n# OSGWIDGET_LIBRARY - The osgWidget library OSGWIDGET_LIBRARY_DEBUG -\n\n# The osgWidget debug library\n\n#\n\n# $OSGDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$OSGDIR used in building osg.\n\n#\n\n# FindosgWidget.cmake tweaked from Findosg* suite as created by Eric\n\n# Wing.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgWidget/Widget>\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Findosg_functions.cmake" : {
      "ObjectId" : "adaeb6b1d163a0595c2c9920d2b3839b55ebf070",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# Findosg_functions\n\n# -----------------\n\n#\n\n#\n\n#\n\n#\n\n#\n\n# This CMake file contains two macros to assist with searching for OSG\n\n# libraries and nodekits.  Please see FindOpenSceneGraph.cmake for full\n\n# documentation.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# OSG_FIND_PATH\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Try the user's environment request before anything else.\n",
        "Line" : 24,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "#\n\n# OSG_FIND_LIBRARY\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# the variables set by select_library_configurations go out of scope\n\n# here, so we need to set them again\n",
        "Line" : 70,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "#\n\n# OSG_MARK_AS_ADVANCED\n\n# Just a convenience function for calling MARK_AS_ADVANCED\n\n#\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/FindwxWidgets.cmake" : {
      "ObjectId" : "f2d6285438292cc58fd00ff158c2d7091f2bb30a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindwxWidgets\n\n# -------------\n\n#\n\n# Find a wxWidgets (a.k.a., wxWindows) installation.\n\n#\n\n# This module finds if wxWidgets is installed and selects a default\n\n# configuration to use.  wxWidgets is a modular library.  To specify the\n\n# modules that you will use, you need to name them as components to the\n\n# package:\n\n#\n\n# find_package(wxWidgets COMPONENTS core base ...)\n\n#\n\n# There are two search branches: a windows style and a unix style.  For\n\n# windows, the following variables are searched for and set to defaults\n\n# in case of multiple choices.  Change them if the defaults are not\n\n# desired (i.e., these are the only variables you should change to\n\n# select a configuration):\n\n#\n\n# ::\n\n#\n\n#   wxWidgets_ROOT_DIR      - Base wxWidgets directory\n\n#                             (e.g., C:/wxWidgets-2.6.3).\n\n#   wxWidgets_LIB_DIR       - Path to wxWidgets libraries\n\n#                             (e.g., C:/wxWidgets-2.6.3/lib/vc_lib).\n\n#   wxWidgets_CONFIGURATION - Configuration to use\n\n#                             (e.g., msw, mswd, mswu, mswunivud, etc.)\n\n#   wxWidgets_EXCLUDE_COMMON_LIBRARIES\n\n#                           - Set to TRUE to exclude linking of\n\n#                             commonly required libs (e.g., png tiff\n\n#                             jpeg zlib regex expat).\n\n#\n\n#\n\n#\n\n# For unix style it uses the wx-config utility.  You can select between\n\n# debug/release, unicode/ansi, universal/non-universal, and\n\n# static/shared in the QtDialog or ccmake interfaces by turning ON/OFF\n\n# the following variables:\n\n#\n\n# ::\n\n#\n\n#   wxWidgets_USE_DEBUG\n\n#   wxWidgets_USE_UNICODE\n\n#   wxWidgets_USE_UNIVERSAL\n\n#   wxWidgets_USE_STATIC\n\n#\n\n#\n\n#\n\n# There is also a wxWidgets_CONFIG_OPTIONS variable for all other\n\n# options that need to be passed to the wx-config utility.  For example,\n\n# to use the base toolkit found in the /usr/local path, set the variable\n\n# (before calling the FIND_PACKAGE command) as such:\n\n#\n\n# ::\n\n#\n\n#   set(wxWidgets_CONFIG_OPTIONS --toolkit=base --prefix=/usr)\n\n#\n\n#\n\n#\n\n# The following are set after the configuration is done for both windows\n\n# and unix style:\n\n#\n\n# ::\n\n#\n\n#   wxWidgets_FOUND            - Set to TRUE if wxWidgets was found.\n\n#   wxWidgets_INCLUDE_DIRS     - Include directories for WIN32\n\n#                                i.e., where to find \"wx/wx.h\" and\n\n#                                \"wx/setup.h\"; possibly empty for unices.\n\n#   wxWidgets_LIBRARIES        - Path to the wxWidgets libraries.\n\n#   wxWidgets_LIBRARY_DIRS     - compile time link dirs, useful for\n\n#                                rpath on UNIX. Typically an empty string\n\n#                                in WIN32 environment.\n\n#   wxWidgets_DEFINITIONS      - Contains defines required to compile/link\n\n#                                against WX, e.g. WXUSINGDLL\n\n#   wxWidgets_DEFINITIONS_DEBUG- Contains defines required to compile/link\n\n#                                against WX debug builds, e.g. __WXDEBUG__\n\n#   wxWidgets_CXX_FLAGS        - Include dirs and compiler flags for\n\n#                                unices, empty on WIN32. Essentially\n\n#                                \"`wx-config --cxxflags`\".\n\n#   wxWidgets_USE_FILE         - Convenience include file.\n\n#\n\n#\n\n#\n\n# Sample usage:\n\n#\n\n# ::\n\n#\n\n#    # Note that for MinGW users the order of libs is important!\n\n#    find_package(wxWidgets COMPONENTS net gl core base)\n\n#    if(wxWidgets_FOUND)\n\n#      include(${wxWidgets_USE_FILE})\n\n#      # and for each of your dependent executable/library targets:\n\n#      target_link_libraries(<YourTarget> ${wxWidgets_LIBRARIES})\n\n#    endif()\n\n#\n\n#\n\n#\n\n# If wxWidgets is required (i.e., not an optional part):\n\n#\n\n# ::\n\n#\n\n#    find_package(wxWidgets REQUIRED net gl core base)\n\n#    include(${wxWidgets_USE_FILE})\n\n#    # and for each of your dependent executable/library targets:\n\n#    target_link_libraries(<YourTarget> ${wxWidgets_LIBRARIES})\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# FIXME: check this and provide a correct sample usage...\n\n#        Remember to connect back to the upper text.\n\n# Sample usage with monolithic wx build:\n\n#\n\n#   find_package(wxWidgets COMPONENTS mono)\n\n#   ...\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# NOTES\n\n#\n\n# This module has been tested on the WIN32 platform with wxWidgets\n\n# 2.6.2, 2.6.3, and 2.5.3. However, it has been designed to\n\n# easily extend support to all possible builds, e.g., static/shared,\n\n# debug/release, unicode, universal, multilib/monolithic, etc..\n\n#\n\n# If you want to use the module and your build type is not supported\n\n# out-of-the-box, please contact me to exchange information on how\n\n# your system is setup and I'll try to add support for it.\n\n#\n\n# AUTHOR\n\n#\n\n# Miguel A. Figueroa-Villanueva (miguelf at ieee dot org).\n\n# Jan Woetzel (jw at mip.informatik.uni-kiel.de).\n\n#\n\n# Based on previous works of:\n\n# Jan Woetzel (FindwxWindows.cmake),\n\n# Jorgen Bodde and Jerry Fath (FindwxWin.cmake).\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO/ideas\n\n#\n\n# (1) Option/Setting to use all available wx libs\n\n# In contrast to expert developer who lists the\n\n# minimal set of required libs in wxWidgets_USE_LIBS\n\n# there is the newbie user:\n\n#   - who just wants to link against WX with more 'magic'\n\n#   - doesn't know the internal structure of WX or how it was built,\n\n#     in particular if it is monolithic or not\n\n#   - want to link against all available WX libs\n\n# Basically, the intent here is to mimic what wx-config would do by\n\n# default (i.e., `wx-config --libs`).\n\n#\n\n# Possible solution:\n\n#   Add a reserved keyword \"std\" that initializes to what wx-config\n\n# would default to. If the user has not set the wxWidgets_USE_LIBS,\n\n# default to \"std\" instead of \"base core\" as it is now. To implement\n\n# \"std\" will basically boil down to a FOR_EACH lib-FOUND, but maybe\n\n# checking whether a minimal set was found.\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# FIXME: This and all the DBG_MSG calls should be removed after the\n\n# module stabilizes.\n\n#\n\n# Helper macro to control the debugging output globally. There are\n\n# two versions for controlling how verbose your output should be.\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#  message(STATUS\n\n#    \"${CMAKE_CURRENT_LIST_FILE}(${CMAKE_CURRENT_LIST_LINE}): ${_MSG}\")\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#  message(STATUS\n\n#    \"${CMAKE_CURRENT_LIST_FILE}(${CMAKE_CURRENT_LIST_LINE}): ${_MSG}\")\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Clear return values in case the module is loaded more than once.\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# DEPRECATED: This is a patch to support the DEPRECATED use of\n\n# wxWidgets_USE_LIBS.\n\n#\n\n# If wxWidgets_USE_LIBS is set:\n\n# - if using <components>, then override wxWidgets_USE_LIBS\n\n# - else set wxWidgets_FIND_COMPONENTS to wxWidgets_USE_LIBS\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add the convenience use file if available.\n\n#\n\n# Get dir of this file which may reside in:\n\n# - CMAKE_MAKE_ROOT/Modules on CMake installation\n\n# - CMAKE_MODULE_PATH if user prefers his own specialized version\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Prefer an existing customized version, but the user might override\n\n# the FindwxWidgets module and not the UsewxWidgets one.\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#=====================================================================\n\n# Determine whether unix or win32 paths should be used\n\n#=====================================================================\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#=====================================================================\n\n# WIN32_FIND_STYLE\n\n#=====================================================================\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Useful common wx libs needed by almost all components.\n",
        "Line" : 221,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# DEPRECATED: Use find_package(wxWidgets COMPONENTS mono) instead.\n",
        "Line" : 224,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# this is default\n",
        "Line" : 229,
        "CharPositionInLine" : 47
      },
      "17" : {
        "Text" : "# Add the common (usually required libs) unless\n\n# wxWidgets_EXCLUDE_COMMON_LIBRARIES has been set.\n",
        "Line" : 233,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#-------------------------------------------------------------------\n\n# WIN32: Helper MACROS\n\n#-------------------------------------------------------------------\n\n#\n\n# Get filename components for a configuration. For example,\n\n#   if _CONFIGURATION = mswunivud, then _UNV=univ, _UCD=u _DBG=d\n\n#   if _CONFIGURATION = mswu,      then _UNV=\"\",   _UCD=u _DBG=\"\"\n\n#\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#\n\n# Find libraries associated to a configuration.\n\n#\n",
        "Line" : 257,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# FIXME: What if both regex libs are available. regex should be\n\n# found outside the loop and only wx${LIB}${_UCD}${_DBG}.\n\n# Find wxWidgets common libraries.\n",
        "Line" : 265,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# for regex\n",
        "Line" : 271,
        "CharPositionInLine" : 31
      },
      "22" : {
        "Text" : "# Find wxWidgets multilib base libraries.\n",
        "Line" : 279,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Find wxWidgets monolithic library.\n",
        "Line" : 309,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Find wxWidgets multilib libraries.\n",
        "Line" : 324,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "#\n\n# Clear all library paths, so that FIND_LIBRARY refinds them.\n\n#\n\n# Clear a lib, reset its found flag, and mark as advanced.\n",
        "Line" : 343,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Clear all debug or release library paths (arguments are \"d\" or \"\").\n",
        "Line" : 352,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Clear wxWidgets common libraries.\n",
        "Line" : 354,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Clear wxWidgets multilib base libraries.\n",
        "Line" : 359,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Clear wxWidgets monolithic library.\n",
        "Line" : 365,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Clear wxWidgets multilib libraries.\n",
        "Line" : 368,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Clear all wxWidgets debug libraries.\n",
        "Line" : 374,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Clear all wxWidgets release libraries.\n",
        "Line" : 378,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "#\n\n# Set the wxWidgets_LIBRARIES variable.\n\n# Also, Sets output variable wxWidgets_FOUND to FALSE if it fails.\n\n#\n",
        "Line" : 383,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "#-------------------------------------------------------------------\n\n# WIN32: Start actual work.\n\n#-------------------------------------------------------------------\n",
        "Line" : 429,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Look for an installation tree.\n",
        "Line" : 433,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# WX 2.6.x\n",
        "Line" : 439,
        "CharPositionInLine" : 123
      },
      "37" : {
        "Text" : "# If wxWidgets_ROOT_DIR changed, clear lib dir.\n",
        "Line" : 482,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Select one default tree inside the already determined wx tree.\n\n# Prefer static/shared order usually consistent with build\n\n# settings.\n",
        "Line" : 491,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# prefer shared\n",
        "Line" : 518,
        "CharPositionInLine" : 73
      },
      "40" : {
        "Text" : "# prefer shared\n\n# prefer shared\n",
        "Line" : 519,
        "CharPositionInLine" : 70
      },
      "41" : {
        "Text" : "# prefer static\n",
        "Line" : 539,
        "CharPositionInLine" : 73
      },
      "42" : {
        "Text" : "# prefer static\n\n# prefer static\n",
        "Line" : 540,
        "CharPositionInLine" : 70
      },
      "43" : {
        "Text" : "# If wxWidgets_LIB_DIR changed, clear all libraries.\n",
        "Line" : 553,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# If building shared libs, define WXUSINGDLL to use dllimport.\n",
        "Line" : 561,
        "CharPositionInLine" : 6
      },
      "45" : {
        "Text" : "# Search for available configuration types.\n",
        "Line" : 567,
        "CharPositionInLine" : 6
      },
      "46" : {
        "Text" : "# If the selected configuration wasn't found force the default\n\n# one. Otherwise, use it but still force a refresh for\n\n# updating the doc string with the current list of available\n\n# configurations.\n",
        "Line" : 581,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "# If release config selected, and both release/debug exist.\n",
        "Line" : 593,
        "CharPositionInLine" : 8
      },
      "48" : {
        "Text" : "# If the option exists (already in cache), force it false.\n",
        "Line" : 599,
        "CharPositionInLine" : 10
      },
      "49" : {
        "Text" : "# Get configuration parameters from the name.\n",
        "Line" : 607,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "# Set wxWidgets lib setup include directory.\n",
        "Line" : 610,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "# Set wxWidgets main include directory.\n",
        "Line" : 619,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# Find wxWidgets libraries.\n",
        "Line" : 627,
        "CharPositionInLine" : 8
      },
      "53" : {
        "Text" : "# Settings for requested libs (i.e., include dir, libraries, etc.).\n",
        "Line" : 633,
        "CharPositionInLine" : 8
      },
      "54" : {
        "Text" : "# Add necessary definitions for unicode builds\n",
        "Line" : 636,
        "CharPositionInLine" : 8
      },
      "55" : {
        "Text" : "# Add necessary definitions for debug builds\n",
        "Line" : 641,
        "CharPositionInLine" : 8
      },
      "56" : {
        "Text" : "#=====================================================================\n\n# UNIX_FIND_STYLE\n\n#=====================================================================\n",
        "Line" : 648,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#-----------------------------------------------------------------\n\n# UNIX: Helper MACROS\n\n#-----------------------------------------------------------------\n\n#\n\n# Set the default values based on \"wx-config --selected-config\".\n\n#\n",
        "Line" : 653,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "#\n\n# Query a boolean configuration option to determine if the system\n\n# has both builds available. If so, provide the selection option\n\n# to the user.\n\n#\n",
        "Line" : 683,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# If option exists (already in cache), force to available one.\n",
        "Line" : 708,
        "CharPositionInLine" : 8
      },
      "60" : {
        "Text" : "#\n\n# Set wxWidgets_SELECT_OPTIONS to wx-config options for selecting\n\n# among multiple builds.\n\n#\n",
        "Line" : 719,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "#-----------------------------------------------------------------\n\n# UNIX: Start actual work.\n\n#-----------------------------------------------------------------\n\n# Support cross-compiling, only search in the target platform.\n",
        "Line" : 737,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# get defaults based on \"wx-config --selected-config\"\n",
        "Line" : 750,
        "CharPositionInLine" : 6
      },
      "63" : {
        "Text" : "# for each option: if both builds are available, provide option\n",
        "Line" : 753,
        "CharPositionInLine" : 6
      },
      "64" : {
        "Text" : "# process selection to set wxWidgets_SELECT_OPTIONS\n",
        "Line" : 759,
        "CharPositionInLine" : 6
      },
      "65" : {
        "Text" : "# run the wx-config program to get cxxflags\n",
        "Line" : 763,
        "CharPositionInLine" : 6
      },
      "66" : {
        "Text" : "# parse definitions and include dirs from cxxflags\n\n#   drop the -D and -I prefixes\n",
        "Line" : 777,
        "CharPositionInLine" : 8
      },
      "67" : {
        "Text" : "# include directory\n",
        "Line" : 782,
        "CharPositionInLine" : 12
      },
      "68" : {
        "Text" : "# compile definition\n",
        "Line" : 785,
        "CharPositionInLine" : 12
      },
      "69" : {
        "Text" : "# run the wx-config program to get the libs\n\n# - NOTE: wx-config doesn't verify that the libs requested exist\n\n#         it just produces the names. Maybe a TRY_COMPILE would\n\n#         be useful here...\n",
        "Line" : 802,
        "CharPositionInLine" : 6
      },
      "70" : {
        "Text" : "# extract linkdirs (-L) for rpath (i.e., LINK_DIRECTORIES)\n",
        "Line" : 825,
        "CharPositionInLine" : 8
      },
      "71" : {
        "Text" : "# When using wx-config in MSYS, the include paths are UNIX style paths which may or may\n\n# not work correctly depending on you MSYS/MinGW configuration.  CMake expects native\n\n# paths internally.\n",
        "Line" : 840,
        "CharPositionInLine" : 4
      },
      "72" : {
        "Text" : "#=====================================================================\n\n# Neither UNIX_FIND_STYLE, nor WIN32_FIND_STYLE\n\n#=====================================================================\n",
        "Line" : 890,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Check that all libraries are present, as wx-config does not check it\n",
        "Line" : 904,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Check if a specific version was requested by find_package().\n",
        "Line" : 926,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Debug output:\n",
        "Line" : 950,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "#=====================================================================\n\n#=====================================================================\n",
        "Line" : 958,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "#=====================================================================\n\n# Macros for use in wxWidgets apps.\n\n# - This module will not fail to find wxWidgets based on the code\n\n#   below. Hence, it's required to check for validity of:\n\n#\n\n# wxWidgets_wxrc_EXECUTABLE\n\n#=====================================================================\n",
        "Line" : 968,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Resource file compiler.\n",
        "Line" : 976,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "#\n\n# WX_SPLIT_ARGUMENTS_ON(<keyword> <left> <right> <arg1> <arg2> ...)\n\n#\n\n# Sets <left> and <right> to contain arguments to the left and right,\n\n# respectively, of <keyword>.\n\n#\n\n# Example usage:\n\n#  function(WXWIDGETS_ADD_RESOURCES outfiles)\n\n#    WX_SPLIT_ARGUMENTS_ON(OPTIONS wxrc_files wxrc_options ${ARGN})\n\n#    ...\n\n#  endfunction()\n\n#\n\n#  WXWIDGETS_ADD_RESOURCES(sources ${xrc_files} OPTIONS -e -o file.C)\n\n#\n\n# NOTE: This is a generic piece of code that should be renamed to\n\n# SPLIT_ARGUMENTS_ON and put in a file serving the same purpose as\n\n# FindPackageStandardArgs.cmake. At the time of this writing\n\n# FindQt4.cmake has a QT4_EXTRACT_OPTIONS, which I basically copied\n\n# here a bit more generalized. So, there are already two find modules\n\n# using this approach.\n\n#\n",
        "Line" : 983,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# FIXME: Document that the input variables will be cleared.\n\n#list(APPEND ${_leftvar}  \"\")\n\n#list(APPEND ${_rightvar} \"\")\n",
        "Line" : 1005,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "#\n\n# WX_GET_DEPENDENCIES_FROM_XML(\n\n#   <depends>\n\n#   <match_pattern>\n\n#   <clean_pattern>\n\n#   <xml_contents>\n\n#   <depends_path>\n\n#   )\n\n#\n\n# FIXME: Add documentation here...\n\n#\n",
        "Line" : 1028,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# make the file have an absolute path\n",
        "Line" : 1055,
        "CharPositionInLine" : 4
      },
      "83" : {
        "Text" : "# append file to dependency list\n",
        "Line" : 1060,
        "CharPositionInLine" : 4
      },
      "84" : {
        "Text" : "#\n\n# WXWIDGETS_ADD_RESOURCES(<sources> <xrc_files>\n\n#                         OPTIONS <options> [NO_CPP_CODE])\n\n#\n\n# Adds a custom command for resource file compilation of the\n\n# <xrc_files> and appends the output files to <sources>.\n\n#\n\n# Example usages:\n\n#   WXWIDGETS_ADD_RESOURCES(sources xrc/main_frame.xrc)\n\n#   WXWIDGETS_ADD_RESOURCES(sources ${xrc_files} OPTIONS -e -o altname.cxx)\n\n#\n",
        "Line" : 1067,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Parse files for dependencies.\n",
        "Line" : 1081,
        "CharPositionInLine" : 2
      },
      "86" : {
        "Text" : "# All files have absolute paths or paths relative to the location\n\n# of the rc file.\n",
        "Line" : 1090,
        "CharPositionInLine" : 4
      },
      "87" : {
        "Text" : "# get bitmap/bitmap2 files\n",
        "Line" : 1094,
        "CharPositionInLine" : 4
      },
      "88" : {
        "Text" : "# get url files\n",
        "Line" : 1103,
        "CharPositionInLine" : 4
      },
      "89" : {
        "Text" : "# get wxIcon files\n",
        "Line" : 1112,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "#\n\n# Parse options.\n\n#\n\n# If NO_CPP_CODE option specified, then produce .xrs file rather\n\n# than a .cpp file (i.e., don't add the default --cpp-code option).\n",
        "Line" : 1122,
        "CharPositionInLine" : 2
      },
      "91" : {
        "Text" : "# wxrc's default output filename for cpp code.\n",
        "Line" : 1130,
        "CharPositionInLine" : 4
      },
      "92" : {
        "Text" : "# wxrc's default output filename for xrs file.\n",
        "Line" : 1134,
        "CharPositionInLine" : 4
      },
      "93" : {
        "Text" : "# Get output name for use in ADD_CUSTOM_COMMAND.\n\n# - short option scanning\n",
        "Line" : 1138,
        "CharPositionInLine" : 2
      },
      "94" : {
        "Text" : "#list(REMOVE_AT rc_options ${index} ${filename_index})\n",
        "Line" : 1144,
        "CharPositionInLine" : 4
      },
      "95" : {
        "Text" : "# - long option scanning\n",
        "Line" : 1146,
        "CharPositionInLine" : 2
      },
      "96" : {
        "Text" : "#string(REGEX REPLACE \"--output=[^;]*;?\" \"\" rc_options \"${rc_options}\")\n\n#string(REGEX REPLACE \";$\" \"\" rc_options \"${rc_options}\")\n",
        "Line" : 1151,
        "CharPositionInLine" : 2
      },
      "97" : {
        "Text" : "# Add generated header to output file list.\n",
        "Line" : 1163,
        "CharPositionInLine" : 2
      },
      "98" : {
        "Text" : "# Add generated file to output file list.\n",
        "Line" : 1175,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 99
    },
    "deps/src/cmake-3.13.4/Modules/FindwxWindows.cmake" : {
      "ObjectId" : "115cdc6fe1a932d58ccc9288a3042737107fe2c2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindwxWindows\n\n# -------------\n\n#\n\n# Find wxWindows (wxWidgets) installation\n\n#\n\n# This module finds if wxWindows/wxWidgets is installed and determines\n\n# where the include files and libraries are.  It also determines what\n\n# the name of the library is.  Please note this file is DEPRECATED and\n\n# replaced by FindwxWidgets.cmake.  This code sets the following\n\n# variables:\n\n#\n\n# ::\n\n#\n\n#   WXWINDOWS_FOUND     = system has WxWindows\n\n#   WXWINDOWS_LIBRARIES = path to the wxWindows libraries\n\n#                         on Unix/Linux with additional\n\n#                         linker flags from\n\n#                         \"wx-config --libs\"\n\n#   CMAKE_WXWINDOWS_CXX_FLAGS  = Compiler flags for wxWindows,\n\n#                                essentially \"`wx-config --cxxflags`\"\n\n#                                on Linux\n\n#   WXWINDOWS_INCLUDE_DIR      = where to find \"wx/wx.h\" and \"wx/setup.h\"\n\n#   WXWINDOWS_LINK_DIRECTORIES = link directories, useful for rpath on\n\n#                                 Unix\n\n#   WXWINDOWS_DEFINITIONS      = extra defines\n\n#\n\n#\n\n#\n\n# OPTIONS If you need OpenGL support please\n\n#\n\n# ::\n\n#\n\n#   set(WXWINDOWS_USE_GL 1)\n\n#\n\n# in your CMakeLists.txt *before* you include this file.\n\n#\n\n# ::\n\n#\n\n#   HAVE_ISYSTEM      - true required to replace -I by -isystem on g++\n\n#\n\n#\n\n#\n\n# For convenience include Use_wxWindows.cmake in your project's\n\n# CMakeLists.txt using\n\n# include(${CMAKE_CURRENT_LIST_DIR}/Use_wxWindows.cmake).\n\n#\n\n# USAGE\n\n#\n\n# ::\n\n#\n\n#   set(WXWINDOWS_USE_GL 1)\n\n#   find_package(wxWindows)\n\n#\n\n#\n\n#\n\n# NOTES wxWidgets 2.6.x is supported for monolithic builds e.g.\n\n# compiled in wx/build/msw dir as:\n\n#\n\n# ::\n\n#\n\n#   nmake -f makefile.vc BUILD=debug SHARED=0 USE_OPENGL=1 MONOLITHIC=1\n\n#\n\n#\n\n#\n\n# DEPRECATED\n\n#\n\n# ::\n\n#\n\n#   CMAKE_WX_CAN_COMPILE\n\n#   WXWINDOWS_LIBRARY\n\n#   CMAKE_WX_CXX_FLAGS\n\n#   WXWINDOWS_INCLUDE_PATH\n\n#\n\n#\n\n#\n\n# AUTHOR Jan Woetzel <http://www.mip.informatik.uni-kiel.de/~jw>\n\n# (07/2003-01/2006)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ------------------------------------------------------------------\n\n#\n\n# -removed OPTION for CMAKE_WXWINDOWS_USE_GL. Force the developer to SET it before calling this.\n\n# -major update for wx 2.6.2 and monolithic build option. (10/2005)\n\n#\n\n# STATUS\n\n# tested with:\n\n#  cmake 1.6.7, Linux (Suse 7.3), wxWindows 2.4.0, gcc 2.95\n\n#  cmake 1.6.7, Linux (Suse 8.2), wxWindows 2.4.0, gcc 3.3\n\n#  cmake 1.6.7, Linux (Suse 8.2), wxWindows 2.4.1-patch1,  gcc 3.3\n\n#  cmake 1.6.7, MS Windows XP home, wxWindows 2.4.1, MS Visual Studio .net 7 2002 (static build)\n\n#  cmake 2.0.5 on Windows XP and Suse Linux 9.2\n\n#  cmake 2.0.6 on Windows XP and Suse Linux 9.2, wxWidgets 2.6.2 MONOLITHIC build\n\n#  cmake 2.2.2 on Windows XP, MS Visual Studio .net 2003 7.1 wxWidgets 2.6.2 MONOLITHIC build\n\n#\n\n# TODO\n\n#  -OPTION for unicode builds\n\n#  -further testing of DLL linking under MS WIN32\n\n#  -better support for non-monolithic builds\n\n#\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## ######################################################################\n\n##\n\n## Windows specific:\n\n##\n\n## candidates for root/base directory of wxwindows\n\n## should have subdirs include and lib containing include/wx/wx.h\n\n## fix the root dir to avoid mixing of headers/libs from different\n\n## versions/builds:\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "## WX supports monolithic and multiple smaller libs (since 2.5.x), we prefer monolithic for now.\n\n## monolithic = WX is built as a single big library\n\n## e.g. compile on WIN32 as  \"nmake -f makefile.vc MONOLITHIC=1 BUILD=debug SHARED=0 USE_OPENGL=1\" (JW)\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "## GL libs used?\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "## avoid mixing of headers and libs between multiple installed WX versions,\n\n## select just one tree here:\n",
        "Line" : 139,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "## WX 2.6.x\n\n## WX 2.4.x\n",
        "Line" : 144,
        "CharPositionInLine" : 123
      },
      "8" : {
        "Text" : "# message(\"DBG found WXWINDOWS_ROOT_DIR: ${WXWINDOWS_ROOT_DIR}\")\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "## find libs for combination of static/shared with release/debug\n\n## be careful if you add something here,\n\n## avoid mixing of headers and libs of different wx versions,\n\n## there may be multiple WX versions installed.\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "## monolithic?\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "##\n\n## required for WXWINDOWS_USE_GL\n\n## gl lib is always build separate:\n\n##\n",
        "Line" : 197,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "## untested:\n",
        "Line" : 288,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "## WX is built as multiple small pieces libraries instead of monolithic\n",
        "Line" : 305,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "## DEPECATED (jw) replaced by more general WXWINDOWS_USE_MONOLITHIC ON/OFF\n\n# option(WXWINDOWS_SEPARATE_LIBS_BUILD \"Is wxWindows build with separate libs?\" OFF)\n",
        "Line" : 307,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "## HACK: This is very dirty.\n\n## because the libs of a particular version are explicitly listed\n\n## and NOT searched/verified.\n\n## TODO:  Really search for each lib, then decide for\n\n## monolithic x debug x shared x GL (=16 combinations) for at least 18 libs\n\n## -->  about 288 combinations\n\n## thus we need a different approach so solve this correctly ...\n",
        "Line" : 310,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "## HACK: feed in to optimized / debug libraries if both were FOUND.\n",
        "Line" : 343,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "##\n\n## now we should have found all WX libs available on the system.\n\n## let the user decide which of the available onse to use.\n\n##\n",
        "Line" : 370,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "## if there is at least one shared lib available\n\n## let user choose whether to use shared or static wxwindows libs\n",
        "Line" : 375,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "## default value OFF because wxWindows MSVS default build is static\n",
        "Line" : 378,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "## add system libraries wxwindows always seems to depend on\n",
        "Line" : 384,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "##  these ones don't seem required, in particular  ctl3d32 is not necessary (Jan Woetzel 07/2003)\n\n#   ctl3d32\n",
        "Line" : 393,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "## opengl/glu: TODO/FIXME: better use FindOpenGL.cmake here\n\n## assume release versions of glu an dopengl, here.\n",
        "Line" : 403,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "##\n\n## select between use of  shared or static wxWindows lib then set libs to use\n\n## for debug and optimized build.  so the user can switch between debug and\n\n## release build e.g. within MS Visual Studio without running cmake with a\n\n## different build directory again.\n\n##\n\n## then add the build specific include dir for wx/setup.h\n\n##\n",
        "Line" : 411,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "##message(\"DBG wxWindows use shared lib selected.\")\n\n## assume that both builds use the same setup(.h) for simplicity\n",
        "Line" : 421,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "## shared: both wx (debug and release) found?\n\n## assume that both builds use the same setup(.h) for simplicity\n",
        "Line" : 424,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "##message(\"DBG wx shared: debug and optimized found.\")\n",
        "Line" : 427,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "## shared: only debug wx lib found?\n",
        "Line" : 443,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "##message(\"DBG wx shared: debug (but no optimized) found.\")\n",
        "Line" : 446,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "## shared: only release wx lib found?\n",
        "Line" : 459,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "##message(\"DBG wx shared: optimized (but no debug) found.\")\n",
        "Line" : 462,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "## shared: none found?\n",
        "Line" : 475,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "#########################################################################################\n",
        "Line" : 483,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "##jw: DEPRECATED if(NOT WXWINDOWS_SEPARATE_LIBS_BUILD)\n",
        "Line" : 486,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "## static: both wx (debug and release) found?\n\n## assume that both builds use the same setup(.h) for simplicity\n",
        "Line" : 488,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "##message(\"DBG wx static: debug and optimized found.\")\n",
        "Line" : 491,
        "CharPositionInLine" : 6
      },
      "36" : {
        "Text" : "## static: only debug wx lib found?\n",
        "Line" : 507,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "##message(\"DBG wx static: debug (but no optimized) found.\")\n",
        "Line" : 510,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "## static: only release wx lib found?\n",
        "Line" : 523,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "##message(\"DBG wx static: optimized (but no debug) found.\")\n",
        "Line" : 526,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "## static: none found?\n",
        "Line" : 539,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "## not necessary in wxWindows 2.4.1 and 2.6.2\n\n## but it may fix a previous bug, see\n\n## http://lists.wxwindows.org/cgi-bin/ezmlm-cgi?8:mss:37574:200305:mpdioeneabobmgjenoap\n",
        "Line" : 549,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# clear:\n",
        "Line" : 557,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "## Find the include directories for wxwindows\n\n## the first, build specific for wx/setup.h was determined before.\n\n## add inc dir for general for \"wx/wx.h\"\n",
        "Line" : 563,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "## append the build specific include dir for wx/setup.h:\n",
        "Line" : 568,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "## ######################################################################\n\n##\n\n## UNIX/Linux specific:\n\n##\n\n## use backquoted wx-config to query and set flags and libs:\n\n## 06/2003 Jan Woetzel\n\n##\n",
        "Line" : 603,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# JW removed option and force the develper th SET it.\n\n# option(WXWINDOWS_USE_GL \"use wxWindows with GL support (use additional\n\n# --gl-libs for wx-config)?\" OFF)\n",
        "Line" : 614,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# wx-config should be in your path anyhow, usually no need to set WXWIN or\n\n# search in ../wx or ../../wx\n",
        "Line" : 618,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# check whether wx-config was found:\n",
        "Line" : 629,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# use shared/static wx lib?\n\n# remember: always link shared to use systems GL etc. libs (no static\n\n# linking, just link *against* static .a libs)\n",
        "Line" : 632,
        "CharPositionInLine" : 6
      },
      "50" : {
        "Text" : "# do we need additionial wx GL stuff like GLCanvas ?\n",
        "Line" : 641,
        "CharPositionInLine" : 6
      },
      "51" : {
        "Text" : "##message(\"DBG: WX_CONFIG_ARGS_LIBS=${WX_CONFIG_ARGS_LIBS}===\")\n",
        "Line" : 645,
        "CharPositionInLine" : 6
      },
      "52" : {
        "Text" : "# set CXXFLAGS to be fed into CMAKE_CXX_FLAGS by the user:\n",
        "Line" : 647,
        "CharPositionInLine" : 6
      },
      "53" : {
        "Text" : "# does the compiler support -isystem ?\n",
        "Line" : 648,
        "CharPositionInLine" : 24
      },
      "54" : {
        "Text" : "# -isystem seem sto be unsuppored on Mac\n",
        "Line" : 649,
        "CharPositionInLine" : 29
      },
      "55" : {
        "Text" : "##message(\"DBG: for compilation:\n\n##CMAKE_WXWINDOWS_CXX_FLAGS=${CMAKE_WXWINDOWS_CXX_FLAGS}===\")\n",
        "Line" : 659,
        "CharPositionInLine" : 6
      },
      "56" : {
        "Text" : "# keep the back-quoted string for clarity\n",
        "Line" : 662,
        "CharPositionInLine" : 6
      },
      "57" : {
        "Text" : "##message(\"DBG2: for linking:\n\n##WXWINDOWS_LIBRARIES=${WXWINDOWS_LIBRARIES}===\")\n",
        "Line" : 664,
        "CharPositionInLine" : 6
      },
      "58" : {
        "Text" : "# evaluate wx-config output to separate linker flags and linkdirs for\n\n# rpath:\n",
        "Line" : 667,
        "CharPositionInLine" : 6
      },
      "59" : {
        "Text" : "## extract linkdirs (-L) for rpath\n\n## use regular expression to match wildcard equivalent \"-L*<endchar>\"\n\n## with <endchar> is a space or a semicolon\n",
        "Line" : 673,
        "CharPositionInLine" : 6
      },
      "60" : {
        "Text" : "# message(\"DBG  WXWINDOWS_LINK_DIRECTORIES_WITH_PREFIX=${WXWINDOWS_LINK_DIRECTORIES_WITH_PREFIX}\")\n",
        "Line" : 677,
        "CharPositionInLine" : 6
      },
      "61" : {
        "Text" : "## remove prefix -L because we need the pure directory for LINK_DIRECTORIES\n\n## replace -L by ; because the separator seems to be lost otherwise (bug or\n\n## feature?)\n",
        "Line" : 679,
        "CharPositionInLine" : 6
      },
      "62" : {
        "Text" : "# message(\"DBG  WXWINDOWS_LINK_DIRECTORIES=${WXWINDOWS_LINK_DIRECTORIES}\")\n",
        "Line" : 684,
        "CharPositionInLine" : 8
      },
      "63" : {
        "Text" : "## replace space separated string by semicolon separated vector to make it\n\n## work with LINK_DIRECTORIES\n",
        "Line" : 688,
        "CharPositionInLine" : 6
      },
      "64" : {
        "Text" : "## we really need wx-config...\n",
        "Line" : 700,
        "CharPositionInLine" : 6
      },
      "65" : {
        "Text" : "## found all we need.\n",
        "Line" : 716,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "## set deprecated variables for backward compatibility:\n",
        "Line" : 719,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 67
    },
    "deps/src/cmake-3.13.4/Modules/FortranCInterface.cmake" : {
      "ObjectId" : "893a96fb5425896152f3630036f8377c5844eff3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFortranCInterface\n-----------------\n\nFortran/C Interface Detection\n\nThis module automatically detects the API by which C and Fortran\nlanguages interact.\n\nModule Variables\n^^^^^^^^^^^^^^^^\n\nVariables that indicate if the mangling is found:\n\n``FortranCInterface_GLOBAL_FOUND``\n  Global subroutines and functions.\n\n``FortranCInterface_MODULE_FOUND``\n  Module subroutines and functions (declared by \"MODULE PROCEDURE\").\n\nThis module also provides the following variables to specify\nthe detected mangling, though a typical use case does not need\nto reference them and can use the `Module Functions`_ below.\n\n``FortranCInterface_GLOBAL_PREFIX``\n  Prefix for a global symbol without an underscore.\n\n``FortranCInterface_GLOBAL_SUFFIX``\n  Suffix for a global symbol without an underscore.\n\n``FortranCInterface_GLOBAL_CASE``\n  The case for a global symbol without an underscore,\n  either ``UPPER`` or ``LOWER``.\n\n``FortranCInterface_GLOBAL__PREFIX``\n  Prefix for a global symbol with an underscore.\n\n``FortranCInterface_GLOBAL__SUFFIX``\n  Suffix for a global symbol with an underscore.\n\n``FortranCInterface_GLOBAL__CASE``\n  The case for a global symbol with an underscore,\n  either ``UPPER`` or ``LOWER``.\n\n``FortranCInterface_MODULE_PREFIX``\n  Prefix for a module symbol without an underscore.\n\n``FortranCInterface_MODULE_MIDDLE``\n  Middle of a module symbol without an underscore that appears\n  between the name of the module and the name of the symbol.\n\n``FortranCInterface_MODULE_SUFFIX``\n  Suffix for a module symbol without an underscore.\n\n``FortranCInterface_MODULE_CASE``\n  The case for a module symbol without an underscore,\n  either ``UPPER`` or ``LOWER``.\n\n``FortranCInterface_MODULE__PREFIX``\n  Prefix for a module symbol with an underscore.\n\n``FortranCInterface_MODULE__MIDDLE``\n  Middle of a module symbol with an underscore that appears\n  between the name of the module and the name of the symbol.\n\n``FortranCInterface_MODULE__SUFFIX``\n  Suffix for a module symbol with an underscore.\n\n``FortranCInterface_MODULE__CASE``\n  The case for a module symbol with an underscore,\n  either ``UPPER`` or ``LOWER``.\n\nModule Functions\n^^^^^^^^^^^^^^^^\n\n.. command:: FortranCInterface_HEADER\n\n  The ``FortranCInterface_HEADER`` function is provided to generate a\n  C header file containing macros to mangle symbol names::\n\n    FortranCInterface_HEADER(<file>\n                             [MACRO_NAMESPACE <macro-ns>]\n                             [SYMBOL_NAMESPACE <ns>]\n                             [SYMBOLS [<module>:]<function> ...])\n\n  It generates in ``<file>`` definitions of the following macros::\n\n     #define FortranCInterface_GLOBAL (name,NAME) ...\n     #define FortranCInterface_GLOBAL_(name,NAME) ...\n     #define FortranCInterface_MODULE (mod,name, MOD,NAME) ...\n     #define FortranCInterface_MODULE_(mod,name, MOD,NAME) ...\n\n  These macros mangle four categories of Fortran symbols, respectively:\n\n  * Global symbols without '_': ``call mysub()``\n  * Global symbols with '_'   : ``call my_sub()``\n  * Module symbols without '_': ``use mymod; call mysub()``\n  * Module symbols with '_'   : ``use mymod; call my_sub()``\n\n  If mangling for a category is not known, its macro is left undefined.\n  All macros require raw names in both lower case and upper case.\n\n  The options are:\n\n  ``MACRO_NAMESPACE``\n    Replace the default ``FortranCInterface_`` prefix with a given\n    namespace ``<macro-ns>``.\n\n  ``SYMBOLS``\n    List symbols to mangle automatically with C preprocessor definitions::\n\n      <function>          ==> #define <ns><function> ...\n      <module>:<function> ==> #define <ns><module>_<function> ...\n\n    If the mangling for some symbol is not known then no preprocessor\n    definition is created, and a warning is displayed.\n\n  ``SYMBOL_NAMESPACE``\n    Prefix all preprocessor definitions generated by the ``SYMBOLS``\n    option with a given namespace ``<ns>``.\n\n.. command:: FortranCInterface_VERIFY\n\n  The ``FortranCInterface_VERIFY`` function is provided to verify\n  that the Fortran and C/C++ compilers work together::\n\n    FortranCInterface_VERIFY([CXX] [QUIET])\n\n  It tests whether a simple test executable using Fortran and C (and C++\n  when the CXX option is given) compiles and links successfully.  The\n  result is stored in the cache entry ``FortranCInterface_VERIFIED_C``\n  (or ``FortranCInterface_VERIFIED_CXX`` if ``CXX`` is given) as a boolean.\n  If the check fails and ``QUIET`` is not given the function terminates with a\n  fatal error message describing the problem.  The purpose of this check\n  is to stop a build early for incompatible compiler combinations.  The\n  test is built in the ``Release`` configuration.\n\nExample Usage\n^^^^^^^^^^^^^\n\n.. code-block:: cmake\n\n   include(FortranCInterface)\n   FortranCInterface_HEADER(FC.h MACRO_NAMESPACE \"FC_\")\n\nThis creates a \"FC.h\" header that defines mangling macros ``FC_GLOBAL()``,\n``FC_GLOBAL_()``, ``FC_MODULE()``, and ``FC_MODULE_()``.\n\n.. code-block:: cmake\n\n   include(FortranCInterface)\n   FortranCInterface_HEADER(FCMangle.h\n                            MACRO_NAMESPACE \"FC_\"\n                            SYMBOL_NAMESPACE \"FC_\"\n                            SYMBOLS mysub mymod:my_sub)\n\nThis creates a \"FCMangle.h\" header that defines the same ``FC_*()``\nmangling macros as the previous example plus preprocessor symbols\n``FC_mysub`` and ``FC_mymod_my_sub``.\n\nAdditional Manglings\n^^^^^^^^^^^^^^^^^^^^\n\nFortranCInterface is aware of possible ``GLOBAL`` and ``MODULE`` manglings\nfor many Fortran compilers, but it also provides an interface to specify\nnew possible manglings.  Set the variables::\n\n   FortranCInterface_GLOBAL_SYMBOLS\n   FortranCInterface_MODULE_SYMBOLS\n\nbefore including FortranCInterface to specify manglings of the symbols\n``MySub``, ``My_Sub``, ``MyModule:MySub``, and ``My_Module:My_Sub``.\nFor example, the code:\n\n.. code-block:: cmake\n\n   set(FortranCInterface_GLOBAL_SYMBOLS mysub_ my_sub__ MYSUB_)\n     #                                  ^^^^^  ^^^^^^   ^^^^^\n   set(FortranCInterface_MODULE_SYMBOLS\n       __mymodule_MOD_mysub __my_module_MOD_my_sub)\n     #   ^^^^^^^^     ^^^^^   ^^^^^^^^^     ^^^^^^\n   include(FortranCInterface)\n\ntells FortranCInterface to try given ``GLOBAL`` and ``MODULE`` manglings.\n(The carets point at raw symbol names for clarity in this example but\nare not needed.)\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Execute at most once in a project.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Verify that C and Fortran are available.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MinGW's make tool does not always like () in the path\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create the interface detection project if it does not exist.\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Load the detection results.\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Parse arguments.\n",
        "Line" : 232,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Generate macro definitions.\n",
        "Line" : 255,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Generate symbol mangling definitions.\n",
        "Line" : 270,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Module symbol name.  Parse \"<module>:<function>\" syntax.\n",
        "Line" : 279,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Global symbol name.\n",
        "Line" : 298,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Store the content.\n",
        "Line" : 314,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Check arguments.\n",
        "Line" : 319,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Build the verification project if not yet built.\n",
        "Line" : 341,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Build a sample project which reports symbols.\n",
        "Line" : 346,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# project name\n\n# target name\n",
        "Line" : 351,
        "CharPositionInLine" : 21
      },
      "19" : {
        "Text" : "# Report results.\n",
        "Line" : 364,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Error if compilers are incompatible.\n",
        "Line" : 379,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Restore including context policies.\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "deps/src/cmake-3.13.4/Modules/FortranCInterface/CMakeLists.txt" : {
      "ObjectId" : "e3b81d7c32d98b6e7120b9a25df95c55a92c53fb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if the C compiler supports '$' in identifiers.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List manglings of global symbol names to try.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# VisualAge\n\n# GNU, Intel, HP, SunPro, MIPSpro, PGI\n\n# GNU g77\n\n# Intel on Windows\n\n# VisualAge\n\n# GNU, Intel, HP, SunPro, MIPSpro, PGI\n\n# Intel on Windows\n",
        "Line" : 17,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# List manglings of module symbol names to try.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# GNU 4.3\n\n# VisualAge\n\n# GNU 4.2\n\n# GNU 4.3\n\n# VisualAge\n\n# GNU 4.2\n\n# HP\n\n# Intel\n\n# Intel on Windows\n\n# PGI\n\n# NAG\n\n# HP\n\n# Intel\n\n# Intel on Windows\n\n# PGI\n\n# NAG\n",
        "Line" : 30,
        "CharPositionInLine" : 26
      },
      "6" : {
        "Text" : "# Note that some compiler manglings cannot be invoked from C:\n\n#   MIPSpro uses \"MY_SUB.in.MY_MODULE\"\n\n#   SunPro uses \"my_module.my_sub_\"\n\n#   PathScale uses \"MY_SUB.in.MY_MODULE\"\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add module symbols only with Fortran90.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Generate C symbol sources.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Provide mymodule_ and my_module_ init symbols because:\n\n#  - PGI Fortran uses module init symbols\n\n# but not for:\n\n#  - PathScale Fortran uses module init symbols but module symbols\n\n#    use '.in.' so we cannot provide them anyway.\n\n#  - Cray Fortran >= 7.3.2 uses module init symbols but module symbols\n\n#    use 'mysub$mymodule_' so we cannot provide them anyway.\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Skip symbols with '$' if C cannot handle them.\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Provide symbols through Fortran.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Provide symbols through C but fall back to Fortran.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# In case the Fortran compiler produces PIC by default make sure\n\n# the C compiler produces PIC even if it is not its default.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Require symbols through Fortran.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "deps/src/cmake-3.13.4/Modules/FortranCInterface/Detect.cmake" : {
      "ObjectId" : "7789785334b032202c8e715c3b36db190638856f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Detect the Fortran/C interface on the first run or when the\n\n# configuration changes.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Invalidate verification results.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build a sample project which reports symbols.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# project name\n\n# target name\n",
        "Line" : 34,
        "CharPositionInLine" : 20
      },
      "5" : {
        "Text" : "# Locate the sample project executable.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Load symbols from INFO:symbol[] strings in the executable.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Parse the symbol names.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Look for global symbols.\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Look for module symbols.\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Construct mangling macro definitions.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Summarize what is available.\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Record the detection results.\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Report the results.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "deps/src/cmake-3.13.4/Modules/FortranCInterface/Verify/CMakeLists.txt" : {
      "ObjectId" : "98cdeb75043b1b7535df264b39c00b4f1addc100",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The entry point (main) is defined in C; link with the C compiler.\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/GNUInstallDirs.cmake" : {
      "ObjectId" : "3dfcf8c959ed1b21111aecce3aecbe9573c7c1d3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# GNUInstallDirs\n\n# --------------\n\n#\n\n# Define GNU standard installation directories\n\n#\n\n# Provides install directory variables as defined by the\n\n# `GNU Coding Standards`_.\n\n#\n\n# .. _`GNU Coding Standards`: https://www.gnu.org/prep/standards/html_node/Directory-Variables.html\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# Inclusion of this module defines the following variables:\n\n#\n\n# ``CMAKE_INSTALL_<dir>``\n\n#\n\n#   Destination for files of a given type.  This value may be passed to\n\n#   the ``DESTINATION`` options of :command:`install` commands for the\n\n#   corresponding file type.\n\n#\n\n# ``CMAKE_INSTALL_FULL_<dir>``\n\n#\n\n#   The absolute path generated from the corresponding ``CMAKE_INSTALL_<dir>``\n\n#   value.  If the value is not already an absolute path, an absolute path\n\n#   is constructed typically by prepending the value of the\n\n#   :variable:`CMAKE_INSTALL_PREFIX` variable.  However, there are some\n\n#   `special cases`_ as documented below.\n\n#\n\n# where ``<dir>`` is one of:\n\n#\n\n# ``BINDIR``\n\n#   user executables (``bin``)\n\n# ``SBINDIR``\n\n#   system admin executables (``sbin``)\n\n# ``LIBEXECDIR``\n\n#   program executables (``libexec``)\n\n# ``SYSCONFDIR``\n\n#   read-only single-machine data (``etc``)\n\n# ``SHAREDSTATEDIR``\n\n#   modifiable architecture-independent data (``com``)\n\n# ``LOCALSTATEDIR``\n\n#   modifiable single-machine data (``var``)\n\n# ``RUNSTATEDIR``\n\n#   run-time variable data (``LOCALSTATEDIR/run``)\n\n# ``LIBDIR``\n\n#   object code libraries (``lib`` or ``lib64``\n\n#   or ``lib/<multiarch-tuple>`` on Debian)\n\n# ``INCLUDEDIR``\n\n#   C header files (``include``)\n\n# ``OLDINCLUDEDIR``\n\n#   C header files for non-gcc (``/usr/include``)\n\n# ``DATAROOTDIR``\n\n#   read-only architecture-independent data root (``share``)\n\n# ``DATADIR``\n\n#   read-only architecture-independent data (``DATAROOTDIR``)\n\n# ``INFODIR``\n\n#   info documentation (``DATAROOTDIR/info``)\n\n# ``LOCALEDIR``\n\n#   locale-dependent data (``DATAROOTDIR/locale``)\n\n# ``MANDIR``\n\n#   man documentation (``DATAROOTDIR/man``)\n\n# ``DOCDIR``\n\n#   documentation root (``DATAROOTDIR/doc/PROJECT_NAME``)\n\n#\n\n# If the includer does not define a value the above-shown default will be\n\n# used and the value will appear in the cache for editing by the user.\n\n#\n\n# Special Cases\n\n# ^^^^^^^^^^^^^\n\n#\n\n# The following values of :variable:`CMAKE_INSTALL_PREFIX` are special:\n\n#\n\n# ``/``\n\n#\n\n#   For ``<dir>`` other than the ``SYSCONFDIR``, ``LOCALSTATEDIR`` and\n\n#   ``RUNSTATEDIR``, the value of ``CMAKE_INSTALL_<dir>`` is prefixed\n\n#   with ``usr/`` if it is not user-specified as an absolute path.\n\n#   For example, the ``INCLUDEDIR`` value ``include`` becomes ``usr/include``.\n\n#   This is required by the `GNU Coding Standards`_, which state:\n\n#\n\n#     When building the complete GNU system, the prefix will be empty\n\n#     and ``/usr`` will be a symbolic link to ``/``.\n\n#\n\n# ``/usr``\n\n#\n\n#   For ``<dir>`` equal to ``SYSCONFDIR``, ``LOCALSTATEDIR`` or\n\n#   ``RUNSTATEDIR``, the ``CMAKE_INSTALL_FULL_<dir>`` is computed by\n\n#   prepending just ``/`` to the value of ``CMAKE_INSTALL_<dir>``\n\n#   if it is not user-specified as an absolute path.\n\n#   For example, the ``SYSCONFDIR`` value ``etc`` becomes ``/etc``.\n\n#   This is required by the `GNU Coding Standards`_.\n\n#\n\n# ``/opt/...``\n\n#\n\n#   For ``<dir>`` equal to ``SYSCONFDIR``, ``LOCALSTATEDIR`` or\n\n#   ``RUNSTATEDIR``, the ``CMAKE_INSTALL_FULL_<dir>`` is computed by\n\n#   *appending* the prefix to the value of ``CMAKE_INSTALL_<dir>``\n\n#   if it is not user-specified as an absolute path.\n\n#   For example, the ``SYSCONFDIR`` value ``etc`` becomes ``/etc/opt/...``.\n\n#   This is defined by the `Filesystem Hierarchy Standard`_.\n\n#\n\n# .. _`Filesystem Hierarchy Standard`: https://refspecs.linuxfoundation.org/FHS_3.0/fhs/index.html\n\n#\n\n# Macros\n\n# ^^^^^^\n\n#\n\n# .. command:: GNUInstallDirs_get_absolute_install_dir\n\n#\n\n#   ::\n\n#\n\n#     GNUInstallDirs_get_absolute_install_dir(absvar var)\n\n#\n\n#   Set the given variable ``absvar`` to the absolute path contained\n\n#   within the variable ``var``.  This is to allow the computation of an\n\n#   absolute path, accounting for all the special cases documented\n\n#   above.  While this macro is used to compute the various\n\n#   ``CMAKE_INSTALL_FULL_<dir>`` variables, it is exposed publicly to\n\n#   allow users who create additional path variables to also compute\n\n#   absolute paths where necessary, using the same logic.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if() quoted variables not dereferenced\n",
        "Line" : 127,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "# Convert a cache variable to PATH type\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Create a cache variable with default for a path.\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create a cache variable with not default for a path, with a fallback\n\n# when unset; used for entries slaved to other entries such as\n\n# DATAROOTDIR.\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Installation directories\n\n#\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We check if the variable was manually set and not cached, in order to\n\n# allow projects to set the values as normal variables before including\n\n# GNUInstallDirs to avoid having the entries cached or user-editable. It\n\n# replaces the \"if(NOT DEFINED CMAKE_INSTALL_XXX)\" checks in all the\n\n# other cases.\n\n# If CMAKE_INSTALL_LIBDIR is defined, if _libdir_set is false, then the\n\n# variable is a normal one, otherwise it is a cache one.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If CMAKE_INSTALL_LIBDIR is not defined, it is always executed.\n\n# Otherwise:\n\n#  * if _libdir_set is false it is not executed (meaning that it is\n\n#    not a cache variable)\n\n#  * if _GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX is not defined it is\n\n#    not executed\n\n#  * if _GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX and\n\n#    CMAKE_INSTALL_PREFIX are the same string it is not executed.\n\n#    _GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX is updated after the\n\n#    execution, of this part of code, therefore at the next inclusion\n\n#    of the file, CMAKE_INSTALL_LIBDIR is defined, and the 2 strings\n\n#    are equal, meaning that the if is not executed the code the\n\n#    second time.\n",
        "Line" : 189,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Override this default 'lib' with 'lib64' iff:\n\n#  - we are on Linux system but NOT cross-compiling\n\n#  - we are NOT on debian\n\n#  - we are on a 64 bits system\n\n# reason is: amd64 ABI: https://github.com/hjl-tools/x86-psABI/wiki/X86-psABI\n\n# For Debian with multiarch, use 'lib/${CMAKE_LIBRARY_ARCHITECTURE}' if\n\n# CMAKE_LIBRARY_ARCHITECTURE is set (which contains e.g. \"i386-linux-gnu\"\n\n# and CMAKE_INSTALL_PREFIX is \"/usr\"\n\n# See http://wiki.debian.org/Multiarch\n",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# __LAST_LIBDIR_DEFAULT is the default value that we compute from\n\n# _GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX, not a cache entry for\n\n# the value that was last used as the default.\n\n# This value is used to figure out whether the user changed the\n\n# CMAKE_INSTALL_LIBDIR value manually, or if the value was the\n\n# default one. When CMAKE_INSTALL_PREFIX changes, the value is\n\n# updated to the new default, unless the user explicitly changed it.\n",
        "Line" : 215,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# is this a debian system ?\n",
        "Line" : 225,
        "CharPositionInLine" : 38
      },
      "12" : {
        "Text" : "# not debian, rely on CMAKE_SIZEOF_VOID_P:\n",
        "Line" : 235,
        "CharPositionInLine" : 11
      },
      "13" : {
        "Text" : "# Save for next run\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Values whose defaults are relative to DATAROOTDIR.  Store empty values in\n\n# the cache and store the defaults in local variables if the cache values are\n\n# not set explicitly.  This auto-updates the defaults as DATAROOTDIR changes.\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Handle special cases:\n\n# - CMAKE_INSTALL_PREFIX == /\n\n# - CMAKE_INSTALL_PREFIX == /usr\n\n# - CMAKE_INSTALL_PREFIX == /opt/...\n",
        "Line" : 322,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Result directories\n\n#\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "deps/src/cmake-3.13.4/Modules/GenerateExportHeader.cmake" : {
      "ObjectId" : "e6dcd00f7adb4db1f508c8c2376ec0e4fa79e3c7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# GenerateExportHeader\n\n# --------------------\n\n#\n\n# Function for generation of export macros for libraries\n\n#\n\n# This module provides the function GENERATE_EXPORT_HEADER().\n\n#\n\n# The ``GENERATE_EXPORT_HEADER`` function can be used to generate a file\n\n# suitable for preprocessor inclusion which contains EXPORT macros to be\n\n# used in library classes::\n\n#\n\n#    GENERATE_EXPORT_HEADER( LIBRARY_TARGET\n\n#              [BASE_NAME <base_name>]\n\n#              [EXPORT_MACRO_NAME <export_macro_name>]\n\n#              [EXPORT_FILE_NAME <export_file_name>]\n\n#              [DEPRECATED_MACRO_NAME <deprecated_macro_name>]\n\n#              [NO_EXPORT_MACRO_NAME <no_export_macro_name>]\n\n#              [INCLUDE_GUARD_NAME <include_guard_name>]\n\n#              [STATIC_DEFINE <static_define>]\n\n#              [NO_DEPRECATED_MACRO_NAME <no_deprecated_macro_name>]\n\n#              [DEFINE_NO_DEPRECATED]\n\n#              [PREFIX_NAME <prefix_name>]\n\n#              [CUSTOM_CONTENT_FROM_VARIABLE <variable>]\n\n#    )\n\n#\n\n#\n\n# The target properties :prop_tgt:`CXX_VISIBILITY_PRESET <<LANG>_VISIBILITY_PRESET>`\n\n# and :prop_tgt:`VISIBILITY_INLINES_HIDDEN` can be used to add the appropriate\n\n# compile flags for targets.  See the documentation of those target properties,\n\n# and the convenience variables\n\n# :variable:`CMAKE_CXX_VISIBILITY_PRESET <CMAKE_<LANG>_VISIBILITY_PRESET>` and\n\n# :variable:`CMAKE_VISIBILITY_INLINES_HIDDEN`.\n\n#\n\n# By default ``GENERATE_EXPORT_HEADER()`` generates macro names in a file\n\n# name determined by the name of the library.  This means that in the\n\n# simplest case, users of ``GenerateExportHeader`` will be equivalent to:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n\n#    set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\n\n#    add_library(somelib someclass.cpp)\n\n#    generate_export_header(somelib)\n\n#    install(TARGETS somelib DESTINATION ${LIBRARY_INSTALL_DIR})\n\n#    install(FILES\n\n#     someclass.h\n\n#     ${PROJECT_BINARY_DIR}/somelib_export.h DESTINATION ${INCLUDE_INSTALL_DIR}\n\n#    )\n\n#\n\n#\n\n# And in the ABI header files:\n\n#\n\n# .. code-block:: c++\n\n#\n\n#    #include \"somelib_export.h\"\n\n#    class SOMELIB_EXPORT SomeClass {\n\n#      ...\n\n#    };\n\n#\n\n#\n\n# The CMake fragment will generate a file in the\n\n# ``${CMAKE_CURRENT_BINARY_DIR}`` called ``somelib_export.h`` containing the\n\n# macros ``SOMELIB_EXPORT``, ``SOMELIB_NO_EXPORT``, ``SOMELIB_DEPRECATED``,\n\n# ``SOMELIB_DEPRECATED_EXPORT`` and ``SOMELIB_DEPRECATED_NO_EXPORT``.\n\n# They will be followed by content taken from the variable specified by\n\n# the ``CUSTOM_CONTENT_FROM_VARIABLE`` option, if any.\n\n# The resulting file should be installed with other headers in the library.\n\n#\n\n# The ``BASE_NAME`` argument can be used to override the file name and the\n\n# names used for the macros:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    add_library(somelib someclass.cpp)\n\n#    generate_export_header(somelib\n\n#      BASE_NAME other_name\n\n#    )\n\n#\n\n#\n\n# Generates a file called ``other_name_export.h`` containing the macros\n\n# ``OTHER_NAME_EXPORT``, ``OTHER_NAME_NO_EXPORT`` and ``OTHER_NAME_DEPRECATED``\n\n# etc.\n\n#\n\n# The ``BASE_NAME`` may be overridden by specifying other options in the\n\n# function.  For example:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    add_library(somelib someclass.cpp)\n\n#    generate_export_header(somelib\n\n#      EXPORT_MACRO_NAME OTHER_NAME_EXPORT\n\n#    )\n\n#\n\n#\n\n# creates the macro ``OTHER_NAME_EXPORT`` instead of ``SOMELIB_EXPORT``, but\n\n# other macros and the generated file name is as default:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    add_library(somelib someclass.cpp)\n\n#    generate_export_header(somelib\n\n#      DEPRECATED_MACRO_NAME KDE_DEPRECATED\n\n#    )\n\n#\n\n#\n\n# creates the macro ``KDE_DEPRECATED`` instead of ``SOMELIB_DEPRECATED``.\n\n#\n\n# If ``LIBRARY_TARGET`` is a static library, macros are defined without\n\n# values.\n\n#\n\n# If the same sources are used to create both a shared and a static\n\n# library, the uppercased symbol ``${BASE_NAME}_STATIC_DEFINE`` should be\n\n# used when building the static library:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    add_library(shared_variant SHARED ${lib_SRCS})\n\n#    add_library(static_variant ${lib_SRCS})\n\n#    generate_export_header(shared_variant BASE_NAME libshared_and_static)\n\n#    set_target_properties(static_variant PROPERTIES\n\n#      COMPILE_FLAGS -DLIBSHARED_AND_STATIC_STATIC_DEFINE)\n\n#\n\n# This will cause the export macros to expand to nothing when building\n\n# the static library.\n\n#\n\n# If ``DEFINE_NO_DEPRECATED`` is specified, then a macro\n\n# ``${BASE_NAME}_NO_DEPRECATED`` will be defined This macro can be used to\n\n# remove deprecated code from preprocessor output:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    option(EXCLUDE_DEPRECATED \"Exclude deprecated parts of the library\" FALSE)\n\n#    if (EXCLUDE_DEPRECATED)\n\n#      set(NO_BUILD_DEPRECATED DEFINE_NO_DEPRECATED)\n\n#    endif()\n\n#    generate_export_header(somelib ${NO_BUILD_DEPRECATED})\n\n#\n\n#\n\n# And then in somelib:\n\n#\n\n# .. code-block:: c++\n\n#\n\n#    class SOMELIB_EXPORT SomeClass\n\n#    {\n\n#    public:\n\n#    #ifndef SOMELIB_NO_DEPRECATED\n\n#      SOMELIB_DEPRECATED void oldMethod();\n\n#    #endif\n\n#    };\n\n#\n\n# .. code-block:: c++\n\n#\n\n#    #ifndef SOMELIB_NO_DEPRECATED\n\n#    void SomeClass::oldMethod() {  }\n\n#    #endif\n\n#\n\n#\n\n# If ``PREFIX_NAME`` is specified, the argument will be used as a prefix to\n\n# all generated macros.\n\n#\n\n# For example:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    generate_export_header(somelib PREFIX_NAME VTK_)\n\n#\n\n# Generates the macros ``VTK_SOMELIB_EXPORT`` etc.\n\n#\n\n# ::\n\n#\n\n#    ADD_COMPILER_EXPORT_FLAGS( [<output_variable>] )\n\n#\n\n# The ``ADD_COMPILER_EXPORT_FLAGS`` function adds ``-fvisibility=hidden`` to\n\n# :variable:`CMAKE_CXX_FLAGS <CMAKE_<LANG>_FLAGS>` if supported, and is a no-op\n\n# on Windows which does not need extra compiler flags for exporting support.\n\n# You may optionally pass a single argument to ``ADD_COMPILER_EXPORT_FLAGS``\n\n# that will be populated with the ``CXX_FLAGS`` required to enable visibility\n\n# support for the compiler/architecture in use.\n\n#\n\n# This function is deprecated.  Set the target properties\n\n# :prop_tgt:`CXX_VISIBILITY_PRESET <<LANG>_VISIBILITY_PRESET>` and\n\n# :prop_tgt:`VISIBILITY_INLINES_HIDDEN` instead.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: Install this macro separately?\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: Install this macro separately?\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Exclude XL here because it misinterprets -fvisibility=hidden even though\n\n# the check_cxx_compiler_flag passes\n",
        "Line" : 215,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# NOTE:  Some Embarcadero compilers silently compile __declspec(deprecated)\n\n# without error, but this is not a documented feature and the attribute does\n\n# not actually generate any warnings.\n",
        "Line" : 237,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Option overrides\n",
        "Line" : 304,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Default options\n",
        "Line" : 323,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Just return if there are no flags to add.\n",
        "Line" : 424,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Either return the extra flags needed in the supplied argument, or to the\n\n# CMAKE_CXX_FLAGS if no argument is supplied.\n",
        "Line" : 434,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Modules/GetPrerequisites.cmake" : {
      "ObjectId" : "ca710090fbcac69d34f16561efdca697f0055f85",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# GetPrerequisites\n\n# ----------------\n\n#\n\n# Functions to analyze and list executable file prerequisites.\n\n#\n\n# This module provides functions to list the .dll, .dylib or .so files\n\n# that an executable or shared library file depends on.  (Its\n\n# prerequisites.)\n\n#\n\n# It uses various tools to obtain the list of required shared library\n\n# files:\n\n#\n\n# ::\n\n#\n\n#    dumpbin (Windows)\n\n#    objdump (MinGW on Windows)\n\n#    ldd (Linux/Unix)\n\n#    otool (Mac OSX)\n\n#\n\n# The following functions are provided by this module:\n\n#\n\n# ::\n\n#\n\n#    get_prerequisites\n\n#    list_prerequisites\n\n#    list_prerequisites_by_glob\n\n#    gp_append_unique\n\n#    is_file_executable\n\n#    gp_item_default_embedded_path\n\n#      (projects can override with gp_item_default_embedded_path_override)\n\n#    gp_resolve_item\n\n#      (projects can override with gp_resolve_item_override)\n\n#    gp_resolved_file_type\n\n#      (projects can override with gp_resolved_file_type_override)\n\n#    gp_file_type\n\n#\n\n# Requires CMake 2.6 or greater because it uses function, break, return\n\n# and PARENT_SCOPE.\n\n#\n\n# ::\n\n#\n\n#   GET_PREREQUISITES(<target> <prerequisites_var> <exclude_system> <recurse>\n\n#                     <exepath> <dirs> [<rpaths>])\n\n#\n\n# Get the list of shared library files required by <target>.  The list\n\n# in the variable named <prerequisites_var> should be empty on first\n\n# entry to this function.  On exit, <prerequisites_var> will contain the\n\n# list of required shared library files.\n\n#\n\n# <target> is the full path to an executable file.  <prerequisites_var>\n\n# is the name of a CMake variable to contain the results.\n\n# <exclude_system> must be 0 or 1 indicating whether to include or\n\n# exclude \"system\" prerequisites.  If <recurse> is set to 1 all\n\n# prerequisites will be found recursively, if set to 0 only direct\n\n# prerequisites are listed.  <exepath> is the path to the top level\n\n# executable used for @executable_path replacment on the Mac.  <dirs> is\n\n# a list of paths where libraries might be found: these paths are\n\n# searched first when a target without any path info is given.  Then\n\n# standard system locations are also searched: PATH, Framework\n\n# locations, /usr/lib...\n\n#\n\n# ::\n\n#\n\n#   LIST_PREREQUISITES(<target> [<recurse> [<exclude_system> [<verbose>]]])\n\n#\n\n# Print a message listing the prerequisites of <target>.\n\n#\n\n# <target> is the name of a shared library or executable target or the\n\n# full path to a shared library or executable file.  If <recurse> is set\n\n# to 1 all prerequisites will be found recursively, if set to 0 only\n\n# direct prerequisites are listed.  <exclude_system> must be 0 or 1\n\n# indicating whether to include or exclude \"system\" prerequisites.  With\n\n# <verbose> set to 0 only the full path names of the prerequisites are\n\n# printed, set to 1 extra informatin will be displayed.\n\n#\n\n# ::\n\n#\n\n#   LIST_PREREQUISITES_BY_GLOB(<glob_arg> <glob_exp>)\n\n#\n\n# Print the prerequisites of shared library and executable files\n\n# matching a globbing pattern.  <glob_arg> is GLOB or GLOB_RECURSE and\n\n# <glob_exp> is a globbing expression used with \"file(GLOB\" or\n\n# \"file(GLOB_RECURSE\" to retrieve a list of matching files.  If a\n\n# matching file is executable, its prerequisites are listed.\n\n#\n\n# Any additional (optional) arguments provided are passed along as the\n\n# optional arguments to the list_prerequisites calls.\n\n#\n\n# ::\n\n#\n\n#   GP_APPEND_UNIQUE(<list_var> <value>)\n\n#\n\n# Append <value> to the list variable <list_var> only if the value is\n\n# not already in the list.\n\n#\n\n# ::\n\n#\n\n#   IS_FILE_EXECUTABLE(<file> <result_var>)\n\n#\n\n# Return 1 in <result_var> if <file> is a binary executable, 0\n\n# otherwise.\n\n#\n\n# ::\n\n#\n\n#   GP_ITEM_DEFAULT_EMBEDDED_PATH(<item> <default_embedded_path_var>)\n\n#\n\n# Return the path that others should refer to the item by when the item\n\n# is embedded inside a bundle.\n\n#\n\n# Override on a per-project basis by providing a project-specific\n\n# gp_item_default_embedded_path_override function.\n\n#\n\n# ::\n\n#\n\n#   GP_RESOLVE_ITEM(<context> <item> <exepath> <dirs> <resolved_item_var>\n\n#                   [<rpaths>])\n\n#\n\n# Resolve an item into an existing full path file.\n\n#\n\n# Override on a per-project basis by providing a project-specific\n\n# gp_resolve_item_override function.\n\n#\n\n# ::\n\n#\n\n#   GP_RESOLVED_FILE_TYPE(<original_file> <file> <exepath> <dirs> <type_var>\n\n#                         [<rpaths>])\n\n#\n\n# Return the type of <file> with respect to <original_file>.  String\n\n# describing type of prerequisite is returned in variable named\n\n# <type_var>.\n\n#\n\n# Use <exepath> and <dirs> if necessary to resolve non-absolute <file>\n\n# values -- but only for non-embedded items.\n\n#\n\n# Possible types are:\n\n#\n\n# ::\n\n#\n\n#    system\n\n#    local\n\n#    embedded\n\n#    other\n\n#\n\n# Override on a per-project basis by providing a project-specific\n\n# gp_resolved_file_type_override function.\n\n#\n\n# ::\n\n#\n\n#   GP_FILE_TYPE(<original_file> <file> <type_var>)\n\n#\n\n# Return the type of <file> with respect to <original_file>.  String\n\n# describing type of prerequisite is returned in variable named\n\n# <type_var>.\n\n#\n\n# Possible types are:\n\n#\n\n# ::\n\n#\n\n#    system\n\n#    local\n\n#    embedded\n\n#    other\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# A file is not executable until proven otherwise:\n\n#\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# If file name ends in .exe on Windows, *assume* executable:\n\n#\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# A clause could be added here that uses output or return value of dumpbin\n\n# to determine ${result_var}. In 99%+? practical cases, the exe name\n\n# match will be sufficient...\n\n#\n",
        "Line" : 201,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Use the information returned from the Unix shell command \"file\" to\n\n# determine if ${file_full} should be considered an executable file...\n\n#\n\n# If the file command's output contains \"executable\" and does *not* contain\n\n# \"text\" then it is likely an executable suitable for prerequisite analysis\n\n# via the get_prerequisites macro.\n\n#\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Replace the name of the file in the output with a placeholder token\n\n# (the string \" _file_full_ \") so that just in case the path name of\n\n# the file contains the word \"text\" or \"executable\" we are not fooled\n\n# into thinking \"the wrong thing\" because the file name matches the\n\n# other 'file' command output we are looking for...\n\n#\n",
        "Line" : 231,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "#message(STATUS \"file_ov='${file_ov}'\")\n",
        "Line" : 240,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "#message(STATUS \"executable!\")\n",
        "Line" : 242,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "#message(STATUS \"but text, so *not* a binary executable!\")\n",
        "Line" : 244,
        "CharPositionInLine" : 10
      },
      "10" : {
        "Text" : "# Also detect position independent executables on Linux,\n\n# where \"file\" gives \"shared object ... (uses shared libraries)\"\n",
        "Line" : 251,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# \"file\" version 5.22 does not print \"(used shared libraries)\"\n\n# but uses \"interpreter\"\n",
        "Line" : 258,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# On Windows and Linux, \"embed\" prerequisites in the same directory\n\n# as the executable by default:\n\n#\n",
        "Line" : 274,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# On the Mac, relative to the executable depending on the type\n\n# of the thing we are embedding:\n\n#\n",
        "Line" : 279,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#\n\n# The assumption here is that all executables in the bundle will be\n\n# in same-level-directories inside the bundle. The parent directory\n\n# of an executable inside the bundle should be MacOS or a sibling of\n\n# MacOS and all embedded paths returned from here will begin with\n\n# \"@executable_path/../\" and will work from all executables in all\n\n# such same-level-directories inside the bundle.\n\n#\n",
        "Line" : 283,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# By default, embed things right next to the main bundle executable:\n\n#\n",
        "Line" : 292,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Embed frameworks and .dylibs in the embedded \"Frameworks\" directory\n\n# (sibling of MacOS):\n\n#\n",
        "Line" : 296,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Provide a hook so that projects can override the default embedded location\n\n# of any given library by whatever logic they choose:\n\n#\n",
        "Line" : 304,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Is it already resolved?\n\n#\n",
        "Line" : 324,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#\n\n# @executable_path references are assumed relative to exepath\n\n#\n",
        "Line" : 332,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "#message(STATUS \"info: embedded item exists (${ri})\")\n",
        "Line" : 339,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "#\n\n# @loader_path references are assumed relative to the\n\n# PATH of the given \"context\" (presumably another library)\n\n#\n",
        "Line" : 350,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "#message(STATUS \"info: embedded item exists (${ri})\")\n",
        "Line" : 359,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "#\n\n# @rpath references are relative to the paths built into the binaries with -rpath\n\n# We handle this case like we do for other Unixes\n\n#\n",
        "Line" : 370,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "#message(STATUS \"info: 'find_file' in exepath/dirs/rpaths (${ri})\")\n",
        "Line" : 379,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "#message(STATUS \"info: 'find_file' in exepath/dirs (${ri})\")\n",
        "Line" : 398,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "#message(STATUS \"info: 'find_file' found framework (${fw})\")\n",
        "Line" : 414,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# Using find_program on Windows will find dll files that are in the PATH.\n\n# (Converting simple file names into full path names if found.)\n\n#\n",
        "Line" : 422,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "#message(STATUS \"info: 'find_program' in exepath/dirs (${ri})\")\n",
        "Line" : 431,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# Provide a hook so that projects can override item resolution\n\n# by whatever logic they choose:\n\n#\n",
        "Line" : 439,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "#    message(STATUS \"\n\n#******************************************************************************\n\n#warning: cannot resolve item '${item}'\n\n#\n\n#  possible problems:\n\n#    need more directories?\n\n#    need to use InstallRequiredSystemLibraries?\n\n#    run in install tree instead of build tree?\n\n#\n\n#    context='${context}'\n\n#    item='${item}'\n\n#    exepath='${exepath}'\n\n#    dirs='${dirs}'\n\n#    resolved_item_var='${resolved_item_var}'\n\n#******************************************************************************\n\n#\")\n",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#message(STATUS \"**\")\n",
        "Line" : 483,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# canonicalize path\n",
        "Line" : 489,
        "CharPositionInLine" : 70
      },
      "33" : {
        "Text" : "# canonicalize path\n",
        "Line" : 507,
        "CharPositionInLine" : 72
      },
      "34" : {
        "Text" : "# if cygwin, we can get the properly formed windows paths from cygpath\n",
        "Line" : 537,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# Return type string based on computed booleans:\n\n#\n",
        "Line" : 585,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "#message(STATUS \"gp_resolved_file_type: '${file}' '${resolved_file}'\")\n\n#message(STATUS \"                type: '${type}'\")\n",
        "Line" : 597,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Provide a hook so that projects can override the decision on whether a\n\n# library belongs to the system or not by whatever logic they choose:\n\n#\n",
        "Line" : 610,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "#message(STATUS \"**\")\n",
        "Line" : 619,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# <setup-gp_tool-vars>\n\n#\n\n# Try to choose the right tool by default. Caller can set gp_tool prior to\n\n# calling this function to force using a different tool.\n\n#\n",
        "Line" : 682,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# This is how to check for cygwin, har!\n",
        "Line" : 694,
        "CharPositionInLine" : 27
      },
      "41" : {
        "Text" : "# Try harder. Maybe we're on MinGW\n",
        "Line" : 698,
        "CharPositionInLine" : 13
      },
      "42" : {
        "Text" : "# optional command to pre-filter gp_tool results\n",
        "Line" : 711,
        "CharPositionInLine" : 32
      },
      "43" : {
        "Text" : "# objdump generates copious output so we create a grep filter to pre-filter results\n",
        "Line" : 737,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# When running dumpbin, it also needs the \"Common7/IDE\" directory in the\n\n# PATH. It will already be in the PATH if being run from a Visual Studio\n\n# command prompt. Add it to the PATH here in case we are running from a\n\n# different command prompt.\n\n#\n",
        "Line" : 755,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# Use cmake paths as a user may have a PATH element ending with a backslash.\n\n# This will escape the list delimiter and create havoc!\n",
        "Line" : 762,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# only add to the path if it is not already in the path\n",
        "Line" : 765,
        "CharPositionInLine" : 6
      },
      "47" : {
        "Text" : "#\n\n# </setup-gp_tool-vars>\n",
        "Line" : 780,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# Track new prerequisites at each new level of recursion. Start with an\n\n# empty list at each level:\n\n#\n",
        "Line" : 793,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# Run gp_cmd on the target:\n\n#\n",
        "Line" : 798,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# Exclude delay load dependencies under windows (they are listed in dumpbin output after the message below)\n",
        "Line" : 809,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# dumpbin error messages seem to go to stdout\n",
        "Line" : 823,
        "CharPositionInLine" : 6
      },
      "52" : {
        "Text" : "# Convert to a list of lines:\n\n#\n",
        "Line" : 842,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# check for install id and remove it from list, since otool -L can include a\n\n# reference to itself\n",
        "Line" : 847,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# second line is install name\n",
        "Line" : 860,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# trim\n",
        "Line" : 863,
        "CharPositionInLine" : 6
      },
      "56" : {
        "Text" : "#message(\"INSTALL ID is \\\"${gp_install_id}\\\"\")\n",
        "Line" : 865,
        "CharPositionInLine" : 6
      },
      "57" : {
        "Text" : "# Analyze each line for file names that match the regular expression:\n\n#\n",
        "Line" : 869,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Extract information from each candidate:\n",
        "Line" : 874,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# Use the raw_item as the list entries returned by this function. Use the\n\n# gp_resolve_item function to resolve it to an actual full path file if\n\n# necessary.\n\n#\n",
        "Line" : 895,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# Add each item unless it is excluded:\n\n#\n",
        "Line" : 901,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "# If item was really added, this is the first time we have seen it.\n\n# Add it to unseen_prereqs so that we can recursively add *its*\n\n# prerequisites...\n\n#\n\n# But first: resolve its name to an absolute full path name such\n\n# that the analysis tools can simply accept it as input.\n\n#\n",
        "Line" : 924,
        "CharPositionInLine" : 8
      },
      "62" : {
        "Text" : "# Recurse only if we could resolve the item.\n\n# Otherwise the prerequisites_var list will be cleared\n",
        "Line" : 934,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 63
    },
    "deps/src/cmake-3.13.4/Modules/GoogleTest.cmake" : {
      "ObjectId" : "a5bb8636088bcb941bd1c8dffc8e5bda70cd08f5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nGoogleTest\n----------\n\nThis module defines functions to help use the Google Test infrastructure.  Two\nmechanisms for adding tests are provided. :command:`gtest_add_tests` has been\naround for some time, originally via ``find_package(GTest)``.\n:command:`gtest_discover_tests` was introduced in CMake 3.10.\n\nThe (older) :command:`gtest_add_tests` scans source files to identify tests.\nThis is usually effective, with some caveats, including in cross-compiling\nenvironments, and makes setting additional properties on tests more convenient.\nHowever, its handling of parameterized tests is less comprehensive, and it\nrequires re-running CMake to detect changes to the list of tests.\n\nThe (newer) :command:`gtest_discover_tests` discovers tests by asking the\ncompiled test executable to enumerate its tests.  This is more robust and\nprovides better handling of parameterized tests, and does not require CMake\nto be re-run when tests change.  However, it may not work in a cross-compiling\nenvironment, and setting test properties is less convenient.\n\nMore details can be found in the documentation of the respective functions.\n\nBoth commands are intended to replace use of :command:`add_test` to register\ntests, and will create a separate CTest test for each Google Test test case.\nNote that this is in some cases less efficient, as common set-up and tear-down\nlogic cannot be shared by multiple test cases executing in the same instance.\nHowever, it provides more fine-grained pass/fail information to CTest, which is\nusually considered as more beneficial.  By default, the CTest test name is the\nsame as the Google Test name (i.e. ``suite.testcase``); see also\n``TEST_PREFIX`` and ``TEST_SUFFIX``.\n\n.. command:: gtest_add_tests\n\n  Automatically add tests with CTest by scanning source code for Google Test\n  macros::\n\n    gtest_add_tests(TARGET target\n                    [SOURCES src1...]\n                    [EXTRA_ARGS arg1...]\n                    [WORKING_DIRECTORY dir]\n                    [TEST_PREFIX prefix]\n                    [TEST_SUFFIX suffix]\n                    [SKIP_DEPENDENCY]\n                    [TEST_LIST outVar]\n    )\n\n  ``gtest_add_tests`` attempts to identify tests by scanning source files.\n  Although this is generally effective, it uses only a basic regular expression\n  match, which can be defeated by atypical test declarations, and is unable to\n  fully \"split\" parameterized tests.  Additionally, it requires that CMake be\n  re-run to discover any newly added, removed or renamed tests (by default,\n  this means that CMake is re-run when any test source file is changed, but see\n  ``SKIP_DEPENDENCY``).  However, it has the advantage of declaring tests at\n  CMake time, which somewhat simplifies setting additional properties on tests,\n  and always works in a cross-compiling environment.\n\n  The options are:\n\n  ``TARGET target``\n    Specifies the Google Test executable, which must be a known CMake\n    executable target.  CMake will substitute the location of the built\n    executable when running the test.\n\n  ``SOURCES src1...``\n    When provided, only the listed files will be scanned for test cases.  If\n    this option is not given, the :prop_tgt:`SOURCES` property of the\n    specified ``target`` will be used to obtain the list of sources.\n\n  ``EXTRA_ARGS arg1...``\n    Any extra arguments to pass on the command line to each test case.\n\n  ``WORKING_DIRECTORY dir``\n    Specifies the directory in which to run the discovered test cases.  If this\n    option is not provided, the current binary directory is used.\n\n  ``TEST_PREFIX prefix``\n    Specifies a ``prefix`` to be prepended to the name of each discovered test\n    case.  This can be useful when the same source files are being used in\n    multiple calls to ``gtest_add_test()`` but with different ``EXTRA_ARGS``.\n\n  ``TEST_SUFFIX suffix``\n    Similar to ``TEST_PREFIX`` except the ``suffix`` is appended to the name of\n    every discovered test case.  Both ``TEST_PREFIX`` and ``TEST_SUFFIX`` may\n    be specified.\n\n  ``SKIP_DEPENDENCY``\n    Normally, the function creates a dependency which will cause CMake to be\n    re-run if any of the sources being scanned are changed.  This is to ensure\n    that the list of discovered tests is updated.  If this behavior is not\n    desired (as may be the case while actually writing the test cases), this\n    option can be used to prevent the dependency from being added.\n\n  ``TEST_LIST outVar``\n    The variable named by ``outVar`` will be populated in the calling scope\n    with the list of discovered test cases.  This allows the caller to do\n    things like manipulate test properties of the discovered tests.\n\n  .. code-block:: cmake\n\n    include(GoogleTest)\n    add_executable(FooTest FooUnitTest.cxx)\n    gtest_add_tests(TARGET      FooTest\n                    TEST_SUFFIX .noArgs\n                    TEST_LIST   noArgsTests\n    )\n    gtest_add_tests(TARGET      FooTest\n                    EXTRA_ARGS  --someArg someValue\n                    TEST_SUFFIX .withArgs\n                    TEST_LIST   withArgsTests\n    )\n    set_tests_properties(${noArgsTests}   PROPERTIES TIMEOUT 10)\n    set_tests_properties(${withArgsTests} PROPERTIES TIMEOUT 20)\n\n  For backward compatibility, the following form is also supported::\n\n    gtest_add_tests(exe args files...)\n\n  ``exe``\n    The path to the test executable or the name of a CMake target.\n  ``args``\n    A ;-list of extra arguments to be passed to executable.  The entire\n    list must be passed as a single argument.  Enclose it in quotes,\n    or pass ``\"\"`` for no arguments.\n  ``files...``\n    A list of source files to search for tests and test fixtures.\n    Alternatively, use ``AUTO`` to specify that ``exe`` is the name\n    of a CMake executable target whose sources should be scanned.\n\n  .. code-block:: cmake\n\n    include(GoogleTest)\n    set(FooTestArgs --foo 1 --bar 2)\n    add_executable(FooTest FooUnitTest.cxx)\n    gtest_add_tests(FooTest \"${FooTestArgs}\" AUTO)\n\n.. command:: gtest_discover_tests\n\n  Automatically add tests with CTest by querying the compiled test executable\n  for available tests::\n\n    gtest_discover_tests(target\n                         [EXTRA_ARGS arg1...]\n                         [WORKING_DIRECTORY dir]\n                         [TEST_PREFIX prefix]\n                         [TEST_SUFFIX suffix]\n                         [NO_PRETTY_TYPES] [NO_PRETTY_VALUES]\n                         [PROPERTIES name1 value1...]\n                         [TEST_LIST var]\n                         [DISCOVERY_TIMEOUT seconds]\n    )\n\n  ``gtest_discover_tests`` sets up a post-build command on the test executable\n  that generates the list of tests by parsing the output from running the test\n  with the ``--gtest_list_tests`` argument.  Compared to the source parsing\n  approach of :command:`gtest_add_tests`, this ensures that the full list of\n  tests, including instantiations of parameterized tests, is obtained.  Since\n  test discovery occurs at build time, it is not necessary to re-run CMake when\n  the list of tests changes.\n  However, it requires that :prop_tgt:`CROSSCOMPILING_EMULATOR` is properly set\n  in order to function in a cross-compiling environment.\n\n  Additionally, setting properties on tests is somewhat less convenient, since\n  the tests are not available at CMake time.  Additional test properties may be\n  assigned to the set of tests as a whole using the ``PROPERTIES`` option.  If\n  more fine-grained test control is needed, custom content may be provided\n  through an external CTest script using the :prop_dir:`TEST_INCLUDE_FILES`\n  directory property.  The set of discovered tests is made accessible to such a\n  script via the ``<target>_TESTS`` variable.\n\n  The options are:\n\n  ``target``\n    Specifies the Google Test executable, which must be a known CMake\n    executable target.  CMake will substitute the location of the built\n    executable when running the test.\n\n  ``EXTRA_ARGS arg1...``\n    Any extra arguments to pass on the command line to each test case.\n\n  ``WORKING_DIRECTORY dir``\n    Specifies the directory in which to run the discovered test cases.  If this\n    option is not provided, the current binary directory is used.\n\n  ``TEST_PREFIX prefix``\n    Specifies a ``prefix`` to be prepended to the name of each discovered test\n    case.  This can be useful when the same test executable is being used in\n    multiple calls to ``gtest_discover_tests()`` but with different\n    ``EXTRA_ARGS``.\n\n  ``TEST_SUFFIX suffix``\n    Similar to ``TEST_PREFIX`` except the ``suffix`` is appended to the name of\n    every discovered test case.  Both ``TEST_PREFIX`` and ``TEST_SUFFIX`` may\n    be specified.\n\n  ``NO_PRETTY_TYPES``\n    By default, the type index of type-parameterized tests is replaced by the\n    actual type name in the CTest test name.  If this behavior is undesirable\n    (e.g. because the type names are unwieldy), this option will suppress this\n    behavior.\n\n  ``NO_PRETTY_VALUES``\n    By default, the value index of value-parameterized tests is replaced by the\n    actual value in the CTest test name.  If this behavior is undesirable\n    (e.g. because the value strings are unwieldy), this option will suppress\n    this behavior.\n\n  ``PROPERTIES name1 value1...``\n    Specifies additional properties to be set on all tests discovered by this\n    invocation of ``gtest_discover_tests``.\n\n  ``TEST_LIST var``\n    Make the list of tests available in the variable ``var``, rather than the\n    default ``<target>_TESTS``.  This can be useful when the same test\n    executable is being used in multiple calls to ``gtest_discover_tests()``.\n    Note that this variable is only available in CTest.\n\n  ``DISCOVERY_TIMEOUT num``\n    Specifies how long (in seconds) CMake will wait for the test to enumerate\n    available tests.  If the test takes longer than this, discovery (and your\n    build) will fail.  Most test executables will enumerate their tests very\n    quickly, but under some exceptional circumstances, a test may require a\n    longer timeout.  The default is 5.  See also the ``TIMEOUT`` option of\n    :command:`execute_process`.\n\n    .. note::\n\n      In CMake versions 3.10.1 and 3.10.2, this option was called ``TIMEOUT``.\n      This clashed with the ``TIMEOUT`` test property, which is one of the\n      common properties that would be set with the ``PROPERTIES`` keyword,\n      usually leading to legal but unintended behavior.  The keyword was\n      changed to ``DISCOVERY_TIMEOUT`` in CMake 3.10.3 to address this\n      problem.  The ambiguous behavior of the ``TIMEOUT`` keyword in 3.10.1\n      and 3.10.2 has not been preserved.\n\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Save project's policies\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if IN_LIST\n",
        "Line" : 243,
        "CharPositionInLine" : 30
      },
      "4" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Non-keyword syntax, convert to keyword form\n",
        "Line" : 273,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# The non-keyword syntax allows the first argument to be an arbitrary\n\n# executable rather than a target if source files are also provided. In all\n\n# other cases, both forms require a target.\n",
        "Line" : 285,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Parameterized tests have a different signature for the filter\n",
        "Line" : 315,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Make sure tests disabled in GTest get disabled in CTest\n",
        "Line" : 327,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Add the disabled test if CMake is new enough\n\n# Note that this check is to allow backwards compatibility so this\n\n# module can be copied locally in projects to use with older CMake\n\n# versions\n",
        "Line" : 329,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define rule to generate test list for aforementioned test executable\n",
        "Line" : 412,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Add discovered tests to directory TEST_INCLUDE_FILES\n",
        "Line" : 449,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "###############################################################################\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Restore project's policies\n",
        "Line" : 462,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "deps/src/cmake-3.13.4/Modules/GoogleTestAddTests.cmake" : {
      "ObjectId" : "5a4bdcad396d54553b0cf70462706691424790d2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Run test executable to get list of available tests\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Parse output\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Skip header\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Do we have a module name or a test name?\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Module; remove trailing '.' to get just the name...\n",
        "Line" : 56,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Test name; strip spaces and comments to get just the name...\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# ...and add to script\n",
        "Line" : 74,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Create a list of all discovered tests, which users may use to e.g. set\n\n# properties on the tests\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Write CTest script\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Modules/ITKCompatibility.cmake" : {
      "ObjectId" : "b3d5a6f1d5b5c9fbd137d06a298be4495a1b49d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# work around an old bug in ITK prior to version 3.0\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/InstallRequiredSystemLibraries.cmake" : {
      "ObjectId" : "b5e5d69f837278d11f161ef091ce58d6f096e474",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# InstallRequiredSystemLibraries\n\n# ------------------------------\n\n#\n\n# Include this module to search for compiler-provided system runtime\n\n# libraries and add install rules for them.  Some optional variables\n\n# may be set prior to including the module to adjust behavior:\n\n#\n\n# ``CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS``\n\n#   Specify additional runtime libraries that may not be detected.\n\n#   After inclusion any detected libraries will be appended to this.\n\n#\n\n# ``CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS_SKIP``\n\n#   Set to TRUE to skip calling the :command:`install(PROGRAMS)` command to\n\n#   allow the includer to specify its own install rule, using the value of\n\n#   ``CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS`` to get the list of libraries.\n\n#\n\n# ``CMAKE_INSTALL_DEBUG_LIBRARIES``\n\n#   Set to TRUE to install the debug runtime libraries when available\n\n#   with MSVC tools.\n\n#\n\n# ``CMAKE_INSTALL_DEBUG_LIBRARIES_ONLY``\n\n#   Set to TRUE to install only the debug runtime libraries with MSVC\n\n#   tools even if the release runtime libraries are also available.\n\n#\n\n# ``CMAKE_INSTALL_UCRT_LIBRARIES``\n\n#   Set to TRUE to install the Windows Universal CRT libraries for\n\n#   app-local deployment (e.g. to Windows XP).  This is meaningful\n\n#   only with MSVC from Visual Studio 2015 or higher.\n\n#\n\n#   One may set a ``CMAKE_WINDOWS_KITS_10_DIR`` *environment variable*\n\n#   to an absolute path to tell CMake to look for Windows 10 SDKs in\n\n#   a custom location.  The specified directory is expected to contain\n\n#   ``Redist/ucrt/DLLs/*`` directories.\n\n#\n\n# ``CMAKE_INSTALL_MFC_LIBRARIES``\n\n#   Set to TRUE to install the MSVC MFC runtime libraries.\n\n#\n\n# ``CMAKE_INSTALL_OPENMP_LIBRARIES``\n\n#   Set to TRUE to install the MSVC OpenMP runtime libraries\n\n#\n\n# ``CMAKE_INSTALL_SYSTEM_RUNTIME_DESTINATION``\n\n#   Specify the :command:`install(PROGRAMS)` command ``DESTINATION``\n\n#   option.  If not specified, the default is ``bin`` on Windows\n\n#   and ``lib`` elsewhere.\n\n#\n\n# ``CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS_NO_WARNINGS``\n\n#   Set to TRUE to disable warnings about required library files that\n\n#   do not exist.  (For example, Visual Studio Express editions may\n\n#   not provide the redistributable files.)\n\n#\n\n# ``CMAKE_INSTALL_SYSTEM_RUNTIME_COMPONENT``\n\n#   Specify the :command:`install(PROGRAMS)` command ``COMPONENT``\n\n#   option.  If not specified, no such option will be used.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if() quoted variables not dereferenced\n",
        "Line" : 60,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "# VS 10 and later:\n",
        "Line" : 97,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# VS 9 and earlier:\n",
        "Line" : 100,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Find the runtime library redistribution directory.\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# use old cache entry\n",
        "Line" : 129,
        "CharPositionInLine" : 50
      },
      "7" : {
        "Text" : "# Install the manifest that allows DLLs to be loaded from the\n\n# directory containing the executable.\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Find the runtime library redistribution directory.\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# use old cache entry\n",
        "Line" : 171,
        "CharPositionInLine" : 50
      },
      "10" : {
        "Text" : "# Install the manifest that allows DLLs to be loaded from the\n\n# directory containing the executable.\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# VS2017 named this differently prior to update 3.\n",
        "Line" : 215,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Find the runtime library redistribution directory.\n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# use old cache entry\n",
        "Line" : 241,
        "CharPositionInLine" : 53
      },
      "14" : {
        "Text" : "# undocumented query\n",
        "Line" : 245,
        "CharPositionInLine" : 71
      },
      "15" : {
        "Text" : "# Find the Windows Kits directory.\n",
        "Line" : 301,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Glob the list of UCRT DLLs.\n",
        "Line" : 322,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Install the manifest that allows DLLs to be loaded from the\n\n# directory containing the executable.\n",
        "Line" : 369,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# include the language dll's for vs8 as well as the actual dll's\n",
        "Line" : 381,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Install the manifest that allows DLLs to be loaded from the\n\n# directory containing the executable.\n",
        "Line" : 383,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Install the manifest that allows DLLs to be loaded from the\n\n# directory containing the executable.\n",
        "Line" : 413,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# include the language dll's for vs9 as well as the actual dll's\n",
        "Line" : 425,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# Install the manifest that allows DLLs to be loaded from the\n\n# directory containing the executable.\n",
        "Line" : 427,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# Starting with VS 15 the MFC DLLs may be in a different directory.\n",
        "Line" : 454,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "# Multi-Byte Character Set versions of MFC are available as optional\n\n# addon since Visual Studio 12.  So for version 12 or higher, check\n\n# whether they are available and exclude them if they are not.\n",
        "Line" : 465,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# include the language dll's as well as the actual dll's\n",
        "Line" : 506,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# MSVC 8 was the first version with OpenMP\n\n# Furthermore, there is no debug version of this\n",
        "Line" : 523,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# This warning indicates an incomplete Visual Studio installation\n\n# or a bug somewhere above here in this file.\n\n# If you would like to avoid this warning, fix the real problem, or\n\n# set CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS_NO_WARNINGS before including\n\n# this file.\n",
        "Line" : 550,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# This warning indicates an incomplete Watcom installation\n\n# or a bug somewhere above here in this file.\n\n# If you would like to avoid this warning, fix the real problem, or\n\n# set CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS_NO_WARNINGS before including\n\n# this file.\n",
        "Line" : 696,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# Include system runtime libraries in the installation if any are\n\n# specified by CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS.\n",
        "Line" : 707,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "deps/src/cmake-3.13.4/Modules/IntelVSImplicitPath/CMakeLists.txt" : {
      "ObjectId" : "d115704474f8163a5870677a71a2591548508fbc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/IntelVSImplicitPath/detect.cmake" : {
      "ObjectId" : "20753bef49849adedc71cebfae08c4c5b55431c3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# look at each path and try to find ifconsol.lib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Internal/CPack/CPackDeb.cmake" : {
      "ObjectId" : "3042a16f8066dbb9c4b64cba5b72414420be53d0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CPack script for creating Debian package\n\n# Author: Mathieu Malaterre\n\n#\n\n# http://wiki.debian.org/HowToPackageForDebian\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if IN_LIST\n",
        "Line" : 14,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "#extract library name and version for given shared object\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CPACK_DEBIAN_PACKAGE_SHLIBDEPS\n\n# If specify OFF, only user depends are used\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# per component automatic discover: some of the component might not have\n\n# binaries.\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# if set, overrides the global configuration\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Generating binary list - Get type of all install files\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# get file info so that we can determine if file is executable or not\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Only dynamically linked ELF files are included\n\n# Extract only file name infront of \":\"\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Get the file's Build ID\n",
        "Line" : 144,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Split out the debug symbols from the binaries\n",
        "Line" : 163,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# dpkg-shlibdeps is a Debian utility for generating dependency list\n",
        "Line" : 201,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Check version of the dpkg-shlibdeps tool using CPackDEB method\n",
        "Line" : 205,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Create blank control file for running dpkg-shlibdeps\n\n# There might be some other way to invoke dpkg-shlibdeps without creating this file\n\n# but standard debian package should not have anything that can collide with this file or directory\n",
        "Line" : 224,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Create a DEBIAN directory so that dpkg-shlibdeps can find the package dir when resolving $ORIGIN.\n",
        "Line" : 230,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Add --ignore-missing-info if the tool supports it\n",
        "Line" : 233,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Execute dpkg-shlibdeps\n\n# --ignore-missing-info : allow dpkg-shlibdeps to run even if some libs do not belong to a package\n\n# -O : print to STDOUT\n",
        "Line" : 242,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# dpkg-shlibdeps will throw some warnings if some input files are not binary\n",
        "Line" : 252,
        "CharPositionInLine" : 10
      },
      "19" : {
        "Text" : "#Get rid of prefix generated by dpkg-shlibdeps\n",
        "Line" : 263,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# Remove blank control file\n\n# Might not be safe if package actual contain file or directory named debian\n",
        "Line" : 270,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# remove temporary directory that was created only for dpkg-shlibdeps execution\n",
        "Line" : 274,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Let's define the control file found in debian package:\n",
        "Line" : 291,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Binary package:\n\n# http://www.debian.org/doc/debian-policy/ch-controlfields.html#s-binarycontrolfiles\n",
        "Line" : 293,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# DEBIAN/control\n\n# debian policy enforce lower case for package name\n\n# Package: (mandatory)\n",
        "Line" : 296,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Version: (mandatory)\n",
        "Line" : 303,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# only test the version format if CPACK_DEBIAN_PACKAGE_RELEASE or\n\n# CPACK_DEBIAN_PACKAGE_EPOCH is set\n",
        "Line" : 312,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# before CMake 3.10 version format was not tested so only warn to preserve\n\n# backward compatibility\n",
        "Line" : 319,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# only test the version format if CPACK_DEBIAN_PACKAGE_RELEASE or\n\n# CPACK_DEBIAN_PACKAGE_EPOCH is set - versions CPack/Deb generator before\n\n# CMake 3.10 did not check for version format so we have to preserve\n\n# backward compatibility\n",
        "Line" : 337,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Architecture: (mandatory)\n",
        "Line" : 356,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# There is no such thing as i686 architecture on debian, you should use i386 instead\n\n# $ dpkg --print-architecture\n",
        "Line" : 360,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Source: (optional)\n\n# in case several packages are constructed from a unique source\n\n# (multipackaging), the source may be indicated as well.\n\n# The source might contain a version if the generated package\n\n# version is different from the source version\n",
        "Line" : 373,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# have a look at get_property(result GLOBAL PROPERTY ENABLED_FEATURES),\n\n# this returns the successful find_package() calls, maybe this can help\n\n# Depends:\n\n# You should set: DEBIAN_PACKAGE_DEPENDS\n\n# TODO: automate 'objdump -p | grep NEEDED'\n",
        "Line" : 382,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# if per-component variable, overrides the global CPACK_DEBIAN_PACKAGE_${variable_type_}\n\n# automatic dependency discovery will be performed afterwards.\n",
        "Line" : 388,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# if set, overrides the global variable\n",
        "Line" : 394,
        "CharPositionInLine" : 6
      },
      "35" : {
        "Text" : "# at this point, the CPACK_DEBIAN_PACKAGE_DEPENDS is properly set\n\n# to the minimal dependency of the package\n\n# Append automatically discovered dependencies .\n",
        "Line" : 424,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Maintainer: (mandatory)\n",
        "Line" : 439,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Description: (mandatory)\n",
        "Line" : 447,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# component description overrides package description\n",
        "Line" : 458,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# Homepage: (optional)\n",
        "Line" : 469,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Section: (recommended)\n",
        "Line" : 474,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Priority: (recommended)\n",
        "Line" : 479,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Compression: (recommended)\n",
        "Line" : 494,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Recommends:\n\n# You should set: CPACK_DEBIAN_PACKAGE_RECOMMENDS\n",
        "Line" : 499,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# Suggests:\n\n# You should set: CPACK_DEBIAN_PACKAGE_SUGGESTS\n",
        "Line" : 502,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA\n\n# This variable allow advanced user to add custom script to the control.tar.gz (inside the .deb archive)\n\n# Typical examples are:\n\n# - conffiles\n\n# - postinst\n\n# - postrm\n\n# - prerm\n\n# Usage:\n\n# set(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA\n\n#    \"${CMAKE_CURRENT_SOURCE_DIR}/prerm;${CMAKE_CURRENT_SOURCE_DIR}/postrm\")\n",
        "Line" : 505,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Are we packaging components ?\n",
        "Line" : 516,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# override values with per component version if set\n",
        "Line" : 518,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# add ldconfig call in default postrm and postint\n",
        "Line" : 552,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# all files in CPACK_DEB_SHARED_OBJECT_FILES have dot at the beginning\n",
        "Line" : 556,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# Patch package file name to be in correct debian format:\n\n# <foo>_<VersionNumber>-<DebianRevisionNumber>_<DebianArchitecture>.deb\n",
        "Line" : 584,
        "CharPositionInLine" : 6
      },
      "51" : {
        "Text" : "# back compatibility - don't change the name\n",
        "Line" : 603,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# Print out some debug information if we were asked for that\n",
        "Line" : 607,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# For debian source packages:\n\n# debian/control\n\n# http://www.debian.org/doc/debian-policy/ch-controlfields.html#s-sourcecontrolfiles\n",
        "Line" : 621,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# .dsc\n\n# http://www.debian.org/doc/debian-policy/ch-controlfields.html#s-debiansourcecontrolfiles\n",
        "Line" : 625,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Builds-Depends:\n\n#if(NOT CPACK_DEBIAN_PACKAGE_BUILDS_DEPENDS)\n\n#  set(CPACK_DEBIAN_PACKAGE_BUILDS_DEPENDS\n\n#    \"debhelper (>> 5.0.0), libncurses5-dev, tcl8.4\"\n\n#  )\n\n#endif()\n",
        "Line" : 628,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# move variables to parent scope so that they may be used to create debian package\n",
        "Line" : 635,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 57
    },
    "deps/src/cmake-3.13.4/Modules/Internal/CPack/CPackExternal.cmake" : {
      "ObjectId" : "e4d055a2db41f523b6556ba3b7122660aedb4965",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Internal/CPack/CPackFreeBSD.cmake" : {
      "ObjectId" : "16f906cac8c63c1ad8dc7bb2ea93e72b358e87fe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n#\n\n# These bits are copied from the Debian packaging file; slightly modified.\n\n# They are used for filling in FreeBSD-packaging variables that can take\n\n# on values from elsewhere -- e.g. the package description may as well be\n\n# copied from Debian.\n\n#\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: maybe read the PACKAGE_DESCRIPTION file for the longer\n\n#       FreeBSD pkg-descr?\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# There's really only one homepage for a project, so\n\n# re-use the Debian setting if it's there.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/Internal/CPack/CPackNuGet.cmake" : {
      "ObjectId" : "198ccad5914922844ba718a21f7991a0b1f969dd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Author: Alex Turbov\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Print some debug info\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make a variable w/ upper-cased component name\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Set mandatory variables (not wrapped into XML elements)\n\n# https://docs.microsoft.com/en-us/nuget/reference/nuspec#required-metadata-elements\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Set optional variables (wrapped into XML elements)\n\n# https://docs.microsoft.com/en-us/nuget/reference/nuspec#optional-metadata-elements\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Handle dependencies\n",
        "Line" : 227,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Render deps into the variable\n",
        "Line" : 248,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Render the spec file\n\n# NOTE The spec filename doesn't matter. Being included into a package,\n\n# NuGet will name it properly.\n",
        "Line" : 260,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Add details for debug run\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Case one: ordinal all-in-one package\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This variable `CPACK_NUGET_ALL_IN_ONE` set by C++ code:\n\n# Meaning to pack all installed files into a single package\n",
        "Line" : 292,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# This variable `CPACK_NUGET_ALL_IN_ONE` set by C++ code:\n\n# Meaning to pack all installed components into a single package\n",
        "Line" : 302,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Prepare the `files` element which include files from several components\n",
        "Line" : 306,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Is there any grouped component?\n",
        "Line" : 315,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Render a spec file which includes all components in the current group\n",
        "Line" : 323,
        "CharPositionInLine" : 12
      },
      "16" : {
        "Text" : "# Temporary set `CPACK_NUGET_PACKAGE_COMPONENT` to the group name\n\n# to properly collect various per group settings\n",
        "Line" : 326,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# Is there any single component package needed?\n",
        "Line" : 337,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Render a spec file which includes only given component\n",
        "Line" : 342,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "# Temporary set `CPACK_NUGET_PACKAGE_COMPONENT` to the current\n\n# component name to properly collect various per group settings\n",
        "Line" : 345,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 20
    },
    "deps/src/cmake-3.13.4/Modules/Internal/CPack/CPackRPM.cmake" : {
      "ObjectId" : "2de71ee2070ca54392cf97174a10fbc35d1554c9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Author: Eric Noulard with the help of Alexander Neundorf.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if IN_LIST\n",
        "Line" : 7,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "# set appropriate prefix, remove possible trailing slash and convert backslashes to slashes\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# set base path prefix\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# set other path prefixes\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# don't prefix path with a second slash as \"//\" is treated as network path\n\n# by get_filename_component() so it remains in path even inside rpm\n\n# package where it may cause problems with relocation\n",
        "Line" : 98,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# handle cases where path contains extra slashes (e.g. /a//b/ instead of\n\n# /a/b)\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# warn about all the paths that are not relocatable\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# get files list\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# if we are creating a relocatable package, omit parent directories of\n\n# CPACK_RPM_PACKAGE_PREFIX. This is achieved by building a \"filter list\"\n\n# which is passed to the find command that generates the content-list\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# get a list of the elements in CPACK_RPM_PACKAGE_PREFIXES that are\n\n# destinct parent paths of other relocation paths and remove the\n\n# final element (so the install-prefix dir itself is not omitted\n\n# from the RPM's content-list)\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Now generate all of the parent dirs of the relocation path\n",
        "Line" : 166,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# add man paths that will be compressed\n\n# (copied from /usr/lib/rpm/brp-compress - script that does the actual\n\n# compressing)\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# man pages are files inside a certain location\n",
        "Line" : 223,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# insert file location that covers compressed man pages\n\n# even if using a wildcard causes duplicates as those are\n\n# handled by RPM and we still keep the same file list\n\n# in spec file - wildcard only represents file type (e.g. .gz)\n",
        "Line" : 228,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# remove file location that doesn't cover compressed man pages\n",
        "Line" : 233,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# reverse magic\n",
        "Line" : 265,
        "CharPositionInLine" : 60
      },
      "18" : {
        "Text" : "# both paths relocated\n",
        "Line" : 271,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# reverse magic\n",
        "Line" : 274,
        "CharPositionInLine" : 62
      },
      "20" : {
        "Text" : "# source path relocated\n",
        "Line" : 310,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# point path relocated\n",
        "Line" : 338,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# reverse magic\n",
        "Line" : 341,
        "CharPositionInLine" : 60
      },
      "23" : {
        "Text" : "# no path relocated\n",
        "Line" : 367,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# source path relocated\n",
        "Line" : 399,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# both paths relocated\n",
        "Line" : 406,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# point path relocated\n",
        "Line" : 410,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# point path relocated\n",
        "Line" : 419,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# no path relocated\n",
        "Line" : 425,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# place variables into parent scope\n",
        "Line" : 429,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Prepend directories in ${CPACK_RPM_INSTALL_FILES} with %dir\n\n# This is necessary to avoid duplicate files since rpmbuild does\n\n# recursion on its own when encountering a pathname which is a directory\n\n# which is not flagged as %dir\n",
        "Line" : 439,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# make file order consistent on all platforms\n",
        "Line" : 450,
        "CharPositionInLine" : 32
      },
      "32" : {
        "Text" : "# check that symlink has relocatable format\n",
        "Line" : 457,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# get destination path\n",
        "Line" : 468,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# check if path is relative or absolute\n",
        "Line" : 471,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# prevent absolute paths from having /../ or /./ section inside of them\n",
        "Line" : 475,
        "CharPositionInLine" : 10
      },
      "36" : {
        "Text" : "# handle relative path\n",
        "Line" : 478,
        "CharPositionInLine" : 10
      },
      "37" : {
        "Text" : "# recalculate path length after conversion to canonical form\n",
        "Line" : 482,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# only symlinks that are pointing inside the packaging structure should be checked for relocation\n",
        "Line" : 486,
        "CharPositionInLine" : 10
      },
      "39" : {
        "Text" : "# location pointed to is outside WDR so it should be treated as a permanent symlink\n",
        "Line" : 494,
        "CharPositionInLine" : 10
      },
      "40" : {
        "Text" : "# find matching\n",
        "Line" : 506,
        "CharPositionInLine" : 10
      },
      "41" : {
        "Text" : "# symlinks have the same subpath\n",
        "Line" : 515,
        "CharPositionInLine" : 12
      },
      "42" : {
        "Text" : "# permanent symlink\n",
        "Line" : 517,
        "CharPositionInLine" : 14
      },
      "43" : {
        "Text" : "# relocation subpaths\n",
        "Line" : 522,
        "CharPositionInLine" : 14
      },
      "44" : {
        "Text" : "# not on the same relocation path\n",
        "Line" : 527,
        "CharPositionInLine" : 12
      },
      "45" : {
        "Text" : "# point is relocatable\n",
        "Line" : 532,
        "CharPositionInLine" : 10
      },
      "46" : {
        "Text" : "# is not relocatable or points to non relocatable path - permanent symlink\n",
        "Line" : 536,
        "CharPositionInLine" : 10
      },
      "47" : {
        "Text" : "# We need to check if the binaries were compiled with debug symbols\n\n# because without them the package will be useless\n",
        "Line" : 563,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# With objdump we should check the debug symbols\n",
        "Line" : 572,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# With debugedit we prepare source files list\n",
        "Line" : 580,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# Check if the given file is an executable or not\n",
        "Line" : 602,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# Now generate all segments of the path\n",
        "Line" : 712,
        "CharPositionInLine" : 6
      },
      "52" : {
        "Text" : "# rpmbuild is the basic command for building RPM package\n\n# it may be a simple (symbolic) link to rpm command.\n",
        "Line" : 746,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Check version of the rpmbuild tool this would be easier to\n\n# track bugs with users and CPackRPM debug mode.\n\n# We may use RPM version in order to check for available version dependent features\n",
        "Line" : 750,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Display lsb_release output if DEBUG mode enable\n\n# This will help to diagnose problem with CPackRPM\n\n# because we will know on which kind of Linux we are\n",
        "Line" : 770,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# We may use RPM version in the future in order\n\n# to shut down warning about space in buildtree\n\n# some recent RPM version should support space in different places.\n\n# not checked [yet].\n",
        "Line" : 789,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# If rpmbuild is found\n\n# we try to discover alien since we may be on non RPM distro like Debian.\n\n# In this case we may try to to use more advanced features\n\n# like generating RPM directly from DEB using alien.\n\n# FIXME feature not finished (yet)\n",
        "Line" : 797,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# Are we packaging components ?\n",
        "Line" : 807,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "#\n\n# Use user-defined RPM specific variables value\n\n# or generate reasonable default value from\n\n# CPACK_xxx generic values.\n\n# The variables comes from the needed (mandatory or not)\n\n# values found in the RPM specification file aka \".spec\" file.\n\n# The variables which may/should be defined are:\n\n#\n",
        "Line" : 814,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# CPACK_RPM_PACKAGE_SUMMARY (mandatory)\n",
        "Line" : 823,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# if neither var is defined lets use the name as summary\n",
        "Line" : 835,
        "CharPositionInLine" : 6
      },
      "61" : {
        "Text" : "# CPACK_RPM_PACKAGE_NAME (mandatory)\n",
        "Line" : 844,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# CPACK_RPM_PACKAGE_VERSION (mandatory)\n",
        "Line" : 862,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# Replace '-' in version with '_'\n\n# '-' character is  an Illegal RPM version character\n\n# it is illegal because it is used to separate\n\n# RPM \"Version\" from RPM \"Release\"\n",
        "Line" : 869,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# CPACK_RPM_PACKAGE_ARCHITECTURE (mandatory)\n",
        "Line" : 875,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "# CPACK_RPM_PACKAGE_RELEASE\n\n# The RPM release is the numbering of the RPM package ITSELF\n\n# this is the version of the PACKAGING and NOT the version\n\n# of the CONTENT of the package.\n\n# You may well need to generate a new RPM package release\n\n# without changing the version of the packaged software.\n\n# This is the case when the packaging is buggy (not) the software :=)\n\n# If not set, 1 is a good candidate\n",
        "Line" : 902,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# CPACK_RPM_PACKAGE_LICENSE\n",
        "Line" : 918,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# CPACK_RPM_PACKAGE_GROUP\n",
        "Line" : 923,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# CPACK_RPM_PACKAGE_VENDOR\n",
        "Line" : 934,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# CPACK_RPM_PACKAGE_SOURCE\n\n# The name of the source tarball in case we generate a source RPM\n",
        "Line" : 943,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# CPACK_RPM_PACKAGE_DESCRIPTION\n\n# The variable content may be either\n\n#   - explicitly given by the user or\n\n#   - filled with the content of CPACK_PACKAGE_DESCRIPTION_FILE\n\n#     if it is defined\n\n#   - set to a default value\n\n#\n",
        "Line" : 946,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "# CPACK_RPM_COMPRESSION_TYPE\n\n#\n",
        "Line" : 969,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# kept for back compatibility (provided external RPM spec files)\n",
        "Line" : 1000,
        "CharPositionInLine" : 72
      },
      "73" : {
        "Text" : "# disable relocatable option if building source RPM\n",
        "Line" : 1011,
        "CharPositionInLine" : 45
      },
      "74" : {
        "Text" : "# Check if additional fields for RPM spec header are given\n\n# There may be some COMPONENT specific variables as well\n\n# If component specific var is not provided we use the global one\n\n# for each component\n",
        "Line" : 1024,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# Prefix can be replaced by Prefixes but the old version still works so we'll ignore it for now\n\n# Requires* is a special case because it gets transformed to Requires(pre/post/preun/postun)\n\n# Auto* is a special case because the tags can not be queried by querytags rpmbuild flag\n",
        "Line" : 1041,
        "CharPositionInLine" : 6
      },
      "76" : {
        "Text" : "# Treat the RPM Spec keyword iff it has been properly defined\n",
        "Line" : 1058,
        "CharPositionInLine" : 4
      },
      "77" : {
        "Text" : "# Transform NAME --> Name e.g. PROVIDES --> Provides\n\n# The Upper-case first letter and lowercase tail is the\n\n# appropriate value required in the final RPM spec file.\n",
        "Line" : 1060,
        "CharPositionInLine" : 6
      },
      "78" : {
        "Text" : "# The following keywords require parentheses around the \"pre\" or \"post\" suffix in the final RPM spec file.\n",
        "Line" : 1067,
        "CharPositionInLine" : 6
      },
      "79" : {
        "Text" : "# CPACK_RPM_SPEC_INSTALL_POST\n\n# May be used to define a RPM post intallation script\n\n# for example setting it to \"/bin/true\" may prevent\n\n# rpmbuild from stripping binaries.\n",
        "Line" : 1082,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "# CPACK_RPM_POST_INSTALL_SCRIPT_FILE (or CPACK_RPM_<COMPONENT>_POST_INSTALL_SCRIPT_FILE)\n\n# CPACK_RPM_POST_UNINSTALL_SCRIPT_FILE (or CPACK_RPM_<COMPONENT>_POST_UNINSTALL_SCRIPT_FILE)\n\n# May be used to embed a post (un)installation script in the spec file.\n\n# The referred script file(s) will be read and directly\n\n# put after the %post or %postun section\n\n# ----------------------------------------------------------------\n\n# CPACK_RPM_PRE_INSTALL_SCRIPT_FILE (or CPACK_RPM_<COMPONENT>_PRE_INSTALL_SCRIPT_FILE)\n\n# CPACK_RPM_PRE_UNINSTALL_SCRIPT_FILE (or CPACK_RPM_<COMPONENT>_PRE_UNINSTALL_SCRIPT_FILE)\n\n# May be used to embed a pre (un)installation script in the spec file.\n\n# The referred script file(s) will be read and directly\n\n# put after the %pre or %preun section\n",
        "Line" : 1093,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# Handle file if it has been specified\n",
        "Line" : 1115,
        "CharPositionInLine" : 6
      },
      "82" : {
        "Text" : "# reset SPEC var value if no file has been specified\n\n# (either globally or component-wise)\n",
        "Line" : 1124,
        "CharPositionInLine" : 8
      },
      "83" : {
        "Text" : "# CPACK_RPM_CHANGELOG_FILE\n\n# May be used to embed a changelog in the spec file.\n\n# The referred file will be read and directly put after the %changelog section\n",
        "Line" : 1131,
        "CharPositionInLine" : 2
      },
      "84" : {
        "Text" : "# CPACK_RPM_SPEC_MORE_DEFINE\n\n# This is a generated spec rpm file spaceholder\n",
        "Line" : 1144,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# Now we may create the RPM build tree structure\n",
        "Line" : 1152,
        "CharPositionInLine" : 2
      },
      "86" : {
        "Text" : "# Prepare RPM build tree\n",
        "Line" : 1155,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "# it seems rpmbuild can't handle spaces in the path\n\n# neither escaping (as below) nor putting quotes around the path seem to help\n\n#string(REGEX REPLACE \" \" \"\\\\\\\\ \" CPACK_RPM_DIRECTORY \"${CPACK_TOPLEVEL_DIRECTORY}\")\n",
        "Line" : 1164,
        "CharPositionInLine" : 2
      },
      "88" : {
        "Text" : "# In component case, put CPACK_ABSOLUTE_DESTINATION_FILES_<COMPONENT>\n\n#                   into CPACK_ABSOLUTE_DESTINATION_FILES_INTERNAL\n\n#         otherwise, put CPACK_ABSOLUTE_DESTINATION_FILES\n\n# This must be done BEFORE the CPACK_ABSOLUTE_DESTINATION_FILES_INTERNAL handling\n",
        "Line" : 1171,
        "CharPositionInLine" : 2
      },
      "89" : {
        "Text" : "# In component case, set CPACK_RPM_USER_FILELIST_INTERNAL with CPACK_RPM_<COMPONENT>_USER_FILELIST.\n",
        "Line" : 1192,
        "CharPositionInLine" : 2
      },
      "90" : {
        "Text" : "# Handle user specified file line list in CPACK_RPM_USER_FILELIST_INTERNAL\n\n# Remove those files from CPACK_ABSOLUTE_DESTINATION_FILES_INTERNAL\n\n#                      or CPACK_RPM_INSTALL_FILES,\n\n# hence it must be done before these auto-generated lists are processed.\n",
        "Line" : 1207,
        "CharPositionInLine" : 2
      },
      "91" : {
        "Text" : "# Create CMake list from CPACK_RPM_INSTALL_FILES\n",
        "Line" : 1216,
        "CharPositionInLine" : 4
      },
      "92" : {
        "Text" : "# Rebuild the user list file\n",
        "Line" : 1235,
        "CharPositionInLine" : 6
      },
      "93" : {
        "Text" : "# Remove from CPACK_RPM_INSTALL_FILES and CPACK_ABSOLUTE_DESTINATION_FILES_INTERNAL\n",
        "Line" : 1238,
        "CharPositionInLine" : 6
      },
      "94" : {
        "Text" : "# ABSOLUTE destination files list may not exists at all\n",
        "Line" : 1240,
        "CharPositionInLine" : 6
      },
      "95" : {
        "Text" : "# Rebuild CPACK_RPM_INSTALL_FILES\n",
        "Line" : 1246,
        "CharPositionInLine" : 4
      },
      "96" : {
        "Text" : "# Remove trailing space\n",
        "Line" : 1259,
        "CharPositionInLine" : 4
      },
      "97" : {
        "Text" : "# Transform endline separated - string into CMake List\n",
        "Line" : 1261,
        "CharPositionInLine" : 4
      },
      "98" : {
        "Text" : "# Remove unnecessary quotes\n",
        "Line" : 1263,
        "CharPositionInLine" : 4
      },
      "99" : {
        "Text" : "# Remove ABSOLUTE install file from INSTALL FILE LIST\n",
        "Line" : 1265,
        "CharPositionInLine" : 4
      },
      "100" : {
        "Text" : "# Rebuild INSTALL_FILES\n",
        "Line" : 1267,
        "CharPositionInLine" : 4
      },
      "101" : {
        "Text" : "# Build ABSOLUTE_INSTALL_FILES\n",
        "Line" : 1272,
        "CharPositionInLine" : 4
      },
      "102" : {
        "Text" : "# reset vars in order to avoid leakage of value(s) from one component to another\n",
        "Line" : 1282,
        "CharPositionInLine" : 4
      },
      "103" : {
        "Text" : "# handle cases where path contains extra slashes (e.g. /a//b/ instead of\n\n# /a/b)\n",
        "Line" : 1299,
        "CharPositionInLine" : 4
      },
      "104" : {
        "Text" : "# this part is only required by components packaging - with monolithic\n\n# packages we can be certain that there are no other components present\n\n# so CPACK_RPM_DEBUGINFO_SINGLE_PACKAGE is a noop\n",
        "Line" : 1309,
        "CharPositionInLine" : 8
      },
      "105" : {
        "Text" : "# only add current package files to debuginfo list if debuginfo\n\n# generation is enabled for current package\n",
        "Line" : 1313,
        "CharPositionInLine" : 10
      },
      "106" : {
        "Text" : "# if there were other components/groups so we need to move files from them\n\n# to current component otherwise those files won't be found\n",
        "Line" : 1329,
        "CharPositionInLine" : 8
      },
      "107" : {
        "Text" : "# skip current component\n",
        "Line" : 1337,
        "CharPositionInLine" : 12
      },
      "108" : {
        "Text" : "# check that we are not overriding an existing file that doesn't\n\n# match the file that we want to copy\n",
        "Line" : 1350,
        "CharPositionInLine" : 12
      },
      "109" : {
        "Text" : "# Prepare install files\n",
        "Line" : 1410,
        "CharPositionInLine" : 2
      },
      "110" : {
        "Text" : "# set default user and group\n",
        "Line" : 1418,
        "CharPositionInLine" : 2
      },
      "111" : {
        "Text" : "# set default file and dir permissions\n",
        "Line" : 1429,
        "CharPositionInLine" : 2
      },
      "112" : {
        "Text" : "# The name of the final spec file to be used by rpmbuild\n",
        "Line" : 1442,
        "CharPositionInLine" : 2
      },
      "113" : {
        "Text" : "# Print out some debug information if we were asked for that\n",
        "Line" : 1445,
        "CharPositionInLine" : 2
      },
      "114" : {
        "Text" : "#\n\n# USER generated/provided spec file handling.\n\n#\n",
        "Line" : 1458,
        "CharPositionInLine" : 2
      },
      "115" : {
        "Text" : "# We can have a component specific spec file.\n",
        "Line" : 1462,
        "CharPositionInLine" : 2
      },
      "116" : {
        "Text" : "# old file name format for back compatibility\n",
        "Line" : 1479,
        "CharPositionInLine" : 6
      },
      "117" : {
        "Text" : "# this is the main component so ignore the component filename part\n",
        "Line" : 1484,
        "CharPositionInLine" : 8
      },
      "118" : {
        "Text" : "# else example:\n\n#set(CPACK_RPM_FILE_NAME \"${CPACK_RPM_PACKAGE_NAME}-${CPACK_RPM_PACKAGE_VERSION}-${CPACK_RPM_PACKAGE_RELEASE}-${CPACK_RPM_PACKAGE_ARCHITECTURE}.rpm\")\n",
        "Line" : 1490,
        "CharPositionInLine" : 4
      },
      "119" : {
        "Text" : "# source rpm\n",
        "Line" : 1503,
        "CharPositionInLine" : 32
      },
      "120" : {
        "Text" : "# Disable debuginfo packages - srpm generates invalid packages due to\n\n# releasing control to cpack to generate binary packages.\n\n# Note however that this doesn't prevent cpack to generate debuginfo\n\n# packages when run from srpm with --rebuild.\n",
        "Line" : 1516,
        "CharPositionInLine" : 4
      },
      "121" : {
        "Text" : "# %{?_smp_mflags} -> -j option\n",
        "Line" : 1532,
        "CharPositionInLine" : 22
      },
      "122" : {
        "Text" : "# binary rpm with single debuginfo package\n",
        "Line" : 1598,
        "CharPositionInLine" : 30
      },
      "123" : {
        "Text" : "# binary rpm\n",
        "Line" : 1637,
        "CharPositionInLine" : 10
      },
      "124" : {
        "Text" : "# find generated spec file and take its name\n",
        "Line" : 1639,
        "CharPositionInLine" : 6
      },
      "125" : {
        "Text" : "# We should generate a USER spec file template:\n\n#  - either because the user asked for it : CPACK_RPM_GENERATE_USER_BINARY_SPECFILE_TEMPLATE\n\n#  - or the user did not provide one : NOT CPACK_RPM_USER_BINARY_SPECFILE\n",
        "Line" : 1648,
        "CharPositionInLine" : 4
      },
      "126" : {
        "Text" : "# Stop here if we were asked to only generate a template USER spec file\n\n# The generated file may then be used as a template by user who wants\n\n# to customize their own spec file.\n",
        "Line" : 1744,
        "CharPositionInLine" : 4
      },
      "127" : {
        "Text" : "# After that we may either use a user provided spec file\n\n# or generate one using appropriate variables value.\n",
        "Line" : 1752,
        "CharPositionInLine" : 2
      },
      "128" : {
        "Text" : "# User may have specified SPECFILE just use it\n",
        "Line" : 1755,
        "CharPositionInLine" : 4
      },
      "129" : {
        "Text" : "# The user provided file is processed for @var replacement\n",
        "Line" : 1757,
        "CharPositionInLine" : 4
      },
      "130" : {
        "Text" : "# No User specified spec file, will use the generated spec file\n",
        "Line" : 1760,
        "CharPositionInLine" : 4
      },
      "131" : {
        "Text" : "# Note the just created file is processed for @var replacement\n",
        "Line" : 1762,
        "CharPositionInLine" : 4
      },
      "132" : {
        "Text" : "# generate package\n",
        "Line" : 1766,
        "CharPositionInLine" : 30
      },
      "133" : {
        "Text" : "# Now call rpmbuild using the SPECFILE\n",
        "Line" : 1768,
        "CharPositionInLine" : 6
      },
      "134" : {
        "Text" : "# find generated rpm files and take their names\n",
        "Line" : 1794,
        "CharPositionInLine" : 4
      },
      "135" : {
        "Text" : "# check if other files have to be renamed\n",
        "Line" : 1826,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 136
    },
    "deps/src/cmake-3.13.4/Modules/Internal/CPack/CPackWIX.cmake" : {
      "ObjectId" : "d1875f23c9731dc6f4b58e0bc933ebe1cfb75da5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Internal/CPack/CPackZIP.cmake" : {
      "ObjectId" : "f619de400cf68ec76727972adee4d069692e69f4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Internal/FeatureTesting.cmake" : {
      "ObjectId" : "de336e7089bbe9482b75ce6b895a7ab91c1a711e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This toolchain requires use of the language standard flag\n\n# when linking in order to use the matching standard library.\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/KDE3Macros.cmake" : {
      "ObjectId" : "f2d47928efa16e3c720827bad819b2e7a389a45d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# See FindKDE3.cmake for documentation.\n\n#\n\n# this file contains the following macros:\n\n# KDE3_ADD_DCOP_SKELS\n\n# KDE3_ADD_DCOP_STUBS\n\n# KDE3_ADD_MOC_FILES\n\n# KDE3_ADD_UI_FILES\n\n# KDE3_ADD_KCFG_FILES\n\n# KDE3_AUTOMOC\n\n# KDE3_INSTALL_LIBTOOL_FILE\n\n# KDE3_CREATE_FINAL_FILE\n\n# KDE3_ADD_KPART\n\n# KDE3_ADD_KDEINIT_EXECUTABLE\n\n# KDE3_ADD_EXECUTABLE\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#neundorf@kde.org\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#create the kidl and skeletion file for dcop stuff\n\n#usage: KDE_ADD_COP_SKELS(foo_SRCS ${dcop_headers})\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#create the moc files and add them to the list of sources\n\n#usage: KDE_ADD_MOC_FILES(foo_SRCS ${moc_headers})\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#create the implementation files from the ui files and add them to the list of sources\n\n#usage: KDE_ADD_UI_FILES(foo_SRCS ${ui_files})\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# if \"SKIP_AUTOMOC\" is set to true, we will not handle this file here.\n\n# here. this is required to make bouic work correctly:\n\n# we need to add generated .cpp files to the sources (to compile them),\n\n# but we cannot let automoc handle them, as the .cpp files don't exist yet when\n\n# cmake is run for the very first time on them -> however the .cpp files might\n\n# exist at a later run. at that time we need to skip them, so that we don't add two\n\n# different rules for the same moc file\n",
        "Line" : 204,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "#            set(_header ${CMAKE_CURRENT_SOURCE_DIR}/${_basename}.h)\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# only used internally by KDE3_INSTALL_ICONS\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# if the string doesn't match the pattern, the result is the full string, so all three have the same content\n",
        "Line" : 246,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "#      message(STATUS \"icon: ${_current_ICON} size: ${_size} group: ${_group} name: ${_name}\" )\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# first the png icons\n",
        "Line" : 279,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "# and now the svg icons\n",
        "Line" : 290,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "#   file(APPEND ${_laname} \"dependency_libs='${${_target}_LIB_DEPENDS}'\\n\")\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# option(KDE3_ENABLE_FINAL \"Enable final all-in-one compilation\")\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#is the first argument is \"WITH_PREFIX\" then keep the standard \"lib\" prefix, otherwise SET the prefix empty\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#    if (KDE3_ENABLE_FINAL)\n\n#       KDE3_CREATE_FINAL_FILE(${_target_NAME}_final.cpp ${_first_SRC} ${ARGN})\n\n#       add_library(${_target_NAME} MODULE  ${_target_NAME}_final.cpp)\n\n#    else ()\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#    endif ()\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#    if (KDE3_ENABLE_FINAL)\n\n#       KDE3_CREATE_FINAL_FILE(${_target_NAME}_final.cpp ${ARGN})\n\n#       add_library(kdeinit_${_target_NAME} SHARED  ${_target_NAME}_final.cpp)\n\n#    else ()\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#    endif ()\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#    if (KDE3_ENABLE_FINAL)\n\n#       KDE3_CREATE_FINAL_FILE(${_target_NAME}_final.cpp ${ARGN})\n\n#       add_executable(${_target_NAME} ${_target_NAME}_final.cpp)\n\n#    else ()\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#    endif ()\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "deps/src/cmake-3.13.4/Modules/MacroAddFileDependencies.cmake" : {
      "ObjectId" : "db26814788c51f0996587f0485a1eae600cf84fd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# MacroAddFileDependencies\n\n# ------------------------\n\n#\n\n# MACRO_ADD_FILE_DEPENDENCIES(<_file> depend_files...)\n\n#\n\n# Using the macro MACRO_ADD_FILE_DEPENDENCIES() is discouraged.  There\n\n# are usually better ways to specify the correct dependencies.\n\n#\n\n# MACRO_ADD_FILE_DEPENDENCIES(<_file> depend_files...) is just a\n\n# convenience wrapper around the OBJECT_DEPENDS source file property.\n\n# You can just use set_property(SOURCE <file> APPEND PROPERTY\n\n# OBJECT_DEPENDS depend_files) instead.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/MatlabTestsRedirect.cmake" : {
      "ObjectId" : "fc36fc3b4c7f921612eced37b3a78d1439119aa9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is an undocumented internal helper for the FindMatlab\n\n# module ``matlab_add_unit_test`` command.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Usage: cmake\n\n#   -Dtest_timeout=180\n\n#   -Doutput_directory=\n\n#   -Dadditional_paths=\"\"\n\n#   -Dno_unittest_framework=\"\"\n\n#   -DMatlab_PROGRAM=matlab_exe_location\n\n#   -DMatlab_ADDITIONAL_STARTUP_OPTIONS=\"\"\n\n#   -Dtest_name=name_of_the_test\n\n#   -Dcustom_Matlab_test_command=\"\"\n\n#   -Dcmd_to_run_before_test=\"\"\n\n#   -Dunittest_file_to_run\n\n#   -P FindMatlab_TestsRedirect.cmake\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If timeout is -1, then do not put a timeout on the execute_process\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if the working directory is not specified then default\n\n# to the output_directory because the log file will go there\n\n# if the working_directory is specified it will override the\n\n# output_directory\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Do not use a full path to log file.  Depend on the fact that the log file\n\n# is always going to go in the working_directory.  This is because matlab\n\n# on unix is a shell script that does not handle spaces in the logfile path.\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# we do not want the output twice\n",
        "Line" : 90,
        "CharPositionInLine" : 15
      },
      "7" : {
        "Text" : "# print the output in any case.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if we put FATAL_ERROR here, the file is indented.\n",
        "Line" : 101,
        "CharPositionInLine" : 74
      },
      "CommentCount" : 9
    },
    "deps/src/cmake-3.13.4/Modules/Platform/AIX-Clang-C.cmake" : {
      "ObjectId" : "0e8a1c07577e75c216a1e397655ffa8f60404d9d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/AIX-Clang-CXX.cmake" : {
      "ObjectId" : "6b9110e3196eb62b6208e1ef250b364a030e6959",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/AIX-GNU-ASM.cmake" : {
      "ObjectId" : "c256df6f9216145de82cd8869b92ae3f0598e7dd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/AIX-GNU-C.cmake" : {
      "ObjectId" : "f49d528b32f8e765fe2327267741d65a2b05f3cf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/AIX-GNU-CXX.cmake" : {
      "ObjectId" : "d047801025063c039d291ffaf2c2e8bb747da858",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/AIX-GNU-Fortran.cmake" : {
      "ObjectId" : "07772a716cef62c7f1f017b664bf3b6841e69f75",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/AIX-GNU.cmake" : {
      "ObjectId" : "0abbb6175fbf9623d330d089e61cf5a88a1d738d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# By default, runtime linking is enabled. All shared objects specified on the command line\n\n# will be listed, even if there are no symbols referenced, in the output file.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Platform/AIX-VisualAge-C.cmake" : {
      "ObjectId" : "67b3171dc444419ffc40d7d83553a49864ecb266",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/AIX-VisualAge-CXX.cmake" : {
      "ObjectId" : "7894d244fa0548b4a24f744c7ca13a83bf326b57",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/AIX-VisualAge-Fortran.cmake" : {
      "ObjectId" : "19e59d6663e00e7f7e55126942ee2936b5cd86bb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/AIX-XL-ASM.cmake" : {
      "ObjectId" : "ea0944ba4cbb2280087d895b18a931deeb3825f1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/AIX-XL-C.cmake" : {
      "ObjectId" : "cbfd58b3d7943a57b5c3449bcfa470ea23bcbb37",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -qhalt=e       = Halt on error messages (rather than just severe errors)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/AIX-XL-CXX.cmake" : {
      "ObjectId" : "78baef5df9f23fe1c96c361d653ecb15382fd285",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -qhalt=s       = Halt on severe error messages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/AIX-XL-Fortran.cmake" : {
      "ObjectId" : "6d4f6559f014999e978e72e563a9c440e6b26563",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/AIX-XL.cmake" : {
      "ObjectId" : "b3078fffb9c0edfbde4904fee714252bb5be44b6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# By default, runtime linking is enabled. All shared objects specified on the command line\n\n# will be listed, even if there are no symbols referenced, in the output file.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -shared\n",
        "Line" : 22,
        "CharPositionInLine" : 69
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/Platform/AIX.cmake" : {
      "ObjectId" : "551a995aaa9725ac4567099bee661d85eec612da",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# lib\n\n# .so\n",
        "Line" : 1,
        "CharPositionInLine" : 48
      },
      "1" : {
        "Text" : "# RPATH support on AIX is called libpath.  By default the runtime\n\n# libpath is paths specified by -L followed by /usr/lib and /lib.  In\n\n# order to prevent the -L paths from being used we must force use of\n\n# -Wl,-blibpath:/usr/lib:/lib whether RPATH support is on or not.\n\n# When our own RPATH is to be added it may be inserted before the\n\n# \"always\" paths.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Files named \"libfoo.a\" may actually be shared libraries.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# since .a can be a static or shared library on AIX, we can not do this.\n\n# at some point if we wanted it, we would have to figure out if a .a is\n\n# static or shared, then we could add this back:\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Initialize C link type selection flags.  These flags are used when\n\n# building a shared library, shared module, or executable that links\n\n# to other libraries to select whether to use the static or shared\n\n# versions of the libraries.\n\n#foreach(type SHARED_LIBRARY SHARED_MODULE EXE)\n\n#  set(CMAKE_${type}_LINK_STATIC_C_FLAGS \"-bstatic\")\n\n#  set(CMAKE_${type}_LINK_DYNAMIC_C_FLAGS \"-bdynamic\")\n\n#endforeach()\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/Platform/ARTOS-GNU-C.cmake" : {
      "ObjectId" : "fe8d782e3db67cbda5164cc761ad4b50aa6754fe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define ARTOS to select proper behaviour and tell preprocessor to accept C++ style comments.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ac doesn't support -g properly and doesn't support the normal gcc optimization options. Just use the defaults set by ac.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Most projects expect the stdio functions to be available.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Platform/ARTOS.cmake" : {
      "ObjectId" : "f9365d6ce0e73615ae2720f6eb5e47726db2aea0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Support for ARTOS RTOS (locamation.com)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ARTOS does not support shared libs\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android-Clang-ASM.cmake" : {
      "ObjectId" : "6448da6b723c3e30940c6a591710a55048daf656",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android-Clang-C.cmake" : {
      "ObjectId" : "9e16911ad4adf487e8180abc0ab4d9c0b73d8469",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android-Clang-CXX.cmake" : {
      "ObjectId" : "85d5088800cd640b3f42628ac310cb20160f4647",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android-Clang.cmake" : {
      "ObjectId" : "9ed1e01f95e449e8e89048c5561a593a50f1855c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Support for NVIDIA Nsight Tegra Visual Studio Edition was previously\n\n# implemented in the CMake VS IDE generators.  Avoid interfering with\n\n# that functionality for now.  Later we may try to integrate this.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Commonly used Android toolchain files that pre-date CMake upstream support\n\n# set CMAKE_SYSTEM_VERSION to 1.  Avoid interfering with them.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The NDK toolchain configuration files at:\n\n#\n\n#   <ndk>/[build/core/]toolchains/*-clang*/setup.mk\n\n#\n\n# contain logic to set LLVM_TRIPLE for Clang-based toolchains for each target.\n\n# We need to produce the same target here to produce compatible binaries.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android-Common.cmake" : {
      "ObjectId" : "f8b934693cc3b2fb1a72831297539b1988470158",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# <ndk>/build/core/definitions.mk\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Forward Android-specific platform variables to try_compile projects.\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# The NDK toolchain configuration files at:\n\n#\n\n#   <ndk>/[build/core/]toolchains/*/setup.mk\n\n#\n\n# contain logic to set TARGET_CFLAGS and TARGET_LDFLAGS (and debug/release\n\n# variants) to tell their build system what flags to pass for each ABI.\n\n# We need to produce the same flags here to produce compatible binaries.\n\n# We initialize these variables here and set them in the compiler-specific\n\n# modules that include this one.  Then we use them in the macro below when\n\n# it is called.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# <ndk>/build/core/definitions.mk appends the sysroot's include directory\n\n# explicitly at the end of the command-line include path so that it\n\n# precedes the toolchain's builtin include directories.  This is\n\n# necessary so that Android API-version-specific headers are preferred\n\n# over those in the toolchain's `include-fixed` directory (which cannot\n\n# possibly match all versions).\n\n#\n\n# Do not do this for a standalone toolchain because it is already\n\n# tied to a specific API version.\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android-Determine-C.cmake" : {
      "ObjectId" : "c7d1d1512c5de77e32d6bd839534dad7b3bcf99b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android-Determine-CXX.cmake" : {
      "ObjectId" : "3a3de880a488d370150a5d86b9706c7fc7270a6d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android-Determine.cmake" : {
      "ObjectId" : "bb42eedde4ffaea4eabe431d9d449cf6b9ae1fdd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# When CMAKE_SYSTEM_NAME is \"Android\", CMakeDetermineSystem loads this module.\n\n# This module detects platform-wide information about the Android target\n\n# in order to store it in \"CMakeSystem.cmake\".\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Support for NVIDIA Nsight Tegra Visual Studio Edition was previously\n\n# implemented in the CMake VS IDE generators.  Avoid interfering with\n\n# that functionality for now.  Later we may try to integrate this.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Commonly used Android toolchain files that pre-date CMake upstream support\n\n# set CMAKE_SYSTEM_VERSION to 1.  Avoid interfering with them.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if IN_LIST\n",
        "Line" : 22,
        "CharPositionInLine" : 30
      },
      "5" : {
        "Text" : "# If the user provided CMAKE_SYSROOT for us, extract information from it.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find the Android NDK.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TODO: Search harder for the NDK or standalone toolchain.\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Try to read the API level from the toolchain launcher.\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# The compiler launcher does not know __ANDROID_API__.  Assume this\n\n# is not unified headers and look for it in the api-level.h header.\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Select an API.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# https://developer.android.com/ndk/guides/abis.html\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Validate inputs.\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Select an ABI.\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# https://developer.android.com/ndk/guides/application_mk.html\n\n# Default is the oldest ARM ABI.\n",
        "Line" : 265,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Lookup the available ABIs among all toolchains.\n",
        "Line" : 268,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Choose the oldest among the available arm ABIs.\n",
        "Line" : 283,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Select a processor.\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# If the user specified both an ABI and a processor then they might not match.\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Unified headers exist so we use them by default.\n",
        "Line" : 325,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Unified headers do not exist so use the deprecated headers.\n",
        "Line" : 328,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Save the Android-specific information in CMakeSystem.cmake.\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Select an ARM variant.\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Report the chosen architecture.\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android-GNU-C.cmake" : {
      "ObjectId" : "78a6a50061b11bdbeaa4e33176fb35739c0b377e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android-GNU-CXX.cmake" : {
      "ObjectId" : "d30d0ff4e07485988c5535b4531a33f2e35646a1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android-GNU.cmake" : {
      "ObjectId" : "e1f79ca034fee41ea7cff18d53f51d64dd2340f5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Support for NVIDIA Nsight Tegra Visual Studio Edition was previously\n\n# implemented in the CMake VS IDE generators.  Avoid interfering with\n\n# that functionality for now.  Later we may try to integrate this.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Commonly used Android toolchain files that pre-date CMake upstream support\n\n# set CMAKE_SYSTEM_VERSION to 1.  Avoid interfering with them.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android-Initialize.cmake" : {
      "ObjectId" : "a434f90ea387af34cad12bbfdbd4a4581fece63d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# When CMAKE_SYSTEM_NAME is \"Android\", CMakeSystemSpecificInitialize loads this\n\n# module.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Support for NVIDIA Nsight Tegra Visual Studio Edition was previously\n\n# implemented in the CMake VS IDE generators.  Avoid interfering with\n\n# that functionality for now.  Later we may try to integrate this.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Commonly used Android toolchain files that pre-date CMake upstream support\n\n# set CMAKE_SYSTEM_VERSION to 1.  Avoid interfering with them.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android.cmake" : {
      "ObjectId" : "3d69733bb21f5dc6513c42440db177cfe196c82d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Android has soname, but binary names must end in \".so\" so we cannot append\n\n# a version number.  Also we cannot portably represent symlinks on the host.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Android reportedly ignores RPATH, and we cannot predict the install\n\n# location anyway.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Nsight Tegra Visual Studio Edition takes care of\n\n# prefixing library names with '-l'.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/Determine-Compiler-NDK.cmake" : {
      "ObjectId" : "5f2cc524e55624a0ea9db5d4f9c5cd576e3c3486",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# In Android NDK releases there is build system toolchain selection logic in\n\n# these files:\n\n#\n\n# * <ndk>/build/core/init.mk\n\n# * <ndk>/build/core/setup-toolchain.mk\n\n# * <ndk>/[build/core/]toolchains/<toolchain>/{config.mk,setup.mk}\n\n#\n\n# We parse information out of the ``config.mk`` and ``setup.mk`` files below.\n\n#\n\n# There is also a \"toolchains\" directory with the prebuilt toolchains themselves:\n\n#\n\n# * <triple-or-arch>-<gcc-version>/prebuilt/<host>/bin/<triple>-gcc(.exe)?\n\n#   The gcc compiler to be invoked.\n\n#\n\n# * llvm*/prebuilt/<host>/bin/clang\n\n#   The clang compiler to be invoked with flags:\n\n#     -target <triple>\n\n#     -gcc-toolchain <ndk>/toolchains/<triple-or-arch>-<gcc-version>\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Glob available toolchains in the NDK, restricted by any version request.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If we can find any gcc toolchains then use one by default.\n\n# Otherwise we look for clang toolchains (e.g. NDK r18+).\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Find the newest toolchain version matching the ABI.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check that the toolchain matches the ABI.\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Check the version.\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# already the latest possible\n",
        "Line" : 82,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Verify that we have a suitable toolchain.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# For clang toolchains we still need to find a gcc toolchain.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Parse the toolchain setup.mk file to extract information we need.\n\n# Their content is not standardized across toolchains or NDK versions,\n\n# so we match known cases.  Note that the parsing is stateful across\n\n# lines because we need to substitute for some Make variable references.\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# We just matched the toolchain prefix with no Make variable references.\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# For clang toolchains we need to find more information.\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# We just matched the gcc toolchain version number.  Save it for later.\n",
        "Line" : 151,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# We just matched the gcc toolchain name with a version number placeholder, so substitute it.\n\n# The gcc toolchain version number will have already been extracted from a TOOLCHAIN_VERSION line.\n",
        "Line" : 154,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# We just matched the gcc toolchain name without version number.  Save it for later.\n",
        "Line" : 158,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# We just matched the toolchain prefix with a name placholder, so substitute it.\n\n# The gcc toolchain name will have already been extracted without version number from a TOOLCHAIN_NAME line.\n",
        "Line" : 161,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# We just matched the llvm prebuilt binary toolchain version number.  Save it for later.\n",
        "Line" : 165,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# We just matched the llvm prebuilt binary toolchain directory name with a version number placeholder,\n\n# so substitute it. The llvm prebuilt binary toolchain version number will have already been extracted\n\n# from a LLVM_VERSION line.\n",
        "Line" : 168,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# We just matched the llvm prebuilt binary toolchain directory name.\n",
        "Line" : 173,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# We just matched a placeholder for the name followed by a version number.\n\n# The gcc toolchain name will have already been extracted without version number from a TOOLCHAIN_NAME line.\n\n# Substitute for the placeholder to get the full gcc toolchain name.\n",
        "Line" : 176,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# We just matched the full gcc toolchain name without placeholder.\n",
        "Line" : 181,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# Fall back to parsing the version and prefix from the tool name.\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Identify the host platform.\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Help CMakeFindBinUtils locate things.\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# _ANDROID_TOOL_PREFIX should now match `gcc -dumpmachine`.\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/Determine-Compiler-Standalone.cmake" : {
      "ObjectId" : "4c1ac1fe4a6a87c10b9d38ab2f37eb8e02763142",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Help CMakeFindBinUtils locate things.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# _ANDROID_TOOL_PREFIX should now match `gcc -dumpmachine`.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/Determine-Compiler.cmake" : {
      "ObjectId" : "a03ebcc29fabd1c3667eacff5bbbeee81aa57224",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Support for NVIDIA Nsight Tegra Visual Studio Edition was previously\n\n# implemented in the CMake VS IDE generators.  Avoid interfering with\n\n# that functionality for now.  Later we may try to integrate this.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Commonly used Android toolchain files that pre-date CMake upstream support\n\n# set CMAKE_SYSTEM_VERSION to 1.  Avoid interfering with them.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Identify the host platform.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Save the Android-specific information in CMake${lang}Compiler.cmake.\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/abi-arm64-v8a-Clang.cmake" : {
      "ObjectId" : "f4717d5f608053436f1cfa15e233cfabfa6e5d83",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# <ndk>/build/core/toolchains/aarch64-linux-android-clang/setup.mk\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Suppress -Wl,-z,nocopyreloc flag on arm64-v8a\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/abi-arm64-v8a-GNU.cmake" : {
      "ObjectId" : "b71a67462587605b04e69beb189ff9377758e22e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# <ndk>/build/core/toolchains/aarch64-linux-android-4.9/setup.mk\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Suppress -Wl,-z,nocopyreloc flag on arm64-v8a\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/abi-armeabi-Clang.cmake" : {
      "ObjectId" : "b857bd3734e058a75a69a20627ad58ffdc584f31",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# <ndk>/build/core/toolchains/arm-linux-androideabi-clang/setup.mk\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/abi-armeabi-GNU.cmake" : {
      "ObjectId" : "33e8b314e153cd23f18a0b9ef34316e186ea127a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# <ndk>/build/core/toolchains/arm-linux-androideabi-4.9/setup.mk\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/abi-armeabi-v6-Clang.cmake" : {
      "ObjectId" : "a7412f5bd7ab98d65b8e166408db7ec99e604092",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# <ndk>/build/core/toolchains/arm-linux-androideabi-clang/setup.mk\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/abi-armeabi-v6-GNU.cmake" : {
      "ObjectId" : "1fda184b69e5bcf439791d4daae761e09cc735fe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# <ndk>/build/core/toolchains/arm-linux-androideabi-4.9/setup.mk\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/abi-armeabi-v7a-Clang.cmake" : {
      "ObjectId" : "e2ab58b32ffe47a4ea1d2f035d730db35845b770",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# <ndk>/build/core/toolchains/arm-linux-androideabi-clang/setup.mk\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/abi-armeabi-v7a-GNU.cmake" : {
      "ObjectId" : "b7c328d880ab0b2d422c4fbb115f8b857a4e0913",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# <ndk>/build/core/toolchains/arm-linux-androideabi-4.9/setup.mk\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/abi-common-Clang.cmake" : {
      "ObjectId" : "60251709de668b455ec65187fe9f57468576da19",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\" -Wno-invalid-command-line-argument\"\n\n#\" -Wno-unused-command-line-argument\"\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/abi-common-GNU.cmake" : {
      "ObjectId" : "40d829f4804dab26c0e955e3081b53151602dcdf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/abi-common.cmake" : {
      "ObjectId" : "10fb8972d27f862cc10d2e6d8560079bab9d2000",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/abi-mips-Clang.cmake" : {
      "ObjectId" : "73adddecfb2294eaba199f0f3dae7740815cf9bd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# <ndk>/build/core/toolchains/mipsel-linux-android-clang/setup.mk\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/abi-mips-GNU.cmake" : {
      "ObjectId" : "982ad4658413c55a4c29f70cb75390ba8c2582c2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# <ndk>/build/core/toolchains/mipsel-linux-android-4.9/setup.mk\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/abi-mips64-Clang.cmake" : {
      "ObjectId" : "603f1b2090d33b070da6b531fcff576468d31f80",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# <ndk>/build/core/toolchains/mips64el-linux-android-clang/setup.mk\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/abi-mips64-GNU.cmake" : {
      "ObjectId" : "a1bc2c2fbb65a2ba6da50554b64a6ad511cb94bc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# <ndk>/build/core/toolchains/mips64el-linux-android-4.9/setup.mk\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/abi-x86-Clang.cmake" : {
      "ObjectId" : "fe7eacef5d583deaa01dbfaf5b3d1f3985922989",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# <ndk>/build/core/toolchains/x86-clang/setup.mk\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/abi-x86-GNU.cmake" : {
      "ObjectId" : "76ea5ca13209bac84da76764ee9877da6f769660",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# <ndk>/build/core/toolchains/x86-4.9/setup.mk\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/abi-x86_64-Clang.cmake" : {
      "ObjectId" : "3cbcd491fb1e72ba28632a28751a0dcebdb7ece7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# <ndk>/build/core/toolchains/x86_64-clang/setup.mk\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/abi-x86_64-GNU.cmake" : {
      "ObjectId" : "441bdcdbbc277feb9c69ffab9d67eaaa8f7ed358",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# <ndk>/build/core/toolchains/x86_64-4.9/setup.mk\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/ndk-stl-c++.cmake" : {
      "ObjectId" : "1cafd1fd74b2692cea95118e43a0abb1c141db02",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# <ndk>/sources/cxx-stl/llvm-libc++/Android.mk\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the include directory.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# r12 and below\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# r13 and above\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Add the library file.\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/ndk-stl-c++_shared.cmake" : {
      "ObjectId" : "33894082c3609565f2166192ef00b5a055b8f1a5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/ndk-stl-c++_static.cmake" : {
      "ObjectId" : "061a5c2928616f609446be6002206b63d096963d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# provided by toolchain\n",
        "Line" : 7,
        "CharPositionInLine" : 62
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/ndk-stl-gabi++.cmake" : {
      "ObjectId" : "d3b9e45af0d689c16db79e8ba6d31d0199044a76",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# <ndk>/sources/cxx-stl/gabi++/Android.mk\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/ndk-stl-gabi++_shared.cmake" : {
      "ObjectId" : "314c1e0c06bb0a432e1ce290fca113c3745deb50",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/ndk-stl-gabi++_static.cmake" : {
      "ObjectId" : "f4a1d3ce20db6a6df399b61ed85be970fbb94ac8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/ndk-stl-gnustl.cmake" : {
      "ObjectId" : "46cedc601a3b15c1394e245e34665e44cc1f4f81",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# <ndk>/sources/cxx-stl/gnu-libstdc++/Android.mk\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/ndk-stl-gnustl_shared.cmake" : {
      "ObjectId" : "f20cc4d31bc75f856476399ab364df2bb649c42e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/ndk-stl-gnustl_static.cmake" : {
      "ObjectId" : "af4cc2aa9938d361b5e138e96d2e40c746e8c3b5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/ndk-stl-none.cmake" : {
      "ObjectId" : "45122f71a52026a6ff25e6320ae38f2b89c03ae7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/ndk-stl-stlport.cmake" : {
      "ObjectId" : "efad33bdcbd1a78b904e5b4b27712142f2eb7a1e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# <ndk>/sources/cxx-stl/stlport/Android.mk\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/ndk-stl-stlport_shared.cmake" : {
      "ObjectId" : "2b5846b689d955e66692204161d4b2cfd00b6986",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/ndk-stl-stlport_static.cmake" : {
      "ObjectId" : "bf603077eecaf0550297531a8e793f4e5dc4501b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Android/ndk-stl-system.cmake" : {
      "ObjectId" : "7d86a40aec4603374d1ef0eb4d2d7a9b77db5a34",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# <ndk>/android-ndk-r11c/sources/cxx-stl/system/Android.mk\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-Absoft-Fortran.cmake" : {
      "ObjectId" : "8caa2026c443902391c40dabd70414fa12db2cff",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Runs gcc under the hood.\n",
        "Line" : 4,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-AppleClang-C.cmake" : {
      "ObjectId" : "f45ccf4134d8c5658dee6a3d1d2c25f5848228a2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-AppleClang-CXX.cmake" : {
      "ObjectId" : "1128204cf427b0507ed2b36a2ae94876079f5d63",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-Clang-C.cmake" : {
      "ObjectId" : "4d0dc82943554f7529fd384766da078ea5b82e81",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-Clang-CXX.cmake" : {
      "ObjectId" : "6c1ddc104da15376dd42fb7ae1477fd7ec4c1594",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-Clang.cmake" : {
      "ObjectId" : "0681bfb0596a06179f1b9d17493a0bb549f0c3a9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# also tell linker to print verbose output\n",
        "Line" : 9,
        "CharPositionInLine" : 46
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-GNU-C.cmake" : {
      "ObjectId" : "5481c99d844c43d23676d1e5db3bfcfaaf2e2571",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-GNU-CXX.cmake" : {
      "ObjectId" : "727f7264102596445e8b6613c3f6046fc918f524",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-GNU-Fortran.cmake" : {
      "ObjectId" : "2f53603cbc22d3573047fd052364f48ec3ad49be",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-GNU.cmake" : {
      "ObjectId" : "0eb8168310087649b72fb49480293adc2ab82f9a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# also tell linker to print verbose output\n",
        "Line" : 9,
        "CharPositionInLine" : 46
      },
      "3" : {
        "Text" : "# GNU does not have -shared on OS X\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-Intel-C.cmake" : {
      "ObjectId" : "95bb270d3dc9bac4adeea737dd05056453d0dc13",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-Intel-CXX.cmake" : {
      "ObjectId" : "b87e512dfcc8c16ae317df97980dc1d4d74a88c6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-Intel-Fortran.cmake" : {
      "ObjectId" : "e54e23762304baed7c1b7a994a6fd56930968d9d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-Intel.cmake" : {
      "ObjectId" : "a854be9962abeaed8315f2c24a020101310a2e2b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# also tell linker to print verbose output\n",
        "Line" : 9,
        "CharPositionInLine" : 46
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-NAG-Fortran.cmake" : {
      "ObjectId" : "8d3e741c14dbb30d64d5e4f7de6f697947084a05",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Runs gcc under the hood.\n",
        "Line" : 4,
        "CharPositionInLine" : 41
      },
      "2" : {
        "Text" : "# Need -fpp explicitly on case-insensitive filesystem.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-NVIDIA-CUDA.cmake" : {
      "ObjectId" : "bec3948390115622b34e103c2956b5e431ea075a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-PGI-C.cmake" : {
      "ObjectId" : "1e117247b10cc94617b820be2a432eb5f5b3e376",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-PGI-CXX.cmake" : {
      "ObjectId" : "aa5daf7dd41d3e1ba7fef6c82b8e8089cf6ae714",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-PGI-Fortran.cmake" : {
      "ObjectId" : "1e3e4b1a7b5ab8e32d7e7e7753a45648d24884f7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-PGI.cmake" : {
      "ObjectId" : "8d343b7d16c27a4199e5f565ec876c4224975276",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-VisualAge-C.cmake" : {
      "ObjectId" : "7fa603231a815bc4b3e1966cb2225eb8d6b32e6b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-VisualAge-CXX.cmake" : {
      "ObjectId" : "12dd34740f0c8e730e02a6a4cac5bc7d43e14ffb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-XL-C.cmake" : {
      "ObjectId" : "2aeb132d15d5f65f4e2298aa95f2298eabc292e0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable shared library versioning.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -qhalt=e       = Halt on error messages (rather than just severe errors)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Apple-XL-CXX.cmake" : {
      "ObjectId" : "f8e1906a8f0e56000c07f6e414440e5426c2e710",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable shared library versioning.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -qhalt=e       = Halt on error messages (rather than just severe errors)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BSDOS.cmake" : {
      "ObjectId" : "54a156b4db31ec2343264d69248072131f63225d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BeOS.cmake" : {
      "ObjectId" : "ef811bd9c3b37d964543d7434da53ea5941fc4dd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneL.cmake" : {
      "ObjectId" : "082e46cae25c3e56480ab7091a2e5cb126415532",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#the compute nodes on BlueGene/L don't support shared libs\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -pic\n",
        "Line" : 4,
        "CharPositionInLine" : 48
      },
      "2" : {
        "Text" : "# -shared\n\n# +s, flag for exe link to use shared lib\n\n# -rpath\n\n# : or empty\n",
        "Line" : 5,
        "CharPositionInLine" : 50
      },
      "3" : {
        "Text" : "# lib\n\n# .a\n",
        "Line" : 13,
        "CharPositionInLine" : 48
      },
      "4" : {
        "Text" : "# .exe\n",
        "Line" : 15,
        "CharPositionInLine" : 41
      },
      "5" : {
        "Text" : "# when using IBM xlc we probably don't want to link to -lgcc\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# when using the IBM xlC we probably don't want to link to -lgcc\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneP-base.cmake" : {
      "ObjectId" : "fe95b42e95852d2d3db93c329cfe1a918c49579f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# BlueGeneP base platform file.\n\n#\n\n# NOTE: Do not set your platform to \"BlueGeneP-base\".  This file is included\n\n# by the real platform files.  Use one of these two platforms instead:\n\n#\n\n#     BlueGeneP-dynamic  For dynamically linked builds\n\n#     BlueGeneP-static   For statically linked builds\n\n#\n\n# This platform file tries its best to adhere to the behavior of the MPI\n\n# compiler wrappers included with the latest BG/P drivers.\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# For BGP builds, we're cross compiling, but we don't want to re-root things\n\n# (e.g. with CMAKE_FIND_ROOT_PATH) because users may have libraries anywhere on\n\n# the shared filesystems, and this may lie outside the root.  Instead, we set the\n\n# system directories so that the various system BGP CNK library locations are\n\n# searched first.  This is not the clearest thing in the world, given IBM's driver\n\n# layout, but this should cover all the standard ones.\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# default comm layer (used by mpi compiler wrappers)\n\n# DCMF, other lower-level comm libraries\n\n# other low-level stuff\n\n# CNK python installation directory\n\n# CNK Linux image -- standard runtime libs, pthread, etc.\n",
        "Line" : 28,
        "CharPositionInLine" : 58
      },
      "4" : {
        "Text" : "#\n\n# This adds directories that find commands should specifically ignore for cross compiles.\n\n# Most of these directories are the includeand lib directories for the frontend on BG/P systems.\n\n# Not ignoring these can cause things like FindX11 to find a frontend PPC version mistakenly.\n\n# We use this on BG instead of re-rooting because backend libraries are typically strewn about\n\n# the filesystem, and we can't re-root ALL backend libraries to a single place.\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Indicate that this is a unix-like system\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Library prefixes, suffixes, extra libs.\n\n#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# lib\n\n# .a\n",
        "Line" : 61,
        "CharPositionInLine" : 43
      },
      "8" : {
        "Text" : "# lib\n\n# .so\n\n# .exe\n",
        "Line" : 64,
        "CharPositionInLine" : 43
      },
      "9" : {
        "Text" : "#\n\n# This macro needs to be called for dynamic library support.  Unfortunately on BGP,\n\n# We can't support both static and dynamic links in the same platform file.  The\n\n# dynamic link platform file needs to call this explicitly to set up dynamic linking.\n\n#\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Flags for XL compilers if we explicitly detected XL\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Assume flags for GNU compilers (if the ID is GNU *or* anything else).\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Both toolchains use the GNU linker on BG/P, so these options are shared.\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# +s, flag for exe link to use shared lib\n\n# : or empty\n",
        "Line" : 96,
        "CharPositionInLine" : 58
      },
      "14" : {
        "Text" : "#\n\n# This macro needs to be called for static builds.  Right now it just adds -Wl,-relax\n\n# to the link line.\n\n#\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneP-dynamic-GNU-C.cmake" : {
      "ObjectId" : "349187087f00fef765b96ff064055c1797a14738",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneP-dynamic-GNU-CXX.cmake" : {
      "ObjectId" : "d3c946b741bc285c17ff40da568c7c5e10acb2ed",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneP-dynamic-GNU-Fortran.cmake" : {
      "ObjectId" : "9db75be7a1716dd9bb44b885c82bd211148efb85",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneP-dynamic-XL-C.cmake" : {
      "ObjectId" : "918ee7090167e0d2845092b6bf64f16df622b687",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -qhalt=e       = Halt on error messages (rather than just severe errors)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneP-dynamic-XL-CXX.cmake" : {
      "ObjectId" : "cfefb0b33d8a6c1c6a013097b5cad4ad9d90dabb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -qhalt=s       = Halt on severe error messages\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneP-dynamic-XL-Fortran.cmake" : {
      "ObjectId" : "9c295bd2776597d5ff446c7bd4b16743bcb7f6b8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneP-dynamic.cmake" : {
      "ObjectId" : "daebab380f7ff8be63f52dab7b126501f9dd5458",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneP-static-GNU-C.cmake" : {
      "ObjectId" : "7c6079466390a875d8e98e1171e19a7aabea95cc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneP-static-GNU-CXX.cmake" : {
      "ObjectId" : "edceaad2e3b196b5f643b4dc6dda930e3da20fbb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneP-static-GNU-Fortran.cmake" : {
      "ObjectId" : "6b2265ad0033a3e78cca8589dd4976f6e321a1fd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneP-static-XL-C.cmake" : {
      "ObjectId" : "7d4fc13e2710a6b04b74b86616f672b7f2eb40d1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -qhalt=e       = Halt on error messages (rather than just severe errors)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneP-static-XL-CXX.cmake" : {
      "ObjectId" : "1df276ef59e66901b4fece1eb59e3a92b8d8d60f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -qhalt=s       = Halt on severe error messages\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneP-static-XL-Fortran.cmake" : {
      "ObjectId" : "2bdb6d96c43e30104ea071d06706ec6b88dd05ca",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneP-static.cmake" : {
      "ObjectId" : "3675ed215b867baf71e8f61176a5c067c0397e1a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneQ-base.cmake" : {
      "ObjectId" : "5e56d8e2be85084419e969ae62182a27b770ca0a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Blue Gene/Q base platform file.\n\n#\n\n# NOTE: Do not set your platform to \"BlueGeneQ-base\".  This file is\n\n# included by the real platform files.  Use one of these two platforms\n\n# instead:\n\n#\n\n#     BlueGeneQ-dynamic  For dynamically linked executables\n\n#     BlueGeneQ-static   For statically linked executables\n\n#\n\n# The platform you choose doesn't affect whether or not you can build\n\n# shared or static libraries -- it ONLY changs whether exeuatbles are linked\n\n# statically or dynamically.\n\n#\n\n# This platform file tries its best to adhere to the behavior of the MPI\n\n# compiler wrappers included with the latest BG/P drivers.\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# This adds directories that find commands should specifically ignore\n\n# for cross compiles.  Most of these directories are the includeand\n\n# lib directories for the frontend on BG/P systems.  Not ignoring\n\n# these can cause things like FindX11 to find a frontend PPC version\n\n# mistakenly.  We use this on BG instead of re-rooting because backend\n\n# libraries are typically strewn about the filesystem, and we can't\n\n# re-root ALL backend libraries to a single place.\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Indicate that this is a unix-like system\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Library prefixes, suffixes, extra libs.\n\n#\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# lib\n\n# .a\n",
        "Line" : 51,
        "CharPositionInLine" : 43
      },
      "6" : {
        "Text" : "# lib\n\n# .so\n\n# .exe\n",
        "Line" : 54,
        "CharPositionInLine" : 43
      },
      "7" : {
        "Text" : "#\n\n# BG/Q supports dynamic libraries regardless of whether we're building\n\n# static or dynamic *executables*.\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# For BGQ builds, we're cross compiling, but we don't want to re-root things\n\n# (e.g. with CMAKE_FIND_ROOT_PATH) because users may have libraries anywhere on\n\n# the shared filesystems, and this may lie outside the root.  Instead, we set the\n\n# system directories so that the various system BG CNK library locations are\n\n# searched first.  This is not the clearest thing in the world, given IBM's driver\n\n# layout, but this should cover all the standard ones.\n\n#\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Need to use the version of the comm lib compiled with the right compiler.\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# default comm layer (used by mpi compiler wrappers)\n\n# PAMI, other lower-level comm libraries\n\n# CNK python installation directory\n\n# CNK Linux image -- standard runtime libs, pthread, etc.\n",
        "Line" : 83,
        "CharPositionInLine" : 64
      },
      "11" : {
        "Text" : "# Add all the system include paths.\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Ensure that the system directories are included with the regular compilers, as users will expect this\n\n# to do the same thing as the MPI compilers, which add these flags.\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#\n\n# Code below does setup for shared libraries.  That this is done\n\n# regardless of whether the platform is static or dynamic -- you can make\n\n# shared libraries even if you intend to make static executables, you just\n\n# can't make a dynamic executable if you use the static platform file.\n\n#\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Flags for XL compilers if we explicitly detected XL\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Assume flags for GNU compilers (if the ID is GNU *or* anything else).\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Both toolchains use the GNU linker on BG/P, so these options are shared.\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# +s, flag for exe link to use shared lib\n\n# : or empty\n",
        "Line" : 128,
        "CharPositionInLine" : 58
      },
      "18" : {
        "Text" : "#\n\n# This macro needs to be called for dynamic library support.  Unfortunately on BG,\n\n# We can't support both static and dynamic links in the same platform file.  The\n\n# dynamic link platform file needs to call this explicitly to set up dynamic linking.\n\n#\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# For dynamic executables, need to provide special BG/Q arguments.\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#\n\n# This macro needs to be called for static builds.  Right now it just adds -Wl,-relax\n\n# to the link line.\n\n#\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# For static executables, use default link settings.\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneQ-dynamic-GNU-C.cmake" : {
      "ObjectId" : "67583047eb7b1b0587ecd8a1c171598ca62ee239",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneQ-dynamic-GNU-CXX.cmake" : {
      "ObjectId" : "5d40f9fb350bdbca207fca9141d3c7c86b44ce7a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneQ-dynamic-GNU-Fortran.cmake" : {
      "ObjectId" : "6105999182f7107c3e9d91bf2a8c534b5130fa09",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneQ-dynamic-XL-C.cmake" : {
      "ObjectId" : "c51dacb639374c386dd58a99c5964e3ea2621764",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -qhalt=e       = Halt on error messages (rather than just severe errors)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneQ-dynamic-XL-CXX.cmake" : {
      "ObjectId" : "5dbc8363c28608290d3b6ebb53504639149c7325",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -qhalt=s       = Halt on severe error messages\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneQ-dynamic-XL-Fortran.cmake" : {
      "ObjectId" : "a6ac03b40f466fb7aee26d034c1e688bbdd8ccdf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneQ-dynamic.cmake" : {
      "ObjectId" : "9440a3e9338726d29b82ccf0794cfe30a9d27b9d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneQ-static-GNU-C.cmake" : {
      "ObjectId" : "5fdc25cef5d2f294cc549e570daf432d649f5dc5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneQ-static-GNU-CXX.cmake" : {
      "ObjectId" : "ad7c092225b51e1d63806799ddb1e33efd905877",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneQ-static-GNU-Fortran.cmake" : {
      "ObjectId" : "f32d1d4a60e5c471316bc2dba5a130869ad7b4e1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneQ-static-XL-C.cmake" : {
      "ObjectId" : "67cd57d803db810fa905a28c8255e6b3896d0358",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -qhalt=e       = Halt on error messages (rather than just severe errors)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneQ-static-XL-CXX.cmake" : {
      "ObjectId" : "a171e7feccd719f203902d56bed387a06c1138dc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -qhalt=s       = Halt on severe error messages\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneQ-static-XL-Fortran.cmake" : {
      "ObjectId" : "c7fbb44200670657c2a9e36c45d04c911892a188",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/BlueGeneQ-static.cmake" : {
      "ObjectId" : "79cd391cefe0dc77e90ef1ea652f4a6c978f4ec0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/CYGWIN-Clang-C.cmake" : {
      "ObjectId" : "e8343a442ff74082ef14d15501e74a31079b2603",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/CYGWIN-Clang-CXX.cmake" : {
      "ObjectId" : "67775deabfc1ca1ebc2e36c754c216fd95790dc4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/CYGWIN-Determine-CXX.cmake" : {
      "ObjectId" : "bf37f79030f691b0465f83565f66a17a3651ff69",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Exclude C++ compilers differing from C compiler only by case\n\n# because this platform may have a case-insensitive filesystem.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/CYGWIN-GNU-C.cmake" : {
      "ObjectId" : "9eb0ecf29999507eeaa688604b5fd8b954626067",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/CYGWIN-GNU-CXX.cmake" : {
      "ObjectId" : "2603dcd49c61fb88bd3c5d9eb3fd8f61dc6c6cf0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/CYGWIN-GNU-Fortran.cmake" : {
      "ObjectId" : "d3b49b6f95414bb1c7fa1d9d6d68bb59d3327b67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/CYGWIN-GNU.cmake" : {
      "ObjectId" : "784c8c676d22b4fbe6e48fcc5c64b7914c2adbb1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: Is -Wl,--enable-auto-import now always default?\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Binary link rules.\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# No -fPIC on cygwin\n",
        "Line" : 27,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# Initialize C link type selection flags.  These flags are used when\n\n# building a shared library, shared module, or executable that links\n\n# to other libraries to select whether to use the static or shared\n\n# versions of the libraries.\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# TODO: Is -Wl,--enable-auto-import now always default?\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/Platform/CYGWIN-windres.cmake" : {
      "ObjectId" : "7d787dddf33ba258b62ae5ff241bcc2ca1b5c2b6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/CYGWIN.cmake" : {
      "ObjectId" : "9b897bd4738fc411361612ac6b9f1d77ace605e6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pass WIN32 legacy setting to scripts.\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# .exe\n",
        "Line" : 54,
        "CharPositionInLine" : 45
      },
      "2" : {
        "Text" : "# Modules have a different default prefix that shared libs.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Shared libraries on cygwin can be named with their version number.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Windows API on Cygwin\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Windows API on Cygwin\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Catamount.cmake" : {
      "ObjectId" : "7e9e02171c6028c9e88edf7627f33827818c0617",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Catamount, which runs on the compute nodes of Cray machines, e.g. RedStorm, doesn't support shared libs\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -pic\n",
        "Line" : 4,
        "CharPositionInLine" : 48
      },
      "2" : {
        "Text" : "# -shared\n\n# +s, flag for exe link to use shared lib\n\n# -rpath\n\n# : or empty\n",
        "Line" : 5,
        "CharPositionInLine" : 50
      },
      "3" : {
        "Text" : "# lib\n\n# .a\n",
        "Line" : 13,
        "CharPositionInLine" : 48
      },
      "4" : {
        "Text" : "# .exe\n",
        "Line" : 15,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/Platform/CrayLinuxEnvironment.cmake" : {
      "ObjectId" : "a1a3d3f10c5756feda701a01edd5c1f878f3293e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compute Node Linux doesn't quite work the same as native Linux so all of this\n\n# needs to be custom.  We use the variables defined through Cray's environment\n\n# modules to set up the right paths for things.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Guard against multiple messages\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# All cray systems are x86 CPUs and have been for quite some time\n\n# Note: this may need to change in the future with 64-bit ARM\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Don't override shared lib support if it's already been set and possibly\n\n# overridden elsewhere by the CrayPrgEnv module\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Note: Much of this is pulled from UnixPaths.cmake but adjusted to the Cray\n\n# environment accordingly\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get the install directory of the running cmake to the search directories\n\n# CMAKE_ROOT is CMAKE_INSTALL_PREFIX/share/cmake, so we need to go two levels up\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Note: Some Cray's have the SYSROOT_DIR variable defined, pointing to a copy\n\n# of the NIDs userland.  If so, then we'll use it.  Otherwise, just assume\n\n# the userland from the login node is ok\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# List common installation prefixes.  These will be used for all\n\n# search types.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Standard\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# CMake install location\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Project install destination.\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# User-supplied staging prefix.\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Compute the intersection of several lists\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Enable use of lib64 search path variants by default.\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-Absoft-Fortran.cmake" : {
      "ObjectId" : "8caa2026c443902391c40dabd70414fa12db2cff",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Runs gcc under the hood.\n",
        "Line" : 4,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-AppleClang-C.cmake" : {
      "ObjectId" : "3216b29094aa1a59489a64a4bcb208cc5a1ca10c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-AppleClang-CXX.cmake" : {
      "ObjectId" : "3fedf8c076a280ace6e9689657f205e11e259ae5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-Clang-C.cmake" : {
      "ObjectId" : "0a1502ea9b036a01332278413d1727e7e44529ca",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-Clang-CXX.cmake" : {
      "ObjectId" : "f8e8d888e7da9a60e75115d61f3e180633f41ebd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-Clang.cmake" : {
      "ObjectId" : "a6661a849d30926b845e85f09a2a86bf3622f76b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# also tell linker to print verbose output\n",
        "Line" : 12,
        "CharPositionInLine" : 46
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-Determine-CXX.cmake" : {
      "ObjectId" : "bf37f79030f691b0465f83565f66a17a3651ff69",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Exclude C++ compilers differing from C compiler only by case\n\n# because this platform may have a case-insensitive filesystem.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-GNU-C.cmake" : {
      "ObjectId" : "efdfd0014aa00dfc471f96bf3e43a283e2b57df7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-GNU-CXX.cmake" : {
      "ObjectId" : "e3c2ea7c5707c11946980d302cb9d003d5263198",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-GNU-Fortran.cmake" : {
      "ObjectId" : "568d79b0c20112b89ca010f4e42363efde360d1b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-GNU.cmake" : {
      "ObjectId" : "9f9ef01cb4ff40e26d394077ec05a03b7d01652b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# also tell linker to print verbose output\n",
        "Line" : 12,
        "CharPositionInLine" : 46
      },
      "3" : {
        "Text" : "# GNU does not have -shared on OS X\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-Initialize.cmake" : {
      "ObjectId" : "3db77aacbbde312d8c9d8f20ca1036f54f47c146",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ask xcode-select where to find /Developer or fall back to ancient location.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save CMAKE_OSX_ARCHITECTURES from the environment.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# macOS, iOS, tvOS, and watchOS should lookup compilers from\n\n# Platform/Apple-${CMAKE_CXX_COMPILER_ID}-<LANG>\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# _CURRENT_OSX_VERSION - as a two-component string: 10.5, 10.6, ...\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# CMAKE_OSX_DEPLOYMENT_TARGET\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set cache variable - end user may change this during ccmake or cmake-gui configure.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# CMAKE_OSX_SYSROOT\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Use the existing value without further computation to choose a default.\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Use the value of SDKROOT from the environment.\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Find installed SDKs in either Xcode-4.3+ or pre-4.3 SDKs directory.\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Select SDK for current OSX version accounting for the known\n\n# specially named SDKs.\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# find the latest SDK\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# pick an SDK that works\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Assume developer files are in root (such as Xcode 4.5 command-line tools).\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Set cache variable - end user may change this during ccmake or cmake-gui configure.\n\n# Choose the type based on the current value.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Transform the cached value to something we can use.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# This is a path to the SDK.  Make sure it exists.\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Transform the sdk name into a path.\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# For non-Xcode generators use the path.\n",
        "Line" : 141,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 19
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-Intel-C.cmake" : {
      "ObjectId" : "81c630f4ad6190dcd2e6084a9c0ed89ced371a53",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-Intel-CXX.cmake" : {
      "ObjectId" : "90ae53be3251bc28cd7cef601ae0f2ca07b9c229",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-Intel-Fortran.cmake" : {
      "ObjectId" : "2299da9cec41116b600ba9ad8d76ba6fd7a3bbb2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-Intel.cmake" : {
      "ObjectId" : "dd33cec4b9e342648ff05bf01a0ddd935d14855d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# also tell linker to print verbose output\n",
        "Line" : 12,
        "CharPositionInLine" : 46
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-NAG-Fortran.cmake" : {
      "ObjectId" : "8d3e741c14dbb30d64d5e4f7de6f697947084a05",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Runs gcc under the hood.\n",
        "Line" : 4,
        "CharPositionInLine" : 41
      },
      "2" : {
        "Text" : "# Need -fpp explicitly on case-insensitive filesystem.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-PGI-C.cmake" : {
      "ObjectId" : "790919b08ef2926dd930843f73812934896eaa48",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-PGI-CXX.cmake" : {
      "ObjectId" : "ceaed71528d2d15a887aa4bc572a6dd9a247bd51",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-PGI-Fortran.cmake" : {
      "ObjectId" : "146807ba9bf2a9f69840975114f3bede43fb7417",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-PGI.cmake" : {
      "ObjectId" : "04479a8979098b3fdfa745a4a5cd787332157c1f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-VisualAge-C.cmake" : {
      "ObjectId" : "859914f86733b6adc5662c0df3eed7cff929e7cc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-VisualAge-CXX.cmake" : {
      "ObjectId" : "46c1005df91c2933d1bd59d105a1dbcbce7c41fe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-XL-C.cmake" : {
      "ObjectId" : "2aeb132d15d5f65f4e2298aa95f2298eabc292e0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable shared library versioning.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -qhalt=e       = Halt on error messages (rather than just severe errors)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin-XL-CXX.cmake" : {
      "ObjectId" : "f8e1906a8f0e56000c07f6e414440e5426c2e710",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable shared library versioning.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -qhalt=e       = Halt on error messages (rather than just severe errors)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Darwin.cmake" : {
      "ObjectId" : "727baa6e1a30bdcb6b9e7e842ba31dd502dc04e4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Darwin versions:\n\n#   6.x == Mac OSX 10.2 (Jaguar)\n\n#   7.x == Mac OSX 10.3 (Panther)\n\n#   8.x == Mac OSX 10.4 (Tiger)\n\n#   9.x == Mac OSX 10.5 (Leopard)\n\n#  10.x == Mac OSX 10.6 (Snow Leopard)\n\n#  11.x == Mac OSX 10.7 (Lion)\n\n#  12.x == Mac OSX 10.8 (Mountain Lion)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do not use the \"-Wl,-search_paths_first\" flag with the OSX 10.2 compiler.\n\n# Done this way because it is too early to do a TRY_COMPILE.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# More desirable, but does not work:\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#include(CheckCXXCompilerFlag)\n\n#CHECK_CXX_COMPILER_FLAG(\"-Wl,-search_paths_first\" HAVE_FLAG_SEARCH_PATHS_FIRST)\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Enable rpath support for 10.5 and greater where it is known to work.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# hack: if a new cmake (which uses CMAKE_INSTALL_NAME_TOOL) runs on an old build tree\n\n# (where install_name_tool was hardcoded) and where CMAKE_INSTALL_NAME_TOOL isn't in the cache\n\n# and still cmake didn't fail in CMakeFindBinUtils.cmake (because it isn't rerun)\n\n# hardcode CMAKE_INSTALL_NAME_TOOL here to install_name_tool, so it behaves as it did before, Alex\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable shared library versioning.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Xcode does not support -isystem yet.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Need to list dependent shared libraries on link line.  When building\n\n# with -isysroot (for universal binaries), the linker always looks for\n\n# dependent libraries under the sysroot.  Listing them on the link\n\n# line works around the problem.\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Set default framework search path flag for languages known to use a\n\n# preprocessor that may find headers in frameworks.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# default to searching for frameworks first\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Older OS X linkers do not report their framework search path\n\n# with -v but \"man ld\" documents the following locations.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Treat some paths as implicit so we do not override the SDK versions.\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Older OS X tools had more implicit paths.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# set up the default search directories for frameworks\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# add platform developer framework path if exists\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Xcode 6\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Xcode 5 iOS\n",
        "Line" : 147,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Xcode 5 OSX\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Warn about known system mis-configuration case.\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# default to searching for application bundles first\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# set up the default search directories for application bundles\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Xcode 4.3+\n\n# pre-4.3\n",
        "Line" : 190,
        "CharPositionInLine" : 42
      },
      "23" : {
        "Text" : "# Fink\n\n# MacPorts\n",
        "Line" : 213,
        "CharPositionInLine" : 13
      },
      "CommentCount" : 24
    },
    "deps/src/cmake-3.13.4/Modules/Platform/DragonFly.cmake" : {
      "ObjectId" : "c22677b9d4ff3120524d74f1687e1bf2e2228914",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DragonFly BSD was forked from FreeBSD and is still very close to it\n\n# http://www.dragonflybsd.org\n\n# see http://archive.netbsd.se/?ml=dfbsd-users&a=2007-07&m=4678361\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Euros.cmake" : {
      "ObjectId" : "4c7b18277e8bec35ad082ef50cf6b5cd3bae9c02",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Support for EUROS RTOS (euros-embedded.com)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# EUROS RTOS does not support shared libs\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/FreeBSD-Determine-CXX.cmake" : {
      "ObjectId" : "b594daeb0bd381d1898e2de4a9eb81dea5a89f26",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/FreeBSD.cmake" : {
      "ObjectId" : "ce4d3ce490d74cbdabbd8d11cadea328c64e93bb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -pic\n",
        "Line" : 4,
        "CharPositionInLine" : 53
      },
      "1" : {
        "Text" : "# -shared\n",
        "Line" : 5,
        "CharPositionInLine" : 57
      },
      "2" : {
        "Text" : "# +s, flag for exe link to use shared lib\n",
        "Line" : 6,
        "CharPositionInLine" : 50
      },
      "3" : {
        "Text" : "# -rpath\n",
        "Line" : 7,
        "CharPositionInLine" : 61
      },
      "4" : {
        "Text" : "# : or empty\n",
        "Line" : 8,
        "CharPositionInLine" : 51
      },
      "5" : {
        "Text" : "# Shared libraries with no builtin soname may not be linked safely by\n\n# specifying the file path.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Initialize C link type selection flags.  These flags are used when\n\n# building a shared library, shared module, or executable that links\n\n# to other libraries to select whether to use the static or shared\n\n# versions of the libraries.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Fuchsia.cmake" : {
      "ObjectId" : "896da7bfb099b0b0ad50332932c86c2fec883c2a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Shared libraries with no builtin soname may not be linked safely by\n\n# specifying the file path.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Initialize C link type selection flags.  These flags are used when\n\n# building a shared library, shared module, or executable that links\n\n# to other libraries to select whether to use the static or shared\n\n# versions of the libraries.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/GHS-MULTI-Initialize.cmake" : {
      "ObjectId" : "9b384df8ae4e7041b87d68adb264e64a6aa5cd40",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Setup Green Hills MULTI specific compilation information\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set GHS_OS_DIR if not set by user\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#get all directories in root directory\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#filter based on platform name\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/Platform/GHS-MULTI.cmake" : {
      "ObjectId" : "60a15c49f7234f6279b2026025486ec625576f66",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/GNU.cmake" : {
      "ObjectId" : "fac29a8fa4b28a7b4147e95b3b9082702872493e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GCC is the default compiler on GNU/Hurd.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Debian policy requires that shared libraries be installed without\n\n# executable permission.  Fedora policy requires that shared libraries\n\n# be installed with the executable permission.  Since the native tools\n\n# create shared libraries with execute permission in the first place a\n\n# reasonable policy seems to be to install with execute permission by\n\n# default.  In order to support debian packages we provide an option\n\n# here.  The option default is based on the current distribution, but\n\n# packagers can set it explicitly on the command line.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Store the decision variable in the cache.  This preserves any\n\n# setting the user provides on the command line.\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Store the decision variable as an internal cache entry to avoid\n\n# checking the platform every time.  This option is advanced enough\n\n# that only package maintainers should need to adjust it.  They are\n\n# capable of providing a setting on the command line.\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/Platform/GNUtoMS_lib.cmake" : {
      "ObjectId" : "ca9b0f8da923e12435f9313c3e9cfa084cf49f74",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Usage: cmake -Dlib=lib.bat -Ddef=out.def -Ddll=out.dll -Dimp=out.dll.a -P GNUtoMS_lib.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# .dll file name\n",
        "Line" : 2,
        "CharPositionInLine" : 41
      },
      "2" : {
        "Text" : "# .dll.a -> .lib\n",
        "Line" : 3,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Generic-ADSP-ASM.cmake" : {
      "ObjectId" : "ed729f4aef60b0d1b3b2da4be58ca4bd1464d837",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Generic-ADSP-C.cmake" : {
      "ObjectId" : "c8597cda71a0eb1ad563e6da2fc7391d471c7174",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Generic-ADSP-CXX.cmake" : {
      "ObjectId" : "d76bb66bd35a608f76973663ad4ac52abb66ed95",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Generic-ADSP-Common.cmake" : {
      "ObjectId" : "026f83c4892bceee191c8851e839db6461274e4d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# support for the Analog Devices toolchain for their DSPs\n\n# Raphael Cotty\" <raphael.cotty (AT) googlemail.com>\n\n#\n\n# it supports three architectures:\n\n# Blackfin\n\n# TS (TigerShark)\n\n# 21k (Sharc 21xxx)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if ADSP_PROCESSOR has not been set, but CMAKE_SYSTEM_PROCESSOR has,\n\n# assume that this is the processor name to use for the compiler\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# if ADSP_PROCESSOR_SILICIUM_REVISION has not been set, use \"none\"\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# this file is included from the C and CXX files, so handle both here\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# detect architecture\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# default if nothing matches\n",
        "Line" : 62,
        "CharPositionInLine" : 46
      },
      "6" : {
        "Text" : "# vdk support\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# loader support\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# BOOT_MODE: prom, flash, spi, spislave, UART, TWI, FIFO\n\n# FORMAT: hex, ASCII, binary, include\n\n# WIDTH: 8, 16\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Generic-SDCC-C.cmake" : {
      "ObjectId" : "aef4abf173b43b097382087d000cc040594d4aaa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file implements basic support for sdcc (http://sdcc.sourceforge.net/)\n\n# a free C compiler for 8 and 16 bit microcontrollers.\n\n# To use it either a toolchain file is required or cmake has to be run like this:\n\n# cmake -DCMAKE_C_COMPILER=sdcc -DCMAKE_SYSTEM_NAME=Generic <dir...>\n\n# Since sdcc doesn't support C++, C++ support should be disabled in the\n\n# CMakeLists.txt using the project() command:\n\n# project(my_project C)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# lib\n",
        "Line" : 12,
        "CharPositionInLine" : 45
      },
      "2" : {
        "Text" : "# .so\n",
        "Line" : 13,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : "# intel hex file\n",
        "Line" : 16,
        "CharPositionInLine" : 45
      },
      "4" : {
        "Text" : "# find sdcclib as CMAKE_AR\n\n# since cmake may already have searched for \"ar\", sdcclib has to\n\n# be searched with a different variable name (SDCCLIB_EXECUTABLE)\n\n# and must then be forced into the cache\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CMAKE_C_FLAGS_INIT and CMAKE_EXE_LINKER_FLAGS_INIT should be set in a CMAKE_SYSTEM_PROCESSOR file\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# compile a C file into an object file\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# link object files to an executable\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# needs sdcc 2.7.0 + sddclib from cvs\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# not supported by sdcc\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Generic.cmake" : {
      "ObjectId" : "fcb2699d63cab20692156ae51b59f68498a49454",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a platform definition file for platforms without\n\n# operating system, typically embedded platforms.\n\n# It is used when CMAKE_SYSTEM_NAME is set to \"Generic\"\n\n#\n\n# It is intentionally empty, since nothing is known\n\n# about the platform. So everything has to be specified\n\n# in the system/compiler files ${CMAKE_SYSTEM_NAME}-<compiler_basename>.cmake\n\n# and/or ${CMAKE_SYSTEM_NAME}-<compiler_basename>-${CMAKE_SYSTEM_PROCESSOR}.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# (embedded) targets without operating system usually don't support shared libraries\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To help the find_xxx() commands, set at least the following so CMAKE_FIND_ROOT_PATH\n\n# works at least for some simple cases:\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Platform/HP-UX-GNU-ASM.cmake" : {
      "ObjectId" : "613b8596e95db7403e3ecf7875f4a16447085eb9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/HP-UX-GNU-C.cmake" : {
      "ObjectId" : "5f9ac42005695dab872a033d510b4dafbd5324d3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/HP-UX-GNU-CXX.cmake" : {
      "ObjectId" : "ac725604d299b405b32a41782752bf17c134975a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/HP-UX-GNU-Fortran.cmake" : {
      "ObjectId" : "ee0181fe4ce4b32afa7e509a4169ac038f485f73",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/HP-UX-GNU.cmake" : {
      "ObjectId" : "699c4aa25c1e87ca8b18777beefed54059de81c9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/HP-UX-HP-ASM.cmake" : {
      "ObjectId" : "05c69e41bc1216baf8e2df69279c317d98247f56",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/HP-UX-HP-C.cmake" : {
      "ObjectId" : "7610383d30e0495aa09737ef4cc65ab481a977d5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/HP-UX-HP-CXX.cmake" : {
      "ObjectId" : "d37d2b055de85f7f998c2de8df70fa2d7e9bf46f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/HP-UX-HP-Fortran.cmake" : {
      "ObjectId" : "12007e422c02f039193956085006d536e462bdca",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/HP-UX-HP.cmake" : {
      "ObjectId" : "b301d17a8f11f55c7a487ba88620dc9717b527b5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/HP-UX.cmake" : {
      "ObjectId" : "ad953a6779b33ba976fad98c951d9f8e94b22735",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# .so\n",
        "Line" : 6,
        "CharPositionInLine" : 50
      },
      "1" : {
        "Text" : "# The HP linker needs to find transitive shared library dependencies\n\n# in the -L path.  Therefore the runtime path must be added to the\n\n# link line with -L flags.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Shared libraries with no builtin soname may not be linked safely by\n\n# specifying the file path.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set flags for gcc support\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Look in both 32-bit and 64-bit implict link directories, but tell\n\n# CMake not to pass the paths to the linker.  The linker will find the\n\n# library for the proper architecture.  In the future we should detect\n\n# which path will be used by the linker.  Since the pointer type size\n\n# CMAKE_SIZEOF_VOID_P is not set until after this file executes, we\n\n# would need to append to CMAKE_SYSTEM_LIBRARY_PATH at a later point\n\n# (after CMakeTest(LANG)Compiler.cmake runs for at least one language).\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Initialize C and CXX link type selection flags.  These flags are\n\n# used when building a shared library, shared module, or executable\n\n# that links to other libraries to select whether to use the static or\n\n# shared versions of the libraries.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Haiku.cmake" : {
      "ObjectId" : "dfc2664d33b0324d520492fcb76fc2d5d09976a9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# process only once\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Determine, if the C or C++ compiler is configured for a secondary\n\n# architecture. If so, that will change the search paths we set below. We check\n\n# whether the compiler's library search paths contain a\n\n# \"/boot/system/develop/lib/<subdir>/\", which we assume to be the secondary\n\n# architecture specific subdirectory and extract the name of the architecture\n\n# accordingly.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# First of all, find a C or C++ compiler we can run. The \"arg1\" is necessary\n\n# here for compilers such as \"distcc gcc-x86\" or \"ccache gcc-x86\"\n\n# TODO See CMakeDetermineCompilerId.cmake for some more things we may want to do.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Override CMAKE_*LIBRARY_ARCHITECTURE. This will cause FIND_LIBRARY to search\n\n# the libraries in the correct subdirectory first. It still isn't completely\n\n# correct, since the parent directories shouldn't be searched at all. The\n\n# primary architecture library might still be found, if there isn't one\n\n# installed for the secondary architecture or it is installed in a less\n\n# specific location.\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/Platform/IRIX.cmake" : {
      "ObjectId" : "12b0f3774dfd3833075390bdd5dd1f3957421bed",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -rpath\n",
        "Line" : 3,
        "CharPositionInLine" : 61
      },
      "1" : {
        "Text" : "# : or empty\n",
        "Line" : 4,
        "CharPositionInLine" : 50
      },
      "2" : {
        "Text" : "# set flags for gcc support\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Initialize C link type selection flags.  These flags are used when\n\n# building a shared library, shared module, or executable that links\n\n# to other libraries to select whether to use the static or shared\n\n# versions of the libraries.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The IRIX linker needs to find transitive shared library dependencies\n\n# in the -L path.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/Platform/IRIX64.cmake" : {
      "ObjectId" : "ee9b96e8954a517143819323ac3b8b48208330d0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -rpath\n",
        "Line" : 3,
        "CharPositionInLine" : 61
      },
      "1" : {
        "Text" : "# : or empty\n",
        "Line" : 4,
        "CharPositionInLine" : 50
      },
      "2" : {
        "Text" : "# Set default flags init.\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# If no -o32, -n32, or -64 flag is given, set a reasonable default.\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Check if this is a 64-bit CMake.\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Set initial flags to match cmake executable.\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Set remaining defaults.\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Initialize C link type selection flags.  These flags are used when\n\n# building a shared library, shared module, or executable that links\n\n# to other libraries to select whether to use the static or shared\n\n# versions of the libraries.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# The IRIX linker needs to find transitive shared library dependencies\n\n# in the -L path.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-Absoft-Fortran.cmake" : {
      "ObjectId" : "beb41a3b83ce1df37a6e0bd33813e537da516766",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Runs gcc under the hood.\n",
        "Line" : 1,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-CCur-Fortran.cmake" : {
      "ObjectId" : "ceecc2f691645983546f082ed22f01a5a29facb6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-Clang-C.cmake" : {
      "ObjectId" : "2a77d27104278d731fa1c37bbb3d76a8e23f8108",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-Clang-CXX.cmake" : {
      "ObjectId" : "9d9a4df66b116e28d7ea0cb0824ba44fae9c3b55",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-Determine-CXX.cmake" : {
      "ObjectId" : "b594daeb0bd381d1898e2de4a9eb81dea5a89f26",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-GNU-C.cmake" : {
      "ObjectId" : "84dd4926919fdd17fb14375b3546775744b0dfc6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-GNU-CXX.cmake" : {
      "ObjectId" : "4162335311b2f795497ad556710baa9f480e36ab",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-GNU-Fortran.cmake" : {
      "ObjectId" : "85e12265a5135d45eb4adeaeb62901398b843b31",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-GNU.cmake" : {
      "ObjectId" : "6878254ee1b5aad36479e91da84dce83fa906e50",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We pass this for historical reasons.  Projects may have\n\n# executables that use dlopen but do not set ENABLE_EXPORTS.\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-Intel-C.cmake" : {
      "ObjectId" : "449493a788fd761b3f04f779a0cc7c997966a455",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-Intel-CXX.cmake" : {
      "ObjectId" : "142b6cf5c6cf9d4d6a3cc53131119936b4456671",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-Intel-Fortran.cmake" : {
      "ObjectId" : "d8e94d0de6515e0bdcaca8a441ad52844ba1c864",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-Intel.cmake" : {
      "ObjectId" : "f712e2b5fa1d369ce826378b4c9f210e739c5881",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We pass this for historical reasons.  Projects may have\n\n# executables that use dlopen but do not set ENABLE_EXPORTS.\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# INTERPROCEDURAL_OPTIMIZATION\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-NAG-Fortran.cmake" : {
      "ObjectId" : "353bae6dddf5abc4bb5c560822082138913827a7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Runs gcc under the hood.\n",
        "Line" : 1,
        "CharPositionInLine" : 41
      },
      "1" : {
        "Text" : "# Need one \"-Wl,\" level to send flag through to gcc.\n\n# Use \"-Xlinker\" to get through gcc to real linker.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-PGI-C.cmake" : {
      "ObjectId" : "edf4f3f0e2a8a708e844757ac9cd0b5a3ba86a1c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-PGI-CXX.cmake" : {
      "ObjectId" : "d425f886e5a313b334280502efbaf5cb382879ae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-PGI-Fortran.cmake" : {
      "ObjectId" : "e8731a38437dcdf3db85ba4a462986e9d3649d74",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-PGI.cmake" : {
      "ObjectId" : "db032c2925687c4608bda668571d319fec31f93f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Shared library compile and link flags.\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-PathScale-C.cmake" : {
      "ObjectId" : "009f398fea7d5804836d53deda188bfbec50a449",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-PathScale-CXX.cmake" : {
      "ObjectId" : "b6a5771aabee57c6bb925cba988c6ea3a3c679af",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-PathScale-Fortran.cmake" : {
      "ObjectId" : "5662d3d88ab070eafb5c8efcb3d28b2b4a9d499f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-PathScale.cmake" : {
      "ObjectId" : "6070606599b5f2efc66452122451ff4beadc4265",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Shared library compile and link flags.\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-SunPro-CXX.cmake" : {
      "ObjectId" : "a07f1ec84be2f2b8bfcbf195472c792e52cd6a97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sun C++ 5.9 does not support -Wl, but Sun C++ 5.11 does not work without it.\n\n# Query the compiler flags to detect whether to use -Wl.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-TinyCC-C.cmake" : {
      "ObjectId" : "9409d8bc20e614eb6a0d834bee6eb2bc7b99b13f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-VisualAge-C.cmake" : {
      "ObjectId" : "0622b63c3d84f62ae478b8acbdeb9cb297a09963",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-VisualAge-CXX.cmake" : {
      "ObjectId" : "b878ba02ca1abf82ba811c1c0284b384bf0acf0b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-VisualAge-Fortran.cmake" : {
      "ObjectId" : "1939a8a2f0f05655139406939c42d292fabe8a10",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-XL-C.cmake" : {
      "ObjectId" : "d595e44f7610eb56c19cea78b5e48ef450b6d553",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-XL-CXX.cmake" : {
      "ObjectId" : "5ceb25591325450de8676a7994ebadf6089c0d9f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-XL-Fortran.cmake" : {
      "ObjectId" : "a878991311e6ca37a1a164061090cfed6d61c615",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux-como.cmake" : {
      "ObjectId" : "d1550d201c9378471b3aa50bfe3e479e290be8bb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# create a shared C++ library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# create a C++ static library\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Linux.cmake" : {
      "ObjectId" : "1f8c1b4c181defb00de77ae7f713710d98226565",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Shared libraries with no builtin soname may not be linked safely by\n\n# specifying the file path.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Initialize C link type selection flags.  These flags are used when\n\n# building a shared library, shared module, or executable that links\n\n# to other libraries to select whether to use the static or shared\n\n# versions of the libraries.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Debian policy requires that shared libraries be installed without\n\n# executable permission.  Fedora policy requires that shared libraries\n\n# be installed with the executable permission.  Since the native tools\n\n# create shared libraries with execute permission in the first place a\n\n# reasonable policy seems to be to install with execute permission by\n\n# default.  In order to support debian packages we provide an option\n\n# here.  The option default is based on the current distribution, but\n\n# packagers can set it explicitly on the command line.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Store the decision variable in the cache.  This preserves any\n\n# setting the user provides on the command line.\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Store the decision variable as an internal cache entry to avoid\n\n# checking the platform every time.  This option is advanced enough\n\n# that only package maintainers should need to adjust it.  They are\n\n# capable of providing a setting on the command line.\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Match multiarch library directory names.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Debian has lib32 and lib64 paths only for compatibility so they should not be\n\n# searched.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/Platform/MP-RAS.cmake" : {
      "ObjectId" : "4cbfd8e3e7ca2b23228cb0f4c64d9039fa09cc92",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Midipix.cmake" : {
      "ObjectId" : "54a156b4db31ec2343264d69248072131f63225d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/MirBSD.cmake" : {
      "ObjectId" : "7637f9bc773d49e1d9aca1fad7a5edd0c2f17584",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/NetBSD.cmake" : {
      "ObjectId" : "1004eb31045c9bfef837f29967407976a6f4d1e4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -pic\n",
        "Line" : 4,
        "CharPositionInLine" : 53
      },
      "1" : {
        "Text" : "# -shared\n",
        "Line" : 5,
        "CharPositionInLine" : 57
      },
      "2" : {
        "Text" : "# +s, flag for exe link to use shared lib\n",
        "Line" : 6,
        "CharPositionInLine" : 50
      },
      "3" : {
        "Text" : "# -rpath\n",
        "Line" : 7,
        "CharPositionInLine" : 61
      },
      "4" : {
        "Text" : "# : or empty\n",
        "Line" : 8,
        "CharPositionInLine" : 51
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/Platform/OSF1.cmake" : {
      "ObjectId" : "f2ad6129c03fe1c3499b9a93555a693f6c9b59a2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OSF/1 1.3 from OSF using ELF, and derivatives, including AD2\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# -pic\n\n# -pic\n",
        "Line" : 9,
        "CharPositionInLine" : 48
      },
      "2" : {
        "Text" : "# -shared\n",
        "Line" : 16,
        "CharPositionInLine" : 86
      },
      "3" : {
        "Text" : "# include $(CMAKE_BINARY_DIR)/...\n",
        "Line" : 30,
        "CharPositionInLine" : 36
      },
      "4" : {
        "Text" : "# include the gcc flags\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# use default OSF compiler flags\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/Platform/OpenBSD.cmake" : {
      "ObjectId" : "6466a0a01905ce77e183a64df581b7585c83b449",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On OpenBSD, the compile time linker does not share it's configuration with\n\n# the runtime linker.  This will extract the library search paths from the\n\n# system's ld.so.hints file which will allow CMake to set the appropriate\n\n# -rpath-link flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OpenBSD has no multilib\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# OpenBSD policy requires that shared libraries be installed without\n\n# executable permission.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Platform/OpenVMS.cmake" : {
      "ObjectId" : "b10da2388483a90a1b4496857503e22b0bf1cd84",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# .exe\n",
        "Line" : 8,
        "CharPositionInLine" : 45
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/QNX.cmake" : {
      "ObjectId" : "ebc4609a37ca8197b8100043cb46e071cfde365a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Shared libraries with no builtin soname may not be linked safely by\n\n# specifying the file path.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Initialize C link type selection flags.  These flags are used when\n\n# building a shared library, shared module, or executable that links\n\n# to other libraries to select whether to use the static or shared\n\n# versions of the libraries.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/RISCos.cmake" : {
      "ObjectId" : "570cd7b5b690fa3337f4ba975537d9bd89c8c17a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/SCO_SV.cmake" : {
      "ObjectId" : "1cb4b38a254cbfabfffc628ca6f81f5f0ced476c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/SINIX.cmake" : {
      "ObjectId" : "c37a113d38f6a8f4c1fc9141f2c7f5ec7b81a76c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/SunOS-GNU-C.cmake" : {
      "ObjectId" : "6a96c00eeab7def4f6ce9d8de9650ea66436a64e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/SunOS-GNU-CXX.cmake" : {
      "ObjectId" : "6b9f6fa86299f131bfdd9abbf5b5e059cb62b2c4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/SunOS-GNU-Fortran.cmake" : {
      "ObjectId" : "c6b188836157fef3a7d57f389f94b8804b156567",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/SunOS-GNU.cmake" : {
      "ObjectId" : "485f235338acae51bc46990a13f6f55092319f00",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Initialize C link type selection flags.  These flags are used when\n\n# building a shared library, shared module, or executable that links\n\n# to other libraries to select whether to use the static or shared\n\n# versions of the libraries.\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Platform/SunOS-PathScale-C.cmake" : {
      "ObjectId" : "2f78da1127aedfd8d829279f952f5591dbdb5380",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/SunOS-PathScale-CXX.cmake" : {
      "ObjectId" : "bb79d866004725064285cf37820db64002cb14f8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/SunOS-PathScale-Fortran.cmake" : {
      "ObjectId" : "3c202f795b9b52a3f85cdff30e5fc3cf8fa0c265",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/SunOS-PathScale.cmake" : {
      "ObjectId" : "25ead80d22975146c1a71183f4bc03a619a1b7fb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Shared library compile and link flags.\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/Platform/SunOS.cmake" : {
      "ObjectId" : "e19e89a27d1e498efbd42cdbe6dc3a1a529e1c0c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Sun linker needs to find transitive shared library dependencies\n\n# in the -L path.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Shared libraries with no builtin soname may not be linked safely by\n\n# specifying the file path.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Tru64.cmake" : {
      "ObjectId" : "54a156b4db31ec2343264d69248072131f63225d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/ULTRIX.cmake" : {
      "ObjectId" : "9db4c7c20f3d4883edc7a90fcb9a76f53528df68",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/UNIX_SV.cmake" : {
      "ObjectId" : "1ec96aea26fbe1c3605819f7fd834ea3a436ac69",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/UnixPaths.cmake" : {
      "ObjectId" : "328d3c6d3a520ceaf60113c9139436e0e410f3f2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Block multiple inclusion because \"CMakeCInformation.cmake\" includes\n\n# \"Platform/${CMAKE_SYSTEM_NAME}\" even though the generic module\n\n# \"CMakeSystemSpecificInformation.cmake\" already included it.\n\n# The extra inclusion is a work-around documented next to the include()\n\n# call, so this can be removed when the work-around is removed.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# also add the install directory of the running cmake to the search directories\n\n# CMAKE_ROOT is CMAKE_INSTALL_PREFIX/share/cmake, so we need to go two levels up\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List common installation prefixes.  These will be used for all\n\n# search types.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Standard\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# CMake install location\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Project install destination.\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# User-supplied staging prefix.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Non \"standard\" but common install prefixes\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List common include file locations not under the common prefixes.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# X11\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# X11\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Enable use of lib32 and lib64 search path variants by default.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "deps/src/cmake-3.13.4/Modules/Platform/UnixWare.cmake" : {
      "ObjectId" : "e649bd2a48d0e4a50dd3f32083ec002f191d8b26",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-Borland-C.cmake" : {
      "ObjectId" : "e2f76aacba22eb36bcc91d980a8f721620a7b7c6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-Borland-CXX.cmake" : {
      "ObjectId" : "809490f95b32c6cd414c664a51a87d7e5a33e6f9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-Clang-C.cmake" : {
      "ObjectId" : "d00710579f8ec088f48e08eb2912e406497d2bde",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-Clang-CXX.cmake" : {
      "ObjectId" : "f1d40f2653746d66de045d65c02660bab78760ea",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-Clang.cmake" : {
      "ObjectId" : "007ae530d21ea95014b509f947abd1abe851882a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-Determine-CXX.cmake" : {
      "ObjectId" : "bf37f79030f691b0465f83565f66a17a3651ff69",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Exclude C++ compilers differing from C compiler only by case\n\n# because this platform may have a case-insensitive filesystem.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-Embarcadero-C.cmake" : {
      "ObjectId" : "607fd4ebe23143f314f422be90849f87366f9c05",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-Embarcadero-CXX.cmake" : {
      "ObjectId" : "279a4def41f4cc3aa1a60f6d3d0af53d5935be3b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-Embarcadero.cmake" : {
      "ObjectId" : "48b936eb6da003d3e902ee61bfbf60536028cc99",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Borland target type flags (bcc32 -h -t):\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# -tW  GUI App         (implies -U__CONSOLE__)\n\n# -tWC Console App     (implies -D__CONSOLE__=1)\n\n# -tWD Build a DLL     (implies -D__DLL__=1 -D_DLL=1)\n\n# -tWM Enable threads  (implies -D__MT__=1 -D_MT=1)\n\n# -tWR Use DLL runtime (implies -D_RTLDLL, and '-tW' too!!)\n",
        "Line" : 15,
        "CharPositionInLine" : 23
      },
      "4" : {
        "Text" : "# Notes:\n\n#  - The flags affect linking so we pass them to the linker.\n\n#  - The flags affect preprocessing so we pass them to the compiler.\n\n#  - Since '-tWR' implies '-tW' we use '-tWR -tW-' instead.\n\n#  - Since '-tW-' disables '-tWD' we use '-tWR -tW- -tWD' for DLLs.\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Target is a console application\n\n# Target is a shared library\n\n# Target is multi-threaded\n\n# Target uses the dynamic RTL\n\n# Target is a Windows application\n",
        "Line" : 27,
        "CharPositionInLine" : 17
      },
      "6" : {
        "Text" : "# uncomment these out to debug makefiles\n\n#set(CMAKE_START_TEMP_FILE \"\")\n\n#set(CMAKE_END_TEMP_FILE \"\")\n\n#set(CMAKE_VERBOSE_MAKEFILE 1)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Borland cannot handle + in the file name, so mangle object file name\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# extra flags for a win32 exe\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# extra flags for a console app\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The Borland link tool does not support multiple concurrent\n\n# invocations within a single working directory.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Note: This variable is a ';' separated list\n",
        "Line" : 75,
        "CharPositionInLine" : 50
      },
      "12" : {
        "Text" : "# ... while this is a space separated string.\n",
        "Line" : 76,
        "CharPositionInLine" : 51
      },
      "13" : {
        "Text" : "# compile a source file into an object file\n\n# place <DEFINES> outside the response file because Borland refuses\n\n# to parse quotes from the response file.\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# \"implib -c -w <TARGET_IMPLIB> <TARGET>\"\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# place <DEFINES> outside the response file because Borland refuses\n\n# to parse quotes from the response file.\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Borland >= 5.6 allows -P option for cpp32, <= 5.5 does not\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Create a module library.\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Create an import library for another target.\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Create a shared library.\n\n# First create a module and then its import library.\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# create a static library\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Initial configuration flags.\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-Flang-Fortran.cmake" : {
      "ObjectId" : "a4b1cf14e1d06f93c2cf49c1d2a0e7fa1a12f9c6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-G95-Fortran.cmake" : {
      "ObjectId" : "af08008252ff6fba4ce5d962719c08a13c301f6b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-GNU-C-ABI.cmake" : {
      "ObjectId" : "1189263fade2643939b1758e3b6ca0053df917ec",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-GNU-C.cmake" : {
      "ObjectId" : "ecf89dc1b760b44982dfc98a7afe397c112312b1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-GNU-CXX-ABI.cmake" : {
      "ObjectId" : "f3c701c3c0ea0145a4efc8add03968641573a923",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-GNU-CXX.cmake" : {
      "ObjectId" : "23e6552292e82993158751b1b23a134dad069a2a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-GNU-Fortran-ABI.cmake" : {
      "ObjectId" : "179280b4d8ae6d624073c55fd9cc76de5bd3eec9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-GNU-Fortran.cmake" : {
      "ObjectId" : "b81b79679d99c27b5043840b84a0ec30974ddd14",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# gfortran on 64-bit MinGW defines __SIZEOF_POINTER__\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-GNU.cmake" : {
      "ObjectId" : "cfb325b9d8346ee8a5f8a81d44a832ef4b93471a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MinGW can also link to a MS .lib\n",
        "Line" : 23,
        "CharPositionInLine" : 42
      },
      "3" : {
        "Text" : "# Empty string: passing the file is enough\n",
        "Line" : 36,
        "CharPositionInLine" : 33
      },
      "4" : {
        "Text" : "# Check if GNU ld is too old to support @FILE syntax.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create archiving rules to support large object file lists for static libraries.\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Initialize C link type selection flags.  These flags are used when\n\n# building a shared library, shared module, or executable that links\n\n# to other libraries to select whether to use the static or shared\n\n# versions of the libraries.\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# No -fPIC on Windows\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# We prefer \"@\" for response files but it is not supported by gcc 3.\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# The GNU Fortran compiler reports an error:\n\n#   no input files; unwilling to write output files\n\n# when the response file is passed with \"-Wl,@\".\n",
        "Line" : 85,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Use \"-Wl,@\" to pass the response file to the linker.\n",
        "Line" : 90,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# The GNU 3.x compilers do not support response files (only linkers).\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Link libraries are generated only for the front-end.\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Use \"@\" to pass the response file to the front-end.\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Binary link rules.\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Support very long lists of object files.\n\n# TODO: check for which gcc versions this is still needed, not needed for gcc >= 4.4.\n\n# Ninja generator doesn't support this work around.\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# The gcc/collect2/ld toolchain does not use response files\n\n# internally so we cannot pass long object lists.  Instead pass\n\n# the object file list in a response file to the archiver to put\n\n# them in a temporary archive.  Hand the archive to the linker.\n",
        "Line" : 117,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Find MS development environment setup script for this architecture.\n\n# We need to use the MS Librarian tool (lib.exe).\n\n# Find the most recent version available.\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Query the VS Installer tool for locations of VS 2017 and above.\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# change the first number to the largest supported version\n",
        "Line" : 152,
        "CharPositionInLine" : 31
      },
      "20" : {
        "Text" : "# Create helper script to run lib.exe from MS environment.\n",
        "Line" : 191,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Teach CMake how to create a MS import library at link time.\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 22
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-Intel-ASM.cmake" : {
      "ObjectId" : "31d08c7adca78083c89a80d966612ea549a82d95",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-Intel-C.cmake" : {
      "ObjectId" : "767fec541a4187d62dcde86bfe2a9a0e1bcf2146",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-Intel-CXX.cmake" : {
      "ObjectId" : "84cd303ec6ab589188ac9e5bb2175ea1d3674683",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-Intel-Fortran.cmake" : {
      "ObjectId" : "3981a092b3b5d883377f0bd6d2e57a535c486fc4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-Intel.cmake" : {
      "ObjectId" : "96b1760abfe8e8059ac68c08bf44711102128dd9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-MSVC-C.cmake" : {
      "ObjectId" : "cbe1586e1e8cb130d44673887f0d0e17ad778fb7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-MSVC-CXX.cmake" : {
      "ObjectId" : "0e85005322dfd74e113da670ec6777e68dfbe6c8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-MSVC.cmake" : {
      "ObjectId" : "ae180ed7cb9768d6729e9d48c6ca3ab8d920d01c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# hack: if a new cmake (which uses CMAKE_LINKER) runs on an old build tree\n\n# (where link was hardcoded) and where CMAKE_LINKER isn't in the cache\n\n# and still cmake didn't fail in CMakeFindBinUtils.cmake (because it isn't rerun)\n\n# hardcode CMAKE_LINKER here to link, so it behaves as it did before, Alex\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# VS 2017 or greater\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# VS 2015\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# VS 2013\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# VS 2012\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# VS 2010\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# VS 2008\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# VS 2005\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# We don't support MSVC_TOOLSET_VERSION for earlier compiler.\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# We no longer provide per-version variables.  Use MSVC_VERSION instead.\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# default to Debug builds\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Compute an architecture family from the architecture id.\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Clang/C2 in MSVC14 Update 1 seems to not support -fsantinize (yet?)\n\n# set(_RTC1 \"-fsantinize=memory,safe-stack\")\n",
        "Line" : 221,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# executable linker flags\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# set the machine type\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# add /debug and /INCREMENTAL:YES to DEBUG and RELWITHDEBINFO also add pdbtype\n\n# on versions that support it\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# for release and minsize release default to no incremental linking\n",
        "Line" : 290,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# for 2005 make sure the manifest is put in the dll with mt\n",
        "Line" : 300,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# '-flto=thin' available since Clang 3.9 and Xcode 8\n\n# * http://clang.llvm.org/docs/ThinLTO.html#clang-llvm\n\n# * https://trac.macports.org/wiki/XcodeVersionInfo\n",
        "Line" : 334,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# note: MSVC 14 2015 Update 1 sets -fno-ms-compatibility by default, but this does not allow one to compile many projects\n\n# that include MS's own headers. CMake itself is affected project too.\n",
        "Line" : 352,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# TODO: Add '-Os' once VS generator maps it properly for Clang\n",
        "Line" : 358,
        "CharPositionInLine" : 73
      },
      "CommentCount" : 23
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-NMcl.cmake" : {
      "ObjectId" : "7add0b060a62dda30f9ee832a084e6cd780794db",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this is for the numega compiler which is really a front\n\n# end for visual studio, but adds memory checking code.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-NVIDIA-CUDA.cmake" : {
      "ObjectId" : "ba1638f870819cd0b3413bce069d32b01e381796",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add implicit host link directories that contain device libraries\n\n# to the device link line.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-OpenWatcom-C.cmake" : {
      "ObjectId" : "ce9bc45329970f9b07c5651482b60d88201f92f0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-OpenWatcom-CXX.cmake" : {
      "ObjectId" : "ce9bc45329970f9b07c5651482b60d88201f92f0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-OpenWatcom.cmake" : {
      "ObjectId" : "d38d61666d90ca439225c9ff546c61fc88d2b1df",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note: This variable is a ';' separated list\n",
        "Line" : 35,
        "CharPositionInLine" : 39
      },
      "3" : {
        "Text" : "# ... while this is a space separated string.\n",
        "Line" : 36,
        "CharPositionInLine" : 40
      },
      "4" : {
        "Text" : "# single/multi-threaded                 /-bm\n\n# static/DLL run-time libraries         /-br\n\n# default is setup for multi-threaded + DLL run-time libraries\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# compile a C++ file into an object file\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# compile a C file into an object file\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# preprocess a C source file\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# preprocess a C++ source file\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# create a C shared library\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# create a C shared module\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# create a C++ static library\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# create a C static library\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-PGI-C.cmake" : {
      "ObjectId" : "0495b93bd1df084cad5b9b425b2630cd8a2b8f74",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-PGI-Fortran.cmake" : {
      "ObjectId" : "2222e332013bfad024fbd08598ef1e8789bd9012",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-PGI.cmake" : {
      "ObjectId" : "ad77e8ad79634afc98f453bfa2a7fc771b8e71e5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module is shared by multiple languages; use include blocker.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# PGI on Windows doesn't support parallel compile processes\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The link flags for PGI are the raw filename to add a file\n\n# and the UNIX -L syntax to link directories.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default to Debug builds, mirroring Windows-MSVC behavior\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Shared library compile and link rules.\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-Watcom-C.cmake" : {
      "ObjectId" : "44a008b66eb62d7a3bb1b375cc2b1f6a76baf936",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-Watcom-CXX.cmake" : {
      "ObjectId" : "63d109b0385d40352582c34421774912040a44c4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-df.cmake" : {
      "ObjectId" : "f94891427c3ddf22e2582f08de2b286de16fe79c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# compiler support for fortran CVF compiler on windows\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# create a C++ static library\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# compile a C++ file into an object file\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# does the compiler support pdbtype and is it the newer compiler\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# executable linker flags\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows-windres.cmake" : {
      "ObjectId" : "7d787dddf33ba258b62ae5ff241bcc2ca1b5c2b6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Windows.cmake" : {
      "ObjectId" : "f55b1d09fd1262f7bd7bfe91edf200984e68ee65",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# lib\n",
        "Line" : 13,
        "CharPositionInLine" : 45
      },
      "1" : {
        "Text" : "# .so\n",
        "Line" : 14,
        "CharPositionInLine" : 49
      },
      "2" : {
        "Text" : "# .exe\n",
        "Line" : 17,
        "CharPositionInLine" : 45
      },
      "3" : {
        "Text" : "# for borland make long command lines are redirected to a file\n\n# with the following syntax, see Windows-bcc32.cmake for use\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# for nmake make long command lines are redirected to a file\n\n# with the following syntax, see Windows-bcc32.cmake for use\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# uncomment these out to debug nmake and borland makefiles\n\n#set(CMAKE_START_TEMP_FILE \"\")\n\n#set(CMAKE_END_TEMP_FILE \"\")\n\n#set(CMAKE_VERBOSE_MAKEFILE 1)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/Platform/WindowsCE-MSVC-C.cmake" : {
      "ObjectId" : "ce8060bed54b872f90ff2fa35777891580f6c12c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/WindowsCE-MSVC-CXX.cmake" : {
      "ObjectId" : "281eadc10435768d0b87571832b05f0bc2edc10c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/WindowsCE.cmake" : {
      "ObjectId" : "65b2eaed4d4199682e5b06fc59804dd256db4c9b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/WindowsPaths.cmake" : {
      "ObjectId" : "71cc6095a2c0f12bf8702c017484001c6fd20ba1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Block multiple inclusion because \"CMakeCInformation.cmake\" includes\n\n# \"Platform/${CMAKE_SYSTEM_NAME}\" even though the generic module\n\n# \"CMakeSystemSpecificInformation.cmake\" already included it.\n\n# The extra inclusion is a work-around documented next to the include()\n\n# call, so this can be removed when the work-around is removed.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the program-files folder(s) to the list of installation\n\n# prefixes.\n\n#\n\n# Windows 64-bit Binary:\n\n#   ENV{ProgramFiles(x86)} = [C:\\Program Files (x86)]\n\n#   ENV{ProgramFiles} = [C:\\Program Files]\n\n#   ENV{ProgramW6432} = [C:\\Program Files] or <not set>\n\n#\n\n# Windows 32-bit Binary on 64-bit Windows:\n\n#   ENV{ProgramFiles(x86)} = [C:\\Program Files (x86)]\n\n#   ENV{ProgramFiles} = [C:\\Program Files (x86)]\n\n#   ENV{ProgramW6432} = [C:\\Program Files]\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add the CMake install location.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add other locations.\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Project install destination.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# User-supplied staging prefix.\n",
        "Line" : 61,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# MinGW (useful when cross compiling from linux with CMAKE_FIND_ROOT_PATH set)\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# mingw can also link against dlls which can also be in /bin, so list this too\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "deps/src/cmake-3.13.4/Modules/Platform/WindowsPhone-Clang-C.cmake" : {
      "ObjectId" : "6e38572cd7c2abc661178c88c47667ba01da0611",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/WindowsPhone-Clang-CXX.cmake" : {
      "ObjectId" : "bf47978c424c7a9bff5c54cedf89eca936e8e75d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/WindowsPhone-GNU-C.cmake" : {
      "ObjectId" : "ff6acd56d4e18c9b5eae668a7a52770ea9747b9c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/WindowsPhone-GNU-CXX.cmake" : {
      "ObjectId" : "6adab6af36a46c2136be6d398891489eb7c6a694",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/WindowsPhone-MSVC-C.cmake" : {
      "ObjectId" : "ce8060bed54b872f90ff2fa35777891580f6c12c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/WindowsPhone-MSVC-CXX.cmake" : {
      "ObjectId" : "281eadc10435768d0b87571832b05f0bc2edc10c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/WindowsPhone.cmake" : {
      "ObjectId" : "65b2eaed4d4199682e5b06fc59804dd256db4c9b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/WindowsStore-Clang-C.cmake" : {
      "ObjectId" : "6e38572cd7c2abc661178c88c47667ba01da0611",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/WindowsStore-Clang-CXX.cmake" : {
      "ObjectId" : "bf47978c424c7a9bff5c54cedf89eca936e8e75d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/WindowsStore-GNU-C.cmake" : {
      "ObjectId" : "ff6acd56d4e18c9b5eae668a7a52770ea9747b9c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/WindowsStore-GNU-CXX.cmake" : {
      "ObjectId" : "6adab6af36a46c2136be6d398891489eb7c6a694",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/WindowsStore-MSVC-C.cmake" : {
      "ObjectId" : "ce8060bed54b872f90ff2fa35777891580f6c12c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/WindowsStore-MSVC-CXX.cmake" : {
      "ObjectId" : "281eadc10435768d0b87571832b05f0bc2edc10c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/WindowsStore.cmake" : {
      "ObjectId" : "65b2eaed4d4199682e5b06fc59804dd256db4c9b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/Xenix.cmake" : {
      "ObjectId" : "54a156b4db31ec2343264d69248072131f63225d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Modules/Platform/eCos.cmake" : {
      "ObjectId" : "2cd09095aab5366a01b12102d0fc09b879b09c37",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# support for eCos http://ecos.sourceware.org\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Guard against multiple inclusion, which e.g. leads to multiple calls to add_definition() #12987\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -pic\n",
        "Line" : 9,
        "CharPositionInLine" : 48
      },
      "3" : {
        "Text" : "# -shared\n\n# +s, flag for exe link to use shared lib\n\n# -rpath\n\n# : or empty\n",
        "Line" : 10,
        "CharPositionInLine" : 50
      },
      "4" : {
        "Text" : "# lib\n\n# .a\n\n# same suffix as if built using UseEcos.cmake\n",
        "Line" : 18,
        "CharPositionInLine" : 48
      },
      "5" : {
        "Text" : "# eCos can be built only with gcc\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# find eCos system files\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# special link commands for eCos executables\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# eCos doesn't support shared libs\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "deps/src/cmake-3.13.4/Modules/Platform/gas.cmake" : {
      "ObjectId" : "0ba80bb726701f9b630f958c1affe6c50d67fd77",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# to be done\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/kFreeBSD.cmake" : {
      "ObjectId" : "c1db2594d4ce5ce7dedbc6c4a3506362576fa79e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# kFreeBSD looks just like Linux.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Modules/Platform/syllable.cmake" : {
      "ObjectId" : "69c108db08844e31b7ee4755b6789ebb4df4a708",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this is the platform file for the Syllable OS (http://www.syllable.org)\n\n# Syllable is a free OS (GPL), which is mostly POSIX conform\n\n# the linker accepts the rpath related arguments, but this is later on\n\n# ignored by the runtime linker\n\n# shared libs are found exclusively via the environment variable DLL_PATH,\n\n# which may contain also dirs containing the special variable @bindir@\n\n# by default @bindir@/lib is part of DLL_PATH\n\n# in order to run the cmake tests successfully it is required that also\n\n# @bindir@/. and @bindir@/../lib are in DLL_PATH\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -pic\n",
        "Line" : 15,
        "CharPositionInLine" : 53
      },
      "2" : {
        "Text" : "# -shared\n",
        "Line" : 16,
        "CharPositionInLine" : 57
      },
      "3" : {
        "Text" : "# +s, flag for exe link to use shared lib\n",
        "Line" : 17,
        "CharPositionInLine" : 50
      },
      "4" : {
        "Text" : "#set(CMAKE_EXE_EXPORTS_C_FLAG \"-Wl,--export-dynamic\")\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Initialize C link type selection flags.  These flags are used when\n\n# building a shared library, shared module, or executable that links\n\n# to other libraries to select whether to use the static or shared\n\n# versions of the libraries.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# these are Syllable specific:\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/ProcessorCount.cmake" : {
      "ObjectId" : "8a37884b7c0f0ac341fd91814ef74ab33f5ac468",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# ProcessorCount\n\n# --------------\n\n#\n\n# ProcessorCount(var)\n\n#\n\n# Determine the number of processors/cores and save value in ${var}\n\n#\n\n# Sets the variable named ${var} to the number of physical cores\n\n# available on the machine if the information can be determined.\n\n# Otherwise it is set to 0.  Currently this functionality is implemented\n\n# for AIX, cygwin, FreeBSD, HPUX, IRIX, Linux, macOS, QNX, Sun and\n\n# Windows.\n\n#\n\n# This function is guaranteed to return a positive integer (>=1) if it\n\n# succeeds.  It returns 0 if there's a problem determining the processor\n\n# count.\n\n#\n\n# Example use, in a ctest -S dashboard script:\n\n#\n\n# ::\n\n#\n\n#    include(ProcessorCount)\n\n#    ProcessorCount(N)\n\n#    if(NOT N EQUAL 0)\n\n#      set(CTEST_BUILD_FLAGS -j${N})\n\n#      set(ctest_test_args ${ctest_test_args} PARALLEL_LEVEL ${N})\n\n#    endif()\n\n#\n\n#\n\n#\n\n# This function is intended to offer an approximation of the value of\n\n# the number of compute cores available on the current machine, such\n\n# that you may use that value for parallel building and parallel\n\n# testing.  It is meant to help utilize as much of the machine as seems\n\n# reasonable.  Of course, knowledge of what else might be running on the\n\n# machine simultaneously should be used when deciding whether to request\n\n# a machine's full capacity all for yourself.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A more reliable way might be to compile a small C program that uses the CPUID\n\n# instruction, but that again requires compiler support or compiling assembler\n\n# code.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Unknown:\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Windows:\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#message(\"ProcessorCount: WIN32, trying environment variable\")\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Mac, FreeBSD, OpenBSD (systems with sysctl):\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#message(\"ProcessorCount: trying sysctl '${ProcessorCount_cmd_sysctl}'\")\n",
        "Line" : 67,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Linux (systems with getconf):\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#message(\"ProcessorCount: trying getconf '${ProcessorCount_cmd_getconf}'\")\n",
        "Line" : 80,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# HPUX (systems with machinfo):\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#message(\"ProcessorCount: trying machinfo '${ProcessorCount_cmd_machinfo}'\")\n",
        "Line" : 100,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "#message(\"ProcessorCount: trying mpsched -s '${ProcessorCount_cmd_mpsched}'\")\n",
        "Line" : 111,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# IRIX (systems with hinv):\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#message(\"ProcessorCount: trying hinv '${ProcessorCount_cmd_hinv}'\")\n",
        "Line" : 128,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# AIX (systems with lsconf):\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#message(\"ProcessorCount: trying lsconf '${ProcessorCount_cmd_lsconf}'\")\n",
        "Line" : 144,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# QNX (systems with pidin):\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#message(\"ProcessorCount: trying pidin '${ProcessorCount_cmd_pidin}'\")\n",
        "Line" : 159,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Sun (systems where psrinfo tool is available)\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#message(\"ProcessorCount: trying psrinfo -p -v '${ProcessorCount_cmd_prvinfo}'\")\n",
        "Line" : 174,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Sun (systems where uname -X emits \"NumCPU\" in its output):\n",
        "Line" : 176,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "#message(\"ProcessorCount: trying uname -X '${ProcessorCount_cmd_uname}'\")\n",
        "Line" : 186,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# Execute this code when all previously attempted methods return empty\n\n# output:\n\n#\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Systems with /proc/cpuinfo:\n",
        "Line" : 195,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "#message(\"ProcessorCount: trying cpuinfo '${cpuinfo_file}'\")\n",
        "Line" : 200,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# Haiku\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "#message(\"ProcessorCount: trying sysinfo '${ProcessorCount_cmd_sysinfo}'\")\n",
        "Line" : 214,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# Since cygwin builds of CMake do not define WIN32 anymore, but they still\n\n# run on Windows, and will still have this env var defined:\n\n#\n",
        "Line" : 218,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "#message(\"ProcessorCount: last fallback, trying environment variable\")\n",
        "Line" : 223,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Ensure an integer return (avoid inadvertently returning an empty string\n\n# or an error string)... If it's not a decimal integer, return 0:\n\n#\n",
        "Line" : 226,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 31
    },
    "deps/src/cmake-3.13.4/Modules/Qt4ConfigDependentSettings.cmake" : {
      "ObjectId" : "cacaa9b86c5c4e80bc1b443f528e6025288fc245",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# Qt4ConfigDependentSettings\n\n# --------------------------\n\n#\n\n#\n\n#\n\n# This file is included by FindQt4.cmake, don't include it directly.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################\n\n#\n\n#       configuration/system dependent settings\n\n#\n\n###############################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# find dependencies for some Qt modules\n\n# when doing builds against a static Qt, they are required\n\n# when doing builds against a shared Qt, they are not required\n\n# if a user needs the dependencies, and they couldn't be found, they can set\n\n# the variables themselves.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# On Windows, qconfig.pri has \"shared\" for shared library builds\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# On other platforms, check file extension to know if its static\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# build using shared Qt needs -DQT_DLL on Windows\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# QtOpenGL dependencies\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## system png\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## system jpeg\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## system tiff\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## system mng\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# for X11, get X11 library directory\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## X11 SM\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Xi\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Xrender\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Xrandr\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Xcursor\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Xinerama\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Xfixes\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## fontconfig\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## system-freetype\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## system-zlib\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## openssl\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## dbus\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## glib\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Qt 4.2.0+ uses glib-2.0\n",
        "Line" : 212,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Qt 4.5+ also links to gobject-2.0\n",
        "Line" : 224,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "## clock-monotonic, just see if we need to link with rt\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# X11 libraries Qt always depends on\n",
        "Line" : 255,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Qt 4.0, 4.1, 4.2 use QuickTime\n",
        "Line" : 278,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Qt 4.2+ use AppKit\n",
        "Line" : 283,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 32
    },
    "deps/src/cmake-3.13.4/Modules/Qt4Macros.cmake" : {
      "ObjectId" : "a2c8d853ca4ecee696097a229c88ad91d4b3ba92",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# Qt4Macros\n\n# ---------\n\n#\n\n#\n\n#\n\n# This file is included by FindQt4.cmake, don't include it directly.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "######################################\n\n#\n\n#       Macros for building Qt files\n\n#\n\n######################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# macro used to create the names of output files preserving relative dirs\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# absolute path\n",
        "Line" : 57,
        "CharPositionInLine" : 48
      },
      "5" : {
        "Text" : "# helper macro to set up a moc rule\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# For Windows, create a parameters file to work around command line length limit\n\n# Pass the parameters in a file.  Set the working directory to\n\n# be that containing the parameters file and reference it by\n\n# just the file name.  This is necessary because the moc tool on\n\n# MinGW builds does not seem to handle spaces in the path to the\n\n# file given with the @ syntax.\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# get include dirs and flags\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# don't run automoc on this file\n\n# don't run autouic on this file\n",
        "Line" : 154,
        "CharPositionInLine" : 63
      },
      "9" : {
        "Text" : "# QT4_WRAP_CPP(outfiles inputfile ... )\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# get include dirs\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# don't run automoc on this file\n\n# don't run autouic on this file\n",
        "Line" : 170,
        "CharPositionInLine" : 64
      },
      "12" : {
        "Text" : "# QT4_WRAP_UI(outfiles inputfile ... )\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# don't run automoc on this file\n\n# don't run autouic on this file\n",
        "Line" : 191,
        "CharPositionInLine" : 64
      },
      "14" : {
        "Text" : "# QT4_ADD_RESOURCES(outfiles inputfile ... )\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#  parse file for dependencies\n\n#  all files are absolute paths or relative to the location of the qrc file\n",
        "Line" : 212,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Since this cmake macro is doing the dependency scanning for these files,\n\n# let's make a configured file and add it as a dependency so cmake is run\n\n# again when dependencies need to be recomputed.\n",
        "Line" : 225,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# The .qrc file does not exist (yet). Let's add a dependency and hope\n\n# that it will be generated later\n",
        "Line" : 231,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# don't run automoc on this file\n\n# don't run autouic on this file\n",
        "Line" : 241,
        "CharPositionInLine" : 64
      },
      "19" : {
        "Text" : "# don't run automoc on this file\n\n# don't run autouic on this file\n",
        "Line" : 276,
        "CharPositionInLine" : 60
      },
      "20" : {
        "Text" : "# get the part before the \".xml\" suffix\n",
        "Line" : 291,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# _customName OPTIONS -some -options )\n",
        "Line" : 299,
        "CharPositionInLine" : 43
      },
      "22" : {
        "Text" : "# _optionalBasename _optionalClassName)\n",
        "Line" : 326,
        "CharPositionInLine" : 69
      },
      "23" : {
        "Text" : "# don't run automoc on this file\n\n# don't run autouic on this file\n",
        "Line" : 361,
        "CharPositionInLine" : 60
      },
      "24" : {
        "Text" : "# if \"SKIP_AUTOMOC\" is set to true, we will not handle this file here.\n\n# This is required to make uic work correctly:\n\n# we need to add generated .cpp files to the sources (to compile them),\n\n# but we cannot let automoc handle them, as the .cpp files don't exist yet when\n\n# cmake is run for the very first time on them -> however the .cpp files might\n\n# exist at a later run. at that time we need to skip them, so that we don't add two\n\n# different rules for the same moc file\n",
        "Line" : 379,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# make a .pro file to call lupdate on, so we don't make our commands too\n\n# long for some systems\n",
        "Line" : 436,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 26
    },
    "deps/src/cmake-3.13.4/Modules/SelectLibraryConfigurations.cmake" : {
      "ObjectId" : "fe3bb00a68a8b8cde10b06350feea3926e94adb9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# SelectLibraryConfigurations\n\n# ---------------------------\n\n#\n\n#\n\n#\n\n# select_library_configurations( basename )\n\n#\n\n# This macro takes a library base name as an argument, and will choose\n\n# good values for basename_LIBRARY, basename_LIBRARIES,\n\n# basename_LIBRARY_DEBUG, and basename_LIBRARY_RELEASE depending on what\n\n# has been found and set.  If only basename_LIBRARY_RELEASE is defined,\n\n# basename_LIBRARY will be set to the release value, and\n\n# basename_LIBRARY_DEBUG will be set to basename_LIBRARY_DEBUG-NOTFOUND.\n\n# If only basename_LIBRARY_DEBUG is defined, then basename_LIBRARY will\n\n# take the debug value, and basename_LIBRARY_RELEASE will be set to\n\n# basename_LIBRARY_RELEASE-NOTFOUND.\n\n#\n\n# If the generator supports configuration types, then basename_LIBRARY\n\n# and basename_LIBRARIES will be set with debug and optimized flags\n\n# specifying the library to be used for the given configuration.  If no\n\n# build type has been set or the generator in use does not support\n\n# configuration types, then basename_LIBRARY and basename_LIBRARIES will\n\n# take only the release value, or the debug value if the release one is\n\n# not set.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This macro was adapted from the FindQt4 CMake module and is maintained by Will\n\n# Dicharry <wdicharry@stellarscience.com>.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if the generator is multi-config or if CMAKE_BUILD_TYPE is set for\n\n# single-config generators, set optimized and debug libraries\n",
        "Line" : 45,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/SquishTestScript.cmake" : {
      "ObjectId" : "c0e1bea5982d6af9d167df69cf06fcadb95b78fd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# SquishTestScript\n\n# ----------------\n\n#\n\n#\n\n#\n\n#\n\n#\n\n# This script launches a GUI test using Squish.  You should not call the\n\n# script directly; instead, you should access it via the SQUISH_ADD_TEST\n\n# macro that is defined in FindSquish.cmake.\n\n#\n\n# This script starts the Squish server, launches the test on the client,\n\n# and finally stops the squish server.  If any of these steps fail\n\n# (including if the tests do not pass) then a fatal error is raised.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# print out the variable that we are using\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# parse environment variables\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# record Qt lib directory\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# run the test\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# check for an error with running the test\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/SystemInformation.cmake" : {
      "ObjectId" : "7e4a6f8d751c7428598a0a7d1f2768e22e23af5f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# first get the standard information for th platform\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include other files if they are present, such as when run from within the\n\n# binary tree\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/TestBigEndian.cmake" : {
      "ObjectId" : "e8a1d4958a2b93917a9024c9c9c468ecf038f5a1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# TestBigEndian\n\n# -------------\n\n#\n\n# Define macro to determine endian type\n\n#\n\n# Check if the system is big endian or little endian\n\n#\n\n# ::\n\n#\n\n#   TEST_BIG_ENDIAN(VARIABLE)\n\n#   VARIABLE - variable to store the result to\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# on mac, if there are universal binaries built both will be true\n\n# return the result depending on the machine on which cmake runs\n",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/TestCXXAcceptsFlag.cmake" : {
      "ObjectId" : "10019ec686a0e134c1a39cf2d7517bd91a9071ce",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# TestCXXAcceptsFlag\n\n# ------------------\n\n#\n\n# Deprecated.  See :module:`CheckCXXCompilerFlag`.\n\n#\n\n# Check if the CXX compiler accepts a flag.\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#  CHECK_CXX_ACCEPTS_FLAG(<flags> <variable>)\n\n#\n\n# ``<flags>``\n\n#  the flags to try\n\n# ``<variable>``\n\n#  variable to store the result\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/TestForANSIForScope.cmake" : {
      "ObjectId" : "f94faebe740b2c696c5ea2d7293bac7cb4adb0b5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# TestForANSIForScope\n\n# -------------------\n\n#\n\n# Check for ANSI for scope support\n\n#\n\n# Check if the compiler restricts the scope of variables declared in a\n\n# for-init-statement to the loop body.\n\n#\n\n# ::\n\n#\n\n#   CMAKE_NO_ANSI_FOR_SCOPE - holds result\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/TestForANSIStreamHeaders.cmake" : {
      "ObjectId" : "c42566fcf784ac7b2916dcc4ad5183aa84394fd3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# TestForANSIStreamHeaders\n\n# ------------------------\n\n#\n\n# Test for compiler support of ANSI stream headers iostream, etc.\n\n#\n\n# check if the compiler supports the standard ANSI iostream header\n\n# (without the .h)\n\n#\n\n# ::\n\n#\n\n#   CMAKE_NO_ANSI_STREAM_HEADERS - defined by the results\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/TestForSSTREAM.cmake" : {
      "ObjectId" : "321c1669fb6a1111ca26c00331482840572c4172",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# TestForSSTREAM\n\n# --------------\n\n#\n\n# Test for compiler support of ANSI sstream header\n\n#\n\n# check if the compiler supports the standard ANSI sstream header\n\n#\n\n# ::\n\n#\n\n#   CMAKE_NO_ANSI_STRING_STREAM - defined by the results\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/TestForSTDNamespace.cmake" : {
      "ObjectId" : "37fba4a091c1ff647e97b8f6588ca0fbc95e9d5c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# TestForSTDNamespace\n\n# -------------------\n\n#\n\n# Test for std:: namespace support\n\n#\n\n# check if the compiler supports std:: on stl classes\n\n#\n\n# ::\n\n#\n\n#   CMAKE_NO_STD_NAMESPACE - defined by the results\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/UseEcos.cmake" : {
      "ObjectId" : "f05547c376746ee0d4e072fe73050cc8366ba8f5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# UseEcos\n\n# -------\n\n#\n\n# This module defines variables and macros required to build eCos application.\n\n#\n\n# This file contains the following macros:\n\n# ECOS_ADD_INCLUDE_DIRECTORIES() - add the eCos include dirs\n\n# ECOS_ADD_EXECUTABLE(name source1 ...  sourceN ) - create an eCos\n\n# executable ECOS_ADJUST_DIRECTORY(VAR source1 ...  sourceN ) - adjusts\n\n# the path of the source files and puts the result into VAR\n\n#\n\n# Macros for selecting the toolchain: ECOS_USE_ARM_ELF_TOOLS() - enable\n\n# the ARM ELF toolchain for the directory where it is called\n\n# ECOS_USE_I386_ELF_TOOLS() - enable the i386 ELF toolchain for the\n\n# directory where it is called ECOS_USE_PPC_EABI_TOOLS() - enable the\n\n# PowerPC toolchain for the directory where it is called\n\n#\n\n# It contains the following variables: ECOS_DEFINITIONS\n\n# ECOSCONFIG_EXECUTABLE ECOS_CONFIG_FILE - defaults to ecos.ecc, if your\n\n# eCos configuration file has a different name, adjust this variable for\n\n# internal use only:\n\n#\n\n# ::\n\n#\n\n#   ECOS_ADD_TARGET_LIB\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first check that ecosconfig is available\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# check that ECOS_REPOSITORY is set correctly\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# check that tclsh (coming with TCL) is available, otherwise ecosconfig doesn't work\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#add the globale include-diretories\n\n#usage: ECOS_ADD_INCLUDE_DIRECTORIES()\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#check for ProjectSources.txt one level higher\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#the ecos include directory\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#we want to compile for the xscale processor, in this case the following macro has to be called\n\n#usage: ECOS_USE_ARM_ELF_TOOLS()\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#for linking\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#for compiling\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#for the obj-tools\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#usage: ECOS_USE_PPC_EABI_TOOLS()\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#for linking\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#for compiling\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#for the obj-tools\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#usage: ECOS_USE_I386_ELF_TOOLS()\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#for linking\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#for compiling\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#for the obj-tools\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#since the actual sources are located one level upwards\n\n#a \"../\" has to be prepended in front of every source file\n\n#call the following macro to achieve this, the first parameter\n\n#is the name of the new list of source files with adjusted paths,\n\n#followed by all source files\n\n#usage: ECOS_ADJUST_DIRECTORY(adjusted_SRCS ${my_srcs})\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# the default ecos config file name\n\n# maybe in future also out-of-source builds may be possible\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#creates the dependency from all source files on the ecos target.ld,\n\n#adds the command for compiling ecos\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# when building out-of-source, create the ecos/ subdir\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#sources depend on target.ld\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# get the directory of the current file, used later on in the file\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#macro for creating an executable ecos application\n\n#the first parameter is the name of the executable,\n\n#the second is the list of all source files (where the path\n\n#has been adjusted beforehand by calling ECOS_ADJUST_DIRECTORY()\n\n#usage: ECOS_ADD_EXECUTABLE(my_app ${adjusted_SRCS})\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#definitions, valid for all ecos projects\n\n#the optimization and \"-g\" for debugging has to be enabled\n\n#in the project-specific CMakeLists.txt\n",
        "Line" : 175,
        "CharPositionInLine" : 3
      },
      "28" : {
        "Text" : "#the executable depends on ecos target.ld\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# when using nmake makefiles, the custom buildtype suppresses the default cl.exe flags\n\n# and the rules for creating objects are adjusted for gcc\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# special link commands for ecos-executables\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# some strict compiler flags\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#create a binary file\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#and an srec file\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#add the created files to the clean-files\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "deps/src/cmake-3.13.4/Modules/UseJava.cmake" : {
      "ObjectId" : "6e2c51100749b71533baa75f0c8f6554cbd35484",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# UseJava\n\n# -------\n\n#\n\n# Use Module for Java\n\n#\n\n# This file provides functions for Java.  It is assumed that\n\n# FindJava.cmake has already been loaded.  See FindJava.cmake for\n\n# information on how to load Java into your CMake project.\n\n#\n\n# ::\n\n#\n\n#  add_jar(target_name\n\n#          [SOURCES] source1 [source2 ...] [resource1 ...]\n\n#          [INCLUDE_JARS jar1 [jar2 ...]]\n\n#          [ENTRY_POINT entry]\n\n#          [VERSION version]\n\n#          [OUTPUT_NAME name]\n\n#          [OUTPUT_DIR dir]\n\n#          [GENERATE_NATIVE_HEADERS target [DESTINATION dir]]\n\n#          )\n\n#\n\n# This command creates a <target_name>.jar.  It compiles the given\n\n# source files (source) and adds the given resource files (resource) to\n\n# the jar file.  Source files can be java files or listing files\n\n# (prefixed by '@').  If only resource files are given then just a jar file\n\n# is created.  The list of include jars are added to the classpath when\n\n# compiling the java sources and also to the dependencies of the target.\n\n# INCLUDE_JARS also accepts other target names created by add_jar.  For\n\n# backwards compatibility, jar files listed as sources are ignored (as\n\n# they have been since the first version of this module).\n\n#\n\n# The default OUTPUT_DIR can also be changed by setting the variable\n\n# CMAKE_JAVA_TARGET_OUTPUT_DIR.\n\n#\n\n# Optionally, using option GENERATE_NATIVE_HEADERS, native header files can be generated\n\n# for methods declared as native. These files provide the connective glue that allow your\n\n# Java and C code to interact. An INTERFACE target will be created for an easy usage\n\n# of generated files. Sub-option DESTINATION can be used to specify output directory for\n\n# generated header files.\n\n#\n\n# GENERATE_NATIVE_HEADERS option requires, at least, version 1.8 of the JDK.\n\n#\n\n# Additional instructions:\n\n#\n\n# ::\n\n#\n\n#    To add compile flags to the target you can set these flags with\n\n#    the following variable:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        set(CMAKE_JAVA_COMPILE_FLAGS -nowarn)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    To add a path or a jar file to the class path you can do this\n\n#    with the CMAKE_JAVA_INCLUDE_PATH variable.\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        set(CMAKE_JAVA_INCLUDE_PATH /usr/share/java/shibboleet.jar)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    To use a different output name for the target you can set it with:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        add_jar(foobar foobar.java OUTPUT_NAME shibboleet.jar)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    To use a different output directory than CMAKE_CURRENT_BINARY_DIR\n\n#    you can set it with:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        add_jar(foobar foobar.java OUTPUT_DIR ${PROJECT_BINARY_DIR}/bin)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    To define an entry point in your jar you can set it with the ENTRY_POINT\n\n#    named argument:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        add_jar(example ENTRY_POINT com/examples/MyProject/Main)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    To define a custom manifest for the jar, you can set it with the manifest\n\n#    named argument:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        add_jar(example MANIFEST /path/to/manifest)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    To add a VERSION to the target output name you can set it using\n\n#    the VERSION named argument to add_jar. This will create a jar file with the\n\n#    name shibboleet-1.0.0.jar and will create a symlink shibboleet.jar\n\n#    pointing to the jar with the version information.\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        add_jar(shibboleet shibbotleet.java VERSION 1.2.0)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#     If the target is a JNI library, utilize the following commands to\n\n#     create a JNI symbolic link:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        set(CMAKE_JNI_TARGET TRUE)\n\n#        add_jar(shibboleet shibbotleet.java VERSION 1.2.0)\n\n#        install_jar(shibboleet ${LIB_INSTALL_DIR}/shibboleet)\n\n#        install_jni_symlink(shibboleet ${JAVA_LIB_INSTALL_DIR})\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#     If a single target needs to produce more than one jar from its\n\n#     java source code, to prevent the accumulation of duplicate class\n\n#     files in subsequent jars, set/reset CMAKE_JAR_CLASSES_PREFIX prior\n\n#     to calling the add_jar() function:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        set(CMAKE_JAR_CLASSES_PREFIX com/redhat/foo)\n\n#        add_jar(foo foo.java)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        set(CMAKE_JAR_CLASSES_PREFIX com/redhat/bar)\n\n#        add_jar(bar bar.java)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#     For an optimum usage of option GENERATE_NATIVE_HEADERS, it is recommended to\n\n#     include module JNI before any call to add_jar. The produced target for native\n\n#     headers can then be used to compile C/C++ sources with command\n\n#     target_link_libraries.\n\n#\n\n#\n\n# ::\n\n#\n\n#        find_package(JNI)\n\n#        add_jar(foo foo.java GENERATE_NATIVE_HEADERS foo-native)\n\n#        add_library(bar bar.cpp)\n\n#        target_link_libraries(bar PRIVATE foo-native)\n\n#\n\n#\n\n# Target Properties:\n\n#\n\n# ::\n\n#\n\n#    The add_jar() function sets some target properties. You can get these\n\n#    properties with the\n\n#       get_property(TARGET <target_name> PROPERTY <propery_name>)\n\n#    command.\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    INSTALL_FILES      The files which should be installed. This is used by\n\n#                       install_jar().\n\n#    JNI_SYMLINK        The JNI symlink which should be installed.\n\n#                       This is used by install_jni_symlink().\n\n#    JAR_FILE           The location of the jar file so that you can include\n\n#                       it.\n\n#    CLASSDIR           The directory where the class files can be found. For\n\n#                       example to use them with javah.\n\n#\n\n# ::\n\n#\n\n#  find_jar(<VAR>\n\n#           name | NAMES name1 [name2 ...]\n\n#           [PATHS path1 [path2 ... ENV var]]\n\n#           [VERSIONS version1 [version2]]\n\n#           [DOC \"cache documentation string\"]\n\n#           )\n\n#\n\n# This command is used to find a full path to the named jar.  A cache\n\n# entry named by <VAR> is created to stor the result of this command.\n\n# If the full path to a jar is found the result is stored in the\n\n# variable and the search will not repeated unless the variable is\n\n# cleared.  If nothing is found, the result will be <VAR>-NOTFOUND, and\n\n# the search will be attempted again next time find_jar is invoked with\n\n# the same variable.  The name of the full path to a file that is\n\n# searched for is specified by the names listed after NAMES argument.\n\n# Additional search locations can be specified after the PATHS argument.\n\n# If you require special a version of a jar file you can specify it with\n\n# the VERSIONS argument.  The argument after DOC will be used for the\n\n# documentation string in the cache.\n\n#\n\n# ::\n\n#\n\n#  install_jar(target_name destination)\n\n#  install_jar(target_name DESTINATION destination [COMPONENT component])\n\n#\n\n# This command installs the TARGET_NAME files to the given DESTINATION.\n\n# It should be called in the same scope as add_jar() or it will fail.\n\n#\n\n# Target Properties:\n\n#\n\n# ::\n\n#\n\n#    The install_jar() function sets the INSTALL_DESTINATION target property\n\n#    on jars so installed. This property holds the DESTINATION as described\n\n#    above, and is used by install_jar_exports(). You can get this property\n\n#    with the\n\n#       get_property(TARGET <target_name> PROPERTY INSTALL_DESTINATION)\n\n#    command.\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#  install_jni_symlink(target_name destination)\n\n#  install_jni_symlink(target_name DESTINATION destination [COMPONENT component])\n\n#\n\n# This command installs the TARGET_NAME JNI symlinks to the given\n\n# DESTINATION.  It should be called in the same scope as add_jar() or it\n\n# will fail.\n\n#\n\n# ::\n\n#\n\n#  install_jar_exports(TARGETS jars...\n\n#                      [NAMESPACE <namespace>]\n\n#                      FILE <filename>\n\n#                      DESTINATION <dir> [COMPONENT <component>])\n\n#\n\n# This command installs a target export file ``<filename>`` for the named jar\n\n# targets to the given ``DESTINATION``. Its function is similar to that of\n\n# :command:`install(EXPORTS ...)`.\n\n#\n\n# ::\n\n#\n\n#  export_jars(TARGETS jars...\n\n#              [NAMESPACE <namespace>]\n\n#              FILE <filename>)\n\n#\n\n# This command writes a target export file ``<filename>`` for the named jar\n\n# targets. Its function is similar to that of :command:`export(...)`.\n\n#\n\n# ::\n\n#\n\n#  create_javadoc(<VAR>\n\n#                 PACKAGES pkg1 [pkg2 ...]\n\n#                 [SOURCEPATH <sourcepath>]\n\n#                 [CLASSPATH <classpath>]\n\n#                 [INSTALLPATH <install path>]\n\n#                 [DOCTITLE \"the documentation title\"]\n\n#                 [WINDOWTITLE \"the title of the document\"]\n\n#                 [AUTHOR TRUE|FALSE]\n\n#                 [USE TRUE|FALSE]\n\n#                 [VERSION TRUE|FALSE]\n\n#                 )\n\n#\n\n# Create java documentation based on files or packages.  For more\n\n# details please read the javadoc manpage.\n\n#\n\n# There are two main signatures for create_javadoc.  The first signature\n\n# works with package names on a path with source files:\n\n#\n\n# ::\n\n#\n\n#    Example:\n\n#    create_javadoc(my_example_doc\n\n#      PACKAGES com.example.foo com.example.bar\n\n#      SOURCEPATH \"${CMAKE_CURRENT_SOURCE_DIR}\"\n\n#      CLASSPATH ${CMAKE_JAVA_INCLUDE_PATH}\n\n#      WINDOWTITLE \"My example\"\n\n#      DOCTITLE \"<h1>My example</h1>\"\n\n#      AUTHOR TRUE\n\n#      USE TRUE\n\n#      VERSION TRUE\n\n#    )\n\n#\n\n#\n\n#\n\n# The second signature for create_javadoc works on a given list of\n\n# files.\n\n#\n\n# ::\n\n#\n\n#    create_javadoc(<VAR>\n\n#                   FILES file1 [file2 ...]\n\n#                   [CLASSPATH <classpath>]\n\n#                   [INSTALLPATH <install path>]\n\n#                   [DOCTITLE \"the documentation title\"]\n\n#                   [WINDOWTITLE \"the title of the document\"]\n\n#                   [AUTHOR TRUE|FALSE]\n\n#                   [USE TRUE|FALSE]\n\n#                   [VERSION TRUE|FALSE]\n\n#                  )\n\n#\n\n#\n\n#\n\n# Example:\n\n#\n\n# ::\n\n#\n\n#    create_javadoc(my_example_doc\n\n#      FILES ${example_SRCS}\n\n#      CLASSPATH ${CMAKE_JAVA_INCLUDE_PATH}\n\n#      WINDOWTITLE \"My example\"\n\n#      DOCTITLE \"<h1>My example</h1>\"\n\n#      AUTHOR TRUE\n\n#      USE TRUE\n\n#      VERSION TRUE\n\n#    )\n\n#\n\n#\n\n#\n\n# Both signatures share most of the options.  These options are the same\n\n# as what you can find in the javadoc manpage.  Please look at the\n\n# manpage for CLASSPATH, DOCTITLE, WINDOWTITLE, AUTHOR, USE and VERSION.\n\n#\n\n# The documentation will be by default installed to\n\n#\n\n# ::\n\n#\n\n#    ${CMAKE_INSTALL_PREFIX}/share/javadoc/<VAR>\n\n#\n\n#\n\n#\n\n# if you don't set the INSTALLPATH.\n\n#\n\n# ::\n\n#\n\n#  create_javah(TARGET <target>\n\n#               GENERATED_FILES <VAR>\n\n#               CLASSES <class>...\n\n#               [CLASSPATH <classpath>...]\n\n#               [DEPENDS <depend>...]\n\n#               [OUTPUT_NAME <path>|OUTPUT_DIR <path>]\n\n#               )\n\n#\n\n# Create C header files from java classes. These files provide the connective glue\n\n# that allow your Java and C code to interact.\n\n#\n\n# This command will no longer be supported starting with version 10 of the JDK due\n\n# to the `suppression of javah tool <http://openjdk.java.net/jeps/313>`_.\n\n# Command ``add_jar(GENERATE_NATIVE_HEADERS)`` must be used instead.\n\n#\n\n# There are two main signatures for create_javah.  The first signature\n\n# returns generated files through variable specified by GENERATED_FILES option:\n\n#\n\n# ::\n\n#\n\n#    Example:\n\n#    Create_javah(GENERATED_FILES files_headers\n\n#      CLASSES org.cmake.HelloWorld\n\n#      CLASSPATH hello.jar\n\n#    )\n\n#\n\n#\n\n#\n\n# The second signature for create_javah creates a target which encapsulates\n\n# header files generation.\n\n#\n\n# ::\n\n#\n\n#    Example:\n\n#    Create_javah(TARGET target_headers\n\n#      CLASSES org.cmake.HelloWorld\n\n#      CLASSPATH hello.jar\n\n#    )\n\n#\n\n#\n\n#\n\n# Both signatures share same options.\n\n#\n\n#  ``CLASSES <class>...``\n\n#    Specifies Java classes used to generate headers.\n\n#\n\n#  ``CLASSPATH <classpath>...``\n\n#    Specifies various paths to look up classes. Here .class files, jar files or targets\n\n#    created by command add_jar can be used.\n\n#\n\n#  ``DEPENDS <depend>...``\n\n#    Targets on which the javah target depends\n\n#\n\n#  ``OUTPUT_NAME <path>``\n\n#    Concatenates the resulting header files for all the classes listed by option CLASSES\n\n#    into <path>. Same behavior as option '-o' of javah tool.\n\n#\n\n#  ``OUTPUT_DIR <path>``\n\n#    Sets the directory where the header files will be generated. Same behavior as option\n\n#    '-d' of javah tool. If not specified, ${CMAKE_CURRENT_BINARY_DIR} is used as output directory.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# define helper scripts\n",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# In CMake < 2.8.12, add_jar used variables which were set prior to calling\n\n# add_jar for customizing the behavior of add_jar. In order to be backwards\n\n# compatible, check if any of those variables are set, and use them to\n\n# initialize values of the named arguments. (Giving the corresponding named\n\n# argument will override the value set here.)\n\n#\n\n# New features should use named arguments only.\n",
        "Line" : 484,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# reset\n",
        "Line" : 499,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# ensure output directory exists\n",
        "Line" : 513,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Raise an error if JDK version is less than 1.8 because javac -h is not supported\n\n# by earlier versions.\n",
        "Line" : 528,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Ignored for backward compatibility\n",
        "Line" : 624,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# Create the list of files to compile.\n",
        "Line" : 662,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# Compile the java files and create a list of class files\n",
        "Line" : 674,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# NOTE: this command generates an artificial dependency file\n",
        "Line" : 676,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "# create an empty java_class_filelist\n",
        "Line" : 699,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# create the jar file\n",
        "Line" : 705,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Add the target and make sure we have the latest resource files.\n",
        "Line" : 745,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# create an INTERFACE library encapsulating include directory for generated headers\n",
        "Line" : 794,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# this INTERFACE library depends on jar generation\n",
        "Line" : 799,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# ckeck parameters\n",
        "Line" : 1327,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# handle javah options\n",
        "Line" : 1346,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# CLASSPATH can specify directories, jar files or targets created with add_jar command\n",
        "Line" : 1350,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# compute output names\n",
        "Line" : 1391,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# finalize custom command arguments\n",
        "Line" : 1399,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Parse and validate arguments\n",
        "Line" : 1419,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Set content of generated exports file\n",
        "Line" : 1434,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Generate exports file\n",
        "Line" : 1443,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Parse and validate arguments\n",
        "Line" : 1452,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Determine relative path from installed export file to install prefix\n",
        "Line" : 1474,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Set up unique location for generated exports file\n",
        "Line" : 1487,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Set content of generated exports file\n",
        "Line" : 1491,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Generate and install exports file\n",
        "Line" : 1500,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 29
    },
    "deps/src/cmake-3.13.4/Modules/UseJavaClassFilelist.cmake" : {
      "ObjectId" : "c2f9afa4fcaabfe87276b5abff027e098d075da1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# UseJavaClassFilelist\n\n# --------------------\n\n#\n\n#\n\n#\n\n#\n\n#\n\n# This script create a list of compiled Java class files to be added to\n\n# a jar file.  This avoids including cmake files which get created in\n\n# the binary directory.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# file(GLOB_RECURSE foo RELATIVE) is broken so we need this.\n",
        "Line" : 34,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# write to file\n",
        "Line" : 40,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/UseJavaSymlinks.cmake" : {
      "ObjectId" : "358b9ef5cb374a64b2476e9f74745a72605a6c0e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# UseJavaSymlinks\n\n# ---------------\n\n#\n\n#\n\n#\n\n#\n\n#\n\n# Helper script for UseJava.cmake\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/UsePkgConfig.cmake" : {
      "ObjectId" : "28618eb10f578a72283d4d72eb4cfddffb376110",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# UsePkgConfig\n\n# ------------\n\n#\n\n# Obsolete pkg-config module for CMake, use FindPkgConfig instead.\n\n#\n\n#\n\n#\n\n# This module defines the following macro:\n\n#\n\n# PKGCONFIG(package includedir libdir linkflags cflags)\n\n#\n\n# Calling PKGCONFIG will fill the desired information into the 4 given\n\n# arguments, e.g.  PKGCONFIG(libart-2.0 LIBART_INCLUDE_DIR\n\n# LIBART_LINK_DIR LIBART_LINK_FLAGS LIBART_CFLAGS) if pkg-config was NOT\n\n# found or the specified software package doesn't exist, the variable\n\n# will be empty when the function returns, otherwise they will contain\n\n# the respective information\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# reset the variables at the beginning\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if pkg-config has been found\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# and if the package of interest also exists for pkg-config, then get the information\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# if pkg-config has NOT been found, INFORM the user\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Modules/UseQt4.cmake" : {
      "ObjectId" : "e239fc52ec052a1c818d7cee2629c31892c94c77",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# UseQt4\n\n# ------\n\n#\n\n# Use Module for QT4\n\n#\n\n# Sets up C and C++ to use Qt 4.  It is assumed that FindQt.cmake has\n\n# already been loaded.  See FindQt.cmake for information on how to load\n\n# Qt 4 into your CMake project.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# list dependent modules, so dependent libraries are added\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Qt modules  (in order of dependence)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Modules/UseSWIG.cmake" : {
      "ObjectId" : "82fbc4bbc95ef26469733402bbc5bb152f9a3aa8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nUseSWIG\n-------\n\nThis file provides support for ``SWIG``. It is assumed that :module:`FindSWIG`\nmodule has already been loaded.\n\nDefines the following command for use with ``SWIG``:\n\n.. command:: swig_add_library\n\n  Define swig module with given name and specified language::\n\n    swig_add_library(<name>\n                     [TYPE <SHARED|MODULE|STATIC|USE_BUILD_SHARED_LIBS>]\n                     LANGUAGE <language>\n                     [NO_PROXY]\n                     [OUTPUT_DIR <directory>]\n                     [OUTFILE_DIR <directory>]\n                     SOURCES <file>...\n                    )\n\n  Targets created with the ``swig_add_library`` command have the same\n  capabilities as targets created with the :command:`add_library` command, so\n  those targets can be used with any command expecting a target (e.g.\n  :command:`target_link_libraries`).\n\n  .. note::\n\n    This command creates a target with the specified ``<name>`` when\n    policy :policy:`CMP0078` is set to ``NEW``.  Otherwise, the legacy\n    behavior will choose a different target name and store it in the\n    ``SWIG_MODULE_<name>_REAL_NAME`` variable.\n\n  .. note::\n\n    For multi-config generators, this module does not support\n    configuration-specific files generated by ``SWIG``. All build\n    configurations must result in the same generated source file.\n\n  ``TYPE``\n    ``SHARED``, ``MODULE`` and ``STATIC`` have the same semantic as for the\n    :command:`add_library` command. If ``USE_BUILD_SHARED_LIBS`` is specified,\n    the library type will be ``STATIC`` or ``SHARED`` based on whether the\n    current value of the :variable:`BUILD_SHARED_LIBS` variable is ``ON``. If\n    no type is specified, ``MODULE`` will be used.\n\n  ``LANGUAGE``\n    Specify the target language.\n\n  ``NO_PROXY``\n    Prevent the generation of the wrapper layer (swig ``-noproxy`` option).\n\n  ``OUTPUT_DIR``\n    Specify where to write the language specific files (swig ``-outdir``\n    option). If not given, the ``CMAKE_SWIG_OUTDIR`` variable will be used.\n    If neither is specified, the default depends on the value of the\n    ``UseSWIG_MODULE_VERSION`` variable as follows:\n\n    * If ``UseSWIG_MODULE_VERSION`` is 1 or is undefined, output is written to\n      the :variable:`CMAKE_CURRENT_BINARY_DIR` directory.\n    * If ``UseSWIG_MODULE_VERSION`` is 2, a dedicated directory will be used.\n      The path of this directory can be retrieved from the\n      ``SWIG_SUPPORT_FILES_DIRECTORY`` target property.\n\n  ``OUTFILE_DIR``\n    Specify an output directory name where the generated source file will be\n    placed (swig -o option). If not specified, the ``SWIG_OUTFILE_DIR`` variable\n    will be used. If neither is specified, ``OUTPUT_DIR`` or\n    ``CMAKE_SWIG_OUTDIR`` is used instead.\n\n  ``SOURCES``\n    List of sources for the library. Files with extension ``.i`` will be\n    identified as sources for the ``SWIG`` tool. Other files will be handled in\n    the standard way.\n\n  .. note::\n\n    If ``UseSWIG_MODULE_VERSION`` is set to 2, it is **strongly** recommended\n    to use a dedicated directory unique to the target when either the\n    ``OUTPUT_DIR`` option or the ``CMAKE_SWIG_OUTDIR`` variable are specified.\n    The output directory contents are erased as part of the target build, so\n    to prevent interference between targets or losing other important files,\n    each target should have its own dedicated output directory.\n\n.. command:: swig_link_libraries\n\n  Link libraries to swig module::\n\n    swig_link_libraries(<name> <item>...)\n\n  This command has same capabilities as :command:`target_link_libraries`\n  command.\n\n  .. note::\n\n    If variable ``UseSWIG_TARGET_NAME_PREFERENCE`` is set to ``STANDARD``, this\n    command is deprecated and :command:`target_link_libraries` command must be\n    used instead.\n\nSource file properties on module files **must** be set before the invocation\nof the ``swig_add_library`` command to specify special behavior of SWIG and\nensure generated files will receive the required settings.\n\n``CPLUSPLUS``\n  Call SWIG in c++ mode.  For example:\n\n  .. code-block:: cmake\n\n    set_property(SOURCE mymod.i PROPERTY CPLUSPLUS ON)\n    swig_add_library(mymod LANGUAGE python SOURCES mymod.i)\n\n``INCLUDE_DIRECTORIES``, ``COMPILE_DEFINITIONS`` and ``COMPILE_OPTIONS``\n  Add custom flags to SWIG compiler and have same semantic as properties\n  :prop_sf:`INCLUDE_DIRECTORIES`, :prop_sf:`COMPILE_DEFINITIONS` and\n  :prop_sf:`COMPILE_OPTIONS`.\n\n``USE_TARGET_INCLUDE_DIRECTORIES``\n  If set to ``TRUE``, contents of target property\n  :prop_tgt:`INCLUDE_DIRECTORIES` will be forwarded to ``SWIG`` compiler.\n  If set to ``FALSE`` target property :prop_tgt:`INCLUDE_DIRECTORIES` will be\n  ignored. If not set, target property ``SWIG_USE_TARGET_INCLUDE_DIRECTORIES``\n  will be considered.\n\n``GENERATED_INCLUDE_DIRECTORIES``, ``GENERATED_COMPILE_DEFINITIONS`` and ``GENERATED_COMPILE_OPTIONS``\n  Add custom flags to the C/C++ generated source. They will fill, respectively,\n  properties :prop_sf:`INCLUDE_DIRECTORIES`, :prop_sf:`COMPILE_DEFINITIONS` and\n  :prop_sf:`COMPILE_OPTIONS` of generated C/C++ file.\n\n``DEPENDS``\n  Specify additional dependencies to the source file.\n\n``SWIG_MODULE_NAME``\n  Specify the actual import name of the module in the target language.\n  This is required if it cannot be scanned automatically from source\n  or different from the module file basename.  For example:\n\n  .. code-block:: cmake\n\n    set_property(SOURCE mymod.i PROPERTY SWIG_MODULE_NAME mymod_realname)\n\nTarget library properties can be set to apply same configuration to all SWIG\ninput files.\n\n``SWIG_INCLUDE_DIRECTORIES``, ``SWIG_COMPILE_DEFINITIONS`` and ``SWIG_COMPILE_OPTIONS``\n  These properties will be applied to all SWIG input files and have same\n  semantic as target properties :prop_tgt:`INCLUDE_DIRECTORIES`,\n  :prop_tgt:`COMPILE_DEFINITIONS` and :prop_tgt:`COMPILE_OPTIONS`.\n\n  .. code-block:: cmake\n\n    set (UseSWIG_TARGET_NAME_PREFERENCE STANDARD)\n    swig_add_library(mymod LANGUAGE python SOURCES mymod.i)\n    set_property(TARGET mymod PROPERTY SWIG_COMPILE_DEFINITIONS MY_DEF1 MY_DEF2)\n    set_property(TARGET mymod PROPERTY SWIG_COMPILE_OPTIONS -bla -blb)\n\n``SWIG_USE_TARGET_INCLUDE_DIRECTORIES``\n  If set to ``TRUE``, contents of target property\n  :prop_tgt:`INCLUDE_DIRECTORIES` will be forwarded to ``SWIG`` compiler.\n  If set to ``FALSE`` or not defined, target property\n  :prop_tgt:`INCLUDE_DIRECTORIES` will be ignored. This behavior can be\n  overridden by specifying source property ``USE_TARGET_INCLUDE_DIRECTORIES``.\n\n``SWIG_GENERATED_INCLUDE_DIRECTORIES``, ``SWIG_GENERATED_COMPILE_DEFINITIONS`` and ``SWIG_GENERATED_COMPILE_OPTIONS``\n  These properties will populate, respectively, properties\n  :prop_sf:`INCLUDE_DIRECTORIES`, :prop_sf:`COMPILE_DEFINITIONS` and\n  :prop_sf:`COMPILE_FLAGS` of all generated C/C++ files.\n\n``SWIG_DEPENDS``\n  Add dependencies to all SWIG input files.\n\nThe following target properties are output properties and can be used to get\ninformation about support files generated by ``SWIG`` interface compilation.\n\n``SWIG_SUPPORT_FILES``\n  This output property list of wrapper files generated during SWIG compilation.\n\n  .. code-block:: cmake\n\n    set (UseSWIG_TARGET_NAME_PREFERENCE STANDARD)\n    swig_add_library(mymod LANGUAGE python SOURCES mymod.i)\n    get_property(support_files TARGET mymod PROPERTY SWIG_SUPPORT_FILES)\n\n  .. note::\n\n    Only most principal support files are listed. In case some advanced\n    features of ``SWIG`` are used (for example ``%template``), associated\n    support files may not be listed. Prefer to use the\n    ``SWIG_SUPPORT_FILES_DIRECTORY`` property to handle support files.\n\n``SWIG_SUPPORT_FILES_DIRECTORY``\n  This output property specifies the directory where support files will be\n  generated.\n\nSome variables can be set to customize the behavior of ``swig_add_library``\nas well as ``SWIG``:\n\n``UseSWIG_MODULE_VERSION``\n  Specify different behaviors for ``UseSWIG`` module.\n\n  * Set to 1 or undefined: Legacy behavior is applied.\n  * Set to 2: A new strategy is applied regarding support files: the output\n    directory of support files is erased before ``SWIG`` interface compilation.\n\n``CMAKE_SWIG_FLAGS``\n  Add flags to all swig calls.\n\n``CMAKE_SWIG_OUTDIR``\n  Specify where to write the language specific files (swig ``-outdir`` option).\n\n``SWIG_OUTFILE_DIR``\n  Specify an output directory name where the generated source file will be\n  placed.  If not specified, ``CMAKE_SWIG_OUTDIR`` is used.\n\n``SWIG_MODULE_<name>_EXTRA_DEPS``\n  Specify extra dependencies for the generated module for ``<name>``.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# respect user choice regarding CMP0078 policy\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "##\n\n## PRIVATE functions\n\n##\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# get_filename_component(filename \"${infile}\" ABSOLUTE)\n\n# string(UUID uuid NAMESPACE 9735D882-D2F8-4E1D-88C9-A0A4F1F6ECA4\n\n#   NAME ${name}-${language}-${filename} TYPE SHA1)\n\n# set(${__timestamp} \"${workingdir}/${uuid}.stamp\" PARENT_SCOPE)\n",
        "Line" : 246,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\n\n# For given swig module initialize variables associated with it\n\n#\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# For a given language, input file, and output file, determine extra files that\n\n# will be generated. This is internal swig macro.\n\n#\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# try to get module name from \"%module foo\" syntax\n",
        "Line" : 289,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# try to get module name from \"%module (options=...) foo\" syntax\n",
        "Line" : 297,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# fallback to file basename\n",
        "Line" : 305,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Treat extra outputs as plain files regardless of language.\n",
        "Line" : 316,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "#\n\n# Take swig (*.i) file and add proper custom commands for it\n\n#\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# If CMAKE_SWIG_OUTDIR was specified then pass it to -outdir\n",
        "Line" : 332,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# handle various swig compile flags properties\n",
        "Line" : 358,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# not defined at source level, rely on target level\n",
        "Line" : 370,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# legacy support\n",
        "Line" : 387,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# add the language into the name of the file (i.e. TCL_wrap)\n\n# this allows for the same .i file to be wrapped into different languages\n",
        "Line" : 403,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# default is c, so add c++ flag if it is c++\n",
        "Line" : 424,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# This makes sure that the name used in the generated DllImport\n\n# matches the library name created by CMake\n",
        "Line" : 432,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# dependencies\n",
        "Line" : 439,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# as part of custom command, start by removing old generated files\n\n# to ensure obsolete files do not stay\n",
        "Line" : 447,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# IMPLICIT_DEPENDS below can not handle situations where a dependent file is\n\n# removed. We need an extra step with timestamp and custom target, see #16830\n\n# As this is needed only for Makefile generator do it conditionally\n",
        "Line" : 458,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Let's create the ${outdir} at execution time, in case dir contains $(OutDir)\n",
        "Line" : 479,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "## add all properties for generated file to various properties\n",
        "Line" : 500,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# legacy support\n",
        "Line" : 516,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "#\n\n# Create Swig module\n\n#\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# compute real target name.\n",
        "Line" : 586,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# swig will produce a module.py containing an 'import _modulename' statement,\n\n# which implies having a corresponding _modulename.so (*NIX), _modulename.pyd (Win32),\n\n# unless the -noproxy flag is used\n",
        "Line" : 589,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# a target with same name is already defined.\n\n# call NOW add_library command to raise the most useful error message\n",
        "Line" : 598,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# set special variable to pass extra information to command SWIG_ADD_SOURCE_TO_MODULE\n\n# which cannot be changed due to legacy compatibility\n",
        "Line" : 605,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# set again, locally, predefined variables to ensure compatibility\n\n# with command SWIG_ADD_SOURCE_TO_MODULE\n",
        "Line" : 635,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# see IMPLICIT_DEPENDS above\n",
        "Line" : 670,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# In java you want:\n\n#      System.loadLibrary(\"LIBRARY\");\n\n# then JNI will look for a library whose name is platform dependent, namely\n\n#   MacOS  : libLIBRARY.jnilib\n\n#   Windows: LIBRARY.dll\n\n#   Linux  : libLIBRARY.so\n",
        "Line" : 684,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# swig will produce a module.py containing an 'import _modulename' statement,\n\n# which implies having a corresponding _modulename.so (*NIX), _modulename.pyd (Win32),\n\n# unless the -noproxy flag is used\n",
        "Line" : 702,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "# Python extension modules on Windows must have the extension \".pyd\"\n\n# instead of \".dll\" as of Python 2.5.  Older python versions do support\n\n# this suffix.\n\n# http://docs.python.org/whatsnew/ports.html#SECTION0001510000000000000000\n\n# <quote>\n\n# Windows: .dll is no longer supported as a filename extension for extension modules.\n\n# .pyd is now the only filename extension that will be searched for.\n\n# </quote>\n",
        "Line" : 709,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# In ruby you want:\n\n#      require 'LIBRARY'\n\n# then ruby will look for a library whose name is platform dependent, namely\n\n#   MacOS  : LIBRARY.bundle\n\n#   Windows: LIBRARY.dll\n\n#   Linux  : LIBRARY.so\n",
        "Line" : 723,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# assume empty prefix because we expect the module to be dynamically loaded\n",
        "Line" : 734,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# assume empty prefix because we expect the module to be dynamically loaded\n",
        "Line" : 740,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# target property SWIG_SUPPORT_FILES_DIRECTORY specify output directory of support files\n",
        "Line" : 744,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# target property SWIG_SUPPORT_FILES lists principal proxy support files\n",
        "Line" : 746,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# to ensure legacy behavior, export some variables\n",
        "Line" : 761,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# the last one is a bit crazy but it is documented, so...\n\n# NOTA: works as expected if only ONE input file is specified\n",
        "Line" : 767,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "#\n\n# Like TARGET_LINK_LIBRARIES but for swig modules\n\n#\n",
        "Line" : 772,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "deps/src/cmake-3.13.4/Modules/UseSWIG/ManageSupportFiles.cmake" : {
      "ObjectId" : "4a03900b7fc78ca935c90d55306df5271a417871",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Collect current list of generated files\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# clean-up the output directory\n\n## compute full paths\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "## remove generated files from the output directory\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# clean-up working directory\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Collect current list of generated files\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# copy files to the output directory\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/Use_wxWindows.cmake" : {
      "ObjectId" : "19e376ab38f428b4612dfba172a6beac3ec9df13",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# Use_wxWindows\n\n# -------------\n\n#\n\n#\n\n#\n\n#\n\n# This convenience include finds if wxWindows is installed and set the\n\n# appropriate libs, incdirs, flags etc.  author Jan Woetzel <jw -at-\n\n# mip.informatik.uni-kiel.de> (07/2003)\n\n#\n\n# USAGE:\n\n#\n\n# ::\n\n#\n\n#    just include Use_wxWindows.cmake\n\n#    in your projects CMakeLists.txt\n\n#\n\n# include( ${CMAKE_MODULE_PATH}/Use_wxWindows.cmake)\n\n#\n\n# ::\n\n#\n\n#    if you are sure you need GL then\n\n#\n\n# set(WXWINDOWS_USE_GL 1)\n\n#\n\n# ::\n\n#\n\n#    *before* you include this file.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -----------------------------------------------------\n\n# 16.Feb.2004: changed INCLUDE to FIND_PACKAGE to read from users own non-system CMAKE_MODULE_PATH (Jan Woetzel JW)\n\n# 07/2006: rewrite as FindwxWidgets.cmake, kept for backward compatibility JW\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ------------------------\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#message(\"DBG Use_wxWindows.cmake:  WXWINDOWS_INCLUDE_DIR=${WXWINDOWS_INCLUDE_DIR} WXWINDOWS_LINK_DIRECTORIES=${WXWINDOWS_LINK_DIRECTORIES}     WXWINDOWS_LIBRARIES=${WXWINDOWS_LIBRARIES}  CMAKE_WXWINDOWS_CXX_FLAGS=${CMAKE_WXWINDOWS_CXX_FLAGS} WXWINDOWS_DEFINITIONS=${WXWINDOWS_DEFINITIONS}\")\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/UsewxWidgets.cmake" : {
      "ObjectId" : "a50d03d53f7c8e5dfbb7a0d09cdfcbccf357a1e9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# UsewxWidgets\n\n# ------------\n\n#\n\n# Convenience include for using wxWidgets library.\n\n#\n\n# Determines if wxWidgets was FOUND and sets the appropriate libs,\n\n# incdirs, flags, etc.  INCLUDE_DIRECTORIES and LINK_DIRECTORIES are\n\n# called.\n\n#\n\n# USAGE\n\n#\n\n# ::\n\n#\n\n#   # Note that for MinGW users the order of libs is important!\n\n#   find_package(wxWidgets REQUIRED net gl core base)\n\n#   include(${wxWidgets_USE_FILE})\n\n#   # and for each of your dependent executable/library targets:\n\n#   target_link_libraries(<YourTarget> ${wxWidgets_LIBRARIES})\n\n#\n\n#\n\n#\n\n# DEPRECATED\n\n#\n\n# ::\n\n#\n\n#   LINK_LIBRARIES is not called in favor of adding dependencies per target.\n\n#\n\n#\n\n#\n\n# AUTHOR\n\n#\n\n# ::\n\n#\n\n#   Jan Woetzel <jw -at- mip.informatik.uni-kiel.de>\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# debug message and logging.\n\n# comment these out for distribution\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  set(LOGFILE \"${PROJECT_BINARY_DIR}/CMakeOutput.log\")\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#  file(APPEND ${LOGFILE} \"${CMAKE_CURRENT_LIST_FILE}(${CMAKE_CURRENT_LIST_LINE}):   ${_MSG}\\n\")\n\n#  message(STATUS \"${CMAKE_CURRENT_LIST_FILE}(${CMAKE_CURRENT_LIST_LINE}): ${_MSG}\")\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Flags are expected to be a string here, not a list.\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# DEPRECATED JW\n\n# just for backward compatibility: add deps to all targets\n\n# library projects better use advanced find_package(wxWidgets) directly.\n\n#if(wxWidgets_LIBRARIES)\n\n#  link_libraries(${wxWidgets_LIBRARIES})\n\n#  # BUG: str too long:  MSG(\"wxWidgets_LIBRARIES=${wxWidgets_LIBRARIES}\")\n\n#  if(LOGFILE)\n\n#    file(APPEND ${LOGFILE} \"${CMAKE_CURRENT_LIST_FILE}(${CMAKE_CURRENT_LIST_LINE}):   ${wxWidgets_LIBRARIES}\\n\")\n\n#  endif()\n\n#endif()\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Modules/VTKCompatibility.cmake" : {
      "ObjectId" : "51d6e2fe3d1a884279c78df42e2e8e948c4da622",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# work around an old bug in VTK\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for very old VTK (versions prior to 4.2)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Modules/WriteBasicConfigVersionFile.cmake" : {
      "ObjectId" : "2f7c80ab81b32c3db97370a58acdd4c3bca70ab5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# WriteBasicConfigVersionFile\n\n# ---------------------------\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#   WRITE_BASIC_CONFIG_VERSION_FILE( filename\n\n#     [VERSION major.minor.patch]\n\n#     COMPATIBILITY (AnyNewerVersion|SameMajorVersion|SameMinorVersion|ExactVersion)\n\n#     )\n\n#\n\n#\n\n#\n\n# Deprecated, see WRITE_BASIC_PACKAGE_VERSION_FILE(), it is identical.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/WriteCompilerDetectionHeader.cmake" : {
      "ObjectId" : "3718e9ddf4205101cdaeefc4185c9b67c3f131cc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# WriteCompilerDetectionHeader\n\n# ----------------------------\n\n#\n\n# This module provides the function write_compiler_detection_header().\n\n#\n\n# The ``WRITE_COMPILER_DETECTION_HEADER`` function can be used to generate\n\n# a file suitable for preprocessor inclusion which contains macros to be\n\n# used in source code::\n\n#\n\n#    write_compiler_detection_header(\n\n#              FILE <file>\n\n#              PREFIX <prefix>\n\n#              [OUTPUT_FILES_VAR <output_files_var> OUTPUT_DIR <output_dir>]\n\n#              COMPILERS <compiler> [...]\n\n#              FEATURES <feature> [...]\n\n#              [BARE_FEATURES <feature> [...]]\n\n#              [VERSION <version>]\n\n#              [PROLOG <prolog>]\n\n#              [EPILOG <epilog>]\n\n#              [ALLOW_UNKNOWN_COMPILERS]\n\n#              [ALLOW_UNKNOWN_COMPILER_VERSIONS]\n\n#    )\n\n#\n\n# The ``write_compiler_detection_header`` function generates the\n\n# file ``<file>`` with macros which all have the prefix ``<prefix>``.\n\n#\n\n# By default, all content is written directly to the ``<file>``.  The\n\n# ``OUTPUT_FILES_VAR`` may be specified to cause the compiler-specific\n\n# content to be written to separate files.  The separate files are then\n\n# available in the ``<output_files_var>`` and may be consumed by the caller\n\n# for installation for example.  The ``OUTPUT_DIR`` specifies a relative\n\n# path from the main ``<file>`` to the compiler-specific files. For example:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    write_compiler_detection_header(\n\n#      FILE climbingstats_compiler_detection.h\n\n#      PREFIX ClimbingStats\n\n#      OUTPUT_FILES_VAR support_files\n\n#      OUTPUT_DIR compilers\n\n#      COMPILERS GNU Clang MSVC Intel\n\n#      FEATURES cxx_variadic_templates\n\n#    )\n\n#    install(FILES\n\n#      ${CMAKE_CURRENT_BINARY_DIR}/climbingstats_compiler_detection.h\n\n#      DESTINATION include\n\n#    )\n\n#    install(FILES\n\n#      ${support_files}\n\n#      DESTINATION include/compilers\n\n#    )\n\n#\n\n#\n\n# ``VERSION`` may be used to specify the API version to be generated.\n\n# Future versions of CMake may introduce alternative APIs.  A given\n\n# API is selected by any ``<version>`` value greater than or equal\n\n# to the version of CMake that introduced the given API and less\n\n# than the version of CMake that introduced its succeeding API.\n\n# The value of the :variable:`CMAKE_MINIMUM_REQUIRED_VERSION`\n\n# variable is used if no explicit version is specified.\n\n# (As of CMake version |release| there is only one API version.)\n\n#\n\n# ``PROLOG`` may be specified as text content to write at the start of the\n\n# header. ``EPILOG`` may be specified as text content to write at the end\n\n# of the header\n\n#\n\n# At least one ``<compiler>`` and one ``<feature>`` must be listed.  Compilers\n\n# which are known to CMake, but not specified are detected and a preprocessor\n\n# ``#error`` is generated for them.  A preprocessor macro matching\n\n# ``<PREFIX>_COMPILER_IS_<compiler>`` is generated for each compiler\n\n# known to CMake to contain the value ``0`` or ``1``.\n\n#\n\n# Possible compiler identifiers are documented with the\n\n# :variable:`CMAKE_<LANG>_COMPILER_ID` variable.\n\n# Available features in this version of CMake are listed in the\n\n# :prop_gbl:`CMAKE_C_KNOWN_FEATURES` and\n\n# :prop_gbl:`CMAKE_CXX_KNOWN_FEATURES` global properties.\n\n# The ``{c,cxx}_std_*`` meta-features are ignored if requested.\n\n#\n\n# See the :manual:`cmake-compile-features(7)` manual for information on\n\n# compile features.\n\n#\n\n# ``BARE_FEATURES`` will define the compatibility macros with the name used in\n\n# newer versions of the language standard, so the code can use the new feature\n\n# name unconditionally.\n\n#\n\n# ``ALLOW_UNKNOWN_COMPILERS`` and ``ALLOW_UNKNOWN_COMPILER_VERSIONS`` cause\n\n# the module to generate conditions that treat unknown compilers as simply\n\n# lacking all features.  Without these options the default behavior is to\n\n# generate a ``#error`` for unknown compilers and versions.\n\n#\n\n# Feature Test Macros\n\n# ===================\n\n#\n\n# For each compiler, a preprocessor macro is generated matching\n\n# ``<PREFIX>_COMPILER_IS_<compiler>`` which has the content either ``0``\n\n# or ``1``, depending on the compiler in use. Preprocessor macros for\n\n# compiler version components are generated matching\n\n# ``<PREFIX>_COMPILER_VERSION_MAJOR`` ``<PREFIX>_COMPILER_VERSION_MINOR``\n\n# and ``<PREFIX>_COMPILER_VERSION_PATCH`` containing decimal values\n\n# for the corresponding compiler version components, if defined.\n\n#\n\n# A preprocessor test is generated based on the compiler version\n\n# denoting whether each feature is enabled.  A preprocessor macro\n\n# matching ``<PREFIX>_COMPILER_<FEATURE>``, where ``<FEATURE>`` is the\n\n# upper-case ``<feature>`` name, is generated to contain the value\n\n# ``0`` or ``1`` depending on whether the compiler in use supports the\n\n# feature:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    write_compiler_detection_header(\n\n#      FILE climbingstats_compiler_detection.h\n\n#      PREFIX ClimbingStats\n\n#      COMPILERS GNU Clang AppleClang MSVC Intel\n\n#      FEATURES cxx_variadic_templates\n\n#    )\n\n#\n\n# .. code-block:: c++\n\n#\n\n#    #if ClimbingStats_COMPILER_CXX_VARIADIC_TEMPLATES\n\n#    template<typename... T>\n\n#    void someInterface(T t...) { /* ... */ }\n\n#    #else\n\n#    // Compatibility versions\n\n#    template<typename T1>\n\n#    void someInterface(T1 t1) { /* ... */ }\n\n#    template<typename T1, typename T2>\n\n#    void someInterface(T1 t1, T2 t2) { /* ... */ }\n\n#    template<typename T1, typename T2, typename T3>\n\n#    void someInterface(T1 t1, T2 t2, T3 t3) { /* ... */ }\n\n#    #endif\n\n#\n\n# Symbol Macros\n\n# =============\n\n#\n\n# Some additional symbol-defines are created for particular features for\n\n# use as symbols which may be conditionally defined empty:\n\n#\n\n# .. code-block:: c++\n\n#\n\n#    class MyClass ClimbingStats_FINAL\n\n#    {\n\n#        ClimbingStats_CONSTEXPR int someInterface() { return 42; }\n\n#    };\n\n#\n\n# The ``ClimbingStats_FINAL`` macro will expand to ``final`` if the\n\n# compiler (and its flags) support the ``cxx_final`` feature, and the\n\n# ``ClimbingStats_CONSTEXPR`` macro will expand to ``constexpr``\n\n# if ``cxx_constexpr`` is supported.\n\n#\n\n# If ``BARE_FEATURES cxx_final`` was given as argument the ``final`` keyword\n\n# will be defined for old compilers, too.\n\n#\n\n# The following features generate corresponding symbol defines and if they\n\n# are available as ``BARE_FEATURES``:\n\n#\n\n# ========================== =================================== ================= ======\n\n#         Feature                          Define                      Symbol       bare\n\n# ========================== =================================== ================= ======\n\n# ``c_restrict``              ``<PREFIX>_RESTRICT``               ``restrict``      yes\n\n# ``cxx_constexpr``           ``<PREFIX>_CONSTEXPR``              ``constexpr``     yes\n\n# ``cxx_deleted_functions``   ``<PREFIX>_DELETED_FUNCTION``       ``= delete``\n\n# ``cxx_extern_templates``    ``<PREFIX>_EXTERN_TEMPLATE``        ``extern``\n\n# ``cxx_final``               ``<PREFIX>_FINAL``                  ``final``         yes\n\n# ``cxx_noexcept``            ``<PREFIX>_NOEXCEPT``               ``noexcept``      yes\n\n# ``cxx_noexcept``            ``<PREFIX>_NOEXCEPT_EXPR(X)``       ``noexcept(X)``\n\n# ``cxx_override``            ``<PREFIX>_OVERRIDE``               ``override``      yes\n\n# ========================== =================================== ================= ======\n\n#\n\n# Compatibility Implementation Macros\n\n# ===================================\n\n#\n\n# Some features are suitable for wrapping in a macro with a backward\n\n# compatibility implementation if the compiler does not support the feature.\n\n#\n\n# When the ``cxx_static_assert`` feature is not provided by the compiler,\n\n# a compatibility implementation is available via the\n\n# ``<PREFIX>_STATIC_ASSERT(COND)`` and\n\n# ``<PREFIX>_STATIC_ASSERT_MSG(COND, MSG)`` function-like macros. The macros\n\n# expand to ``static_assert`` where that compiler feature is available, and\n\n# to a compatibility implementation otherwise. In the first form, the\n\n# condition is stringified in the message field of ``static_assert``.  In\n\n# the second form, the message ``MSG`` is passed to the message field of\n\n# ``static_assert``, or ignored if using the backward compatibility\n\n# implementation.\n\n#\n\n# The ``cxx_attribute_deprecated`` feature provides a macro definition\n\n# ``<PREFIX>_DEPRECATED``, which expands to either the standard\n\n# ``[[deprecated]]`` attribute or a compiler-specific decorator such\n\n# as ``__attribute__((__deprecated__))`` used by GNU compilers.\n\n#\n\n# The ``cxx_alignas`` feature provides a macro definition\n\n# ``<PREFIX>_ALIGNAS`` which expands to either the standard ``alignas``\n\n# decorator or a compiler-specific decorator such as\n\n# ``__attribute__ ((__aligned__))`` used by GNU compilers.\n\n#\n\n# The ``cxx_alignof`` feature provides a macro definition\n\n# ``<PREFIX>_ALIGNOF`` which expands to either the standard ``alignof``\n\n# decorator or a compiler-specific decorator such as ``__alignof__``\n\n# used by GNU compilers.\n\n#\n\n# ============================= ================================ ===================== ======\n\n#           Feature                          Define                     Symbol          bare\n\n# ============================= ================================ ===================== ======\n\n# ``cxx_alignas``                ``<PREFIX>_ALIGNAS``             ``alignas``\n\n# ``cxx_alignof``                ``<PREFIX>_ALIGNOF``             ``alignof``\n\n# ``cxx_nullptr``                ``<PREFIX>_NULLPTR``             ``nullptr``           yes\n\n# ``cxx_static_assert``          ``<PREFIX>_STATIC_ASSERT``       ``static_assert``\n\n# ``cxx_static_assert``          ``<PREFIX>_STATIC_ASSERT_MSG``   ``static_assert``\n\n# ``cxx_attribute_deprecated``   ``<PREFIX>_DEPRECATED``          ``[[deprecated]]``\n\n# ``cxx_attribute_deprecated``   ``<PREFIX>_DEPRECATED_MSG``      ``[[deprecated]]``\n\n# ``cxx_thread_local``           ``<PREFIX>_THREAD_LOCAL``        ``thread_local``\n\n# ============================= ================================ ===================== ======\n\n#\n\n# A use-case which arises with such deprecation macros is the deprecation\n\n# of an entire library.  In that case, all public API in the library may\n\n# be decorated with the ``<PREFIX>_DEPRECATED`` macro.  This results in\n\n# very noisy build output when building the library itself, so the macro\n\n# may be may be defined to empty in that case when building the deprecated\n\n# library:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   add_library(compat_support ${srcs})\n\n#   target_compile_definitions(compat_support\n\n#     PRIVATE\n\n#       CompatSupport_DEPRECATED=\n\n#   )\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ignored\n",
        "Line" : 277,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# ignored\n",
        "Line" : 279,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Version which introduced this function\n",
        "Line" : 332,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Modules/ecos_clean.cmake" : {
      "ObjectId" : "21126f624ff24a014a9a90923dfeff061353262e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# remove all directories, which consist of lower-case letters only\n\n# this skips e.g. CVS/ and .subversion/\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Modules/kde3uic.cmake" : {
      "ObjectId" : "cf0a57fa14817e00fb9874d874300c340f6b52a5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# used internally by KDE3Macros.cmake\n\n# neundorf@kde.org\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Packaging/QtSDK/ToolsCMakeXX.cmake" : {
      "ObjectId" : "99731fb5dc103b70fd62784ba9c00ce437c73f77",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake version\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install destinations\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Package\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CPack\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Source/CMakeInstallDestinations.cmake" : {
      "ObjectId" : "e82bec3cd055835e96092fd52663b7b73314ea63",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Keep formatting here consistent with bootstrap script expectations.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HAIKU\n",
        "Line" : 3,
        "CharPositionInLine" : 35
      },
      "2" : {
        "Text" : "# HAIKU\n",
        "Line" : 4,
        "CharPositionInLine" : 90
      },
      "3" : {
        "Text" : "# HAIKU\n",
        "Line" : 5,
        "CharPositionInLine" : 101
      },
      "4" : {
        "Text" : "# HAIKU\n",
        "Line" : 6,
        "CharPositionInLine" : 51
      },
      "5" : {
        "Text" : "# HAIKU\n",
        "Line" : 7,
        "CharPositionInLine" : 49
      },
      "6" : {
        "Text" : "# HAIKU\n",
        "Line" : 8,
        "CharPositionInLine" : 41
      },
      "7" : {
        "Text" : "# CYGWIN\n",
        "Line" : 10,
        "CharPositionInLine" : 35
      },
      "8" : {
        "Text" : "# CYGWIN\n",
        "Line" : 11,
        "CharPositionInLine" : 61
      },
      "9" : {
        "Text" : "# CYGWIN\n",
        "Line" : 12,
        "CharPositionInLine" : 64
      },
      "10" : {
        "Text" : "# CYGWIN\n",
        "Line" : 13,
        "CharPositionInLine" : 43
      },
      "11" : {
        "Text" : "# CYGWIN\n\n# CYGWIN\n",
        "Line" : 14,
        "CharPositionInLine" : 41
      },
      "12" : {
        "Text" : "# OTHER\n",
        "Line" : 17,
        "CharPositionInLine" : 35
      },
      "13" : {
        "Text" : "# OTHER\n",
        "Line" : 18,
        "CharPositionInLine" : 90
      },
      "14" : {
        "Text" : "# OTHER\n",
        "Line" : 19,
        "CharPositionInLine" : 87
      },
      "15" : {
        "Text" : "# OTHER\n",
        "Line" : 20,
        "CharPositionInLine" : 37
      },
      "16" : {
        "Text" : "# OTHER\n",
        "Line" : 21,
        "CharPositionInLine" : 35
      },
      "17" : {
        "Text" : "# OTHER\n",
        "Line" : 22,
        "CharPositionInLine" : 41
      },
      "18" : {
        "Text" : "# Populate the cache with empty values so we know when the user sets them.\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Use the default when the user did not set this variable.\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Remove leading slash to treat as relative to install prefix.\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 21
    },
    "deps/src/cmake-3.13.4/Source/CMakeLists.txt" : {
      "ObjectId" : "355be8613a585b3eca898919fd332065415954d2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if we can build support for ELF parsing.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# On Haiku, we need to include elf32.h from the private headers\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# ensure Unicode friendly APIs are used on Windows\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# minimize windows.h content\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# configure the .dox.in file\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# configure the .h file\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Tell CMake executable in the build tree where to find the source tree.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# add the include path to find the .h\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# let cmake know it is supposed to use it\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Check if we can build the ELF parser.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Check if we can build the Mach-O parser.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# Sources for CMakeLib\n\n#\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Lexers/Parsers\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# These don't compile without GPL code.\n\n# LexerParser/cmDependsJavaLexer.cxx\n\n# LexerParser/cmDependsJavaLexer.h\n\n# LexerParser/cmDependsJavaLexer.in.l\n\n# LexerParser/cmDependsJavaParser.cxx\n\n# LexerParser/cmDependsJavaParserTokens.h\n\n# LexerParser/cmDependsJavaParser.y\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# cmDependsJava.cxx\n\n# cmDependsJava.h\n\n# cmDependsJavaParserHelper.cxx\n\n# cmDependsJavaParserHelper.h\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Xcode only works on Apple\n",
        "Line" : 630,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Add a manifest file to executables on Windows to allow for\n\n# GetVersion to work properly on Windows 8 and above.\n",
        "Line" : 713,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Watcom support\n",
        "Line" : 719,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Ninja support\n",
        "Line" : 728,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Temporary variable for tools targets\n",
        "Line" : 745,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# abuse KWSys check cache entry\n",
        "Line" : 765,
        "CharPositionInLine" : 34
      },
      "22" : {
        "Text" : "# create a library used by the command line and the GUI\n",
        "Line" : 774,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# the atomic instructions are implemented using libatomic on some platforms,\n\n# so linking to that may be required\n",
        "Line" : 788,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# On Apple we need CoreFoundation and CoreServices\n",
        "Line" : 796,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# We need the rpcrt4 library on Windows.\n\n# We need the crypt32 library on Windows for crypto/cert APIs.\n",
        "Line" : 803,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "#\n\n# CTestLib\n\n#\n",
        "Line" : 810,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#\n\n# Sources for CTestLib\n\n#\n",
        "Line" : 818,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Build CTestLib\n",
        "Line" : 879,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#\n\n# CPack\n\n#\n",
        "Line" : 883,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\n\n# Sources for CPack\n\n#\n",
        "Line" : 889,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# CPack IFW generator\n",
        "Line" : 910,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Optionally, try to use pkg(8)\n",
        "Line" : 938,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# On UNIX, you may find FreeBSD's pkg(8) and attendant\n\n# library -- it can be used on FreeBSD, Dragonfly, NetBSD,\n\n# OpenBSD and also Linux and OSX. Look for the header and\n\n# the library; it's a warning on FreeBSD if they're not\n\n# found, and informational on other platforms.\n",
        "Line" : 940,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Build CPackLib\n",
        "Line" : 1007,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Some compilers produce errors in the CoreServices framework headers.\n\n# Ideally such errors should be fixed by either the compiler vendor\n\n# or the framework source, but we try to workaround it and build anyway.\n\n# If it does not work, build with reduced functionality and warn.\n",
        "Line" : 1011,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Build CMake executable\n",
        "Line" : 1047,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Build CTest executable\n",
        "Line" : 1066,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Build CPack executable\n",
        "Line" : 1071,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Curses GUI\n",
        "Line" : 1076,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Qt GUI\n",
        "Line" : 1081,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Add Windows executable version information.\n",
        "Line" : 1091,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# We use a separate object library for this to work around a limitation of\n\n# MinGW's windres tool with spaces in the path to the include directories.\n",
        "Line" : 1094,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Install tools\n",
        "Line" : 1103,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Unset temporary variables\n",
        "Line" : 1112,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 45
    },
    "deps/src/cmake-3.13.4/Source/CMakeVersion.cmake" : {
      "ObjectId" : "025ce327c344859e21857926d337aa33aec35edf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake version number components.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMake_VERSION_RC 0)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Source/CMakeVersionCompute.cmake" : {
      "ObjectId" : "72a580058969b7bf057d3993b45c787179bc6f18",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Load version number components.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Releases define a small patch level.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# may be set to 1 by CMakeVersionSource\n",
        "Line" : 10,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# Compute the full version string.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compute the binary version that appears in the RC file. Version\n\n# components in the RC file are 16-bit integers so we may have to\n\n# split the patch component.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Source/CMakeVersionSource.cmake" : {
      "ObjectId" : "5ea1de3f4b79d668be2fb6eb323e6d333a80ade4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to identify the current development source version.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Source/Checks/Curses.cmake" : {
      "ObjectId" : "2942b666aebe8ed3e37926173f0de96f1e0b08c8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try compiling a simple project using curses.\n\n# Pass in any cache entries that the user may have set.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# project name\n\n# target name\n",
        "Line" : 21,
        "CharPositionInLine" : 14
      },
      "2" : {
        "Text" : "# Convert result from cache entry to normal variable.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Source/Checks/Curses/CMakeLists.txt" : {
      "ObjectId" : "17318a33b2c1bf9c967e94ad70243c3409383a62",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Source/Checks/cm_c11_thread_local.cmake" : {
      "ObjectId" : "6b8d10b2bddf8355335a6d413c3ff497198f77fb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Source/Checks/cm_cxx14_check.cmake" : {
      "ObjectId" : "38606b9c90f5e8f389997accd2c49cce22bdd108",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Source/Checks/cm_cxx14_cstdio.cmake" : {
      "ObjectId" : "73f7e2ed5d395c4adb1b3a3a75aedd80ad0616b0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Source/Checks/cm_cxx17_check.cmake" : {
      "ObjectId" : "4da2fd7cacd23db1f617294aabf12bd94374377e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Source/Checks/cm_cxx_features.cmake" : {
      "ObjectId" : "1b57fd8e60ce54e2e8a6786990295b9328f10b0a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Filter out MSBuild output that looks like a warning.\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Filter out warnings caused by user flags.\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Filter out warnings caused by local configuration.\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Filter out xcodebuild warnings.\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# If using the feature causes warnings, treat it as broken/unavailable.\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Source/CursesDialog/CMakeLists.txt" : {
      "ObjectId" : "c51b0dd0e1bd32f7f00697871b0ff85732587453",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Source/CursesDialog/form/CMakeLists.txt" : {
      "ObjectId" : "b468f5b3180b0d5e1ffb12e4a517a790b21acd3b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Source/Modules/FindJsonCpp.cmake" : {
      "ObjectId" : "1951b6154afcf7a6c3a5d6d7a2b314c1b66e3d4e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindJsonCpp\n-----------\n\nFind JsonCpp includes and library.\n\nImported Targets\n^^^^^^^^^^^^^^^^\n\nAn :ref:`imported target <Imported targets>` named\n``JsonCpp::JsonCpp`` is provided if JsonCpp has been found.\n\nResult Variables\n^^^^^^^^^^^^^^^^\n\nThis module defines the following variables:\n\n``JsonCpp_FOUND``\n  True if JsonCpp was found, false otherwise.\n``JsonCpp_INCLUDE_DIRS``\n  Include directories needed to include JsonCpp headers.\n``JsonCpp_LIBRARIES``\n  Libraries needed to link to JsonCpp.\n``JsonCpp_VERSION_STRING``\n  The version of JsonCpp found.\n  May not be set for JsonCpp versions prior to 1.0.\n``JsonCpp_VERSION_MAJOR``\n  The major version of JsonCpp.\n``JsonCpp_VERSION_MINOR``\n  The minor version of JsonCpp.\n``JsonCpp_VERSION_PATCH``\n  The patch version of JsonCpp.\n\nCache Variables\n^^^^^^^^^^^^^^^\n\nThis module uses the following cache variables:\n\n``JsonCpp_LIBRARY``\n  The location of the JsonCpp library file.\n``JsonCpp_INCLUDE_DIR``\n  The location of the JsonCpp include directory containing ``json/json.h``.\n\nThe cache variables should not be used by project code.\nThey may be set by end users to point at JsonCpp components.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Extract version number if possible.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Provide documented result variables and targets.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Source/Modules/FindLibRHash.cmake" : {
      "ObjectId" : "86c6189f308842770f51fb2ba9b3050bcd0af35c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindLibRHash\n------------\n\nFind LibRHash include directory and library.\n\nImported Targets\n^^^^^^^^^^^^^^^^\n\nAn :ref:`imported target <Imported targets>` named\n``LibRHash::LibRHash`` is provided if LibRHash has been found.\n\nResult Variables\n^^^^^^^^^^^^^^^^\n\nThis module defines the following variables:\n\n``LibRHash_FOUND``\n  True if LibRHash was found, false otherwise.\n``LibRHash_INCLUDE_DIRS``\n  Include directories needed to include LibRHash headers.\n``LibRHash_LIBRARIES``\n  Libraries needed to link to LibRHash.\n\nCache Variables\n^^^^^^^^^^^^^^^\n\nThis module uses the following cache variables:\n\n``LibRHash_LIBRARY``\n  The location of the LibRHash library file.\n``LibRHash_INCLUDE_DIR``\n  The location of the LibRHash include directory containing ``rhash.h``.\n\nThe cache variables should not be used by project code.\nThey may be set by end users to point at LibRHash components.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Provide documented result variables and targets.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Source/Modules/FindLibUUID.cmake" : {
      "ObjectId" : "17f11c1f5e1a87bfe862f290c3a97ba6220b3941",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindLibUUID\n------------\n\nFind LibUUID include directory and library.\n\nImported Targets\n^^^^^^^^^^^^^^^^\n\nAn :ref:`imported target <Imported targets>` named\n``LibUUID::LibUUID`` is provided if LibUUID has been found.\n\nResult Variables\n^^^^^^^^^^^^^^^^\n\nThis module defines the following variables:\n\n``LibUUID_FOUND``\n  True if LibUUID was found, false otherwise.\n``LibUUID_INCLUDE_DIRS``\n  Include directories needed to include LibUUID headers.\n``LibUUID_LIBRARIES``\n  Libraries needed to link to LibUUID.\n\nCache Variables\n^^^^^^^^^^^^^^^\n\nThis module uses the following cache variables:\n\n``LibUUID_LIBRARY``\n  The location of the LibUUID library file.\n``LibUUID_INCLUDE_DIR``\n  The location of the LibUUID include directory containing ``uuid/uuid.h``.\n\nThe cache variables should not be used by project code.\nThey may be set by end users to point at LibUUID components.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Note: on current version of Cygwin, linking to libuuid.dll.a doesn't\n\n#       import the right symbols sometimes. Fix this by linking directly\n\n#       to the DLL that provides the symbols, instead.\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Provide documented result variables and targets.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Source/Modules/FindLibUV.cmake" : {
      "ObjectId" : "0554d62c23b0cf6f1a29e94f8e7ca0d61524f769",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindLibUV\n---------\n\nFind libuv includes and library.\n\nImported Targets\n^^^^^^^^^^^^^^^^\n\nAn :ref:`imported target <Imported targets>` named\n``LibUV::LibUV`` is provided if libuv has been found.\n\nResult Variables\n^^^^^^^^^^^^^^^^\n\nThis module defines the following variables:\n\n``LibUV_FOUND``\n  True if libuv was found, false otherwise.\n``LibUV_INCLUDE_DIRS``\n  Include directories needed to include libuv headers.\n``LibUV_LIBRARIES``\n  Libraries needed to link to libuv.\n``LibUV_VERSION``\n  The version of libuv found.\n``LibUV_VERSION_MAJOR``\n  The major version of libuv.\n``LibUV_VERSION_MINOR``\n  The minor version of libuv.\n``LibUV_VERSION_PATCH``\n  The patch version of libuv.\n\nCache Variables\n^^^^^^^^^^^^^^^\n\nThis module uses the following cache variables:\n\n``LibUV_LIBRARY``\n  The location of the libuv library file.\n``LibUV_INCLUDE_DIR``\n  The location of the libuv include directory containing ``uv.h``.\n\nThe cache variables should not be used by project code.\nThey may be set by end users to point at libuv components.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Extract version number if possible.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Provide documented result variables and targets.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Source/Modules/OverrideC.cmake" : {
      "ObjectId" : "f8299adb081adea32df0f6468404a470402b7693",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Source/Modules/OverrideCXX.cmake" : {
      "ObjectId" : "13689e2c55ffab61874b9e3e05df71c1431bc5ba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Source/QtDialog/CMakeLists.txt" : {
      "ObjectId" : "330b74729005128321579c5f4e6f3c45565373fe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Drop when CMake >= 2.8.11 required\n",
        "Line" : 6,
        "CharPositionInLine" : 32
      },
      "2" : {
        "Text" : "# Remove this when the minimum version of Qt is 4.6.\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# We need to install platform plugin and add qt.conf for Qt5 on Mac and Windows.\n\n# FIXME: This should be part of Qt5 CMake scripts, but unfortunately\n\n# Qt5 support is missing there.\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# cmake-gui has not been updated for `include-what-you-use`.\n\n# Block the tool until this is done.\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Files generated by MOC, RCC, and UIC may produce clang-tidy warnings.\n\n# We generate a dummy .clang-tidy file in the binary directory that disables\n\n# all clang-tidy checks except one that will never match.  This one check is\n\n# necessary; clang-tidy reports an error when no checks are enabled.\n\n# Since the Qt code generators will generate source files in the binary tree,\n\n# clang-tidy will load the configuration from this dummy file when the sources\n\n# are built.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# TBD: MACOSX_BUNDLE_BUNDLE_VERSION \"${CMAKE_BUNDLE_VERSION}\"\n",
        "Line" : 200,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Create a symlink in the build tree to provide a \"cmake-gui\" next\n\n# to the \"cmake\" executable that refers to the application bundle.\n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# install a desktop file so CMake appears in the application start menu\n\n# with an icon\n",
        "Line" : 228,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# install rules for including 3rd party libs such as Qt\n\n# if a system Qt is used (e.g. installed in /usr/lib/), it will not be included in the installation\n",
        "Line" : 246,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Source/kwsys/CMakeLists.txt" : {
      "ObjectId" : "43aec00bfbc37ae08ee58df31419e6d0ba9c4599",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing#kwsys for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The Kitware System Library is intended to be included in other\n\n# projects.  It is completely configurable in that the library's\n\n# namespace can be configured and the components that are included can\n\n# be selected invididually.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Typical usage is to import the kwsys directory tree into a\n\n# subdirectory under a parent project and enable the classes that will\n\n# be used.  All classes are disabled by default.  The CMake listfile\n\n# above this one configures the library as follows:\n\n#\n\n#  SET(KWSYS_NAMESPACE foosys)\n\n#  SET(KWSYS_USE_Directory 1)    # Enable Directory class.\n\n#  SUBDIRS(kwsys)\n\n#\n\n# Optional settings are as follows:\n\n#\n\n#  KWSYS_HEADER_ROOT = The directory into which to generate the kwsys headers.\n\n#                      A directory called \"${KWSYS_NAMESPACE}\" will be\n\n#                      created under this root directory to hold the files.\n\n#  KWSYS_SPLIT_OBJECTS_FROM_INTERFACE\n\n#                    = Instead of creating a single ${KWSYS_NAMESPACE} library\n\n#                      target, create three separate targets:\n\n#                        ${KWSYS_NAMESPACE}\n\n#                          - An INTERFACE library only containing usage\n\n#                            requirements.\n\n#                        ${KWSYS_NAMESPACE}_objects\n\n#                          - An OBJECT library for the built kwsys objects.\n\n#                            Note: This is omitted from the install rules\n\n#                        ${KWSYS_NAMESPACE}_private\n\n#                          - An INTERFACE library combining both that is\n\n#                            appropriate for use with PRIVATE linking in\n\n#                            target_link_libraries. Because of how interface\n\n#                            properties propagate, this target is not suitable\n\n#                            for use with PUBLIC or INTERFACE linking.\n\n#  KWSYS_ALIAS_TARGET = The name of an alias target to create to the actual target.\n\n#\n\n#    Example:\n\n#\n\n#      SET(KWSYS_HEADER_ROOT ${PROJECT_BINARY_DIR})\n\n#      INCLUDE_DIRECTORIES(${PROJECT_BINARY_DIR})\n\n#\n\n# Optional settings to setup install rules are as follows:\n\n#\n\n#  KWSYS_INSTALL_BIN_DIR     = The installation target directories into\n\n#  KWSYS_INSTALL_LIB_DIR       which the libraries and headers from\n\n#  KWSYS_INSTALL_INCLUDE_DIR   kwsys should be installed by a \"make install\".\n\n#                              The values should be specified relative to\n\n#                              the installation prefix and NOT start with '/'.\n\n#  KWSYS_INSTALL_DOC_DIR     = The installation target directory for documentation\n\n#                              such as copyright information.\n\n#\n\n#  KWSYS_INSTALL_COMPONENT_NAME_RUNTIME     = Name of runtime and development\n\n#  KWSYS_INSTALL_COMPONENT_NAME_DEVELOPMENT   installation components.\n\n#                                             If not given the install rules\n\n#                                             will not be in any component.\n\n#\n\n#  KWSYS_INSTALL_EXPORT_NAME = The EXPORT option value for install(TARGETS) calls.\n\n#\n\n#    Example:\n\n#\n\n#      SET(KWSYS_INSTALL_BIN_DIR bin)\n\n#      SET(KWSYS_INSTALL_LIB_DIR lib)\n\n#      SET(KWSYS_INSTALL_INCLUDE_DIR include)\n\n#      SET(KWSYS_INSTALL_COMPONENT_NAME_RUNTIME Runtime)\n\n#      SET(KWSYS_INSTALL_COMPONENT_NAME_DEVELOPMENT Development)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Once configured, kwsys should be used as follows from C or C++ code:\n\n#\n\n#  #include <foosys/Directory.hxx>\n\n#   ...\n\n#  foosys::Directory directory;\n\n#\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# NOTE: This library is intended for internal use by Kitware-driven\n\n# projects.  In order to keep it simple no attempt will be made to\n\n# maintain backward compatibility when changes are made to KWSys.\n\n# When an incompatible change is made Kitware's projects that use\n\n# KWSys will be fixed, but no notification will necessarily be sent to\n\n# any outside mailing list and no documentation of the change will be\n\n# written.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CMake 2.8, Define link interface - required by android_mk export\n\n# CMake 3.0, Compiler id for Apple Clang is now AppleClang.\n\n# CMake 3.0, MACOSX_RPATH is enabled by default.\n\n# CMake 3.0, Let the project command manage version variables.\n\n# CMake 3.2, Honor link flags in try_compile() source-file signature.\n\n# CMake 3.3, Honor visibility properties for all target types.\n",
        "Line" : 87,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# If a namespace is not specified, use \"kwsys\" and enable testing.\n\n# This should be the case only when kwsys is not included inside\n\n# another project and is being tested.\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# The project name is that of the specified namespace.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Tell CMake how to follow dependencies of sources in this directory.\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Select library components.\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable all components.\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Enforce component dependencies.\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Setup the large file support default.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Specify default 8 bit encoding for Windows\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Enable testing if building standalone.\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Choose default shared/static build if not specified.\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Include helper macros.\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Do full dependency headers.\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Use new KWSYS_INSTALL_*_DIR variable names to control installation.\n\n# Take defaults from the old names.  Note that there was no old name\n\n# for the bin dir, so we take the old lib dir name so DLLs will be\n\n# installed in a compatible way for old code.\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Setup header install rules.\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Setup library install rules.\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Install the shared library to the lib directory.\n",
        "Line" : 244,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Assign the shared library to the runtime component.\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Assign the namelink to the development component.\n",
        "Line" : 258,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Install the archive to the lib directory.\n",
        "Line" : 266,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Assign the archive to the development component.\n",
        "Line" : 270,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Install the runtime library to the bin directory.\n",
        "Line" : 278,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Assign the runtime library to the runtime component.\n",
        "Line" : 282,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Do not support old KWSYS_*a_INSTALL_DIR variable names.\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Generated source files will need this header.\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Select plugin module file name convention.\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# We require ANSI support from the C compiler.  Add any needed flags.\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Adjust compiler flags for some platforms.\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# it is known that version 3.85 fails and 6.25 works without these flags\n",
        "Line" : 334,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "# use new C++ library and improved template support\n",
        "Line" : 336,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure Large File Support.\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Large File Support is requested.\n",
        "Line" : 358,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Check for large file support.\n",
        "Line" : 361,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Large File Support is not requested.\n",
        "Line" : 372,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the standard library header wrappers based on compiler's\n\n# capabilities and parent project's request.  Enforce 0/1 as only\n\n# possible values for configuration into Configure.hxx.\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Check existence and uniqueness of long long and __int64.\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Enable the \"long long\" type if it is available.  It is standard in\n\n# C99 and C++03 but not in earlier standards.\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Enable the \"__int64\" type if it is available and unique.  It is not\n\n# standard.\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Look for type size helper macros.\n",
        "Line" : 415,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# Determine whether iostreams support long long.\n",
        "Line" : 421,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure some implementation details.\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Disable getpwnam for static linux builds since it depends on shared glibc\n",
        "Line" : 523,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Suppress LNK4089: all references to 'PSAPI.DLL' discarded by /OPT:REF\n",
        "Line" : 552,
        "CharPositionInLine" : 8
      },
      "48" : {
        "Text" : "# check for simple stack trace\n\n# usually it's in libc but on FreeBSD\n\n# it's in libexecinfo\n",
        "Line" : 601,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# we have the backtrace header check if it\n\n# can be used with this compiler\n",
        "Line" : 611,
        "CharPositionInLine" : 6
      },
      "50" : {
        "Text" : "# backtrace is supported by this system and compiler.\n\n# now check for the more advanced capabilities.\n",
        "Line" : 618,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "# check for symbol lookup using dladdr\n",
        "Line" : 622,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# we have symbol lookup libraries and headers\n\n# check if they can be used with this compiler\n",
        "Line" : 625,
        "CharPositionInLine" : 10
      },
      "53" : {
        "Text" : "# symbol lookup is supported by this system\n\n# and compiler.\n",
        "Line" : 632,
        "CharPositionInLine" : 12
      },
      "54" : {
        "Text" : "# c++ demangling support\n\n# check for cxxabi headers\n",
        "Line" : 638,
        "CharPositionInLine" : 8
      },
      "55" : {
        "Text" : "# check if cxxabi can be used with this\n\n# system and compiler.\n",
        "Line" : 642,
        "CharPositionInLine" : 10
      },
      "56" : {
        "Text" : "# c++ demangle using cxxabi is supported with\n\n# this system and compiler\n",
        "Line" : 647,
        "CharPositionInLine" : 12
      },
      "57" : {
        "Text" : "# basic backtrace works better with release build\n\n# don't bother with advanced features for release\n",
        "Line" : 653,
        "CharPositionInLine" : 8
      },
      "58" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Choose a directory for the generated headers.\n",
        "Line" : 712,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 720,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Assign the license to the runtime component since it must be\n\n# distributed with binary forms of this software.\n",
        "Line" : 722,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# Install the license under the documentation directory.\n",
        "Line" : 730,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build a list of classes and headers we need to implement the\n\n# selected components.  Initialize with required components.\n",
        "Line" : 736,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Add selected C++ classes.\n",
        "Line" : 749,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Use the corresponding class.\n",
        "Line" : 756,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "# Load component-specific CMake code.\n",
        "Line" : 759,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# Add selected C components.\n",
        "Line" : 766,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Use the corresponding header file.\n",
        "Line" : 771,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# Load component-specific CMake code.\n",
        "Line" : 774,
        "CharPositionInLine" : 4
      },
      "69" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build a list of sources for the library based on components that are\n\n# included.\n",
        "Line" : 781,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Add the proper sources for this platform's Process implementation.\n",
        "Line" : 787,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Use the Windows implementation.\n",
        "Line" : 790,
        "CharPositionInLine" : 4
      },
      "72" : {
        "Text" : "# Use the UNIX implementation.\n",
        "Line" : 793,
        "CharPositionInLine" : 4
      },
      "73" : {
        "Text" : "# Add selected C sources.\n",
        "Line" : 798,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Configure headers of C++ classes and construct the list of sources.\n",
        "Line" : 809,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Add this source to the list of source files for the library.\n",
        "Line" : 811,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# Configure the header for this class.\n",
        "Line" : 818,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "# Create an install target for the header.\n",
        "Line" : 823,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# Configure C headers.\n",
        "Line" : 831,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Configure the header into the given directory.\n",
        "Line" : 833,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "# Create an install target for the header.\n",
        "Line" : 838,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# Configure other C++ headers.\n",
        "Line" : 846,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Configure the header into the given directory.\n",
        "Line" : 848,
        "CharPositionInLine" : 2
      },
      "83" : {
        "Text" : "# Create an install target for the header.\n",
        "Line" : 853,
        "CharPositionInLine" : 2
      },
      "84" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add the library with the configured name and list of sources.\n",
        "Line" : 861,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# backtrace on FreeBSD is not in libc\n",
        "Line" : 916,
        "CharPositionInLine" : 8
      },
      "86" : {
        "Text" : "# for symbol lookup using dladdr\n",
        "Line" : 921,
        "CharPositionInLine" : 8
      },
      "87" : {
        "Text" : "# Apply user-defined target properties to the library.\n",
        "Line" : 932,
        "CharPositionInLine" : 2
      },
      "88" : {
        "Text" : "# Set up include usage requirement\n",
        "Line" : 938,
        "CharPositionInLine" : 2
      },
      "89" : {
        "Text" : "# Create an install target for the library.\n",
        "Line" : 948,
        "CharPositionInLine" : 2
      },
      "90" : {
        "Text" : "# Add a C-only library if requested.\n",
        "Line" : 957,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# Apply user-defined target properties to the library.\n",
        "Line" : 989,
        "CharPositionInLine" : 2
      },
      "92" : {
        "Text" : "# Set up include usage requirement\n",
        "Line" : 995,
        "CharPositionInLine" : 2
      },
      "93" : {
        "Text" : "# Create an install target for the library.\n",
        "Line" : 1005,
        "CharPositionInLine" : 2
      },
      "94" : {
        "Text" : "# For building kwsys itself, we use a macro defined on the command\n\n# line to configure the namespace in the C and C++ source files.\n",
        "Line" : 1011,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# Disable deprecation warnings for standard C functions.\n",
        "Line" : 1015,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# Help enforce the use of wide Windows apis.\n",
        "Line" : 1026,
        "CharPositionInLine" : 2
      },
      "97" : {
        "Text" : "# Activate code in \"String.c\".  See the comment in the source.\n",
        "Line" : 1031,
        "CharPositionInLine" : 2
      },
      "98" : {
        "Text" : "# Set default 8 bit encoding in \"EndcodingC.c\".\n",
        "Line" : 1037,
        "CharPositionInLine" : 2
      },
      "99" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Setup testing if not being built as part of another project.\n",
        "Line" : 1042,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# Compute the location of executables.\n",
        "Line" : 1046,
        "CharPositionInLine" : 4
      },
      "101" : {
        "Text" : "# C tests\n",
        "Line" : 1052,
        "CharPositionInLine" : 4
      },
      "102" : {
        "Text" : "# C++ tests\n",
        "Line" : 1073,
        "CharPositionInLine" : 4
      },
      "103" : {
        "Text" : "# If kwsys contains the DynamicLoader, need extra library\n",
        "Line" : 1119,
        "CharPositionInLine" : 6
      },
      "104" : {
        "Text" : "# Process tests.\n",
        "Line" : 1183,
        "CharPositionInLine" : 4
      },
      "105" : {
        "Text" : "# Some Apple compilers produce bad optimizations in this source.\n",
        "Line" : 1197,
        "CharPositionInLine" : 4
      },
      "106" : {
        "Text" : "# Tell IBM XL not to warn about our test infinite loop\n",
        "Line" : 1201,
        "CharPositionInLine" : 6
      },
      "107" : {
        "Text" : "# v13.1.[1-6] on Linux ppc64le is clang based and does not accept\n\n# the -qsuppress option, so just suppress all warnings.\n",
        "Line" : 1205,
        "CharPositionInLine" : 8
      },
      "108" : {
        "Text" : "# Test SharedForward\n",
        "Line" : 1217,
        "CharPositionInLine" : 4
      },
      "109" : {
        "Text" : "# Configure some test properties.\n",
        "Line" : 1227,
        "CharPositionInLine" : 4
      },
      "110" : {
        "Text" : "# We expect test to fail\n",
        "Line" : 1229,
        "CharPositionInLine" : 6
      },
      "111" : {
        "Text" : "# Set up ctest custom configuration file.\n",
        "Line" : 1236,
        "CharPositionInLine" : 4
      },
      "112" : {
        "Text" : "# Suppress known consistent failures on buggy systems.\n",
        "Line" : 1240,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 113
    },
    "deps/src/cmake-3.13.4/Source/kwsys/CTestConfig.cmake" : {
      "ObjectId" : "33ea84c9d2f0b9759a30fe2966cce37729bf4651",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing#kwsys for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Source/kwsys/CTestCustom.cmake" : {
      "ObjectId" : "760221b124439a5ed7835d2ce2073deb0ab2a583",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# kwsys.testProcess-10 involves sending SIGINT to a child process, which then\n\n# exits abnormally via a call to _exit(). (On Windows, a call to ExitProcess).\n\n# Naturally, this results in plenty of memory being \"leaked\" by this child\n\n# process - the memory check results are not meaningful in this case.\n\n#\n\n# kwsys.testProcess-9 also tests sending SIGINT to a child process.  However,\n\n# normal operation of that test involves the child process timing out, and the\n\n# host process kills (SIGKILL) it as a result.  Since it was SIGKILL'ed, the\n\n# resulting memory leaks are not logged by valgrind anyway.  Therefore, we\n\n# don't have to exclude it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Source/kwsys/kwsysPlatformTests.cmake" : {
      "ObjectId" : "5386a49a33518e6a5d49673c0c28634edbe495b9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing#kwsys for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note that ${var} will be a 0 return value on success.\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# KWSYS_PLATFORM_INFO_TEST(lang var description)\n\n#\n\n# Compile test named by ${var} and store INFO strings extracted from binary.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We can implement this macro on CMake 2.6 and above.\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Choose a location for the result binary.\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Compile the test binary.\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Parse info strings out of the compiled binary.\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Tests/AliasTarget/CMakeLists.txt" : {
      "ObjectId" : "fc701359884f8f245c36d62b2f6a528b0e9cb7fa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Clang/C2 in C++98 mode cannot properly handle some of MSVC headers\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/AliasTarget/subdir/CMakeLists.txt" : {
      "ObjectId" : "05a7d86f01b61cb31341dc3fd9b70496b3a2f9a8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# foo comes from the top-level CMakeLists.txt\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Architecture/CMakeLists.txt" : {
      "ObjectId" : "ea5fc0b506b84822bba5b770a13e464ed27ca88e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Xcode 4, use modern architectures as defaults\n\n# Arch 'ppc' no longer works: tools no longer available starting with Xcode 4\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/ArgumentExpansion/CMakeLists.txt" : {
      "ObjectId" : "173540067393a8e38038ff0f117e38b379aee739",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Assembler/CMakeLists.txt" : {
      "ObjectId" : "fb17ebb609445c1b21f5f56c3270a7832d1e8924",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# (at least) the following toolchains can process assembler files directly\n\n# and also generate assembler files from C:\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Clang on OS X, and perhaps other compilers, do not support -g\n\n# for both generating and assembling, so drop it from generating.\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/BootstrapTest.cmake" : {
      "ObjectId" : "07a65bfd6f7454bfe3306028007c95346f78b152",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/BuildDepends/CMakeLists.txt" : {
      "ObjectId" : "39a5131fed09be30e935a68c9c4008390fa6fe1e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this test creates a static library and an executable\n\n# the source to the library is then changed\n\n# and the build is done on the executable and if things\n\n# are working the executable should relink with the new\n\n# value.  The subdir Project contains the CMakelists.txt\n\n# and source files for the test project.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This entire test takes place during the initial\n\n# configure step.  It should not run again when the\n\n# project is built.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Xcode needs some help with the fancy dependencies in this test.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The Intel compiler causes the MSVC linker to crash during\n\n# incremental linking, so avoid the /INCREMENTAL:YES flag.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# find and save the ninjadep executable\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Xcode is in serious need of help here\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Tests/BuildDepends/Project/CMakeLists.txt" : {
      "ObjectId" : "3f41b26d092d0156f43381ea356d6386e3c4cf76",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# only use multi-arch if the sysroot exists on this machine\n\n# Ninja needs -M which could not be used with multiple -arch flags\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Arch 'i386' no longer works in Xcode 10.\n",
        "Line" : 21,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# Arch 'ppc' no longer works in Xcode 4.\n",
        "Line" : 24,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# Add a generated header that regenerates when the generator is\n\n# rebuilt.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# adds file-level dependency to re-run rule\n",
        "Line" : 39,
        "CharPositionInLine" : 20
      },
      "5" : {
        "Text" : "# Add a generated header that does NOT regenerate when the generator\n\n# is rebuilt.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Test that the generator rebuilds when the static library source file\n\n# changes.  This should cause regen.h to be recreated also.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build an executable to drive the build and rebuild.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Test the IMPLICIT_DEPENDS feature.\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# No IMPLICIT_DEPENDS...just depend directly.\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Test the #include line macro transformation rule support.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Test having the first output never created.\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Test having the second output never created.  Does not work with msbuild.\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 14
    },
    "deps/src/cmake-3.13.4/Tests/BuildDepends/Project/External/CMakeLists.txt" : {
      "ObjectId" : "c6015b65106d992cc4ba2ab60007257f6f61d7d9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/BuildDepends/Project/link_depends_no_shared_check.cmake" : {
      "ObjectId" : "3a611370f59c214de90634f9a828f3ea7d741767",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/BuildDepends/Project/object_depends_check.cmake" : {
      "ObjectId" : "e00989288538a3cbb7e0bd4e023035e8b85a3ab9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/BundleGeneratorTest/CMakeLists.txt" : {
      "ObjectId" : "037df09c127268f667140c7b29d14d1eb4329c7c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build a shared library and install it in lib/\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build an executable and install it in bin/\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use the bundle-generator for packaging ...\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The custom volume icon is a copy of the normal Mac OSX volume icon, but\n\n# on a white background. This is to differentiate it from the normal one\n\n# so that you can verify that the custom icon is being used by doing a\n\n# visual inspection of the mounted volume... This was added when fixing\n\n# issue #7523...\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/BundleTest/BundleSubDir/CMakeLists.txt" : {
      "ObjectId" : "43c366a09d6f32c28227fdd87dc0862e50813479",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test bundle installation.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test whether bundles respect the output name.  Since the library is\n\n# installed into a location that uses this output name this will fail if the\n\n# bundle does not respect the name.  Also the executable will not be found by\n\n# the test driver if this does not work.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/BundleTest/CMakeLists.txt" : {
      "ObjectId" : "853da35383d3024094fd9a86f114cc2ed17c7239",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test building a bundle linking to a shared library where the\n\n# shared library links to CoreFoundation, but the executable does not\n\n# explicitly link to CoreFoundation, but the executable does *depend*\n\n# on CoreFoundation. There should be a link failure for the executable\n\n# if CMake's dependency chaining for libraries with \"-framework\n\n# blah\" style dependencies gets broken...\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# DO NOT: target_link_libraries(BundleTest \"-framework CoreFoundation\")\n\n#   (see above comments about CoreFoundation)\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test bundle installation.\n\n#install(TARGETS BundleTestLib DESTINATION Applications/BundleTestExe.app/Contents/Plugins)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Test whether bundles respect the output name.  Since the library is\n\n# installed into a location that uses this output name this will fail if the\n\n# bundle does not respect the name.  Also the executable will not be found by\n\n# the test driver if this does not work.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Test executable versioning if it is supported.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make sure the executable can find its installed library.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# test the framework find stuff\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Tests/BundleUtilities/CMakeLists.txt" : {
      "ObjectId" : "69ef53505146907b617be4e448354dd7a36039d4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###### the various types of dependencies we can have\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# a shared library\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# another shared library\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# a framework library\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# make sure rpaths are not helping BundleUtilities or the executables\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "######  test a Bundle application using dependencies\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# a loadable module (depends on shared2)\n\n# testbundleutils1 will load this at runtime\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# a bundle application\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# add custom target to install and test the app\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "######  test a non-Bundle application using dependencies\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# a loadable module (depends on shared2)\n\n# testbundleutils2 will load this at runtime\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# a non-bundle application\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# add custom target to install and test the app\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "######  Test a Bundle application using dependencies\n\n######  and @rpaths on Mac OS X 10.5 or greater\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# a shared library\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# another shared library\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# a framework library\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# build dependencies with @rpath install name\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# a loadable module (depends on shared2)\n\n# testbundleutils1 will load this at runtime\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# a non-bundle application\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# add custom target to install and test the app\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 21
    },
    "deps/src/cmake-3.13.4/Tests/BundleUtilities/bundleutils.cmake" : {
      "ObjectId" : "cc89347adee31e95716b81f267c128c952fd04eb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# clean passed in arguments\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# compute location to install/test things\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clean output dir\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# copy the app and plugin to installation/testing directory\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# have BundleUtilities grab all dependencies and\n\n# check that the app runs\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# for this test we'll override location to put all dependencies\n\n# (in the same dir as the app)\n\n# this shouldn't be necessary except for the non-bundle case on Mac\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# make sure we can run the app\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Tests/CFBundleTest/CMakeLists.txt" : {
      "ObjectId" : "0fe6bb771d3e9a8cfd38b3a4af825c2c31fb03d2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this is adapted from FireBreath (http://www.firebreath.org)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compile the resource file\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# note that for some reason, the makefile and xcode generators use a different\n\n# property to indicate where the Info.plist file is :-/ For that reason, we\n\n# specify it twice so it will work both places\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/CFBundleTest/PluginConfig.cmake" : {
      "ObjectId" : "763ddcc1c9414b35e462b72a06412184d1c73cdb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#/**********************************************************\\\n\n# Auto-Generated Plugin Configuration file\n\n# for CFTestPlugin\n\n#\\**********************************************************/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# strings\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/CFBundleTest/VerifyResult.cmake" : {
      "ObjectId" : "e637bb142dec427bb4aefcd505b47bd8c0ce3c5e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeCommands/add_compile_definitions/CMakeLists.txt" : {
      "ObjectId" : "2eb887e00d33f4b0f16f6fdafd1b44ebc027ea99",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeCommands/add_compile_options/CMakeLists.txt" : {
      "ObjectId" : "995b32c2843b9e9b7681100aaee0f2706518924c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeCommands/add_link_options/CMakeLists.txt" : {
      "ObjectId" : "bb7dcbbfc88bfc46af85c7cca85ed2c1871291e8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeCommands/link_directories/CMakeLists.txt" : {
      "ObjectId" : "60c07b6384b9594ef8d4183177727ba2701cce1e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeCommands/target_compile_definitions/CMakeLists.txt" : {
      "ObjectId" : "7dc7995255ba7116746a259af5d02a7b718aa9d2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test no items\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CMakeCommands/target_compile_features/CMakeLists.txt" : {
      "ObjectId" : "9664025a4111ee2a0fcbe664160b9b229bd73654",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeCommands/target_compile_options/CMakeLists.txt" : {
      "ObjectId" : "1dedbae82fccfc836383ce0a37fc37c74eb7ddc9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test no items\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CMakeCommands/target_include_directories/CMakeLists.txt" : {
      "ObjectId" : "8713d99dd5cc4d698b79bb67b6ce235841b68c55",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Has no effect because the target type is not SHARED_LIBRARY:\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test no items\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/CMakeCommands/target_link_directories/CMakeLists.txt" : {
      "ObjectId" : "bc7b9b2129ebea390662b1dd327508619b454c9c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test no items\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CMakeCommands/target_link_directories/subdir/CMakeLists.txt" : {
      "ObjectId" : "7e7ad2a978ef6800055a352e157a2f1f649d7fe5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeCommands/target_link_libraries/CMakeLists.txt" : {
      "ObjectId" : "85ce1f7853ca62cbfbd0bb099eb637e685c287a4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Exclude depIfaceOnly from ALL so that it will only be built if something\n\n# depends on it. As it is in the link interface of depB, targetA\n\n# will depend on it. That dependency is what is being tested here.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Linking to a target containing a + should be non-fatal, though it does\n\n# not work at all on Borland or watcom\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# The TARGET_PROPERTY expression is duplicated below to test that there is no\n\n# shortcutting of the evaluation by returning an empty string.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This line causes $<$<CONFIG:Debug>:depA> to be used when\n\n# determining the include directories for libConsumer based on the\n\n# interface properties of its LINK_LIBRARIES. Because the above expression\n\n# evaluates to the empty string in non-Debug cases, ensure that that causes\n\n# no problems.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Test cross-directory linking.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/CMakeCommands/target_link_libraries/SubDirA/CMakeLists.txt" : {
      "ObjectId" : "4dae1039576fbf6233622a52101493235e0e0333",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Link to a target imported in this directory that would not normally\n\n# be visible to the directory in which TopDir is defined.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Link SubDirA to a target imported in this directory that has the same\n\n# name as a target imported in SubDirB's directory.  SubDirB will also\n\n# tell us to link its copy.  At compile time we verify both are linked.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Import a target with the same name as a target imported in SubDirB.\n\n# Distinguish this copy by having a unique usage requirement.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/CMakeCommands/target_link_libraries/SubDirB/CMakeLists.txt" : {
      "ObjectId" : "7c918e69969274576bb160db7a756c669a82bc3a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Link to a target imported in this directory that would not normally\n\n# be visible to the directory in which TopDir is defined.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Link SubDirA to a target imported in this directory that has the same\n\n# name as a target imported in SubDirA's directory.  We verify when\n\n# compiling SubDirA that it sees our target and its own.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Import a target with the same name as a target imported in SubDirA.\n\n# Distinguish this copy by having a unique usage requirement.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/CMakeCommands/target_link_libraries/cmp0022/CMakeLists.txt" : {
      "ObjectId" : "741c73e77861415c2bda66a485620edbad0efeaf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try adding a private link item to be propagated out of a static lib.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CMakeCommands/target_link_libraries/subdir/CMakeLists.txt" : {
      "ObjectId" : "9d7fa6cb8339a51feeca380e7210defeceb6891f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeCommands/target_link_options/CMakeLists.txt" : {
      "ObjectId" : "e84d0410e7081e9fb3c12bc63d57807580e8f15d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test no items\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CMakeCommands/target_sources/CMakeLists.txt" : {
      "ObjectId" : "ab14855c73b8f04b7e2925a518244bce1521491a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeCommands/target_sources/subdir/CMakeLists.txt" : {
      "ObjectId" : "f749f1d7a802a411ce5de7cf7b3de34d8a9d342f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeCopyright.cmake" : {
      "ObjectId" : "a7201e97d1f1e653d7b7fbf95679fd29d2bc70aa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeInstall.cmake" : {
      "ObjectId" : "d9d85f71b86dac328474d123565d76bbe4a5a228",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define option CMake_TEST_INSTALL, and enable by default for dashboards.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do not build during the test.\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Install to a test directory.\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# 3.9 or later provides a definitive answer to whether we are multi-config\n\n# through a global property. Prior to 3.9, CMAKE_CONFIGURATION_TYPES being set\n\n# is assumed to mean multi-config, but developers might modify it so it is\n\n# technically not as reliable.\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# There are multiple configurations.  Make sure the tested\n\n# configuration is the one that is installed.\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Add a test to install CMake through the build system install target.\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Avoid running this test simultaneously with other tests:\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# TODO: Make all other tests depend on this one, and then drive them\n\n# with the installed CTest.\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Tests/CMakeLib/CMakeLists.txt" : {
      "ObjectId" : "126076d8d175d91a4158d9fd0c352aec0c67da40",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeLib/PseudoMemcheck/CMakeLists.txt" : {
      "ObjectId" : "7c84ee166509e325c34a1b07bf89a672dd2dd713",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# create binaries that we will use as a pseudo memory checker\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# binary to be used as pre- and post-memcheck command that fails\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Binaries that are used as memchecker that do not write the expected\n\n# output file. Need to be in their own subdirectory as they have the\n\n# same filenames.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/CMakeLib/PseudoMemcheck/NoLog/CMakeLists.txt" : {
      "ObjectId" : "e47b9db394c288b5784057b599ee2cd138b0a13a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A dummy checker implementation that does not write the requested output file\n\n# so it triggers an error for every checker.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CMakeLib/testRSTmod.cmake" : {
      "ObjectId" : "8b807a605dab5531f5b993f0f9b9c2a60b265b40",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# CMake Module Content\n\n#.rst:\n\n# More CMake Module Content\n\n#[[.rst:\nBracket Comment Content\n# not part of content]]",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# not part of content\n",
        "Line" : 7,
        "CharPositionInLine" : 24
      },
      "2" : {
        "Text" : "#[=[.rst:\n[\nBracket Comment Content\n]]=]",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# not part of content\n",
        "Line" : 11,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/CMakeLists.txt" : {
      "ObjectId" : "0de6c416e5080c0c3c0a52a95b95bfcf6a6e45dd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a macro for tests that have a simple format where the name matches the\n\n# directory and project\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fake a user home directory to avoid polluting the real one.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 3.9 or later provides a definitive answer to whether we are multi-config\n\n# through a global property. Prior to 3.9, CMAKE_CONFIGURATION_TYPES being set\n\n# is assumed to mean multi-config, but developers might modify it so it is\n\n# technically not as reliable.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Choose a default configuration for CTest tests.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Testing\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# some old versions of make simply cannot handle spaces in paths\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# assume no resources building to test\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# for windows and cygwin assume we have resources\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# for borland and watcom there is no resource support\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Look for rpmbuild to use for tests.\n\n# The tool does not work with spaces in the path.\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Look for dpkg to use for tests.\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Look for NuGet to use for tests.\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Add tests below here.\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Collect a list of all test build directories.\n",
        "Line" : 179,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Should the long tests be run?\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Should tests that use CVS be run?\n\n#\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Should CPack tests be run? By default, yes, but...\n\n#\n\n# Disable packaging test on Apple 10.3 and below. PackageMaker starts\n\n# DiskManagementTool as root and disowns it\n\n# (http://lists.apple.com/archives/installer-dev/2005/Jul/msg00005.html).\n\n# It is left holding open pipe handles and preventing ProcessUNIX from\n\n# detecting end-of-data even after its immediate child exits. Then\n\n# the test hangs until it times out and is killed. This is a\n\n# well-known bug in kwsys process execution that I would love to get\n\n# time to fix.\n\n#\n",
        "Line" : 214,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Since Xcode 10 we do not have two supported architectures for the host.\n",
        "Line" : 256,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Use 1500 or CTEST_TEST_TIMEOUT for long test timeout value,\n\n# whichever is greater.\n",
        "Line" : 284,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# add a bunch of standard build-and-test style tests\n",
        "Line" : 297,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# test Visual Studio GNU Fortran mixing with cmake_add_fortran_subdirectory\n\n# run this project if we have a working fortran compiler or\n\n# the test is enabled with CMAKE_TEST_CMAKE_ADD_FORTRAN cache variable.\n\n# If you enable the test, CMake should find the MinGW fortran install,\n\n# or in some cases you might need to set the PATH so that cmake can find\n\n# the gfortran from mingw.\n",
        "Line" : 333,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# disable test for apple builds using ifort if they are building\n\n# more than one architecture, as ifort does not support that.\n",
        "Line" : 341,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# test whether the Qt4 which has been found works, on some machines\n\n# which run nightly builds there were errors like \"wrong file format\"\n\n# for libQtCore.so. So first check it works, and only if it does add\n\n# the automoc test.\n",
        "Line" : 448,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# run test for BundleUtilities on supported platforms/compilers\n",
        "Line" : 466,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# run test for DeployQt4 on supported platforms/compilers (which depends on BundleUtilities)\n\n# this test also depends on the existence of the standard qtiff plugin\n",
        "Line" : 483,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# now do it again for a project that has two project commands\n",
        "Line" : 510,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# If we are running right now with a Unix Makefiles or Ninja based generator,\n\n# build the \"Simple\" test with the ExtraGenerators, if available\n\n# This doesn't test whether the generated project files work (unfortunately),\n\n# mainly it tests that cmake doesn't crash when generating these project files.\n",
        "Line" : 630,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# check which generators we have\n",
        "Line" : 636,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# test for correct sub-project generation\n\n# not implemented in Xcode or Ninja\n",
        "Line" : 669,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# run cmake and configure all of SubProject\n\n# but only build the independent executable car\n",
        "Line" : 672,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# For stage 2, do not run cmake again.\n\n# Then build the foo sub project which should build\n\n# the bar library which should be referenced because\n\n# foo links to the static library bar, but bar is not\n\n# directly in the foo sub project\n",
        "Line" : 685,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# macro to add a test that will build a nightly release\n\n# of CMake for given platform using the release scripts\n",
        "Line" : 714,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# add tests with more complex invocations\n",
        "Line" : 741,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# By default, run the CPackComponents test if the CTEST_TEST_CPACK\n\n# option is ON:\n\n#\n",
        "Line" : 887,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# But on Windows, only run the CPackComponents test if the NSIS\n\n# installer builder is available:\n\n#\n",
        "Line" : 900,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# On Windows run the CPackWiXGenerator test\n\n# if the WiX Toolset seems to be available\n",
        "Line" : 912,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Check whether if rpmbuild command is found\n\n# before adding RPM tests\n",
        "Line" : 1013,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Check whether if dpkg command is found\n\n# before adding DEB tests\n",
        "Line" : 1018,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Check whether if NuGet command is found\n\n# before adding NuGet tests\n",
        "Line" : 1023,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# ACTIVE_CPACK_GENERATORS variable\n\n# now contains the list of 'active generators'\n",
        "Line" : 1030,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# set up list of CPack generators\n",
        "Line" : 1033,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# set up list of component packaging ways\n",
        "Line" : 1042,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# debian specific\n",
        "Line" : 1076,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# By default, turn this test off (because it takes a long time...)\n\n#\n",
        "Line" : 1118,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# ...but: if it appears to be a coverage dashboard, or long tests are\n\n# on, then set it to the generic CTEST_TEST_CPACK setting.\n\n#\n",
        "Line" : 1123,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# This test runs a lot of processes.  Do not make them compete\n\n# for resources with other tests.\n",
        "Line" : 1210,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# because of the registry write these tests depend on each other\n",
        "Line" : 1269,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Matlab module\n\n# CMake_TEST_FindMatlab: indicates to look for Matlab (from PATH for Linux)\n\n# CMake_TEST_FindMatlab_MCR: indicates the MCR is installed\n\n# CMake_TEST_FindMatlab_MCR_ROOT_DIR: indicates an optional root directory for the MCR, required on Linux\n",
        "Line" : 1486,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# do each of the tutorial steps\n",
        "Line" : 1602,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# RPATH isn't supported under Syllable, so the tests don't\n\n# find their libraries. In order to fix that LIBRARY_OUTPUT_DIR\n\n# in the tests would have to be adjusted to ${EXECUTABLE_OUTPUT_DIR}/lib .\n\n# For now we just require on Syllable that the user adjusts the DLL_PATH\n\n# environment variable, so except the two tests below all other tests will succeed.\n",
        "Line" : 1698,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Test static linking on toolchains known to support it.\n",
        "Line" : 1800,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# Look for evidence that this is a VCExpress build. If so, avoid\n\n# the MFC test by default.\n",
        "Line" : 1896,
        "CharPositionInLine" : 6
      },
      "52" : {
        "Text" : "# Since MSBuild might also be the \"makeprogram\" for a VCExpress\n\n# build tree, use one more heuristic, too. The string representing\n\n# the .vcproj file type contains \"VCExpress\" on machines where an\n\n# express edition of VS was installed last:\n",
        "Line" : 1905,
        "CharPositionInLine" : 6
      },
      "53" : {
        "Text" : "# For the Watcom WMake generator, avoid the MFC test by default.\n",
        "Line" : 1924,
        "CharPositionInLine" : 6
      },
      "54" : {
        "Text" : "# Last resort, after quick checks are done. Do a try_compile, and avoid\n\n# the MFC test if the simplest possible MFC app cannot be compiled.\n",
        "Line" : 1933,
        "CharPositionInLine" : 6
      },
      "55" : {
        "Text" : "# The test (and tested property) works with .sln files, so it's skipped when:\n\n# * cmake --build is set up to use MSBuild, since the MSBuild invocation does not use the .sln file\n",
        "Line" : 2039,
        "CharPositionInLine" : 6
      },
      "56" : {
        "Text" : "# This is Visual Studio 10 or above, so the default build tool is MSBuild.\n",
        "Line" : 2070,
        "CharPositionInLine" : 6
      },
      "57" : {
        "Text" : "# Macro to search for available Windows CE SDKs in the windows Registry\n",
        "Line" : 2086,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# The first entry is always empty due to the regex replace above\n",
        "Line" : 2095,
        "CharPositionInLine" : 36
      },
      "59" : {
        "Text" : "# Make sure there is no newline in the SDK name\n",
        "Line" : 2096,
        "CharPositionInLine" : 37
      },
      "60" : {
        "Text" : "# Build a key to be used by get_filename_component that is pointing to the SDK directory\n",
        "Line" : 2098,
        "CharPositionInLine" : 8
      },
      "61" : {
        "Text" : "# Set return values\n",
        "Line" : 2101,
        "CharPositionInLine" : 8
      },
      "62" : {
        "Text" : "# Windows >= 8.0\n",
        "Line" : 2130,
        "CharPositionInLine" : 42
      },
      "63" : {
        "Text" : "# TODO: Fix the tutorial to make it work in cross compile\n\n# currently the MakeTable is build for target and can not be used on the host\n\n# This happens in part 5 so we build only part 1-4 of the tutorial\n",
        "Line" : 2190,
        "CharPositionInLine" : 6
      },
      "64" : {
        "Text" : "#       --build-target package\n",
        "Line" : 2288,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Ninja does not support ADDITIONAL_MAKE_CLEAN_FILES and therefore fails\n\n# this test. (See #13371)\n\n# Apparently Visual Studio does not support it either. As the MakeClean\n\n# test above is only run with the Makefiles generator, only run this\n\n# test with the Makefiles generator also.\n",
        "Line" : 2362,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# Make sure CTest can handle a test with no newline in output.\n",
        "Line" : 2422,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# A simple test for ctest in script mode\n",
        "Line" : 2426,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "#  add_test(CTest.ScriptMode ${CMAKE_CTEST_COMMAND}\n\n#        -S \"${CMake_BINARY_DIR}/Tests/CTestScriptMode/CTestTestScriptMode.cmake\"\n\n#        )\n",
        "Line" : 2429,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# A test for ctest_build() with targets in subdirectories\n",
        "Line" : 2433,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# Test CTest Update with Subversion\n",
        "Line" : 2453,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "# Test CTest Update with CVS\n",
        "Line" : 2476,
        "CharPositionInLine" : 4
      },
      "72" : {
        "Text" : "# Test CTest Update with BZR\n",
        "Line" : 2500,
        "CharPositionInLine" : 4
      },
      "73" : {
        "Text" : "# Check if xmloutput plugin is there\n",
        "Line" : 2510,
        "CharPositionInLine" : 6
      },
      "74" : {
        "Text" : "# Test CTest Update with GIT\n",
        "Line" : 2532,
        "CharPositionInLine" : 4
      },
      "75" : {
        "Text" : "# Test CTest Update with HG\n",
        "Line" : 2551,
        "CharPositionInLine" : 4
      },
      "76" : {
        "Text" : "# Test CTest Update with P4\n",
        "Line" : 2570,
        "CharPositionInLine" : 4
      },
      "77" : {
        "Text" : "# test coverage for mumps\n\n# create a MumpsCoverage dir in the binary tree under Testing to\n\n# avoid the .NoDartCoverage files in the cmake testing tree\n",
        "Line" : 2650,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# Adding a test case for Python Coverage\n",
        "Line" : 2689,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# Adding a test case for non-python Cobertura Coverage\n",
        "Line" : 2707,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "# Adding a test case for JaCoCo Coverage\n",
        "Line" : 2727,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# Adding a test case for Javascript Coverage\n",
        "Line" : 2744,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# test coverage for Delphi-code-Coverage\n",
        "Line" : 2763,
        "CharPositionInLine" : 2
      },
      "83" : {
        "Text" : "# Test -S script with a -C config arg to ctest:\n",
        "Line" : 2784,
        "CharPositionInLine" : 4
      },
      "84" : {
        "Text" : "# Test -D dashboard with a -C config arg to ctest.\n\n# (Actual commands inside a cmake -P script because we need to be able to set\n\n#  the working directory reliably...)\n",
        "Line" : 2795,
        "CharPositionInLine" : 4
      },
      "85" : {
        "Text" : "# Test -S script with some -D variable definition args to ctest:\n",
        "Line" : 2812,
        "CharPositionInLine" : 2
      },
      "86" : {
        "Text" : "# The cmake server-mode test requires python for a simple client.\n",
        "Line" : 2838,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "# with watcom the SEGFAULT is not found, it just fails\n",
        "Line" : 2853,
        "CharPositionInLine" : 2
      },
      "88" : {
        "Text" : "# some cygwin can not be made to produce a BAD_COMMAND error\n\n# the best we can get from it is a failed test\n",
        "Line" : 2871,
        "CharPositionInLine" : 2
      },
      "89" : {
        "Text" : "#make sure all 3 subdirs were added\n",
        "Line" : 3015,
        "CharPositionInLine" : 2
      },
      "90" : {
        "Text" : "# these tests take a long time, make sure they have it\n\n# if timeouts have not already been set\n",
        "Line" : 3149,
        "CharPositionInLine" : 4
      },
      "91" : {
        "Text" : "# If there is CMakeLists.txt in the binary tree, assume in-source build\n",
        "Line" : 3171,
        "CharPositionInLine" : 4
      },
      "92" : {
        "Text" : "# This test will use all processors.\n",
        "Line" : 3192,
        "CharPositionInLine" : 4
      },
      "93" : {
        "Text" : "# provide more time for the bootstrap test\n",
        "Line" : 3195,
        "CharPositionInLine" : 4
      },
      "94" : {
        "Text" : "# FortranCInterface tests.\n",
        "Line" : 3229,
        "CharPositionInLine" : 4
      },
      "95" : {
        "Text" : "# in case jni.h is a broken symlink\n",
        "Line" : 3261,
        "CharPositionInLine" : 36
      },
      "96" : {
        "Text" : "# For next tests, java tool must have same architecture as toolchain\n",
        "Line" : 3301,
        "CharPositionInLine" : 8
      },
      "97" : {
        "Text" : "## next test is valid only if Java version is less than 1.10\n",
        "Line" : 3308,
        "CharPositionInLine" : 10
      },
      "98" : {
        "Text" : "## next test is valid only if Java is, at least, version 1.8\n",
        "Line" : 3327,
        "CharPositionInLine" : 10
      },
      "99" : {
        "Text" : "# add some cross compiler tests, for now only with makefile based generators\n",
        "Line" : 3351,
        "CharPositionInLine" : 2
      },
      "100" : {
        "Text" : "# if sdcc is found, build the SimpleCOnly project with sdcc\n",
        "Line" : 3354,
        "CharPositionInLine" : 4
      },
      "101" : {
        "Text" : "# If a Linux -> MinGW cross compiler is found then try it\n",
        "Line" : 3370,
        "CharPositionInLine" : 4
      },
      "102" : {
        "Text" : "# If this is not an in-source build, provide a target to wipe out\n\n# all the test build directories.\n",
        "Line" : 3420,
        "CharPositionInLine" : 2
      },
      "103" : {
        "Text" : "# Define a set of \"contract\" tests, each activated by a cache entry\n\n# named \"CMake_TEST_CONTRACT_<project>\".  For each Contract test,\n\n# the project should provide a directory with a CMakeLists.txt file\n\n# that uses ExternalProject to download and configure the project.\n\n# The directory should also contain a Configure.cmake file that\n\n# sets \"CMake_TEST_CONTRACT_<project>_<var>\" variables to configure\n\n# the code below.\n",
        "Line" : 3431,
        "CharPositionInLine" : 2
      },
      "104" : {
        "Text" : "# The external projects may take a long time to build.\n",
        "Line" : 3446,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 105
    },
    "deps/src/cmake-3.13.4/Tests/CMakeOnly/AllFindModules/CMakeLists.txt" : {
      "ObjectId" : "a53e4418b2c51fd38a3fc1b84c771d6aec056094",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# new enough for CMP0017\n",
        "Line" : 1,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : "# Avoid ctest truncation of output\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# It is only possible to use either Qt3 or Qt4 in one project.\n\n# Since FindQt will complain if both are found we explicitly request Qt4 here\n\n# and filter out FindQt3. FindKDE3 also depends on Qt3 and\n\n# is therefore also blocked\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ignore everything that has it's own test in Tests/Module/\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# These modules are named Find*.cmake, but are nothing that works in\n\n# find_package().\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Qt4 is not present, so we can check Qt3\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If any of these modules reported that it was found a version number should have been\n\n# reported.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Tests/CMakeOnly/CMakeLists.txt" : {
      "ObjectId" : "204d54c2b410f33fb3b3296ffa773e7c84aa998d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If a bug is introduced in CMake that causes an infinite loop while\n\n# analyzing LinkInterfaceLoop then don't let the test run too long.\n\n# Use an option to customize it so that the timeout can be extended\n\n# on busy machines.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CMakeOnly/CheckCXXCompilerFlag/CMakeLists.txt" : {
      "ObjectId" : "9be69f128c950bed46a79929a7743a80c922caff",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# gcc on mac just reports: \"gcc (GCC) 3.3 20030304 ...\" without the\n\n# patch level, handle this here:\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#     test_pass(HAS_HIDDEN_VISIBILITY \"GCC should support hidden visibility, but does not.\")\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/CMakeOnly/CheckCXXSymbolExists/CMakeLists.txt" : {
      "ObjectId" : "f058c19fb6d303c09fd7f90903191732cb66933e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This test will verify if CheckCXXSymbolExists only report symbols available\n\n# for linking that really are. You can find some documentation on this in\n\n# bug 11333 where we found out that gcc would optimize out the actual\n\n# reference to the symbol, so symbols that are in fact _not_ available in the\n\n# given libraries (but seen in header) were reported as present.\n\n#\n\n# If you change this test do not forget to change the CheckSymbolExists\n\n# test, too.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CMakeOnly/CheckLanguage/CMakeLists.txt" : {
      "ObjectId" : "f5336dc039df9c733eee21a630e28c47a576cef2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeOnly/CheckStructHasMember/CMakeLists.txt" : {
      "ObjectId" : "a584505155f43a66ae0e7e3e8c288d79f1abe2e8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeOnly/CheckSymbolExists/CMakeLists.txt" : {
      "ObjectId" : "7f01463c06b8a84fc8fdc34c0dcf763e2c9f20a4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This test will verify if CheckSymbolExists only report symbols available\n\n# for linking that really are. You can find some documentation on this in\n\n# bug 11333 where we found out that gcc would optimize out the actual\n\n# reference to the symbol, so symbols that are in fact _not_ available in the\n\n# given libraries (but seen in header) were reported as present.\n\n#\n\n# If you change this test do not forget to change the CheckCXXSymbolExists\n\n# test, too.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CMakeOnly/CompilerIdC/CMakeLists.txt" : {
      "ObjectId" : "6fea73eb8b6a2e5f4d761dccee00bd6480db77cf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version numbers may only contain numbers and periods.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CMakeOnly/CompilerIdCSharp/CMakeLists.txt" : {
      "ObjectId" : "6c0703745db0b270b30ec82c7a92989c15a46239",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version numbers may only contain numbers and periods.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CMakeOnly/CompilerIdCXX/CMakeLists.txt" : {
      "ObjectId" : "05e6bb22246e53d6253fb8f1c52f6305d7bc98b5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version numbers may only contain numbers and periods.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CMakeOnly/CompilerIdFortran/CMakeLists.txt" : {
      "ObjectId" : "067fb8cd3f6f5709775ed31d52789b38e3641138",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version numbers may only contain numbers and periods.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CMakeOnly/LinkInterfaceLoop/CMakeLists.txt" : {
      "ObjectId" : "56e449afdd822753b83c1406ac48df7824b6281d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add a shared library that incorrectly names itself as a\n\n# dependency, thus forming a cycle.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add a shared library that incorrectly names itself in\n\n# its link interface, thus forming a cycle.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add a shared library with an empty link interface\n\n# that depends on two shared libraries.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/CMakeOnly/MajorVersionSelection/CMakeLists.txt" : {
      "ObjectId" : "2511064a2d0a33792fb281bc48b86bb6e5cdb1bf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeOnly/ProjectInclude/CMakeLists.txt" : {
      "ObjectId" : "a9abb4ad7a5556ccb521f9ff5c1f7020af07a7f9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeOnly/ProjectInclude/include.cmake" : {
      "ObjectId" : "527ebe7d04f9ac3c17904a0d27047207576f0fe3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeOnly/SelectLibraryConfigurations/CMakeLists.txt" : {
      "ObjectId" : "3676b17922bdd01823b53548b66ce9a612d62ab3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeOnly/TargetScope/CMakeLists.txt" : {
      "ObjectId" : "fa5d8e234238bdf4a3cb4c6f8de916d43ef0d32d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeOnly/TargetScope/Sib/CMakeLists.txt" : {
      "ObjectId" : "7f6f4e8fdc1c9b75846be62ac2c00ca18603183a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeOnly/TargetScope/Sub/CMakeLists.txt" : {
      "ObjectId" : "27318f5853aa5c5a3619b7bd0d12d8ee35faaf19",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeOnly/TargetScope/Sub/Sub/CMakeLists.txt" : {
      "ObjectId" : "a351daadfcfddf978735ee31846313728a224e45",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeOnly/find_library/CMakeLists.txt" : {
      "ObjectId" : "fe3815edd6e192b609a0edeec1dc0c0690ad3212",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Convert to relative path for comparison to expected location.\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Check and report failure.\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/CMakeOnly/find_path/CMakeLists.txt" : {
      "ObjectId" : "0e64ed4674409025d1cfee27eab7ad859579237a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Convert to relative path for comparison to expected location.\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Check and report failure.\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/CMakeServerLib/CMakeLists.txt" : {
      "ObjectId" : "2c23c2dbe4b659c82477563ce602bcd2e910da01",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTestAllGenerators/RunCMake.cmake" : {
      "ObjectId" : "bfbb3a59f2197df07789b1fba9855b8e245091ed",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Analyze 'cmake --help' output for list of available generators:\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Also call with one non-existent generator:\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Call cmake with -G on each available generator. We do not care if this\n\n# succeeds or not. We expect it *not* to succeed if the underlying packaging\n\n# tools are not installed on the system... This test is here simply to add\n\n# coverage for the various cmake generators, even/especially to test ones\n\n# where the tools are not installed.\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# First setup a source tree to run CMake on.\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Create a binary directory for each generator:\n\n#\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Run cmake:\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTestMultipleConfigures/RunCMake.cmake" : {
      "ObjectId" : "96326646b59088f011728b00c3b06d9a3a9a9bc5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Call cmake once to get a baseline/reference output build tree: \"Build\".\n\n# Then call cmake N more times, each time making a copy of the entire\n\n# build tree after cmake is done configuring/generating. At the end,\n\n# analyze the diffs in the generated build trees. Expect no diffs.\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# First setup source and binary trees:\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Patch SmallAndFast to build a .cxx executable too:\n\n#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Loop N times, saving a copy of the configured/generated build tree each time:\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Equivalent sequence of shell commands:\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Run cmake:\n\n#\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Save this iteration of the Build directory:\n\n#\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Function to analyze diffs between two directories.\n\n# Set DIFF_EXECUTABLE before calling if 'diff' is available.\n\n#\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#message(STATUS \"  files='${files1}'\")\n",
        "Line" : 108,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "#message(STATUS \"info: file '${f}' the same\")\n",
        "Line" : 119,
        "CharPositionInLine" : 10
      },
      "10" : {
        "Text" : "# Analyze diffs between b1:b2, b2:b3, b3:b4, b4:b5 ... bN-1:bN.\n\n# Expect no diffs.\n\n#\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/CMakeHostSystemInformation-BadArg1.cmake" : {
      "ObjectId" : "1655eb406938940c7191a5a99321a85682509661",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/CMakeHostSystemInformation-BadArg2.cmake" : {
      "ObjectId" : "1f056d5f2a41579df034c6370f849c22d0f00ba6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/CMakeHostSystemInformation-BadArg3.cmake" : {
      "ObjectId" : "9c5a558c702e5bcc9a21167ffc5814d87bf4dcbd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/CMakeHostSystemInformation-QueryList.cmake" : {
      "ObjectId" : "1c3156d23c43c3986b8e91dfbd2b4fe9fd20c809",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/CMakeLists.txt" : {
      "ObjectId" : "161908114ddaf3c3d9e4f2afd1cc73b149dcb7b3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Run CheckSourceTree as the very last test in the CMake/CTest/CPack test\n\n# suite. It detects if any changes have been made to the CMake source tree\n\n# by any previous configure, build or test steps.\n\n#\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/CMakeMinimumRequiredTestScript.cmake" : {
      "ObjectId" : "d434d2901c4572acca389758fa9c8ad57c3540f4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# pass\n",
        "Line" : 3,
        "CharPositionInLine" : 28
      },
      "1" : {
        "Text" : "# fail\n",
        "Line" : 6,
        "CharPositionInLine" : 32
      },
      "2" : {
        "Text" : "# fail\n",
        "Line" : 9,
        "CharPositionInLine" : 37
      },
      "3" : {
        "Text" : "# fail\n",
        "Line" : 12,
        "CharPositionInLine" : 56
      },
      "4" : {
        "Text" : "# fail\n",
        "Line" : 15,
        "CharPositionInLine" : 38
      },
      "5" : {
        "Text" : "# fail\n",
        "Line" : 18,
        "CharPositionInLine" : 40
      },
      "6" : {
        "Text" : "# fail\n",
        "Line" : 21,
        "CharPositionInLine" : 41
      },
      "7" : {
        "Text" : "# fail\n",
        "Line" : 25,
        "CharPositionInLine" : 38
      },
      "8" : {
        "Text" : "# fail\n",
        "Line" : 28,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 9
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/CheckCMakeTest.cmake" : {
      "ObjectId" : "1565394bc27dd55f92b5e6329c405912a71c1b07",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/DummyToolchain.cmake" : {
      "ObjectId" : "6a602015b5dcf95c20a096c4d7ddfc510da14d43",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/EndStuffTestScript.cmake" : {
      "ObjectId" : "9f40818012e73a9c2a24aca2c40e2df8a78b2215",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# fail\n",
        "Line" : 3,
        "CharPositionInLine" : 31
      },
      "1" : {
        "Text" : "# fail\n",
        "Line" : 13,
        "CharPositionInLine" : 37
      },
      "2" : {
        "Text" : "# fail\n",
        "Line" : 23,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : "# fail\n",
        "Line" : 26,
        "CharPositionInLine" : 42
      },
      "4" : {
        "Text" : "# fail\n",
        "Line" : 29,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "# pass\n",
        "Line" : 40,
        "CharPositionInLine" : 48
      },
      "6" : {
        "Text" : "# pass\n",
        "Line" : 51,
        "CharPositionInLine" : 47
      },
      "7" : {
        "Text" : "# fail\n",
        "Line" : 61,
        "CharPositionInLine" : 39
      },
      "8" : {
        "Text" : "# fail\n",
        "Line" : 64,
        "CharPositionInLine" : 39
      },
      "9" : {
        "Text" : "# fail\n",
        "Line" : 67,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/ExecuteScriptTests.cmake" : {
      "ObjectId" : "bceac335fc7834980ca86a24a3ad1e8e6334a92d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This function calls the ${scriptname} file to execute one test case:\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# case expected to fail, result should be non-0...\n\n# error if it's 0\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# case expected to pass, result should be 0...\n\n# error if it's non-0\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# This function reads the script file and calls execute_one_script_test for\n\n# each testname case listed in the script. To add new cases, simply edit the\n\n# script file and add an elseif() clause that matches 'regex' below.\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-Copy-BadArg.cmake" : {
      "ObjectId" : "91952fc60f779f4f0f164543ae38cb61e66ff3fd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-Copy-BadPerm.cmake" : {
      "ObjectId" : "b5cc42f00b03eb54b73ec0c5760a3bf4c627a9ac",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-Copy-BadRegex.cmake" : {
      "ObjectId" : "41340f62301d8397673007046eef7ad33b48c71d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-Copy-EarlyArg.cmake" : {
      "ObjectId" : "03993de3876973acbcf4efec388e6f66401d8dc6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-Copy-LateArg.cmake" : {
      "ObjectId" : "43d216874ee19b2198cd424f0f4bec8edd3a663c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-Copy-NoDest.cmake" : {
      "ObjectId" : "f6c6c6d7ea60a4d0550a281e08e9a9b746a0e9e2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-Copy-NoFile.cmake" : {
      "ObjectId" : "d5853d3963fb531ea3d4840630f381969c6b3e58",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-Glob-NoArg.cmake" : {
      "ObjectId" : "486f366c1bd40f38e1f0414c21b5558c765c4788",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Checking that the call without arguments get caught by the file global protection.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-MD5-BadArg1.cmake" : {
      "ObjectId" : "ac5f67ae2a6040ca08d4e358bf120d7d7a0f334f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-MD5-BadArg2.cmake" : {
      "ObjectId" : "2acc0757e3c09126ef810a62f8876e9a44355acd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-MD5-BadArg4.cmake" : {
      "ObjectId" : "79b27558d97061db13472e3c16160b0ff77d0af2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-MD5-NoFile.cmake" : {
      "ObjectId" : "1b91bc8d886260b68db0f8309b578ba3b2e401d8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-MD5-Works.cmake" : {
      "ObjectId" : "0fabe54a4752e1e83e0679fd2b1dfbd8d49b9df9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-SHA1-Works.cmake" : {
      "ObjectId" : "f2ab5d7474b29be53f0a1c01fd33f908cadb5177",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-SHA224-Works.cmake" : {
      "ObjectId" : "3e86b172fc269bf82d6f0f98651fd51967cfec45",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-SHA256-Works.cmake" : {
      "ObjectId" : "b72d89e95b65209de45705a21ca2f513ae71ccea",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-SHA384-Works.cmake" : {
      "ObjectId" : "0eeca33cbf4e43e4229270f1743b6039fa774cf5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-SHA3_224-Works.cmake" : {
      "ObjectId" : "e4f4e855eb30c96bbcc4ce946f94fcc1d7432236",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-SHA3_256-Works.cmake" : {
      "ObjectId" : "189c8a29612b87361b4211e70f503e0fcfad3ac8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-SHA3_384-Works.cmake" : {
      "ObjectId" : "08f9f5b3d5cb588eea645310d21bb0c510828aea",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-SHA3_512-Works.cmake" : {
      "ObjectId" : "4182196391218de9e22a96d74c383148ff9b679f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-SHA512-Works.cmake" : {
      "ObjectId" : "d74ee442991526918695840b1043989e86a1e5cf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-TIMESTAMP-BadArg1.cmake" : {
      "ObjectId" : "cc15c77a899cf7b596a5ef540d72b548f74d47f5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-TIMESTAMP-NoFile.cmake" : {
      "ObjectId" : "62390e792a7b76ece4ce94a037a8b744257614e5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-TIMESTAMP-NotBogus.cmake" : {
      "ObjectId" : "f1aa39062bd7bec4c318527bd03ef582166065d2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/File-TIMESTAMP-Works.cmake" : {
      "ObjectId" : "4351b19dd85a3cfc9dd51b6e45fbbc46c0317d39",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/FileTestScript.cmake" : {
      "ObjectId" : "9a4356973f02b1d3c27aa6b5c9f110468fca0d7f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# fail\n",
        "Line" : 3,
        "CharPositionInLine" : 28
      },
      "1" : {
        "Text" : "# fail\n",
        "Line" : 6,
        "CharPositionInLine" : 32
      },
      "2" : {
        "Text" : "# fail\n",
        "Line" : 9,
        "CharPositionInLine" : 52
      },
      "3" : {
        "Text" : "# fail\n",
        "Line" : 12,
        "CharPositionInLine" : 51
      },
      "4" : {
        "Text" : "# fail\n",
        "Line" : 15,
        "CharPositionInLine" : 47
      },
      "5" : {
        "Text" : "# fail\n",
        "Line" : 18,
        "CharPositionInLine" : 54
      },
      "6" : {
        "Text" : "# fail\n",
        "Line" : 21,
        "CharPositionInLine" : 55
      },
      "7" : {
        "Text" : "# fail\n",
        "Line" : 24,
        "CharPositionInLine" : 50
      },
      "8" : {
        "Text" : "# fail\n",
        "Line" : 27,
        "CharPositionInLine" : 57
      },
      "9" : {
        "Text" : "# pass\n",
        "Line" : 30,
        "CharPositionInLine" : 43
      },
      "10" : {
        "Text" : "# fail\n",
        "Line" : 34,
        "CharPositionInLine" : 53
      },
      "11" : {
        "Text" : "# fail\n",
        "Line" : 37,
        "CharPositionInLine" : 53
      },
      "12" : {
        "Text" : "# fail\n",
        "Line" : 40,
        "CharPositionInLine" : 50
      },
      "13" : {
        "Text" : "# fail\n",
        "Line" : 43,
        "CharPositionInLine" : 50
      },
      "14" : {
        "Text" : "# fail\n",
        "Line" : 46,
        "CharPositionInLine" : 51
      },
      "15" : {
        "Text" : "# fail\n",
        "Line" : 49,
        "CharPositionInLine" : 44
      },
      "16" : {
        "Text" : "# fail\n",
        "Line" : 52,
        "CharPositionInLine" : 46
      },
      "17" : {
        "Text" : "# fail\n",
        "Line" : 55,
        "CharPositionInLine" : 47
      },
      "18" : {
        "Text" : "# pass\n",
        "Line" : 58,
        "CharPositionInLine" : 50
      },
      "19" : {
        "Text" : "# pass\n",
        "Line" : 62,
        "CharPositionInLine" : 56
      },
      "20" : {
        "Text" : "# fail\n",
        "Line" : 66,
        "CharPositionInLine" : 69
      },
      "21" : {
        "Text" : "# fail\n",
        "Line" : 69,
        "CharPositionInLine" : 61
      },
      "22" : {
        "Text" : "# fail\n",
        "Line" : 72,
        "CharPositionInLine" : 62
      },
      "23" : {
        "Text" : "# pass\n",
        "Line" : 75,
        "CharPositionInLine" : 45
      },
      "24" : {
        "Text" : "# pass\n",
        "Line" : 79,
        "CharPositionInLine" : 55
      },
      "25" : {
        "Text" : "# fail\n",
        "Line" : 89,
        "CharPositionInLine" : 48
      },
      "26" : {
        "Text" : "# fail\n",
        "Line" : 92,
        "CharPositionInLine" : 45
      },
      "27" : {
        "Text" : "# fail\n",
        "Line" : 95,
        "CharPositionInLine" : 48
      },
      "28" : {
        "Text" : "# pass\n",
        "Line" : 98,
        "CharPositionInLine" : 46
      },
      "29" : {
        "Text" : "# pass\n",
        "Line" : 102,
        "CharPositionInLine" : 41
      },
      "30" : {
        "Text" : "# fail\n",
        "Line" : 107,
        "CharPositionInLine" : 51
      },
      "31" : {
        "Text" : "# fail\n",
        "Line" : 110,
        "CharPositionInLine" : 48
      },
      "32" : {
        "Text" : "# fail\n",
        "Line" : 113,
        "CharPositionInLine" : 53
      },
      "33" : {
        "Text" : "# fail\n",
        "Line" : 116,
        "CharPositionInLine" : 53
      },
      "34" : {
        "Text" : "# fail\n",
        "Line" : 119,
        "CharPositionInLine" : 59
      },
      "35" : {
        "Text" : "# fail\n",
        "Line" : 122,
        "CharPositionInLine" : 62
      },
      "36" : {
        "Text" : "# fail\n",
        "Line" : 126,
        "CharPositionInLine" : 51
      },
      "37" : {
        "Text" : "# fail\n",
        "Line" : 129,
        "CharPositionInLine" : 48
      },
      "38" : {
        "Text" : "# fail\n",
        "Line" : 132,
        "CharPositionInLine" : 59
      },
      "39" : {
        "Text" : "#elseif(testname STREQUAL rpath_remove_file_is_not_executable) # fail\n\n#  file(RPATH_REMOVE FILE ${CMAKE_CURRENT_LIST_FILE})\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# fail\n",
        "Line" : 138,
        "CharPositionInLine" : 50
      },
      "41" : {
        "Text" : "# fail\n",
        "Line" : 141,
        "CharPositionInLine" : 47
      },
      "42" : {
        "Text" : "# fail\n",
        "Line" : 144,
        "CharPositionInLine" : 48
      },
      "43" : {
        "Text" : "# pass\n",
        "Line" : 147,
        "CharPositionInLine" : 58
      },
      "44" : {
        "Text" : "# pass\n",
        "Line" : 150,
        "CharPositionInLine" : 61
      },
      "45" : {
        "Text" : "# careful: if the file does not have the given RPATH, it is deleted...\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# fail\n",
        "Line" : 164,
        "CharPositionInLine" : 61
      },
      "47" : {
        "Text" : "# fail\n",
        "Line" : 167,
        "CharPositionInLine" : 58
      },
      "48" : {
        "Text" : "# fail\n",
        "Line" : 170,
        "CharPositionInLine" : 59
      },
      "49" : {
        "Text" : "# fail\n",
        "Line" : 173,
        "CharPositionInLine" : 54
      },
      "50" : {
        "Text" : "# fail\n",
        "Line" : 176,
        "CharPositionInLine" : 59
      },
      "51" : {
        "Text" : "# pass\n",
        "Line" : 179,
        "CharPositionInLine" : 41
      },
      "52" : {
        "Text" : "# fail\n",
        "Line" : 183,
        "CharPositionInLine" : 56
      },
      "53" : {
        "Text" : "# fail\n",
        "Line" : 186,
        "CharPositionInLine" : 53
      },
      "54" : {
        "Text" : "# fail\n",
        "Line" : 189,
        "CharPositionInLine" : 48
      },
      "55" : {
        "Text" : "# fail\n",
        "Line" : 192,
        "CharPositionInLine" : 51
      },
      "56" : {
        "Text" : "# fail\n",
        "Line" : 195,
        "CharPositionInLine" : 54
      },
      "57" : {
        "Text" : "# pass\n",
        "Line" : 198,
        "CharPositionInLine" : 55
      },
      "58" : {
        "Text" : "# fail\n",
        "Line" : 204,
        "CharPositionInLine" : 54
      },
      "59" : {
        "Text" : "# fail\n",
        "Line" : 207,
        "CharPositionInLine" : 46
      },
      "60" : {
        "Text" : "# fail\n",
        "Line" : 210,
        "CharPositionInLine" : 49
      },
      "61" : {
        "Text" : "# fail\n",
        "Line" : 213,
        "CharPositionInLine" : 52
      },
      "62" : {
        "Text" : "# fail\n",
        "Line" : 216,
        "CharPositionInLine" : 56
      },
      "63" : {
        "Text" : "# pass\n",
        "Line" : 219,
        "CharPositionInLine" : 53
      },
      "64" : {
        "Text" : "# fail\n",
        "Line" : 224,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 65
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/Make_Directory-NoArg.cmake" : {
      "ObjectId" : "25b6f8984f7c85df2b62af7c916f420eaae616e8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/MathTestScript.cmake" : {
      "ObjectId" : "1b7f8a6f3b90c8af7f627798a5bf3ffb43c256c2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# fail\n",
        "Line" : 3,
        "CharPositionInLine" : 28
      },
      "1" : {
        "Text" : "# fail\n",
        "Line" : 6,
        "CharPositionInLine" : 32
      },
      "2" : {
        "Text" : "# fail\n",
        "Line" : 9,
        "CharPositionInLine" : 42
      },
      "3" : {
        "Text" : "# fail\n",
        "Line" : 12,
        "CharPositionInLine" : 39
      },
      "4" : {
        "Text" : "# fail\n",
        "Line" : 15,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/MessageTestScript.cmake" : {
      "ObjectId" : "c56f88e15fe4e9055989c3f2a26fa6c6eff22920",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-MD5-BadArg1.cmake" : {
      "ObjectId" : "89464769bce7e782f544dac1f65d91fa8ee9029c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-MD5-BadArg2.cmake" : {
      "ObjectId" : "abbbf879aab7931196d82d9550b541bc7ad4937f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-MD5-BadArg4.cmake" : {
      "ObjectId" : "edd442762de96a5ffd106305748cc4260c795281",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-MD5-Works.cmake" : {
      "ObjectId" : "4ef7a075472fa1407f777f0386999d46b66a39d2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-SHA1-Works.cmake" : {
      "ObjectId" : "2f3b51b61f0834f7917ab11fd322d2837afcbcd5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-SHA224-Works.cmake" : {
      "ObjectId" : "5b7f880ee7f032778663df4856fe51c5d36decf3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-SHA256-Works.cmake" : {
      "ObjectId" : "e3e89ae5d149ecdb549709efe2456e2b84fa1732",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-SHA384-Works.cmake" : {
      "ObjectId" : "828a1903148d6e915f6eaf688fe109cbf8e3dde1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-SHA3_224-Works.cmake" : {
      "ObjectId" : "6aeb91d51846e14edfdafaf83e30be483e8e9c94",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-SHA3_256-Works.cmake" : {
      "ObjectId" : "cc7ea1ab86c581667d187140e106381e8a9e6c90",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-SHA3_384-Works.cmake" : {
      "ObjectId" : "9341c3fa3e55d5f36dee41f26683f2b9daa8a5b7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-SHA3_512-Works.cmake" : {
      "ObjectId" : "cf4eddd62352664dcbdd6ec496724476aa9a25dc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-SHA512-Works.cmake" : {
      "ObjectId" : "e17db5c6eadebb93a79ef6a86065f162eeda549a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-TIMESTAMP-AllSpecifiers.cmake" : {
      "ObjectId" : "2d0fcc89c7b758ea4d32e248ebccd901a4bea09d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-TIMESTAMP-BadArg1.cmake" : {
      "ObjectId" : "8f2d9f8b4b321efbd2d90de6038fd1ee1fd80492",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-TIMESTAMP-BadArg2.cmake" : {
      "ObjectId" : "c1e5126842e8bd932ffdcf9dbfb3b24dde830122",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-TIMESTAMP-BadArg3.cmake" : {
      "ObjectId" : "3d577df3f874806ee19b13d1f32d877096521412",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-TIMESTAMP-CustomFormatLocal.cmake" : {
      "ObjectId" : "eab2a45de4beb86a074477457c5028ddff7b59cb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-TIMESTAMP-CustomFormatUTC.cmake" : {
      "ObjectId" : "eab2a45de4beb86a074477457c5028ddff7b59cb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-TIMESTAMP-DefaultFormatLocal.cmake" : {
      "ObjectId" : "d7c7dde1ca64f25503b0e0a0b9877da09062a6de",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-TIMESTAMP-DefaultFormatUTC.cmake" : {
      "ObjectId" : "dad6a8d97d790e69bb76e54061f63a0e52045da5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-TIMESTAMP-IncompleteSpecifier.cmake" : {
      "ObjectId" : "ffc5656fab422b00cf26d525f91285c0f19b7d2a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-TIMESTAMP-MonthWeekNames.cmake" : {
      "ObjectId" : "1cd44fffffc20b5f21d4410cfc132844a784a6dc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-TIMESTAMP-UnixTime.cmake" : {
      "ObjectId" : "43c93848e7da4c2e936f38188c9fac33f7f7def3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Doing proper date calculations here to verify unix timestamps\n\n# could be error prone.\n\n# At the very least use some safe lower and upper bounds to\n\n# see if we are somewhere in the right region.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/String-TIMESTAMP-UnknownSpecifier.cmake" : {
      "ObjectId" : "0e145e5ec967ac1631685a0a4edb518fcd39bf49",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CMakeTests/StringTestScript.cmake" : {
      "ObjectId" : "44d56531f6ab8386bd650728ca6d91aa91b79404",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# fail\n",
        "Line" : 3,
        "CharPositionInLine" : 28
      },
      "1" : {
        "Text" : "# fail\n",
        "Line" : 6,
        "CharPositionInLine" : 32
      },
      "2" : {
        "Text" : "# pass\n",
        "Line" : 9,
        "CharPositionInLine" : 33
      },
      "3" : {
        "Text" : "# fail\n",
        "Line" : 13,
        "CharPositionInLine" : 46
      },
      "4" : {
        "Text" : "# fail\n",
        "Line" : 16,
        "CharPositionInLine" : 44
      },
      "5" : {
        "Text" : "# fail\n",
        "Line" : 19,
        "CharPositionInLine" : 47
      },
      "6" : {
        "Text" : "# fail\n",
        "Line" : 22,
        "CharPositionInLine" : 47
      },
      "7" : {
        "Text" : "# fail\n",
        "Line" : 25,
        "CharPositionInLine" : 45
      },
      "8" : {
        "Text" : "# fail\n",
        "Line" : 28,
        "CharPositionInLine" : 48
      },
      "9" : {
        "Text" : "# pass\n",
        "Line" : 31,
        "CharPositionInLine" : 50
      },
      "10" : {
        "Text" : "# fail\n",
        "Line" : 35,
        "CharPositionInLine" : 42
      },
      "11" : {
        "Text" : "# fail\n",
        "Line" : 38,
        "CharPositionInLine" : 40
      },
      "12" : {
        "Text" : "# fail\n",
        "Line" : 41,
        "CharPositionInLine" : 54
      },
      "13" : {
        "Text" : "# fail\n",
        "Line" : 44,
        "CharPositionInLine" : 57
      },
      "14" : {
        "Text" : "# fail\n",
        "Line" : 47,
        "CharPositionInLine" : 56
      },
      "15" : {
        "Text" : "# fail\n",
        "Line" : 50,
        "CharPositionInLine" : 43
      },
      "16" : {
        "Text" : "# pass\n",
        "Line" : 53,
        "CharPositionInLine" : 54
      },
      "17" : {
        "Text" : "# fail\n",
        "Line" : 57,
        "CharPositionInLine" : 48
      },
      "18" : {
        "Text" : "# fail\n",
        "Line" : 60,
        "CharPositionInLine" : 51
      },
      "19" : {
        "Text" : "# pass\n",
        "Line" : 63,
        "CharPositionInLine" : 47
      },
      "20" : {
        "Text" : "# pass\n",
        "Line" : 67,
        "CharPositionInLine" : 57
      },
      "21" : {
        "Text" : "# fail\n",
        "Line" : 71,
        "CharPositionInLine" : 51
      },
      "22" : {
        "Text" : "# fail\n",
        "Line" : 74,
        "CharPositionInLine" : 54
      },
      "23" : {
        "Text" : "# fail\n",
        "Line" : 77,
        "CharPositionInLine" : 60
      },
      "24" : {
        "Text" : "# pass\n",
        "Line" : 80,
        "CharPositionInLine" : 68
      },
      "25" : {
        "Text" : "# pass\n",
        "Line" : 84,
        "CharPositionInLine" : 53
      },
      "26" : {
        "Text" : "# fail\n",
        "Line" : 88,
        "CharPositionInLine" : 57
      },
      "27" : {
        "Text" : "# fail\n",
        "Line" : 91,
        "CharPositionInLine" : 50
      },
      "28" : {
        "Text" : "# fail\n",
        "Line" : 94,
        "CharPositionInLine" : 53
      },
      "29" : {
        "Text" : "# fail\n",
        "Line" : 97,
        "CharPositionInLine" : 56
      },
      "30" : {
        "Text" : "# fail\n",
        "Line" : 100,
        "CharPositionInLine" : 56
      },
      "31" : {
        "Text" : "# fail\n",
        "Line" : 103,
        "CharPositionInLine" : 42
      },
      "32" : {
        "Text" : "# fail\n",
        "Line" : 106,
        "CharPositionInLine" : 45
      },
      "33" : {
        "Text" : "# fail\n",
        "Line" : 109,
        "CharPositionInLine" : 50
      },
      "34" : {
        "Text" : "# fail\n",
        "Line" : 112,
        "CharPositionInLine" : 50
      },
      "35" : {
        "Text" : "# pass\n",
        "Line" : 115,
        "CharPositionInLine" : 50
      },
      "36" : {
        "Text" : "# fail\n",
        "Line" : 119,
        "CharPositionInLine" : 52
      },
      "37" : {
        "Text" : "# fail\n",
        "Line" : 122,
        "CharPositionInLine" : 52
      },
      "38" : {
        "Text" : "# pass\n",
        "Line" : 125,
        "CharPositionInLine" : 59
      },
      "39" : {
        "Text" : "# fail\n",
        "Line" : 128,
        "CharPositionInLine" : 57
      },
      "40" : {
        "Text" : "# pass\n",
        "Line" : 131,
        "CharPositionInLine" : 55
      },
      "41" : {
        "Text" : "# pass\n",
        "Line" : 134,
        "CharPositionInLine" : 56
      },
      "42" : {
        "Text" : "# fail\n",
        "Line" : 137,
        "CharPositionInLine" : 49
      },
      "43" : {
        "Text" : "# fail\n",
        "Line" : 140,
        "CharPositionInLine" : 48
      },
      "44" : {
        "Text" : "# fail\n",
        "Line" : 143,
        "CharPositionInLine" : 49
      },
      "45" : {
        "Text" : "# fail\n",
        "Line" : 146,
        "CharPositionInLine" : 40
      },
      "46" : {
        "Text" : "# fail\n",
        "Line" : 149,
        "CharPositionInLine" : 40
      },
      "47" : {
        "Text" : "# pass\n",
        "Line" : 152,
        "CharPositionInLine" : 45
      },
      "48" : {
        "Text" : "# pass\n",
        "Line" : 156,
        "CharPositionInLine" : 47
      },
      "49" : {
        "Text" : "# fail\n",
        "Line" : 160,
        "CharPositionInLine" : 44
      },
      "50" : {
        "Text" : "# pass\n",
        "Line" : 163,
        "CharPositionInLine" : 48
      },
      "51" : {
        "Text" : "# pass\n",
        "Line" : 167,
        "CharPositionInLine" : 58
      },
      "52" : {
        "Text" : "# pass\n",
        "Line" : 171,
        "CharPositionInLine" : 56
      },
      "53" : {
        "Text" : "# small alphabet\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# smaller alphabet\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# smallest alphabet\n",
        "Line" : 180,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# smallest length and alphabet\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# seed values -- 2 same, then 1 different\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# alphabet of many colors - use all the crazy keyboard characters\n",
        "Line" : 196,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# fail\n",
        "Line" : 202,
        "CharPositionInLine" : 56
      },
      "60" : {
        "Text" : "# fail\n",
        "Line" : 205,
        "CharPositionInLine" : 57
      },
      "61" : {
        "Text" : "# fail\n",
        "Line" : 208,
        "CharPositionInLine" : 58
      },
      "62" : {
        "Text" : "# pass\n",
        "Line" : 211,
        "CharPositionInLine" : 60
      },
      "63" : {
        "Text" : "# fail\n",
        "Line" : 215,
        "CharPositionInLine" : 59
      },
      "64" : {
        "Text" : "# fail\n",
        "Line" : 218,
        "CharPositionInLine" : 64
      },
      "65" : {
        "Text" : "# fail\n",
        "Line" : 221,
        "CharPositionInLine" : 65
      },
      "66" : {
        "Text" : "# fail\n",
        "Line" : 224,
        "CharPositionInLine" : 66
      },
      "67" : {
        "Text" : "# pass\n",
        "Line" : 227,
        "CharPositionInLine" : 68
      },
      "68" : {
        "Text" : "# fail\n",
        "Line" : 231,
        "CharPositionInLine" : 73
      },
      "69" : {
        "Text" : "# fail\n",
        "Line" : 234,
        "CharPositionInLine" : 73
      },
      "70" : {
        "Text" : "# pass\n",
        "Line" : 237,
        "CharPositionInLine" : 62
      },
      "71" : {
        "Text" : "# pass\n",
        "Line" : 244,
        "CharPositionInLine" : 70
      },
      "72" : {
        "Text" : "# pass\n",
        "Line" : 251,
        "CharPositionInLine" : 59
      },
      "73" : {
        "Text" : "# pass\n",
        "Line" : 258,
        "CharPositionInLine" : 67
      },
      "74" : {
        "Text" : "# pass\n",
        "Line" : 265,
        "CharPositionInLine" : 72
      },
      "75" : {
        "Text" : "# pass\n",
        "Line" : 272,
        "CharPositionInLine" : 80
      },
      "76" : {
        "Text" : "# fail\n",
        "Line" : 279,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 77
    },
    "deps/src/cmake-3.13.4/Tests/COnly/CMakeLists.txt" : {
      "ObjectId" : "b3cc43813b200c2b51251844a75ea116239de2d8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a simple C only test case\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CPackComponents/CMakeLists.txt" : {
      "ObjectId" : "5b03c9e42cc938ad279d4cf0386f2b243a874087",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CPack Example: User-selectable Installation Components\n\n#\n\n# In this example, we have a simple library (mylib) with an example\n\n# application (mylibapp). We create a binary installer that allows\n\n# users to select which pieces will be installed: the example\n\n# application, the library binaries, and/or the header file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create the mylib library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create the mylibapp application\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On Linux, enable using an absolute install path to verify that\n\n# CMAKE_INSTALL_PREFIX and CPACK_SET_DESTDIR interact properly.\n\n#\n\n# But only use absolute paths if not targeting an NSIS installer\n\n# as indicated by CPACK_BINARY_NSIS. (If we allow this, the test\n\n# fails on Linux machines with makensis installed when we are not\n\n# cross-compiling...)\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Create installation targets. Note that we put each kind of file\n\n# into a different component via COMPONENT. These components will\n\n# be used to create the installation components.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CPack boilerplate for this project\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Settings used when building NSIS installers\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Suggested default root for end users of the installer:\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Include CPack to introduce the appropriate targets\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Installation types\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Component groups\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Components\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "deps/src/cmake-3.13.4/Tests/CPackComponents/VerifyResult.cmake" : {
      "ObjectId" : "c7c24fde15a975f442749c43ecdc7f741576d869",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Only expect the *.exe installer if it looks like NSIS is\n\n# installed on this machine:\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Always expect the *.dmg installer - PackageMaker should always\n\n# be installed on a development Mac:\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/CPackComponentsDEB/CMakeLists.txt" : {
      "ObjectId" : "9d4b5e9dfedd7f521e6586d1a6ca30d3b6568ad4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CPack Example: User-selectable Installation Components\n\n#\n\n# In this example, we have a simple library (mylib) with an example\n\n# application (mylibapp). We create a binary installer (a CPack Generator)\n\n# which supports CPack components.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use GNUInstallDirs in order to enforce lib64 if needed\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create the mylib library\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create the mylibapp application\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Duplicate of mylibapp application\n\n# which won't be put in any component (?mistake?)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create installation targets. Note that we put each kind of file\n\n# into a different component via COMPONENT. These components will\n\n# be used to create the installation components.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CPack boilerplate for this project\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Tell CPack all of the components to install. The \"ALL\"\n\n# refers to the fact that this is the set of components that\n\n# will be included when CPack is instructed to put everything\n\n# into the binary installer (the default behavior).\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Set the displayed names for each of the components to install.\n\n# These will be displayed in the list of components inside the installer.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Provide descriptions for each of the components to install.\n\n# When the user hovers the mouse over the name of a component,\n\n# the description will be shown in the \"Description\" box in the\n\n# installer. If no descriptions are provided, the \"Description\"\n\n# box will be removed.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# It doesn't make sense to install the headers without the libraries\n\n# (because you could never use the headers!), so make the headers component\n\n# depend on the libraries component.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# creates preinst/prerm scripts with specific permissions. Those permissions\n\n# (especially executable) should be in the final archive\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Those should have 755 permission normally. We mess it up to see if\n\n# CPACK_DEBIAN_APPLICATIONS_PACKAGE_CONTROL_STRICT_PERMISSION is able to fix\n\n# it.\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# creates a symbolic link and a directory. Those should not be hashed.\n\n# warning: relocation of the symlink is not supported (symlinks with relative\n\n# paths)\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# NOTE: directory left empty on purpose\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# NOTE: we should not add the trailing \"/\" to dirtest\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# We may use the CPack specific config file in order\n\n# to tailor CPack behavior on a CPack generator specific way\n\n# (Behavior would be different for RPM or TGZ or DEB ...)\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Setup project specific CPack-time CPack Config file.\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# set CPACK_DEBIAN_FILE_NAME to use default package name format\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Include CPack to introduce the appropriate targets\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "deps/src/cmake-3.13.4/Tests/CPackComponentsDEB/RunCPackVerifyResult-components-depend1.cmake" : {
      "ObjectId" : "73fd0abe214d29543efd0e951df48df78d285629",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# expected results\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# dpkg-deb checks for the dependencies of the packages\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# extracts the metadata from the package\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/CPackComponentsDEB/RunCPackVerifyResult-components-depend2.cmake" : {
      "ObjectId" : "81dbbc5157c59e7d3f9c90732f86e7bee8dff529",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# expected results\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# dpkg-deb checks for the summary of the packages\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# extracts the metadata from the package\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# should not contain the default\n",
        "Line" : 69,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/CPackComponentsDEB/RunCPackVerifyResult-components-description1.cmake" : {
      "ObjectId" : "ad52f56b7a3e3e964cda98ed1d3f6b88a55f89c3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# expected results\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# dpkg-deb checks for the summary of the packages\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# extracts the metadata from the package\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/CPackComponentsDEB/RunCPackVerifyResult-components-description2.cmake" : {
      "ObjectId" : "af27c5183f20f04820eaaec5c101dcdaf8d91f3f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# expected results\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# dpkg-deb checks for the summary of the packages\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# extracts the metadata from the package\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/CPackComponentsDEB/RunCPackVerifyResult-components-lintian-dpkgdeb-checks.cmake" : {
      "ObjectId" : "ec75d618abd7f5885c9bb6fe9bed8f41a818b797",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: currently debian doesn't produce lower cased names\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# lintian checks\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# dpkg-deb checks\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/CPackComponentsDEB/RunCPackVerifyResult-components-shlibdeps1.cmake" : {
      "ObjectId" : "e57488cbb90435ecb3b487a899cc1db421e09b8f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# requirements\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# debian now produces lower case names\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# dpkg-deb checks for the summary of the packages\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# extracts the metadata from the package\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# pass\n",
        "Line" : 57,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# pass\n",
        "Line" : 59,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# pass\n",
        "Line" : 61,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Tests/CPackComponentsDEB/RunCPackVerifyResult-components-source.cmake" : {
      "ObjectId" : "5ee057a3de2e6672071e78cbdb14d9d4a3159025",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# expected results\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# dpkg-deb checks for the summary of the packages\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# extracts the metadata from the package\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/CPackComponentsDEB/RunCPackVerifyResult-compression.cmake" : {
      "ObjectId" : "8c0bc4bd151c665573769d1efafa34112f047573",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: currently debian doesn't produce lower cased names\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# dpkg-deb checks\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# message(FATAL_ERROR \"output = '${dpkg_output}'\")\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/CPackComponentsDEB/RunCPackVerifyResult.cmake" : {
      "ObjectId" : "2f9e2fc921f072075d0f766e30ea422d0b7e587c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# prevent older policies from interfearing with this script\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# run cpack with some options and returns the list of files generated\n\n# -output_expected_file: list of files that match the pattern\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clean-up previously CPack generated files\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# This function runs lintian on a .deb and returns its output\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# run dpkg-deb\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Higher level lintian check that parse the output for errors and required strings\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# regex to avoid\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# This function runs dpkg-deb on a .deb and returns its output\n\n# the default behaviour it to run \"--info\" on the specified Debian package\n\n# ACTION is one of the option accepted by dpkg-deb\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# run dpkg-deb\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# returns a particular line of the metadata of the .deb, for checking\n\n# a previous call to run_dpkgdeb should provide the DPKGDEB_OUTPUT entry.\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#message(\"################ _TMP_STR = ${CMAKE_MATCH_1} ##################\")\n",
        "Line" : 196,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "deps/src/cmake-3.13.4/Tests/CPackComponentsForAll/CMakeLists.txt" : {
      "ObjectId" : "e49138a58c1d8c51f889656814763f431e552e5d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CPack Example: User-selectable Installation Components\n\n#\n\n# In this example, we have a simple library (mylib) with an example\n\n# application (mylibapp). We create a binary installer (a CPack Generator)\n\n# which supports CPack components.\n\n#\n\n# Depending on the CPack generator and on some CPACK_xxx var values\n\n# the generator may produce a single (NSIS, PackageMaker)\n\n# or several package files (Archive Generators, RPM, DEB)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use GNUInstallDirs in order to enforce lib64 if needed\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create the mylib library\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create the mylibapp application\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Duplicate of mylibapp application\n\n# which won't be put in any component (?mistake?)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create installation targets. Note that we put each kind of file\n\n# into a different component via COMPONENT. These components will\n\n# be used to create the installation components.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This application does not belong to any component\n\n# thus (as of cmake 2.8.2) it will be left \"uninstalled\"\n\n# by a component-aware installer unless a\n\n# CPACK_MONOLITHIC_INSTALL=1 is set (at cmake time).\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# test @ char in path\n",
        "Line" : 46,
        "CharPositionInLine" : 57
      },
      "8" : {
        "Text" : "############## test man pages\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "############## test symlinks\n\n# Package symbolic links\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# test symbolic links to same dir\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# test symbolic links to same dir with current dir ./ prefix\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# test symbolic links to same dir with longer relative path\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# test symbolic links to sub dir\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# test symbolic links to parent dir\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# test symbolic link to another relocatable path\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# test symbolic link to non relocatable path\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# test symbolic link from non relocatable path\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# test symbolic link relocatable path to its relocatable subpath\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# test symbolic link to location outside package\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# test symbolic link to location outside wdr (packaging directory)\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# CPack boilerplate for this project\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Tell CPack all of the components to install. The \"ALL\"\n\n# refers to the fact that this is the set of components that\n\n# will be included when CPack is instructed to put everything\n\n# into the binary installer (the default behavior).\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Set the displayed names for each of the components to install.\n\n# These will be displayed in the list of components inside the installer.\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Provide descriptions for each of the components to install.\n\n# When the user hovers the mouse over the name of a component,\n\n# the description will be shown in the \"Description\" box in the\n\n# installer. If no descriptions are provided, the \"Description\"\n\n# box will be removed.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Put the components into two different groups: \"Runtime\" and \"Development\"\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Expand the \"Development\" group by default, since we have so few components.\n\n# Also, provide this group with a description.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# It doesn't make sense to install the headers without the libraries\n\n# (because you could never use the headers!), so make the headers component\n\n# depend on the libraries component.\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Create two installation types with pre-selected components.\n\n# The \"Developer\" installation has just the library and headers,\n\n# while the \"Full\" installation has everything.\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# set CPACK_RPM_RELOCATION_PATHS here as GNUInstallDirs script\n\n# can not be used in CPack scripts due to CMAKE_SIZEOF_VOID_P\n\n# variable not being set\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# set CPACK_DEBIAN_FILE_NAME to use default package name format\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# set some tags for NuGet packages\n\n# 1. all in one package\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# 2. per component packages\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# 3. per group packages\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# We may use the CPack specific config file in order\n\n# to tailor CPack behavior on a CPack generator specific way\n\n# (Behavior would be different for RPM or TGZ or DEB ...)\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Setup project specific CPack-time CPack Config file.\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Include CPack to introduce the appropriate targets\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37
    },
    "deps/src/cmake-3.13.4/Tests/CPackComponentsForAll/RunCPackVerifyResult.cmake" : {
      "ObjectId" : "253d128f1ab72af8c92883df861a430058621ee1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# prevent older policies from interfearing with this script\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The usual default behavior is to expect a single file\n\n# Then some specific generators (Archive, RPM, ...)\n\n# May produce several numbers of files depending on\n\n# CPACK_COMPONENT_xxx values\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clean-up previously CPack generated files\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Now verify if the number of expected file is OK\n\n# - using expected_file_mask and\n\n# - expected_count\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Validate content\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# test package info\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# set gnu install prefixes to what they are set during rpm creation\n\n# CMAKE_SIZEOF_VOID_P is not set here but lib is prefix of lib64 so\n\n# relocation path test won't fail on OSes with lib64 library location\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# we don't explicitly set this value so it is different on each platform - ignore it\n",
        "Line" : 195,
        "CharPositionInLine" : 55
      },
      "8" : {
        "Text" : "# we don't explicitly set this value so it is different on each platform - ignore it\n",
        "Line" : 241,
        "CharPositionInLine" : 55
      },
      "9" : {
        "Text" : "#######################\n\n# test package info\n\n#######################\n",
        "Line" : 261,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "#######################\n\n# test package architecture\n\n#######################\n",
        "Line" : 288,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# test for rpm versions that contain architecture in package info (e.g. 4.11.x)\n",
        "Line" : 292,
        "CharPositionInLine" : 35
      },
      "12" : {
        "Text" : "# test result only on platforms that support -pqa rpm query\n",
        "Line" : 297,
        "CharPositionInLine" : 52
      },
      "13" : {
        "Text" : "# test for rpm versions that do not contain architecture in package info (e.g. 4.8.x)\n",
        "Line" : 298,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# else rpm version too old (e.g. 4.4.x) - skip test\n",
        "Line" : 303,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "#######################\n\n# test package content\n\n#######################\n",
        "Line" : 306,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# validate permissions user and group\n",
        "Line" : 321,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "#######################\n\n# verify generated symbolic links\n\n#######################\n",
        "Line" : 346,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# these links were not canged - post install script only - ignore them\n",
        "Line" : 375,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# verify post install symlink relocation script\n",
        "Line" : 385,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# prepare regex\n",
        "Line" : 389,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# compare\n",
        "Line" : 394,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 22
    },
    "deps/src/cmake-3.13.4/Tests/CPackComponentsPrefix/CMakeLists.txt" : {
      "ObjectId" : "581d3b378bc7c9e4288475cbc631ac40e4c16743",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# mandatory for DEB generator\n",
        "Line" : 9,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CPackTestAllGenerators/CMakeLists.txt" : {
      "ObjectId" : "5eeb7e90be39636838c58e6ac434c178bcaf560e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CPackTestAllGenerators/RunCPack.cmake" : {
      "ObjectId" : "952d5f4ae01b663b44cbb60da581de8861f2c37d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Analyze 'cpack --help' output for list of available generators:\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Call cpack with -G on each available generator. We do not care if this\n\n# succeeds or not. We expect it *not* to succeed if the underlying packaging\n\n# tools are not installed on the system... This test is here simply to add\n\n# coverage for the various cpack generators, even/especially to test ones\n\n# where the tools are not installed.\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/CPackUseDefaultVersion/CMakeLists.txt" : {
      "ObjectId" : "9f21f3afb7cd51e801c792260ac98213cf3b87e2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CPackUseProjectVersion/CMakeLists.txt" : {
      "ObjectId" : "d4770ae75186ef5a0241e87c1301cc7974139cdd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CPackUseShortProjectVersion/CMakeLists.txt" : {
      "ObjectId" : "855bc640199268d33d22ccf29dfd5aa4dfaa9555",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CPackWiXGenerator/CMakeLists.txt" : {
      "ObjectId" : "73eaf4fe980a082a8ca2647cafd20cf51a55101b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CPackWiXGenerator/RunCPackVerifyResult.cmake" : {
      "ObjectId" : "ca9fd90495e61531bd909993bd447cee1ab684ee",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# error SMOK1076 : ICE61: This product should remove only older\n\n# versions of itself. The Maximum version is not less\n\n# than the current product. (1.0.0 1.0.0)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CSharpLinkFromCxx/CMakeLists.txt" : {
      "ObjectId" : "9a1a99379301e77dcd8a40683bcfa6797ff4e0f9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Take a C# shared library and link it to a managed C++ shared library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# we have to change the default flags for the\n\n# managed C++ project to build\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The C# project is a dependency of the C++/CLI project\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Main executable for the test framework\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/CSharpLinkToCxx/CMakeLists.txt" : {
      "ObjectId" : "a3067afa29b3a48393258f30d5008fff55ca414e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test if CSharp application correctly links\n\n# to managed C++ binary\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# we have to change the default flags for the\n\n# managed C++ project to build\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# this unmanaged C++ library will be added to the C#/.NET\n\n# references of CSharpLinkToCxx but it will show a warning\n\n# because it is unmanaged\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Link a static C++ library into the CSharp executable.\n\n# We do not actually use any symbols but this helps cover\n\n# link language selection.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/CSharpOnly/CMakeLists.txt" : {
      "ObjectId" : "82049c78d2ed3c2e20f9b8d2a14bf894a1de7bb3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a simple CSharp only test case\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C# does not make any difference between STATIC and SHARED libs\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/CTestConfig/CMakeLists.txt" : {
      "ObjectId" : "8c19adbe294600de7dbf8584d1339f7640a1a0fc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We expect this configure to occur through a 'ctest -D Experimental' or a\n\n# 'ctest -S script.cmake' call.\n\n#\n\n# In either case, we expect CMAKE_BUILD_TYPE to be defined for single-configuration\n\n# build trees and not defined for multi-configuration build trees. The value of\n\n# CMAKE_CONFIGURATION_TYPES should not be relied upon to determine whether we\n\n# are using a multi-config generator or not, the GENERATOR_IS_MULTI_CONFIG\n\n# global property is the canonical way to do that as of CMake 3.9.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Populating CMAKE_CONFIGURATION_TYPES even for single config generators is\n\n# common enough for user projects that we don't want to consider it an error.\n\n# We just need CMAKE_BUILD_TYPE to be set and ignore CMAKE_CONFIGURATION_TYPES.\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/CTestConfig/ScriptWithArgs.cmake" : {
      "ObjectId" : "79896a7fcc699a061229d1bc344be499863e5959",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestCoverageCollectGCOV/TestProject/CMakeLists.txt" : {
      "ObjectId" : "ce6fac4352ad6a9d04adfb6afd8ca5ab03a0e951",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestCoverageCollectGCOV/TestProject/fake_compile_time_gcno.cmake" : {
      "ObjectId" : "881460b3c08aae1c7fe1d024e8e60eeee98f7257",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestCoverageCollectGCOV/TestProject/fake_run_time_gcda.cmake" : {
      "ObjectId" : "26ce2bd76dd38f470aadb2ebf97e6bea1d71b350",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestCoverageCollectGCOV/fakegcov.cmake" : {
      "ObjectId" : "b0c3a9b9ff5e02abfaa447393aaa103d43a62701",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestLimitDashJ/CMakeLists.txt" : {
      "ObjectId" : "92d743f8115582bef0d19e5ad313ac4d0fab26e5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file demonstrates https://gitlab.kitware.com/cmake/cmake/issues/12904\n\n# when configured with CMake 2.8.10.2 and earlier, and when running\n\n# \"ctest -j 4\" in the resulting build tree. This example is hard-coded\n\n# to assume -j 4 just to reproduce the issue easily. Adjust the\n\n# FAIL_REGULAR_EXPRESSION and PROCESSORS values to reproduce this problem\n\n# with a different ctest -j value...\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CTestLimitDashJ/CreateSleepDelete.cmake" : {
      "ObjectId" : "b09307feb675c5c1ef9cfb3e64d1c38b6c5a861f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# count files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# write a new file\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# count files again\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# snooze\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# count files again\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# delete the file we wrote earlier\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# count files again\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Tests/CTestTest/SmallAndFast/CMakeLists.txt" : {
      "ObjectId" : "85cb30ceff9e2844cf47fb5e17c3552d4e8dedec",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestBadExe/CMakeLists.txt" : {
      "ObjectId" : "c71c21516b057d229a48d8970b3969c1d5d1bf93",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestBadExe/CTestConfig.cmake" : {
      "ObjectId" : "c7286e2c57a3ed1eaf6321404ce760aeb3780de0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestBadGenerator/CMakeLists.txt" : {
      "ObjectId" : "d46d9bf4f3c68b4ba76066d104d82f14e725a883",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestBadGenerator/CTestConfig.cmake" : {
      "ObjectId" : "1e61bf441468ea75ded9e49720cc7da081e23ea0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestCostSerial/CMakeLists.txt" : {
      "ObjectId" : "d3344cfabec1353b323249c620a5bcfeabc6931c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestCostSerial/CTestConfig.cmake" : {
      "ObjectId" : "3ab99ac5e0f47deb7777159c5640c1f97aab58d7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestCrash/CMakeLists.txt" : {
      "ObjectId" : "77986df349b8143f3d3cf13906dfa42035aff6f5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestCrash/CTestConfig.cmake" : {
      "ObjectId" : "5c2ca0ea95d3c041d4d97b7d2bbd314fac7b664c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestCycle/CMakeLists.txt" : {
      "ObjectId" : "6ba6b8c9530aabd96e2f8fb24e449afe62fbf32a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add cyclical test dependency\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestCycle/CTestConfig.cmake" : {
      "ObjectId" : "8aeb09b701d797e40b64e04ed7ea102bb6aeea63",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestDepends/CMakeLists.txt" : {
      "ObjectId" : "5cd6d6665775b45da1740f5369a0b23a30ca1cdf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add redundant (but not cyclical) dependencies\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestDepends/CTestConfig.cmake" : {
      "ObjectId" : "7af9200e26c886ead6ed60afed704cd5dc16f6c3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestFailure/CMakeLists.txt" : {
      "ObjectId" : "01fbb2c4f3a930d8e6243a14528748c70264e362",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestFailure/CTestConfig.cmake" : {
      "ObjectId" : "07e1be00c53c26b3fdf3985391681ff380ead5b7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestFdSetSize/CMakeLists.txt" : {
      "ObjectId" : "f3827460d90f6fdf37a42928bf3da2b9c815b67e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestFdSetSize/CTestConfig.cmake" : {
      "ObjectId" : "b5f3c33630a95e4916c2209dc6f6c662ad899991",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestLaunchers/launcher_compiler_test_project/CMakeLists.txt" : {
      "ObjectId" : "7376a40e6a57e66a5f831af8701fdf564303bae7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestLaunchers/launcher_compiler_test_project/CTestConfig.cmake" : {
      "ObjectId" : "669b0fb6808e680c0692b8117cc1e833a0f2824d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestLaunchers/launcher_custom_command_test_project/CMakeLists.txt" : {
      "ObjectId" : "b31f5877964cba2bfe05cab377d5c17f2264b2a3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestLaunchers/launcher_custom_command_test_project/CTestConfig.cmake" : {
      "ObjectId" : "669b0fb6808e680c0692b8117cc1e833a0f2824d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestLaunchers/launcher_custom_command_test_project/command.cmake" : {
      "ObjectId" : "7f31af9508c69e5bd67626e9e8d7fd5fe6e50558",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestLaunchers/launcher_linker_test_project/CMakeLists.txt" : {
      "ObjectId" : "38980aa7e0f26bc3152dd399d37fa5a7e52d2257",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestLaunchers/launcher_linker_test_project/CTestConfig.cmake" : {
      "ObjectId" : "669b0fb6808e680c0692b8117cc1e833a0f2824d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestMissingDependsExe/CMakeLists.txt" : {
      "ObjectId" : "9826da661a1844f2e531786b86301de1dbb21c63",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestParallel/CMakeLists.txt" : {
      "ObjectId" : "e47085a09bfad8a4e82ed2172ab4f899d4961f5f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestParallel/CTestConfig.cmake" : {
      "ObjectId" : "fc5b6668ef25ca1ea9252b3a064ec7ebac71b55f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestResourceLock/CMakeLists.txt" : {
      "ObjectId" : "4001643fdf17b278b4d58f51ad9a0acd938cedc7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestResourceLock/CTestConfig.cmake" : {
      "ObjectId" : "c1187778d23962edf6485963799ee7b88e49a86f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestScheduler/CMakeLists.txt" : {
      "ObjectId" : "ccd7b2cbb0a6a52ee99fc2cfc1fa0e8321ebad48",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestScheduler/CTestConfig.cmake" : {
      "ObjectId" : "797387bdd8be072ae9aaca91046c7dd925990b6b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestSerialInDepends/CMakeLists.txt" : {
      "ObjectId" : "90e50f98277dad8ff0fbccd2ca018bc4b0608465",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestSerialOrder/CMakeLists.txt" : {
      "ObjectId" : "69c11fcde16f175468c5c0f131794febb6f4d5f8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestSerialOrder/test.cmake" : {
      "ObjectId" : "8479cae9532e2e5b2966d0c573785c15cf6deb42",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestSkipReturnCode/CMakeLists.txt" : {
      "ObjectId" : "26c4178fd979beed90dffbed5913f5cda25b751a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestSkipReturnCode/CTestConfig.cmake" : {
      "ObjectId" : "da0c76b7380d99c8e15b9317e54b532bae678771",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestStopTime/CMakeLists.txt" : {
      "ObjectId" : "bd8bebdda946efdad46baae491e611c995afa650",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestStopTime/CTestConfig.cmake" : {
      "ObjectId" : "412283e69c46cad5985c29d6dfc385ab8d554679",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestStopTime/GetDate.cmake" : {
      "ObjectId" : "64a4fb9b39eea3f6a72a1ce39643390b43d09843",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# All macro arguments are optional.\n\n#   If there's an ARGV0, use it as GD_PREFIX. Default = 'GD_'\n\n#   If there's an ARGV1, use it as ${GD_PREFIX}VERBOSE. Default = '0'\n\n#\n\n# If the date can be retrieved and parsed successfully, this macro\n\n# will set the following CMake variables:\n\n#\n\n#   GD_PREFIX\n\n#   ${GD_PREFIX}PREFIX (if '${GD_PREFIX}' is not 'GD_'...!)\n\n#   ${GD_PREFIX}VERBOSE\n\n#\n\n#   ${GD_PREFIX}OV\n\n#\n\n#   ${GD_PREFIX}REGEX\n\n#   ${GD_PREFIX}YEAR\n\n#   ${GD_PREFIX}MONTH\n\n#   ${GD_PREFIX}DAY\n\n#   ${GD_PREFIX}HOUR\n\n#   ${GD_PREFIX}MINUTE\n\n#   ${GD_PREFIX}SECOND\n\n#\n\n# Caller can then use these variables to construct names based on\n\n# date and time stamps...\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# If there's an ARGV0, use it as GD_PREFIX:\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# If there's an ARGV1, use it as ${GD_PREFIX}VERBOSE:\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Retrieve the current date and time in the format:\n\n#\n\n# 01/12/2006  08:55:12\n\n# mm/dd/YYYY HH:MM:SS\n\n#\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#\n\n# Extract six individual components by matching a regex with paren groupings.\n\n# Use the replace functionality and \\\\1 through \\\\6 to extract components.\n\n#\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Pad the H, M, S if needed\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestSubdir/CMakeLists.txt" : {
      "ObjectId" : "b7cc7e2f154c74086bda9058d3b34a3cb2d1e350",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestSubdir/CTestConfig.cmake" : {
      "ObjectId" : "47ebb925c575189c6f6f924536f8b5d3c2e7c2ac",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestSubdir/subdir/CMakeLists.txt" : {
      "ObjectId" : "ee555354e7ad79d21b9fd1da24c68f4dd849308a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestSubdir/subdir2/CMakeLists.txt" : {
      "ObjectId" : "a8d0a779b0d7b32fce958a6fd36f17d95ba0ae53",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestSubdir/subdir3/CMakeLists.txt" : {
      "ObjectId" : "fbc41d5e675580f5982512df75a7c5745a2abb1a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestTimeout/CMakeLists.txt" : {
      "ObjectId" : "c6cbc47094d2c352e6939e9064bdd2eb3be4f106",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Give the process time to load and start running.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestTimeout/CTestConfig.cmake" : {
      "ObjectId" : "13114f1cabbf31dce93e435300f8149a3cfc9db9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestTimeout/timeout.cmake" : {
      "ObjectId" : "ba2f58b7d175492efede824ef32117f4080b786e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Remove the log file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Run a child that sleeps longer than the timeout of this test.\n\n# Log its output so check.cmake can verify it dies.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestUpload/CMakeLists.txt" : {
      "ObjectId" : "90d811cd94c2763d1890acc08e206a81bbc54bdb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestUpload/CTestConfig.cmake" : {
      "ObjectId" : "a54708838edfe3acecb0bf52d41c9df3e5be2614",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestVerboseOutput/CMakeLists.txt" : {
      "ObjectId" : "4cdd29c689fb57ebbc67c0826fdd3e0ecdfd4001",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestVerboseOutput/CTestConfig.cmake" : {
      "ObjectId" : "4f96c79a9efbb726d8320e0232122ed5b4155608",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestZeroTimeout/CMakeLists.txt" : {
      "ObjectId" : "4d2b79dc2f29b14856e86885868a0f01c77dd3b1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestTestZeroTimeout/CTestConfig.cmake" : {
      "ObjectId" : "60948647f5934a4cf9c052a6052bde54c1eeaaf5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CTestUpdateCommon.cmake" : {
      "ObjectId" : "61aa13b949155120b807e5196f5202f3e62f2f10",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Function to run a child process and report output only on error.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Pass output back up to the parent scope for possible further inspection.\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Function to find the Update.xml file and check for expected entries.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find the Update.xml file for the given build tree\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Read entries from the Update.xml file\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If specified, remove the given prefix from the files in Update.xml.\n\n# Some VCS systems, like Perforce, return absolute locations\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Compare expected and actual entries\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Report the result\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# List the missing entries\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Success\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Report the result\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# List the extra entries\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Success\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Provide the log file\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Display the error message\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Function to create initial content.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# An example CTest project configuration file.\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Some other files.\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Function to update content.\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Function to change existing files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Function to create local modifications before update\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Function to write CTestConfiguration.ini content.\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Function to write the dashboard test script.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Write the dashboard script.\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Function to run the dashboard through the command line\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Verify the updates reported by CTest.\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Function to find the Update.xml file and make sure\n\n# it only has the Revision in it and no updates\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Function to find the Update.xml file and make sure\n\n# it only has the UpdateReturnStatus failure message and no updates.\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Function to run the dashboard through a script\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Verify the updates reported by CTest.\n",
        "Line" : 288,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Pass console output up to the parent, in case they'd like to inspect it.\n",
        "Line" : 304,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Function to initialize the testing directory.\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "deps/src/cmake-3.13.4/Tests/CheckCompilerRelatedVariables/CMakeLists.txt" : {
      "ObjectId" : "87b7f1acdb24466143130baa982dc4e166d187a6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check that the correct number of MSVC** variables are defined...\n\n#\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# MSVC is set in cl.cmake when cl is the compiler...\n\n#\n\n# Exactly one of the numbered variables should also be set\n\n# indicating which version of the cl compiler / Visual Studio\n\n# is in use...\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#\n\n# The compiler is something other than cl... None of the MSVC** variables\n\n# should be defined...\n\n#\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#\n\n# This is a no-op executable... If this test is going to fail, it fails during\n\n# the configure step while cmake is configuring this CMakeLists.txt file...\n\n#\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/CheckFortran.cmake" : {
      "ObjectId" : "16a8ed2c69f60f482e0eb447aec3c4a8516d694a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CommandLength/CMakeLists.txt" : {
      "ObjectId" : "68360518b4bcda20bbe4b81e71c4ed24480f8d19",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CommandLineTest/CMakeLists.txt" : {
      "ObjectId" : "96aac104c28cb86bb3065779161eb5c459291ebe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CommandLineTest/PreLoad.cmake" : {
      "ObjectId" : "f059bcea6e03a0616e304fd5084dcddfb01f98e3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CompatibleInterface/CMakeLists.txt" : {
      "ObjectId" : "668a97b14cb52ae400c85ad7fdcc2d89b808ebda",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use LINK_ONLY to suppress usage requirements and allow the check to pass.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For the LINK_LIBRARIES and related properties, we should not evaluate\n\n# properties defined only in the interface - they should be implicitly zero\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test that this does not segfault:\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The COMPATIBLE_INTERFACE_* properties are only read from dependencies\n\n# in the interface. Populating it on the CompatibleInterface target does\n\n# not have any effect on the interpretation of the INTERFACE variants\n\n# in dependencies.\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/CompileCommandOutput/CMakeLists.txt" : {
      "ObjectId" : "6f9468dcaa697444749e1e6284a570c09faf106b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a simple C only test case\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CompileDefinitions/CMakeLists.txt" : {
      "ObjectId" : "1d8afbff3f7fc96ab8c50cfc8cadfeb86c646dba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use compile flags to tell executables which config is built\n\n# without depending on the compile definitions functionality.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CompileDefinitions/add_def_cmd/CMakeLists.txt" : {
      "ObjectId" : "2bce60229893e5ebbf5c6547e9352b83ec6bb805",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CompileDefinitions/add_def_cmd_tprop/CMakeLists.txt" : {
      "ObjectId" : "4ef8a093709cd84b2abb0975c29c15951b18af58",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CompileDefinitions/target_prop/CMakeLists.txt" : {
      "ObjectId" : "311975ce52a0045d84570da6c51b28533d62ed15",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Resulting link language will be CXX\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CompileFeatures/CMakeLists.txt" : {
      "ObjectId" : "b0bc6567dc2fcef02f61436653c0f5618b086b43",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# AppleClang prior to 5.1 does not set any preprocessor define to distinguish\n\n# c++1y from c++11, so CMake does not support c++1y features before AppleClang 5.1.\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# AppleClang prior to 4.1 reports false for __has_feature(cxx_local_type_template_args)\n\n# and __has_feature(cxx_unrestricted_unions) but it happens to pass these tests.\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# The cxx_raw_string_literals feature happens to work in some distributions\n\n# of GNU 4.4, but it is first documented as available with GNU 4.5.\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The cxx_constexpr feature happens to work (for *this* testcase) with\n\n# GNU 4.5, but it is first documented as available with GNU 4.6.\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# The cxx_alignof feature happens to work (for *this* testcase) with\n\n# GNU 4.7, but it is first documented as available with GNU 4.8.\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# GNU prior to 4.9 does not set any preprocessor define to distinguish\n\n# c++1y from c++11, so CMake does not support c++1y features before GNU 4.9.\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# GNU 4.8 knows cxx_attributes, but doesn't know [[deprecated]]\n\n# and warns that it is unknown and ignored.\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# The cxx_contextual_conversions feature happens to work\n\n# (for *this* testcase) with VS 2010 and VS 2012, but\n\n# they do not document support until VS 2013.\n",
        "Line" : 102,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# The cxx_deleted_functions and cxx_nonstatic_member_init\n\n# features happen to work (for *this* testcase) with VS 2013,\n\n# but they do not document support until VS 2015.\n",
        "Line" : 109,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# The cxx_contextual_conversions feature happens to work\n\n# (for *this* testcase) with Intel 13/14/15, but they do not\n\n# document support until 16.\n",
        "Line" : 122,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# not supposed to work until 15\n",
        "Line" : 132,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# The cxx_contextual_conversions feature happens to work\n\n# (for *this* testcase) with Intel 13/14/15, but they do not\n\n# document support until 16.\n",
        "Line" : 135,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# These features happen to work but aren't documented to\n\n# do so until 14.0\n",
        "Line" : 143,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# not supposed to work until 15\n",
        "Line" : 151,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# The cxx_contextual_conversions feature happens to work\n\n# (for *this* testcase) with Intel 13/14/15, but they do not\n\n# document support until 16.\n",
        "Line" : 155,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# This is an undocumented feature; it does not work in future versions\n",
        "Line" : 160,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# This works on some pre-15.0.2 versions and not others.\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# always add a target \"CompileFeatures\"\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# these tests only work if at least cxx_auto_type is available\n",
        "Line" : 269,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 19
    },
    "deps/src/cmake-3.13.4/Tests/CompileOptions/CMakeLists.txt" : {
      "ObjectId" : "c9f171076c4027a243a430ffd3938f172f171226",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# produces no options\n",
        "Line" : 21,
        "CharPositionInLine" : 11
      },
      "1" : {
        "Text" : "# these compilers do not support separate -D flags\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/Complex/CMakeLists.txt" : {
      "ObjectId" : "2e41754425a0c66f205c1beb46a6ba1520a33bf0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# A more complex test case\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test that renaming a built-in works when configured multiple times.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Try setting a new policy.  The IF test is for coverage.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It is not recommended to set a policy to OLD, but this test\n\n# covers the OLD behavior of some policies.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Test building without per-rule echo lines in Makefiles.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Define a macro\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# invoke the macro\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Define a var args macro, it must take two or four args\n\n#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# invoke the macro\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Floating-point comparison test.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# Include vars from a file and from a cache\n\n#\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# Specify include and lib dirs\n\n# (BEFORE is for coverage)\n\n#\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# check for SET CACHE FORCE\n\n#\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# Lib and exe path\n\n#\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# Exec program (TODO: test a result)\n\n# Increase coverage.\n\n#\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Execute a process.  Add coverage for this command.\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# This test has some problems on UNIX systems.  Disabling for now.\n\n#\n\n# execute_process(\n\n#   COMMAND ${CMAKE_COMMAND} -E echo \"ABCDEFG\"\n\n#   COMMAND /process/does/not/exist\n\n#   OUTPUT_QUIET\n\n#   ERROR_QUIET\n\n#   RESULT_VARIABLE RESULT\n\n#   )\n\n# if(\"${RESULT}\" STREQUAL \"0\")\n\n#   message(SEND_ERROR\n\n#     \"EXECUTE_PROCESS result test failed with RESULT=[${RESULT}]\")\n\n# else()\n\n#   message(STATUS \"EXECUTE_PROCESS result test passed with RESULT=[${RESULT}]\")\n\n# endif()\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n\n# Create directory.\n\n# The 'complex' executable will then test if this dir exists,\n\n# sadly it won't be able to remove it.\n\n#\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# Test FIND_LIBARY\n\n# Create a dummy empty lib\n\n#\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# This doesn't work for platforms that have a shared library and an import\n\n# library, like Windows with .dll and .lib. Limit is to \".so\" now because it's\n\n# known to work there.\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Static library, should work everywhere\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\n\n# Test SET_SOURCE_FILES_PROPERTIES\n\n#\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\n\n# Test registry (win32)\n\n# Create a file, put its path in a registry key, try to find the file in that\n\n# path using that registry key, then remove the file and the key\n\n#\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\n\n# Test a set and a remove\n\n#\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\n\n# Test an IF inside a FOREACH.\n\n#\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Should always execute.\n",
        "Line" : 343,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Should never execute.\n",
        "Line" : 346,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# test WHILE command\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# test elseif functionality, the mess below tries to catch problem\n\n# of clauses being executed early or late etc\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# test handling of parenthetical groups in conditionals\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\n\n# Configure file\n\n# (plug vars to #define so that they can be tested)\n\n#\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# test CONFIGURE_FILE with ESCAPE_QUOTES on\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Test regular expression commands.\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\n\n# This tests needs Ansi C++98\n\n#\n",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#\n\n# GNU extensions are needed for stricmp() on Windows.\n\n#\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Clang/C2 in C++98 mode cannot properly handle some of MSVC headers\n",
        "Line" : 443,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#\n\n# Create the libs and the main exe\n\n#\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37
    },
    "deps/src/cmake-3.13.4/Tests/Complex/Executable/CMakeLists.txt" : {
      "ObjectId" : "2a796298ba1a2754b52776b1f71c8c34c127ee69",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Create exe.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create an imported target for if(TARGET) test below.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test if(TARGET) command.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use LINK_LIBRARIES instead of TARGET_LINK_LIBRARIES to\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Test forcing a .cxx file to not build.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Test forcing a .c file to not build.\n\n# This makes sure a mixed language library is created\n\n# with header file only sources\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#  Sub1/NameConflictTest.c Sub2/NameConflictTest.c)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Test linking to static lib when a shared lib has the same name.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# can we get the path to a source file\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# get the directory parent\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# get the stack of listfiles\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Test add/remove definitions.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Test pre-build/pre-link/post-build rules for an executable.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\" -DFILE_DEFINE_STRING=\\\\\\\"hello\\\\\\\"\"\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Test creating an executable that is not built by default.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Test user-value flag mapping for the VS IDE.\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Test creating a custom target that builds not-in-all targets.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n\n# Output the files required by 'complex' to a file.\n\n#\n\n# This test has been moved to the 'required' subdir so that it\n\n# has no side-effects on the current Makefile (duplicated source file\n\n# due to source list expansion done twice).\n\n#\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# XCODE is excluded due to #15687\n",
        "Line" : 150,
        "CharPositionInLine" : 18
      },
      "19" : {
        "Text" : "#\n\n# Extra coverage.Not used.\n\n#\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "deps/src/cmake-3.13.4/Tests/Complex/Executable/Included.cmake" : {
      "ObjectId" : "3c7ec8b59d4f336a032e6edd8a9c79242a5293a3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Complex/Executable/Temp/CMakeLists.txt" : {
      "ObjectId" : "041fcff20cbdf2988b6be8366364bf54be3bfbd6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Output the files required by 'complex' to a file.\n\n# The 'complex' executable will then test if this file exists and remove it.\n\n# The contents of this file is not tested (absolute paths).\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Complex/Library/CMakeLists.txt" : {
      "ObjectId" : "64f6dc854a6896852f946ca98380ba71b4f3aa74",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Small utility used to create file\n\n# UTILITY_SOURCE is used for coverage and for getting the exact name\n\n# of the executable.\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Create static library\n\n# SOURCE_FILES_REMOVE is used for Coverage. empty.h is included for coverage\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Create shared library\n\n#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# No libm on BeOS.\n",
        "Line" : 54,
        "CharPositionInLine" : 42
      },
      "4" : {
        "Text" : "# Create static and shared lib of same name.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Attach pre-build/pre-link/post-build custom-commands to the lib.\n\n# Each runs ${CREATE_FILE_EXE} which will create a file.\n\n# The 'complex' executable will then test if this file exists and remove it.\n\n#\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Add a custom target.\n\n# It runs ${CREATE_FILE_EXE} which will create a file.\n\n# The 'complex' executable will then test if this file exists and remove it.\n\n#\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Extra coverage\n\n#\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Test creating a library that is not built by default.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Create an imported target for if(TARGET) test in Executable dir.\n\n# That test should not see this target.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Test generation of preprocessed sources.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Skip running this part of the test on certain platforms\n\n# until they are fixed.\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# OSX does not support preprocessing more than one architecture.\n",
        "Line" : 128,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Custom target to try preprocessing invocation.\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 14
    },
    "deps/src/cmake-3.13.4/Tests/Complex/Library/test_preprocess.cmake" : {
      "ObjectId" : "4c8ec21748bcd8408bcd67bfcbcb55385fdd1e0f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Complex/VarTests.cmake" : {
      "ObjectId" : "9761986ab9c6c3290d7527547f9bd2e32b954582",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Test SET\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Test VARIABLE_REQUIRES\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Test various IF/ELSE combinations\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Test FOREACH\n\n#\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/ComplexOneConfig/CMakeLists.txt" : {
      "ObjectId" : "628cd4ec3ffb0dab91dcb1c4f3fbae53c99bba8e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# A more complex test case\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try setting a new policy.  The IF test is for coverage.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# It is not recommended to set a policy to OLD, but this test\n\n# covers the OLD behavior of some policies.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Test building without per-rule echo lines in Makefiles.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Define a macro\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# invoke the macro\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Define a var args macro, it must take two or four args\n\n#\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# invoke the macro\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Floating-point comparison test.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Include vars from a file and from a cache\n\n#\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# Specify include and lib dirs\n\n# (BEFORE is for coverage)\n\n#\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# check for SET CACHE FORCE\n\n#\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# Lib and exe path\n\n#\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# Exec program (TODO: test a result)\n\n# Increase coverage.\n\n#\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Execute a process.  Add coverage for this command.\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# This test has some problems on UNIX systems.  Disabling for now.\n\n#\n\n# execute_process(\n\n#   COMMAND ${CMAKE_COMMAND} -E echo \"ABCDEFG\"\n\n#   COMMAND /process/does/not/exist\n\n#   OUTPUT_QUIET\n\n#   ERROR_QUIET\n\n#   RESULT_VARIABLE RESULT\n\n#   )\n\n# if(\"${RESULT}\" STREQUAL \"0\")\n\n#   message(SEND_ERROR\n\n#     \"EXECUTE_PROCESS result test failed with RESULT=[${RESULT}]\")\n\n# else()\n\n#   message(STATUS \"EXECUTE_PROCESS result test passed with RESULT=[${RESULT}]\")\n\n# endif()\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# Create directory.\n\n# The 'complex' executable will then test if this dir exists,\n\n# sadly it won't be able to remove it.\n\n#\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n\n# Test FIND_LIBARY\n\n# Create a dummy empty lib\n\n#\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# Test SET_SOURCE_FILES_PROPERTIES\n\n#\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\n\n# Test registry (win32)\n\n# Create a file, put its path in a registry key, try to find the file in that\n\n# path using that registry key, then remove the file and the key\n\n#\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\n\n# Test a set and a remove\n\n#\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\n\n# Test an IF inside a FOREACH.\n\n#\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Should always execute.\n",
        "Line" : 300,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Should never execute.\n",
        "Line" : 303,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# test WHILE command\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# test elseif functionality, the mess below tries to catch problem\n\n# of clauses being executed early or late etc\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# test handling of parenthetical groups in conditionals\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#\n\n# Configure file\n\n# (plug vars to #define so that they can be tested)\n\n#\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# test CONFIGURE_FILE with ESCAPE_QUOTES on\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Test regular expression commands.\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\n\n# This tests needs Ansi C++98\n\n#\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\n\n# GNU extensions are needed for stricmp() on Windows.\n\n#\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Clang/C2 in C++98 mode cannot properly handle some of MSVC headers\n",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\n\n# Create the libs and the main exe\n\n#\n",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    },
    "deps/src/cmake-3.13.4/Tests/ComplexOneConfig/Executable/CMakeLists.txt" : {
      "ObjectId" : "f935aed1d7c8bdf954dfcd1551f802493740a3de",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Create exe.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create an imported target for if(TARGET) test below.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test if(TARGET) command.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use LINK_LIBRARIES instead of TARGET_LINK_LIBRARIES to\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Test forcing a .cxx file to not build.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Test forcing a .c file to not build.\n\n# This makes sure a mixed language library is created\n\n# with header file only sources\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#  Sub1/NameConflictTest.c Sub2/NameConflictTest.c)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Test linking to static lib when a shared lib has the same name.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# can we get the path to a source file\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# get the directory parent\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# get the stack of listfiles\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Test add/remove definitions.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Test pre-build/pre-link/post-build rules for an executable.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\" -DFILE_DEFINE_STRING=\\\\\\\"hello\\\\\\\"\"\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Test creating an executable that is not built by default.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Test user-value flag mapping for the VS IDE.\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Test creating a custom target that builds not-in-all targets.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n\n# Output the files required by 'complex' to a file.\n\n#\n\n# This test has been moved to the 'required' subdir so that it\n\n# has no side-effects on the current Makefile (duplicated source file\n\n# due to source list expansion done twice).\n\n#\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# XCODE is excluded due to #15687\n",
        "Line" : 150,
        "CharPositionInLine" : 18
      },
      "19" : {
        "Text" : "#\n\n# Extra coverage.Not used.\n\n#\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "deps/src/cmake-3.13.4/Tests/ComplexOneConfig/Executable/Included.cmake" : {
      "ObjectId" : "3c7ec8b59d4f336a032e6edd8a9c79242a5293a3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/ComplexOneConfig/Executable/Temp/CMakeLists.txt" : {
      "ObjectId" : "041fcff20cbdf2988b6be8366364bf54be3bfbd6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Output the files required by 'complex' to a file.\n\n# The 'complex' executable will then test if this file exists and remove it.\n\n# The contents of this file is not tested (absolute paths).\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/ComplexOneConfig/Library/CMakeLists.txt" : {
      "ObjectId" : "64f6dc854a6896852f946ca98380ba71b4f3aa74",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Small utility used to create file\n\n# UTILITY_SOURCE is used for coverage and for getting the exact name\n\n# of the executable.\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Create static library\n\n# SOURCE_FILES_REMOVE is used for Coverage. empty.h is included for coverage\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Create shared library\n\n#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# No libm on BeOS.\n",
        "Line" : 54,
        "CharPositionInLine" : 42
      },
      "4" : {
        "Text" : "# Create static and shared lib of same name.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Attach pre-build/pre-link/post-build custom-commands to the lib.\n\n# Each runs ${CREATE_FILE_EXE} which will create a file.\n\n# The 'complex' executable will then test if this file exists and remove it.\n\n#\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Add a custom target.\n\n# It runs ${CREATE_FILE_EXE} which will create a file.\n\n# The 'complex' executable will then test if this file exists and remove it.\n\n#\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Extra coverage\n\n#\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Test creating a library that is not built by default.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Create an imported target for if(TARGET) test in Executable dir.\n\n# That test should not see this target.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Test generation of preprocessed sources.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Skip running this part of the test on certain platforms\n\n# until they are fixed.\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# OSX does not support preprocessing more than one architecture.\n",
        "Line" : 128,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Custom target to try preprocessing invocation.\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 14
    },
    "deps/src/cmake-3.13.4/Tests/ComplexOneConfig/Library/test_preprocess.cmake" : {
      "ObjectId" : "4c8ec21748bcd8408bcd67bfcbcb55385fdd1e0f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/ComplexOneConfig/VarTests.cmake" : {
      "ObjectId" : "42afd19eacb52d4035ed365840b6189e87ab5a86",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Test SET\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Test VARIABLE_REQUIRES\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Test various IF/ELSE combinations\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Test FOREACH\n\n#\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/ConfigSources/CMakeLists.txt" : {
      "ObjectId" : "748aad8878bbcd26cae577abd3c6dfcbe4681cd0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Contracts/Home.cmake" : {
      "ObjectId" : "8b05e81908d5c3e98fc0a89fe57cbc6575de232b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find a home in which to build.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try for USERPROFILE as HOME equivalent:\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# But just use root of SystemDrive if USERPROFILE contains any spaces:\n\n# (Default on XP and earlier...)\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/Contracts/PLplot/CMakeLists.txt" : {
      "ObjectId" : "8e95ba36a087427eb7a12b745d3df135399b9dc3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Contracts/PLplot/Configure.cmake" : {
      "ObjectId" : "83591d4fc38505a950e94dba9188988437a3c89c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Contracts/Trilinos/CMakeLists.txt" : {
      "ObjectId" : "4d7062bbd6c02d864ffe1d9e1ef556dd796568b8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Source dir for this project exists outside the CMake build tree because it\n\n# is absolutely huge. Source dir is therefore cached under a '.cmake/Contracts'\n\n# dir in your HOME directory. Downloads are cached under '.cmake/Downloads'\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If it exists already, download is a complete no-op:\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# If it does not yet exist, download pulls the tarball from the web (or\n\n# no-ops if it already exists with the given md5 sum):\n\n#\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/Contracts/Trilinos/Configure.cmake" : {
      "ObjectId" : "d62eb79172264f9bafe438b00a7a3519b113dadc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ValidateBuild.cmake is configured into this location when the test is built:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Contracts/Trilinos/EnvScript.cmake" : {
      "ObjectId" : "dacb704f7971f5e7c0ec689cfe4c7b9fdb2a79e9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Site specific settings:\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Submit to alternate CDash server:\n\n#\n\n#set(ENV{CTEST_DROP_SITE} \"localhost\")\n\n#set(ENV{CTEST_DROP_LOCATION} \"/CDash/submit.php?project=Trilinos\")\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Limit packages built:\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/Contracts/Trilinos/Patch.cmake" : {
      "ObjectId" : "6c619ac4fd51d28c8749736c21c6e6e55623fe52",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Contracts/Trilinos/RunTest.cmake" : {
      "ObjectId" : "d661a4c1f540cdabca4fb89234488a83d4c6bb5a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ValidateBuild.cmake is configured into this location when the test is built:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Contracts/VTK/CMakeLists.txt" : {
      "ObjectId" : "c946499b6bd8a97eb72e3c0487e4a99e8b5fdff5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The VTK external project for CMake\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find \"HOME\".  VTK will be downloaded & built within a subdirectory.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# configure our dashboard script\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# build & test VTK's release branch\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/Contracts/VTK/Configure.cmake" : {
      "ObjectId" : "037d75ab24c907d6bf9ef1503585a6064bd326d5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Contracts/VTK/RunTest.cmake" : {
      "ObjectId" : "65285cf77ab0ca7051b8a5a58b9c3bf68ece24db",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Contracts/cse-snapshot/CMakeLists.txt" : {
      "ObjectId" : "913421010a2a74c66ff69cc51cede130a6b81180",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Unknown:\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Linux:\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Mac:\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Windows:\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# adjust PATH to find git, or set GIT_EXECUTABLE in LocalOverrides.cmake\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Source dir for this project exists outside the CMake build tree because it\n\n# is absolutely huge.\n\n#\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If it exists already, download is a complete no-op:\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# If it does not yet exist, download clones the git repository:\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Tests/Contracts/cse-snapshot/RunTest.cmake" : {
      "ObjectId" : "7eb630116afa0ba729028cb075a0d05bd1dc9742",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CrossCompile/CMakeLists.txt" : {
      "ObjectId" : "121cb815e1d81e952810bbfec1fbc41ce688b6c3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Simulate the cross compile condition\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Cuda/CMakeLists.txt" : {
      "ObjectId" : "1b3daa6c94614f4b84473a45678bce2618b3270e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Cuda/Complex/CMakeLists.txt" : {
      "ObjectId" : "d3d4b7c28c4c3078cb1b448923a46a1c939f9647",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Goal for this example:\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#build a cpp dynamic library base\n\n#build a cuda static library base that uses separable compilation\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#build a cuda dynamic library that uses the first dynamic library\n\n#build a mixed cpp & cuda dynamic library uses all 3 previous libraries\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#lastly build a cpp executable that uses this last cuda dynamic library\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#this tests that we can properly handle linking cuda and cpp together\n\n#and also building cpp targets that need cuda implicit libraries\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#verify that we can pass explicit cuda arch flags\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Help the static cuda runtime find the driver (libcuda.dyllib) at runtime.\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Tests/Cuda/ConsumeCompileFeatures/CMakeLists.txt" : {
      "ObjectId" : "7098a7df53d5ba9b8029f477ebf739662cb26f25",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Goal for this example:\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#build a c++11 library that express a c++11 public compile feature\n\n#link a cuda library and verify it builds with c++11 enabled\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#build a standalone c++/cuda mixed executable where we express a c++11\n\n#compile feature.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/Cuda/MixedStandardLevels/CMakeLists.txt" : {
      "ObjectId" : "b399662a76398632a6bf756f5b68a46a87dfb413",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Help the static cuda runtime find the driver (libcuda.dyllib) at runtime.\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Cuda/ObjectLibrary/CMakeLists.txt" : {
      "ObjectId" : "395bd3881f750b0239ceb1819a92d777e47ac1d2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Goal for this example:\n\n#\n\n#Build C++ and CUDA object files and than use them to make an executable\n\n#Make sure that CMake logic to handle object output when multiple files\n\n#with the same name works\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Help the static cuda runtime find the driver (libcuda.dyllib) at runtime.\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/Cuda/ObjectLibrary/Conflicts/CMakeLists.txt" : {
      "ObjectId" : "1602f8a2a0a9006e88ab277ec615f5fc27e3a117",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Cuda/ProperDeviceLibraries/CMakeLists.txt" : {
      "ObjectId" : "cb47b09b4e38b7a11a1f9c57df5f5d76251254bc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#CUDA 10 removed the cublas_device library\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Help the static cuda runtime find the driver (libcuda.dyllib) at runtime.\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/Cuda/ProperLinkFlags/CMakeLists.txt" : {
      "ObjectId" : "b6e0e394b45c6844002dcfe0b08c9b34d00ab9dc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Goal for this example:\n\n#Verify that when we have CXX and CUDA enabled and we link an executable that\n\n#has CUDA and CXX we use the CUDA link flags when doing the device link\n\n#step\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Specify a set of valid CUDA flags and an invalid set of CXX flags ( for CUDA )\n\n#to make sure we don't use the CXX flags when linking CUDA executables\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/Cuda/ToolkitInclude/CMakeLists.txt" : {
      "ObjectId" : "f246b5449d515c61401c32939eec84108d94a809",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Goal for this example:\n\n# Validate that between the CXX implicit include directories and the\n\n# CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES directories we can find\n\n# the cuda runtime headers\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Cuda/WithC/CMakeLists.txt" : {
      "ObjectId" : "69aa3f992f9c62546c550cbe3e8bf7c8d9aeebe8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Help the static cuda runtime find the driver (libcuda.dyllib) at runtime.\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CudaOnly/CMakeLists.txt" : {
      "ObjectId" : "9c4f86a31df701032c9ef7a90be17ac277592cbd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CudaOnly/CircularLinkLine/CMakeLists.txt" : {
      "ObjectId" : "5e6f7abc649f69feda0ea5d5037e805db3d57dfa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Goal for this example:\n\n# Verify that we de-duplicate the device link line\n\n# Verify that a de-duplicated link line still works with circular static libraries\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CudaOnly/EnableStandard/CMakeLists.txt" : {
      "ObjectId" : "54e2c14132389618a6b1c84b926c225a8b906ce9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Goal for this example:\n\n#build cuda sources that require C++11 to be enabled.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Verify CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/CudaOnly/ExportPTX/CMakeLists.txt" : {
      "ObjectId" : "ff6e77c33f2ef990b31f4ac0076a4af83dc4c41b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Goal for this example:\n\n# How to generate PTX files instead of OBJECT files\n\n# How to reference PTX files for custom commands\n\n# How to install PTX files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Test ObjectFiles with file(GENERATE)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#We are going to need a wrapper around bin2c for multiple reasons\n\n# 1. bin2c only converts a single file at a time\n\n# 2. bin2c has only standard out support, so we have to manually\n\n# redirect to a cmake buffer\n\n# 3. We want to pack everything into a single output file, so we\n\n# need to also pass the --name option\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Help the static cuda runtime find the driver (libcuda.dyllib) at runtime.\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#Verify that we can install object targets properly\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/CudaOnly/ExportPTX/bin2c_wrapper.cmake" : {
      "ObjectId" : "0baf93434dfa1630cf40e91fa4c7c9894a664564",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CudaOnly/GPUDebugFlag/CMakeLists.txt" : {
      "ObjectId" : "fbef15f9e16911c17176d9daf853b0007504d790",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Goal for this example:\n\n#verify that -G enables gpu debug flags\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CUDA's __CUDACC_DEBUG__ define was added in 9.0\n\n#so if we are below 9.0.0 we will manually add the define so that the test\n\n#passes\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Help the static cuda runtime find the driver (libcuda.dyllib) at runtime.\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/CudaOnly/PDB/CMakeLists.txt" : {
      "ObjectId" : "6ecf989357c50d0bc862fee2c6bb4cf6cc057637",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CudaOnly/PDB/check_pdbs.cmake" : {
      "ObjectId" : "5e01ca722b4ff6c6a5909fbd19552cf146b51b8f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CudaOnly/ResolveDeviceSymbols/CMakeLists.txt" : {
      "ObjectId" : "796e13382f4d5648e0bef67eaecfdbb5376b9a53",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find nm and dumpbin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Goal for this example:\n\n# Build a static library that defines multiple methods and kernels that\n\n# use each other.\n\n# Resolve the device symbols into that static library\n\n# Verify that we can't use those device symbols from anything that links\n\n# to the static library\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Help the static cuda runtime find the driver (libcuda.dyllib) at runtime.\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/CudaOnly/ResolveDeviceSymbols/verify.cmake" : {
      "ObjectId" : "94d388b104a75381a7fd6f4b9e885afa31e0bfae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CudaOnly/SeparateCompilation/CMakeLists.txt" : {
      "ObjectId" : "1e574d6cce2c662828604d9ab976d765c7e63f15",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Goal for this example:\n\n#Build a static library that defines multiple methods and kernels that\n\n#use each other.\n\n#After that confirm that we can call those methods from dynamic libraries\n\n#and executables.\n\n#We complicate the matter by also testing that multiple static libraries\n\n#all containing cuda separable compilation code links properly\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test adding a flag that is not in our CUDA flag table for VS.\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Test adding a flag that nvcc should pass to the host compiler.\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#Having file4/file5 in a shared library causes serious problems\n\n#with the nvcc linker and it will generate bad entries that will\n\n#cause a segv when trying to run the executable\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Visual Studio CUDA integration will not perform device linking\n\n#on a target that itself does not have GenerateRelocatableDeviceCode\n\n#enabled.\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Help the static cuda runtime find the driver (libcuda.dyllib) at runtime.\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Tests/CudaOnly/WithDefs/CMakeLists.txt" : {
      "ObjectId" : "e58204dc867a3432d2a471738d6164bdbc38cbec",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#verify that we can pass explicit cuda arch flags\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Goal for this example:\n\n#build a executable that needs to be passed a complex define through add_defintions\n\n#this verifies we can pass things such as '_','(' to nvcc\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Help the static cuda runtime find the driver (libcuda.dyllib) at runtime.\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/CustComDepend/CMakeLists.txt" : {
      "ObjectId" : "46276b2ef69dc45da85d9f436d29245dd27953ab",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CustomCommand/CMakeLists.txt" : {
      "ObjectId" : "e9a9f525f79d3799ea047b3e4ef776e7f40862af",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Wrapping\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Lib and exe path\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################\n\n#\n\n#  First test using a compiled generator to create a .c file\n\n#\n\n################################################################\n\n# add the executable that will generate the file\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################################\n\n#\n\n#  Test using a wrapper to wrap a header file\n\n#\n\n################################################################\n\n# add the executable that will generate the file\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# this argument tests passing of the configuration\n",
        "Line" : 46,
        "CharPositionInLine" : 22
      },
      "5" : {
        "Text" : "# passing of configuration should work in this mode\n",
        "Line" : 47,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "################################################################\n\n#\n\n#  Test creating files from a custom target\n\n#\n\n################################################################\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# test 2 slashes\n",
        "Line" : 55,
        "CharPositionInLine" : 58
      },
      "8" : {
        "Text" : "# Add custom command to generate foo.h.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add the location of foo.h to the include path.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Test generation of a file to the build tree without full path.  As\n\n# of CMake 2.6 custom command outputs specified by relative path go in\n\n# the build tree.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add a custom target to drive generation of doc1.h.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# test 2 slashes\n",
        "Line" : 102,
        "CharPositionInLine" : 49
      },
      "13" : {
        "Text" : "# Setup a pre- and post-build pair that will fail if not run in the\n\n# proper order.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Setup a custom target that will fail if the POST_BUILD custom command\n\n# isn't run before it.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "################################################################\n\n#\n\n#  Test using a multistep generated file\n\n#\n\n################################################################\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Ensure doc1.h generates before this target\n",
        "Line" : 144,
        "CharPositionInLine" : 20
      },
      "17" : {
        "Text" : "# Test using OBJECT_DEPENDS to bring in a custom command.\n\n# Use a path that can be simplified to make sure paths\n\n# are consistently normalized.\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Add custom command to generate not_included.h, which is a header\n\n# file that is not included by any source in this project.  This will\n\n# test whether all custom command outputs explicitly listed as sources\n\n# get generated even if they are not needed by an object file.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# add the executable\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# default location for custom commands is in build tree\n",
        "Line" : 188,
        "CharPositionInLine" : 17
      },
      "21" : {
        "Text" : "# Add the rule to create generated.c at build time.  This is placed\n\n# here to test adding the generation rule after referencing the\n\n# generated source in a target.\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##############################################################################\n\n# Test for using just the target name as executable in the COMMAND\n\n# section. Has to be recognized and replaced by CMake with the output\n\n# actual location of the executable.\n\n# Additionally the generator is created in an extra subdir after the\n\n# add_custom_command() is used.\n\n#\n\n# Test the same for add_custom_target()\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\n\n# Test shell operators in custom commands.\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Test that list expansion from a generator expression works.\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\n\n# Test non-trivial command line arguments in custom commands.\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# these have funny behavior due to special cases for\n\n# windows registry value names in list expansion\n",
        "Line" : 269,
        "CharPositionInLine" : 11
      },
      "27" : {
        "Text" : "# Borland make does not like trailing ampersand\n",
        "Line" : 273,
        "CharPositionInLine" : 16
      },
      "28" : {
        "Text" : "# these have funny behavior due to special cases for\n\n# windows registry value names in list expansion\n",
        "Line" : 322,
        "CharPositionInLine" : 17
      },
      "29" : {
        "Text" : "# *  # MinGW programs on windows always expands the wildcard!\n\n# /  # MSys make converts a leading slash to the mingw home directory\n",
        "Line" : 357,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# The windows command shell does not support a double quote by itself:\n\n#   double\\\"quote\n\n# without messing up quoting of arguments following it.\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Make tools need help with escaping a single backslash\n\n#   \\\n\n# at the end of a command because they think it is a continuation\n\n# character.\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# We now have special cases for shell operators:\n\n#   | < > << >> &> 2>&1 1>&2\n\n# to allow custom commands to perform redirection.\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# set_target_properties(check_command_line PROPERTIES\n\n#   COMPILE_FLAGS -DCHECK_COMMAND_LINE_VERBOSE)\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# <SameNameTest>\n\n#\n\n# Add a custom target called \"SameName\" -- then add a custom command in a\n\n# different target whose output is a full-path file called \"SameName\" -- then\n\n# add a second custom target that depends on the full-path file \".../SameName\"\n\n#\n\n# At first, this reproduces a bug reported by a customer. After fixing it,\n\n# having this test here makes sure it stays fixed moving forward.\n\n#\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#\n\n# </SameNameTest>\n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Per-config target name and generator expressions.\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Test SOURCES in add_custom_target() with COMPILE_DEFINITIONS\n\n# which previously caused a crash in the makefile generators.\n",
        "Line" : 460,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Make sure the output directory exists before trying to write to it.\n",
        "Line" : 472,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Test that USES_TERMINAL is parsed correctly.\n\n# It seems much more difficult to test that USES_TERMINAL actually gives\n\n# the subprocess console access, as test output is piped through CTest,\n\n# and CTest itself might not be connected to the console.\n",
        "Line" : 494,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Test COMMAND_EXPAND_LISTS\n",
        "Line" : 517,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 41
    },
    "deps/src/cmake-3.13.4/Tests/CustomCommand/GeneratedHeader/CMakeLists.txt" : {
      "ObjectId" : "d1c6046a55035703fad436ff14fb5e062eb43fc8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Simulate in-source build include-file behavior for out-of-source\n\n# builds.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CustomCommand/GeneratorInExtraDir/CMakeLists.txt" : {
      "ObjectId" : "04506db3b93bc093a1fb8ad110f005529efad41f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add the executable which will be used for generating files\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add an executable which will be called from add_custom_command( ... POST_BUILD)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/CustomCommand/check_mark.cmake" : {
      "ObjectId" : "1f47fd0bde84d28c17161e4f3f3be03894be0df2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CustomCommand/compare_options.cmake" : {
      "ObjectId" : "a32e579e22c74cd919f3b89df905e38517b9d23b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CustomCommandByproducts/CMakeLists.txt" : {
      "ObjectId" : "d0bf6487ead43ede04a11eab1adc9262e43ddb21",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate a byproduct in a rule that runs in the target consuming it.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate a byproduct in a rule that runs in a dependency of the consumer.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generate a byproduct in a custom target.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Generate a byproduct in a custom target POST_BUILD command.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Generate a byproduct in an executable POST_BUILD command.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Generate a byproduct in an executable PRE_LINK command.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Generate a byproduct in an executable PRE_BUILD command.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Generate a byproduct in a custom command that consumes other byproducts.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Generate the library file of an imported target as a byproduct\n\n# of an external project.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Generate the library file of an imported target as a byproduct\n\n# of an external project. The byproduct uses <BINARY_DIR> that is substituted\n\n# by the real binary path\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add an executable consuming all the byproducts.\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "deps/src/cmake-3.13.4/Tests/CustomCommandByproducts/External/CMakeLists.txt" : {
      "ObjectId" : "feaa12ea4c93cc3c13b3e1cceb0abd0dd7defc6b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CustomCommandByproducts/ninja-check.cmake" : {
      "ObjectId" : "a7beb3d6451984c759a28d2d2c90794b1368715b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CustomCommandWorkingDirectory/CMakeLists.txt" : {
      "ObjectId" : "3bab1fec0fa92263620324d1c4d5c2b4530f097e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Relative to build tree\n",
        "Line" : 30,
        "CharPositionInLine" : 20
      },
      "1" : {
        "Text" : "# trailing slash should be removed\n",
        "Line" : 32,
        "CharPositionInLine" : 53
      },
      "2" : {
        "Text" : "# Relative to build tree, trailing slash\n",
        "Line" : 33,
        "CharPositionInLine" : 26
      },
      "3" : {
        "Text" : "# Relative to build tree, trailing slash\n",
        "Line" : 41,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/CxxDialect/CMakeLists.txt" : {
      "ObjectId" : "8c903398cb0d0603c3b659431e91f28ea4a15bf2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CxxOnly/CMakeLists.txt" : {
      "ObjectId" : "e62f3c797e001c51c96e3f11a40d16e82f6f040f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a simple CXX only test case\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/CxxSubdirC/CMakeLists.txt" : {
      "ObjectId" : "52474f8dc7b1d3126adfef3badf7a6c8a29271f1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/CxxSubdirC/Cdir/CMakeLists.txt" : {
      "ObjectId" : "08a87579bf54711df25fd9578dcb9feede6e1c40",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Dependency/1/CMakeLists.txt" : {
      "ObjectId" : "a8e74e40ba4cafb7cece062cbf16f91b205bb797",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This library has no dependencies\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Dependency/CMakeLists.txt" : {
      "ObjectId" : "ebc2d1066ffcfac9f456ff130bd1057e08b197e6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# to test directories with only one character One was changed to 1\n\n# There is one executable that depends on eight libraries. The\n\n# system has the following dependency graph:\n\n#\n\n# NoDepA:\n\n# NoDepB: NoDepA\n\n# NoDepC: NoDepA\n\n# 1:\n\n# Two: Three\n\n# Three: 1 Four\n\n# Four: 1 Two NoDepA\n\n# Five: Two\n\n# SixA: Two Five\n\n# SixB: Four Five\n\n# Seven: Two\n\n# Eight: Seven\n\n#\n\n# Exec: NoDepB NoDepC SixA SixB\n\n# Exec2: Eight Five\n\n# Exec3: Eight Five\n\n# Exec4: Five Two\n\n#\n\n# The libraries One,...,Eight have their dependencies explicitly\n\n# encoded. The libraries NoDepA,...,NoDepC do not.\n\n#\n\n# Although SixB does not depend on Two, there is a dependency listed\n\n# in the corresponding CMakeLists.txt just because of commands used.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specific cases added to test fixes to problems found in real\n\n# projects.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/Dependency/Case1/CMakeLists.txt" : {
      "ObjectId" : "da9f54cd09bef573a2e1197d6c00b2ac4c29c1ba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The old anaylize lib depends stuff in cmTarget gets this case wrong.\n\n# The cmComputeLinkDepends implementation gets it right.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Dependency/Case2/CMakeLists.txt" : {
      "ObjectId" : "21caaad3e6554f9ebcad037b3bef6111eedc5c62",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set_property(GLOBAL PROPERTY GLOBAL_DEPENDS_DEBUG_MODE 1)\n\n#set(CMAKE_LINK_DEPENDS_DEBUG_MODE 1)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Dependency/Case3/CMakeLists.txt" : {
      "ObjectId" : "f01dd057a13d185301577d99638acec6d92e47b0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set_property(GLOBAL PROPERTY GLOBAL_DEPENDS_DEBUG_MODE 1)\n\n#set(CMAKE_LINK_DEPENDS_DEBUG_MODE 1)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Dependency/Case4/CMakeLists.txt" : {
      "ObjectId" : "a71049da397cab0201a305426b9a5d2b07ae5cba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is not really a circular dependency.  \"case4Bar\" refers to a\n\n# third-party library that happens to match the executable name, which\n\n# is okay when the executable is not a linkable target (ENABLE_EXPORTS\n\n# is not set).  This tests whether CMake avoids incorrectly reporting\n\n# a circular dependency.  In practice case4Foo may be a shared\n\n# library, but we skip that here because we do not want it to actually\n\n# have to find the third-party library.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The executable avoids linking to a library with its own name, which\n\n# has been a CMake-ism for a long time, so we will not get a link\n\n# failure.  An imported target or executable with an OUTPUT_NAME set\n\n# may be used if the user really wants to link a third-party library\n\n# into an executable of the same name.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/Dependency/Case5/CMakeLists.txt" : {
      "ObjectId" : "e954b02eae9aece0df36fc904c1d7712fe5aef72",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Dependency/Eight/CMakeLists.txt" : {
      "ObjectId" : "6e761d62e83266710ec85559300d831e05ef3071",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Dependency/Exec/CMakeLists.txt" : {
      "ObjectId" : "417477a1141d8fe141206c256e33d4de2c302180",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This executable directly depends on NoDepB, NoDepC, SixA and SixB. However,\n\n# since NoDepB and NoDepC do not have explicit dependency information,\n\n# and they depend on NoDepA, we have to manually specify that dependency.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Dependency/Exec2/CMakeLists.txt" : {
      "ObjectId" : "ae439c504f5733cac893f47e7ec71a670530974b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Here, Eight depends on Seven, which has the same dependencies as Five.\n\n# If the dependencies of Five are emitted, and then we attempt to emit the\n\n# dependencies of Seven, then we find that they have already been done. So:\n\n#  Original line:      Eight Five\n\n#  Add deps of Five:   Eight Five Two ... NoDepA\n\n# Now, we must make sure that Seven gets inserted between Five and Two, and\n\n# not at the end. Unfortunately, if we get it wrong, the test will only\n\n# fail on a platform where the link order makes a difference.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Dependency/Exec3/CMakeLists.txt" : {
      "ObjectId" : "7f981d6621496e43744b38c1eab44b82bea9d066",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Here, Five already has it's immediate dependency, Two satisfied. We must\n\n# make sure Two gets output anyway, because Eight indirectly depends on it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Dependency/Exec4/CMakeLists.txt" : {
      "ObjectId" : "036d5e8c404c3d5b2a6e9960f13c15dd4ede8dd4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Even though Five's dependency on Two is explicitly satisfied, Two\n\n# must be emitted again in order to satisfy a cyclic dependency on Three.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Dependency/Five/CMakeLists.txt" : {
      "ObjectId" : "03b3d01ab0403295455087c980453e4b01679a60",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Dependency/Four/CMakeLists.txt" : {
      "ObjectId" : "71c531fe9071c0ca9eb5ec7c217828980d12f9c1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TwoCustom must build before Four.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Dependency/NoDepA/CMakeLists.txt" : {
      "ObjectId" : "543402d9d3049511c106773af534fa52fcc57e3a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Dependency/NoDepB/CMakeLists.txt" : {
      "ObjectId" : "1c70f375c50d0409fa0ae20f2a091eb7c0c892d3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This library depends on NoDepA, but the\n\n# dependency is not explicitly specified.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Dependency/NoDepC/CMakeLists.txt" : {
      "ObjectId" : "dd41cebb6b44ff7cf990ebbd73430b0bb0ac0221",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This library depends on NoDepA, but the\n\n# dependency is not explicitly specified.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Dependency/Seven/CMakeLists.txt" : {
      "ObjectId" : "c5c585b67a91d4b2b9718179929f88eaf3ce98ea",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Dependency/Six/CMakeLists.txt" : {
      "ObjectId" : "05eecdb558441b3c147b04f08f5b8a84e33a1bae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# In some projects, people don't use TARGET_LINK_LIBRARIES, but just\n\n# use an all-encompassing LINK_LIBRARIES. And sometimes they don't\n\n# specify them in the correct order.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Dependency/Three/CMakeLists.txt" : {
      "ObjectId" : "4880243f7d9f85d2ba47583edb8b2dda2ea399a9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Dependency/Two/CMakeLists.txt" : {
      "ObjectId" : "19a07032801d6198096304167380dcd1cfa43d68",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Setup a target to cause failure if Two does not depend on it or if\n\n# Two actually links to it.  This will test that a utility dependency\n\n# on a library target works properly.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add a utility dependency to make sure it works without linking.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/DoubleProject/CMakeLists.txt" : {
      "ObjectId" : "02a62759701b4e754dcf60ed0060b1ac185858df",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/EmptyDepends/CMakeLists.txt" : {
      "ObjectId" : "832d9dce6c6b64fe05497f80fd54bdba362276e4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/EmptyLibrary/CMakeLists.txt" : {
      "ObjectId" : "baddbbf5e0c0af4ecee4e4ba2cf64569dc9c7b91",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/EmptyLibrary/subdir/CMakeLists.txt" : {
      "ObjectId" : "e273f8db94aee1f32bf7c1d2be4d6e7152c86029",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/EmptyProperty/CMakeLists.txt" : {
      "ObjectId" : "39e75f36a9fe7753bdbe5292ce261177bea101ea",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Environment/CMakeLists.txt" : {
      "ObjectId" : "2b18d24666aa0bff89477618099a528f42c6ff6b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make sure \"CMAKE_ENV.*Happy Thanksgiving\" is in the output of\n\n# the \"1\" tests:\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure \"CMAKE_ENV.*Happy Thanksgiving\" is *NOT* in the output of\n\n# the \"2\" tests:\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/ExportImport/CMakeLists.txt" : {
      "ObjectId" : "dc621eb2743e934c09ed5de9ad6414d24955fd3b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Wipe out the install tree to make sure the exporter works.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test CMAKE_GNUtoMS whether we have VS or not.\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Build and install the exporter.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build and install the importer.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/ExportImport/Export/CMakeLists.txt" : {
      "ObjectId" : "c6b7dbc95156ba68cab646160b5e82495b274a48",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pretend that RelWithDebInfo should link to debug libraries to test\n\n# the DEBUG_CONFIGURATIONS property.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# not exported\n",
        "Line" : 8,
        "CharPositionInLine" : 46
      },
      "2" : {
        "Text" : "# Test install(FILES) with generator expressions referencing testLib1.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Test library with empty link interface.  Link it to an implementation\n\n# dependency that itself links to dependencies publicly.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Test <ARCHIVE|LIBRARY|RUNTIME>_OUTPUT_NAME[_<CONFIG>] properties.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Test OUTPUT_NAME properties with generator expressions\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Test exporting OBJECT targets\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Test using the target_link_libraries command to set the\n\n# LINK_INTERFACE_LIBRARIES* properties.  We construct two libraries\n\n# providing the same two symbols.  In each library one of the symbols\n\n# will work and the other one will fail to link.  The import part of\n\n# this test will try to use the symbol corresponding to the\n\n# configuration in which it is built.  If the proper library is not\n\n# used via the link interface the import test will fail to link.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Test <ARCHIVE|LIBRARY|RUNTIME>_OUTPUT_DIRECTORY[_<CONFIG>] properties with generator expressions\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Test cyclic dependencies.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Test exporting dependent libraries into different exports\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Generate testLibIncludeRequired4 in the testLibIncludeRequired3 directory\n\n# with an error. If the includes from testLibIncludeRequired3 appear first,\n\n# the error will be hit.\n\n# Below, the '3' library appears before the '4' library\n\n# but we are testing that the INSTALL_INTERFACE causes it not to be used\n\n# at build time.\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Generate testLibIncludeRequired6 in the testLibIncludeRequired5 directory\n\n# with an error. If the includes from testLibIncludeRequired5 appear first,\n\n# the error will be hit.\n\n# Below, the '5' library appears before the '6' library\n\n# but we are testing that when the installed IMPORTED target is used, from\n\n# the Import side of this unit test, the '6' include from the '5' directory\n\n# will not be used because it is in the BUILD_INTERFACE only.\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The BUILD_INTERFACE entry from above is duplicated below. This is to test that\n\n# the INSTALL_INTERFACE entry bound by a BUILD_INTERFACE entry on either side is\n\n# preprocessed correctly on install(EXPORT).\n",
        "Line" : 226,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Test that the below is non-fatal\n",
        "Line" : 230,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# LINK_PRIVATE so that it appears in the LINK_DEPENDENT_LIBRARIES, but not\n\n# the INTERFACE_LINK_LIBRARIES.\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# LINK_PRIVATE because the LINK_INTERFACE_LIBRARIES is specified above.\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# set_property(TARGET cmp0022NEW APPEND PROPERTY LINK_INTERFACE_LIBRARIES testLibIncludeRequired2) # TODO: Test for error\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# These can't be in the above install(INCLUDES DESTINATION call because\n\n# that is only for installed interfaces. These directories are prefixes\n\n# in the build dir, which is an error for the installed interface.\n\n# We add them here so that we don't have to add conditions in the Import\n\n# component of the test.\n",
        "Line" : 403,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Install and export from install tree.\n",
        "Line" : 508,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Leave out RUNTIME DESTINATION to test implib-only export.\n",
        "Line" : 558,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Install testLib5.dll outside the export.\n",
        "Line" : 564,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# For CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE test.\n",
        "Line" : 569,
        "CharPositionInLine" : 25
      },
      "23" : {
        "Text" : "# Export from build tree.\n",
        "Line" : 571,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Install export with absolute destination but relative pieces.\n",
        "Line" : 595,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# test export of INTERFACE_LINK_OPTIONS\n",
        "Line" : 611,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# test export of INTERFACE_LINK_DIRECTORIES\n",
        "Line" : 621,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# test export of INTERFACE_LINK_DEPENDS\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "deps/src/cmake-3.13.4/Tests/ExportImport/Export/Interface/CMakeLists.txt" : {
      "ObjectId" : "fd55c423c47e22d8b59e53621c6d042c47e0967e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/ExportImport/Export/SubDirLinkA/CMakeLists.txt" : {
      "ObjectId" : "1c3c9dcccbd7f27bf51478d7ac2ec5a1cff381ea",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/ExportImport/Export/SubDirLinkB/CMakeLists.txt" : {
      "ObjectId" : "22e168ff80a36f19ed5ca4fcefe186792b9b8563",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/ExportImport/Export/renamed/CMakeLists.txt" : {
      "ObjectId" : "a76325139162dc28bfb836d5dac3a524c6da59ec",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/ExportImport/Export/sublib/CMakeLists.txt" : {
      "ObjectId" : "a5c6413c10d33af46a1eefd0b677c87f0a187699",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/ExportImport/Import/A/CMakeLists.txt" : {
      "ObjectId" : "67fcc02921407a075694138a4b4ced61cb97935c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Prepare imported targets that the exported project itself imported.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Import targets from the exported build tree.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Import targets from the exported install tree.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Import two exports, where the Depends one depends on an exported target from the Required one:\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Try referencing an executable imported from the install tree.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Try linking to a library imported from the install tree.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Try building a plugin to an executable imported from the install tree.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Try referencing an executable imported from the build tree.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Try linking to a library imported from the build tree.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Parse the binary to check for SONAME if possible.\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Try building a plugin to an executable imported from the build tree.\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Export/CMakeLists.txt pretends the RelWithDebInfo (as well as Debug)\n\n# configuration should link to debug libs.\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Create a custom target to generate a header for the libraries below.\n\n# Drive the header generation through an indirect chain of imported\n\n# target dependencies.\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# testLib2tmp1.h\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# hdr_testLib2tmp1 needs testLib2tmp1.h\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# exp_testExe2 needs hdr_testLib2tmp1\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# testLib2tmp.h needs exp_testExe2\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# hdr_testLib2tmp needs testLib2tmp.h\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# dep_testLib2tmp needs hdr_testLib2tmp\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# testLib2.h needs dep_testLib2tmp\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# hdr_testLib2 needs testLib2.h\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# dep_testLib2 needs hdr_testLib2\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# exp_testLib2 and bld_testLib2 both need dep_testLib2\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Create a library to be linked by another directory in this project\n\n# to test transitive linking to otherwise invisible imported targets.\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Create executables using objects imported from the install tree\n",
        "Line" : 259,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Create executables using objects imported from the build tree\n",
        "Line" : 265,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Create an executable that uses a library imported from the install tree\n\n# that itself was built using an object library.  Verify we get the usage\n\n# requirements.\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Similarly for importing from the build tree.\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Check that object libraries were transformed on export as expected.\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Test that handling imported targets, including transitive dependencies,\n\n# works in CheckFunctionExists (...and hopefully all other try_compile() checks\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Test that dependent imported targets have usable\n\n# INTERFACE_COMPILE_DEFINITIONS and INTERFACE_INCLUDE_DIRECTORIES\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Test that targets imported from the build tree have their dependencies\n\n# evaluated correctly. The above already tests the same for the install tree.\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# The Bullseye wrapper appears to break the -isystem effect.\n",
        "Line" : 416,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# check that imported libraries have the expected INTERFACE_LINK_OPTIONS property\n",
        "Line" : 487,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# check that imported libraries have the expected INTERFACE_LINK_DIRECTORIES property\n",
        "Line" : 492,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# check that imported libraries have the expected INTERFACE_LINK_DEPENDS property\n",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37
    },
    "deps/src/cmake-3.13.4/Tests/ExportImport/Import/A/check_lib_nosoname.cmake" : {
      "ObjectId" : "613391e829cdcc1aedb31a11c66e22a83c18a8bd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/ExportImport/Import/A/check_lib_soname.cmake" : {
      "ObjectId" : "a3c4b54bee7b451d3ca92a179d5ef8257beab642",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/ExportImport/Import/A/check_testLib1_genex.cmake" : {
      "ObjectId" : "7c0265248ba5f6649094d0a98fe85a7bd3e69fe4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/ExportImport/Import/A/excludedFromAll/CMakeLists.txt" : {
      "ObjectId" : "cd5a59bfe2e397990ba52225d13856221af21ebf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/ExportImport/Import/A/framework_interface/CMakeLists.txt" : {
      "ObjectId" : "0e0065555756e01b4f2480c0ad917b4c53d48ec4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/ExportImport/Import/CMakeLists.txt" : {
      "ObjectId" : "189f7a2bc5ff7d13e2e6cef5c1e31ef45f55b12d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Import everything in a subdirectory.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure the imported targets are scoped inside the subdirectory.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test transitive linking to a target imported in the subdirectory.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Test package INTERFACE controls\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/ExportImport/Import/Interface/CMakeLists.txt" : {
      "ObjectId" : "c850508e5d2db159d5b4cbc7978ef52f032993af",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Import targets from the exported build tree.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Import targets from the exported install tree.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/ExportImport/Import/try_compile/CMakeLists.txt" : {
      "ObjectId" : "10884616ba622e3913f089316784f9c8183a6f75",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/ExternalOBJ/CMakeLists.txt" : {
      "ObjectId" : "4ff75b8cc899c8da9aab885542504c91683df6d9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set _CMAKE_OSX_MACHINE to umame -m\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# check for Power PC and change to ppc\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Build the external object file.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find the external object file.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Test creation of external objects by custom commands.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build an executable using the external object file.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# A bug showed up in VS2010 where an object file that was\n\n# part of a custom command output worked, but ones that were\n\n# not didn't work.  So, repeat the executable using the object\n\n# directly and not from the output of the copy.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Tests/ExternalOBJ/Object/CMakeLists.txt" : {
      "ObjectId" : "dbfe09ee69cd1417461f0e880019b13f140a8bae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set _CMAKE_OSX_MACHINE to umame -m\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# check for Power PC and change to ppc\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/ExternalOBJ/Sub/CMakeLists.txt" : {
      "ObjectId" : "35cd30c7d77318defb2f78e8a7e13a63481bde4e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# depend on generating target\n",
        "Line" : 3,
        "CharPositionInLine" : 45
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/ExternalProject/CMakeLists.txt" : {
      "ObjectId" : "6b73563409bc06ccd4c65f7d4ac956eaaff895db",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test ExternalProject, especially with checkouts from VCS\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Empty projects that test all the known ExternalProject_Add argument key words:\n\n#\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CVS-based tests:\n\n#\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Unzip/untar the CVS repository in our source folder so that other\n\n# projects below may use it to test CVS args of ExternalProject_Add\n\n#\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# The MSYS cvs tool interprets \"c:/\" as a \"machine:\" name for SSH.\n\n# Detect the MSYS cvs and convert the repo path to an MSYS path.\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# CVS by date stamp:\n\n#\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# CVS by tag:\n\n#\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Live CVS / HEAD (no CVS_TAG):\n\n#\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# SVN-based tests:\n\n#\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Only do svn tests with svn >= version 1.2\n\n#\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Only do svn tests in cygwin/cygwin or not-cygwin/not-cygwin arrangements:\n\n#\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Unzip/untar the SVN repository in our source folder so that other\n\n# projects below may use it to test SVN args of ExternalProject_Add\n\n#\n",
        "Line" : 224,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# SVN by date stamp:\n\n#\n",
        "Line" : 241,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# SVN by revision number:\n\n#\n",
        "Line" : 255,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Live SVN / trunk (no SVN_REVISION):\n\n#\n",
        "Line" : 269,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Unzip/untar the git repository in our source folder so that other\n\n# projects below may use it to test git args of ExternalProject_Add\n\n#\n",
        "Line" : 307,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# git by commit id:\n\n#\n",
        "Line" : 321,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# git by explicit branch/tag name:\n\n#\n",
        "Line" : 335,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Live git / master (no GIT_TAG):\n\n#\n",
        "Line" : 349,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Live git / master (no GIT_TAG), but shallow\n\n#\n",
        "Line" : 362,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Live git / master (no GIT_TAG), but git config flags\n\n#\n\n# The `git clone --config` parameter has been introduced in Git 1.7.7\n",
        "Line" : 376,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# git by explicit branch/tag with empty submodule list\n\n#\n",
        "Line" : 393,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Unzip/untar the git repository in our source folder so that other\n\n# projects below may use it to test git args of ExternalProject_Add\n\n#\n",
        "Line" : 408,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Unzip/untar the hg repository in our source folder so that other\n\n# projects below may use it to test hg args of ExternalProject_Add\n\n#\n",
        "Line" : 486,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# hg by commit id:\n\n#\n",
        "Line" : 501,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# hg by explicit branch/tag name:\n\n#\n",
        "Line" : 515,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Live hg / tip (no HG_TAG):\n\n#\n\n# Mercurial 2.1 does not distinguish an empty pull from a failed pull,\n\n# so do not run the test with that version.\n",
        "Line" : 529,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Test the testable built/installed products:\n\n#\n",
        "Line" : 548,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Do at least a smoke test of a built executable from each\n\n# project's build directory...\n\n#\n\n# BuildTree tests:\n\n#\n",
        "Line" : 553,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Test if log works when the first arguments of *_COMMAND is \"COMMAND\".\n",
        "Line" : 601,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "deps/src/cmake-3.13.4/Tests/ExternalProject/Example/CMakeLists.txt" : {
      "ObjectId" : "4c128957ede96985a2c1c31b665f0a4ba8c3bd47",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is the canonical simplest ExternalProject example CMakeLists.txt file:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/ExternalProjectLocal/CMakeLists.txt" : {
      "ObjectId" : "5b941630a7382056f7b5d79c114c5a7a2c09d400",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test ExternalProject with local projects\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The ExternalProject builds of Tutorial Step5 cannot be built\n\n# correctly 2nd and later times in an in-source build...\n\n# (because the CMakeCache.txt from the real in-source build of\n\n# the Tests/Tutorial/Step5 directory gets copied when we do\n\n# the \"source directory copy\" step... but it still refers to\n\n# its original path which yields a configure error.) So:\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Local DIR:\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Local TAR:\n\n#\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Local TGZ:\n\n#\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Local BZ2:\n\n#\n\n# (The bz2 tests are here just to verify that the bz2 decompression is executed\n\n#  during a test suite run... The configure and build commands are set to\n\n#  nothing to make the test quicker. To make this more complete, I should add\n\n#  a diff between this and the TGZ source tree since that one does build...)\n\n#\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Local ZIP:\n\n#\n\n# (The zip tests are here just to verify that the zip decompression is executed\n\n#  during a test suite run... The configure and build commands are set to\n\n#  nothing to make the test quicker. To make this more complete, I should add\n\n#  a diff between this and the TGZ source tree since that one does build...)\n\n#\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Test the testable built/installed products:\n\n#\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Do at least a smoke test of a built executable from each\n\n# project's build directory...\n\n#\n\n# BuildTree tests:\n\n#\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# InstallTree tests:\n\n#\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Tests/ExternalProjectLocal/Step1Patch.cmake" : {
      "ObjectId" : "35e09d948d26da237ced6068cfb94af6b16bfa46",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Verify the current working directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if the patch is already applied.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Apply the patch.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/ExternalProjectSourceSubdir/CMakeLists.txt" : {
      "ObjectId" : "4688acfb0189c96c121673ec18f4bac3d0c5f4bd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/ExternalProjectSourceSubdir/Example/subdir/CMakeLists.txt" : {
      "ObjectId" : "bbc3ca0a209017230696234ecf3f535f5fbb6a1f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/ExternalProjectSubdir/CMakeLists.txt" : {
      "ObjectId" : "3a67ea0185c89cc33fc1691d9ffd1020e31176ac",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Remove the custom target output to be sure it runs in an\n\n# incremental test.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/ExternalProjectSubdir/Subdir1/CMakeLists.txt" : {
      "ObjectId" : "2303c3e8813f4728ed9764921f5961a7d5201518",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/ExternalProjectUpdate/CMakeLists.txt" : {
      "ObjectId" : "dbf26c8d01d0fbe424420a435fec4596cf771441",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This should be specified from the command line.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Unzip/untar the git repository in our source folder so that other\n\n# projects below may use it to test git args of ExternalProject_Add\n\n#\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Test the testable built/installed products:\n\n#\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Do at least a smoke test of a built executable from each\n\n# project's build directory...\n\n#\n\n# BuildTree tests:\n\n#\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/ExternalProjectUpdate/ExternalProjectUpdateTest.cmake" : {
      "ObjectId" : "8ea44529b425f5c79374fd6c7eadfc7533877004",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the ExternalProject GIT_TAG to desired_tag, and make sure the\n\n# resulting checked out version is resulting_sha and rebuild.\n\n# This check's the correct behavior of the ExternalProject UPDATE_COMMAND.\n\n# Also verify that a fetch only occurs when fetch_expected is 1.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Remove the FETCH_HEAD file, so we can check if it gets replaced with a 'git\n\n# fetch'.\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Configure\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Build\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Check the resulting SHA\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Remove the FETCH_HEAD file, so we can check if it gets replaced with a 'git\n\n# fetch'.\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Check initial SHA\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Configure\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Build\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Check the resulting SHA\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Update\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Check the resulting SHA\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# With the Git UPDATE_COMMAND performance patch, this will not required a\n\n# 'git fetch'\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# This is a remote symbolic ref, so it will always trigger a 'git fetch'\n",
        "Line" : 189,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 14
    },
    "deps/src/cmake-3.13.4/Tests/FindALSA/CMakeLists.txt" : {
      "ObjectId" : "891f7a43a01f75ef2876159d1793214b0e8698a8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindALSA/Test/CMakeLists.txt" : {
      "ObjectId" : "2829740cf9e44fc3d76b94560ee860927ad0b416",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindBZip2/CMakeLists.txt" : {
      "ObjectId" : "0eb3b99ac84f0c0e86eaa51578688eb0eddcf4c9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindBZip2/Test/CMakeLists.txt" : {
      "ObjectId" : "e9cb6187fa7e863d6ff1f83269d57162b0f65baa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindBoost/CMakeLists.txt" : {
      "ObjectId" : "17a8ec70092ce55f818da43f130468d46dfdab6f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindBoost/Test/CMakeLists.txt" : {
      "ObjectId" : "663f414720df6b485258060c194f2657836881dd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindBoost/TestFail/CMakeLists.txt" : {
      "ObjectId" : "7c14a59905ffafc459ebdb036657df6a1d973820",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindBoost/TestHeaders/CMakeLists.txt" : {
      "ObjectId" : "d7be32703c8e1376b7acf05d819ef7514e1e3389",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindCURL/CMakeLists.txt" : {
      "ObjectId" : "0cfd629c9daae75223a07c6d0da9b55fd85b63b2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindCURL/Test/CMakeLists.txt" : {
      "ObjectId" : "c3c719b5d4b4014d6780394aa7ad48b4b9172eff",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindDoxygen/AllTarget/CMakeLists.txt" : {
      "ObjectId" : "69aa518c782576fb1f4460101972a56908309a36",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define tests cases that check whether targets were built\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindDoxygen/CMakeLists.txt" : {
      "ObjectId" : "7ce98d59b95a15519eb87bbd33a20e6edd7fc4f5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindDoxygen/DotComponentTestTest/CMakeLists.txt" : {
      "ObjectId" : "586f0ff66f4a31e989df52cb2eede4f7937599c9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Testing a new signature w/ components\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# No backwards compatibility expected when component form is used\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/FindDoxygen/QuotingTest/CMakeLists.txt" : {
      "ObjectId" : "26bf090db9d7a3c2a54a7c5c0e1920b33e4951b2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindDoxygen/SimpleTest/CMakeLists.txt" : {
      "ObjectId" : "332ceccdb44caac896a9364714246902250628b5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Testing backward compatible signature\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check backward compatibility\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Check presence of expected generated files\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Note that CMake inserts at least one entry into SOURCES when a COMMAND or\n\n# DEPENDS option is given to add_custom_target(), so rather than looking for an\n\n# exact match, we only verify that the files we expect to be there are present\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/FindEXPAT/CMakeLists.txt" : {
      "ObjectId" : "a74174a3026891e1bac74e5aff8f07b36cc6b310",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindEXPAT/Test/CMakeLists.txt" : {
      "ObjectId" : "5681f747159c3aae0b7fe663459926df448c1616",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindFreetype/CMakeLists.txt" : {
      "ObjectId" : "490c25bd67ce00cf9217f94e0067f6a160c3e3b9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindFreetype/Test/CMakeLists.txt" : {
      "ObjectId" : "bc869a13f5345039283000f0c05e9d383fa3eab4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGSL/CMakeLists.txt" : {
      "ObjectId" : "45a347102c12107164116a0f0cb15b1f828e4cc5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGSL/rng/CMakeLists.txt" : {
      "ObjectId" : "b15d6acab0303933a4590df12204702a80304a51",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/CMakeLists.txt" : {
      "ObjectId" : "0105faeaa321b2c4d1cc2b6442fecf092e8ba45c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test GTK2 components\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test GTK2 targets\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/atk/CMakeLists.txt" : {
      "ObjectId" : "be37957edbacb6e4b01c4ace30d4ff0c389d24c1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/atkmm/CMakeLists.txt" : {
      "ObjectId" : "e8320b533f4637ce4e468f67c9d0eafe6b33d875",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/cairo/CMakeLists.txt" : {
      "ObjectId" : "97a73694400e26e6b9be6da745bf49394feb9248",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/cairomm/CMakeLists.txt" : {
      "ObjectId" : "47a156e2cbe674e5a737957329ca9e0ba40cfae3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/gdk/CMakeLists.txt" : {
      "ObjectId" : "f4852368c75c87a1294c3685b47d82968f9874c2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/gdk_pixbuf/CMakeLists.txt" : {
      "ObjectId" : "004e82e8aa9274f1fb1896a1a7b041a041c5023a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/gdkmm/CMakeLists.txt" : {
      "ObjectId" : "a54fc4f13048e9617d4d3a871e942015e5bc3c1a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/gio/CMakeLists.txt" : {
      "ObjectId" : "db9cdd00a2e321ceb469bf5cfd54a373ef4a8dc6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/giomm/CMakeLists.txt" : {
      "ObjectId" : "46cfef50a61804b5fdc8e517a1ce0ba4252b840c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/glib/CMakeLists.txt" : {
      "ObjectId" : "1aa73ff16c07b7ff67ff2e33ccff62a06a666efd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/glibmm/CMakeLists.txt" : {
      "ObjectId" : "af8ddcf2778929db09440151da848f3612473146",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/gmodule/CMakeLists.txt" : {
      "ObjectId" : "9717da8d5f394694fbf5a42f1838e86b50ecaeb2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/gobject/CMakeLists.txt" : {
      "ObjectId" : "c51fd4dee155b09b1ada9bc7e9a80aabdc98751c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/gthread/CMakeLists.txt" : {
      "ObjectId" : "a90294d0abf259944ea31f78cb307eabff5750b2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/gtk/CMakeLists.txt" : {
      "ObjectId" : "11603aec951580bcbbf2c2a6a9e75f93a8fc4914",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/gtkmm/CMakeLists.txt" : {
      "ObjectId" : "eb0b7aa8d3221f3f84cf48653f1f3d8b52a1b26d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Linking via the library variables does not cause compile feature\n\n# requirements to propagate.  Do it manually for purposes of this test.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/pango/CMakeLists.txt" : {
      "ObjectId" : "af382a4c71ae72b8d57568ef5ef06962f6ec377a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/pangocairo/CMakeLists.txt" : {
      "ObjectId" : "8f61379b30cd84202e6e862a1f751026b912fcb5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/pangoft2/CMakeLists.txt" : {
      "ObjectId" : "0f84c7fdf06890b50c03d8a35ec711068e71708a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/pangomm/CMakeLists.txt" : {
      "ObjectId" : "3650c508095485eea52ea629d7ff4ebb0dde01f6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/pangoxft/CMakeLists.txt" : {
      "ObjectId" : "0db16b153252bb7fc371fbe450427170df89c690",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTK2/sigc++/CMakeLists.txt" : {
      "ObjectId" : "f830b81b74fceada1180d1ed4af69189d9a59977",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTest/CMakeLists.txt" : {
      "ObjectId" : "cbc92b1444e133cc6d82cddda48baace92a0fdb0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindGTest/Test/CMakeLists.txt" : {
      "ObjectId" : "b65b9d28f6ed5083db62b1f76b28976e36453ab7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindICU/CMakeLists.txt" : {
      "ObjectId" : "4acaaf2020827d2b5762b995fa8aeba59da28517",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindICU/Test/CMakeLists.txt" : {
      "ObjectId" : "1247ac778f7f788da6bbe539d5ab62ab78228700",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindIconv/CMakeLists.txt" : {
      "ObjectId" : "b205b80563b631958e2b4ea30b0cde320d88ed43",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindIconv/Test/CMakeLists.txt" : {
      "ObjectId" : "c59adb3d15ac235788683a3547715a47f3761857",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindJPEG/CMakeLists.txt" : {
      "ObjectId" : "c8663c560be6474b229680586213f09f937efea2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindJPEG/Test/CMakeLists.txt" : {
      "ObjectId" : "a744f8563f176dfc42077790938307e1f82c3a37",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindJsonCpp/CMakeLists.txt" : {
      "ObjectId" : "9a1fa385e9a327a4c5ecf919591288aaa830650a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindJsonCpp/Test/CMakeLists.txt" : {
      "ObjectId" : "d1dc647b390c395497be83274730ff92fb3f0b9d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake does not actually provide FindJsonCpp publicly.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindLTTngUST/CMakeLists.txt" : {
      "ObjectId" : "c9c471d4a77ab90fb2ce91ad8d78a3d734fc9569",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindLTTngUST/Test/CMakeLists.txt" : {
      "ObjectId" : "e5bd9f3663ba09fc7f876b685dc984e411a8f4a7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindLibRHash/CMakeLists.txt" : {
      "ObjectId" : "4d3954deafd3499ca34ed10f323a69aca7c28f34",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindLibRHash/Test/CMakeLists.txt" : {
      "ObjectId" : "37e062ae9e62b5e712c6c16651478aa8b83418f6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake does not actually provide FindLibRHash publicly.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindLibUV/CMakeLists.txt" : {
      "ObjectId" : "08aa95847df03079506f71402654d0849f27c209",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindLibUV/Test/CMakeLists.txt" : {
      "ObjectId" : "257ddf3cc90dbdd28dd4d48955fffefecd6ba274",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake does not actually provide FindLibUV publicly.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindLibXml2/CMakeLists.txt" : {
      "ObjectId" : "6c2464fd96c823d05eecd1749e4eefe398347127",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindLibXml2/Test/CMakeLists.txt" : {
      "ObjectId" : "df5d8c3d22fd177e793e8855cad175ae42f1e26e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindMPI/CMakeLists.txt" : {
      "ObjectId" : "121d978a8070ee908ae771b4fbb6eb412c8c499c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindMPI/Test/CMakeLists.txt" : {
      "ObjectId" : "efe8c6261dacc0d658ff10ab1e33a9530527255a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindMatlab/basic_checks/CMakeLists.txt" : {
      "ObjectId" : "4a74d93f18df9c7cbe7a4773eea803ccd0dfe681",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the success of the following command is dependent on the current configuration:\n\n# - on 32bits builds (cmake is building with 32 bits), it looks for 32 bits Matlab\n\n# - on 64bits builds (cmake is building with 64 bits), it looks for 64 bits Matlab\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# target name\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# output name\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# timeout tests, TIMEOUT set to very short on purpose\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# testing the test without the unittest framework of Matlab\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/FindMatlab/components_checks/CMakeLists.txt" : {
      "ObjectId" : "da6a2b00e2445d9d5ecaaf553b824c18398820b2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the success of the following command is dependent on the current configuration:\n\n# - on 32bits builds (cmake is building with 32 bits), it looks for 32 bits Matlab\n\n# - on 64bits builds (cmake is building with 64 bits), it looks for 64 bits Matlab\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# target name\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# output name\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/FindMatlab/failure_reports/CMakeLists.txt" : {
      "ObjectId" : "e597a4a054eeae39161c23bcf34d34bc67b07e59",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# gather tests about proper failure reports\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# main extensions for testing, same as other tests\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# target name\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# output name\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# the unit test file does not exist: the failure should be properly reported\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# without the unit test framework\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Tests/FindMatlab/versions_checks/CMakeLists.txt" : {
      "ObjectId" : "d015730b0b04a9a7085f23a3008bbc91c5acb42f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the success of the following command is dependent on the current configuration\n\n# in this case, we are only interested in the version macros\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# matlab_get_release_name_from_version\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# matlab_get_version_from_release_name\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#message(FATAL_ERROR \"versionversion = ${version}\")\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/FindModulesExecuteAll/CMakeLists.txt" : {
      "ObjectId" : "4893bb33585956888ba8b55e07dbc161b0f82522",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file includes all FindXXX.cmake modules, so they are all executed.\n\n# As it is it doesn't test a lot.\n\n# It makes sure that the modules don't contain basic syntax errors.\n\n# It also makes sure that modules don't fail with an error if something\n\n# wasn't found but REQUIRED was not given.\n\n#\n\n# I guess more things could be added, like checking whether variables are\n\n# defined after running the modules (e.g. FOO_FOUND etc.).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# new enough for CMP0017\n",
        "Line" : 9,
        "CharPositionInLine" : 38
      },
      "2" : {
        "Text" : "# get the \"basename\" of the package, so the existence of variables like\n\n# FOO_FOUND could be tested later on, Alex\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# disabled for now, since too many modules break:\n\n#  if(NOT DEFINED ${packageNameUpper}_FOUND)\n\n#    message(SEND_ERROR \"${packageNameUpper}_FOUND not defined !\")\n\n#  endif()\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/FindODBC/CMakeLists.txt" : {
      "ObjectId" : "6a81090628aac8ce071507db08ab411043eaf144",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindODBC/Test/CMakeLists.txt" : {
      "ObjectId" : "a20c0f70716c85c9ede667f2f389312b2645e6d0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindOpenCL/CMakeLists.txt" : {
      "ObjectId" : "88d2eaee05547440024a42cda74d4e65d535a326",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindOpenCL/Test/CMakeLists.txt" : {
      "ObjectId" : "f8a65877b04e922a2098c490bf6d71bb21249f35",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindOpenGL/CMakeLists.txt" : {
      "ObjectId" : "97c9e60529e9163da42572741af7755a8c796c88",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindOpenGL/Test/CMakeLists.txt" : {
      "ObjectId" : "9004a9860bbc15792042ccf49f41f0b93f1d2e93",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# import target for GLU\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OPENGL_LIBRARIES should be whatever libraries are needed to link.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# VND support adds an ::OpenGL import target.  This can be used for OpenGL-only\n\n# code (code that does not manipulate contexts, like our 'main.c').  Without\n\n# VND, ::GL can be used for both context and non-context OpenGL code.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# GLX\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# non-VND systems won't have it, but an optional search for GLX should still\n\n# be okay.\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# EGL is only available on Linux+GLVND at present.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# EGL-only code should not link to GLX.\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# all three COMPONENTS together.\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Tests/FindOpenMP/CMakeLists.txt" : {
      "ObjectId" : "e64885d09e375fdd6d587726cca02668f8a85f02",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindOpenMP/Test/CMakeLists.txt" : {
      "ObjectId" : "2692947ad0ef8c414ebeb048c59c03660dd3d235",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindOpenSSL/CMakeLists.txt" : {
      "ObjectId" : "66b3fb29918b06d193776135a3e7db38ac8bc012",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindOpenSSL/rand/CMakeLists.txt" : {
      "ObjectId" : "520d5d2032a725f2216f1a284d27a4a049b60625",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPNG/CMakeLists.txt" : {
      "ObjectId" : "c665b67b20327fdca33bd25c43c3dfa681f9ee6c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPNG/Test/CMakeLists.txt" : {
      "ObjectId" : "ad50011c75710f8d7c0008a77e8e972517086f71",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageModeMakefileTest/CMakeLists.txt" : {
      "ObjectId" : "23832daceed19d3afdb243343c435d67e05d7076",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test whether the make is GNU make, and only add the test in this case,\n\n# since the configured makefile in this test uses $(shell ...), which\n\n# is AFAIK a GNU make extension. Alex\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# build a library which we can search during the test\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# configure a FindFoo.cmake so it knows where the library can be found\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# now set up the test:\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/A/wibble-config.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/B/wibble-config.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/Baz 1.1/BazConfig.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/Baz 1.1/BazConfigVersion.cmake" : {
      "ObjectId" : "5b0261aa25fd07b62565949a8600917489002291",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/Baz 1.2/CMake/BazConfig.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/Baz 1.2/CMake/BazConfigVersion.cmake" : {
      "ObjectId" : "b37bc8e2230afd36763899bdcd6aa3d3398f52e1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/Baz 1.3/lib/cmake/Baz/BazConfig.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/Baz 1.3/lib/cmake/Baz/BazConfigVersion.cmake" : {
      "ObjectId" : "d8cac77ed79f56342fc55807297551d7076ef7d9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/Baz 2.0/share/Baz 2/BazConfig.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/Baz 2.0/share/Baz 2/BazConfigVersion.cmake" : {
      "ObjectId" : "5026fada061e614d38442dad55995866a2be2aec",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/Baz 2.1/lib/Baz 2/cmake/BazConfig.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/Baz 2.1/lib/Baz 2/cmake/BazConfigVersion.cmake" : {
      "ObjectId" : "a180143889e50e7e7e87f89b8d1fb0d8b785dcdd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/CMakeLists.txt" : {
      "ObjectId" : "3fd55413e87e7eab09af0385f16668a2f008cd74",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Protect tests from running inside the default install prefix.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for a package which uses FindPackageHandleStandardArgs.cmake with the\n\n# new (as of cmake 2.8.3) syntax. This works only if CMP0017 is set to NEW,\n\n# because otherwise FindPackageHandleStandardArgs.cmake from the current\n\n# directory is included (via CMAKE_MODULE_PATH).\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for a package that has a find module and may be found.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for a package that has no find module and will not be found.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Look for a package that has an advanced find module.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# test behaviour of cmFindBase wrt. the CMAKE_PREFIX_PATH variable\n\n# foo.h should be found in ${CMAKE_CURRENT_SOURCE_DIR}/include:\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Test system package registry if possible.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Try writing a value to the system package registry.\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# If the above worked, add the rest of the test and a rule to\n\n# cleanup the value.\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#set(CMAKE_FIND_DEBUG_MODE 1)\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For purposes of the test wipe out previous find results.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Enable framework and bundle searching.  Make sure bundles are found\n\n# before unix-syle packages.\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set the wrong answer for a find to make sure it re-finds.\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Test that CMAKE_IGNORE_PATH can ignore the purposely bad package\n\n# files in the lib/cmake/zot-3.1 directory.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Look for packages with new-style signatures.\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Test Config files which set Xyz_FOUND themselves:\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Test wrong initial path when result is present.\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Test wrong initial cache entry of UNINITIALIZED type when result is present.\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Test wrong initial path when result is missing.\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Test wrong initial cache entry of UNINITIALIZED type when result is missing.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# HINTS should override the system but PATHS should not\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Look for package with recursive find-modules.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Test architecture-specific search directories.\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Test <PackageName>_DIR environment variable.\n\n# We erase the main prefix path to ensure the env var is used.\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Should Work\n\n# Should Fail\n",
        "Line" : 195,
        "CharPositionInLine" : 45
      },
      "26" : {
        "Text" : "# Test system package registry if available.\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Expected locations at which packages should be found.\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Check the results.\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Check and report failure.\n",
        "Line" : 249,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Convert to relative path for comparison to expected location.\n",
        "Line" : 261,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Debugging output.\n",
        "Line" : 265,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Check and report failure.\n",
        "Line" : 270,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Check that version information was extracted.\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Test version number comparison.\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Test export(PACKAGE) with find_package.\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Choose a unique version.\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Should clean the user package cache\n",
        "Line" : 373,
        "CharPositionInLine" : 43
      },
      "38" : {
        "Text" : "#\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Test configure_package_config_file().\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Generate a config file ready to be installed.\n",
        "Line" : 394,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Generate a config file for the build tree.\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Test write_basic_config_version_file().\n",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Test that an empty CMAKE_SIZEOF_VOID_P is accepted:\n",
        "Line" : 490,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# Test that a different CMAKE_SIZEOF_VOID_P results in\n\n# PACKAGE_VERSION_UNSUITABLE\n",
        "Line" : 496,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# Test \"normal\" version\n",
        "Line" : 586,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# test empty CMAKE_SIZEOF_VOID_P version:\n",
        "Line" : 593,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# test different CMAKE_SIZEOF_VOID_P version:\n",
        "Line" : 600,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "#                                                      AnyNewerVersion\n\n#                                                      |  SameMajorVersion\n\n#                                                      |  |  SameMinorVersion\n\n#                                                      |  |  |  ExactVersion\n\n#                                                      |  |  |  |\n",
        "Line" : 616,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Request 0\n\n# Request [older major]\n\n# Request [same major]\n\n# Request [newer major]\n",
        "Line" : 621,
        "CharPositionInLine" : 67
      },
      "50" : {
        "Text" : "# Request 0.0\n\n# Request 0.[newer minor]\n\n# Request [older major].0\n\n# Request [older major].[newer minor]\n\n# Request [same major].0\n\n# Request [same major].[newer minor]\n\n# Request [newer major].0\n\n# Request [newer major].[newer minor]\n",
        "Line" : 626,
        "CharPositionInLine" : 67
      },
      "51" : {
        "Text" : "# Request 0.0.0\n\n# Request 0.0.[newer patch]\n\n# Request 0.[newer minor].0\n\n# Request 0.[newer minor].[newer patch]\n\n# Request [older major].0.0\n\n# Request [older major].0.[newer patch]\n\n# Request [older major].[newer minor].0\n\n# Request [older major].[newer minor].[newer patch]\n\n# Request [same major].0.0\n\n# Request [same major].0.[newer patch]\n\n# Request [same major].[newer minor].0\n\n# Request [same major].[newer minor].[newer patch]\n\n# Request [newer major].0.0\n\n# Request [newer major].0.[newer patch]\n\n# Request [newer major].[newer minor].0\n\n# Request [newer major].[newer minor].[newer patch]\n",
        "Line" : 635,
        "CharPositionInLine" : 67
      },
      "52" : {
        "Text" : "# Request 0.0.0.0\n\n# Request 0.0.0.[newer tweak]\n\n# Request 0.0.[newer patch].0\n\n# Request 0.0.[newer patch].[newer tweak]\n\n# Request 0.[newer minor].0.0\n\n# Request 0.[newer minor].0.[newer tweak]\n\n# Request 0.[newer minor].[newer patch].0\n\n# Request 0.[newer minor].[newer patch].[newer tweak]\n\n# Request [older major].0.0.0\n\n# Request [older major].0.0.[newer tweak]\n\n# Request [older major].0.[newer patch].0\n\n# Request [older major].0.[newer patch].[newer tweak]\n\n# Request [older major].[newer minor].0.0\n\n# Request [older major].[newer minor].0.[newer tweak]\n\n# Request [older major].[newer minor].[newer patch].0\n\n# Request [older major].[newer minor].[newer patch].[newer tweak]\n\n# Request [same major].0.0.0\n\n# Request [same major].0.0.[newer tweak]\n\n# Request [same major].0.[newer patch].0\n\n# Request [same major].0.[newer patch].[newer tweak]\n\n# Request [same major].[newer minor].0.0\n\n# Request [same major].[newer minor].0.[newer tweak]\n\n# Request [same major].[newer minor].[newer patch].0\n\n# Request [same major].[newer minor].[newer patch].[newer tweak]\n\n# Request [newer major].0.0.0\n\n# Request [newer major].0.0.[newer tweak]\n\n# Request [newer major].0.[newer patch].0\n\n# Request [newer major].0.[newer patch].[newer tweak]\n\n# Request [newer major].[newer minor].0.0\n\n# Request [newer major].[newer minor].0.[newer tweak]\n\n# Request [newer major].[newer minor].[newer patch].0\n\n# Request [newer major].[newer minor].[newer patch].[newer tweak]\n",
        "Line" : 652,
        "CharPositionInLine" : 67
      },
      "53" : {
        "Text" : "# Request 0\n\n# Request [older major]\n\n# Request [same major]\n\n# Request [newer major]\n",
        "Line" : 687,
        "CharPositionInLine" : 67
      },
      "54" : {
        "Text" : "# Request 0.0\n\n# Request 0.[older minor]\n\n# Request 0.[same minor]\n\n# Request 0.[newer minor]\n\n# Request [older major].0\n\n# Request [older major].[older minor]\n\n# Request [older major].[same minor]\n\n# Request [older major].[newer minor]\n\n# Request [same major].0\n\n# Request [same major].[older minor]\n\n# Request [same major].[same minor]\n\n# Request [same major].[newer minor]\n\n# Request [newer major].0\n\n# Request [newer major].[older minor]\n\n# Request [newer major].[same minor]\n\n# Request [newer major].[newer minor]\n",
        "Line" : 692,
        "CharPositionInLine" : 67
      },
      "55" : {
        "Text" : "# Request 0.0.0\n\n# Request 0.0.[newer patch]\n\n# Request 0.[older minor].0\n\n# Request 0.[older minor].[newer patch]\n\n# Request 0.[same minor].0\n\n# Request 0.[same minor].[newer patch]\n\n# Request 0.[newer minor].0\n\n# Request 0.[newer minor].[newer patch]\n\n# Request [older major].0.0\n\n# Request [older major].0.[newer patch]\n\n# Request [older major].[older minor].0\n\n# Request [older major].[older minor].[newer patch]\n\n# Request [older major].[same minor].0\n\n# Request [older major].[same minor].[newer patch]\n\n# Request [older major].[newer minor].0\n\n# Request [older major].[newer minor].[newer patch]\n\n# Request [same major].0.0\n\n# Request [same major].0.[newer patch]\n\n# Request [same major].[older minor].0\n\n# Request [same major].[older minor].[newer patch]\n\n# Request [same major].[same minor].0\n\n# Request [same major].[same minor].[newer patch]\n\n# Request [same major].[newer minor].0\n\n# Request [same major].[newer minor].[newer patch]\n\n# Request [newer major].0.0\n\n# Request [newer major].0.[newer patch]\n\n# Request [newer major].[older minor].0\n\n# Request [newer major].[older minor].[newer patch]\n\n# Request [newer major].[same minor].0\n\n# Request [newer major].[same minor].[newer patch]\n\n# Request [newer major].[newer minor].0\n\n# Request [newer major].[newer minor].[newer patch]\n",
        "Line" : 709,
        "CharPositionInLine" : 67
      },
      "56" : {
        "Text" : "# Request 0.0.0.0\n\n# Request 0.0.0.[newer tweak]\n\n# Request 0.0.[newer patch].0\n\n# Request 0.0.[newer patch].[newer tweak]\n\n# Request 0.[older minor].0.0\n\n# Request 0.[older minor].0.[newer tweak]\n\n# Request 0.[older minor].[newer patch].0\n\n# Request 0.[older minor].[newer patch].[newer tweak]\n\n# Request 0.[same minor].0.0\n\n# Request 0.[same minor].0.[newer tweak]\n\n# Request 0.[same minor].[newer patch].0\n\n# Request 0.[same minor].[newer patch].[newer tweak]\n\n# Request 0.[newer minor].0.0\n\n# Request 0.[newer minor].0.[newer tweak]\n\n# Request 0.[newer minor].[newer patch].0\n\n# Request 0.[newer minor].[newer patch].[newer tweak]\n\n# Request [older major].0.0.0\n\n# Request [older major].0.0.[newer tweak]\n\n# Request [older major].0.[newer patch].0\n\n# Request [older major].0.[newer patch].[newer tweak]\n\n# Request [older major].[older minor].0.0\n\n# Request [older major].[older minor].0.[newer tweak]\n\n# Request [older major].[older minor].[newer patch].0\n\n# Request [older major].[older minor].[newer patch].[newer tweak]\n\n# Request [older major].[same minor].0.0\n\n# Request [older major].[same minor].0.[newer tweak]\n\n# Request [older major].[same minor].[newer patch].0\n\n# Request [older major].[same minor].[newer patch].[newer tweak]\n\n# Request [older major].[newer minor].0.0\n\n# Request [older major].[newer minor].0.[newer tweak]\n\n# Request [older major].[newer minor].[newer patch].0\n\n# Request [older major].[newer minor].[newer patch].[newer tweak]\n\n# Request [same major].0.0.0\n\n# Request [same major].0.0.[newer tweak]\n\n# Request [same major].0.[newer patch].0\n\n# Request [same major].0.[newer patch].[newer tweak]\n\n# Request [same major].[older minor].0.0\n\n# Request [same major].[older minor].0.[newer tweak]\n\n# Request [same major].[older minor].[newer patch].0\n\n# Request [same major].[older minor].[newer patch].[newer tweak]\n\n# Request [same major].[same minor].0.0\n\n# Request [same major].[same minor].0.[newer tweak]\n\n# Request [same major].[same minor].[newer patch].0\n\n# Request [same major].[same minor].[newer patch].[newer tweak]\n\n# Request [same major].[newer minor].0.0\n\n# Request [same major].[newer minor].0.[newer tweak]\n\n# Request [same major].[newer minor].[newer patch].0\n\n# Request [same major].[newer minor].[newer patch].[newer tweak]\n\n# Request [newer major].0.0.0\n\n# Request [newer major].0.0.[newer tweak]\n\n# Request [newer major].0.[newer patch].0\n\n# Request [newer major].0.[newer patch].[newer tweak]\n\n# Request [newer major].[older minor].0.0\n\n# Request [newer major].[older minor].0.[newer tweak]\n\n# Request [newer major].[older minor].[newer patch].0\n\n# Request [newer major].[older minor].[newer patch].[newer tweak]\n\n# Request [newer major].[same minor].0.0\n\n# Request [newer major].[same minor].0.[newer tweak]\n\n# Request [newer major].[same minor].[newer patch].0\n\n# Request [newer major].[same minor].[newer patch].[newer tweak]\n\n# Request [newer major].[newer minor].0.0\n\n# Request [newer major].[newer minor].0.[newer tweak]\n\n# Request [newer major].[newer minor].[newer patch].0\n\n# Request [newer major].[newer minor].[newer patch].[newer tweak]\n",
        "Line" : 742,
        "CharPositionInLine" : 67
      },
      "57" : {
        "Text" : "# Request 0\n\n# Request [older major]\n\n# Request [same major]\n\n# Request [newer major]\n",
        "Line" : 808,
        "CharPositionInLine" : 67
      },
      "58" : {
        "Text" : "# Request 0.0\n\n# Request 0.[older minor]\n\n# Request 0.[same minor]\n\n# Request 0.[newer minor]\n\n# Request [older major].0\n\n# Request [older major].[older minor]\n\n# Request [older major].[same minor]\n\n# Request [older major].[newer minor]\n\n# Request [same major].0\n\n# Request [same major].[older minor]\n\n# Request [same major].[same minor]\n\n# Request [same major].[newer minor]\n\n# Request [newer major].0\n\n# Request [newer major].[older minor]\n\n# Request [newer major].[same minor]\n\n# Request [newer major].[newer minor]\n",
        "Line" : 813,
        "CharPositionInLine" : 67
      },
      "59" : {
        "Text" : "# Request 0.0.0\n\n# Request 0.0.[older patch]\n\n# Request 0.0.[same patch]\n\n# Request 0.0.[newer patch]\n\n# Request 0.[older minor].0\n\n# Request 0.[older minor].[older patch]\n\n# Request 0.[older minor].[same patch]\n\n# Request 0.[older minor].[newer patch]\n\n# Request 0.[same minor].0\n\n# Request 0.[same minor].[older patch]\n\n# Request 0.[same minor].[same patch]\n\n# Request 0.[same minor].[newer patch]\n\n# Request 0.[newer minor].0\n\n# Request 0.[newer minor].[older patch]\n\n# Request 0.[newer minor].[same patch]\n\n# Request 0.[newer minor].[newer patch]\n\n# Request [older major].0.0\n\n# Request [older major].0.[older patch]\n\n# Request [older major].0.[same patch]\n\n# Request [older major].0.[newer patch]\n\n# Request [older major].[older minor].0\n\n# Request [older major].[older minor].[older patch]\n\n# Request [older major].[older minor].[same patch]\n\n# Request [older major].[older minor].[newer patch]\n\n# Request [older major].[same minor].0\n\n# Request [older major].[same minor].[older patch]\n\n# Request [older major].[same minor].[same patch]\n\n# Request [older major].[same minor].[newer patch]\n\n# Request [older major].[newer minor].0\n\n# Request [older major].[newer minor].[older patch]\n\n# Request [older major].[newer minor].[same patch]\n\n# Request [older major].[newer minor].[newer patch]\n\n# Request [same major].0.0\n\n# Request [same major].0.[older patch]\n\n# Request [same major].0.[same patch]\n\n# Request [same major].0.[newer patch]\n\n# Request [same major].[older minor].0\n\n# Request [same major].[older minor].[older patch]\n\n# Request [same major].[older minor].[same patch]\n\n# Request [same major].[older minor].[newer patch]\n\n# Request [same major].[same minor].0\n\n# Request [same major].[same minor].[older patch]\n\n# Request [same major].[same minor].[same patch]\n\n# Request [same major].[same minor].[newer patch]\n\n# Request [same major].[newer minor].0\n\n# Request [same major].[newer minor].[older patch]\n\n# Request [same major].[newer minor].[same patch]\n\n# Request [same major].[newer minor].[newer patch]\n\n# Request [newer major].0.0\n\n# Request [newer major].0.[older patch]\n\n# Request [newer major].0.[same patch]\n\n# Request [newer major].0.[newer patch]\n\n# Request [newer major].[older minor].0\n\n# Request [newer major].[older minor].[older patch]\n\n# Request [newer major].[older minor].[same patch]\n\n# Request [newer major].[older minor].[newer patch]\n\n# Request [newer major].[same minor].0\n\n# Request [newer major].[same minor].[older patch]\n\n# Request [newer major].[same minor].[same patch]\n\n# Request [newer major].[same minor].[newer patch]\n\n# Request [newer major].[newer minor].0\n\n# Request [newer major].[newer minor].[older patch]\n\n# Request [newer major].[newer minor].[same patch]\n\n# Request [newer major].[newer minor].[newer patch]\n",
        "Line" : 830,
        "CharPositionInLine" : 67
      },
      "60" : {
        "Text" : "# Request 0.0.0.0\n\n# Request 0.0.0.[newer tweak]\n\n# Request 0.0.[older patch].0\n\n# Request 0.0.[older patch].[newer tweak]\n\n# Request 0.0.[same patch].0\n\n# Request 0.0.[same patch].[newer tweak]\n\n# Request 0.0.[newer patch].0\n\n# Request 0.0.[newer patch].[newer tweak]\n\n# Request 0.[older minor].0.0\n\n# Request 0.[older minor].0.[newer tweak]\n\n# Request 0.[older minor].[older patch].0\n\n# Request 0.[older minor].[older patch].[newer tweak]\n\n# Request 0.[older minor].[same patch].0\n\n# Request 0.[older minor].[same patch].[newer tweak]\n\n# Request 0.[older minor].[newer patch].0\n\n# Request 0.[older minor].[newer patch].[newer tweak]\n\n# Request 0.[same minor].0.0\n\n# Request 0.[same minor].0.[newer tweak]\n\n# Request 0.[same minor].[older patch].0\n\n# Request 0.[same minor].[older patch].[newer tweak]\n\n# Request 0.[same minor].[same patch].0\n\n# Request 0.[same minor].[same patch].[newer tweak]\n\n# Request 0.[same minor].[newer patch].0\n\n# Request 0.[same minor].[newer patch].[newer tweak]\n\n# Request 0.[newer minor].0.0\n\n# Request 0.[newer minor].0.[newer tweak]\n\n# Request 0.[newer minor].[older patch].0\n\n# Request 0.[newer minor].[older patch].[newer tweak]\n\n# Request 0.[newer minor].[same patch].0\n\n# Request 0.[newer minor].[same patch].[newer tweak]\n\n# Request 0.[newer minor].[newer patch].0\n\n# Request 0.[newer minor].[newer patch].[newer tweak]\n\n# Request [older major].0.0.0\n\n# Request [older major].0.0.[newer tweak]\n\n# Request [older major].0.[older patch].0\n\n# Request [older major].0.[older patch].[newer tweak]\n\n# Request [older major].0.[same patch].0\n\n# Request [older major].0.[same patch].[newer tweak]\n\n# Request [older major].0.[newer patch].0\n\n# Request [older major].0.[newer patch].[newer tweak]\n\n# Request [older major].[older minor].0.0\n\n# Request [older major].[older minor].0.[newer tweak]\n\n# Request [older major].[older minor].[older patch].0\n\n# Request [older major].[older minor].[older patch].[newer tweak]\n\n# Request [older major].[older minor].[same patch].0\n\n# Request [older major].[older minor].[same patch].[newer tweak]\n\n# Request [older major].[older minor].[newer patch].0\n\n# Request [older major].[older minor].[newer patch].[newer tweak]\n\n# Request [older major].[same minor].0.0\n\n# Request [older major].[same minor].0.[newer tweak]\n\n# Request [older major].[same minor].[older patch].0\n\n# Request [older major].[same minor].[older patch].[newer tweak]\n\n# Request [older major].[same minor].[same patch].0\n\n# Request [older major].[same minor].[same patch].[newer tweak]\n\n# Request [older major].[same minor].[newer patch].0\n\n# Request [older major].[same minor].[newer patch].[newer tweak]\n\n# Request [older major].[newer minor].0.0\n\n# Request [older major].[newer minor].0.[newer tweak]\n\n# Request [older major].[newer minor].[older patch].0\n\n# Request [older major].[newer minor].[older patch].[newer tweak]\n\n# Request [older major].[newer minor].[same patch].0\n\n# Request [older major].[newer minor].[same patch].[newer tweak]\n\n# Request [older major].[newer minor].[newer patch].0\n\n# Request [older major].[newer minor].[newer patch].[newer tweak]\n\n# Request [same major].0.0.0\n\n# Request [same major].0.0.[newer tweak]\n\n# Request [same major].0.[older patch].0\n\n# Request [same major].0.[older patch].[newer tweak]\n\n# Request [same major].0.[same patch].0\n\n# Request [same major].0.[same patch].[newer tweak]\n\n# Request [same major].0.[newer patch].0\n\n# Request [same major].0.[newer patch].[newer tweak]\n\n# Request [same major].[older minor].0.0\n\n# Request [same major].[older minor].0.[newer tweak]\n\n# Request [same major].[older minor].[older patch].0\n\n# Request [same major].[older minor].[older patch].[newer tweak]\n\n# Request [same major].[older minor].[same patch].0\n\n# Request [same major].[older minor].[same patch].[newer tweak]\n\n# Request [same major].[older minor].[newer patch].0\n\n# Request [same major].[older minor].[newer patch].[newer tweak]\n\n# Request [same major].[same minor].0.0\n\n# Request [same major].[same minor].0.[newer tweak]\n\n# Request [same major].[same minor].[older patch].0\n\n# Request [same major].[same minor].[older patch].[newer tweak]\n\n# Request [same major].[same minor].[same patch].0\n\n# Request [same major].[same minor].[same patch].[newer tweak]\n\n# Request [same major].[same minor].[newer patch].0\n\n# Request [same major].[same minor].[newer patch].[newer tweak]\n\n# Request [same major].[newer minor].0.0\n\n# Request [same major].[newer minor].0.[newer tweak]\n\n# Request [same major].[newer minor].[older patch].0\n\n# Request [same major].[newer minor].[older patch].[newer tweak]\n\n# Request [same major].[newer minor].[same patch].0\n\n# Request [same major].[newer minor].[same patch].[newer tweak]\n\n# Request [same major].[newer minor].[newer patch].0\n\n# Request [same major].[newer minor].[newer patch].[newer tweak]\n\n# Request [newer major].0.0.0\n\n# Request [newer major].0.0.[newer tweak]\n\n# Request [newer major].0.[older patch].0\n\n# Request [newer major].0.[older patch].[newer tweak]\n\n# Request [newer major].0.[same patch].0\n\n# Request [newer major].0.[same patch].[newer tweak]\n\n# Request [newer major].0.[newer patch].0\n\n# Request [newer major].0.[newer patch].[newer tweak]\n\n# Request [newer major].[older minor].0.0\n\n# Request [newer major].[older minor].0.[newer tweak]\n\n# Request [newer major].[older minor].[older patch].0\n\n# Request [newer major].[older minor].[older patch].[newer tweak]\n\n# Request [newer major].[older minor].[same patch].0\n\n# Request [newer major].[older minor].[same patch].[newer tweak]\n\n# Request [newer major].[older minor].[newer patch].0\n\n# Request [newer major].[older minor].[newer patch].[newer tweak]\n\n# Request [newer major].[same minor].0.0\n\n# Request [newer major].[same minor].0.[newer tweak]\n\n# Request [newer major].[same minor].[older patch].0\n\n# Request [newer major].[same minor].[older patch].[newer tweak]\n\n# Request [newer major].[same minor].[same patch].0\n\n# Request [newer major].[same minor].[same patch].[newer tweak]\n\n# Request [newer major].[same minor].[newer patch].0\n\n# Request [newer major].[same minor].[newer patch].[newer tweak]\n\n# Request [newer major].[newer minor].0.0\n\n# Request [newer major].[newer minor].0.[newer tweak]\n\n# Request [newer major].[newer minor].[older patch].0\n\n# Request [newer major].[newer minor].[older patch].[newer tweak]\n\n# Request [newer major].[newer minor].[same patch].0\n\n# Request [newer major].[newer minor].[same patch].[newer tweak]\n\n# Request [newer major].[newer minor].[newer patch].0\n\n# Request [newer major].[newer minor].[newer patch].[newer tweak]\n",
        "Line" : 895,
        "CharPositionInLine" : 67
      },
      "61" : {
        "Text" : "# Request 0\n\n# Request [older major]\n\n# Request [same major]\n\n# Request [newer major]\n",
        "Line" : 1025,
        "CharPositionInLine" : 67
      },
      "62" : {
        "Text" : "# Request 0.0\n\n# Request 0.[older minor]\n\n# Request 0.[same minor]\n\n# Request 0.[newer minor]\n\n# Request [older major].0\n\n# Request [older major].[older minor]\n\n# Request [older major].[same minor]\n\n# Request [older major].[newer minor]\n\n# Request [same major].0\n\n# Request [same major].[older minor]\n\n# Request [same major].[same minor]\n\n# Request [same major].[newer minor]\n\n# Request [newer major].0\n\n# Request [newer major].[older minor]\n\n# Request [newer major].[same minor]\n\n# Request [newer major].[newer minor]\n",
        "Line" : 1030,
        "CharPositionInLine" : 67
      },
      "63" : {
        "Text" : "# Request 0.0.0\n\n# Request 0.0.[older patch]\n\n# Request 0.0.[same patch]\n\n# Request 0.0.[newer patch]\n\n# Request 0.[older minor].0\n\n# Request 0.[older minor].[older patch]\n\n# Request 0.[older minor].[same patch]\n\n# Request 0.[older minor].[newer patch]\n\n# Request 0.[same minor].0\n\n# Request 0.[same minor].[older patch]\n\n# Request 0.[same minor].[same patch]\n\n# Request 0.[same minor].[newer patch]\n\n# Request 0.[newer minor].0\n\n# Request 0.[newer minor].[older patch]\n\n# Request 0.[newer minor].[same patch]\n\n# Request 0.[newer minor].[newer patch]\n\n# Request [older major].0.0\n\n# Request [older major].0.[older patch]\n\n# Request [older major].0.[same patch]\n\n# Request [older major].0.[newer patch]\n\n# Request [older major].[older minor].0\n\n# Request [older major].[older minor].[older patch]\n\n# Request [older major].[older minor].[same patch]\n\n# Request [older major].[older minor].[newer patch]\n\n# Request [older major].[same minor].0\n\n# Request [older major].[same minor].[older patch]\n\n# Request [older major].[same minor].[same patch]\n\n# Request [older major].[same minor].[newer patch]\n\n# Request [older major].[newer minor].0\n\n# Request [older major].[newer minor].[older patch]\n\n# Request [older major].[newer minor].[same patch]\n\n# Request [older major].[newer minor].[newer patch]\n\n# Request [same major].0.0\n\n# Request [same major].0.[older patch]\n\n# Request [same major].0.[same patch]\n\n# Request [same major].0.[newer patch]\n\n# Request [same major].[older minor].0\n\n# Request [same major].[older minor].[older patch]\n\n# Request [same major].[older minor].[same patch]\n\n# Request [same major].[older minor].[newer patch]\n\n# Request [same major].[same minor].0\n\n# Request [same major].[same minor].[older patch]\n\n# Request [same major].[same minor].[same patch]\n\n# Request [same major].[same minor].[newer patch]\n\n# Request [same major].[newer minor].0\n\n# Request [same major].[newer minor].[older patch]\n\n# Request [same major].[newer minor].[same patch]\n\n# Request [same major].[newer minor].[newer patch]\n\n# Request [newer major].0.0\n\n# Request [newer major].0.[older patch]\n\n# Request [newer major].0.[same patch]\n\n# Request [newer major].0.[newer patch]\n\n# Request [newer major].[older minor].0\n\n# Request [newer major].[older minor].[older patch]\n\n# Request [newer major].[older minor].[same patch]\n\n# Request [newer major].[older minor].[newer patch]\n\n# Request [newer major].[same minor].0\n\n# Request [newer major].[same minor].[older patch]\n\n# Request [newer major].[same minor].[same patch]\n\n# Request [newer major].[same minor].[newer patch]\n\n# Request [newer major].[newer minor].0\n\n# Request [newer major].[newer minor].[older patch]\n\n# Request [newer major].[newer minor].[same patch]\n\n# Request [newer major].[newer minor].[newer patch]\n",
        "Line" : 1047,
        "CharPositionInLine" : 67
      },
      "64" : {
        "Text" : "# Request 0.0.0.0\n\n# Request 0.0.0.[older tweak]\n\n# Request 0.0.0.[same tweak]\n\n# Request 0.0.0.[newer tweak]\n\n# Request 0.0.[older patch].0\n\n# Request 0.0.[older patch].[older tweak]\n\n# Request 0.0.[older patch].[same tweak]\n\n# Request 0.0.[older patch].[newer tweak]\n\n# Request 0.0.[same patch].0\n\n# Request 0.0.[same patch].[older tweak]\n\n# Request 0.0.[same patch].[same tweak]\n\n# Request 0.0.[same patch].[newer tweak]\n\n# Request 0.0.[newer patch].0\n\n# Request 0.0.[newer patch].[older tweak]\n\n# Request 0.0.[newer patch].[same tweak]\n\n# Request 0.0.[newer patch].[newer tweak]\n\n# Request 0.[older minor].0.0\n\n# Request 0.[older minor].0.[older tweak]\n\n# Request 0.[older minor].0.[same tweak]\n\n# Request 0.[older minor].0.[newer tweak]\n\n# Request 0.[older minor].[older patch].0\n\n# Request 0.[older minor].[older patch].[older tweak]\n\n# Request 0.[older minor].[older patch].[same tweak]\n\n# Request 0.[older minor].[older patch].[newer tweak]\n\n# Request 0.[older minor].[same patch].0\n\n# Request 0.[older minor].[same patch].[older tweak]\n\n# Request 0.[older minor].[same patch].[same tweak]\n\n# Request 0.[older minor].[same patch].[newer tweak]\n\n# Request 0.[older minor].[newer patch].0\n\n# Request 0.[older minor].[newer patch].[older tweak]\n\n# Request 0.[older minor].[newer patch].[same tweak]\n\n# Request 0.[older minor].[newer patch].[newer tweak]\n\n# Request 0.[same minor].0.0\n\n# Request 0.[same minor].0.[older tweak]\n\n# Request 0.[same minor].0.[same tweak]\n\n# Request 0.[same minor].0.[newer tweak]\n\n# Request 0.[same minor].[older patch].0\n\n# Request 0.[same minor].[older patch].[older tweak]\n\n# Request 0.[same minor].[older patch].[same tweak]\n\n# Request 0.[same minor].[older patch].[newer tweak]\n\n# Request 0.[same minor].[same patch].0\n\n# Request 0.[same minor].[same patch].[older tweak]\n\n# Request 0.[same minor].[same patch].[same tweak]\n\n# Request 0.[same minor].[same patch].[newer tweak]\n\n# Request 0.[same minor].[newer patch].0\n\n# Request 0.[same minor].[newer patch].[older tweak]\n\n# Request 0.[same minor].[newer patch].[same tweak]\n\n# Request 0.[same minor].[newer patch].[newer tweak]\n\n# Request 0.[newer minor].0.0\n\n# Request 0.[newer minor].0.[older tweak]\n\n# Request 0.[newer minor].0.[same tweak]\n\n# Request 0.[newer minor].0.[newer tweak]\n\n# Request 0.[newer minor].[older patch].0\n\n# Request 0.[newer minor].[older patch].[older tweak]\n\n# Request 0.[newer minor].[older patch].[same tweak]\n\n# Request 0.[newer minor].[older patch].[newer tweak]\n\n# Request 0.[newer minor].[same patch].0\n\n# Request 0.[newer minor].[same patch].[older tweak]\n\n# Request 0.[newer minor].[same patch].[same tweak]\n\n# Request 0.[newer minor].[same patch].[newer tweak]\n\n# Request 0.[newer minor].[newer patch].0\n\n# Request 0.[newer minor].[newer patch].[older tweak]\n\n# Request 0.[newer minor].[newer patch].[same tweak]\n\n# Request 0.[newer minor].[newer patch].[newer tweak]\n\n# Request [older major].0.0.0\n\n# Request [older major].0.0.[older tweak]\n\n# Request [older major].0.0.[same tweak]\n\n# Request [older major].0.0.[newer tweak]\n\n# Request [older major].0.[older patch].0\n\n# Request [older major].0.[older patch].[older tweak]\n\n# Request [older major].0.[older patch].[same tweak]\n\n# Request [older major].0.[older patch].[newer tweak]\n\n# Request [older major].0.[same patch].0\n\n# Request [older major].0.[same patch].[older tweak]\n\n# Request [older major].0.[same patch].[same tweak]\n\n# Request [older major].0.[same patch].[newer tweak]\n\n# Request [older major].0.[newer patch].0\n\n# Request [older major].0.[newer patch].[older tweak]\n\n# Request [older major].0.[newer patch].[same tweak]\n\n# Request [older major].0.[newer patch].[newer tweak]\n\n# Request [older major].[older minor].0.0\n\n# Request [older major].[older minor].0.[older tweak]\n\n# Request [older major].[older minor].0.[same tweak]\n\n# Request [older major].[older minor].0.[newer tweak]\n\n# Request [older major].[older minor].[older patch].0\n\n# Request [older major].[older minor].[older patch].[older tweak]\n\n# Request [older major].[older minor].[older patch].[same tweak]\n\n# Request [older major].[older minor].[older patch].[newer tweak]\n\n# Request [older major].[older minor].[same patch].0\n\n# Request [older major].[older minor].[same patch].[older tweak]\n\n# Request [older major].[older minor].[same patch].[same tweak]\n\n# Request [older major].[older minor].[same patch].[newer tweak]\n\n# Request [older major].[older minor].[newer patch].0\n\n# Request [older major].[older minor].[newer patch].[older tweak]\n\n# Request [older major].[older minor].[newer patch].[same tweak]\n\n# Request [older major].[older minor].[newer patch].[newer tweak]\n\n# Request [older major].[same minor].0.0\n\n# Request [older major].[same minor].0.[older tweak]\n\n# Request [older major].[same minor].0.[same tweak]\n\n# Request [older major].[same minor].0.[newer tweak]\n\n# Request [older major].[same minor].[older patch].0\n\n# Request [older major].[same minor].[older patch].[older tweak]\n\n# Request [older major].[same minor].[older patch].[same tweak]\n\n# Request [older major].[same minor].[older patch].[newer tweak]\n\n# Request [older major].[same minor].[same patch].0\n\n# Request [older major].[same minor].[same patch].[older tweak]\n\n# Request [older major].[same minor].[same patch].[same tweak]\n\n# Request [older major].[same minor].[same patch].[newer tweak]\n\n# Request [older major].[same minor].[newer patch].0\n\n# Request [older major].[same minor].[newer patch].[older tweak]\n\n# Request [older major].[same minor].[newer patch].[same tweak]\n\n# Request [older major].[same minor].[newer patch].[newer tweak]\n\n# Request [older major].[newer minor].0.0\n\n# Request [older major].[newer minor].0.[older tweak]\n\n# Request [older major].[newer minor].0.[same tweak]\n\n# Request [older major].[newer minor].0.[newer tweak]\n\n# Request [older major].[newer minor].[older patch].0\n\n# Request [older major].[newer minor].[older patch].[older tweak]\n\n# Request [older major].[newer minor].[older patch].[same tweak]\n\n# Request [older major].[newer minor].[older patch].[newer tweak]\n\n# Request [older major].[newer minor].[same patch].0\n\n# Request [older major].[newer minor].[same patch].[older tweak]\n\n# Request [older major].[newer minor].[same patch].[same tweak]\n\n# Request [older major].[newer minor].[same patch].[newer tweak]\n\n# Request [older major].[newer minor].[newer patch].0\n\n# Request [older major].[newer minor].[newer patch].[older tweak]\n\n# Request [older major].[newer minor].[newer patch].[same tweak]\n\n# Request [older major].[newer minor].[newer patch].[newer tweak]\n\n# Request [same major].0.0.0\n\n# Request [same major].0.0.[older tweak]\n\n# Request [same major].0.0.[same tweak]\n\n# Request [same major].0.0.[newer tweak]\n\n# Request [same major].0.[older patch].0\n\n# Request [same major].0.[older patch].[older tweak]\n\n# Request [same major].0.[older patch].[same tweak]\n\n# Request [same major].0.[older patch].[newer tweak]\n\n# Request [same major].0.[same patch].0\n\n# Request [same major].0.[same patch].[older tweak]\n\n# Request [same major].0.[same patch].[same tweak]\n\n# Request [same major].0.[same patch].[newer tweak]\n\n# Request [same major].0.[newer patch].0\n\n# Request [same major].0.[newer patch].[older tweak]\n\n# Request [same major].0.[newer patch].[same tweak]\n\n# Request [same major].0.[newer patch].[newer tweak]\n\n# Request [same major].[older minor].0.0\n\n# Request [same major].[older minor].0.[older tweak]\n\n# Request [same major].[older minor].0.[same tweak]\n\n# Request [same major].[older minor].0.[newer tweak]\n\n# Request [same major].[older minor].[older patch].0\n\n# Request [same major].[older minor].[older patch].[older tweak]\n\n# Request [same major].[older minor].[older patch].[same tweak]\n\n# Request [same major].[older minor].[older patch].[newer tweak]\n\n# Request [same major].[older minor].[same patch].0\n\n# Request [same major].[older minor].[same patch].[older tweak]\n\n# Request [same major].[older minor].[same patch].[same tweak]\n\n# Request [same major].[older minor].[same patch].[newer tweak]\n\n# Request [same major].[older minor].[newer patch].0\n\n# Request [same major].[older minor].[newer patch].[older tweak]\n\n# Request [same major].[older minor].[newer patch].[same tweak]\n\n# Request [same major].[older minor].[newer patch].[newer tweak]\n\n# Request [same major].[same minor].0.0\n\n# Request [same major].[same minor].0.[older tweak]\n\n# Request [same major].[same minor].0.[same tweak]\n\n# Request [same major].[same minor].0.[newer tweak]\n\n# Request [same major].[same minor].[older patch].0\n\n# Request [same major].[same minor].[older patch].[older tweak]\n\n# Request [same major].[same minor].[older patch].[same tweak]\n\n# Request [same major].[same minor].[older patch].[newer tweak]\n\n# Request [same major].[same minor].[same patch].0\n\n# Request [same major].[same minor].[same patch].[older tweak]\n\n# Request [same major].[same minor].[same patch].[same tweak]\n\n# Request [same major].[same minor].[same patch].[newer tweak]\n\n# Request [same major].[same minor].[newer patch].0\n\n# Request [same major].[same minor].[newer patch].[older tweak]\n\n# Request [same major].[same minor].[newer patch].[same tweak]\n\n# Request [same major].[same minor].[newer patch].[newer tweak]\n\n# Request [same major].[newer minor].0.0\n\n# Request [same major].[newer minor].0.[older tweak]\n\n# Request [same major].[newer minor].0.[same tweak]\n\n# Request [same major].[newer minor].0.[newer tweak]\n\n# Request [same major].[newer minor].[older patch].0\n\n# Request [same major].[newer minor].[older patch].[older tweak]\n\n# Request [same major].[newer minor].[older patch].[same tweak]\n\n# Request [same major].[newer minor].[older patch].[newer tweak]\n\n# Request [same major].[newer minor].[same patch].0\n\n# Request [same major].[newer minor].[same patch].[older tweak]\n\n# Request [same major].[newer minor].[same patch].[same tweak]\n\n# Request [same major].[newer minor].[same patch].[newer tweak]\n\n# Request [same major].[newer minor].[newer patch].0\n\n# Request [same major].[newer minor].[newer patch].[older tweak]\n\n# Request [same major].[newer minor].[newer patch].[same tweak]\n\n# Request [same major].[newer minor].[newer patch].[newer tweak]\n\n# Request [newer major].0.0.0\n\n# Request [newer major].0.0.[older tweak]\n\n# Request [newer major].0.0.[same tweak]\n\n# Request [newer major].0.0.[newer tweak]\n\n# Request [newer major].0.[older patch].0\n\n# Request [newer major].0.[older patch].[older tweak]\n\n# Request [newer major].0.[older patch].[same tweak]\n\n# Request [newer major].0.[older patch].[newer tweak]\n\n# Request [newer major].0.[same patch].0\n\n# Request [newer major].0.[same patch].[older tweak]\n\n# Request [newer major].0.[same patch].[same tweak]\n\n# Request [newer major].0.[same patch].[newer tweak]\n\n# Request [newer major].0.[newer patch].0\n\n# Request [newer major].0.[newer patch].[older tweak]\n\n# Request [newer major].0.[newer patch].[same tweak]\n\n# Request [newer major].0.[newer patch].[newer tweak]\n\n# Request [newer major].[older minor].0.0\n\n# Request [newer major].[older minor].0.[older tweak]\n\n# Request [newer major].[older minor].0.[same tweak]\n\n# Request [newer major].[older minor].0.[newer tweak]\n\n# Request [newer major].[older minor].[older patch].0\n\n# Request [newer major].[older minor].[older patch].[older tweak]\n\n# Request [newer major].[older minor].[older patch].[same tweak]\n\n# Request [newer major].[older minor].[older patch].[newer tweak]\n\n# Request [newer major].[older minor].[same patch].0\n\n# Request [newer major].[older minor].[same patch].[older tweak]\n\n# Request [newer major].[older minor].[same patch].[same tweak]\n\n# Request [newer major].[older minor].[same patch].[newer tweak]\n\n# Request [newer major].[older minor].[newer patch].0\n\n# Request [newer major].[older minor].[newer patch].[older tweak]\n\n# Request [newer major].[older minor].[newer patch].[same tweak]\n\n# Request [newer major].[older minor].[newer patch].[newer tweak]\n\n# Request [newer major].[same minor].0.0\n\n# Request [newer major].[same minor].0.[older tweak]\n\n# Request [newer major].[same minor].0.[same tweak]\n\n# Request [newer major].[same minor].0.[newer tweak]\n\n# Request [newer major].[same minor].[older patch].0\n\n# Request [newer major].[same minor].[older patch].[older tweak]\n\n# Request [newer major].[same minor].[older patch].[same tweak]\n\n# Request [newer major].[same minor].[older patch].[newer tweak]\n\n# Request [newer major].[same minor].[same patch].0\n\n# Request [newer major].[same minor].[same patch].[older tweak]\n\n# Request [newer major].[same minor].[same patch].[same tweak]\n\n# Request [newer major].[same minor].[same patch].[newer tweak]\n\n# Request [newer major].[same minor].[newer patch].0\n\n# Request [newer major].[same minor].[newer patch].[older tweak]\n\n# Request [newer major].[same minor].[newer patch].[same tweak]\n\n# Request [newer major].[same minor].[newer patch].[newer tweak]\n\n# Request [newer major].[newer minor].0.0\n\n# Request [newer major].[newer minor].0.[older tweak]\n\n# Request [newer major].[newer minor].0.[same tweak]\n\n# Request [newer major].[newer minor].0.[newer tweak]\n\n# Request [newer major].[newer minor].[older patch].0\n\n# Request [newer major].[newer minor].[older patch].[older tweak]\n\n# Request [newer major].[newer minor].[older patch].[same tweak]\n\n# Request [newer major].[newer minor].[older patch].[newer tweak]\n\n# Request [newer major].[newer minor].[same patch].0\n\n# Request [newer major].[newer minor].[same patch].[older tweak]\n\n# Request [newer major].[newer minor].[same patch].[same tweak]\n\n# Request [newer major].[newer minor].[same patch].[newer tweak]\n\n# Request [newer major].[newer minor].[newer patch].0\n\n# Request [newer major].[newer minor].[newer patch].[older tweak]\n\n# Request [newer major].[newer minor].[newer patch].[same tweak]\n\n# Request [newer major].[newer minor].[newer patch].[newer tweak]\n",
        "Line" : 1112,
        "CharPositionInLine" : 67
      },
      "65" : {
        "Text" : "############################################################################\n\n##Test FIND_PACKAGE using sorting\n",
        "Line" : 1370,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 66
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/Exporter/CMakeLists.txt" : {
      "ObjectId" : "d25a2e74c6ca4f8e4d41ba9aa348c045645d877e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/FindLotsOfComponents.cmake" : {
      "ObjectId" : "5d959c5949ee6b96f3c12d7e8ef09053972a9208",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "7e41c96c9fc4e8e5b69b65b8c41cd2b07f92e04d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/FindRecursiveA.cmake" : {
      "ObjectId" : "a6d25dc4be21717a7b2c9fe485300bd3e9726d38",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/FindRecursiveB.cmake" : {
      "ObjectId" : "9e28f2ce9eb3b650a5674a84f80ad9c1553c74c0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/FindRecursiveC.cmake" : {
      "ObjectId" : "cd4400ca0054134e261373be438894adcee1c195",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/FindSomePackage.cmake" : {
      "ObjectId" : "746c08776d6f78a80cc373bbbbe35e9c4a9d78eb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/FindUpperCasePackage.cmake" : {
      "ObjectId" : "5e349da5d03da271a8e05fa022fc9448bf20350c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/FindVersionTestA.cmake" : {
      "ObjectId" : "98285938288b963ef722cfd7439e402fe24de624",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/FindVersionTestB.cmake" : {
      "ObjectId" : "1ebb82302aa24ff06373d57d85c9cf7f00e72526",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/FindVersionTestC.cmake" : {
      "ObjectId" : "450c2e914747518465ef28e8f9e6c7eda90e47e7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/FindVersionTestD.cmake" : {
      "ObjectId" : "9f2db72e4fe85124703c09078abe9f0ab9add616",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/SortLib-3.1.1/SortLibConfig.cmake" : {
      "ObjectId" : "c1f2088eb5ad14a983f8d592688709c7239192a7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/SortLib-3.1.1/SortLibConfigVersion.cmake" : {
      "ObjectId" : "fa927c7cb9effff25a7323d6e87a6887b660e6ee",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/SortLib-3.10.1/SortLibConfig.cmake" : {
      "ObjectId" : "3f3f659908fcc60bd620eb43f3d75c1dd3c4a887",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/SortLib-3.10.1/SortLibConfigVersion.cmake" : {
      "ObjectId" : "6f44c2dbac92006e918a0cdc95014321c80f643a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/SystemPackage/CMakeTestSystemPackageConfig.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/TApp.app/Contents/Resources/TAppConfig.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/TApp.app/Contents/Resources/cmake/tapp-config.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/TFramework.framework/Versions/A/Resources/CMake/TFrameworkConfig.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/TFramework.framework/Versions/A/Resources/tframework-config.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/cmake/SetFoundFALSEConfig.cmake" : {
      "ObjectId" : "ae6bd14540e006d3bbda86cd4c5cf5bf004cb83c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/cmake/SetFoundTRUEConfig.cmake" : {
      "ObjectId" : "19d071144d537eed23b20b5d5d9bef0fd896a9bb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/Bar/BarConfig.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/Bar/cmake/bar-config.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/Blub/BlubConfig.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/RecursiveA/recursivea-config.cmake" : {
      "ObjectId" : "eff4d4fd0695ae661c56ae08da4db4597e71652a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/TApp/TAppConfig.cmake" : {
      "ObjectId" : "5ba8d558586ae7620352ca158290c245fec70c34",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file that should not be found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/arch/Bar/BarConfig.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/arch/cmake/zot-4.0/zot-config-version.cmake" : {
      "ObjectId" : "822b4496612290f98ad8bf2ee081bcef8d1d81ae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/arch/cmake/zot-4.0/zot-config.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/arch/foo-1.2/CMake/FooConfig.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/arch/zot-3.1/zot-config-version.cmake" : {
      "ObjectId" : "31573b90a0309f1fc6273196d653a9cdebed12ad",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/arch/zot-3.1/zot-config.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/cmake/zot-3.1/zot-config-version.cmake" : {
      "ObjectId" : "e3e17de7c052181c0d836968823f6e3dea649c90",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Claim to be any version to test that CMAKE_IGNORE_PATH hides us.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/cmake/zot-3.1/zot-config.cmake" : {
      "ObjectId" : "2fbd525f3c07608c0106125ce80d1c10b2365cec",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/cmake/zot-4.0/zot-config-version.cmake" : {
      "ObjectId" : "822b4496612290f98ad8bf2ee081bcef8d1d81ae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/cmake/zot-4.0/zot-config.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/foo-1.2/CMake/FooConfig.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/foo-1.2/foo-config.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/suffix/test/SuffixTestConfig.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/suffix/test/SuffixTestConfigVersion.cmake" : {
      "ObjectId" : "b37bc8e2230afd36763899bdcd6aa3d3398f52e1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/zot-1.0/zot-config.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/zot-2.0/zot-config-version.cmake" : {
      "ObjectId" : "3b146642a70c217f96470f00ea97887fa9f7965b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/zot-2.0/zot-config.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/zot-3.0/zot-config-version.cmake" : {
      "ObjectId" : "a4d45a437da63e7520a0717452af818c2643c1f0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/zot-3.0/zot-config.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/zot-3.1/zot-config-version.cmake" : {
      "ObjectId" : "31573b90a0309f1fc6273196d653a9cdebed12ad",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/zot-3.1/zot-config.cmake" : {
      "ObjectId" : "deffa57294bea99110bd62ef794da4615c6a5d97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/zot/zot-config-version.cmake" : {
      "ObjectId" : "093776f98cdf67772ca2b1f7f0e42dcee4fc2c13",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This version should never, ever be used.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPackageTest/lib/zot/zot-config.cmake" : {
      "ObjectId" : "9168183604196f82acf069e99eec49a7a562c1b0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test config file that is unsuitable.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPatch/CMakeLists.txt" : {
      "ObjectId" : "541f5bd150145ef51f3890d885f798f9a7e8c48a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPatch/Test/CMakeLists.txt" : {
      "ObjectId" : "66c672c55d4e0b5ab9805531ac4cd7092936af9e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Is import target available ?\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Check Patch::patch imported location\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Calling twice should not fail\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/FindProtobuf/CMakeLists.txt" : {
      "ObjectId" : "1cdb2ae13bebc8fc9f937edae2f05581cb0a07a1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindProtobuf/Test/CMakeLists.txt" : {
      "ObjectId" : "bc89190b394db49db4b48900314fb8d9aa4f1c0d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPython/CMakeLists.txt" : {
      "ObjectId" : "639d29c65f42e11159e1c7f634498f62f24b1119",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPython/MultiplePackages/CMakeLists.txt" : {
      "ObjectId" : "5c85155bb5ea18a15b08718a97c1030e9b02a9ae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Must find Python 3\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FindPython/Python/CMakeLists.txt" : {
      "ObjectId" : "bebd23fc8213e4dd0075c4736818c50dbb5768ec",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPython/Python2/CMakeLists.txt" : {
      "ObjectId" : "9622b6fa643164f40ae1eea6df2f396c19db466d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPython/Python2Fail/CMakeLists.txt" : {
      "ObjectId" : "989688f552bcdd58be352d7d99c10bd2ff66c12f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPython/Python3/CMakeLists.txt" : {
      "ObjectId" : "cb86eae68d81bd2bcc9031c080b3d0964585f0d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindPython/Python3Fail/CMakeLists.txt" : {
      "ObjectId" : "cd46c886425de8996288a64e0db26208e0ac5aff",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindTIFF/CMakeLists.txt" : {
      "ObjectId" : "c4e0c6a7fd84fbb46c7e668eff31155f8fe3d240",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindTIFF/Test/CMakeLists.txt" : {
      "ObjectId" : "85453edbcf87b2241b9486fea605a9ea64878b1a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindThreads/C-only/CMakeLists.txt" : {
      "ObjectId" : "ab4ca0dddf0653ba24b3efcc78ad57ab262155d2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindThreads/CMakeLists.txt" : {
      "ObjectId" : "aa9499bd809dd8adcb038a73417e4c4ed76a562d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindThreads/CXX-only/CMakeLists.txt" : {
      "ObjectId" : "999312322ced31a2fb872207a40ac67503c8a50a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindVulkan/CMakeLists.txt" : {
      "ObjectId" : "46ce1c65eb74f9b3b95bee7e29ab20181eb32fa5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindVulkan/Test/CMakeLists.txt" : {
      "ObjectId" : "0b13d532093d6b0f5801255631bd6479b11209ce",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindXalanC/CMakeLists.txt" : {
      "ObjectId" : "7872929366b6a431195d2483bdd2b0d77eede161",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindXalanC/Test/CMakeLists.txt" : {
      "ObjectId" : "a8c2a0a8ad499a4aa83a11c5daae4dae90af2156",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindXercesC/CMakeLists.txt" : {
      "ObjectId" : "633f613e86e9dfebef4e0ed95d956562a609d3da",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FindXercesC/Test/CMakeLists.txt" : {
      "ObjectId" : "267c6a9076af5fbd8d6653937d5b721c045ba05a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/ForceInclude/CMakeLists.txt" : {
      "ObjectId" : "e2310543d954b9466f1e6cd679c50c5cda2b7c5e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make sure the proper compiler is in use.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Fortran/CMakeLists.txt" : {
      "ObjectId" : "52623d02861fc0c3ed0bbbf010cce42e9b069681",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We do not implement SHARED Fortran libs on AIX yet!\n\n# Workaround: Set LINKER_LANGUAGE to C, which uses 'xlc' and Fortran implicits.\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# g77 2.96 does not support shared libs on Itanium because g2c is not -fPIC\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Pick a module .def file with the properly mangled symbol name.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Intel plugin\n",
        "Line" : 32,
        "CharPositionInLine" : 47
      },
      "4" : {
        "Text" : "# test the C to Fortran interface module\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# if the name mangling is not found for a F90 compiler\n\n# print out some diagnostic stuff for the dashboard\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# print out some stuff to help debug on machines via cdash\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# if the id's match or the compilers are compatible, then\n\n# call the test_fortran_c_interface_module function\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# hack to make g77 work after CL has been enabled\n\n# as a language, cmake needs language specific versions\n\n# of these variables....\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# gnu and sunpro do not use the same flags here...\n\n# however if LDFLAGS is used to set -m64 it causes odd stuf\n\n# with the fortran build\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Tests/FortranC/CMakeLists.txt" : {
      "ObjectId" : "79c670d6ff3eee61d3bee4264ce6a37200169cf0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Skip this test for compilers not known to be compatible.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Wipe out all FortranCInterface information to ensure it re-runs.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test whether FortranCInterface checks see C flags.\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Test whether FortranCInterface checks see Fortran flags.\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/FortranModules/CMakeLists.txt" : {
      "ObjectId" : "d056b43798961d5c379b9a1fe85b3b8773922628",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# for CheckFortranSourceCompiles SRC_EXT\n",
        "Line" : 9,
        "CharPositionInLine" : 52
      },
      "1" : {
        "Text" : "# Build the external project separately using a custom target.\n\n# Make sure it uses the same build configuration as this test.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our build tree has a space, so the build tool supports spaces.\n\n# Test using modules from a path with spaces.\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Test module output directory if available.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/FortranModules/Executable/CMakeLists.txt" : {
      "ObjectId" : "de08d8605d7450332558630c0c0daf8bc4cf690a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FortranModules/External/CMakeLists.txt" : {
      "ObjectId" : "c90a0ffbe371d6027a161029d413b9b038e026e5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FortranModules/Library/CMakeLists.txt" : {
      "ObjectId" : "17438cafbbbf32ab4278e9f390c5e15441702d44",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test module output directory if available.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FortranModules/Subdir/CMakeLists.txt" : {
      "ObjectId" : "52683e58771c0996893ced39317b449c42ffb666",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FortranModules/Submodules/CMakeLists.txt" : {
      "ObjectId" : "ab8e0f9e53e5c1a7a5787a9265812363eda3e915",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The program units in this file consist of a module/submodule\n\n# tree represented by the following graph:\n\n#\n\n#        parent\n\n#          |\n\n#         / \\\n\n#        /   \\\n\n#    child   sibling\n\n#      |\n\n#  grandchild\n\n#      |\n\n#  GreatGrandChild\n\n#\n\n# where the parent node is a module and all other nodes are submodules.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FortranOnly/CMakeLists.txt" : {
      "ObjectId" : "59e6d592e8e3748684e58c1965f91c188eb33400",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# create a library with hello and world functions\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# create an executable that calls hello and world\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# create a custom command that runs FortranOnly1 and puts\n\n# the output into the file testfhello.txt\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# create a second executable FortranOnly2 that has\n\n# testfhello.txt has an source file so that it will\n\n# run the above custom command.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# create a custom target to check the content of testfhello.txt\n\n# by running the cmake script checktestf2.cmake\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# create a custom target that runs FortranOnly1 executable and creates\n\n# a file out.txt that should have hello world in it.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# make sure stuff is built in the right order\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# add a custom target that checks that out.txt has the correct\n\n# content\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Exclude this test on IBM XL for now because the check strangely\n\n# fails with 'ld: 0706-029 Use a number with the -H flag'.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Test generation of preprocessed sources.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Skip running this part of the test on certain platforms\n\n# until they are fixed.\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# OSX does not support preprocessing more than one architecture.\n",
        "Line" : 85,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Custom target to try preprocessing invocation.\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Remove bogus file some compilers leave behind.\n",
        "Line" : 96,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 14
    },
    "deps/src/cmake-3.13.4/Tests/FortranOnly/checksayhello.cmake" : {
      "ObjectId" : "5352290ab5edbd9e301d45d0c7731c8a4a2f1094",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FortranOnly/checktestf2.cmake" : {
      "ObjectId" : "f0e6be329121cd360e899df64a58c16f7172169a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/FortranOnly/test_preprocess.cmake" : {
      "ObjectId" : "29ebdace6057d3bb02750e7c98e0297d498122b6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Framework/CMakeLists.txt" : {
      "ObjectId" : "a313c2c03c856d72d8e6dc6317fb432747c05c7b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# fooBoth.h is listed as both public and private... (private wins...)\n\n# fooNeither.h is listed as neither public nor private...\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These are ignored on the Mac... and things are automatically placed in\n\n# their appropriate Framework sub-folder at build time. (And then the built\n\n# framework is copied recursively when it is installed.)\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# But they are required to be present so that installing a framework on other\n\n# other platforms will install the pieces of the framework without having to\n\n# duplicate install rules for the pieces of the framework.\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# test that framework post-build commands run\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Make a static library and apply the framework properties to it to verify\n\n# that everything still builds correctly. Xcode prior to version 5 does not\n\n# support static Frameworks.\n\n#\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/FunctionTest/CMakeLists.txt" : {
      "ObjectId" : "68da972c65232db24179032d77a18f5d986acbf3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a simple C only test case\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# test scope\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# test ARGC\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# test ARGN\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# test argument naming and raise scope\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# test recursion and return via set(... PARENT_SCOPE)\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# case test\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# test backing up command\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# var undef case\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Subdirectory scope raise.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Test function-scoped directory.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The parent scope sets in the subdir should be visible here.\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Reset test variables.\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Run test function.\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# The parent scope sets in the subdir should not be visible here.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Use the PROJECT_LABEL property: in IDEs, the project label should appear\n\n# in the UI rather than the target name. If this were a good test of the\n\n# property rather than just a smoke test, it would verify that the label\n\n# actually appears in the UI of the IDE... Or at least that the text appears\n\n# somewhere in the generated project files.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "deps/src/cmake-3.13.4/Tests/FunctionTest/SubDirScope/CMakeLists.txt" : {
      "ObjectId" : "c1a3cfb374a7aacf71c471fa64df1fd29670f86a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The above sets should not affect the current scope.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/FunctionTest/Util.cmake" : {
      "ObjectId" : "846abd78a3f06c76369683728aeb55e164d54178",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/GeneratorExpression/CMP0044/CMakeLists.txt" : {
      "ObjectId" : "309a8cc1ef7405b2fc911808b01bd942d35b0075",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/GeneratorExpression/CMakeLists.txt" : {
      "ObjectId" : "3d087048488aabcb06dea2a620e1df4390a13979",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This test is split into multiple parts as needed to avoid NMake command\n\n# length limits.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ordinarily, the 'invalidcontent' would cause an error, but\n\n# the '0' makes the AND abort early.\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Both Debug and Release should not be true when this is evaluated.\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prefix path to bypass its further conversion when being processed by\n\n# CMake as command-line argument\n",
        "Line" : 251,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Cover source file properties with generator expressions.\n\n## generate various source files\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# first include directory is useless but ensure list aspect is tested\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# first include directory is useless but ensure list aspect is tested\n",
        "Line" : 307,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Cover test properties with generator expressions.\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Tests/GeneratorExpression/check-common.cmake" : {
      "ObjectId" : "faf5d4f164c72910e4c6e42390690e6d16cc364b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/GeneratorExpression/check-part1.cmake" : {
      "ObjectId" : "41bcd6d9994e6f9f13354f28550d6a72af25dd42",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/GeneratorExpression/check-part2.cmake" : {
      "ObjectId" : "a1db5f63d588fd62a07ac4cb8ca0f8a82a6634fe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/GeneratorExpression/check-part3.cmake" : {
      "ObjectId" : "9014406c29aa6dc16618cae3b76d5d59c7151604",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/GeneratorExpression/check-part4.cmake" : {
      "ObjectId" : "f5d14dd456ed6a84d855366edee68d20ab37b8f1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/GeneratorExpression/check_object_files.cmake" : {
      "ObjectId" : "cfccd2961f5be28d57e1244268841d74a537057b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/GhsMulti/CMakeLists.txt" : {
      "ObjectId" : "6e15ba9a7f116f7f11bfac5dddadb8937e7f05ec",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/GhsMulti/ReturnNum/App/CMakeLists.txt" : {
      "ObjectId" : "2adbd4e3d071aa3c124fcc4d1085a678a9ff884e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/GhsMulti/ReturnNum/CMakeLists.txt" : {
      "ObjectId" : "7bcc5f96a5fd8105318ff52d06a03d4f459562d1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/GhsMulti/ReturnNum/Int/CMakeLists.txt" : {
      "ObjectId" : "44c5de1c5109c63efc3f52a41e34acfe865f5718",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/GhsMulti/ReturnNum/Lib/CMakeLists.txt" : {
      "ObjectId" : "9c822da56597e2bd968e33d7d6333fb0d9a2484c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/GhsMultiDuplicateSourceFilenames/CMakeLists.txt" : {
      "ObjectId" : "82a014bb7f4e1e62838e1be1a4713997ea37e32f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/GoogleTest/CMakeLists.txt" : {
      "ObjectId" : "21f8b8b8d9550433d17d9edc47279be013d21ec5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/GoogleTest/Test/CMakeLists.txt" : {
      "ObjectId" : "baf00d53fda80e9e90a2a0289dfb3bfa62ca9ebf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Simple test of defaults\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Same target, different arguments, so use test prefix and suffix to\n\n# differentiate from the above test cases\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search specific sources to get the test list. Include an empty file\n\n# to ensure they are handled correctly too.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Non-keyword form, auto-find sources\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Non-keyword form, explicitly specified sources. Allows a non-target to be\n\n# given for the executable.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/IPO/CMakeLists.txt" : {
      "ObjectId" : "6dabf86bbfd9586c0fba9fe843befaf530fb70e5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/ImportedSameName/A/CMakeLists.txt" : {
      "ObjectId" : "0a31b40e21eb51c69afb90178829c7111d5a80be",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/ImportedSameName/B/CMakeLists.txt" : {
      "ObjectId" : "d93032626ed50b76e2a97dead1d4ced1fd8f0960",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/ImportedSameName/CMakeLists.txt" : {
      "ObjectId" : "4292c123fc62b3fd90abda4de8fb6889e3200003",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/IncludeDirectories/CMP0021/CMakeLists.txt" : {
      "ObjectId" : "0b9aee899abc4864e1e9698a3321a5e0e011102f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/IncludeDirectories/CMakeLists.txt" : {
      "ObjectId" : "b7b8320bcfa2d9455d20d2ffdb3fdc8e9788e277",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Bullseye wrapper appears to break the -isystem effect.\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# default to testing with full path\n\n# some compilers can not handle the escape for directories\n\n# with spaces in them.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/IncludeDirectories/StandardIncludeDirectories/CMakeLists.txt" : {
      "ObjectId" : "dcbc56696b2128da2ec40878eaedbb3a118c2041",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Normally this variable should be set by a platform information module or\n\n# a toolchain file, but for purposes of this test we simply set it here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/IncludeDirectories/SystemIncludeDirectories/CMakeLists.txt" : {
      "ObjectId" : "20bd601965c512b29aa626862cb3353e16e44ca2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE_BUILD_TYPE does not work here for multi-config generators\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# add a target which has a relative system include\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add a target which consumes a relative system include\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/IncludeDirectories/TargetIncludeDirectories/CMakeLists.txt" : {
      "ObjectId" : "5b99ea7b3a3773cb13e930292b7fdc7d08c759ab",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test cycles\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Assuming the link order must be:\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Oops!.\n\n# As include directory order and link order are the same when using target_link_libraries, we have to\n\n# get the libgood includes in before the libbad includes.\n\n# We do that with this command:\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Test that the language generator expressions work\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/InterfaceLibrary/CMakeLists.txt" : {
      "ObjectId" : "3db210a5de62ab262dc8a53aa65883110a84f9ce",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add an interface target in a subdirectory that uses an imported interface.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Poison an imported interface with the same name as that in the subdir\n\n# to ensure that the transitive lookup occurs in the subdir.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ensure that 'item_real' is ordered in place of item_iface\n",
        "Line" : 44,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# This is not a dependency, so broken will not be built (and the error in\n\n# it will not be hit)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The target property CUSTOM will never be evaluated on the INTERFACE library.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/InterfaceLibrary/headerdir/CMakeLists.txt" : {
      "ObjectId" : "826a9ed9c04f60773627332e240e3db55b46475d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/InterfaceLibrary/ifacedir/CMakeLists.txt" : {
      "ObjectId" : "228715e756d870c2ea1b657ed827311da0b5eb82",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/InterfaceLibrary/libsdir/CMakeLists.txt" : {
      "ObjectId" : "4e529dfb114fdd224c666c65dfbe8ddcabd67580",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/InterfaceLinkLibraries/CMakeLists.txt" : {
      "ObjectId" : "9e14c440053e66aca863dd0794b0891ceb1b031d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/JCTest/CMakeLists.txt" : {
      "ObjectId" : "31dcc3abfad85edfe6c00666528862d872b90997",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Java/CMakeLists.txt" : {
      "ObjectId" : "0b8269bb7dd56d51c497f7eb71649090c1f17825",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# use listing file to specify sources\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use listing file to specify sources and specify output directory (issue #17316)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/JavaExportImport/BuildExport/CMakeLists.txt" : {
      "ObjectId" : "fa7e5016def75a206ca139e8ae7e717015a761de",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/JavaExportImport/CMakeLists.txt" : {
      "ObjectId" : "c70704a0453d6bf0b526bf7d94cea0b9fb6fc1af",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Wipe out the install tree to make sure the exporter works.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build the build exporter.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build and install the install exporter.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build and install the importer.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/JavaExportImport/Import/CMakeLists.txt" : {
      "ObjectId" : "13ec05dc4e53aa72b763fe37e5af0401d3c115b1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/JavaExportImport/InstallExport/CMakeLists.txt" : {
      "ObjectId" : "2923bebb2a332b6d0bbbbebc0523317bdc431849",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/JavaJavah/CMakeLists.txt" : {
      "ObjectId" : "071bf20d6331aeeb028395b53a870eadb688104a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# JNI support\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/JavaNativeHeaders/CMakeLists.txt" : {
      "ObjectId" : "7dc267942c5f1b81ff3ed6d89250f5c2c2d0fc1c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# JNI support\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Jump/CMakeLists.txt" : {
      "ObjectId" : "4c5ad303f1c887053398e324c8cafa0879bfc882",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Jump/Executable/CMakeLists.txt" : {
      "ObjectId" : "bc6731ff1418d9dc81fa55178a75a41d42497604",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Jump/Library/CMakeLists.txt" : {
      "ObjectId" : "1d9fed934f2434975eaeac7cf0dc75806d1b56ce",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Jump/Library/Shared/CMakeLists.txt" : {
      "ObjectId" : "a37299a7999ffe0b6cda286d0be040d41cd5a610",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Jump/Library/Static/CMakeLists.txt" : {
      "ObjectId" : "4ee39545a43db4b403a24afb48cc75ffc718809a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/LibName/CMakeLists.txt" : {
      "ObjectId" : "3ac125fb975aa30d036273135e6b073df95cba65",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this is a test to make sure that relative path\n\n# LIBRARY_OUTPUT_PATH and EXECUTABLE_OUTPUT_PATH work\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check with lib version\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/LinkDirectory/CMakeLists.txt" : {
      "ObjectId" : "c60de84e96f2762b79ee72e8fa487bbaafb12d35",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Put the subproject source tree in our build tree so it can refer to\n\n# link directories relative to its source.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build a library into the subproject source tree.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build a library into our build tree relative to the subproject build tree.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create a custom target to drive the subproject build.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add a step to wipe out the subproject executable after our libraries\n\n# change.  This is needed because the subproject cannot depend on them\n\n# directly because it does not know the full paths to the libraries.\n\n# (The purpose of this test is to check that link_directories works.)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make the subproject build after our targets.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Tests/LinkDirectory/External/CMakeLists.txt" : {
      "ObjectId" : "d2a1f9f77ace777820c49d62554925af4bdbf26b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test CMP0015 OLD behavior: -L../lib\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test CMP0015 NEW behavior: -L${CMAKE_CURRENT_SOURCE_DIR}/lib\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/LinkFlags/CMakeLists.txt" : {
      "ObjectId" : "4607035422b192abd41d944818759580a2d3244d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/LinkFlags/LinkerFlags/CMakeLists.txt" : {
      "ObjectId" : "4707f474cd749982ca0d38c178583edd817f6956",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/LinkFlags/LinkerFlagsConfig/CMakeLists.txt" : {
      "ObjectId" : "2854fe78b65ce9cd9206f2d2f9dcf28738190595",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/LinkLanguage/CMakeLists.txt" : {
      "ObjectId" : "b4e53925d630108a6dbaeeceecff5dc76a7aeddc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Export the target now to compute its link interface and implementation.\n\n# This tests that the link info is recomputed after the library is linked.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake should now automatically choose CXX for linking, so we need\n\n# not set the property:\n\n#set_property(TARGET LinkLanguage PROPERTY LINKER_LANGUAGE CXX)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/LinkLine/CMakeLists.txt" : {
      "ObjectId" : "6154dd46941f6f1967cc64f250258563778b509d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Makes sure that the library order as specified by the user are\n\n# unchanged by dependency analysis, etc.  libOne and libTwo are\n\n# dependent on each other. The link line should be -lOne -lTwo -lOne.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/LinkLineOrder/CMakeLists.txt" : {
      "ObjectId" : "78455e971222f777959f235e9fa983d42c581ad6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This tests ensures that the order of libraries are preserved when\n\n# they don't have dependency information, even if they are deep in the\n\n# dependency tree.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# NoDepC depends on NoDepA which depends on NoDepB. NoDepE and NoDepF\n\n# are dependent on each other (recursive dependency). However, CMake\n\n# has no information about these libraries except for the order they\n\n# are specified in One. We must make sure we don't lose that.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Similar situation as One, except at a different level of the\n\n# dependency tree. This makes sure that the order is presevered\n\n# everywhere in the graph.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/LinkStatic/CMakeLists.txt" : {
      "ObjectId" : "200d4e51c52d1dceb971197f3a135773db51f5ed",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Name the library both with a full path and as \"-lm\" to\n\n# activate the link type switching code for both cases.\n\n# If the second one links shared then the link will fail.\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Enable static linking.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set_property(TARGET LinkStatic PROPERTY LINK_SEARCH_END_STATIC 1) # insufficient\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/LoadCommand/CMakeCommands/CMakeLists.txt" : {
      "ObjectId" : "99b1aba82a44d5abd416cc373cc01c75d60e737b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/LoadCommand/CMakeLists.txt" : {
      "ObjectId" : "cd5b31030fb6f59a4512d54a9ea73b67d8e1f63b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set a definition\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# try to compile the command\n\n# make sure it is not already loaded\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if the compile was OK, try loading the command\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if the command loaded, execute the command\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# TEST_DEF is set by the loaded command cmTestCommand.c\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/LoadCommandOneConfig/CMakeCommands/CMakeLists.txt" : {
      "ObjectId" : "5ee2ed0f1ebf7f20c7caa4ff4d5968a68b774e0d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/LoadCommandOneConfig/CMakeLists.txt" : {
      "ObjectId" : "f2dc6f26faf3fe356ec3c7858905b44f9e04af0f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set a definition\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# try to compile the command\n\n# make sure it is not already loaded\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if the compile was OK, try loading the command\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if the command loaded, execute the command\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# TEST_DEF is set by the loaded command cmTestCommand.c\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/MFC/CMakeLists.txt" : {
      "ObjectId" : "62ff749fe6008d613935092aebca908a22e57131",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/MFC/try_compile/CMakeLists.txt" : {
      "ObjectId" : "8e5d746f617e631384f659afdca0e91268c5266e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# VS generators add this automatically based on the CMAKE_MFC_FLAG value,\n\n# but generators matching \"Make\" require:\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/MSManifest/CMakeLists.txt" : {
      "ObjectId" : "300cfa6bb471ffedb01613f4b175aad0b0985f41",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/MSManifest/Subdir/CMakeLists.txt" : {
      "ObjectId" : "11272bb9fa635601c990feeab35aa72eec516140",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/MSManifest/Subdir/check.cmake" : {
      "ObjectId" : "b7b68410bc279cc71e7b1678fef2cf895cd972dd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/MacRuntimePath/A/CMakeLists.txt" : {
      "ObjectId" : "bf937e6c9d1cda3ab54f725cf167c4bcb821bb95",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a shared library\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# a shared library with custom set @rpath\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# a framework library\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# another framework\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# executable to test a shared library dependency with install rpaths\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# executable to test a framework library dependency with install rpaths\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# executable to test a framework library dependency with build tree rpaths\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# executable to test a framework library dependency with build tree rpaths\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# executable to test a shared library dependency with build rpath\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# avoid linking by 'target_link_libraries' so CMake\n\n# will not be able to set correct RPATH automatically\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Tests/MacRuntimePath/B/CMakeLists.txt" : {
      "ObjectId" : "4317af6558734f20396c809947a36e2033ea2c1c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test link with rpath enabled targets\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# test link with rpath enabled library by filename\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/MacRuntimePath/CMakeLists.txt" : {
      "ObjectId" : "a3c6fd9a9c3de84ec4f8545e71c0dfffcbd05bca",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Wipe out the install tree to make sure the exporter works.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build and install the exporter.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build the importer.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/MacroTest/CMakeLists.txt" : {
      "ObjectId" : "6c6dfb62517674202e1296d96bc4243859d3ac6f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a simple C only test case\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# test ARGC\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# test ARGN\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# case test\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# test backing up command\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/MacroTest/context.cmake" : {
      "ObjectId" : "f7350d77136a097dcb651ab6ef9a31fd2192699f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/MakeClean/CMakeLists.txt" : {
      "ObjectId" : "fbd499534a50322d7f3ce23be404ca3c06e0c6cd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build the to-clean project.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get the set of files to check from the ToClean project.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check for the existence of the files.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Configure an executable to check that all the files are missing.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# After the executable builds, clean the files.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/MakeClean/ToClean/CMakeLists.txt" : {
      "ObjectId" : "d0e24cefe367417f01ab5860ef7cd4a1757ee17a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build a simple project.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# List some build-time-generated files.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create a file that must be registered for cleaning.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create a custom command whose output should be cleaned.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Create a custom command whose output should be cleaned, but whose name\n\n# is not known until generate-time\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Configure a file listing these build-time-generated files.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Tests/MathTest/CMakeLists.txt" : {
      "ObjectId" : "fe79e1d211de341070a2503d65a1576187d44851",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Expression test\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Avoid the test with negative result and hexadecimal formatting\n\n# therefore more tests with a negative result\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/MissingInstall/CMakeLists.txt" : {
      "ObjectId" : "365b31f62aef2edfac26450f1e62ea4fbc110928",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Skip the dependency that causes a build when installing.  This\n\n# avoids infinite loops when the post-build rule below installs.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/MissingInstall/ExpectInstallFail.cmake" : {
      "ObjectId" : "3d677bf72c6c54436bdc45e66dd9c25d0834e38f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/MissingSourceFile/CMakeLists.txt" : {
      "ObjectId" : "a7206c897e7f0038f84ba869a515c0fc0a941352",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/CheckIPOSupported-C/CMakeLists.txt" : {
      "ObjectId" : "4a41a988d913d8fbf33f7ea590a22705b1118e49",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/CheckIPOSupported-CXX/CMakeLists.txt" : {
      "ObjectId" : "1bb2b8496dce7fabe46144b2fe66a612f6ef0756",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/CheckIPOSupported-Fortran/CMakeLists.txt" : {
      "ObjectId" : "3872b567b67c176da8bb9bdfaff9a7215db8af5f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/CheckTypeSize/CMakeLists.txt" : {
      "ObjectId" : "16989fe23fdaac464ee23543468223a1517b3d86",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check C types\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check CXX types\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/Module/ExternalData/CMakeLists.txt" : {
      "ObjectId" : "737e17a68d7c624e30f4d5adfed51949fe35a2c7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# clean test\n",
        "Line" : 19,
        "CharPositionInLine" : 49
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Module/ExternalData/Data1Check.cmake" : {
      "ObjectId" : "f60c2094dd135ea80abc4f6b848d2128ee7e7f41",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/ExternalData/Data2/CMakeLists.txt" : {
      "ObjectId" : "c5b79ac05ad5706ed8a0d87e0f5da856237fed25",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/ExternalData/Data2/Data2Check.cmake" : {
      "ObjectId" : "d5b0c7b68c8dacee7a33ca4c8919796535d94776",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/ExternalData/Data3/CMakeLists.txt" : {
      "ObjectId" : "a7c2b6e0689b0ea9ce6c0774c02d66967b39da57",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/ExternalData/Data3/Data3Check.cmake" : {
      "ObjectId" : "de9883948de855d43dc60c88f35ab5c170504ba9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Verify that the 'Data' object was found in the second store location left\n\n# from Data1 target downloads and that the 'Other' object was downloaded to\n\n# our first store location.  Neither object should exist in the other store.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Module/ExternalData/Data4/CMakeLists.txt" : {
      "ObjectId" : "ac977fb6d11ff861b81d198b171bcd97bbea547d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# All objects already in stores!\n",
        "Line" : 4,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Module/ExternalData/Data4/Data4Check.cmake" : {
      "ObjectId" : "e614cc4e3678c83b46f825706829b621377b76a2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Verify that the 'Data' object was found in the second store location left\n\n# from Data1 target downloads and that the 'Other' object was found in the\n\n# first store location left from Data3 target downloads.  Neither object\n\n# should exist in the opposite store.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Module/ExternalData/Data5/CMakeLists.txt" : {
      "ObjectId" : "ea67f05af3ea0ac8942bd090a83492b904980df7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test adding the same data file in multiple tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Module/ExternalData/Data5/Data5Check.cmake" : {
      "ObjectId" : "4dea9a4879a7ada472797c19668de321fdfc4965",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/ExternalData/DataNoSymlinks/CMakeLists.txt" : {
      "ObjectId" : "d3df7fcf9f8c2e4ee41e031b510304ddd3aa8e7f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/ExternalData/DataNoSymlinks/DataNoSymlinksCheck.cmake" : {
      "ObjectId" : "2be3571ff2ee4aafff4e183b3d121a1d966b8d04",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/ExternalData/MyScript1.cmake" : {
      "ObjectId" : "242c64d9f6bb7dc356ca83db3bdc2f7027830276",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/FindDependency/CMakeLists.txt" : {
      "ObjectId" : "dcb998a4b369b88d587f36787dcb1deec1783c4b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/FindDependency/packages/Pack1/Pack1Config.cmake" : {
      "ObjectId" : "ff533c2a006fa5b8d7588fbec12bd0c3dbc62fb3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/FindDependency/packages/Pack1/Pack1ConfigVersion.cmake" : {
      "ObjectId" : "dfb7b6c8477df9ee8fa8dda361b8030763023aae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/FindDependency/packages/Pack2/Pack2Config.cmake" : {
      "ObjectId" : "672288ec8cbdd0986fe721875f061fd3d98cc79e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/FindDependency/packages/Pack2/Pack2ConfigVersion.cmake" : {
      "ObjectId" : "42f58c05b23df79c9b49f62ca0609ba8bda57e64",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/FindDependency/packages/Pack3/Pack3Config.cmake" : {
      "ObjectId" : "25c32f3264db680ade52c6ee7985ac1500a1d2cc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/FindDependency/packages/Pack3/Pack3ConfigVersion.cmake" : {
      "ObjectId" : "870f7478ddb7205e596900f2734f41b038ffaef1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/FindDependency/packages/Pack4/Pack4Config.cmake" : {
      "ObjectId" : "62fddb1c581647d815e76d198fbd8cf3be48f438",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Actual version is 3.3. EXACT not propagated.\n",
        "Line" : 4,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Module/FindDependency/packages/Pack4/Pack4ConfigVersion.cmake" : {
      "ObjectId" : "ae982b0fffc6aa44281e62df25f504cb1df7365f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/FindDependency/packages/Pack5/Pack5Config.cmake" : {
      "ObjectId" : "1edda9aa8ee5c54950b4521645320e3afac0b680",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/FindDependency/packages/Pack5/Pack5ConfigVersion.cmake" : {
      "ObjectId" : "e944f9668a14dbc55211ac9b8b114adfcaa2a15d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/FindDependency/packages/Pack6/Pack6Config.cmake" : {
      "ObjectId" : "d6c85fb378a88a4bf3370849a5c0b3163d24fc2e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/FindDependency/packages/Pack6/Pack6ConfigVersion.cmake" : {
      "ObjectId" : "0dd00d22e9e287f6ed06cae72ad93a26cf035eb8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Module/WriteCompilerDetectionHeader/CMakeLists.txt" : {
      "ObjectId" : "45bb2290b78361563c7bf5b0c50aa7ee5e380045",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Only run the compiler detection header test for compilers with\n\n# detailed features tables, not just meta-features\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# False for C++98 mode.\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# for msvc the compiler version determines which c++11 features are available.\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MSVC has only one mode.\n",
        "Line" : 151,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# Since GNU 4.7\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Since GNU 4.4\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# test for ALLOW_UNKNOWN_COMPILERS\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# use a compiler does not match the current one,\n\n# so one always hits the fallback code\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# intentionally abuse the TEST_NULLPTR variable: this will only work\n\n# with the fallback code.\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# test for BARE_FEATURES\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Tests/ModuleDefinition/CMakeLists.txt" : {
      "ObjectId" : "e49ebea529c6c1b11e9ae83258b6974d51456fc1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test .def file source recognition for DLLs.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test generated .def file.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test /DEF:<file> flag recognition for VS.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Test .def file source recognition for EXEs.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Test linking to the executable.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/NewlineArgs/CMakeLists.txt" : {
      "ObjectId" : "7551601024e738575567401dd402a04a76aff313",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a simple CXX only test case\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/ObjC++/CMakeLists.txt" : {
      "ObjectId" : "5ba5db2ed07b555c75b48347e0f8d6b1e1662d50",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a simple objc++ test case that uses Cocoa framework\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/ObjectLibrary/A/CMakeLists.txt" : {
      "ObjectId" : "c185d7521654606ec15542322dc096e08c6963b1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add -fPIC so objects can be used in shared libraries.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Remove the custom command output to be sure it runs in an\n\n# incremental test.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/ObjectLibrary/B/CMakeLists.txt" : {
      "ObjectId" : "ecace4fce97a1017680d46085d6982c3b3e7a1a1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add -fPIC so objects can be used in shared libraries.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/ObjectLibrary/CMakeLists.txt" : {
      "ObjectId" : "4bffd1221dd07a2b7d94058ccd3546bbd3a0d9ac",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Xcode does not seem to support targets without sources.\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Test static library without its own sources.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test module definition file to export object library symbols in the test\n\n# below if the platform needs and supports it.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Test shared library without its own sources.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Test executable without its own sources.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Test target-level dependencies of executable without sources.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Tests/ObjectLibrary/ExportLanguages/CMakeLists.txt" : {
      "ObjectId" : "22c92a7f3cc121c8c756030e26e5c601ec9e37f4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Verify that object library languages are propagated.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/ObjectLibrary/ExportLanguages/ExportLanguagesTest/CMakeLists.txt" : {
      "ObjectId" : "fc8dd2b78a75e5392448ceb9e5963af0a9c70018",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/OutDir/CMakeLists.txt" : {
      "ObjectId" : "823ab0864b512c3f6c6649e7831182fac7d85269",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/OutDir/OutDir.cmake" : {
      "ObjectId" : "a1f13e7cbd89bfb76774da93e2437814655df66d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/OutName/CMakeLists.txt" : {
      "ObjectId" : "f024defc21eaf6879c34a7db15b6eeb824564d33",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/OutOfBinary/CMakeLists.txt" : {
      "ObjectId" : "f50536e704787d22cac659e179a0ebcab82b90cb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/OutOfSource/CMakeLists.txt" : {
      "ObjectId" : "4687882aa92672ff9db8e080170bd30762a6dafc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a simple test case\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/OutOfSource/OutOfSourceSubdir/CMakeLists.txt" : {
      "ObjectId" : "76a93d24a7e24ff904f78a7d5b3990642996b1f1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Construct a source file outside the tree whose full path is close to\n\n# the path length limit.  This will cause the full path to the object\n\n# file in the build tree to exceed the maximum path length which will\n\n# test cmLocalGenerator::CreateSafeUniqueObjectFileName.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Test giving the generator a custom limit.\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Use a separate variable for computation.\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# VS adds \"OutOfSource/SubDir/OutOfSourceSubdir/../../../\" to the\n\n# path of the source file for no good reason.  Reduce the length\n\n# limit by 46 characters to account for it.  It should still be long\n\n# enough to require special object file name conversion.\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Ninja imposes a maximum path component count of 30.  Permit more\n\n# path components in the source path.\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# MAXPATH less 25 for last /and/deeper/simple.cxx part and small safety\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Watcom WMake seems to have problems with long command lines.  Just\n\n# disable this part of the test until it is resolved.\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# test getting a definition from a subdir\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Tests/OutOfSource/SubDir/CMakeLists.txt" : {
      "ObjectId" : "e18dbb96c597772fad89d7148b12ceeaa87a4112",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# subdir to an out of source and out of binary directory\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# subdir to a sibling dir\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/PDBDirectoryAndName/CMakeLists.txt" : {
      "ObjectId" : "6d8d6cc003202665c09198169084388f8d31b69a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make sure the proper compiler is in use.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Intel 11.1 does not support /Fd but Intel 14.0 does.\n\n# TODO: Did a version in between these add it?\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Clang/C2 does not produce pdb files for static libraries\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check that PDB files actually appear where expected.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Skip per-configuration subdirectory if the value contained\n\n# a generator expression.\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/PDBDirectoryAndName/check_pdbs.cmake" : {
      "ObjectId" : "89cdb3c72a8afb9c176739e934d1a398b082307e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/PerConfig/CMakeLists.txt" : {
      "ObjectId" : "7f461b0ecbd330790d673dfda12dea3ce4191e35",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Targets with per-configuration names.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/PerConfig/perconfig.cmake" : {
      "ObjectId" : "5286307a0977e7e6efd285aa0cdf6bc5f71abb3b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Print values for human reference.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Verify that file names match as expected.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Verify that the implementation files are named correctly.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/Plugin/CMakeLists.txt" : {
      "ObjectId" : "227d990af2887dc47cc88852b5656357cf181693",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need proper C++98 support from the compiler\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test per-target output directory properties.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We need the dynamic loader support from KWSys to load the plugin in\n\n# the executable.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Configure the location of plugins.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We need to include headers from the source tree and configured\n\n# headers in the build tree.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Clang/C2 in C++98 mode cannot properly handle some of MSVC headers\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create an executable that exports an API for use by plugins.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Test placing exe import library in unique directory.\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Create a plugin that uses the API provided by the executable.\n\n# This module \"links\" to the executable to use the symbols.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Verify that targets export with proper IMPORTED SONAME properties.\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# TODO:\n\n#  - create a plugin that links to a static lib\n\n#  - create a plugin that links to a shared lib\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "deps/src/cmake-3.13.4/Tests/Plugin/PluginTest/CMakeLists.txt" : {
      "ObjectId" : "5626dbcf7d7d3d94310b89e59bc526258bd95531",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Parse the binary to check for SONAME if possible.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Plugin/check_mod_soname.cmake" : {
      "ObjectId" : "eeededa6a6268d247551872439a73c978506182c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Policy0002/A/CMakeLists.txt" : {
      "ObjectId" : "cee6422a9ab2d01031b4377a07076809cfcc6d4f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Policy0002/CMakeLists.txt" : {
      "ObjectId" : "0f6d3319a7b6020800950ced1ff06c8e05991fe8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/PolicyScope/Bar.cmake" : {
      "ObjectId" : "cf1904c48adfee2c56ef3cf5954a40a7fa5a51a6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make sure a policy set differently by our includer is now correct.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test allowing the top-level file to not have cmake_minimum_required.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/PolicyScope/CMakeLists.txt" : {
      "ObjectId" : "353842bc48889ba4cdbdeb485c7c1f29241fa068",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# No cmake_minimum_required(VERSION), it's in FindFoo.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Helper function to report results.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Test using a development framework that sets policies for us.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Policy CMP0011 should not be set at this point.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Put the test modules in the search path.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The included file should set policies for us.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check policies set by the package.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Make sure an included file cannot change policies.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Allow the included file to change policies.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Test function and macro policy recording.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Create the functions in an isolated scope in which we change policies.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Change CMP0002\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# CMP0002 should be changed when this function is invoked\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# The undocumented PARENT_SCOPE option sees the caller's setting.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Unset CMP0002\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# CMP0002 should be unset when this macro is invoked\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# The undocumented PARENT_SCOPE option sees the caller's setting.\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Setting the policy should work here and also in the caller.\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# CMP0002 should still be NEW in this context.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Check the recorded policies\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# The macro should have changed CMP0002.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Test CMAKE_POLICY_DEFAULT_CMP<NNNN> variable.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# ignored\n\n# honored\n\n# honored\n\n# noop\n",
        "Line" : 95,
        "CharPositionInLine" : 40
      },
      "23" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Dummy executable so the project can build and run.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "deps/src/cmake-3.13.4/Tests/PolicyScope/FindFoo.cmake" : {
      "ObjectId" : "5b441e20ecf1b3df60351410389129cc6f3ee746",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/PositionIndependentTargets/CMakeLists.txt" : {
      "ObjectId" : "e79f3b74b7137d0efaef762f4dff6508a4dd98dd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For pic_test.h\n",
        "Line" : 8,
        "CharPositionInLine" : 51
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/PositionIndependentTargets/global/CMakeLists.txt" : {
      "ObjectId" : "1d662f8ea26d59df7f37e9269a950bf31c76b337",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/PositionIndependentTargets/interface/CMakeLists.txt" : {
      "ObjectId" : "65f3b767ed87d0f25d948f4f35129bed6000a2b6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/PositionIndependentTargets/targets/CMakeLists.txt" : {
      "ObjectId" : "4724c854a9eb469211304a886cb4555a6a626977",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/PreOrder/CMakeLists.txt" : {
      "ObjectId" : "8b4c43954b359d886ce0986ad6411845c9d5b494",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a simple test case\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/PreOrder/Library/CMakeLists.txt" : {
      "ObjectId" : "effad96064f9af1205d44b9a6c0d577461a04935",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/PrecompiledHeader/CMakeLists.txt" : {
      "ObjectId" : "58f4863b40a9e1b0cc28dfe8946247ed60b6765f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make sure the proper compiler is in use.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compute a custom name for the precompiled header.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Choose between an explicit include path and using /I during\n\n# precompilation.  The /I form is used to test that the PCH is\n\n# actually used.  In practice the include path form would be used.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create a target that will use a precompiled header.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Setup flags on the target to create and use the precompiled header.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Setup dependencies for precompiled header creation and use.  The VS\n\n# IDE takes care of this automatically.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This source file creates the precompiled header as a side-effect.\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# These source files use the precompiled header.\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Tests/Preprocess/CMakeLists.txt" : {
      "ObjectId" : "8c2cdc9e77e73dcd2bfbb5945c0579a7ac13abe2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This test is meant both as a test and as a reference for supported\n\n# syntax on native tool command lines.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Determine the build tool being used.  Not all characters can be\n\n# escaped for all build tools.  This test checks all characters known\n\n# to work with each tool and documents those known to not work.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some tests below check the PP_* variables set above.  They are meant\n\n# to test the case that the build tool is at fault.  Other tests below\n\n# check the compiler that will be used when the compiler is at fault\n\n# (does not work even from a command shell).\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Construct a C-string literal to test passing through a definition on\n\n# the command line.  We configure the value into a header so it can be\n\n# checked in the executable at runtime.  The semicolon is handled\n\n# specially because it needs to be escaped in the COMPILE_DEFINITIONS\n\n# property value to avoid separating definitions but the string value\n\n# must not have it escaped inside the configured header.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Borland: ;\n\n# The Borland compiler will simply not accept a non-escaped semicolon\n\n# on the command line.  If it is escaped \\; then the escape character\n\n# shows up in the preprocessing output too.\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Borland, WMake: multiple spaces\n\n# The make tool seems to remove extra whitespace from inside\n\n# quoted strings when passing to the compiler.  It does not have\n\n# trouble passing to other tools, and the compiler may be directly\n\n# invoked from the command line.\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# VS: ,\n\n# Visual Studio will not accept a comma in the value of a definition.\n\n# The comma-separated list of PreprocessorDefinitions in the project\n\n# file seems to be parsed before the content of entries is examined.\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# MinGW: &\n\n# When inside -D\"FOO=\\\"a & b\\\"\" MinGW make wants -D\"FOO=\\\"a \"&\" b\\\"\"\n\n# but it does not like quoted ampersand elsewhere.\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# MinGW: |\n\n# When inside -D\"FOO=\\\"a | b\\\"\" MinGW make wants -D\"FOO=\\\"a \"|\" b\\\"\"\n\n# but it does not like quoted pipe elsewhere.\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Borland, NMake, MinGW: ^\n\n# When inside -D\"FOO=\\\"a ^ b\\\"\" the make tools want -D\"FOO=\\\"a \"^\" b\\\"\"\n\n# but do not like quoted carrot elsewhere.  In NMake the non-quoted\n\n# syntax works when the flags are not in a make variable.\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Borland, MinGW: < >\n\n# Angle-brackets have funny behavior that is hard to escape.\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# MSVC cl, Intel icl: %\n\n# When the cl compiler is invoked from the command line then % must\n\n# be written %% (to distinguish from %ENV% syntax).  However cl does\n\n# not seem to accept the syntax when it is invoked from inside a\n\n# make tool (nmake, mingw32-make, etc.).  Instead the argument must\n\n# be placed inside a response file.  Then cl accepts it because it\n\n# parses the response file as it would the normal windows command\n\n# line.  Currently only NMake supports running cl with a response\n\n# file.  Supporting other make tools would require CMake to generate\n\n# response files explicitly for each object file.\n\n#\n\n# When the icl compiler is invoked from the command line then % must\n\n# be written just '%'.  However nmake requires '%%' except when using\n\n# response files.  Currently we have no way to affect escaping based\n\n# on whether flags go in a response file, so we just have to skip it.\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# XL: )(\n\n# The XL compiler cannot pass unbalanced parens correctly to a tool\n\n# it launches internally.\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# General: \\\"\n\n# Make tools do not reliably accept \\\\\\\" syntax:\n\n#  - MinGW and MSYS make tools crash with \\\\\\\"\n\n#  - Borland make actually wants a mis-matched quote \\\\\"\n\n#    or $(BACKSLASH)\\\" where BACKSLASH is a variable set to \\\\\n\n#  - VS IDE gets confused about the bounds of the definition value \\\\\\\"\n\n#  - NMake is okay with just \\\\\\\"\n\n#  - The XL compiler does not re-escape \\\\\\\" when launching an\n\n#    internal tool to do preprocessing .\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# General: #\n\n# MSVC will not accept a # in the value of a string definition on the\n\n# command line.  The character seems to be simply replaced by an\n\n# equals =.  According to \"cl -help\" definitions may be specified by\n\n# -DMACRO#VALUE as well as -DMACRO=VALUE.  It must be implemented by a\n\n# simple search-and-replace.\n\n#\n\n# The Borland compiler will parse both # and \\# as just # but the make\n\n# tool seems to want \\# sometimes and not others.\n\n#\n\n# Unix make does not like # in variable settings without extra\n\n# escaping.  This could probably be fixed but since MSVC does not\n\n# support it and it is not an operator it is not worthwhile.\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Compose the final test string.\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Function-style macro command-line support:\n\n#   - Borland does not support\n\n#   - MSVC does not support\n\n#   - Watcom does not support\n\n#   - GCC supports\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Too few platforms support this to bother implementing.\n\n# People can just configure headers with the macros.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Construct a sample expression to pass as a macro definition.\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Watcom does not support - or / because it parses them as options.\n",
        "Line" : 179,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Inform the test if the debug configuration is getting built.\n\n# The NDEBUG definition takes care of this for release.\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Inform the test if it built from Xcode.\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Test old-style definitions.\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Make sure old-style definitions are converted to directory property.\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Set some definition properties.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Treat RelWithDebInfo and MinSizeRel as Release to avoid having\n\n# an exponentional matrix of inclusions and exclusions of defines\n",
        "Line" : 213,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Add definitions with values.\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Try reading and writing the property value to ensure the string is\n\n# preserved.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Helper target for running test manually in build tree.\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Configure the header file with the desired string value.\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "deps/src/cmake-3.13.4/Tests/Properties/CMakeLists.txt" : {
      "ObjectId" : "a26306122e297598ff8b232cf1523fa4b501a286",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a simple CXX only test case\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# these first three tests really test both properties and the management of\n\n# cmSourceFile objects by CMake.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# test properties on a build tree file that is relative (yuck)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# test properties on a headerfile in the source tree\n\n# accessed without an extension (also yuck)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# test properties on a relative source that is not generated\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# test generic property interfaces\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# test the target property\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# test APPEND and APPEND_STRING set_property()\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# test get_property SET\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# test unsetting a property\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# test the target SOURCES property\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# test CACHE properties\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "deps/src/cmake-3.13.4/Tests/Properties/SubDir2/CMakeLists.txt" : {
      "ObjectId" : "377dc830ef2ac26e4768893b5d79a145a6cd82a6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Qt4And5Automoc/CMakeLists.txt" : {
      "ObjectId" : "ad74961d9f98ac2d8afb8a751d9301fe7554f5b9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Qt4Autogen/CMakeLists.txt" : {
      "ObjectId" : "818e88813056e74b9c17b141a43663a86975cfa2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set Qt test version and include the Autogen test macros\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt4 only tests\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Common tests\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/Qt4Deploy/CMakeLists.txt" : {
      "ObjectId" : "c73a38c0fc88a9bc06925e335e6877deb109005f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# note: installing debug Qt libraries from a Qt installation configured with\n\n# -debug-and-release not yet supported (very low priority).\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# install the Qt4 app with qsqlite plugin\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# test depends on standard qsqlite plugin\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# test the deployed Qt application\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# custom target to install and test the installation at build time\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/Qt4Targets/CMakeLists.txt" : {
      "ObjectId" : "2ca11e40be6d37c43a204f8590ed8b6ea99429cc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Qt4 moc does not support utf8 paths in _parameter files generated by\n\n# qt4_wrap_cpp and qt4_generate_moc\n\n# https://bugreports.qt.io/browse/QTBUG-35480\n\n# Do a simple check if there is are non ASCII character in the build path\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ensure that the timestamp will change.\n",
        "Line" : 67,
        "CharPositionInLine" : 57
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/Qt4Targets/IncrementalMoc/CMakeLists.txt" : {
      "ObjectId" : "65e2b64bfcd2a75b44e79f1eccd8b5bd5e87e58c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Qt5Autogen/CMakeLists.txt" : {
      "ObjectId" : "527e5ff8e41bc675cc36e954e63a4d7bfe5d6a68",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set Qt test version and include the Autogen test macros\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Common tests\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/QtAutoUicInterface/CMakeLists.txt" : {
      "ObjectId" : "3ea12943ac50efb2f845d62e0dea9b57503f50df",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# BEGIN Upstream\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# END upstream\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/AutogenTest.cmake" : {
      "ObjectId" : "3969a89314525eb052a65846973fb1160756b7fc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tell find_package(Qt5) where to find Qt.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt macros\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Qt macros\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Get Qt compile features\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/CMakeLists.txt" : {
      "ObjectId" : "073c5fdeffc4e78d83844cabc564adc4511e7b4b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tell find_package(Qt5) where to find Qt.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include this directory before using the UseQt4 file.\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# -- Test\n\n# RCC only\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -- Test\n\n# RCC empty\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -- Test\n\n# UIC only\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -- Test\n\n# Add not_generated_file.qrc to the source list to get the file-level\n\n# dependency, but don't generate a c++ file from it.  Disable the AUTORCC\n\n# feature for this target.  This tests that qrc files in the sources don't\n\n# have an effect on generation if AUTORCC is off.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Pass Qt compiler features to targets that don't link against Qt\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -- Test\n\n# When a file listed in a .qrc file changes the target must be rebuilt\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Get name and timestamp of the output binary\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Sleep, touch regular qrc input file, rebuild and compare timestamp\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Ensure that the timestamp will change.\n",
        "Line" : 107,
        "CharPositionInLine" : 55
      },
      "11" : {
        "Text" : "# Sleep, update regular qrc file, rebuild and compare timestamp\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Ensure that the timestamp will change.\n",
        "Line" : 118,
        "CharPositionInLine" : 55
      },
      "13" : {
        "Text" : "# Sleep, touch regular qrc newly added input file, rebuild and compare timestamp\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Ensure that the timestamp will change.\n",
        "Line" : 129,
        "CharPositionInLine" : 55
      },
      "15" : {
        "Text" : "# Sleep, touch generated qrc input file, rebuild and compare timestamp\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Ensure that the timestamp will change.\n",
        "Line" : 140,
        "CharPositionInLine" : 55
      },
      "17" : {
        "Text" : "# Sleep, update generated qrc file, rebuild and compare timestamp\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Ensure that the timestamp will change.\n",
        "Line" : 151,
        "CharPositionInLine" : 55
      },
      "19" : {
        "Text" : "# Sleep, touch generated qrc newly added input file, rebuild and compare timestamp\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Ensure that the timestamp will change.\n",
        "Line" : 162,
        "CharPositionInLine" : 55
      },
      "21" : {
        "Text" : "# -- Test\n\n# Ensure a repeated build succeeds when a header containing a QObject changes\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Get name and timestamp of the output binary\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Change file content and rebuild\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Compare timestamps\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# -- Test\n\n# Test for SKIP_AUTOMOC and SKIP_AUTOGEN on an AUTOMOC enabled target\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# AUTOMOC enabled only\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# AUTOMOC and AUTOUIC enabled\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# -- Test\n\n# Test for SKIP_AUTOUIC and SKIP_AUTOGEN on an AUTOUIC enabled target\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# AUTOUIC enabled\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# AUTOUIC and AUTOMOC enabled\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# -- Test\n\n# Test for SKIP_AUTORCC and SKIP_AUTOGEN on an AUTORCC enabled target\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# AUTORCC enabled\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# AUTORCC, AUTOUIC and AUTOMOC enabled\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# -- Test\n\n# Source files with the same basename in different subdirectories\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# -- Test\n\n# Tests AUTOMOC with generated sources\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# -- Test\n\n# Tests various include moc patterns\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# -- Test\n\n# Tests various include moc patterns\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# -- Test\n\n# Tests Q_PLUGIN_METADATA json file change detection\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Ensure that the timestamp will change and change the json files\n",
        "Line" : 317,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Test custom macro\n",
        "Line" : 341,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# -- Test\n\n# Tests various .ui include directories\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# -- Test\n\n# Complex test case\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/CommonTests.cmake" : {
      "ObjectId" : "ef11ddf282a2c38598a93efba4306e1cb6761f47",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Autogen tests common for Qt4 and Qt5\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disabled for issue #18669\n\n#if(QT_TEST_VERSION GREATER 4)\n\n#  ADD_AUTOGEN_TEST(MocOsMacros)\n\n#endif()\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Rerun tests\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/DefinesTest/CMakeLists.txt" : {
      "ObjectId" : "3761dd84262b63e85b5d96614eaa179cffd9993b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Qt4 only definitions test\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/LowMinimumVersion/CMakeLists.txt" : {
      "ObjectId" : "a6ac338e3d4445a6111c4e4715a41c390e37a7d0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a low minimum version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/MacOsFW/CMakeLists.txt" : {
      "ObjectId" : "26d2019265f57d3871c65bc8c94a9b6b8d56dda3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# in CMake 3.0.0+\n",
        "Line" : 12,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : "# otherwise ON by default\n",
        "Line" : 13,
        "CharPositionInLine" : 31
      },
      "2" : {
        "Text" : "# in CMake 3.9+\n",
        "Line" : 16,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/MacOsFW/src/CMakeLists.txt" : {
      "ObjectId" : "a02be00c58844e435ea67c8162f6b887ed40a576",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/MacOsFW/test/CMakeLists.txt" : {
      "ObjectId" : "521c18450b3e4ad4e7aa51011af7ef52773a7e61",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/MocCMP0071/CMakeLists.txt" : {
      "ObjectId" : "a79f36eb7dcdc19f83ab0d3183ad3668ab32f467",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/MocCMP0071/NEW/CMakeLists.txt" : {
      "ObjectId" : "954fe3dc173c74282dbe87015ce69f6756605205",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# *Generate* files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/MocCMP0071/OLD/CMakeLists.txt" : {
      "ObjectId" : "68fa0670808b349dfba02e5d9d015c32bcd4f83c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# *Generate* files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate moc files externally\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/MocMacroName/CMakeLists.txt" : {
      "ObjectId" : "f0251a2a017371c9ba40fcde25bbd4da97811043",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test CMAKE_AUTOMOC_MACRO_NAMES and AUTOMOC_MACRO_NAMES\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/MocOnly/CMakeLists.txt" : {
      "ObjectId" : "a37a2ae7ce474e4f81b58bf63ab3fa225c62ce1e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test different Q_OBJECT position styles\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Test different moc_/.moc include positions\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/MocOptions/CMakeLists.txt" : {
      "ObjectId" : "f64b37b46f07269a870aa798a718aa46d7d5a3a0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test extra options passed to moc via AUTOMOC_MOC_OPTIONS\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/MocOsMacros/CMakeLists.txt" : {
      "ObjectId" : "e7b670e65b0a9245c924c9ed13c518d7cda6f667",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests if moc processes Q_OS_XXX macros\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# On some platforms (e.g. MAC) Q_OS_XXX requires moc to include moc_predefs.h\n\n# which is supported since Qt 5.8 and requires\n\n# CMAKE_CXX_COMPILER_PREDEFINES_COMMAND to be defined.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/MocSkipSource/CMakeLists.txt" : {
      "ObjectId" : "8d1fa6a5481448b76330ea4e2e27200869ee89d2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test for SKIP_AUTOMOC and SKIP_AUTOGEN on an AUTOMOC enabled target\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate header mocs manually\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When cpp files are skipped, the hpp won't be processed either,\n\n# unless they are mentioned in the sources - which they aren't.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# When hpp files are skipped, the cpp still get processed.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# AUTOMOC enabled only\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# AUTOMOC and AUTOUIC enabled\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/ObjectLibrary/CMakeLists.txt" : {
      "ObjectId" : "088a24c6115d939f890cedf02f95cdef45715bf5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Object library a defined in a subdirectory\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Object library b defined locally\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Executable with OBJECT library generator expressions\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/ObjectLibrary/a/CMakeLists.txt" : {
      "ObjectId" : "fe76ac32cfea875923c3a4077bddea24b846e19a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/Parallel/CMakeLists.txt" : {
      "ObjectId" : "9c64804078e990f77831281731439dc308771502",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test different values for AUTOGEN_PARALLEL\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/Parallel/parallel.cmake" : {
      "ObjectId" : "551bcd82bd63fd60586baff7215ae162ce3cb3ac",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/Parallel1/CMakeLists.txt" : {
      "ObjectId" : "9c0b4e5f45d3f6212878c5dbe59656768be433fb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test different values for AUTOGEN_PARALLEL\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/Parallel2/CMakeLists.txt" : {
      "ObjectId" : "74c38f1e44e6d881e2d286072c37916cc79525ab",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test different values for AUTOGEN_PARALLEL\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/Parallel3/CMakeLists.txt" : {
      "ObjectId" : "c7355312df819d9b94126b3331bd2a59ba7c706e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test different values for AUTOGEN_PARALLEL\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/Parallel4/CMakeLists.txt" : {
      "ObjectId" : "c012ccdf6074d1a43ab80225eb6b5b2bd774c9e4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test different values for AUTOGEN_PARALLEL\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/ParallelAUTO/CMakeLists.txt" : {
      "ObjectId" : "3fd3ebc59623fdd75ddd4337431b556702bea77f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test different values for AUTOGEN_PARALLEL\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/RccEmpty/CMakeLists.txt" : {
      "ObjectId" : "3b16edc430fe2a6d79b69a9f898828681f92621e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test AUTORCC on a .qrc file with no resource files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/RccOffMocLibrary/CMakeLists.txt" : {
      "ObjectId" : "7f7432e74e69a768736dec1f6d2d4b67a5994fb2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add not_generated_file.qrc to the source list to get the file-level\n\n# dependency, but don't generate a c++ file from it.  Disable the AUTORCC\n\n# feature for this target.  This tests that qrc files in the sources don't\n\n# have an effect on generation if AUTORCC is off.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Pass Qt compiler features to targets that don't link against Qt\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/RccOnly/CMakeLists.txt" : {
      "ObjectId" : "a65dee4d874e77b3f8fa37236d5396162315994a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test AUTORCC being enabled only\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/RccSkipSource/CMakeLists.txt" : {
      "ObjectId" : "f8a8032d6e4d68738afd3977f990da5ebca25634",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test for SKIP_AUTORCC and SKIP_AUTOGEN on an AUTORCC enabled target\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# AUTORCC enabled\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# AUTORCC, AUTOUIC and AUTOMOC enabled\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/RerunMocBasic/CMakeLists.txt" : {
      "ObjectId" : "6fad80c09b13cb16b28245032e1263675b7f959c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Dummy executable to generate a clean target\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Initial build\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get name of the output binary\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# - Acquire binary timestamps before the build\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# - Ensure that the timestamp will change\n\n# - Change header file content and rebuild\n\n# - Rebuild\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# - Acquire binary timestamps after the build\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# - Test if timestamps changed\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# - Acquire binary timestamps before the build\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# - Ensure that the timestamp would change\n\n# - Change nothing\n\n# - Rebuild\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# - Acquire binary timestamps after the build\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# - Test if timestamps changed\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/RerunMocBasic/MocBasic/CMakeLists.txt" : {
      "ObjectId" : "cec60a41598fc001f01e44f6a22e63f69d6dad26",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generated source file\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Write target name to text file\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/RerunMocPlugin/CMakeLists.txt" : {
      "ObjectId" : "b5287c198d9e8e3db0c603a7ef70352e0eefa800",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests Q_PLUGIN_METADATA and CMAKE_AUTOMOC_DEPEND_FILTERS\n\n# json file change detection\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dummy executable to generate a clean target\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Utility variables\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Initial build\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# - Ensure that the timestamp will change.\n\n# - Change the json files referenced by Q_PLUGIN_METADATA\n\n# - Rebuild\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# There's a bug in Ninja on Windows\n\n# https://gitlab.kitware.com/cmake/cmake/issues/16776\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# - Ensure that the timestamp will change.\n\n# - Change the json files referenced by A_CUSTOM_MACRO\n\n# - Rebuild\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# There's a bug in Ninja on Windows\n\n# https://gitlab.kitware.com/cmake/cmake/issues/16776\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/RerunMocPlugin/MocPlugin/CMakeLists.txt" : {
      "ObjectId" : "ca22aeb21bbfac4643ef66e171105522b489443d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable AUTOMOC\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/RerunRccConfigChange/CMakeLists.txt" : {
      "ObjectId" : "4dc24fec0e08e6297ead558d9d7a3da582ab7398",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests rcc rebuilding after a configuration change\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dummy executable to generate a clean target\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When a .qrc or a file listed in a .qrc file changes,\n\n# the target must be rebuilt\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Initial build\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# - Rebuild Release\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# - Rebuild Debug\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/RerunRccConfigChange/RccConfigChange/CMakeLists.txt" : {
      "ObjectId" : "3cddf5c31f6b82b5030f6002a285faaacd9350fb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable AUTORCC for all targets\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Initial resource files setup\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generated qrc file with dependency\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Target that uses a plain .qrc file\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target that uses a GENERATED .qrc file\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/RerunRccDepends/CMakeLists.txt" : {
      "ObjectId" : "4268de26e36438c4c526c6a2bf0a654b8af6f882",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests rcc rebuilding when a resource file changes\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dummy executable to generate a clean target\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When a .qrc or a file listed in a .qrc file changes,\n\n# the target must be rebuilt\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Initial build\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get name of the output binaries\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# - Acquire binary timestamps before the build\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# - Ensure that the timestamp will change\n\n# - Change a resource files listed in the .qrc file\n\n# - Rebuild\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# - Acquire binary timestamps after the build\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# - Test if timestamps changed\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# - Acquire binary timestamps before the build\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# - Ensure that the timestamp will change\n\n# - Change the .qrc file\n\n# - Rebuild\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# - Acquire binary timestamps after the build\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# - Test if timestamps changed\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# - Acquire binary timestamps before the build\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# - Ensure that the timestamp will change\n\n# - Change a newly added resource files listed in the .qrc file\n\n# - Rebuild\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# - Acquire binary timestamps after the build\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# - Test if timestamps changed\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# - Acquire binary timestamps before the build\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# - Ensure that the timestamp will change\n\n# - Change nothing\n\n# - Rebuild\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# - Acquire binary timestamps after the build\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# - Test if timestamps changed\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/RerunRccDepends/RccDepends/CMakeLists.txt" : {
      "ObjectId" : "0507e619e0ddb267dd6ba83e45dd5ab893f63bfb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable AUTORCC for all targets\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Initial resource files setup\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generated qrc file with dependency\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Target that uses a plain .qrc file\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target that uses a GENERATED .qrc file\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/StaticLibraryCycle/CMakeLists.txt" : {
      "ObjectId" : "0c2f98782a7c2156fbb9b6acfea6eff96be22945",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test AUTOMOC on cyclic static libraries\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Cyclic static libraries\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/TestMacros.cmake" : {
      "ObjectId" : "0e2718807e6789a42dcbd4c683a955cb86115619",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Autogen build options\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set in Tests/CMakeLists.txt\n",
        "Line" : 3,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# A macro to add a QtAutogen test\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On Windows there is no RPATH, so while Qt might be available for building,\n\n# the required dlls may not be in the PATH, so we can't run the executables\n\n# on that platform.\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Allow using qtx_wrap_cpp and qtx_generate_moc or not\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Do a simple check if there is are non ASCII character in the build path\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Qt4 moc does not support utf8 paths in _parameter files generated by\n\n# qtx_wrap_cpp\n\n# https://bugreports.qt.io/browse/QTBUG-35480\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# On windows qtx_wrap_cpp also fails in Qt5 when used on a path that\n\n# contains non ASCII characters\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/UicInterface/CMakeLists.txt" : {
      "ObjectId" : "e0421a23c9a99b25d4ad731ba514f3a7c11811e5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# BEGIN Upstream\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# END upstream\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/UicOnly/CMakeLists.txt" : {
      "ObjectId" : "f927f7297762c69e08d450ad8ac157ac8bbee0dd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test AUTOUIC being enabled only\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/UicSkipSource/CMakeLists.txt" : {
      "ObjectId" : "e94864d571db0e4af380161b49551a0a6af5b690",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test for SKIP_AUTOUIC and SKIP_AUTOGEN on an AUTOUIC enabled target\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# AUTOUIC enabled\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# AUTOUIC and AUTOMOC enabled\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/complex/Adir/CMakeLists.txt" : {
      "ObjectId" : "a1c36ffced703cfa7dbaaf6fcc43bfd3949ad3a0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/complex/Bdir/CMakeLists.txt" : {
      "ObjectId" : "d338763085a9b9ec8f21ca5d10c434704972b1cd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/complex/CMakeLists.txt" : {
      "ObjectId" : "a18cc042f7a1cbf8388b76111cf639cbc542e600",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -- Test: AUTOMOC AUTORCC AUTOUIC\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# enable relaxed mode so automoc can handle all the special cases:\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# create an executable and two library targets, each requiring automoc:\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Pass Qt compiler features to targets that don't link against Qt\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The -no-protection option disables the generation of include guards.  Verify\n\n# that setting the source file property has an effect by using this and\n\n# issue an error in the preprocessor in calwidget.cpp if the include guard\n\n# is defined.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The order is relevant here. B depends on A, and B headers depend on A\n\n# headers both subdirectories use CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE and we\n\n# test that CMAKE_AUTOMOC successfully reads the include directories\n\n# for the build interface from those targets. There has previously been\n\n# a bug where caching of the include directories happened before\n\n# extracting the includes to pass to moc.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/defines_test/CMakeLists.txt" : {
      "ObjectId" : "9ee9a228a643e50ec272e5fe70f49b8de5adc263",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/mocDepends/CMakeLists.txt" : {
      "ObjectId" : "6ea72be61a43a834e4fc65fe9e5f60368ba83fbf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -- Test dependency on header generated by a custom command\n\n#\n\n# The ORIGIN_autogen target must depend on the same *GENERATED* source files as\n\n# the ORIGIN target. This is a requirement to ensure that all files for the\n\n# ORIGIN target are generated before the ORIGIN_autogen target is built.\n\n#\n\n# This tests the dependency of the mocDepGenFile_autogen target of\n\n# mocDepGenFile to the source file GenFile.hpp, which is *GENERATED*\n\n# by a custom command.\n\n# If mocDepGenFile_autogen gets built *before* or in *parallel* to the\n\n# custom command, the build will fail. That's because GenFile.hpp,\n\n# which is required by mocDepGenFile_autogen, is only valid after the\n\n# custom command has been completed.\n\n#\n\n# The sleep seconds artificially increase the build time of the custom command\n\n# to simulate a slow file generation process that takes longer to run than\n\n# the build of the mocDepGenFile_autogen target.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -- Test dependency on header generating custom target\n\n#\n\n# The ORIGIN_autogen target must depend on the same user defined targets\n\n# as the ORIGIN target. This is a requirement to ensure that all files for the\n\n# ORIGIN target are generated before the ORIGIN_autogen target is built.\n\n#\n\n# This tests the dependency of the mocDepTarget_autogen target of\n\n# mocDepTarget to the utility target mocDepTargetUtil.\n\n# If mocDepTarget_autogen gets built *before* or in *parallel* to\n\n# mocDepTargetUtil, the build will fail. That's\n\n# because GenTarget.hpp, which is required by mocDepTarget_autogen,\n\n# is only valid after the mocDepTargetUtil build has been completed.\n\n#\n\n# The sleep seconds artificially increase the build time of mocDepTargetUtil\n\n# to simulate a slow utility target build that takes longer to run than\n\n# the build of the mocDepTarget_autogen target.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -- Test 3: Depend on generated linked library\n\n# The ORIGIN_autogen target must depend on the same linked libraries\n\n# as the ORIGIN target. This is a requirement to ensure that all files for the\n\n# ORIGIN target are generated before the ORIGIN_autogen target is built.\n\n#\n\n# This tests the dependency of the mocDepGenLib_autogen target of mocDepGenLib\n\n# to the user generated library SimpleLib, which mocDepGenLib links to.\n\n# If mocDepGenLib_autogen gets built *before* or in *parallel* to SimpleLib,\n\n# the build will fail. That's because simpleLib.hpp, which is required by\n\n# mocDepGenLib_autogen, is only valid after the SimpleLib build has been\n\n# completed.\n\n#\n\n# The sleep seconds artificially increase the build time of SimpleLib\n\n# to simulate a slow utility library build that takes longer to run than\n\n# the build of the mocDepGenLib_autogen target.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -- Test AUTOGEN_TARGET_DEPENDS with GENERATED file dependency\n\n#\n\n# This tests the dependency of the mocDepATDFile_autogen target of\n\n# mocDepATDTarget to the utility target mocDepATDFileUtil.\n\n# If mocDepATDFile_autogen gets built *before* or in *parallel* to\n\n# mocDepATDFileUtil, the build will fail. That's\n\n# because ATDFile.hpp, which is required by mocDepATDFile_autogen,\n\n# is only valid after the mocDepATDFileUtil build has been completed.\n\n#\n\n# The sleep seconds artificially increase the build time of\n\n# mocDepATDFileUtil to simulate a slow utility target build that takes\n\n# longer to run than the build of the mocDepATDFile_autogen target.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -- Test AUTOGEN_TARGET_DEPENDS with target dependency\n\n#\n\n# This tests the dependency of the mocDepATDTarget_autogen target of\n\n# mocDepATDTarget to the utility target mocDepATDTargetUtil.\n\n# If mocDepATDTarget_autogen gets built *before* or in *parallel* to\n\n# mocDepATDTargetUtil, the build will fail. That's\n\n# because ATDTarget.hpp, which is required by mocDepATDTarget_autogen,\n\n# is only valid after the mocDepATDTargetUtil build has been completed.\n\n#\n\n# The sleep seconds artificially increase the build time of\n\n# mocDepATDTargetUtil to simulate a slow utility target build that takes\n\n# longer to run than the build of the mocDepATDTarget_autogen target.\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/mocInclude/shared.cmake" : {
      "ObjectId" : "2ca28414d3a3134774c47049a200c95b88d03e54",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test moc include patterns\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate .moc file externally and enabled SKIP_AUTOMOC on the file\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generate .moc file externally from generated source file\n\n# and enabled SKIP_AUTOMOC on the source file\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Generate moc file externally and enabled SKIP_AUTOMOC on the header\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Custom target to depend on\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MOC_INCLUDE_NAME must be defined by the includer\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Common sources\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/mocIncludeRelaxed/CMakeLists.txt" : {
      "ObjectId" : "1ad6238dff3031ddea5d5722b3f4b8a40b8dd3dc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test moc include patterns\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Shared executable\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Relaxed only executable\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/mocIncludeStrict/CMakeLists.txt" : {
      "ObjectId" : "2cf0fedfd4ace745afb5fe5b5121deda1040be23",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test moc include patterns\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Shared executable\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/mocPlugin/CMakeLists.txt" : {
      "ObjectId" : "f80aa2934f9223ecf8a18c45ddd2b8bd749232a8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable automoc\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/mocRerun/CMakeLists.txt" : {
      "ObjectId" : "14b077b38c30fdddf5889b24085bdb5a2118d6ea",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generated source file\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Write target name to text file\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/rccDepends/CMakeLists.txt" : {
      "ObjectId" : "878ae5d35de605965f1d152dd793768b4769f182",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Dependency generated qrc file\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/sameName/CMakeLists.txt" : {
      "ObjectId" : "931e40f16678f0376641b1b52fd875dba4ddfcb0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test AUTOMOC and AUTORCC on source files with the same name\n\n# but in different subdirectories\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set different compression levels\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/QtAutogen/uicInclude/CMakeLists.txt" : {
      "ObjectId" : "56f76fb30e7b80974f93520ea95cbefe7d778378",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test uic include patterns\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/QtAutomocNoQt/CMakeLists.txt" : {
      "ObjectId" : "b26e471174beb54bd09afe893ea9bb2d8440f66f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/ReturnTest/CMakeLists.txt" : {
      "ObjectId" : "c4c606c58cd54946eb9d0b97d9d145ab87796278",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a simple C only test case\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# test simple return\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#test return in an if statement\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#test return in a foreach loop\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#test return in a while loop\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# check subdir return\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# check return from a file\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# check return from within a macro\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# test simple return\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# test break command now in a foreach\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# test break in a while loop\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "deps/src/cmake-3.13.4/Tests/ReturnTest/include_return.cmake" : {
      "ObjectId" : "7cea1fb2d4e6923d7b4a5f99b9e2a83a4b30794b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/ReturnTest/subdir/CMakeLists.txt" : {
      "ObjectId" : "b9510924f474501316fb670a444dcb1eecdbd165",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/BadSYSROOT.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/CMakeLists.txt" : {
      "ObjectId" : "dc924869733de74ad995c052229ead7c866fdccc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/RunCMakeTest.cmake" : {
      "ObjectId" : "45798ce59365217eeb6cdeeadcb18749e51c05a0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Load available toolchain versions and abis.\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# already the latest possible\n",
        "Line" : 49,
        "CharPositionInLine" : 10
      },
      "3" : {
        "Text" : "# Test failure cases.\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Find a sysroot to test.\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Find available STLs.\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# List possible ABIs.\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Test all combinations.\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Test this combination for all available abis.\n",
        "Line" : 170,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Skip ABIs not supported by this compiler.\n",
        "Line" : 179,
        "CharPositionInLine" : 10
      },
      "10" : {
        "Text" : "# Run the tests for this combination.\n",
        "Line" : 184,
        "CharPositionInLine" : 10
      },
      "11" : {
        "Text" : "# default: -DCMAKE_ANDROID_ARCH_ABI=armeabi -DCMAKE_ANDROID_ARM_MODE=0\n",
        "Line" : 186,
        "CharPositionInLine" : 43
      },
      "12" : {
        "Text" : "# default: -DCMAKE_ANDROID_ARCH_ABI=armeabi\n",
        "Line" : 187,
        "CharPositionInLine" : 68
      },
      "CommentCount" : 13
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/check_binary.cmake" : {
      "ObjectId" : "1d1b01a5d99480e7cf8ca10b983ebd0d8cccadc4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/common.cmake" : {
      "ObjectId" : "aaa7c89197724863a9131ddd68f112d7c2d5b5f7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test that an explicit /usr/include is ignored in favor of\n\n# appearing as a standard include directory at the end.\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/ndk-arm64-v8a.cmake" : {
      "ObjectId" : "a3185fe7df5ad9c9ff06ba10a2363112bd181c1a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/ndk-armeabi-arm.cmake" : {
      "ObjectId" : "a3185fe7df5ad9c9ff06ba10a2363112bd181c1a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/ndk-armeabi-thumb.cmake" : {
      "ObjectId" : "a3185fe7df5ad9c9ff06ba10a2363112bd181c1a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/ndk-armeabi-v7a-neon.cmake" : {
      "ObjectId" : "a3185fe7df5ad9c9ff06ba10a2363112bd181c1a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/ndk-armeabi-v7a.cmake" : {
      "ObjectId" : "a3185fe7df5ad9c9ff06ba10a2363112bd181c1a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/ndk-badabi.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/ndk-badarm.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/ndk-badneon.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/ndk-badstl.cmake" : {
      "ObjectId" : "fa2fc914f91d366701cc40cadc8dbeb6bf413899",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/ndk-badver.cmake" : {
      "ObjectId" : "c00af08d10083c6cba4312491a5d66015d721393",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/ndk-badvernum.cmake" : {
      "ObjectId" : "c00af08d10083c6cba4312491a5d66015d721393",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/ndk-mips.cmake" : {
      "ObjectId" : "a3185fe7df5ad9c9ff06ba10a2363112bd181c1a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/ndk-mips64.cmake" : {
      "ObjectId" : "a3185fe7df5ad9c9ff06ba10a2363112bd181c1a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/ndk-sysroot-armeabi.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/ndk-x86.cmake" : {
      "ObjectId" : "a3185fe7df5ad9c9ff06ba10a2363112bd181c1a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/ndk-x86_64.cmake" : {
      "ObjectId" : "a3185fe7df5ad9c9ff06ba10a2363112bd181c1a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/standalone-sysroot.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Android/standalone.cmake" : {
      "ObjectId" : "a3185fe7df5ad9c9ff06ba10a2363112bd181c1a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/AndroidMK/AndroidMK-check.cmake" : {
      "ObjectId" : "691e326b5f704a84a9c60bb7c81eeaa23ac0ea67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file does a regex file compare on the generated\n\n# Android.mk files from the AndroidMK test\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clean up new lines\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# read in the expected regex file\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# clean up new lines\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# compare the file to the expected regex and if there is not a match\n\n# put an error message in RunCMake_TEST_FAILED\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/AndroidMK/AndroidMK.cmake" : {
      "ObjectId" : "9137f2be6ad6523b42f76b2c7248bfcac1dec168",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/AndroidMK/CMakeLists.txt" : {
      "ObjectId" : "576787a2a5aedfca99e9582a2e56f4a6a74060af",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# or languages needed\n",
        "Line" : 2,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/AndroidMK/RunCMakeTest.cmake" : {
      "ObjectId" : "786d45bbcf87aa84764168cc272566407e755fee",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/AndroidTestUtilities/CMakeLists.txt" : {
      "ObjectId" : "dc924869733de74ad995c052229ead7c866fdccc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/AndroidTestUtilities/RunCMakeTest.cmake" : {
      "ObjectId" : "7d031d4c03f695cfc5a0b7f18e0273292dd081c0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/AndroidTestUtilities/SetupTest1.cmake" : {
      "ObjectId" : "1c9098b3af27e0a1f1478084afec9a6659b45882",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/AndroidTestUtilities/SetupTest1Build-check.cmake" : {
      "ObjectId" : "ef7569d65a80c5a8f77a527028c1a51ae355198d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/AndroidTestUtilities/SetupTest2.cmake" : {
      "ObjectId" : "cf4c764a1ddb273871badf2cc3133ff001b902f2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/AndroidTestUtilities/SetupTest2Build-check.cmake" : {
      "ObjectId" : "6adbd59d7703baf66113a75ee82520456c01e81a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/AndroidTestUtilities/SetupTest3.cmake" : {
      "ObjectId" : "b32b6b1a8adc8b4e0164e4055868b8f08ddc4e1a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/AndroidTestUtilities/SetupTest3Build-check.cmake" : {
      "ObjectId" : "3062cdc32e975517b6a42f19c720ad7f0b2d76f4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/AndroidTestUtilities/SetupTest4.cmake" : {
      "ObjectId" : "9a272667235fe94480705f3855bc3836ba6efe6d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/AndroidTestUtilities/SetupTest4Build-check.cmake" : {
      "ObjectId" : "ef7569d65a80c5a8f77a527028c1a51ae355198d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/AndroidTestUtilities/check.cmake" : {
      "ObjectId" : "ccd4d74dd9d9d0de9ab92f11b3587e66775e474b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/AutoExportDll/AutoExport.cmake" : {
      "ObjectId" : "a5500052bd204093e97cffb7bee3fd33a1acf263",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/AutoExportDll/CMakeLists.txt" : {
      "ObjectId" : "18dfd2686f63fed35d3e7940d69512d8fd0ed2e3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/AutoExportDll/RunCMakeTest.cmake" : {
      "ObjectId" : "27a609dcb24c399df990717fc1a308e2d2712bc9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# start by cleaning up because we don't clean up along the way\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# configure the AutoExport test\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# don't run this test on Watcom or Borland make as it is not supported\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# we build debug so the say.exe will be found in Debug/say.exe for\n\n# Visual Studio generators\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# build AutoExport\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# run the executable that uses symbols from the dll\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/AutoExportDll/sub/CMakeLists.txt" : {
      "ObjectId" : "8b70e7dfadc3000fe0c6136817b9f4a11c3b7b5c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try msvc \"big\" object format.\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Autogen/CMakeLists.txt" : {
      "ObjectId" : "9a66cde9b7ede5a4dacbeb7620a0f81a6bf384f2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Autogen/NoQt.cmake" : {
      "ObjectId" : "b2d375ac617013cb3ba4fb6056ae1cebbffaaea3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Autogen/QtInFunction.cmake" : {
      "ObjectId" : "a44bc5ab4888101a400c884ccbac468f1f8f3145",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Autogen/QtInFunctionNested.cmake" : {
      "ObjectId" : "5421ba00df45cc3b2305c704bd24e995d0cc6f71",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Autogen/QtInFunctionProperty.cmake" : {
      "ObjectId" : "35f1cd16cae35d8bb005a4942e8fc56b55d55c3b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Autogen/RunCMakeTest.cmake" : {
      "ObjectId" : "a31b67cd7d42168e700e6374267793b1e5aa08cd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BuildDepends/C-Exe-Manifest.cmake" : {
      "ObjectId" : "87b0de0104d36f6fb4d0ab2f763becea028e0507",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BuildDepends/C-Exe-Manifest.step1.cmake" : {
      "ObjectId" : "c0b939db728145723e90e45b8c580e65a6eba8e9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BuildDepends/C-Exe-Manifest.step2.cmake" : {
      "ObjectId" : "a75bf213c06aa6caa920e3c8e0338753f28df0ae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BuildDepends/C-Exe.cmake" : {
      "ObjectId" : "ad5cd4d47c47fe152c8f15881fd171f3872cdce3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BuildDepends/C-Exe.step1.cmake" : {
      "ObjectId" : "08e29495a4242f3febd508a60ef06ba724c97e97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BuildDepends/C-Exe.step2.cmake" : {
      "ObjectId" : "ee4530cfb4f9a8746c363b6913d01132a686f521",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BuildDepends/CMakeLists.txt" : {
      "ObjectId" : "74b3ff8de38d8e90e2e9549eb077ea0a023fa581",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BuildDepends/Custom-Always.cmake" : {
      "ObjectId" : "c7e7fb0bc77385535691772cd70eba19a10849b8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BuildDepends/Custom-Symbolic-and-Byproduct.cmake" : {
      "ObjectId" : "1e1f22ad08c81f538ad7e0ad667a0bdf236b04da",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# workaround buggy filesystem timestamps\n",
        "Line" : 13,
        "CharPositionInLine" : 42
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BuildDepends/MakeCustomIncludes.cmake" : {
      "ObjectId" : "8b2ae78cfb1185fe62c19d86c998a5d4b197529f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BuildDepends/MakeCustomIncludes.step1.cmake" : {
      "ObjectId" : "6bb01a6bc1a56504e6221adf08ffc88e68e78d0e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BuildDepends/MakeCustomIncludes.step2.cmake" : {
      "ObjectId" : "6b3151dc40434fd54deda6bb2b1db340bc06c70a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BuildDepends/MakeInProjectOnly.cmake" : {
      "ObjectId" : "af6ad86ba8b840ab60ff64ee2142b20847f35f29",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BuildDepends/MakeInProjectOnly.step1.cmake" : {
      "ObjectId" : "d6551abe060939a2b319a8be4ae27c032b5850ac",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BuildDepends/MakeInProjectOnly.step2.cmake" : {
      "ObjectId" : "145605be7a9c00065c6d9d23b944b56cec6ac2ea",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BuildDepends/RunCMakeTest.cmake" : {
      "ObjectId" : "3445beb7bbd887b21035816cc6987880275a5378",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# handle 1s resolution\n",
        "Line" : 27,
        "CharPositionInLine" : 65
      },
      "2" : {
        "Text" : "# VS 10 forgets to re-link when a manifest changes\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# test re-generation of project even if CMakeLists.txt files disappeared\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# create project with subdirectory\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# now we delete the subdirectory and adjust the CMakeLists.txt\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BuildDepends/check.cmake" : {
      "ObjectId" : "c7b5c3d320ae6902ddbd24990152d1401a617557",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BundleUtilities/CMP0080-COMMAND.cmake" : {
      "ObjectId" : "063a7f3a7b98a6daeb8a3fa958c6f8d15daa8d6b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BundleUtilities/CMP0080-NEW.cmake" : {
      "ObjectId" : "558c16d1609ff926995c6f790095a7a735ed21f3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BundleUtilities/CMP0080-OLD.cmake" : {
      "ObjectId" : "a65d92f1152a53c662017102f4ffefe659edb789",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BundleUtilities/CMP0080-WARN.cmake" : {
      "ObjectId" : "45f6f92b95e03d44602a5677be621c01c97cf69a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BundleUtilities/CMakeLists.txt" : {
      "ObjectId" : "6dd8cdf551e8c5b90465044b9808c05efe88ea0d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/BundleUtilities/RunCMakeTest.cmake" : {
      "ObjectId" : "14aaff1976ce99be2af14374b79f3c4e886f0d56",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO Migrate Tests/BundleUtilities here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Byproducts/CMakeLists.txt" : {
      "ObjectId" : "bf2ef1506eab776e7736df37a608f19acbeaf1a9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Byproducts/CleanByproducts.cmake" : {
      "ObjectId" : "85d958295943519e7a0533e5640b4f8ec13fee50",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configurable parameters\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create two byproducts and only declare one\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# The nondeclared byproduct should always be present\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# If CLEAN_NO_CUSTOM is set, the declared byproduct should be present\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Test build events\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Custom command that generates byproducts\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The nondeclared byproduct should always be present\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# If CLEAN_NO_CUSTOM is set, both the output and byproduct should be present\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Custom target that generates byproducts\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The nondeclared byproduct should always be present\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# If CLEAN_NO_CUSTOM is set, the declared byproduct should be present\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Byproducts/RunCMakeTest.cmake" : {
      "ObjectId" : "a7584ee4bb14d6b7fe019cd4aaa6fbab4b33f1aa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Iterate through all possible test values\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0004/CMP0004-NEW.cmake" : {
      "ObjectId" : "f42d8e49dc19d5161ddbd4222c8e7f9d174b8bb5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0004/CMP0004-OLD.cmake" : {
      "ObjectId" : "3fa58b6b6ad5b37a0b7401f0979b83084bd4aa80",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The line below causes the error because the policy is NEW when bat\n\n# is created.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0004/CMP0004-policy-genex.cmake" : {
      "ObjectId" : "297047662cc88887e9f2c7e294e2ec3053cba183",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The negation here avoids the error.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The below line causes the error.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0004/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0004/RunCMakeTest.cmake" : {
      "ObjectId" : "950d0edbd4ce81fc1c4341c205eb33eb279315b6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0019/CMP0019-NEW.cmake" : {
      "ObjectId" : "3091e66ac78de870048292f3943744c1112769e0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0019/CMP0019-OLD.cmake" : {
      "ObjectId" : "0f02f9ce57d159449fea22c62f1980e46059d397",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0019/CMP0019-WARN.cmake" : {
      "ObjectId" : "a419f309e399391ded475e2fcd02edd728b446af",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0019/CMP0019-code.cmake" : {
      "ObjectId" : "26c0e5b27eca596c15088eb955b073a538329296",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0019/CMakeLists.txt" : {
      "ObjectId" : "8f85fbf5402f5875ba03ffe8df8093fef7f997e1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0019/RunCMakeTest.cmake" : {
      "ObjectId" : "119fc2b300b5291f22d20e436e867e8346ac428d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0022/CMP0022-NOWARN-exe.cmake" : {
      "ObjectId" : "b0268c84282e13046d75ecea786fb6e86b2570b8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0022/CMP0022-NOWARN-shared.cmake" : {
      "ObjectId" : "2e76ee0df0b94cff06755185e80ef0f71d3ff077",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0022/CMP0022-NOWARN-static-NEW.cmake" : {
      "ObjectId" : "3fee15d8b956be415eddf3b33fe865d049c0068f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The last element here needs to contain a space so that it is a single\n\n# element which is not a valid target name. As bar is a STATIC library,\n\n# this tests that the LINK_ONLY generator expression is not used for\n\n# that element, creating an error.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0022/CMP0022-NOWARN-static-link_libraries.cmake" : {
      "ObjectId" : "42c4084a6fe4eed2675892a54935b12d327bb6d4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0022/CMP0022-NOWARN-static.cmake" : {
      "ObjectId" : "3e4144fcd5348f255858b046552e3835a02c5a7f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0022/CMP0022-WARN-empty-old.cmake" : {
      "ObjectId" : "c5d3c29d9fa78ecba9462250d71b682c6dca621a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0022/CMP0022-WARN-static.cmake" : {
      "ObjectId" : "b3cb13160afde1055979eb8607f3a9fd2d7dc726",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0022/CMP0022-WARN-tll.cmake" : {
      "ObjectId" : "03223e86a1b2a8512c7a1fd8ab83bb93b3329523",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Replace the compatibility values set by target_link_libraries\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0022/CMP0022-WARN.cmake" : {
      "ObjectId" : "e3552b2f04ba3cf5e12c5a19e655495357412d08",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use \"bar\" again with a different \"head\" target to check\n\n# that the warning does not appear again.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0022/CMP0022-export-exe.cmake" : {
      "ObjectId" : "d832faceb57e6b5ecec2e8c840d069d7f970396b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0022/CMP0022-export.cmake" : {
      "ObjectId" : "06147f39ee2a7178828eb00104b77dbea18a7773",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0022/CMP0022-install-export.cmake" : {
      "ObjectId" : "171febe3a63ec970d362b85284ddea2338fb230b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0022/CMakeLists.txt" : {
      "ObjectId" : "72abfc8099e9eea6b3481fd5874d4373e6b45a0e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0022/RunCMakeTest.cmake" : {
      "ObjectId" : "4c1099607a77257a9ce453f6fe4d66ef7d7ccf40",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0022/dep1/CMakeLists.txt" : {
      "ObjectId" : "f0a817923747b3c381e8f8fb45c75f8476c42014",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0022/dep2/CMakeLists.txt" : {
      "ObjectId" : "4f90162f846947daf937428b4394259c6e24aa10",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0022/dep3/CMakeLists.txt" : {
      "ObjectId" : "e85cb5431b3c316f7b7d2d04fde4024ab516743f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0026/CMP0026-CONFIG-LOCATION-NEW.cmake" : {
      "ObjectId" : "1b373e75dffae31379dcfbbc238dc3c0de877c1b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0026/CMP0026-CONFIG-LOCATION-OLD.cmake" : {
      "ObjectId" : "41668287974b3ab8c6a7d2a054b27026b32c8149",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0026/CMP0026-CONFIG-LOCATION-WARN.cmake" : {
      "ObjectId" : "511056fefeea59fa4df7b5fb6ed5008d323131b7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0026/CMP0026-IMPORTED.cmake" : {
      "ObjectId" : "650c8a5c79c80b0179f50b62178da04f15f246a4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0026/CMP0026-LOCATION-CONFIG-NEW.cmake" : {
      "ObjectId" : "e6aa509afd3b7fa60f32bd3f4aa914160a0feb02",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0026/CMP0026-LOCATION-CONFIG-OLD.cmake" : {
      "ObjectId" : "482373df2d63de42453846dcf0987fbbdc2f763c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0026/CMP0026-LOCATION-CONFIG-WARN.cmake" : {
      "ObjectId" : "85711c34b18ab9ef94ee218e6251f0018f0681ed",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0026/CMP0026-NEW.cmake" : {
      "ObjectId" : "1659ffc5244b9dba05e38c5ac84a709b2cf7c4a9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0026/CMP0026-OLD.cmake" : {
      "ObjectId" : "80497a304b576785500ccdcfa09299dad1d397a1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0026/CMP0026-WARN-Dir/CMakeLists.txt" : {
      "ObjectId" : "17a7db043a2942b2f2e0408a167df739b93b645f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0026/CMP0026-WARN.cmake" : {
      "ObjectId" : "bfc9203af96861ee05d8bbc0720639bec9fbce3f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0026/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0026/LOCATION-and-TARGET_OBJECTS.cmake" : {
      "ObjectId" : "3d8eb73d28f0e376a8d1c2d5276f670f0c2f1f01",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0026/ObjlibNotDefined.cmake" : {
      "ObjectId" : "194760cd46c647a85266b1be27518904821de1bb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0026/RunCMakeTest.cmake" : {
      "ObjectId" : "047da283b9fafb81fc2fe8aa07e491751edf57fc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0026/clear-cached-information-dir/CMakeLists.txt" : {
      "ObjectId" : "c51e8837fa5a4dcc0a80e28ee44f2bafa8aecc5f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0026/clear-cached-information.cmake" : {
      "ObjectId" : "dd2dd7246e61720f04cf8b85895750a309794de6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Critical: this needs to happen in root CMakeLists.txt and not inside\n\n# the subdir.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Now we create the file later, so you can see, ultimately no error should\n\n# happen e.g. during generate phase:\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0027/CMP0027-NEW.cmake" : {
      "ObjectId" : "8245085495f5847cec185f3754d73ca5f26c7cc5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0027/CMP0027-OLD.cmake" : {
      "ObjectId" : "404217de7ab118a9871b96a0db45ca4da317b2d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0027/CMP0027-WARN.cmake" : {
      "ObjectId" : "8e5f9b5181803c68731d4c7d15de42cb003d78fe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0027/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0027/RunCMakeTest.cmake" : {
      "ObjectId" : "1017f01f49f832877e066a31abc00b0672d6c388",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0028/CMP0028-NEW-iface.cmake" : {
      "ObjectId" : "1a71433065a1176036c8fb7436ad08f0a86bf246",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0028/CMP0028-NEW.cmake" : {
      "ObjectId" : "a0a6ae81ccf0be726598006dccfc617ebe7afb52",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0028/CMP0028-OLD-iface.cmake" : {
      "ObjectId" : "d7bd60e4b7b874e821be79adb6e79e9036ceaddb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0028/CMP0028-OLD.cmake" : {
      "ObjectId" : "d4a870b2305b759e9a87fdc7f46dca33e65924ef",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0028/CMP0028-WARN-iface.cmake" : {
      "ObjectId" : "9270023408d58d57b6ac0033d47864c3e0d0d2ab",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0028/CMP0028-WARN.cmake" : {
      "ObjectId" : "70a6cc6c47c846fcbe5dc43114c46303ca262a58",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0028/CMakeLists.txt" : {
      "ObjectId" : "144cdb4ee36fe57e18c91ed0ac6ad66c65f520e6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# policy used at end of dir\n",
        "Line" : 3,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0028/RunCMakeTest.cmake" : {
      "ObjectId" : "0c72ca2961f04ee1ef8cf334306466c547324eed",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0037/CMP0037-NEW-colon.cmake" : {
      "ObjectId" : "fd56e7566bfe7d9f9ff70d31a181ff07c3ec71af",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0037/CMP0037-NEW-reserved.cmake" : {
      "ObjectId" : "83a71190900fdad40e6efd1be788f7a357ddf5c2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0037/CMP0037-NEW-space.cmake" : {
      "ObjectId" : "2a288cc99947f66c716c4ee8deef0ac14b1e83c0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0037/CMP0037-OLD-reserved.cmake" : {
      "ObjectId" : "f52e4d2d0203067cdfab76af713639518f0094f0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0037/CMP0037-OLD-space.cmake" : {
      "ObjectId" : "c9fb6c89029e68fc695cb4e572e465ff935d021a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0037/CMP0037-WARN-colon.cmake" : {
      "ObjectId" : "1b1a405e82fc18f161f29e8da4a0e58a2dce4da7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0037/CMP0037-WARN-reserved.cmake" : {
      "ObjectId" : "a5e0f10dd0f4badab5edf46b870d1ee475cd9ae8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0037/CMP0037-WARN-space.cmake" : {
      "ObjectId" : "e01b8e5ec4468d643bfb20b5fc2faa12f5453e92",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0037/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0037/NEW-cond-package.cmake" : {
      "ObjectId" : "ceea90783a62946589aecb5e6b6a201ae2d5fcfa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0037/NEW-cond-package_source.cmake" : {
      "ObjectId" : "3f8883b3d46c050f2fc9fdb457e860a530bb6eeb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0037/NEW-cond-test.cmake" : {
      "ObjectId" : "7eeaffcc395ffc225d83d40abdea9cbd418d9165",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0037/NEW-cond.cmake" : {
      "ObjectId" : "d0dc77af39e625f9ed14d43093664e5d82244320",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0037/OLD-cond-package.cmake" : {
      "ObjectId" : "7a0afbe1054a4bd655cf84984f6ecf8eecc5d178",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0037/OLD-cond-package_source.cmake" : {
      "ObjectId" : "95616b6850f874fe640450b833938ab369a23d57",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0037/OLD-cond-test.cmake" : {
      "ObjectId" : "bfa32a954ea32f5968f742604ff864bad026d17a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0037/OLD-cond.cmake" : {
      "ObjectId" : "abad680539e947b66a4292978aa0576b85f2225c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0037/RunCMakeTest.cmake" : {
      "ObjectId" : "98274f08bb784c238594dc9d74a514adfc3651cc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0037/WARN-cond-package.cmake" : {
      "ObjectId" : "61cdc68343f69bb6a7d1a8221560c9ec544d49ce",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0037/WARN-cond-package_source.cmake" : {
      "ObjectId" : "468380c3653f01e88eed8198b358564069f4daf7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0037/WARN-cond-test.cmake" : {
      "ObjectId" : "982af369e89b270070a7a540131cff9c5aef1930",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0037/WARN-cond.cmake" : {
      "ObjectId" : "04a7f9da266fc96184086e649b16ff3423cf97d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0038/CMP0038-NEW.cmake" : {
      "ObjectId" : "6296b839a214696f960a4bff96388ec6aa442a55",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0038/CMP0038-OLD.cmake" : {
      "ObjectId" : "37528218cace319121e4496ac2d25540f44c3e5f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0038/CMP0038-WARN.cmake" : {
      "ObjectId" : "5b92d0951899e540dcbd07877a955b5e808af7b8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0038/CMakeLists.txt" : {
      "ObjectId" : "a06591c31ff69fee589b694651a8767e7bc5316c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0038/RunCMakeTest.cmake" : {
      "ObjectId" : "fc3500adddf52504fcb3e617479e135b728a7ed9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0039/CMP0039-NEW.cmake" : {
      "ObjectId" : "2032d64d451f57b92c90d780674e87c9ef303bfb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0039/CMP0039-OLD.cmake" : {
      "ObjectId" : "9a513f444788cb57c76c42ec8eecf548ce541b3c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0039/CMP0039-WARN.cmake" : {
      "ObjectId" : "62499938d58fdfb272ea40be56edac60c504ec64",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0039/CMakeLists.txt" : {
      "ObjectId" : "a06591c31ff69fee589b694651a8767e7bc5316c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0039/RunCMakeTest.cmake" : {
      "ObjectId" : "58e8ea91eb840f2f809d78dcfc6353a00074dea4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0040/CMP0040-NEW-existing-target.cmake" : {
      "ObjectId" : "880b1782dd63d364fe0b9da4c3d90853f7760028",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0040/CMP0040-NEW-missing-target.cmake" : {
      "ObjectId" : "a9f764cb6b5d280003bff095060ff20ae2bfbb68",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0040/CMP0040-OLD-existing-target.cmake" : {
      "ObjectId" : "7a9e91e836760de51d65d775b244f10b5af1410a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0040/CMP0040-OLD-missing-target.cmake" : {
      "ObjectId" : "0f5cd1522ea8dcf8269d2fbe1c83d4bc9a4f3a7e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0040/CMP0040-WARN-missing-target.cmake" : {
      "ObjectId" : "4efeaae52c7d6fd3cd1703f5e0e33cb35a57d622",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0040/CMakeLists.txt" : {
      "ObjectId" : "a06591c31ff69fee589b694651a8767e7bc5316c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0040/RunCMakeTest.cmake" : {
      "ObjectId" : "13160e3a407a04c3dac2684f5322967a74b374e7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0041/CMP0041-NEW.cmake" : {
      "ObjectId" : "605b79a008ee98cf6fb9368867f128f8454b9ca3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0041/CMP0041-OLD.cmake" : {
      "ObjectId" : "16cbced52b158f1bbc6cafc8adbd29f823bf4efd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0041/CMP0041-WARN.cmake" : {
      "ObjectId" : "873cbc7084e34967841b94ef295ac8335eec26da",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0041/CMP0041-tid-NEW.cmake" : {
      "ObjectId" : "3005108aa4d93bab7cff6143935e1cdad63fa75c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0041/CMP0041-tid-OLD.cmake" : {
      "ObjectId" : "b5c4e7f85777b1c4d03ae5fe0e2c3da5b356f11b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0041/CMP0041-tid-WARN.cmake" : {
      "ObjectId" : "ee4c2a6210d9f2b8b98b02bd9b786a04d4e3946f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0041/CMakeLists.txt" : {
      "ObjectId" : "f452db177035b737ea028d8b2d42e3f28fefca76",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0041/RunCMakeTest.cmake" : {
      "ObjectId" : "e7f27a1a2892f180b461aa475cbbe7b5cb8fd2d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Protect tests from running inside the default install prefix.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0042/CMP0042-NEW.cmake" : {
      "ObjectId" : "778a444311da408cd5be59585a93fb6ac194a62e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0042/CMP0042-OLD.cmake" : {
      "ObjectId" : "1aede967c25188fbb8ddd19f099763554e9238be",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0042/CMP0042-WARN.cmake" : {
      "ObjectId" : "3fa32b16ff9da745af6f01ef2e828ff27a5103c5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0042/CMakeLists.txt" : {
      "ObjectId" : "f452db177035b737ea028d8b2d42e3f28fefca76",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0042/RunCMakeTest.cmake" : {
      "ObjectId" : "3b226d74cb2dc1e564d6a77048c735adc3aad2b3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0043/CMP0043-NEW.cmake" : {
      "ObjectId" : "857153def881c9268f8ecd0e6ac8ae1c8ea37fc5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0043/CMP0043-OLD.cmake" : {
      "ObjectId" : "f379430c5ebf70d40e4fa65687b88c920e8ad88b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0043/CMP0043-WARN.cmake" : {
      "ObjectId" : "161a60d0ece00a78a51f2e8850e48a7e29ac9ce3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0043/CMakeLists.txt" : {
      "ObjectId" : "d027f3e0ef83639affd9b668089f6d8c4fc44647",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# policy used at end of dir\n",
        "Line" : 3,
        "CharPositionInLine" : 48
      },
      "1" : {
        "Text" : "# Dummy variable use\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0043/RunCMakeTest.cmake" : {
      "ObjectId" : "7f9572e5af3f915fef173af50cec49e6042daa63",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0045/CMP0045-NEW.cmake" : {
      "ObjectId" : "7b2a3cd611dd83e43016deeb810b8da89c3a191c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0045/CMP0045-OLD.cmake" : {
      "ObjectId" : "90201a325629371e0b210b0cf5b13a57899f8fbb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0045/CMP0045-WARN.cmake" : {
      "ObjectId" : "86a99a003321eaa1c15aab83671e3a050352e272",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0045/CMakeLists.txt" : {
      "ObjectId" : "f452db177035b737ea028d8b2d42e3f28fefca76",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0045/RunCMakeTest.cmake" : {
      "ObjectId" : "7c0e8a2151affe4338e29192cfe41b387f097ede",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0046/CMP0046-Duplicate.cmake" : {
      "ObjectId" : "26e640b9df3412c94882d51373cbc521300fec9b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0046/CMP0046-NEW-existing-dependency.cmake" : {
      "ObjectId" : "0be290a8d8c44ced56f52e9de178d657b053d17d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0046/CMP0046-NEW-missing-dependency.cmake" : {
      "ObjectId" : "9bb6b90c8eba474f978f7f035ceacfa063165792",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0046/CMP0046-OLD-existing-dependency.cmake" : {
      "ObjectId" : "b22ab4fb976f6f61a344b107cb77bf2a0bfd1e5c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0046/CMP0046-OLD-missing-dependency.cmake" : {
      "ObjectId" : "5ee3cb75eb5aa2677414a922b709ce1f75dd93ca",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0046/CMP0046-WARN-missing-dependency.cmake" : {
      "ObjectId" : "896fa40f6636df1bfd63d53e29874e9808ae008c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0046/CMakeLists.txt" : {
      "ObjectId" : "a06591c31ff69fee589b694651a8767e7bc5316c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0046/RunCMakeTest.cmake" : {
      "ObjectId" : "0a39c765969ccbc077bccc7750f5589acee5f09b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0049/CMP0049-NEW.cmake" : {
      "ObjectId" : "85b5aa8546c846965bccc2e35461dfd9f4fea738",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0049/CMP0049-OLD.cmake" : {
      "ObjectId" : "ae6fd3bcdf1aa8f403b2c31d5a3bfe9b2c2dcb87",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0049/CMP0049-WARN.cmake" : {
      "ObjectId" : "ada082e610670777c7b624f4cb39c16fc27a5736",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0049/CMakeLists.txt" : {
      "ObjectId" : "a06591c31ff69fee589b694651a8767e7bc5316c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0049/RunCMakeTest.cmake" : {
      "ObjectId" : "a8aa9d9650828cac142a08d6038bcc999c0584d1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0050/CMP0050-NEW.cmake" : {
      "ObjectId" : "cdc65b897c7bbb48d256d08ce921ffd458c06ae8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0050/CMP0050-OLD.cmake" : {
      "ObjectId" : "efb37e55b72bcacc2d3f5eb69b443707cc1c66b5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0050/CMP0050-WARN.cmake" : {
      "ObjectId" : "e57230e5b993ab4f79e1f7be9236f874221c285a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0050/CMakeLists.txt" : {
      "ObjectId" : "a06591c31ff69fee589b694651a8767e7bc5316c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0050/RunCMakeTest.cmake" : {
      "ObjectId" : "b7de28491d89e8293fad4ae0b8257dd9f3f97752",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0051/CMP0051-NEW.cmake" : {
      "ObjectId" : "f304bf186c875bbb150d7c378c9e6a0c92688d6a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0051/CMP0051-OLD.cmake" : {
      "ObjectId" : "0243e944cf48ef96f2020bec1edb82558f8f1958",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0051/CMP0051-WARN-Dir/CMakeLists.txt" : {
      "ObjectId" : "77cbad53ef7e439765a393ee49ee58921450320a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0051/CMP0051-WARN.cmake" : {
      "ObjectId" : "744598fcbf05cd9a5f08eb14f2ec4f1a971ca450",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0051/CMakeLists.txt" : {
      "ObjectId" : "3482e6baf27164315568515336ff578f0a690222",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0051/RunCMakeTest.cmake" : {
      "ObjectId" : "621192d9f6a1634900ccfb2c9e8d98915ece571f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0053/CMP0053-NEW.cmake" : {
      "ObjectId" : "6ffedc63b51225699568dfa77311347258a7032d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0053/CMP0053-OLD.cmake" : {
      "ObjectId" : "41f534746bebddf31d9211233fab5e6daf549aec",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0053/CMP0053-WARN.cmake" : {
      "ObjectId" : "b010d1319e217611f60b8105238c352728168847",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0053/CMakeLists.txt" : {
      "ObjectId" : "3482e6baf27164315568515336ff578f0a690222",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0053/RunCMakeTest.cmake" : {
      "ObjectId" : "6521ac074d2c96e64514ba5329bf7fbb8c122c16",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0054/CMP0054-NEW.cmake" : {
      "ObjectId" : "23a912476024ba09fcf741e04f999b64a6e91450",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0054/CMP0054-OLD.cmake" : {
      "ObjectId" : "0c4cede6ba2614071b4f8b284fd0606c2f5365c4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0054/CMP0054-WARN.cmake" : {
      "ObjectId" : "a6089293b91150f26f5652a4b5aac100b8cbc629",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0054/CMP0054-duplicate-warnings.cmake" : {
      "ObjectId" : "04fbe14e6454f01593746a73f37a6ea895c54982",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0054/CMP0054-keywords-NEW.cmake" : {
      "ObjectId" : "b957658b01217f09fed51d749879dfa729f6532a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0054/CMP0054-keywords-OLD.cmake" : {
      "ObjectId" : "a2a7f5183366c8f359a83e390c01df2803be7a27",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0054/CMP0054-keywords-WARN.cmake" : {
      "ObjectId" : "118ab3d184ba35d6705aa64cdc8c78b319da5d32",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0054/CMP0054-policy-command-scope.cmake" : {
      "ObjectId" : "b6b243caa2fb2bed145aabac212a5a9acbcb17b3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0054/CMP0054-policy-foreach-scope.cmake" : {
      "ObjectId" : "87c968a06dfd241f397ebf3020b56607a2884125",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0054/CMP0054-policy-nested-if.cmake" : {
      "ObjectId" : "dd7434d730e15297a823ec7b8e9edec6a2937170",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0054/CMP0054-policy-while-scope.cmake" : {
      "ObjectId" : "7fb836eb22eaf99d8dcb9fd269a57590f87ce85a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0054/CMakeLists.txt" : {
      "ObjectId" : "289710955440b63a5c0eb79b4596ac0f88b9bfa2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0054/RunCMakeTest.cmake" : {
      "ObjectId" : "2f2fb765da287b315073403e1f1bfdd0d0dcb94f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0055/CMP0055-NEW-Out-of-Scope.cmake" : {
      "ObjectId" : "53ac214ad3dba31da6c6cc3c7d921161a0e6edf2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0055/CMP0055-NEW-Reject-Arguments.cmake" : {
      "ObjectId" : "52eaa6aa5376c5c4bb5a1710bc2f9ae2b3eadfc3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0055/CMP0055-OLD-Out-of-Scope.cmake" : {
      "ObjectId" : "57195c24873553dd1ca8a4fe83ded8fc6db67f65",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0055/CMP0055-OLD-Reject-Arguments.cmake" : {
      "ObjectId" : "d8fdddf10c013ebdaa699486e4ddc4b82a676655",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0055/CMP0055-WARN-Out-of-Scope.cmake" : {
      "ObjectId" : "373a95a7c83085a51bc53182138b489234420b6a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0055/CMP0055-WARN-Reject-Arguments.cmake" : {
      "ObjectId" : "ec6b90f8a55ab9f5b315b6b52ddf027d9aac05e8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0055/CMakeLists.txt" : {
      "ObjectId" : "ef2163c298341fcdf0c2afd89dd4234a4b8b21d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0055/RunCMakeTest.cmake" : {
      "ObjectId" : "efcfcab674493540871edb7c35bcf49103225a7e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0057/CMP0057-NEW.cmake" : {
      "ObjectId" : "ebd7ba580e215604b50044be66e8a791fbb47200",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0057/CMP0057-OLD.cmake" : {
      "ObjectId" : "cf9ec890bf9632a5d402d91c1a33d8c24277f8dd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0057/CMP0057-WARN.cmake" : {
      "ObjectId" : "45f53a52cffbc8e10fd45bd58d6b0c4e7ef1dbc0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0057/CMakeLists.txt" : {
      "ObjectId" : "18dfd2686f63fed35d3e7940d69512d8fd0ed2e3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0057/RunCMakeTest.cmake" : {
      "ObjectId" : "719e054a576175331fcbe11997c1cf84b88f58a1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0059/CMP0059-NEW.cmake" : {
      "ObjectId" : "f7b9303cd45a0fc8bcfbdae67110097ed10334ba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0059/CMP0059-OLD.cmake" : {
      "ObjectId" : "25557744d4a558a8d79fafd342fea119809bbff6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0059/CMP0059-WARN.cmake" : {
      "ObjectId" : "9d0b49c8e2188090cd15a571810b4d2ff75e685b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0059/CMakeLists.txt" : {
      "ObjectId" : "ef2163c298341fcdf0c2afd89dd4234a4b8b21d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0059/RunCMakeTest.cmake" : {
      "ObjectId" : "9b5757954cb6d8d7a34a6a4cf3cc4b7ac5585120",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0060/CMP0060-Common.cmake" : {
      "ObjectId" : "06955eebabf4d85872085b388c65338d2b23255e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Always build in a predictable configuration.  For multi-config\n\n# generators we depend on RunCMakeTest.cmake to do this for us.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convince CMake that it can instruct the linker to search for the\n\n# library of the proper linkage type, but do not really pass flags.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make a link line asking for the linker to search for the library\n\n# look like a missing object file so we will get predictable content\n\n# in the error message.  This also ensures that cases expected to use\n\n# the full path can be verified by confirming that they link.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Convince CMake that our library is in an implicit linker search directory.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Create a simple library file.  Place it in our library directory.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add a target to link the library file by full path.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add a second target to verify the warning only appears once.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0060/CMP0060-NEW.cmake" : {
      "ObjectId" : "0414e4b4b9194cc8fc07c6655c991a03eca22c63",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0060/CMP0060-OLD.cmake" : {
      "ObjectId" : "a9cffefbde09e0afd65bbbbf136197ea8c07af70",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0060/CMP0060-WARN-OFF.cmake" : {
      "ObjectId" : "6b84565a2bc26f570e0d31e5f8ad308155ad6a19",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0060/CMP0060-WARN-ON.cmake" : {
      "ObjectId" : "a0a7950ef002f22ce02cbde6ec60c396ceca2ebd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0060/CMakeLists.txt" : {
      "ObjectId" : "291d34d43d3c68424b58e7891940a47576c9438b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0060/RunCMakeTest.cmake" : {
      "ObjectId" : "445156fa1af5733b1b0a2102c5e215fa99311b24",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0064/CMP0064-NEW.cmake" : {
      "ObjectId" : "cdf50e9cab96349975ccf8186e10d0d0c25cec57",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0064/CMP0064-OLD.cmake" : {
      "ObjectId" : "bffd3f36200e07fa511f86b20392d08fa39321c0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0064/CMP0064-WARN.cmake" : {
      "ObjectId" : "8f26ec62b5ef6f2bea461f69151f40394d7ffd2a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0064/CMakeLists.txt" : {
      "ObjectId" : "74b3ff8de38d8e90e2e9549eb077ea0a023fa581",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0064/RunCMakeTest.cmake" : {
      "ObjectId" : "26e0a91a74d2f7528d5e645659c2b66f65e3781a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0065/BuildTargetInSubProject.cmake" : {
      "ObjectId" : "9339e4667a8963256ecf890e4646ceea9fd9512b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0065/CMakeLists.txt" : {
      "ObjectId" : "74b3ff8de38d8e90e2e9549eb077ea0a023fa581",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0065/NEWBad.cmake" : {
      "ObjectId" : "79d9adb73f245943fcbb3858bbf97cb629fa570b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0065/NEWGood.cmake" : {
      "ObjectId" : "a5b5d044230d4bddfdd9e43c65e10372283a06c6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0065/OLDBad1.cmake" : {
      "ObjectId" : "6d780b4a2f868a08d71e796c385db2d47749d480",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0065/OLDBad2.cmake" : {
      "ObjectId" : "7196473e1837b495c7a571429a8a330137d5b772",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0065/RunCMakeTest.cmake" : {
      "ObjectId" : "254a4ec022063980d5e499aec8ca2298d5a6d092",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0065/WARN-OFF.cmake" : {
      "ObjectId" : "dbc95623739170e5b65449c688cb302fc7960af0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0065/WARN-ON.cmake" : {
      "ObjectId" : "6ed4a41440521ace4a46eaead52521fb419dc6e9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0065/subproject/CMakeLists.txt" : {
      "ObjectId" : "bed59601ce77bcd0c408011fb8543cb0fb89084b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#----------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#----------------------------------------------------------------------\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0068/CMP0068-NEW.cmake" : {
      "ObjectId" : "eb8cfa1fbaa15c674ca6bc32e3261bf6b231cf52",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0068/CMP0068-OLD.cmake" : {
      "ObjectId" : "cf1040f4cb9f406a00da2840180c811ff738e880",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0068/CMP0068-WARN.cmake" : {
      "ObjectId" : "b7ec480d42e0c7a26cbcd0b0feb9755e4a970818",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0068/CMakeLists.txt" : {
      "ObjectId" : "375cbdb5f25699eb31b345fedb1f0056f49609e4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0068/RunCMakeTest.cmake" : {
      "ObjectId" : "88a622537f322e5cfbebab9c109e899f78c17e85",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0069/CMP0069-NEW-cmake.cmake" : {
      "ObjectId" : "6968c8bbf21a5b573b80003949d505550f9a3919",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0069/CMP0069-NEW-compiler.cmake" : {
      "ObjectId" : "ecb197b393ab8b44ef064db2c8e8983ad14fb395",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0069/CMP0069-NEW-generator.cmake" : {
      "ObjectId" : "80d4e15441a93a6a812a5deb644ee78d2ea272dd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0069/CMP0069-OLD.cmake" : {
      "ObjectId" : "cfe1e9d06b6de160531929a8d5c9398c9e60db34",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0069/CMP0069-WARN.cmake" : {
      "ObjectId" : "2049c9e75bb55ca8fee8ad051af2527858d210cf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0069/CMakeLists.txt" : {
      "ObjectId" : "375cbdb5f25699eb31b345fedb1f0056f49609e4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0069/RunCMakeTest.cmake" : {
      "ObjectId" : "456e6a656554fea1a8a30785ffa44414bdafac16",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0081/CMP0081-Common.cmake" : {
      "ObjectId" : "3ea5277f9becf57213df095b3b97f8b80aff3bc1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0081/CMP0081-NEW.cmake" : {
      "ObjectId" : "9b927a2b40db9021d4a30998247662d8ae0f3079",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0081/CMP0081-OLD.cmake" : {
      "ObjectId" : "2e91bf6aed46f83a3fac54c3e11f1173b2bb347e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0081/CMP0081-WARN.cmake" : {
      "ObjectId" : "33bb21db1571a2c9e29f29e35b11dca561df19e1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0081/CMakeLists.txt" : {
      "ObjectId" : "ef2163c298341fcdf0c2afd89dd4234a4b8b21d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMP0081/RunCMakeTest.cmake" : {
      "ObjectId" : "335d8c5ba2138dced146a75b8577081014fbdcbd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CMakeLists.txt" : {
      "ObjectId" : "27413dde1882c210c66414071cdb4a3737bc6434",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See adjacent README.rst for documentation of this test infrastructure.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note that the _isMultiConfig variable is set in the parent directory's\n\n# CMakeLists.txt (slightly complex logic to support CMake versions before 3.9)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# create directory for common content\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# generate prerequirements config file in cmake as ctest doesn't have as\n\n# much system information so it is easier to set programs and environment\n\n# values here\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# only add the test if prerequirements are met\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Test MSVC for older host CMake versions, and test\n\n# WIN32/CMAKE_C_COMPILER_ID to fix check on Intel for Windows.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The test for Policy 65 requires the use of the\n\n# CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS variable, which both the VS and Xcode\n\n# generators ignore.  The policy will have no effect on those generators.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Note: does not actually depend on Google Test\n",
        "Line" : 181,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Older CMake versions do not know about MSVC language standards.\n\n# Approximate our logic from MSVC-CXX.cmake.\n",
        "Line" : 271,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Only run this test on unix platforms that support\n\n# symbolic links\n",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Matlab module related tests\n",
        "Line" : 394,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# add a test to make sure symbols are exported from a shared library\n\n# for MSVC compilers CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS property is used\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# This test can take a very long time due to lots of combinations.\n\n# Use a long default timeout and provide an option to customize it.\n",
        "Line" : 466,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 13
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/COMPILE_LANGUAGE-genex/CMakeLists.txt" : {
      "ObjectId" : "ef2163c298341fcdf0c2afd89dd4234a4b8b21d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/COMPILE_LANGUAGE-genex/CompileDefinitions.cmake" : {
      "ObjectId" : "7935d881b3230bc83826dccea4fb22b52c92f1dc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/COMPILE_LANGUAGE-genex/CompileOptions.cmake" : {
      "ObjectId" : "6c92abca9ba57a0b0318836862bfb5b3a0b0e950",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/COMPILE_LANGUAGE-genex/IncludeDirectories.cmake" : {
      "ObjectId" : "31771f64dcff8b8266f1740d3084b13034265eed",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/COMPILE_LANGUAGE-genex/RunCMakeTest.cmake" : {
      "ObjectId" : "5e0a5f51229234131d37b0eb515b38179edbef57",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/7Z/Helpers.cmake" : {
      "ObjectId" : "f256a42703770739784d876677530ed8ab767708",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/7Z/Prerequirements.cmake" : {
      "ObjectId" : "dbaf682e58e918c0f3a84cef5a78cca353099436",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/7Z/packaging_COMPONENT_default.cmake" : {
      "ObjectId" : "81a5035a3d98cb5a8e8e8b1d53f821488a150ce4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/ArchiveCommon/common_helpers.cmake" : {
      "ObjectId" : "948c6ab15afcaa1cfc9ac67791b3ef0ce6407a2d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO for some types this only works because libarchive handles it... (not\n\n#      part of for e.g. gnu tar)\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# component and monolithic packages differ for some reason by either having\n\n# package filename prefix in path or not\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# NAME_WE removes everything after the dot and dot is in version so replace instead\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# add install prefix to expected paths\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# default CPack Archive packaging install prefix\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/CMakeLists.txt" : {
      "ObjectId" : "1b3dbb228219c6d6f65b6cf73eb1906755f188e0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set default test name (can be overwritten in test.cmake or specifics.cmake)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/CPackTestHelpers.cmake" : {
      "ObjectId" : "d00ef3b9d97ba07ee86f64aa719efb8fe9640c98",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO this should be executed only once per ctest run (not per generator)\n",
        "Line" : 20,
        "CharPositionInLine" : 5
      },
      "1" : {
        "Text" : "# skip the test if prerequirements are not met\n",
        "Line" : 30,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# execute cmake\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# execute optional build step\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# execute cpack\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# verify result\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/DEB/Helpers.cmake" : {
      "ObjectId" : "9b98ed41f144c11be43e85a9c189ca442c0fbd0a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add install prefix to expected paths\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# default CPackDeb packaging install prefix\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Tell file(GLOB_RECURSE) not to follow directory symlinks\n\n# even if the project does not set this policy to NEW.\n",
        "Line" : 74,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# get file info so that we can determine if file is executable or not\n",
        "Line" : 80,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Only dynamically linked ELF files are included\n\n# Extract only file name infront of \":\"\n",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/DEB/Prerequirements.cmake" : {
      "ObjectId" : "60d02e718b85390ccb8bc2a03710cbb9ff813b56",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# optional tool for some tests\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# optional tool for some tests\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/DEB/packaging_COMPONENT_default.cmake" : {
      "ObjectId" : "4219b0cbb07e5ad7d398cbd6815c37ac51f88c0a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/DEB/packaging_MONOLITHIC_default.cmake" : {
      "ObjectId" : "8821ab9bedad27a935c62f1c700ca2c6d3616a09",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/External/Helpers.cmake" : {
      "ObjectId" : "2c67e0644fa479b839396b0f98183c4ba8df0797",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/External/Prerequirements.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/RPM/Helpers.cmake" : {
      "ObjectId" : "a29c0206530534550c9ce6c5d3d7d3ecb3cd67fe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# never versions of rpmbuild (introduced in rpm 4.13.0.1) add build_id links\n\n# to packages - tests should ignore them\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# add install prefix to expected paths\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# default CPackRPM packaging install prefix\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# remove paths that are excluded from auto packaging\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/RPM/Prerequirements.cmake" : {
      "ObjectId" : "3416205bc6189e4c317a9dd6dd282ee91101f1b6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# rpmbuild can't handle spaces in path\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/RPM/packaging_COMPONENT_default.cmake" : {
      "ObjectId" : "c8b93e9a72df6ba750cc54f5b3854214e67678f0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/RunCMakeTest.cmake" : {
      "ObjectId" : "33ddb722cc8bb1f812e90e70fc786a2fe2c24a2f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# run_cpack_test args: TEST_NAME \"GENERATORS\" RUN_CMAKE_BUILD_STEP \"PACKAGING_TYPES\"\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/STGZ/Helpers.cmake" : {
      "ObjectId" : "175664551163c91b75456f8fa592d584bfb2f307",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NAME_WE removes everything after the dot and dot is in version so replace instead\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# STGZ packages don't have component dir prefix in subdir\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# add install prefix to expected paths\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# default CPack Archive packaging install prefix\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# remove trailing slash otherwise path concatenation will cause double slashes\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/STGZ/Prerequirements.cmake" : {
      "ObjectId" : "3b015ca253554705073c5876de40178be81de33f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#gunzip is not part of posix so we should not rely on it being installed\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/STGZ/packaging_COMPONENT_default.cmake" : {
      "ObjectId" : "81a5035a3d98cb5a8e8e8b1d53f821488a150ce4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/TBZ2/Helpers.cmake" : {
      "ObjectId" : "292b69100b8a642f04081a000de73c5eb865fcf8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/TBZ2/Prerequirements.cmake" : {
      "ObjectId" : "dbaf682e58e918c0f3a84cef5a78cca353099436",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/TBZ2/packaging_COMPONENT_default.cmake" : {
      "ObjectId" : "81a5035a3d98cb5a8e8e8b1d53f821488a150ce4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/TGZ/Helpers.cmake" : {
      "ObjectId" : "4357a59133ba50693ff39fe60576af1d568fbbed",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/TGZ/Prerequirements.cmake" : {
      "ObjectId" : "dbaf682e58e918c0f3a84cef5a78cca353099436",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/TGZ/packaging_COMPONENT_default.cmake" : {
      "ObjectId" : "81a5035a3d98cb5a8e8e8b1d53f821488a150ce4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/TXZ/Helpers.cmake" : {
      "ObjectId" : "f390cb4c0968bb91387e867c695b974a23e92691",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/TXZ/Prerequirements.cmake" : {
      "ObjectId" : "dbaf682e58e918c0f3a84cef5a78cca353099436",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/TXZ/packaging_COMPONENT_default.cmake" : {
      "ObjectId" : "81a5035a3d98cb5a8e8e8b1d53f821488a150ce4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/TZ/Helpers.cmake" : {
      "ObjectId" : "117cd24fc11b5b87a0702894d5795a4860477fa4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/TZ/Prerequirements.cmake" : {
      "ObjectId" : "dbaf682e58e918c0f3a84cef5a78cca353099436",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/TZ/packaging_COMPONENT_default.cmake" : {
      "ObjectId" : "81a5035a3d98cb5a8e8e8b1d53f821488a150ce4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/VerifyResult.cmake" : {
      "ObjectId" : "345b37fac9e72ec20c6573426cad46863f724955",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# explicit file name regex was not provided - construct one from other data\n",
        "Line" : 4,
        "CharPositionInLine" : 43
      },
      "1" : {
        "Text" : "# set defaults if parameters are not provided\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# generate default expected files data\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# check that expected generated files exist and contain expected content\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# use content list\n",
        "Line" : 54,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "# check that there were no extra files generated\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# sanity check that we didn't accidentally list wrong files with our regular\n\n# expressions\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# there should be no generated files present\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# handle additional result verifications\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/ZIP/Helpers.cmake" : {
      "ObjectId" : "3710bcf6a1204f7c069c659bd26e7baf0d2ef32b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/ZIP/Prerequirements.cmake" : {
      "ObjectId" : "dbaf682e58e918c0f3a84cef5a78cca353099436",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/ZIP/packaging_COMPONENT_default.cmake" : {
      "ObjectId" : "81a5035a3d98cb5a8e8e8b1d53f821488a150ce4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/CPACK_INSTALL_SCRIPT/ExpectedFiles.cmake" : {
      "ObjectId" : "02a78215b5bbd4b2f39bf7b3798add5aa0b29fa9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/CPACK_INSTALL_SCRIPT/test.cmake" : {
      "ObjectId" : "e3fe0ca4736c1aa2d542a017fec76e6ca97b5f2e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/CUSTOM_BINARY_SPEC_FILE/ExpectedFiles.cmake" : {
      "ObjectId" : "6d895ec2fa467807b88b4a81397f36757d6b4ddc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/CUSTOM_BINARY_SPEC_FILE/test.cmake" : {
      "ObjectId" : "a6048639718097ee4f06692b92a75375378912ae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/CUSTOM_NAMES/ExpectedFiles.cmake" : {
      "ObjectId" : "07226df0447d0b77ca7d83f3e7588aaf0306de63",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/CUSTOM_NAMES/test.cmake" : {
      "ObjectId" : "4c20e416421d84b11e4e60f844d58824e8ac2643",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# not entirely compatible...\n",
        "Line" : 3,
        "CharPositionInLine" : 38
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/DEBUGINFO/ExpectedFiles.cmake" : {
      "ObjectId" : "cf2e8ac6bda1d2a5be19177fb3306947e9851a1e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/DEBUGINFO/test.cmake" : {
      "ObjectId" : "161a36a855895ae988bdbad1f8dd281becf413a4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PGI compiler doesn't add build id to binaries by default\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for rpm packages execute flag must be set for shared libs if debuginfo\n\n# packages are generated\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# test that components with debuginfo enabled still honor\n\n# CPACK_PACKAGE_FILE_NAME setting\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# test debuginfo package rename\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/DEB_PACKAGE_VERSION_BACK_COMPATIBILITY/ExpectedFiles.cmake" : {
      "ObjectId" : "d1a3a5fb2db69a2ec386251b7cc064ef366e5652",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/DEB_PACKAGE_VERSION_BACK_COMPATIBILITY/VerifyResult.cmake" : {
      "ObjectId" : "771cc1048f04f1712817a1d9bf4a3a2a36f09394",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/DEB_PACKAGE_VERSION_BACK_COMPATIBILITY/test.cmake" : {
      "ObjectId" : "403e60ddee356477d9db4ba6a75b2cf7f940e59c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/DEFAULT_PERMISSIONS/ExpectedFiles.cmake" : {
      "ObjectId" : "b6fcc175aec20799ddb94cd549626a7fe5a0f1df",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/DEFAULT_PERMISSIONS/VerifyResult.cmake" : {
      "ObjectId" : "16ebcdc5e081788249944c5c47a81b15d81b14f1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DEB\n",
        "Line" : 22,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/DEFAULT_PERMISSIONS/test.cmake" : {
      "ObjectId" : "afe939074717fee90ba167fb1d22014f372164a8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/DEPENDENCIES/ExpectedFiles.cmake" : {
      "ObjectId" : "be7ba07db5d41b1bb20c12ceabc53db5e2c5a7e3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# dynamic lib extension is .so on Linux and .dylib on Mac so we will use a wildcard .* for it\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/DEPENDENCIES/VerifyResult.cmake" : {
      "ObjectId" : "7923148f4bdb61d7bb7f169d2a69ed5b7eadf4b5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PREDEPENDS\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# TODO add tests for what should not be present in lists\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/DEPENDENCIES/test.cmake" : {
      "ObjectId" : "fbd786ece0dcf5d7b8b9c0832a5d3a62190d0a4e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# false by default\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# FIXME can not be tested as libraries first have to be part of a package in order\n\n# to determine their dependencies and we can not be certain if there will be any\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# not entirely compatible...\n",
        "Line" : 18,
        "CharPositionInLine" : 38
      },
      "3" : {
        "Text" : "# RPM\n",
        "Line" : 19,
        "CharPositionInLine" : 9
      },
      "4" : {
        "Text" : "# FIXME auto autoprov is not tested at the moment as Ubuntu 15.04 rpmbuild\n\n# does not use them correctly: https://bugs.launchpad.net/rpm/+bug/1475755\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/DIST/ExpectedFiles.cmake" : {
      "ObjectId" : "d1a3a5fb2db69a2ec386251b7cc064ef366e5652",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/DIST/VerifyResult.cmake" : {
      "ObjectId" : "1b2eb487727e04074b01cbb2e117597a79aac5d8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# since we have no control over dist tag value we should try to escape\n\n# the content for use as a regular expression\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/DIST/test.cmake" : {
      "ObjectId" : "6bdd2c0f5ce1f802d1fa0b86c2fbc9a170c1947e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/EMPTY_DIR/ExpectedFiles.cmake" : {
      "ObjectId" : "8df68311535494a6897fc5a49b1d51ea1c2f571e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/EMPTY_DIR/test.cmake" : {
      "ObjectId" : "cd2c9fdae6833de901b8ae9c8f66317ca8110b2e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# not entirely compatible...\n",
        "Line" : 3,
        "CharPositionInLine" : 38
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/EXTERNAL/ExpectedFiles.cmake" : {
      "ObjectId" : "91608c9fe3700f2cb7b73097e96b528bfdb82f96",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/EXTERNAL/VerifyResult.cmake" : {
      "ObjectId" : "bc19d7efb32763b3fbf07bb699e9b45af50a1048",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/EXTERNAL/create_package.cmake" : {
      "ObjectId" : "2d7f993c30c258e150590f34d855c23df3a6b057",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/EXTERNAL/test.cmake" : {
      "ObjectId" : "bc9766b153536961e43aaeb2c35bd8be8a23f718",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/EXTRA/ExpectedFiles.cmake" : {
      "ObjectId" : "407cbe630e83da4f532f624491cf3896634c6f98",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/EXTRA/VerifyResult.cmake" : {
      "ObjectId" : "85e137fec4da3471c6b34d51e793b866d1681d16",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE: optional dot at the end of permissions regex is for SELinux enabled systems\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/EXTRA/test.cmake" : {
      "ObjectId" : "efa6dac19017727a7d2b284bd9958817ac13bfa3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# not acceptable permissions for lintian but we need to check that\n\n# permissions are preserved\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/EXTRA_SLASH_IN_PATH/ExpectedFiles.cmake" : {
      "ObjectId" : "3fb05346c6beaacc74c05671ffe747a7b31b1844",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/EXTRA_SLASH_IN_PATH/VerifyResult.cmake" : {
      "ObjectId" : "bfef720e9bf54c8e9b48518a1a3205bbd6b200cb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# check that relocation path is /foo and not //foo\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/EXTRA_SLASH_IN_PATH/test.cmake" : {
      "ObjectId" : "7cee1888e9d8cf346b9be05da9d5c347a36cb978",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PGI compiler doesn't add build id to binaries by default\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for rpm packages execute flag must be set for shared libs if debuginfo\n\n# packages are generated\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# extra trailing slash at the end that should be removed\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# combination should not cause //foo to apper as an relocation path\n\n# should be only /foo (extra slashes cause path comparisons to fail)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# extra trailing slash at the end that should be removed\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/GENERATE_SHLIBS/DEB-Prerequirements.cmake" : {
      "ObjectId" : "be44b2e337150e9e0d732db153e28ae5734a5397",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/GENERATE_SHLIBS/ExpectedFiles.cmake" : {
      "ObjectId" : "ccb5ef0b224d1f432495756e9b18b8fe57558e63",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# dynamic lib extension is .so on Linux and .dylib on Mac so we will use a wildcard .* for it\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/GENERATE_SHLIBS/VerifyResult.cmake" : {
      "ObjectId" : "8cefeea5fcd2fe3ae9b2471e697424c382fe176d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# soversion_zero\n",
        "Line" : 3,
        "CharPositionInLine" : 7
      },
      "1" : {
        "Text" : "# optional dot at the end of permissions regex is for SELinux enabled systems\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/GENERATE_SHLIBS/test.cmake" : {
      "ObjectId" : "e0eb67b84492c070b1b6c2ba5c35841fc6e82e49",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# soversion_zero\n",
        "Line" : 15,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/GENERATE_SHLIBS_LDCONFIG/DEB-Prerequirements.cmake" : {
      "ObjectId" : "be44b2e337150e9e0d732db153e28ae5734a5397",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/GENERATE_SHLIBS_LDCONFIG/ExpectedFiles.cmake" : {
      "ObjectId" : "d66c0449ce8e2d87da68de6578eb1ad15c6b3528",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# dynamic lib extension is .so on Linux and .dylib on Mac so we will use a wildcard .* for it\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/GENERATE_SHLIBS_LDCONFIG/VerifyResult.cmake" : {
      "ObjectId" : "422cfbe42c292783061ba2b68b5eb2ba86ba7c6d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE: optional dot at the end of permissions regex is for SELinux enabled systems\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/GENERATE_SHLIBS_LDCONFIG/test.cmake" : {
      "ObjectId" : "15c496b87a10da3de0dac857f9964f95152f797d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/INSTALL_SCRIPTS/ExpectedFiles.cmake" : {
      "ObjectId" : "de38df9ef4ca8a98d7d421e07cd4b119f5b01644",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/INSTALL_SCRIPTS/VerifyResult.cmake" : {
      "ObjectId" : "d7d82f27d6950a95bf45a92c01c97fcd0dc6910a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/INSTALL_SCRIPTS/test.cmake" : {
      "ObjectId" : "fb1b8de686969c863ce1cecf3988129f77f0503d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# default\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# specific\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/LONG_FILENAMES/DEB-Prerequirements.cmake" : {
      "ObjectId" : "ddd16e5b47ce597140f30b9737cdb48cff9959f4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/LONG_FILENAMES/ExpectedFiles.cmake" : {
      "ObjectId" : "4cb8dd0eb3a78584ad4472a4baa06175030d090a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/LONG_FILENAMES/VerifyResult.cmake" : {
      "ObjectId" : "0452343c08083abe0ea6ae4c1a0108d9c852d16e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# create structure required by non root dpkg install\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# some programs used by fakeroot require sbin in path so we should not\n\n# leave this to chance (programs: ldconfig and start-stop-daemon)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/LONG_FILENAMES/test.cmake" : {
      "ObjectId" : "f235d473ee3c6401a154fe1a75c16b038b690ca6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/MAIN_COMPONENT/ExpectedFiles.cmake" : {
      "ObjectId" : "629be9ea5f1bdb75f280ce7becc88890315c87a9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/MAIN_COMPONENT/test.cmake" : {
      "ObjectId" : "791c5862ec88b06724421d70b0abb28e2c27cd2f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/MD5SUMS/ExpectedFiles.cmake" : {
      "ObjectId" : "d1a3a5fb2db69a2ec386251b7cc064ef366e5652",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/MD5SUMS/VerifyResult.cmake" : {
      "ObjectId" : "fbdda9c88aba77f3c7cadfa2ceb51ce649493863",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/MD5SUMS/test.cmake" : {
      "ObjectId" : "15c5892666fa1a50fb1d5e3fb2edc645ae067da7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/MINIMAL/ExpectedFiles.cmake" : {
      "ObjectId" : "d1a3a5fb2db69a2ec386251b7cc064ef366e5652",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/MINIMAL/test.cmake" : {
      "ObjectId" : "15c5892666fa1a50fb1d5e3fb2edc645ae067da7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/PACKAGE_CHECKSUM/ExpectedFiles.cmake" : {
      "ObjectId" : "c375aca9d4b45d222895c3e08510c7a41827ddc4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/PACKAGE_CHECKSUM/VerifyResult.cmake" : {
      "ObjectId" : "2bb4d3ff9a5e42b4b7df0b2c42a9edebf4761b52",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/PACKAGE_CHECKSUM/test.cmake" : {
      "ObjectId" : "0838063460460f9d0553291cab0236c6071bef88",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/PARTIALLY_RELOCATABLE_WARNING/ExpectedFiles.cmake" : {
      "ObjectId" : "137da470e8be3dccb41104ea2c1cfe874a44b454",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# don't set the prefix here as we have absolute paths that should not be prefixed\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/PARTIALLY_RELOCATABLE_WARNING/test.cmake" : {
      "ObjectId" : "4698fb3c108094b14c41497da8e94b0b8018902f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/PER_COMPONENT_FIELDS/ExpectedFiles.cmake" : {
      "ObjectId" : "26fa1df92c0c2b775a72a54bd56ef8f37409b7ae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/PER_COMPONENT_FIELDS/VerifyResult.cmake" : {
      "ObjectId" : "b4bdb61b692776d6ced8437bcb96f98f4e580ef1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# check package name\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check package group\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# check package summaries (not available in DEB)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# check package description\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/PER_COMPONENT_FIELDS/test.cmake" : {
      "ObjectId" : "dc61d0abb17f8f2538289046b9a987482ca2c6ca",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# not entirely compatible...\n",
        "Line" : 3,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : "# not used for DEB\n",
        "Line" : 15,
        "CharPositionInLine" : 89
      },
      "2" : {
        "Text" : "# not used for DEB\n",
        "Line" : 16,
        "CharPositionInLine" : 98
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/SINGLE_DEBUGINFO/ExpectedFiles.cmake" : {
      "ObjectId" : "936e4ed80f7ff2e7cb27d700bff05d86f266405e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/SINGLE_DEBUGINFO/test.cmake" : {
      "ObjectId" : "60e9038fe27851d2908c0933bb5e5a2d2498eff3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PGI compiler doesn't add build id to binaries by default\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/SOURCE_PACKAGE/ExpectedFiles.cmake" : {
      "ObjectId" : "d78f222a3bedf770ea2c94d2ada8d0724afa92cf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/SOURCE_PACKAGE/VerifyResult.cmake" : {
      "ObjectId" : "73d7481f1520a4673f85005d4b668a0d85daf0e8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# make sure that we are using the version of cmake and cpack that we are testing\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# expected file content are test_prog and optional build-id links that are\n\n# generated by rpmbuild (introduced in rpm 4.13.0.1)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# check that there were no extra files generated\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/SOURCE_PACKAGE/test.cmake" : {
      "ObjectId" : "359b98fa4abe23a1675a216fa572879eabce01aa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/SUGGESTS/ExpectedFiles.cmake" : {
      "ObjectId" : "d1a3a5fb2db69a2ec386251b7cc064ef366e5652",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/SUGGESTS/VerifyResult.cmake" : {
      "ObjectId" : "61ce752fe920d18305d5a059bbb94adb2542b60f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Only verify that suggests tag is present only if that tag is supported.\n\n# If it is not supported the rpm package was correctly generated by ignoring\n\n# that tag and that was already checked by expected files test.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/SUGGESTS/test.cmake" : {
      "ObjectId" : "dc90ae8848cf6441d3d6de3f4a1d8918fcf0641a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/SYMLINKS/ExpectedFiles.cmake" : {
      "ObjectId" : "e8281a8d3638532bb3afbafb12e41269074ed14b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/SYMLINKS/TGZ-Prerequirements.cmake" : {
      "ObjectId" : "f3df46b2a3bdfdf866ab7b8f8a0140a6dcb36927",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# limit test to platforms that support symlinks\n",
        "Line" : 2,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/SYMLINKS/VerifyResult.cmake" : {
      "ObjectId" : "0632319ab0dace69db23f767994cb073ac10c7dd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################\n\n# verify generated symbolic links\n\n#######################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/SYMLINKS/test.cmake" : {
      "ObjectId" : "fef765ccd6646ae901a05a16e613d6c0dc08753a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test symbolic link to an empty dir\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# test symbolic link to a non empty dir\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/TIMESTAMPS/ExpectedFiles.cmake" : {
      "ObjectId" : "d1a3a5fb2db69a2ec386251b7cc064ef366e5652",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/TIMESTAMPS/VerifyResult.cmake" : {
      "ObjectId" : "e7e2645aaa52eeefa2bb8e6aa7cf20179fe6bbb0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# getPackageContent defined for archives omit the metadata (non-verbose)\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Expected timestamp is UNIX time 123456789\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/TIMESTAMPS/test.cmake" : {
      "ObjectId" : "a193852142785f01fe995419fb8b401e9cd3f4a0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/USER_FILELIST/ExpectedFiles.cmake" : {
      "ObjectId" : "8420986f23311c284930b08191754ecd0afbde46",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/USER_FILELIST/VerifyResult.cmake" : {
      "ObjectId" : "57444ed8e3db0a9048743779c320050312a155ac",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/USER_FILELIST/test.cmake" : {
      "ObjectId" : "acfee4202e0b409d5eeff27a2352a938bbf6833c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We are verifying the USER_FILELIST works by comparing what\n\n# ends up with a %doc tag in the final rpm with what we expect\n\n# from this USER_FILELIST.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/VERSION/ExpectedFiles.cmake" : {
      "ObjectId" : "372f71badacdb0787ba2e63577e2025680eca502",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/VERSION/VerifyResult.cmake" : {
      "ObjectId" : "eed9696cd13c0d34f55b90eaace19f2297e3abd4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DEB\n",
        "Line" : 14,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPack/tests/VERSION/test.cmake" : {
      "ObjectId" : "301ab612651ff3677f9c891cff7b9592544fd42f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackCommandLine/RunCMakeTest.cmake" : {
      "ObjectId" : "991146c8ecf9b08e97eb1436b9799f4610c49a33",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackConfig/CMakeLists.txt" : {
      "ObjectId" : "9a9e7b4435139aae6e37575b0018f9eff0482b24",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackConfig/Default-check.cmake" : {
      "ObjectId" : "b67fe8110c40d92de1404d68f3d2fd163488a1b2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackConfig/Default.cmake" : {
      "ObjectId" : "3b3beb30b80c8da1c9cb6c4e6e954b9ae35598f8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# two levels of escaping to pass through CPackConfig.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackConfig/RunCMakeTest.cmake" : {
      "ObjectId" : "8f2196d5bc1fa7bea259ecd49132f4c444cb993b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackConfig/Simple-check.cmake" : {
      "ObjectId" : "6e0cf6fa3c7ca89aadb675ddc545457f4f639af6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackConfig/Simple.cmake" : {
      "ObjectId" : "c9f654142ca74fffbc0cc08574a33b7e8e74a8dc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackConfig/Special-check.cmake" : {
      "ObjectId" : "0624b790811d791b6b4a6b4dc32bfc6b939c1791",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackConfig/Special.cmake" : {
      "ObjectId" : "9442c934c3670a618e4445f4641895ace359c215",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackConfig/Verbatim-check.cmake" : {
      "ObjectId" : "958547dbbd4f79b2395fa8d5aa5ac14b1a745821",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# make sure the default for this is still set correctly with\n\n# CPACK_VERBATIM_VARIABLES on\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackConfig/Verbatim.cmake" : {
      "ObjectId" : "4d271c33f683096eaa18c5d4522aa102d804e21b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackConfig/Version1-check.cmake" : {
      "ObjectId" : "0f5347f78680a7bac76e78fb47ec34ac88d8a399",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackConfig/Version1.cmake" : {
      "ObjectId" : "703485c9883865cf17ff5a12b318f0a38907e5fb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackConfig/Version2-check.cmake" : {
      "ObjectId" : "3a2d572dfd9d97e88a31d27f05514715ee91d1ad",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackConfig/Version2.cmake" : {
      "ObjectId" : "c084137b415d0a6c5750e5a5d2353a8f8f6447b1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackConfig/Version3-check.cmake" : {
      "ObjectId" : "d4a3983dd1b14bc2859d607d52d05225d6f83a00",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackConfig/Version3.cmake" : {
      "ObjectId" : "4df28bbe1c2a582f65b65d07daf568772bf6b0f0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackConfig/check.cmake" : {
      "ObjectId" : "ca6229e0d1ebcf8af3197d80ffde6531182f21e9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackInstallProperties/Append-check.cmake" : {
      "ObjectId" : "017b30d7d5e7da53d2db4ade54939398f84bfa83",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackInstallProperties/Append.cmake" : {
      "ObjectId" : "cecc45f316432c5e6fc2f1fd8db0d269b3c15293",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackInstallProperties/CMakeLists.txt" : {
      "ObjectId" : "89ff7c49feb1458abbc37bd3db936a0ba1833536",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackInstallProperties/FilenameGenex-check.cmake" : {
      "ObjectId" : "8c9e967c3c48c968bb80c660e8420f61616f7190",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackInstallProperties/FilenameGenex.cmake" : {
      "ObjectId" : "8fc1218f227d912dfdbf8b08aa446840d6646e5d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackInstallProperties/MultipleValues-check.cmake" : {
      "ObjectId" : "91278ba4a0c28d6510a03c82a0a43b7c3bdd2a73",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackInstallProperties/MultipleValues.cmake" : {
      "ObjectId" : "26db52acd42dfc600a3a79c0c1e397f96f4f84d9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackInstallProperties/PerConfigValue-check.cmake" : {
      "ObjectId" : "2966d88c9e5bae3242b2d8e393537f69e3a66dc4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackInstallProperties/PerConfigValue.cmake" : {
      "ObjectId" : "b23d3c7df339ec68024bc140959a179054f005a6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackInstallProperties/Replace-check.cmake" : {
      "ObjectId" : "6e492e72d85dcbe1a3e2ea93d51cc2a0a8a28adc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackInstallProperties/Replace.cmake" : {
      "ObjectId" : "104d5a41f08d6bd88c4aec2cb8651acca4120a2a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackInstallProperties/RunCMakeTest.cmake" : {
      "ObjectId" : "d244ac5a1773dfe07c2edc499175adee61750b7b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackInstallProperties/Simple-check.cmake" : {
      "ObjectId" : "6a7ee2aa49b309fd7de17f79c915e9c98b7b6c15",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackInstallProperties/Simple.cmake" : {
      "ObjectId" : "2eb87553ae55ffa97a49c923dfae21653a68fb79",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackInstallProperties/ValueGenex-check.cmake" : {
      "ObjectId" : "cdfbcda22cec01f374c4d595b7a1696595ed4fd3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackInstallProperties/ValueGenex.cmake" : {
      "ObjectId" : "2001d9f4cb912a028ee2ce996b0c941d60f38352",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackInstallProperties/check.cmake" : {
      "ObjectId" : "65aa467bd80f96863ea370490d8b7b42eebdb1a8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CPackSymlinks/RunCMakeTest.cmake" : {
      "ObjectId" : "439d95e6179fe14922ddeb577e851b6d7ada4a7a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CSharpCustomCommand/CMakeLists.txt" : {
      "ObjectId" : "74b3ff8de38d8e90e2e9549eb077ea0a023fa581",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CSharpCustomCommand/CommandWithOutput-check.cmake" : {
      "ObjectId" : "60d77eb60b9998584cd79381a1d2dc35c8eef806",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CSharpCustomCommand/CommandWithOutput.cmake" : {
      "ObjectId" : "68341fa889fdb142a834ec7566894c026ab3d9bd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CSharpCustomCommand/RunCMakeTest.cmake" : {
      "ObjectId" : "ab3e51b592fbbfa0b1b06862c3a2f2b0a7e41a03",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# copy the input file to build dir to avoid changing files in cmake\n\n# source tree.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# change file content to trigger custom command with next build\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CSharpCustomCommand/TargetWithCommand.cmake" : {
      "ObjectId" : "fdaea5cb28a50a760d4123727846b91a0aeae4f6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CSharpReferenceImport/CMakeLists.txt" : {
      "ObjectId" : "74b3ff8de38d8e90e2e9549eb077ea0a023fa581",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CSharpReferenceImport/ImportLib.cmake" : {
      "ObjectId" : "5ad6e76c7208980bf2025dcae1597675e3b59b85",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# native c++ dll\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# mixed c++ dll\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# pure c++ dll\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# safe c++ dll\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# generate export file\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CSharpReferenceImport/ReferenceImport.cmake" : {
      "ObjectId" : "c65f623a0aec990b846caa6d88ee05869a5c070d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include generated export file.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Verify expected targets are imported\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test referencing managed assemblies from C# executable.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ignored\n",
        "Line" : 33,
        "CharPositionInLine" : 20
      },
      "4" : {
        "Text" : "# native C++ executable.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ignored\n",
        "Line" : 42,
        "CharPositionInLine" : 20
      },
      "6" : {
        "Text" : "# ignored\n\n# ignored\n",
        "Line" : 45,
        "CharPositionInLine" : 18
      },
      "7" : {
        "Text" : "# mixed C++ executable.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# pure C++ executable.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ignored\n",
        "Line" : 70,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "# native C++ executable.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ignored\n",
        "Line" : 82,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 12
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CSharpReferenceImport/RunCMakeTest.cmake" : {
      "ObjectId" : "c44e59e0ad68c5460cf742cd404e99f9616df112",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# generate C# & C++ assemblies for use as imported target\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make sure we know the RunCMake_TEST if configuring the project again\n\n# with cmake-gui for debugging.\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# generate C# & managed C++ programs which reference imported managed assemblies.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# make sure we know the RunCMake_TEST if configuring the project again\n\n# with cmake-gui for debugging.\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CTest/BeforeProject.cmake" : {
      "ObjectId" : "903ca6933289b736c5a825f07459040b4c88f6cf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CTest/CMakeLists.txt" : {
      "ObjectId" : "73e6a785a41ba7c68337a271e5897cb471881d71",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CTest/NotOn-check.cmake" : {
      "ObjectId" : "b68218af05656d07f9bc7c14356f41ec6f6a7b55",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CTest/NotOn.cmake" : {
      "ObjectId" : "7fba019b694240749ff91b7399decf9c32b5fb6b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CTest/RunCMakeTest.cmake" : {
      "ObjectId" : "13922401eb05fe5600e2e798712cc26bbccd45d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CTestCommandLine/CMakeLists.txt" : {
      "ObjectId" : "289710955440b63a5c0eb79b4596ac0f88b9bfa2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CTestCommandLine/MergeOutput.cmake" : {
      "ObjectId" : "528ac90149a46d8479e9ef0f292a3bc96bb3bbdf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CTestCommandLine/RunCMakeTest.cmake" : {
      "ObjectId" : "750ae5026b2da37b97baacf912e9fe0ffcab65a9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Tests for the --test-load feature of ctest\n\n#\n\n# Spoof a load average value to make these tests more reliable.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Verify that new tests are not started when the load average exceeds\n\n# our threshold and that they then run once the load average drops.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Verify that warning message is displayed but tests still start when\n\n# an invalid argument is given.\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Verify that new tests are started when the load average falls below\n\n# our threshold.\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create a test with affinity enabled.  The default PROCESSORS\n\n# value is 1, so our expected output checks that this is the\n\n# number of processors in the mask.\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Run ctest with a large parallel level so that the value is\n\n# not responsible for capping the number of processors available.\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CTestCommandLine/TestOutputSize-check.cmake" : {
      "ObjectId" : "918d242aa62e6c8b26905aeeeaea059a37b08085",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CTestCommandLine/init.cmake" : {
      "ObjectId" : "a900f675c37885f4e4d14c5b103ebf1933c21b55",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is run by test initialization in repeat-until-fail-cmake.cmake\n\n# with cmake -P.  It creates TEST_OUTPUT_FILE with a 0 in it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CTestCommandLine/repeat-until-fail-cmake.cmake" : {
      "ObjectId" : "ecb9a64756228c7c5aabf2f8c7839fec3e137a0e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CTestCommandLine/test1.cmake" : {
      "ObjectId" : "eeae7a2041a3dc580cbe95f0f63d8d727554d6cb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is run by test test1 in repeat-until-fail-cmake.cmake with cmake -P.\n\n# It reads the file TEST_OUTPUT_FILE and increments the number\n\n# found in the file by 1.  When the number is 2, then the\n\n# code sends out a cmake error causing the test to fail\n\n# the second time it is run.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CTestTimeoutAfterMatch/RunCMakeTest.cmake" : {
      "ObjectId" : "ee4db839f7d1364f3b17c3b9e8990fb0979a97c3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CTestTimeoutAfterMatch/SleepFor1Second.cmake" : {
      "ObjectId" : "82c2a444fa4ee2b1903d73dc876b32cbd3868d4c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CacheNewline/CMakeLists.txt" : {
      "ObjectId" : "93ee9dfd5f01100535f91a6cad70bc8b2cf1d1b7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CacheNewline/CacheNewline-check.cmake" : {
      "ObjectId" : "6534f6386d467d54ff9c641cd0e8ada4db161650",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CacheNewline/CacheNewline.cmake" : {
      "ObjectId" : "81851dbe017827c3082c66c9a881259f4d262749",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CacheNewline/RunCMakeTest.cmake" : {
      "ObjectId" : "5e3d2d49993b90f9bda3133443a1cc801d57428d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckIPOSupported/CMakeLists.txt" : {
      "ObjectId" : "4a13d29a0e38bd055a473154db410a84aab42235",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckIPOSupported/RunCMakeTest.cmake" : {
      "ObjectId" : "b7d524ccf01ffe0b868277182db9eccc5bed9fba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckIPOSupported/cmp0069-is-old.cmake" : {
      "ObjectId" : "14fed0467766950925a535c6f3b2cebdf22d67df",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckIPOSupported/default-lang-none.cmake" : {
      "ObjectId" : "0a2ac695c87ad1cb923cf86deb1a9ee62aefd98d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckIPOSupported/not-supported-by-cmake.cmake" : {
      "ObjectId" : "e583dd02c32514154947d87acec80934a98d2e2c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckIPOSupported/not-supported-by-compiler.cmake" : {
      "ObjectId" : "86c8f8d43ce3f0025f3e21c50b7d705a123b011a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckIPOSupported/not-supported-by-generator.cmake" : {
      "ObjectId" : "c32af6ed3bcf3d9c7ff2090ddb1a1eb246d4d423",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckIPOSupported/save-to-result.cmake" : {
      "ObjectId" : "f76db724d00f0e5f4a49eaa64820de1a6518b1cb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compiler supports IPO\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Compiler doesn't support IPO, output should not be empty.\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckIPOSupported/unparsed-arguments.cmake" : {
      "ObjectId" : "3ee732615180dedb998182d05064457cd54e552b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckIPOSupported/user-lang-unknown.cmake" : {
      "ObjectId" : "ac743ad8af14e57812bc0d2adb033ba4d58e9bd9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckModules/CMP0075.cmake" : {
      "ObjectId" : "4a3b7204aa44b24f897262c56c7dcb0735b4fc47",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# second does not warn\n",
        "Line" : 18,
        "CharPositionInLine" : 47
      },
      "2" : {
        "Text" : "#----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# second does not warn\n",
        "Line" : 33,
        "CharPositionInLine" : 55
      },
      "4" : {
        "Text" : "#----------------------------------------------------------------------------\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# second does not warn\n",
        "Line" : 48,
        "CharPositionInLine" : 57
      },
      "6" : {
        "Text" : "#============================================================================\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# These should not warn.\n\n# These should pass the checks due to ignoring 'does_not_exist'.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#----------------------------------------------------------------------------\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#----------------------------------------------------------------------------\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#============================================================================\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# These should not warn.\n\n# These should fail the checks due to requiring 'does_not_exist'.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#----------------------------------------------------------------------------\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#----------------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckModules/CMakeLists.txt" : {
      "ObjectId" : "9872df2a181690138a33560185b487f53a966f2b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckModules/CheckIncludeFilesMissingLanguage.cmake" : {
      "ObjectId" : "59accb084c6195bfdd5843c82268f0885c3d9d59",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckModules/CheckIncludeFilesOk.cmake" : {
      "ObjectId" : "0891ec69a4ea32c07c769ae086b6c6b3478451a8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckModules/CheckIncludeFilesOkNoC.cmake" : {
      "ObjectId" : "a1d2843df39c960e5df51808b91b037ebe96c82f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckModules/CheckIncludeFilesUnknownArgument.cmake" : {
      "ObjectId" : "dfc2b932cd853c2c0a50dd53bc186cc4e9ecc25e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckModules/CheckIncludeFilesUnknownLanguage.cmake" : {
      "ObjectId" : "3a77cf93f86d19db0253191f817ca71aa38a8a7d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckModules/CheckStructHasMemberMissingKey.cmake" : {
      "ObjectId" : "49f51ceca45d62c1d007c8965913b37627c5f919",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckModules/CheckStructHasMemberMissingLanguage.cmake" : {
      "ObjectId" : "b404d665b398c35ca1058818ceec8223a36efbc3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckModules/CheckStructHasMemberOk.cmake" : {
      "ObjectId" : "4c064c50102668764c48a1d4edcc6c8b7359e32d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckModules/CheckStructHasMemberTooManyArguments.cmake" : {
      "ObjectId" : "12f81582dca7b284c4b3470ef0ece2cc5c99fb1a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckModules/CheckStructHasMemberUnknownLanguage.cmake" : {
      "ObjectId" : "183058ddce8f657c12096496dd09214a3e10c02e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckModules/CheckStructHasMemberWrongKey.cmake" : {
      "ObjectId" : "900eb0a75e7cbaa70b4a936e5524957d13eca540",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckModules/CheckTypeSizeMissingLanguage.cmake" : {
      "ObjectId" : "3fae6c4dbc2fac38842924e07e0090969200f1a1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckModules/CheckTypeSizeMixedArgs.cmake" : {
      "ObjectId" : "d2ccc0fad171e46128900c8370f469aa678f1218",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckModules/CheckTypeSizeOk.cmake" : {
      "ObjectId" : "45a4978fcfdd0c015fddb502db453ae02091f6ac",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Weird but ok... only last value is considered\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckModules/CheckTypeSizeOkNoC.cmake" : {
      "ObjectId" : "b2dcd7f9b99679ecf4ea32f56ca07c084eb02352",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckModules/CheckTypeSizeUnknownArgument.cmake" : {
      "ObjectId" : "6f24ee16c1d9ef3aaf6513a3b52850c0cad4077c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckModules/CheckTypeSizeUnknownLanguage.cmake" : {
      "ObjectId" : "2d5184cd699df4e998eb12b323a69dc02f404bda",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CheckModules/RunCMakeTest.cmake" : {
      "ObjectId" : "8a046e14c209ff9f478e1f1a4718e60810ad0f06",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ClangTidy/C-bad.cmake" : {
      "ObjectId" : "aa54c08209a32a2bc1c6ec68131f02d5c04ab472",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ClangTidy/C-launch.cmake" : {
      "ObjectId" : "e66ca203e2f7ed744830811b714e688892a242ca",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ClangTidy/C.cmake" : {
      "ObjectId" : "b8057b0b1933741ef450cafdb157da250e4a3f18",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ClangTidy/CMakeLists.txt" : {
      "ObjectId" : "93ee9dfd5f01100535f91a6cad70bc8b2cf1d1b7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ClangTidy/CXX-launch.cmake" : {
      "ObjectId" : "3002c9d688c7ff1ec719af09cb69e2f92bfb044e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ClangTidy/CXX.cmake" : {
      "ObjectId" : "2d22325ccd6da0e108157abb2acb409b9c871c6b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ClangTidy/RunCMakeTest.cmake" : {
      "ObjectId" : "2f41e503ca45a8b6d1a751e7baf9715d6fb4c9d8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for tests without cleaning.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/Build.cmake" : {
      "ObjectId" : "20df108ef94da4939b535a70600c97c5bd30819e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/BuildDir.cmake" : {
      "ObjectId" : "30030a7839981f87fb39e2de6b32a84be6cfeca2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/BuildDir/CMakeLists.txt" : {
      "ObjectId" : "d2a28310dedc8afae5ed68bacf1d0051d5275de7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/CMakeLists.txt" : {
      "ObjectId" : "289710955440b63a5c0eb79b4596ac0f88b9bfa2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/D_nested_cache.cmake" : {
      "ObjectId" : "9b572840e260312ee4f57093768309a65b8acee2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/D_typed_nested_cache.cmake" : {
      "ObjectId" : "9b572840e260312ee4f57093768309a65b8acee2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/DeprecateVS8-WARN-OFF.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/DeprecateVS8-WARN-ON.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/E_create_symlink-broken-create-check.cmake" : {
      "ObjectId" : "5df5f2fb70aa8422f284a4203386163f461ec780",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/E_create_symlink-broken-replace-check.cmake" : {
      "ObjectId" : "d37df0169040c585890fad36e64877335500e52e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/E_env-set.cmake" : {
      "ObjectId" : "c2639b6634d4b0b18a9fc9232b4fdbd8aff29aee",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/E_env-unset.cmake" : {
      "ObjectId" : "04976fb40a1ad51bd56699b0b446890a91c11a1b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/E_sleep-no-args-stderr.cmake" : {
      "ObjectId" : "977f1efe854d44069c1f3b3213d43515978a78aa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/ExplicitDirs/CMakeLists.txt" : {
      "ObjectId" : "0ca5a0a0b94ea03d112b25eacf8c1fabcc82ac00",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/P_working-dir.cmake" : {
      "ObjectId" : "4ea02938248d2da266f32181b1050f3fc4e1af80",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/RunCMakeTest.cmake" : {
      "ObjectId" : "3e56c2554846c4804b77baccadbae766e1da7672",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# make sure that -B can explicitly construct build directories\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# No default jobs for Xcode and FreeBSD build command\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n\n# These tests are special on Windows since it will only fail if the user\n\n# running the test does not have the priveldge to create symlinks. If this\n\n# happens we clear the msg in the -check.cmake and say that the test passes\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -Wdev should not override deprecated options if specified\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -Wdev should enable deprecated warnings as well\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -Werror=dev should enable deprecated errors as well\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Dev warnings should be on by default\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Deprecated warnings should be on by default\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Conflicting -W options should honor the last value\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/Wdeprecated.cmake" : {
      "ObjectId" : "3142b42dcaae9701e1157ab13498e687c36fc43f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/Wdev.cmake" : {
      "ObjectId" : "756f31eee0f6f426ec158bbb725ff5303fa95f56",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# with -Wdev this will also cause an AUTHOR_WARNING message, checks that\n\n# messages issued outside of the message command, by other CMake commands, also\n\n# are affected by -Wdev\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/Werror_deprecated.cmake" : {
      "ObjectId" : "3142b42dcaae9701e1157ab13498e687c36fc43f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/Werror_dev.cmake" : {
      "ObjectId" : "05f333a5797731d3bed1612c4decb0d7743bb167",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# with -Werror=dev this will also cause an (upgraded) AUTHOR_ERROR message,\n\n# checks that messages issued outside of the message command, by other CMake\n\n# commands, also are affected by -Werror=dev\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# message command sets fatal occurred flag, so run it last\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/Wno-deprecated.cmake" : {
      "ObjectId" : "3142b42dcaae9701e1157ab13498e687c36fc43f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/Wno-dev.cmake" : {
      "ObjectId" : "802b435b03bd1a6120c53fea5108ad12b8d78f3e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# without -Wno-dev this will also cause an AUTHOR_WARNING message, checks that\n\n# messages issued outside of the message command, by other CMake commands, also\n\n# are affected by -Wno-dev\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/Wno-error_deprecated.cmake" : {
      "ObjectId" : "676792a8d866d05fba53b194acacf4491a0bb4da",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This should still produce a warning when -Wno-error=deprecated is specified\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/Wno-error_dev.cmake" : {
      "ObjectId" : "b700c197507808b7538cfc475ac6c0b36b9b20b3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This should still produce a warning when -Wno-error=dev is specified\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# with -Wno-error=dev this will also cause an AUTHOR_WARNING message, checks\n\n# that messages issued outside of the message command, by other CMake commands,\n\n# also are affected by -Wno-error=dev\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/cmake_depends-check.cmake" : {
      "ObjectId" : "031478b7bfa0e27fbe1df72c1016f3ecf226d185",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/debug-output.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/debug-trycompile.cmake" : {
      "ObjectId" : "a3835a70016a16f505fa77d90cfcfbe65d2a76a2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Look for a source tree left by enable_language internal checks.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/trace-expand-warn-uninitialized.cmake" : {
      "ObjectId" : "ec3e4d46de3f9b7030cc433a1729b854be147769",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/trace-expand.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/trace-only-this-file.cmake" : {
      "ObjectId" : "1450271533de1d71dd935fbda59b9476c59ec98e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/trace-source.cmake" : {
      "ObjectId" : "5ac2d9defb6f702928cd3431d300260210d36c05",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLine/trace.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLineTar/7zip.cmake" : {
      "ObjectId" : "4bc654846e633b722c5037d004adb6fa8ee17338",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLineTar/CMakeLists.txt" : {
      "ObjectId" : "289710955440b63a5c0eb79b4596ac0f88b9bfa2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLineTar/RunCMakeTest.cmake" : {
      "ObjectId" : "12635dbfb0a4def35b9dd2fb2da1632535e6e795",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLineTar/gnutar-gz.cmake" : {
      "ObjectId" : "5f2674a8fba470ea1ca43b4717b612de9e01e7ba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLineTar/gnutar.cmake" : {
      "ObjectId" : "aaca596f513daddd146d0454bdd0b453ca4e5c83",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLineTar/pax-xz.cmake" : {
      "ObjectId" : "baf63d5c8abc2595ec4e280539cbddc1f2500110",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLineTar/pax.cmake" : {
      "ObjectId" : "60ed2385c78f15c506ece9c84c4840af2b18ff98",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLineTar/paxr-bz2.cmake" : {
      "ObjectId" : "881a0af3bb46fe6ff0502b7730cdbc110189eb3d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLineTar/paxr.cmake" : {
      "ObjectId" : "968a103cad8b42ad080fb9e9a9f3092d5d4a7d94",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLineTar/roundtrip.cmake" : {
      "ObjectId" : "dc1c8852803fbcdb362e2e23b9aeb6f9ab559565",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CommandLineTar/zip.cmake" : {
      "ObjectId" : "08e2fdb9cca47ff405ef80a45eacdb2e2bd902f0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompatibleInterface/AutoUic.cmake" : {
      "ObjectId" : "03635e2a5fc9a733212cd56c164197666d721adf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompatibleInterface/CMakeLists.txt" : {
      "ObjectId" : "f452db177035b737ea028d8b2d42e3f28fefca76",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompatibleInterface/DebugProperties.cmake" : {
      "ObjectId" : "0196611ca3486a5f22dc8ac5ad73563a9b4091de",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Not set.\n",
        "Line" : 25,
        "CharPositionInLine" : 17
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompatibleInterface/InterfaceBool-builtin-prop.cmake" : {
      "ObjectId" : "5feb4d5cc2b2b5b6ab11f0f1ab8477c4099fde66",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompatibleInterface/InterfaceBool-mismatch-depend-self.cmake" : {
      "ObjectId" : "90543e8d3fc2404eefe1f94db43b33cf4fe390f1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompatibleInterface/InterfaceBool-mismatch-depends.cmake" : {
      "ObjectId" : "69be79632716e652de1134fcb1decb84452cfc2b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompatibleInterface/InterfaceBool-mismatched-use.cmake" : {
      "ObjectId" : "ccfad0ac7427bcea8f05531e56b0d74fc23e3fe2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompatibleInterface/InterfaceNumber-mismatched-use.cmake" : {
      "ObjectId" : "a064d7683bfb3da5e1a4345c32ea7ee10e21ffd3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompatibleInterface/InterfaceString-Bool-Conflict.cmake" : {
      "ObjectId" : "4bae8042d7f2fb6daf51d6b2ee18ea2993545af9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompatibleInterface/InterfaceString-Bool-Min-Conflict.cmake" : {
      "ObjectId" : "164ffd9fc63740c2891a4d3aa225d48c6104086d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompatibleInterface/InterfaceString-builtin-prop.cmake" : {
      "ObjectId" : "5772856cc6276f72e8335cac0cd40a647e9bde6d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompatibleInterface/InterfaceString-mismatch-depend-self.cmake" : {
      "ObjectId" : "187f29f796c70287f553b7d16a0e23a244c89c25",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompatibleInterface/InterfaceString-mismatch-depends.cmake" : {
      "ObjectId" : "73cc3fc55b786e178ec5b7d4f48d856d0919c721",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompatibleInterface/InterfaceString-mismatched-use.cmake" : {
      "ObjectId" : "af3ce8fbc84c36d86532ca3a41937b2802c4869b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompatibleInterface/RunCMakeTest.cmake" : {
      "ObjectId" : "0b9729bf2970f980c07715195d4a111e2ab9ad4e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileDefinitions/CMakeLists.txt" : {
      "ObjectId" : "74b3ff8de38d8e90e2e9549eb077ea0a023fa581",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileDefinitions/RunCMakeTest.cmake" : {
      "ObjectId" : "233fe3467124131565abd71a9adde15969b87000",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileDefinitions/SetEmpty.cmake" : {
      "ObjectId" : "15cb4e9a3f3d88ac51b0a57e762467c3aa4a6c7b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/CMakeLists.txt" : {
      "ObjectId" : "3482e6baf27164315568515336ff578f0a690222",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/LinkImplementationFeatureCycle.cmake" : {
      "ObjectId" : "b24a6801bf4ecca74dfef2643c78273b18cf8aa7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# When starting, $<COMPILE_FEATURES:cxx_std_11> is '0', so 'freeze' the\n\n# CXX_STANDARD at 98 during computation.\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# This would add cxx_std_11, but that would require CXX_STANDARD = 11,\n\n# which is not allowed after freeze.  Report an error.\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/LinkImplementationFeatureCycleSolved.cmake" : {
      "ObjectId" : "a04dcec2040762ca2e53ab7e96ccb45810a9bb65",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This, or populating the COMPILE_FEATURES property with a feature in the\n\n# same standard as cxx_nullptr, solves the cycle above.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/NoSupportedCFeatures.cmake" : {
      "ObjectId" : "3624d4b9fd7499109d72b1cc2bf3101d911c2064",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/NoSupportedCFeaturesGenex.cmake" : {
      "ObjectId" : "b6053aaf1afe6461022ce4cd1a2288c00f9734a6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/NoSupportedCxxFeatures.cmake" : {
      "ObjectId" : "512194879c066ca928931b4e7d193bd5079b2209",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/NoSupportedCxxFeaturesGenex.cmake" : {
      "ObjectId" : "490f187f578d20f276ff6d43ab09cea2a9b3a47a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/NonValidTarget1.cmake" : {
      "ObjectId" : "b544b9977f7eeb61d107f3681a09c97dc00d0f19",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/NonValidTarget2.cmake" : {
      "ObjectId" : "c41bf57cc6ae047bbc5015119adbeda770472c8b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/NotAFeature.cmake" : {
      "ObjectId" : "35246c8bdc2383c4dfb014e07f18b53557cac9ad",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/NotAFeatureGenex.cmake" : {
      "ObjectId" : "ad2bd371d1f46f50da61ae28ec429e76a1c43516",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/NotAFeatureTransitive.cmake" : {
      "ObjectId" : "7311aecd8ec7505a9587c5cf769b457719c3ff95",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/NotAFeature_OriginDebug.cmake" : {
      "ObjectId" : "350c2eaa9ae760aa8986262c5f55c451f410b80d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/NotAFeature_OriginDebugCommand.cmake" : {
      "ObjectId" : "467d9a17e407abd3923effda72ec11713bb7e41c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/NotAFeature_OriginDebugGenex.cmake" : {
      "ObjectId" : "2122981bf8fc5f84259f7b583d49cdd0b0b65eee",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/NotAFeature_OriginDebugTransitive.cmake" : {
      "ObjectId" : "05d00736df35ba962ff3e6dcbd2cab2757c55b09",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/NotAStandard.cmake" : {
      "ObjectId" : "11529d85a5d27e5968e131c1ad40a0cfc1d97764",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/RequireCXX11.cmake" : {
      "ObjectId" : "f60504f93f1eb80246492a02570cf287544e11f8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/RequireCXX11Ext.cmake" : {
      "ObjectId" : "10b251aa431899130ee34a8e22ea0fbdb7b0f18b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/RequireCXX11ExtVariable.cmake" : {
      "ObjectId" : "29703db68a80dbaf574c48129b450d2242a037ab",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/RequireCXX11Variable.cmake" : {
      "ObjectId" : "c480997d486d953c20e22bc29d1fb8a9b47ba2f3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/RequireCXX98.cmake" : {
      "ObjectId" : "fd9fb60052e0d2fc3e08240ead9bbfbd51ddbe66",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/RequireCXX98Ext.cmake" : {
      "ObjectId" : "4ea595edb333a51589866a68d79e612c5b3cf095",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/RequireCXX98ExtVariable.cmake" : {
      "ObjectId" : "0e3ef8dfb97b156e51939e7e314d1b4b0b82037a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/RequireCXX98Variable.cmake" : {
      "ObjectId" : "75622645b8965acf2b4bd78c4739c1545b0da359",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/RunCMakeTest.cmake" : {
      "ObjectId" : "5a70da2fa3fce60873bfbd21b97c2535a5aec4fe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompileFeatures/generate_feature_list.cmake" : {
      "ObjectId" : "5c58052b810af7c153996712db4dc167e354d4ce",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerChange/CMakeLists.txt" : {
      "ObjectId" : "b4b30165f06acba61f2e014bac79bc584fefc5d1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# needed when cache is deleted\n",
        "Line" : 3,
        "CharPositionInLine" : 43
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerChange/EmptyCompiler-override.cmake" : {
      "ObjectId" : "28d29e03eec3d7ae2e1869c2db73fa675f147205",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerChange/EmptyCompiler.cmake" : {
      "ObjectId" : "06e9e033bfe4339c581cce8ff0efc450e4e583a0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerChange/FindCompiler.cmake" : {
      "ObjectId" : "297ab2fa50c0ddb70802f70f5c069a222df47e92",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerChange/FirstCompiler.cmake" : {
      "ObjectId" : "c87ec49522ea47b6460606bf65856afb61336471",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerChange/RunCMakeTest.cmake" : {
      "ObjectId" : "5bb2821d9f5176ff289e689573eb5a3d129309cc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Detect the compiler in use in the current environment.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Now that we have the full compiler path, hide CC.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Wrap around the real compiler so we can change the compiler\n\n# path without changing the underlying compiler.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use a single build tree for remaining tests without cleaning.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check build with compiler wrapper 1.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check rebuild with compiler wrapper 2.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check failure with an empty compiler string.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerChange/SecondCompiler.cmake" : {
      "ObjectId" : "c87ec49522ea47b6460606bf65856afb61336471",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerLauncher/C-launch.cmake" : {
      "ObjectId" : "e66ca203e2f7ed744830811b714e688892a242ca",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerLauncher/C.cmake" : {
      "ObjectId" : "67bf7c4ac5242c4c9959e3be36f61e5fb7550342",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerLauncher/CMakeLists.txt" : {
      "ObjectId" : "18dfd2686f63fed35d3e7940d69512d8fd0ed2e3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerLauncher/CUDA-launch.cmake" : {
      "ObjectId" : "6b4b816e9278500035a6238453b701d64de5a9e4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerLauncher/CUDA.cmake" : {
      "ObjectId" : "fe5560bc790ebcebaaa387d8dbde3b78f2efa752",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerLauncher/CXX-launch.cmake" : {
      "ObjectId" : "3002c9d688c7ff1ec719af09cb69e2f92bfb044e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerLauncher/CXX.cmake" : {
      "ObjectId" : "cdd3478046382eee2560c19e3158dd9e33f0d3b8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerLauncher/Fortran-launch.cmake" : {
      "ObjectId" : "7e9a564795467a2398b439d7782bb010420bdece",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerLauncher/Fortran.cmake" : {
      "ObjectId" : "72cc03ee6f2da23f2ce2a8a5b2dd36f9148447ea",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerLauncher/RunCMakeTest.cmake" : {
      "ObjectId" : "bb8da037ad9e03b31c81bbf671fe366a0c10fb4b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for tests without cleaning.\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerNotFound/BadCompilerC.cmake" : {
      "ObjectId" : "10fe59aaba22df4170225d5501b07fb18b359d2e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerNotFound/BadCompilerCXX.cmake" : {
      "ObjectId" : "3b1e8900a8aa85da693ce8a3be9aad022446c351",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerNotFound/BadCompilerCandCXX.cmake" : {
      "ObjectId" : "2b6fa6126db155a5addad817a25f8b596cc7178c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerNotFound/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerNotFound/NoCompilerC-IDE.cmake" : {
      "ObjectId" : "45e1a68c4df53eaf0338af6a08cd5fc63f24974e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerNotFound/NoCompilerCXX-IDE.cmake" : {
      "ObjectId" : "85025a06b1cea61fc23293c3b97ac124923d95ba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerNotFound/NoCompilerCandCXX-IDE.cmake" : {
      "ObjectId" : "78256a9638f14f5c8fa11e1de6f82465d156afdb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CompilerNotFound/RunCMakeTest.cmake" : {
      "ObjectId" : "19d149c1119ada1e54158def7350eab8651ef946",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Configure/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Configure/ContinueAfterError.cmake" : {
      "ObjectId" : "d094390b23acf9754e319d5da4f4b7c4f6cad1c0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Configure/CustomTargetAfterError.cmake" : {
      "ObjectId" : "3e264553ba4597a5cd299c039f3a1adc194e765f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Configure/ErrorLogs.cmake" : {
      "ObjectId" : "e8cf0626684c83e54d73bec681a3f32354caf6f2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Configure/FailCopyFileABI-check.cmake" : {
      "ObjectId" : "db0cb0a3460ad08f491a8348300ceeffaa7d98aa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Configure/FailCopyFileABI-override.cmake" : {
      "ObjectId" : "c633555b643eb4208a175a2c4704e3fb6ff968be",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Change the executable suffix that try_compile will use for\n\n# COPY_FILE but not inside the test project.  This forces failure.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Configure/FailCopyFileABI.cmake" : {
      "ObjectId" : "74efd9720d0d3d14d8da191cec7fc1da709f2f3a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Configure/RemoveCache.cmake" : {
      "ObjectId" : "304918f15c212c3cb1dd4dd9ce6a24b4ce89b619",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Configure/RerunCMake-build1-check.cmake" : {
      "ObjectId" : "dbf8f67504e680f87e7bb238e04596328a760f8e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Configure/RerunCMake-build2-check.cmake" : {
      "ObjectId" : "a4897e539c1eee131e9aa762f02f3edf126dcf54",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Configure/RerunCMake.cmake" : {
      "ObjectId" : "5a561bf4501d5120ece5d11b9ecd1e60175d078c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Configure/RunCMakeTest.cmake" : {
      "ObjectId" : "4a135befdb50909a07899591b642efc01f77cba8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle 1s resolution\n",
        "Line" : 20,
        "CharPositionInLine" : 53
      },
      "2" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Cppcheck/C-bad.cmake" : {
      "ObjectId" : "920e4b4bc5ca1a04590ac30427d9678d5b9a7467",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Cppcheck/C-launch.cmake" : {
      "ObjectId" : "e66ca203e2f7ed744830811b714e688892a242ca",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Cppcheck/C.cmake" : {
      "ObjectId" : "b1f5bf7892767e5336d033be25a7dd1af85c366d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Cppcheck/CMakeLists.txt" : {
      "ObjectId" : "a640c569ec2c77147afdc0912beefda8a4443f00",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Cppcheck/CXX-launch.cmake" : {
      "ObjectId" : "3002c9d688c7ff1ec719af09cb69e2f92bfb044e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Cppcheck/CXX.cmake" : {
      "ObjectId" : "3b7947127642065d67ae65362976cfe0ece0da53",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Cppcheck/RunCMakeTest.cmake" : {
      "ObjectId" : "5fd4ead139e61469ab5e5288a15cf6ac53e4f55a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for tests without cleaning.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Cpplint/C-error-launch.cmake" : {
      "ObjectId" : "c76e2e24269f5469b07cc8cbb140bf8bdaee31d4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Cpplint/C-error.cmake" : {
      "ObjectId" : "29cf7bab0b46494f824fe90547ba76c12cce7b06",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Cpplint/C-launch.cmake" : {
      "ObjectId" : "e66ca203e2f7ed744830811b714e688892a242ca",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Cpplint/C.cmake" : {
      "ObjectId" : "68e6ff414ec17efa1c2691ee2d8c6fa7338b83b5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Cpplint/CMakeLists.txt" : {
      "ObjectId" : "a640c569ec2c77147afdc0912beefda8a4443f00",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Cpplint/CXX-error-launch.cmake" : {
      "ObjectId" : "72dcbe9f3e993dae4fd3648cc2a93374711b1e06",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Cpplint/CXX-error.cmake" : {
      "ObjectId" : "ad66ff54c631122c6af21cd9ee42bacd35b4339f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Cpplint/CXX-launch.cmake" : {
      "ObjectId" : "3002c9d688c7ff1ec719af09cb69e2f92bfb044e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Cpplint/CXX.cmake" : {
      "ObjectId" : "35f05ee91a5d1c1fb473e956d61156a2d7f100d9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Cpplint/RunCMakeTest.cmake" : {
      "ObjectId" : "5a8471e842c13927c7315609586b195e511f2e07",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for tests without cleaning.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CrosscompilingEmulator/AddCustomCommand-build-check.cmake" : {
      "ObjectId" : "e10b161ac6604529fdcc4fe7f12de2acfa0106da",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CrosscompilingEmulator/AddCustomCommand.cmake" : {
      "ObjectId" : "c4db11bdeb620b83a5b41812f6c45f5551802e9a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Executable: Return error code different from 0\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Executable: Return error code equal to 0\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Place the executable in a predictable location.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Executable: Imported version of above.  Fake the imported target to use the above.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# DoesNotUseEmulator\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# DoesNotUseEmulator: The command will fail if emulator is prepended\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# DoesNotUseEmulator: The command will fail if emulator is prepended\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DoesNotUseEmulator: The command will fail if emulator is prepended\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# UsesEmulator: The command only succeeds if the emulator is prepended\n\n#               to the command.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CrosscompilingEmulator/AddCustomTarget-build-check.cmake" : {
      "ObjectId" : "c62192216e5bd40ca60e612f73e1b740cd8cf85e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CrosscompilingEmulator/AddCustomTarget.cmake" : {
      "ObjectId" : "5b01abc23db1c7730534ed2bd4620322c815f95a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Executable: Return error code different from 0\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Executable: Return error code equal to 0\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Place the executable in a predictable location.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Executable: Imported version of above.  Fake the imported target to use the above.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# DoesNotUseEmulator\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# DoesNotUseEmulator: The command will fail if emulator is prepended\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# DoesNotUseEmulator: The command will fail if emulator is prepended\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DoesNotUseEmulator: The command will fail if emulator is prepended\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# UsesEmulator: The command only succeeds if the emulator is prepended\n\n#               to the command.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CrosscompilingEmulator/AddTest-check.cmake" : {
      "ObjectId" : "588b77b37d7518d7b9062fe84f3c306270a29555",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CrosscompilingEmulator/AddTest.cmake" : {
      "ObjectId" : "23e2e8d460de4913ce60732928d8c8b72a01b217",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CrosscompilingEmulator/AddTest/CMakeLists.txt" : {
      "ObjectId" : "025b54c42ca863f66d4754e3fec4e4452d8dbe95",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CrosscompilingEmulator/CMakeLists.txt" : {
      "ObjectId" : "2d75985749d0ed5040a94f70c858e4a0192cd4c4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CrosscompilingEmulator/CrosscompilingEmulatorProperty.cmake" : {
      "ObjectId" : "1aeb510f0c212de212bd6de119da7a81c43c457e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This tests setting the CROSSCOMPILING_EMULATOR target property from the\n\n# CMAKE_CROSSCOMPILING_EMULATOR variable.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -DCMAKE_CROSSCOMPILING_EMULATOR=/path/to/pseudo_emulator is passed to this\n\n# test\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CrosscompilingEmulator/RunCMakeTest.cmake" : {
      "ObjectId" : "71aaad19bd3fa98afa49bdfae46d45b685db434d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/CrosscompilingEmulator/TryRun.cmake" : {
      "ObjectId" : "af3712c5788d4f9e5e1de661912525406ae04b08",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0029-NEW.cmake" : {
      "ObjectId" : "392b9d409d0b73d3e9296ebae716b6e693a3a6ef",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0029-OLD.cmake" : {
      "ObjectId" : "099fd90d36ba96c494c491b854e5590857b0e00f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0029-WARN.cmake" : {
      "ObjectId" : "1ceb1f85eaa01a9de108da1aada86764d05ee49f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0030-NEW.cmake" : {
      "ObjectId" : "73365a71bf59ce6a8c87e79af4c82f703ae961df",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0030-OLD.cmake" : {
      "ObjectId" : "efbb852dd076e8ea0dcbf97f79bdadb6a697d379",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0030-WARN.cmake" : {
      "ObjectId" : "cbe0ff0abb3776afbb6271257869e168a0d4a8e1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0031-NEW.cmake" : {
      "ObjectId" : "3d9caf21a865634c4a2da28e5a81e53cc433369c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0031-OLD.cmake" : {
      "ObjectId" : "8fedf98c752dc6dc2fd011b3089bfc4bc4c1c062",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0031-WARN.cmake" : {
      "ObjectId" : "c9d99fcbe5e3ea242897f5f668bfe4a9c063566e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0032-NEW.cmake" : {
      "ObjectId" : "c6fb5e8f022381fd2115c92d5895fdd64894bfa4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0032-OLD.cmake" : {
      "ObjectId" : "6585110eaeb51c7177528fd58688f55a22ff2140",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0032-WARN.cmake" : {
      "ObjectId" : "7411e48caeaae768f39aa9382b2176b481821a41",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0033-NEW.cmake" : {
      "ObjectId" : "6f90f29e80095ff74fd8e846f0d16d1f2a2dfc27",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0033-OLD.cmake" : {
      "ObjectId" : "a3504b67d39e350636eb9414fef6e8d0f67c9649",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0033-WARN.cmake" : {
      "ObjectId" : "f897dddf51a841656539ac5d41d4d82076dd93fd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0034-NEW.cmake" : {
      "ObjectId" : "48724a97e66ff8f2554d3ae76df94c94f923e016",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0034-OLD.cmake" : {
      "ObjectId" : "a2c9798dc552595b3ce0b06f6ae803694acc5cb2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0034-WARN.cmake" : {
      "ObjectId" : "b4ae0456612f9bf92bf6cc2232c5ba0aa75580a5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0035-NEW.cmake" : {
      "ObjectId" : "27eb32e18335da602931f84f14f4bbbc51d9c8e5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0035-OLD.cmake" : {
      "ObjectId" : "74252628b467678f1cbb78c41e1df6467577edb5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0035-WARN.cmake" : {
      "ObjectId" : "3af4de177aadfe940780409bc1b29001910d4b27",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0036-NEW.cmake" : {
      "ObjectId" : "5341db2a06e4606c8cc5995d8ba92e6c4e6ffa3e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0036-OLD.cmake" : {
      "ObjectId" : "fdd840f940f93c13dae0700e01c2c2a367f1f2d1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMP0036-WARN.cmake" : {
      "ObjectId" : "9556687ab838635b55832e2f6e8f4c752b280cd4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/DisallowedCommands/RunCMakeTest.cmake" : {
      "ObjectId" : "208ea208552f53e92063fe9cb2bb98ebfcebac8d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExportWithoutLanguage/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExportWithoutLanguage/NoLanguage.cmake" : {
      "ObjectId" : "2ede85431fcef3bb6ed0b6064cd5dabb44e30e3b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExportWithoutLanguage/RunCMakeTest.cmake" : {
      "ObjectId" : "f77f4eba01b39d525a9cb9bbdfe731d60e7e962a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/BadAlgoMap1.cmake" : {
      "ObjectId" : "542ec1dab35a05303ad81ffbc78b6f8de2d6a563",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/BadAlgoMap2.cmake" : {
      "ObjectId" : "0537a7b9345f4047a88f9f803f78ba5ff240c331",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/BadCustom1.cmake" : {
      "ObjectId" : "ec94fc157c7acae3040717b36e136461b3934de5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/BadCustom2.cmake" : {
      "ObjectId" : "1ed764610e359f90c0168d327a9e6bc52dc13037",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/BadCustom3.cmake" : {
      "ObjectId" : "b4f2fb8ba21a44e246d989170b28c400334878fe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/BadCustom4.cmake" : {
      "ObjectId" : "0cc55217252947bb26658f85afb3d4a52f76d6a8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/BadHashAlgo1.cmake" : {
      "ObjectId" : "19e2e412dc79c7a358038278527d4b7d980e200b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/BadOption1.cmake" : {
      "ObjectId" : "1303d7f1a183b839984c57d342b86d400cff4692",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/BadOption2.cmake" : {
      "ObjectId" : "6269b064c10c5314ed76855a68cc56a21896e934",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/BadRecurse1.cmake" : {
      "ObjectId" : "f70b9f9d55a47a8cbb5e7bf8bee4c4740c0a872f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/BadRecurse2.cmake" : {
      "ObjectId" : "c4dc35d5498b79041fba0b51d348518ceab4178f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/BadRecurse3.cmake" : {
      "ObjectId" : "9a22f621899eb13aa1df98ba3822e1354c5a6a57",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/BadSeries1.cmake" : {
      "ObjectId" : "7d712106f111679d01768e949ccaf4736a1717cf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/BadSeries2.cmake" : {
      "ObjectId" : "e81993b8fd847ce602861abc33aa4eaee0403c7d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/BadSeries3.cmake" : {
      "ObjectId" : "b640df8781b97058d510231ff437682d563b941b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/Directory1.cmake" : {
      "ObjectId" : "68f1b54bea1ddf7939229ed8defd61fa3ef99a02",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/Directory2.cmake" : {
      "ObjectId" : "30b992e6eb78ea34a7554748addf84e7eca94153",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/Directory3.cmake" : {
      "ObjectId" : "55d8be9dd3c6d5f5cac6c0c7706b55e5dcdc296f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/Directory4.cmake" : {
      "ObjectId" : "7d3d6384d641d9c43e3fa996dd3d5f8521c5718b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/Directory5.cmake" : {
      "ObjectId" : "931589e4e4640febdfed1e83ca0983a3bf41eccc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/LinkContentMD5.cmake" : {
      "ObjectId" : "41b4deebfd2decd46f4e7c0097e91143c32eddbd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/LinkContentSHA1.cmake" : {
      "ObjectId" : "f78501cf57c17d284feee71f0d6db2ab60d161ee",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/LinkDirectory1.cmake" : {
      "ObjectId" : "541fc79b49c1ac8f772537650a9411edaba285ab",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Expand again to check whether staged content is ignored.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/MissingData.cmake" : {
      "ObjectId" : "f5fefd5cca4ace4f0ee187fe3f043c8111089f52",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/MissingDataWithAssociated.cmake" : {
      "ObjectId" : "a4c4638b0b78ad34d8c5cf27492b3cf365070261",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/NoLinkInSource.cmake" : {
      "ObjectId" : "cbf45ebbf7942c8c49cb52fdf4eef7d5db9001a4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/NoURLTemplates.cmake" : {
      "ObjectId" : "8f0e069c22e5e92e88e45b85c11a821d9b2e03ae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/NormalData1.cmake" : {
      "ObjectId" : "d6cc384c857a247488ed24e408f6e4f89096a0f9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/NormalData2.cmake" : {
      "ObjectId" : "c979b48ea9df12cd2addde6d54291c91aeedf717",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/NormalData3.cmake" : {
      "ObjectId" : "e99112267a005dc91b49cc7d50e993dd8f3b4f48",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/NormalDataSub1.cmake" : {
      "ObjectId" : "015e94c0a7f88d523c0ed79d224945c575db6d62",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/NotUnderRoot.cmake" : {
      "ObjectId" : "c7942d678d577891148d9d501ca3ca01c480adae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/ObjectStoreOnly.cmake" : {
      "ObjectId" : "5e66101442ba8e4b94e80ad6f2b19c874483f119",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/RunCMakeTest.cmake" : {
      "ObjectId" : "b5ab22d1a1fd53be7584d45c27e6cecc540647e3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/Semicolon1.cmake" : {
      "ObjectId" : "c8328608255abf1dc261c1e5db6305d507ebd66a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/Semicolon2.cmake" : {
      "ObjectId" : "1a1ae5f3ff018f829d59f4e21736e1aebc5fb174",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/Semicolon3.cmake" : {
      "ObjectId" : "2ae99da98e18f0bc2223c982d3e1dcd48546f1a6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/SubDirectory1.cmake" : {
      "ObjectId" : "29894710ac98aeacb974fe1d352d89eb4329ddce",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalData/SubDirectory1/CMakeLists.txt" : {
      "ObjectId" : "881ff5c2c0427687603f6200855f3d190c5bf142",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalProject/Add_StepDependencies.cmake" : {
      "ObjectId" : "38683f12ed15028612b45b5bf3dc43e5f0bd7c5f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# download and do_something_else are not targets, but the file-level\n\n# dependency are set.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# update and do_something are targets, therefore both file-level and\n\n# target-level dependencies are set.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalProject/Add_StepDependencies_iface.cmake" : {
      "ObjectId" : "f7cfde1c24cde14ded3913ea2685dd3ded1c9654",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalProject/Add_StepDependencies_iface_step.cmake" : {
      "ObjectId" : "02894939b93a0b278e3206f5b46fe50a69fbaf76",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalProject/Add_StepDependencies_no_target.cmake" : {
      "ObjectId" : "264c3f04c74c26dc592d11552fe22773a4710ae2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalProject/CMAKE_CACHE_ARGS-check.cmake" : {
      "ObjectId" : "c5018563c1e8d2b9086d2289427220ea67404192",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \\(\\)\n",
        "Line" : 10,
        "CharPositionInLine" : 53
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalProject/CMAKE_CACHE_ARGS.cmake" : {
      "ObjectId" : "4f7e02006025caf744cd8039d413dd3a049e51c0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalProject/CMAKE_CACHE_DEFAULT_ARGS-check.cmake" : {
      "ObjectId" : "059f6d327e5a44b5372f8444bcece5ab6b56544c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \\(\\)\n",
        "Line" : 10,
        "CharPositionInLine" : 53
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalProject/CMAKE_CACHE_DEFAULT_ARGS.cmake" : {
      "ObjectId" : "61334183c19ac0767d8a677910fc8f544755640e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalProject/CMAKE_CACHE_mix-check.cmake" : {
      "ObjectId" : "04d49b9e42a54e0bbeabb8ac08c13920311f1f16",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \\(\\)\n",
        "Line" : 10,
        "CharPositionInLine" : 53
      },
      "1" : {
        "Text" : "# \\(\\)\n",
        "Line" : 19,
        "CharPositionInLine" : 53
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalProject/CMAKE_CACHE_mix.cmake" : {
      "ObjectId" : "2fb0705a53918869ed8f9122d531090392f13d32",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalProject/CMakeLists.txt" : {
      "ObjectId" : "c585733b675def18659c0c7ed74c96fadcada47b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalProject/IncludeScope-Add.cmake" : {
      "ObjectId" : "1061ffddc519d4cb9d20a374860197a88c520c96",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalProject/IncludeScope-Add_Step.cmake" : {
      "ObjectId" : "2a820f8f29f6fcfb58bba594a24ab3ab45534271",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalProject/MultiCommand.cmake" : {
      "ObjectId" : "a8dbfea5dcdbae20f540cc1a16cacd5853724ccc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Verify COMMAND keyword is recognised after various *_COMMAND options\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Workaround for issue 17229 (missing dependency between update and patch steps)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Force all steps to be re-run by removing timestamps from any previous run\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalProject/NO_DEPENDS.cmake" : {
      "ObjectId" : "57626d679c4b573b3a4e6ac12d16124eab583d22",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This one should not give a warning\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalProject/NoOptions.cmake" : {
      "ObjectId" : "7613c156a74595a1e43f105f01f6412e616fe0d0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalProject/RunCMakeTest.cmake" : {
      "ObjectId" : "bf11381a8f040a5c5914e54d581a83e85bb1bf1d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Run both cmake and build steps. We always do a clean before the\n\n# build to ensure that the download step re-runs each time.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We can't test the substitution when using the old MSYS due to\n\n# make/sh mangling the paths (substitution is performed correctly,\n\n# but the mangling means we can't reliably test the output).\n\n# There is no such issue when using the newer MSYS though. Therefore,\n\n# we need to bypass the substitution test if using old MSYS.\n\n# See merge request 1537 for discussion.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalProject/SourceEmpty.cmake" : {
      "ObjectId" : "db746e9e47e1f4df73ea2737736884de7b4279cd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalProject/SourceMissing.cmake" : {
      "ObjectId" : "8f369d48df801be384605737116f461f6f9acedb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalProject/Substitutions.cmake" : {
      "ObjectId" : "db79491ee01a77980afc9679b95020df9d604e95",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalProject/UsesTerminal-check.cmake" : {
      "ObjectId" : "201d822ba272a5c404946092b45b0c770275721c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are using the Ninja generator, we can check and verify that the\n\n# USES_TERMINAL option actually works by examining the Ninja build file.\n\n# This is the only way, since CMake doesn't offer a way to examine the\n\n# options on a custom command after it has been added.  Furthermore,\n\n# there isn't an easy way to test for this by actually running Ninja.\n\n#\n\n# Other generators don't currently support USES_TERMINAL at this time.\n\n# This file can be improved to support them if they do.  Until then, we\n\n# simply assume success for new generator types.\n\n#\n\n# For Ninja, there is a complication.  If the Ninja generator detects a\n\n# version of Ninja < 1.5, it won't actually emit the console pool command,\n\n# because those Ninja versions don't yet support the console pool.  In\n\n# that case, we also have to assume success.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check Ninja build output to verify whether or not a target step is in the\n\n# console pool.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check Ninja build output to verify whether each target step is in the\n\n# console pool.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Load build/make file, depending on generator\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check the Ninja version.  If < 1.5, console pool isn't supported and\n\n# so the generator would not emit console pool usage.  That would cause\n\n# this test to fail.\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# console pool not supported on Ninja < 1.5\n",
        "Line" : 66,
        "CharPositionInLine" : 13
      },
      "6" : {
        "Text" : "# Read the Ninja build file\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# protection in case somebody renamed RunCMake_GENERATOR\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# We don't yet know how to test USES_TERMINAL on this generator.\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Actual tests:\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ExternalProject/UsesTerminal.cmake" : {
      "ObjectId" : "d3494fd4eaa33250ba57164040287159b192ef95",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test various combinations of USES_TERMINAL with ExternalProject_Add.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# USES_TERMINAL on all steps\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# USES_TERMINAL on every other step, starting with download\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# USES_TERMINAL on every other step, starting with update\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# USES_TERMINAL on no step\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FPHSA/BadFoundVar.cmake" : {
      "ObjectId" : "07d4322e45eb2022817683e9dc677bc25a9e2f03",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FPHSA/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FPHSA/FindBadFoundVar.cmake" : {
      "ObjectId" : "152df5cd8740ba5dfd540dc2ab5251895b9c05f4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FPHSA/FindPseudo.cmake" : {
      "ObjectId" : "dc3558bd4ab40d338d49fb689bfd83fac7ecd26f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# pseudo find_module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FPHSA/FindPseudoNoVersionVar.cmake" : {
      "ObjectId" : "d961c64898886ac61d17ab0b21abc33d6a86620f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# pseudo find_module without specifying VERSION_VAR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FPHSA/RunCMakeTest.cmake" : {
      "ObjectId" : "dd73cd4879dd7307dc4af0500ca7e4dbbb9b1ae1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The pseudo module will \"find\" a package with the given version. Check if the\n\n# version selection code in FPHSA works correctly.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find a package with version 0.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find a package with more customary version number, without requesting a specific version and in\n\n# the presence of a cache variable VERSION.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find a package with a more customary version number, without requesting a specific version.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# test EXACT mode with every subcomponent\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# now test every component with an invalid version\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# check if searching for a version 0 works\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FPHSA/any_version.cmake" : {
      "ObjectId" : "b34a540c91f9c498e272130da17784618c39853d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FPHSA/any_version_VERSION_cache_variable.cmake" : {
      "ObjectId" : "9f278979b565bd20230fda771018c46f290c4a6d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FPHSA/any_version_find_0.cmake" : {
      "ObjectId" : "b34a540c91f9c498e272130da17784618c39853d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FPHSA/exact_0.cmake" : {
      "ObjectId" : "432887bad0edbc3ba23903fc5650ab051e0046c1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FPHSA/exact_0_matching.cmake" : {
      "ObjectId" : "432887bad0edbc3ba23903fc5650ab051e0046c1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FPHSA/exact_1.1.cmake" : {
      "ObjectId" : "d967da927730c8a0477c1f483c53f828f919f6eb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FPHSA/exact_1.2.2.cmake" : {
      "ObjectId" : "e959f610e1f0b0acb67a2a47010165ca2660c0b4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FPHSA/exact_1.2.3.3.cmake" : {
      "ObjectId" : "af53cc8da2c120c85310b2d2bbfedadb740900c1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FPHSA/exact_1.2.3.4.cmake" : {
      "ObjectId" : "1e2baa64eb49bb2f7ec6cdda2678be2e329a616a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FPHSA/exact_1.2.3.5.cmake" : {
      "ObjectId" : "ddb0d1378afc40c44b4c97b376777d61bdd9d200",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FPHSA/exact_1.2.3.cmake" : {
      "ObjectId" : "bf9b2a316bbd16ee1822980fc00a45510b1cb691",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FPHSA/exact_1.2.4.cmake" : {
      "ObjectId" : "548a07956b0d65b25397ab684b3724d0b958e97b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FPHSA/exact_1.2.cmake" : {
      "ObjectId" : "080d96108b9c362e5e56a8f966a9b557ced14201",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FPHSA/exact_1.3.cmake" : {
      "ObjectId" : "e36b0c56806e55928da698a9c582bea6e8198acb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FPHSA/exact_1.cmake" : {
      "ObjectId" : "adadbc4cf1b9d0de660c4dba95c4a212b091c7bd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FPHSA/exact_2.cmake" : {
      "ObjectId" : "55353a8b8aff34b328435dc1f2f67ada0f3f2dc8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/CMakeLists.txt" : {
      "ObjectId" : "72abfc8099e9eea6b3481fd5874d4373e6b45a0e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FeatureSummaryCustomBadDefault.cmake" : {
      "ObjectId" : "7e2fd5533d09505624af425525bec8017de0e870",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FeatureSummaryCustomDescription.cmake" : {
      "ObjectId" : "e61b65281ece7a1faa2e79c0c4dfa00ed2f49210",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FeatureSummaryCustomRequired.cmake" : {
      "ObjectId" : "11cf04c86b77de38c6038e1f04343dd0a01a7c7d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FeatureSummaryCustomRequiredListA.cmake" : {
      "ObjectId" : "53111bed69fd196c149f50254c3278071a891fb7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FeatureSummaryCustomRequiredListB.cmake" : {
      "ObjectId" : "526b979aafb3e6c9f368055e16f090a08ffeb580",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FeatureSummaryCustomTypes.cmake" : {
      "ObjectId" : "34b0c1fd0d9d8ff57cadb73697d9578876b8e5d5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Type not set => TYPE2\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TYPE1 > not set => TYPE1\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TYPE2 > TYPE1 => TYPE2\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TYPE1 < TYPE2 => TYPE2\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TYPE3 > TYPE2 => TYPE3\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# TYPE2 < TYPE3 => TYPE3\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# TYPE1 < TYPE3 => TYPE3\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FeatureSummaryDefaultDescription.cmake" : {
      "ObjectId" : "536fe72c8cca2c8d5256bf485b31b47d686d9c00",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FeatureSummaryFatalOnMissingRequiredPackages.cmake" : {
      "ObjectId" : "9563186a03f287622be911380d2be9dd9cff002d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FeatureSummaryIncludeQuietPackages.cmake" : {
      "ObjectId" : "5cdb4433b0620312883883404cb5dab140ef51a2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FeatureSummaryMultipleDepends.cmake" : {
      "ObjectId" : "f355ae7b8ab2d5a0622cbf9693b8098a08d72e8e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FeatureSummaryPurpose.cmake" : {
      "ObjectId" : "64735b69dd7c382d8a7e14fa60b2e7535dcd55e5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Purpose not set\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Purpose set once\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Purpose set twice\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FeatureSummaryQuietOnEmpty.cmake" : {
      "ObjectId" : "8d1d007da42d2f09d1547e8215331370a4ed4afc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FeatureSummaryTypes.cmake" : {
      "ObjectId" : "09d1e7a493190704bf0af759a19bc75c78886bf0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Type not set => OPTIONAL\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# RUNTIME > not set => RUNTIME\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# OPTIONAL > RUNTIME => OPTIONAL\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# RUNTIME < OPTIONAL => OPTIONAL\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# RECOMMENDED > OPTIONAL => RECOMMENDED\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# OPTIONAL < RECOMMENDED => RECOMMENDED\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# RUNTIME < RECOMMENDED => RECOMMENDED\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# REQUIRED > RECOMMENDED => REQUIRED\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# RECOMMENDED < REQUIRED => REQUIRED\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# OPTIONAL < REQUIRED => REQUIRED\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# RUNTIME < REQUIRED => REQUIRED\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FeatureSummaryURLDescription.cmake" : {
      "ObjectId" : "77fcf2871e0664c387e968b9072556c6a3d48483",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# URL and DESCRIPTION are set in the FindFoo.cmake file\n\n# URL and DESCRIPTION are not set\n\n# URL and DESCRIPTION are not set\n",
        "Line" : 5,
        "CharPositionInLine" : 18
      },
      "1" : {
        "Text" : "# URL and no DESCRIPTION\n",
        "Line" : 11,
        "CharPositionInLine" : 62
      },
      "2" : {
        "Text" : "# DESCRIPTION and no URL\n",
        "Line" : 12,
        "CharPositionInLine" : 67
      },
      "3" : {
        "Text" : "# Overwrite with the same value (no warning)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Overwrite with different values (warnings)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Overwrite URL and DESCRIPTION\n",
        "Line" : 23,
        "CharPositionInLine" : 67
      },
      "6" : {
        "Text" : "# Overwrite URL and add DESCRIPTION\n",
        "Line" : 25,
        "CharPositionInLine" : 69
      },
      "7" : {
        "Text" : "# Overwrite URL and add DESCRIPTION\n",
        "Line" : 27,
        "CharPositionInLine" : 69
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FeatureSummaryWhatAll.cmake" : {
      "ObjectId" : "ec5ebcb5fc90ae9cb886fac87443245052342e03",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FeatureSummaryWhatList.cmake" : {
      "ObjectId" : "d04ba885abec052265a9e7c3161f76a9cecd86c8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FeatureSummaryWhatListAll.cmake" : {
      "ObjectId" : "1877ea5a2612c3953ffe37d9f0d4727381ba8d0f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FeatureSummaryWhatListUnknown.cmake" : {
      "ObjectId" : "46088d41795dbe8749cc6298c5cd93ebc2d5db8a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FeatureSummaryWhatOnce.cmake" : {
      "ObjectId" : "eaea40ee93875ca8a2b452efadc55553b7109ef8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FeatureSummaryWhatSingle.cmake" : {
      "ObjectId" : "593dfb6a1cf093f00e476be4634ee80d573119c5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FeatureSummaryWhatSingleUnknown.cmake" : {
      "ObjectId" : "c2d6d2ee437cf6394943a39586bc74cec4a42e2b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FindBar.cmake" : {
      "ObjectId" : "45f4d5434e22ff248aa665461b6794da0b92d126",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FindBaz.cmake" : {
      "ObjectId" : "73aafcd617d6ea4a5a99c97d546a8e0037ca250e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/FindFoo.cmake" : {
      "ObjectId" : "baec987b726eda7d3fd8bec15fbcd0cc126729cc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FeatureSummary/RunCMakeTest.cmake" : {
      "ObjectId" : "c672c1640e04f1a5155aebb656eb9405a2cad6b0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FetchContent/CMakeLists.txt" : {
      "ObjectId" : "d3137f614c00a9858c9042188cc3b5d72090c95a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FetchContent/DirOverrides.cmake" : {
      "ObjectId" : "50eef161ba76ffd2b70bb377b1295da972718f0a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test using saved details\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test direct population\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ensure setting BINARY_DIR to SOURCE_DIR works (a technique to\n\n# prevent an unwanted separate BINARY_DIR from being created, which\n\n# ExternalProject_Add() does whether we like it or not)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FetchContent/DirectIgnoresDetails.cmake" : {
      "ObjectId" : "0731b4390c114ed2f2250d6b2db6aadd4fbf5be3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# No QUIET option given, so command output will be shown\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FetchContent/DownloadTwice.cmake" : {
      "ObjectId" : "6863c305ff4cf13d0bc18c3ed5a6c183a23d222e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Triggers error\n",
        "Line" : 9,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FetchContent/FirstDetailsWin.cmake" : {
      "ObjectId" : "208b12db07491cd8083dec92cbd188f63e032b62",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Need to see the download command output\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FetchContent/GetProperties.cmake" : {
      "ObjectId" : "61c99fec304e040ce5ee7da27d8576355fdcef63",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# First confirm properties are empty even before declare\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare, but no properties should change yet\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Populate should make all properties non-empty/set\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Verify we can retrieve properties individually too\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FetchContent/MissingDetails.cmake" : {
      "ObjectId" : "ba8d121679bf4a461fdb44600c1c112c6e43de2e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FetchContent/RunCMakeTest.cmake" : {
      "ObjectId" : "621fb8bd55f4e3198f3c39da05ff72a9b289285a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need to pass through CMAKE_GENERATOR and CMAKE_MAKE_PROGRAM\n\n# to ensure the test can run on machines where the build tool\n\n# isn't on the PATH. Some build slaves explicitly test with such\n\n# an arrangement (e.g. to test with spaces in the path). We also\n\n# pass through the platform and toolset for completeness, even\n\n# though we don't build anything, just in case this somehow affects\n\n# the way the build tool is invoked.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FetchContent/SameGenerator.cmake" : {
      "ObjectId" : "58204ef041b5b8a69cffef8408f0dbe2631ad8a0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FetchContent/ScriptMode.cmake" : {
      "ObjectId" : "0a93d620e5e42613d6f8bec3c064670a4d62edc1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FetchContent/VarDefinitions.cmake" : {
      "ObjectId" : "4d2a929af96d632db66f9722a1fef6bccf568ba1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Each of the cache entries should be defined and have the\n\n# expected value. Be careful to check unset separately from a\n\n# false value, since unset also equates to false.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use uppercase T1 test name to confirm conversion to lowercase\n\n# for the t1_... variable names that get set\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Be careful to check both regular and cache variables. Since they have\n\n# the same name, we can only confirm them separately by using get_property().\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/File_Generate/BadCondition.cmake" : {
      "ObjectId" : "82ad672adc15f055c8b8343f3e55eb1810bb33bd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/File_Generate/CMP0070-NEW-check.cmake" : {
      "ObjectId" : "05ec26eed780107aeb2b2b41f14ef3296887d5bb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/File_Generate/CMP0070-NEW.cmake" : {
      "ObjectId" : "1a0382221010839cc0cde88c7e57dff2bbabd114",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/File_Generate/CMP0070-OLD-check.cmake" : {
      "ObjectId" : "a71d822bbed09fd777e2b1f1cd888bc7fb597477",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/File_Generate/CMP0070-OLD.cmake" : {
      "ObjectId" : "0fb47cdfaea95648c964618129d7ea86bb3ce764",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/File_Generate/CMP0070-WARN-check.cmake" : {
      "ObjectId" : "1488df09d7aceb17e01dbe43e63bfb8cd867cb65",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/File_Generate/CMP0070-WARN.cmake" : {
      "ObjectId" : "ccb045231b02ea8c3fb4c97b99d8fe62b309b841",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/File_Generate/CMakeLists.txt" : {
      "ObjectId" : "bc0cf5d164364b7f869ffc82f52b5be5b2bc18c9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/File_Generate/COMPILE_LANGUAGE-genex.cmake" : {
      "ObjectId" : "bead2af6f1ab5ad84f2630f0006aa7cc51a362dc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/File_Generate/CarryPermissions.cmake" : {
      "ObjectId" : "a04334f8e04647fd3c5a5c104642a98957aef258",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/File_Generate/CommandConflict.cmake" : {
      "ObjectId" : "d57bc1284e69038a3eba82e3e406cf069b27784d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/File_Generate/DebugEvaluate.cmake" : {
      "ObjectId" : "1fa9b62bbcc273a21aa7b25a8f80719c0033b289",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/File_Generate/EmptyCondition1.cmake" : {
      "ObjectId" : "8574a5f7dcbec574ebf764d029acd80da17ee8fe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/File_Generate/EmptyCondition2.cmake" : {
      "ObjectId" : "626bfb4c4d3d18690809aab020856e01c4423202",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/File_Generate/GenerateSource.cmake" : {
      "ObjectId" : "147a7f66a651a6a454725789516cfae02b11bc0f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ensure re-generation\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/File_Generate/OutputConflict.cmake" : {
      "ObjectId" : "7f3e8c7c75dc2c0c21da775caf8c2073c7cbaa7c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/File_Generate/OutputNameMatchesObjects.cmake" : {
      "ObjectId" : "daa7c49ca6dae6cb24528854047f72df5f1f7007",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/File_Generate/OutputNameMatchesOtherSources.cmake" : {
      "ObjectId" : "ce601daf1baff443500dd8a3cd216cda74723ac2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/File_Generate/OutputNameMatchesSources.cmake" : {
      "ObjectId" : "2feb9d11ae636ea05889d61209fd47eb22efae38",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/File_Generate/ReRunCMake.cmake" : {
      "ObjectId" : "541d86df25f61f43d2d8b98f47dcaf6e60596df4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/File_Generate/RunCMakeTest.cmake" : {
      "ObjectId" : "94aaca84a1e8650cbb7f7ef55eed634bd10e819b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/File_Generate/WriteIfDifferent.cmake" : {
      "ObjectId" : "bb36a4c48ee96dbb1db02d944d7c4e0b966a1179",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindBoost/CMakeLists.txt" : {
      "ObjectId" : "d3137f614c00a9858c9042188cc3b5d72090c95a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindBoost/CMakePackage.cmake" : {
      "ObjectId" : "06aeccb2db1543b941104bcbfb1a6353a5b96451",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindBoost/CMakePackage/BoostConfig.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindBoost/CMakePackage/BoostConfigVersion.cmake" : {
      "ObjectId" : "8176ced19c832a429af805075cfb0e47c14e858d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindBoost/NoCXX.cmake" : {
      "ObjectId" : "04b9cac614e5f7b0d47621b2d0f0e0e85aedbc87",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindBoost/RunCMakeTest.cmake" : {
      "ObjectId" : "5d0577b2d369634a19dea3d761dd33e8394ea742",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindGTK2/CMakeLists.txt" : {
      "ObjectId" : "93ee9dfd5f01100535f91a6cad70bc8b2cf1d1b7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindGTK2/FindGTK2RunTwice.cmake" : {
      "ObjectId" : "e0585eebc6fa800b58534f5c959fe92fe8019b0d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# First call\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Backup variables\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Second call\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check variables\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindGTK2/RunCMakeTest.cmake" : {
      "ObjectId" : "66364ca5799e09b398b992a7677615ee7b15dae7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindLua/CMakeLists.txt" : {
      "ObjectId" : "a2c4d9812680197c1bb1538c40863421c03f9163",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindLua/FindLuaTest.cmake" : {
      "ObjectId" : "610d544de78b4d5d15da7a1e96809e257483f09a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ignore all default paths for this test to avoid finding system Lua\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use functions for scoping and better error messages\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Shortcut: Make paths relative to current list dir\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Simple test\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find highest version\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# At least X or X.0 -> Highest\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Exactly X/X.0\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Find unknown version\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Set LUA_INCLUDE_DIR (non-cache) to unsuitable version\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindLua/RunCMakeTest.cmake" : {
      "ObjectId" : "3f180333a136b0a252b6df33c40a8e3dec682477",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindMatlab/CMakeLists.txt" : {
      "ObjectId" : "1b9a9578827cc12a468152b22f228443df32778d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindMatlab/MatlabTest1.cmake" : {
      "ObjectId" : "b4cc7415b1f7423a81157c37b870ff7230568018",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# target name\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# output name\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# this command should raise a FATAL_ERROR, component MAIN_PROGRAM is missing\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindMatlab/MatlabTest2.cmake" : {
      "ObjectId" : "4295d3c730e0a359aaca55e1b0bd9f7f8215cb9b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindMatlab/RunCMakeTest.cmake" : {
      "ObjectId" : "deebf89d9ffc174fd79114e3c61cfa2b814d4709",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# required this time?\n",
        "Line" : 54,
        "CharPositionInLine" : 76
      },
      "2" : {
        "Text" : "# no target on this test\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindOpenGL/CMP0072-NEW.cmake" : {
      "ObjectId" : "6cbbeec750808f06a9fd318681ff6046b156b659",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindOpenGL/CMP0072-OLD.cmake" : {
      "ObjectId" : "6d570043a5779d766c98dc849ed0367c34e6087f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindOpenGL/CMP0072-WARN.cmake" : {
      "ObjectId" : "459c4583b79ce84f59a320b3f87ad91956cfc173",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindOpenGL/CMP0072-common.cmake" : {
      "ObjectId" : "3fe80309bbce0c11bde1010f4b3f9a5312cea57b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindOpenGL/CMakeLists.txt" : {
      "ObjectId" : "bf2ef1506eab776e7736df37a608f19acbeaf1a9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindOpenGL/RunCMakeTest.cmake" : {
      "ObjectId" : "fcc130f5551fb9a1bd7b4220e245cdcf2bef9517",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindPkgConfig/CMakeLists.txt" : {
      "ObjectId" : "72abfc8099e9eea6b3481fd5874d4373e6b45a0e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindPkgConfig/FindPkgConfig_CMAKE_APPBUNDLE_PATH.cmake" : {
      "ObjectId" : "2687efefb47060a0d525d7e555196f38607b46d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Needed for CMAKE_SYSTEM_NAME, CMAKE_LIBRARY_ARCHITECTURE, FIND_LIBRARY_USE_LIB32_PATHS and FIND_LIBRARY_USE_LIB64_PATHS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prepare environment and variables\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# is this a debian system ?\n",
        "Line" : 24,
        "CharPositionInLine" : 35
      },
      "3" : {
        "Text" : "# Cannot create directories for all the existing architectures...\n",
        "Line" : 26,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# not debian, check the FIND_LIBRARY_USE_LIB32_PATHS and FIND_LIBRARY_USE_LIB64_PATHS properties\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindPkgConfig/FindPkgConfig_CMAKE_FRAMEWORK_PATH.cmake" : {
      "ObjectId" : "74cda2588d5d171d4c9be830202b2691c5d4c8fa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Needed for CMAKE_SYSTEM_NAME, CMAKE_LIBRARY_ARCHITECTURE, FIND_LIBRARY_USE_LIB32_PATHS and FIND_LIBRARY_USE_LIB64_PATHS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prepare environment and variables\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# is this a debian system ?\n",
        "Line" : 24,
        "CharPositionInLine" : 35
      },
      "3" : {
        "Text" : "# Cannot create directories for all the existing architectures...\n",
        "Line" : 26,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# not debian, check the FIND_LIBRARY_USE_LIB64_PATHS and FIND_LIBRARY_USE_LIB64_PATHS properties\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindPkgConfig/FindPkgConfig_GET_VARIABLE.cmake" : {
      "ObjectId" : "c85efaa57d9397029340455f7c340e025184eca7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindPkgConfig/FindPkgConfig_IMPORTED_TARGET.cmake" : {
      "ObjectId" : "24e72022942966ced5f95e83c284fca12f9a880d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Setup for the remaining package tests below\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Always find the .pc file in the calls further below so that we can test that\n\n# the import target find_library() calls handle the NO...PATH options correctly\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Confirm correct behavior of NO_CMAKE_PATH, ensuring we only find the library\n\n# for the imported target if we have both set CMAKE_PREFIX_PATH and have not\n\n# given the NO_CMAKE_PATH option\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# find targets in subdir and check their visibility\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# And now do the same for the NO_CMAKE_ENVIRONMENT_PATH - ENV{CMAKE_PREFIX_PATH}\n\n# combination\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# check that the full library path is also returned\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# the information in *_LINK_LIBRARIES is not cached, so ensure is also is present on second run\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindPkgConfig/FindPkgConfig_NO_PKGCONFIG_PATH.cmake" : {
      "ObjectId" : "25a775d7fec66cd1f27575ecad2594f00e7cf7d7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Prepare environment and variables\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindPkgConfig/FindPkgConfig_PKGCONFIG_PATH.cmake" : {
      "ObjectId" : "d1d538512f85b0c9772c8202a4123a5d037366b8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Needed for CMAKE_SYSTEM_NAME, CMAKE_LIBRARY_ARCHITECTURE, FIND_LIBRARY_USE_LIB32_PATHS and FIND_LIBRARY_USE_LIB64_PATHS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prepare environment and variables\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# is this a debian system ?\n",
        "Line" : 24,
        "CharPositionInLine" : 35
      },
      "3" : {
        "Text" : "# Cannot create directories for all the existing architectures...\n",
        "Line" : 26,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# not debian, check the FIND_LIBRARY_USE_LIB32_PATHS and FIND_LIBRARY_USE_LIB64_PATHS properties\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindPkgConfig/FindPkgConfig_PKGCONFIG_PATH_NO_CMAKE_ENVIRONMENT_PATH.cmake" : {
      "ObjectId" : "166a617dfde341886f836508ca234ae7046f442f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Needed for CMAKE_SYSTEM_NAME, CMAKE_LIBRARY_ARCHITECTURE, FIND_LIBRARY_USE_LIB32_PATHS and FIND_LIBRARY_USE_LIB64_PATHS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prepare environment and variables\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# is this a debian system ?\n",
        "Line" : 24,
        "CharPositionInLine" : 35
      },
      "3" : {
        "Text" : "# Cannot create directories for all the existing architectures...\n",
        "Line" : 26,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# not debian, check the FIND_LIBRARY_USE_LIB32_PATHS and FIND_LIBRARY_USE_LIB64_PATHS properties\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindPkgConfig/FindPkgConfig_PKGCONFIG_PATH_NO_CMAKE_PATH.cmake" : {
      "ObjectId" : "e4673b3c1867046ef80ce226799c307370b003b1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Needed for CMAKE_SYSTEM_NAME, CMAKE_LIBRARY_ARCHITECTURE, FIND_LIBRARY_USE_LIB32_PATHS and FIND_LIBRARY_USE_LIB64_PATHS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prepare environment and variables\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# is this a debian system ?\n",
        "Line" : 24,
        "CharPositionInLine" : 35
      },
      "3" : {
        "Text" : "# Cannot create directories for all the existing architectures...\n",
        "Line" : 26,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# not debian, check the FIND_LIBRARY_USE_LIB64_PATHS and FIND_LIBRARY_USE_LIB32_PATHS properties\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindPkgConfig/FindPkgConfig_VERSION_OPERATORS.cmake" : {
      "ObjectId" : "2a505c6a57f47175e8d29a5d2192466bafa553ee",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Setup for the remaining package tests below\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Always find the .pc file in the calls further below so that we can test that\n\n# the import target find_library() calls handle the NO...PATH options correctly\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindPkgConfig/FindPkgConfig_cache_variables.cmake" : {
      "ObjectId" : "d0046caa1113a5f3c093a9c6c38102b506758da4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindPkgConfig/RunCMakeTest.cmake" : {
      "ObjectId" : "671ff518b5ab0a81f4aea6607a97749452151608",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need a real pkg-config to run the test for get_variable.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/FindPkgConfig/target_subdir/CMakeLists.txt" : {
      "ObjectId" : "2171ef6d8f99b737741801eb12eb923b4c5725e6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a target with visibility only in this directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the same with global visibility\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Framework/CMakeLists.txt" : {
      "ObjectId" : "6dd8cdf551e8c5b90465044b9808c05efe88ea0d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Framework/FrameworkLayout.cmake" : {
      "ObjectId" : "4f4245952ab2d90134cccebdbc5bf23921130419",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# get rid of ${EFFECTIVE_PLATFORM_NAME}\n",
        "Line" : 5,
        "CharPositionInLine" : 45
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Framework/InstallBeforeFramework.cmake" : {
      "ObjectId" : "3791dace7991cab1cea8f4e73ae9cbab56ff5d88",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Framework/OSXFrameworkLayout-build-check.cmake" : {
      "ObjectId" : "eb71394a924a7bf6503a5d59e18a24d786d5866b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Framework/RunCMakeTest.cmake" : {
      "ObjectId" : "e705a31fa1d518b884cdd900a97c3a594f3951d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Framework/iOSFrameworkLayout-build-check.cmake" : {
      "ObjectId" : "2da60d2a59073e4b600f5cba545013ee051fc4e1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Framework/ios.cmake" : {
      "ObjectId" : "446e9146a1e5390c65cd88347c8897dad2556774",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Framework/osx.cmake" : {
      "ObjectId" : "e021fcd45737a304e2349aa312f16b994eaf7cab",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GNUInstallDirs/CMakeLists.txt" : {
      "ObjectId" : "74b3ff8de38d8e90e2e9549eb077ea0a023fa581",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GNUInstallDirs/Common.cmake" : {
      "ObjectId" : "919cd91f432bb6f55cc7f1514d1005f2039f6006",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GNUInstallDirs/Opt.cmake" : {
      "ObjectId" : "49eab0e4e5b76b4b58ec34ff0a0ec32eeb0b5424",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GNUInstallDirs/Root.cmake" : {
      "ObjectId" : "f8cc6411b8a1f476288dba071edddcfa3be11973",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GNUInstallDirs/RunCMakeTest.cmake" : {
      "ObjectId" : "e00af581bcedb751a5aa658bb222e33b6aa14798",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GNUInstallDirs/Usr.cmake" : {
      "ObjectId" : "62b72880480bdaa744cb212f7fbda4513115ae6d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GNUInstallDirs/UsrLocal.cmake" : {
      "ObjectId" : "59d933185e33247a09511b2f2bd0c6b371e236ec",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GenerateExportHeader/CMakeLists.txt" : {
      "ObjectId" : "dc924869733de74ad995c052229ead7c866fdccc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GenerateExportHeader/GEH-failures.cmake" : {
      "ObjectId" : "7182cdf767b2a39c22dabf4048ac59b765d4908e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check if we should do anything. If the compiler doesn't support hidden\n\n# visibility, the failure tests won't fail, so just write an empty targets\n\n# list and punt.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read the input source file\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generate source files for failure test executables\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find first occurrence of link error marker in remaining content\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# No more matches\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Shift content buffers and extract failing statement\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Check if potential error is conditional, and evaluate condition if so\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Write new source file\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Add executable for failure test\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Add placeholder where failing statement was removed\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GenerateExportHeader/GEH.cmake" : {
      "ObjectId" : "ae9a84c43ddde74d6d8e9fd037697455922db222",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test add_compiler_export_flags without deprecation warning.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MSVC\n\n# And intel on windows?\n\n# http://software.intel.com/en-us/articles/how-to-handle-warnings-message-in-compiler/?wapkw=%28compiler+warning+message%29\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Sun CC\n\n# http://www.acsu.buffalo.edu/~charngda/sunstudio.html\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Clang/C2 in C++98 mode cannot properly handle some of MSVC headers\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# With GNU 7 on AIX, passing -fvisibility=hidden when driving the\n\n# linker for a shared library drops the so init/destruct symbols.\n\n# Just use the modern approach instead of testing the macro.\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# For the export header.\n",
        "Line" : 79,
        "CharPositionInLine" : 40
      },
      "6" : {
        "Text" : "# No need to clutter the test output with warnings.\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GenerateExportHeader/RunCMakeTest.cmake" : {
      "ObjectId" : "18c3340809920f92ece66f87823b709734bea092",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GenerateExportHeader/c_identifier/CMakeLists.txt" : {
      "ObjectId" : "77c18e07a902142ce6c16753d2fb4bedb29e5595",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GenerateExportHeader/includeguard/CMakeLists.txt" : {
      "ObjectId" : "514d27b67a0a88f08432ef1817877cd91700b578",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GenerateExportHeader/lib_shared_and_static/CMakeLists.txt" : {
      "ObjectId" : "ff81f35585b1543ce7700c24351fcecc4f96a2c1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GenerateExportHeader/libshared/CMakeLists.txt" : {
      "ObjectId" : "9516a5aa2f47b3698c822f5a807c45f620763ad9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GenerateExportHeader/libstatic/CMakeLists.txt" : {
      "ObjectId" : "56e83352420d6b7e97d816e3195a301fa2355be2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Show that the export header has no effect on a static library.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GenerateExportHeader/nodeprecated/CMakeLists.txt" : {
      "ObjectId" : "7822d9c7963be72d85beef0c785ca7bbb0b8d38a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/BadAND.cmake" : {
      "ObjectId" : "8a7993f53dc4fb2419b5982ccbd45c5d5729ebcc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/BadCONFIG.cmake" : {
      "ObjectId" : "5c22aaabe482ae6f7f190a92403c3d1439e28062",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/BadIF.cmake" : {
      "ObjectId" : "583f68d27f76094f0e3bfe020e8596bd7d36f295",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/BadInstallPrefix.cmake" : {
      "ObjectId" : "fcfc3ebaae000918a11f17fe3e3bab6ac9fb4fb3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/BadNOT.cmake" : {
      "ObjectId" : "c2dada3c20535bfb74a5b18e12c491f71b46b321",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/BadOR.cmake" : {
      "ObjectId" : "c0309da25829118076d9cd8ff7cd534827344954",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/BadSHELL_PATH.cmake" : {
      "ObjectId" : "5eff7bccbdf3a16ed994aba413478be02debdaf7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/BadStrEqual.cmake" : {
      "ObjectId" : "56eb4585314fbda8e976efb6b0330920baf99234",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/BadTargetName.cmake" : {
      "ObjectId" : "e125cab42269fbb88231e71316a1a451626e38dd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/BadTargetTypeInterface.cmake" : {
      "ObjectId" : "19566f4397605450c3d831ba2070446a5da30438",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/BadTargetTypeObject.cmake" : {
      "ObjectId" : "60e2c0dbca448635688258c229e0056cd0b066f9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/BadZero.cmake" : {
      "ObjectId" : "559a9fa3dd2334d05010f2a2da0f3bf1fc47fb1a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/CMP0044-WARN.cmake" : {
      "ObjectId" : "dfa23e09e839c0be552638ba5db566088acefd32",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/COMPILE_LANGUAGE-add_custom_command.cmake" : {
      "ObjectId" : "c3f051ab41092faf7e234bacbadf631910b3ee01",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/COMPILE_LANGUAGE-add_custom_target.cmake" : {
      "ObjectId" : "b826772e214d35be640bd308c4e6f99006b2f1b0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/COMPILE_LANGUAGE-add_executable.cmake" : {
      "ObjectId" : "ff965a9e737b35e2d467ac794ee46222256a8d3f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/COMPILE_LANGUAGE-add_library.cmake" : {
      "ObjectId" : "dd1b5a2d75b7bd8c6e0fd019ac504c1f69066a31",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/COMPILE_LANGUAGE-add_test.cmake" : {
      "ObjectId" : "deedf659e39f2a6199b043e347c619434e9dfea1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/COMPILE_LANGUAGE-install.cmake" : {
      "ObjectId" : "92c20e32d153a1bf100ccac238e3a709475e7362",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/COMPILE_LANGUAGE-target_sources.cmake" : {
      "ObjectId" : "a4a5abb5ec4258ee1ca648e95c30fde0618069c7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/COMPILE_LANGUAGE-unknown-lang.cmake" : {
      "ObjectId" : "00dd29070e78fb5eac6033ff2595d94dd70bbe86",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/GENEX_EVAL-check.cmake" : {
      "ObjectId" : "df7674051a2f9029ff3b7d2b74657c5c6530dbe2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/GENEX_EVAL-recursion1.cmake" : {
      "ObjectId" : "6596a81ab552e2d02f077d6edf7feb432878b4d9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/GENEX_EVAL-recursion2.cmake" : {
      "ObjectId" : "773749f2c13d7abca6d10b53f561f7925756749e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/GENEX_EVAL.cmake" : {
      "ObjectId" : "ab8988b269e12d74a5de7bf922add050d5b831aa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/ImportedTarget-TARGET_BUNDLE_CONTENT_DIR.cmake" : {
      "ObjectId" : "ac2d3ce6a867d794e31e1b322e83e59249f33821",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/ImportedTarget-TARGET_BUNDLE_DIR.cmake" : {
      "ObjectId" : "17c81287c4e7bade3653e22e9356b6771d832d49",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/ImportedTarget-TARGET_PDB_FILE.cmake" : {
      "ObjectId" : "c55c5d594da28c0246e6a2441a312331b20b4aac",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/LINK_ONLY-not-linking.cmake" : {
      "ObjectId" : "16db0a21bd979f690a312adb9ce41c45351c79d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/NonValidCompiler-TARGET_PDB_FILE.cmake" : {
      "ObjectId" : "84a2b2e8b2853e74abb6848e1c57ba81ea669ace",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/NonValidTarget-CXX_COMPILER_ID.cmake" : {
      "ObjectId" : "a9fb0925fce6a15a558c6f97c2891e6ee52e3c07",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/NonValidTarget-CXX_COMPILER_VERSION.cmake" : {
      "ObjectId" : "41610c42204c47399ca6a9fa81432a2533106ab8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/NonValidTarget-C_COMPILER_ID.cmake" : {
      "ObjectId" : "1b02431e15ed698c9647bba663ab517ac7c1abe5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/NonValidTarget-C_COMPILER_VERSION.cmake" : {
      "ObjectId" : "bc1ffe059bc93bceee11e63d566e44bfd99c37b2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/NonValidTarget-TARGET_BUNDLE_CONTENT_DIR.cmake" : {
      "ObjectId" : "63b3b1bebf04ee870913135c03da068c7350db59",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/NonValidTarget-TARGET_BUNDLE_DIR.cmake" : {
      "ObjectId" : "19f333aa12f9d38c9e7493338005d2536b452343",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/NonValidTarget-TARGET_PDB_FILE.cmake" : {
      "ObjectId" : "84a2b2e8b2853e74abb6848e1c57ba81ea669ace",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/NonValidTarget-TARGET_POLICY.cmake" : {
      "ObjectId" : "55d8a9981ea8c466cf438d2dc8c125090684c413",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/NonValidTarget-TARGET_PROPERTY.cmake" : {
      "ObjectId" : "9e246b2789656147c7553e40d3de60841157a312",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/OUTPUT_NAME-recursion.cmake" : {
      "ObjectId" : "5cb80509e3370edaef1218fbdccd76a1f8a1afee",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/RunCMakeTest.cmake" : {
      "ObjectId" : "3905c5f99348668c2af2cb160dcd9c3b3a4a67ea",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_EXISTS-check.cmake" : {
      "ObjectId" : "c4c3a513bb554b6aed347ada9aa5c98c2a1ba2b4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_EXISTS-empty-arg.cmake" : {
      "ObjectId" : "e387abccbe809db4d1173eda67d83dded8382635",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_EXISTS-no-arg.cmake" : {
      "ObjectId" : "0a5ce323f8f87988b9d8c43854799bd602137a6b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_EXISTS-not-a-target-check.cmake" : {
      "ObjectId" : "35ba267464d35e621ec644c7dec7078c18bcda83",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_EXISTS-not-a-target.cmake" : {
      "ObjectId" : "d8a8d3e45c93d3f3e9a751be0b901e5287b5d502",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_EXISTS.cmake" : {
      "ObjectId" : "9a83b34caa1bccbfdbf25484dcccde5488c0bd8c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_FILE-recursion.cmake" : {
      "ObjectId" : "e780103d9f8b9180b98f5588f5d9440fd88f11f6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_GENEX_EVAL-check.cmake" : {
      "ObjectId" : "124a583e24a6b559fded33b0cf5434f1b6c8e38b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_GENEX_EVAL-no-arg.cmake" : {
      "ObjectId" : "2dc13ea5ebe9d7e272d2e6fc9dff0a3efe544e58",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_GENEX_EVAL-no-target.cmake" : {
      "ObjectId" : "df4f0eac689562c36090843f820e26099685d44f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_GENEX_EVAL-non-valid-target.cmake" : {
      "ObjectId" : "8db73759320e80984c869882343de8c1ebd8b021",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_GENEX_EVAL-recursion1.cmake" : {
      "ObjectId" : "b75d2117579472110df211feacfb5f9b81bb06a3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_GENEX_EVAL-recursion2.cmake" : {
      "ObjectId" : "a28dfc34dcfb7b6dbbc4262251624f35fc759441",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_GENEX_EVAL.cmake" : {
      "ObjectId" : "68b3712579fbeecfde76cec8ef0a59d2dd3cd412",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_NAME_IF_EXISTS-check.cmake" : {
      "ObjectId" : "2f5743093ac4c8379abb22225e7393a1c07a6b34",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_NAME_IF_EXISTS-empty-arg.cmake" : {
      "ObjectId" : "f5034f42964e1839a94fe38a50eaf414b18f008b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_NAME_IF_EXISTS-no-arg.cmake" : {
      "ObjectId" : "32930948a8ce214cc5f9e173b63196ee4f259d94",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_NAME_IF_EXISTS-not-a-target-check.cmake" : {
      "ObjectId" : "2085c167ef20f21cca7973db4e691b0e0ba6edb4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_NAME_IF_EXISTS-not-a-target.cmake" : {
      "ObjectId" : "a054e6cc715899353953af602aebff00a9ad4863",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_NAME_IF_EXISTS.cmake" : {
      "ObjectId" : "0ce3b1d7fdf2b76c36d579337ca3c526c29a227a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_PROPERTY-LOCATION.cmake" : {
      "ObjectId" : "8929cdb8f97f8f81cb7404844b27a6783f3cafad",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_PROPERTY-SOURCES-check.cmake" : {
      "ObjectId" : "c1a0f5bc4d41b65fa50edb96726d96fd1c126c6c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/TARGET_PROPERTY-SOURCES.cmake" : {
      "ObjectId" : "dee7ead5437d8337dfaae128f2454124c6fb08db",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/ValidTarget-TARGET_PDB_FILE-check.cmake" : {
      "ObjectId" : "2a588bcb70cca856be5d6e0942349d3678beca02",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorExpression/ValidTarget-TARGET_PDB_FILE.cmake" : {
      "ObjectId" : "a66394b423d17c33ec7c9f5545d3b3d135851478",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorInstance/BadInstance-toolchain.cmake" : {
      "ObjectId" : "1d99259d5cc1f783ea7b9d0134045219275754a7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorInstance/BadInstance.cmake" : {
      "ObjectId" : "2fc38e5c597115a628ca9cc466d10efa3192a09c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorInstance/BadInstanceToolchain.cmake" : {
      "ObjectId" : "2fc38e5c597115a628ca9cc466d10efa3192a09c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorInstance/CMakeLists.txt" : {
      "ObjectId" : "d3137f614c00a9858c9042188cc3b5d72090c95a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorInstance/DefaultInstance.cmake" : {
      "ObjectId" : "7750c2e14264f206a593fec51b99f5f1250ebb54",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorInstance/MissingInstance-toolchain.cmake" : {
      "ObjectId" : "f803f14d08821a75070f2fd46854df7348edad89",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorInstance/MissingInstance.cmake" : {
      "ObjectId" : "2fc38e5c597115a628ca9cc466d10efa3192a09c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorInstance/MissingInstanceToolchain.cmake" : {
      "ObjectId" : "2fc38e5c597115a628ca9cc466d10efa3192a09c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorInstance/NoInstance.cmake" : {
      "ObjectId" : "2e6782e38f6620a5e78b3702bd7fd6ba8d8dcd27",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorInstance/RunCMakeTest.cmake" : {
      "ObjectId" : "e7f9ccbc40a289c1c4ef38d543eb4f3b9b047210",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorPlatform/BadPlatform-toolchain.cmake" : {
      "ObjectId" : "1c544b0d425e92e23febf623900834ea581a8165",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorPlatform/BadPlatform.cmake" : {
      "ObjectId" : "2fc38e5c597115a628ca9cc466d10efa3192a09c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorPlatform/BadPlatformToolchain.cmake" : {
      "ObjectId" : "2fc38e5c597115a628ca9cc466d10efa3192a09c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorPlatform/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorPlatform/NoPlatform.cmake" : {
      "ObjectId" : "1e0ca6deb0ac14beca67f74c93f688f4256657dc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorPlatform/RunCMakeTest.cmake" : {
      "ObjectId" : "27250cba77c49b883dcd40b9c4405044257d2b87",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorPlatform/TestPlatform-toolchain.cmake" : {
      "ObjectId" : "763478cc529aba8e94daa701fe5993a58798b06d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorPlatform/TestPlatformToolchain.cmake" : {
      "ObjectId" : "c4430a5982740d546f5a124cd2ed6f8ba909f58b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorPlatform/TwoPlatforms.cmake" : {
      "ObjectId" : "2fc38e5c597115a628ca9cc466d10efa3192a09c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorPlatform/x64Platform.cmake" : {
      "ObjectId" : "a23bdc74b7723b355f6ae447c794248ae053f07f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/BadToolset-toolchain.cmake" : {
      "ObjectId" : "7bbf32757796afb9528094a682eef402053576ab",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/BadToolset.cmake" : {
      "ObjectId" : "2fc38e5c597115a628ca9cc466d10efa3192a09c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/BadToolsetFormat.cmake" : {
      "ObjectId" : "2fc38e5c597115a628ca9cc466d10efa3192a09c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/BadToolsetHostArch.cmake" : {
      "ObjectId" : "2fc38e5c597115a628ca9cc466d10efa3192a09c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/BadToolsetHostArchTwice.cmake" : {
      "ObjectId" : "2fc38e5c597115a628ca9cc466d10efa3192a09c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/BadToolsetHostArchXcode.cmake" : {
      "ObjectId" : "2fc38e5c597115a628ca9cc466d10efa3192a09c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/BadToolsetToolchain.cmake" : {
      "ObjectId" : "2fc38e5c597115a628ca9cc466d10efa3192a09c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/BadToolsetVersion.cmake" : {
      "ObjectId" : "2fc38e5c597115a628ca9cc466d10efa3192a09c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/BadToolsetVersionTwice.cmake" : {
      "ObjectId" : "2fc38e5c597115a628ca9cc466d10efa3192a09c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/NoToolset.cmake" : {
      "ObjectId" : "f1f1ecd265f3d72099da17765d1df7f5ac8e00f7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/RunCMakeTest.cmake" : {
      "ObjectId" : "d1738a0c38fb94837937f7ea17f50429ade643c6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/TestToolset-toolchain.cmake" : {
      "ObjectId" : "bee2ae4bb770c1fc8c499dc8bc0120de2f289f61",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/TestToolset.cmake" : {
      "ObjectId" : "6f83bef2816a32ab2458bd6b62957b80062d7d39",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/TestToolsetCudaBoth.cmake" : {
      "ObjectId" : "befa0af9d6c2290a226f5a5bc31d5523dff222e1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/TestToolsetCudaOnly.cmake" : {
      "ObjectId" : "befa0af9d6c2290a226f5a5bc31d5523dff222e1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/TestToolsetHostArchBoth.cmake" : {
      "ObjectId" : "26926f9dbd28c17b3a23af02ede3003788316d45",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/TestToolsetHostArchNone.cmake" : {
      "ObjectId" : "26926f9dbd28c17b3a23af02ede3003788316d45",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/TestToolsetHostArchOnly.cmake" : {
      "ObjectId" : "26926f9dbd28c17b3a23af02ede3003788316d45",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/TestToolsetToolchain.cmake" : {
      "ObjectId" : "7c1c41518954a3e192c8d33c0f09ee7917527c16",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/TestToolsetVersionBoth.cmake" : {
      "ObjectId" : "fbc75bec88ea0c6ead714f887d2a8a94f2cd0c67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/TestToolsetVersionOnly.cmake" : {
      "ObjectId" : "fbc75bec88ea0c6ead714f887d2a8a94f2cd0c67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GeneratorToolset/TwoToolsets.cmake" : {
      "ObjectId" : "2fc38e5c597115a628ca9cc466d10efa3192a09c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GetPrerequisites/RunCMakeTest.cmake" : {
      "ObjectId" : "3856c54b6d9f75747ff79862bf64b70bc00f9784",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GetPrerequisites/TargetMissing.cmake" : {
      "ObjectId" : "84fd32ce122f66035e37bc83c6bdb511316f74a1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GoogleTest/CMakeLists.txt" : {
      "ObjectId" : "dc924869733de74ad995c052229ead7c866fdccc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GoogleTest/GoogleTest.cmake" : {
      "ObjectId" : "31808c6701d0d78e46e81d76c4b3b35f75313388",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note change in behavior of TIMEOUT keyword in 3.10.3\n\n# where it was renamed to DISCOVERY_TIMEOUT to prevent it\n\n# from shadowing the TIMEOUT test property. Verify the\n\n# 3.10.3 and later behavior, old behavior added in 3.10.1\n\n# is not supported.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/GoogleTest/RunCMakeTest.cmake" : {
      "ObjectId" : "0fa4e2aa239bff7de924db2d3de671656989f6c4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/IfacePaths/BinaryDirectoryInInterface.cmake" : {
      "ObjectId" : "7001f3f6303915dd74fa9bd6686a01f802e69e05",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/IfacePaths/CMakeLists.txt" : {
      "ObjectId" : "5cd4825e6646b38bae3deb8f584033631a824196",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/IfacePaths/DirInInstallPrefix.cmake" : {
      "ObjectId" : "f5f30050e7a9a9627f03828bcfed86b67ae74542",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/IfacePaths/InstallPrefixInInterface.cmake" : {
      "ObjectId" : "8d777f53ccc16a67e6e4857f86e0b40ad60d7ca3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/IfacePaths/RelativePathInGenex.cmake" : {
      "ObjectId" : "489c3a1c1200864243b430b60df56066c95f9610",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/IfacePaths/RelativePathInInterface.cmake" : {
      "ObjectId" : "e974aaca106f125a6a831f3cd1c6b36797d9f6d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/IfacePaths/RunCMakeTest.cmake" : {
      "ObjectId" : "066c83e63dfe8408d59b4e0831c0f27eb6c111e4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Protect tests from running inside the default install prefix.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the RunCMake_TEST_SOURCE_DIR here to the copy too. This is needed to run\n\n# the test suite in-source properly.  Otherwise the install directory would be\n\n# a subdirectory or the source directory, which is allowed and tested separately\n\n# below.\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/IfacePaths/SourceDirectoryInInterface.cmake" : {
      "ObjectId" : "d80cbec85ad122d7cd47d76dd380b35df217ed00",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/IfacePaths/export-NOWARN.cmake" : {
      "ObjectId" : "592572cc21ee80c27a8519d01b3c86d47352a993",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# target_include_directories(foo INTERFACE include/subdir) # Does and should warn. INSTALL_INTERFACE must not list src dir paths.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Does not and should not should warn, because it starts with a genex.\n",
        "Line" : 19,
        "CharPositionInLine" : 63
      },
      "2" : {
        "Text" : "# No warning. Implicit install prefix.\n",
        "Line" : 38,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# The $<0:> is evaluated at export time, leaving 'include' behind, which should be treated as above.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/IncludeWhatYouUse/C-launch.cmake" : {
      "ObjectId" : "e66ca203e2f7ed744830811b714e688892a242ca",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/IncludeWhatYouUse/C.cmake" : {
      "ObjectId" : "f400e861fcdd94a19ed134349aa1d6fa636ec41b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/IncludeWhatYouUse/CMakeLists.txt" : {
      "ObjectId" : "18dfd2686f63fed35d3e7940d69512d8fd0ed2e3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/IncludeWhatYouUse/CXX-launch.cmake" : {
      "ObjectId" : "3002c9d688c7ff1ec719af09cb69e2f92bfb044e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/IncludeWhatYouUse/CXX.cmake" : {
      "ObjectId" : "896930c16b0c5f4b6c684f616e29face47bc64ac",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/IncludeWhatYouUse/RunCMakeTest.cmake" : {
      "ObjectId" : "8f99eb104787d55e6a071e828bbf3110bb23ac29",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for tests without cleaning.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/IncompatibleQt/CMakeLists.txt" : {
      "ObjectId" : "f452db177035b737ea028d8b2d42e3f28fefca76",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/IncompatibleQt/IncompatibleQt.cmake" : {
      "ObjectId" : "4fccdc418fa6f15cf8e98d3ed77ed44162bbc821",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/IncompatibleQt/RunCMakeTest.cmake" : {
      "ObjectId" : "322c291b749db6e2c7c05dbc0c1b7953c60a0095",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Languages/CMakeLists.txt" : {
      "ObjectId" : "8996fef6bd1af0f7195452b23230ee08cda84538",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Languages/DetermineFail.cmake" : {
      "ObjectId" : "3c8d17d8f5514bae919add05b82716cd4eab1edc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Languages/ExternalCUDA.cmake" : {
      "ObjectId" : "3afa93e5568d01d53f5f18054ec65c9e9d366c53",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Languages/LINK_LANGUAGE-genex.cmake" : {
      "ObjectId" : "64f394c116580e39383cf1399433e31e6594878f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Languages/Modules/CMakeDetermineFailCompiler.cmake" : {
      "ObjectId" : "3b2d50a349ee1acff3c6b63bcaa4f3ee957fea87",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Languages/NoLangSHARED.cmake" : {
      "ObjectId" : "de6adf7cbfbfa7ff759c3f87bd5380b3c5d9753b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Languages/RunCMakeTest.cmake" : {
      "ObjectId" : "2a534b3383bd2f053286cdc02507ec140dbea812",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Languages/link-libraries-TARGET_FILE-genex-ok.cmake" : {
      "ObjectId" : "f0fd6e5aaa40aa8ec0a229b37d025563931bd4d9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Languages/link-libraries-TARGET_FILE-genex.cmake" : {
      "ObjectId" : "eca73e977b8d4a947b00eb5c3f50b87ef0dcef90",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/LinkStatic/CMakeLists.txt" : {
      "ObjectId" : "74b3ff8de38d8e90e2e9549eb077ea0a023fa581",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/LinkStatic/LINK_SEARCH_STATIC.cmake" : {
      "ObjectId" : "6db5c857d66129b2ae7864b4c6370a980817a1b4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/LinkStatic/RunCMakeTest.cmake" : {
      "ObjectId" : "d3a8afb219f7a5bd48d3c936c5754274c661ec2e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Intel compiler does not reject bad flags or objects!\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/LinkStatic/STATIC_LIBRARY_OPTIONS-basic-check.cmake" : {
      "ObjectId" : "858ce06f7fe6b64f14a1fc7d8dfa8ef163f372de",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/LinkStatic/STATIC_LIBRARY_OPTIONS-genex-check.cmake" : {
      "ObjectId" : "a686de945a34a139d85c18e7e01c1d729d960fa1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/LinkStatic/STATIC_LIBRARY_OPTIONS-shared-check.cmake" : {
      "ObjectId" : "8c1e96e612efb83fe81504188c9d38f2cdec486f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/LinkStatic/STATIC_LIBRARY_OPTIONS.cmake" : {
      "ObjectId" : "587af1d96eaad3778ce137ed71d8c8a8a694921c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# static library with generator expression\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# produces no options\n",
        "Line" : 16,
        "CharPositionInLine" : 11
      },
      "2" : {
        "Text" : "# shared library do not use property STATIC_LIBRARY_OPTIONS\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/LinkWhatYouUse/C-launch.cmake" : {
      "ObjectId" : "e66ca203e2f7ed744830811b714e688892a242ca",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/LinkWhatYouUse/C.cmake" : {
      "ObjectId" : "4c3f428284dda7b82136284dc7e68e7424ff6149",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/LinkWhatYouUse/CMakeLists.txt" : {
      "ObjectId" : "18dfd2686f63fed35d3e7940d69512d8fd0ed2e3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/LinkWhatYouUse/CXX-launch.cmake" : {
      "ObjectId" : "3002c9d688c7ff1ec719af09cb69e2f92bfb044e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/LinkWhatYouUse/CXX.cmake" : {
      "ObjectId" : "95558327e3df6407e3ede61f628a6194c99a3d54",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/LinkWhatYouUse/RunCMakeTest.cmake" : {
      "ObjectId" : "897f5681762407dedfe9a7f65d4f6a1e87ddcb1c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for tests without cleaning.\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Make/CMakeLists.txt" : {
      "ObjectId" : "74b3ff8de38d8e90e2e9549eb077ea0a023fa581",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Make/CustomCommandDepfile-ERROR.cmake" : {
      "ObjectId" : "bad7955017ac865453c2bc04a66849f4d70c0cf2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Make/IncludeRegexSubdir-check.cmake" : {
      "ObjectId" : "dbdf7bea93055af5444d80743ec5a6c907278e95",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Make/IncludeRegexSubdir.cmake" : {
      "ObjectId" : "a7a93a09052d8d6919339a83d6304578424e5aef",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Make/IncludeRegexSubdir/CMakeLists.txt" : {
      "ObjectId" : "e712aea5d95ee48e3fd5f2a9da2486a1ca695be0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We only need this directory to be processed.  No targets needed.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Make/RunCMakeTest.cmake" : {
      "ObjectId" : "3b2b8f5932b11925041b1f57290444d0491d3c2d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Make/TargetMessages-OFF.cmake" : {
      "ObjectId" : "8f5d52cca8b141bea75d68173c66e7134b220ca5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Make/TargetMessages-ON.cmake" : {
      "ObjectId" : "e0a5f2b3f84465cbfe99af6c4c7a5677a441d307",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Make/TargetMessages-VAR-OFF.cmake" : {
      "ObjectId" : "f2781323003531275ac3bdf3af8da242e18029d3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Make/TargetMessages-VAR-ON.cmake" : {
      "ObjectId" : "f2781323003531275ac3bdf3af8da242e18029d3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/MultiLint/C-launch.cmake" : {
      "ObjectId" : "e66ca203e2f7ed744830811b714e688892a242ca",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/MultiLint/C.cmake" : {
      "ObjectId" : "495d6f042f39907353782a2e6530ff59557bfa15",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/MultiLint/CMakeLists.txt" : {
      "ObjectId" : "bf2ef1506eab776e7736df37a608f19acbeaf1a9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/MultiLint/CXX-launch.cmake" : {
      "ObjectId" : "3002c9d688c7ff1ec719af09cb69e2f92bfb044e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/MultiLint/CXX.cmake" : {
      "ObjectId" : "dc30146a6e3ea299a9e8863870e4ef9884e5f6a6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/MultiLint/RunCMakeTest.cmake" : {
      "ObjectId" : "afd98fd0891f5ae52683df2a400841cc0e5ba8e5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for tests without cleaning.\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/AssumedSources.cmake" : {
      "ObjectId" : "5fb02199d3983c956cb5d514dc75c9a9e5a0422c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/CMP0058-NEW-by.cmake" : {
      "ObjectId" : "0f7793096e81b94215f532e2aee15a2b0301349c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/CMP0058-NEW-no.cmake" : {
      "ObjectId" : "582e3d530e780966a92d80310b86fc1b5cd094be",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/CMP0058-OLD-by.cmake" : {
      "ObjectId" : "92a3a0fb573bcf2ed3559fedd2cb9e001a8eef9d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/CMP0058-OLD-no.cmake" : {
      "ObjectId" : "0326e0766230fd5b3d35a14298b4f2cdf968b210",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/CMP0058-WARN-by.cmake" : {
      "ObjectId" : "6128167967a1a7170143c183ed0612931cfaecef",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/CMP0058-WARN-no.cmake" : {
      "ObjectId" : "7bc66ef2845d4e27d367157cd45ae3c5684b51ce",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/CMP0058-common.cmake" : {
      "ObjectId" : "9274d58cd1381b46af35889ade75a6a060d9b977",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/CMakeLists.txt" : {
      "ObjectId" : "2a0591e74d860bc207d6a25924950c7cb99e1498",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/CheckNoPrefixSubDir.cmake" : {
      "ObjectId" : "b845f2f4a761dfd4b492dd66e4ac051dbabc5226",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/CheckNoPrefixSubDirScript.cmake" : {
      "ObjectId" : "5a03fcb7e6ed0eac026380c4dd04232078f758af",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check that the prefix sub-directory is not repeated.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/CheckOutput.cmake" : {
      "ObjectId" : "ddb35a75eddce3e7f761671666705ba87d4e87d7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add rules to check the generated executable works.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/CommandConcat.cmake" : {
      "ObjectId" : "790cf9d255ea6480f9b0a193a080aa2edab727f3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check that second command runs if first command contains \"||\" which has higher precedence than \"&&\" on Windows\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check output\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/CustomCommandDepfile-check.cmake" : {
      "ObjectId" : "189de6417aab05bb1d5db1295ef29463802262fe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/CustomCommandDepfile.cmake" : {
      "ObjectId" : "dbef2a53542bbc90c292062d1208da8bf7487ccc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/CustomCommandWorkingDirectory.cmake" : {
      "ObjectId" : "8e01c8c6570f0c72e903f73e909d5415bf337d5c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/Executable.cmake" : {
      "ObjectId" : "4e17d68898de0dafbf5b7860b3ddfb0a49e3dd3e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/LooseObjectDepends.cmake" : {
      "ObjectId" : "360c7ba13c7fb5f5af45d22987919b853b82c998",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/NinjaToolMissing.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/NoWorkToDo.cmake" : {
      "ObjectId" : "a2fa0cb39ec04850c455b77ae17524dde4d8b0c2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/PreventConfigureFileDupBuildRule.cmake" : {
      "ObjectId" : "505f750942a95d994ca157c6a2266a0094c89c70",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/PreventTargetAliasesDupBuildRule.cmake" : {
      "ObjectId" : "da6f86a7339ef7f0b0044c33eff71991068621e0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# fake launcher executable\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# application and executable name\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# target built in \"<root>/bin\"\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# configured launcher in \"<root>\"\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# create command to copy the launcher\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/RspFileC.cmake" : {
      "ObjectId" : "4a4068237c38345a8153c330c6b4b1ab563ec255",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/RspFileCXX.cmake" : {
      "ObjectId" : "9e61ffeffbfdce5f6124bbe0644ef5d4cd8c17cf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/RspFileFortran.cmake" : {
      "ObjectId" : "8c18e37689a263d7cc3fa7381868ff12cc52c78e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/RunCMakeTest.cmake" : {
      "ObjectId" : "9e1e9a5fd56ccb9274438b3127d59293b2e4a1c6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Detect ninja version so we know what tests can be supported.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Generate top build ninja file.\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# We assume the system as 1 sec timestamp resolution.\n",
        "Line" : 208,
        "CharPositionInLine" : 18
      },
      "5" : {
        "Text" : "# Run sub cmake project.\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Check there is no 'default' statement in Ninja file generated by CMake.\n",
        "Line" : 230,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Run ninja from the top build directory.\n",
        "Line" : 238,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Test regeneration rules run in order.\n",
        "Line" : 241,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Check sub build.ninja is regenerated.\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Check top build.ninja is regenerated after sub build.ninja.\n",
        "Line" : 259,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/SharedLib.cmake" : {
      "ObjectId" : "1a78390e327b8c56a7f43c0115195cde3a48436e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/StaticLib.cmake" : {
      "ObjectId" : "0f815ae5e5c43cdb627e93d6a711a255d7f88957",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/SubDir.cmake" : {
      "ObjectId" : "11f467a4be7df7280220551b9d5ea728f391901a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/SubDir/CMakeLists.txt" : {
      "ObjectId" : "456c1dba2b8cd488076c67d98beab2e1599023ab",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/SubDirConfigureFileDup/CMakeLists.txt" : {
      "ObjectId" : "433f77bf3eefd571137cb506b34bd2df59c828b7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/SubDirPrefix.cmake" : {
      "ObjectId" : "30ad1e60736c0e94a2975b70e8eeef166f687386",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/SubDirPrefix/CMakeLists.txt" : {
      "ObjectId" : "575597d488525007db3c317042cd2cd8674cb697",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/SubDirSource/CMakeLists.txt" : {
      "ObjectId" : "26642610ead2dd6bc81e5b9c1050e8223758c75f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Ninja/TwoLibs.cmake" : {
      "ObjectId" : "666452f340e5858da5500859c292b1a87022efd5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/BadObjSource1.cmake" : {
      "ObjectId" : "aa3514d90c028c81099ab3e281034bd663365157",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/BadObjSource2.cmake" : {
      "ObjectId" : "7957c99f2e6e2cbe6f6cde1724f41fd77f93b4ab",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/BadSourceExpression1.cmake" : {
      "ObjectId" : "020c9a00f6ab678911f460837bcc5802837df5a5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/BadSourceExpression2.cmake" : {
      "ObjectId" : "ed5dc4335030e4018de617e36bbe63f404c1c335",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/BadSourceExpression3.cmake" : {
      "ObjectId" : "c3d9a622d001de086a4c7b0474a60312dd05130b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/CMakeLists.txt" : {
      "ObjectId" : "d1b0d2c3e8047e4d23fe1743d73fc931b8cc455d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/Dependencies.cmake" : {
      "ObjectId" : "6ddf545c8d3414eec919353efa2198d0c14f9faf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/Export.cmake" : {
      "ObjectId" : "a3f104e297456756d50cf4266f07768cf723a50a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/ExportNotSupported.cmake" : {
      "ObjectId" : "a3f104e297456756d50cf4266f07768cf723a50a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/Import.cmake" : {
      "ObjectId" : "42f44686649b0e66a92efd6e212ae601ab2b911a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We don't actually build this example so just configure dummy\n\n# object files to test.  They do not have to exist.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/ImportNotSupported.cmake" : {
      "ObjectId" : "806b44a25e42816428f25190477942c4aec2e561",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/Install.cmake" : {
      "ObjectId" : "c1d214bd4b1883e441a112d7ec622da0f6ef6227",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/InstallLinkedObj1.cmake" : {
      "ObjectId" : "9e2460987ba645ee02c176a5b54901a89f0a3d2d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/InstallLinkedObj2.cmake" : {
      "ObjectId" : "cdda962390a5c9236dbd3e50e1c43069153abd9c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/InstallNotSupported.cmake" : {
      "ObjectId" : "c1d214bd4b1883e441a112d7ec622da0f6ef6227",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/LinkObjLHS.cmake" : {
      "ObjectId" : "5d7831a23c3990d1a886d7d77cf0cdbceb4a7433",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/LinkObjLHSShared.cmake" : {
      "ObjectId" : "4aa7bba6fe9d52be79301f682feb211ac183ec97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/LinkObjLHSStatic.cmake" : {
      "ObjectId" : "261bee7812bc93de808c1d940cf99697e29ad434",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/LinkObjRHS1.cmake" : {
      "ObjectId" : "113d6a841ac3a79b5e8335855bcd73112696c380",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/LinkObjRHS2.cmake" : {
      "ObjectId" : "616372949b25904a62a593d9c4e7748c2cb5618c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/LinkObjRHSObject.cmake" : {
      "ObjectId" : "db571a3ca045a0c6d0a0f68b0f6c8638e54e3bb3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/LinkObjRHSObject2.cmake" : {
      "ObjectId" : "6bb8d5e7a20962ccaf589059f9257b69927920c3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/LinkObjRHSShared.cmake" : {
      "ObjectId" : "b9030b31846bc48d0d9dcf6b1b0ce24935de5491",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/LinkObjRHSShared2.cmake" : {
      "ObjectId" : "e2e5fa2625ae47e2c382c9fcb0d59f8342b16b26",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/LinkObjRHSStatic.cmake" : {
      "ObjectId" : "73fad063f6a5a389746e8dfb8b25f147736fe588",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/LinkObjRHSStatic2.cmake" : {
      "ObjectId" : "9e1ab6d9429f83410c8fd08c6731c45970413e98",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/MissingSource.cmake" : {
      "ObjectId" : "258eaedb2f57758023b8d00cb28160a31905414d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/ObjWithObj.cmake" : {
      "ObjectId" : "d0ef34bfe77db50a1dfdf36e2d07065275a7e0a0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/OwnSources.cmake" : {
      "ObjectId" : "e7bdf8d83bca6fd3b8f8809d6543388a830453fd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/PostBuild.cmake" : {
      "ObjectId" : "dea9a099e85b4988020539f9e6ce979cc4ced214",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/PreBuild.cmake" : {
      "ObjectId" : "e4424c100ac23ab8ba1a76d1941f00b7d2e59673",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/PreLink.cmake" : {
      "ObjectId" : "b8890551128ab820e17b29a8403bd8e0bb0fa53e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObjectLibrary/RunCMakeTest.cmake" : {
      "ObjectId" : "c73732f9032a928298640274cf8a26984d49eb01",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObsoleteQtMacros/AutomocMacro-WARN.cmake" : {
      "ObjectId" : "c0c64a5b74383425167139ab8e12df9f9658baf4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObsoleteQtMacros/CMakeLists.txt" : {
      "ObjectId" : "65ac8e8db34aab8ebbc865f502866d59dafbdf09",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObsoleteQtMacros/RunCMakeTest.cmake" : {
      "ObjectId" : "eee2cc3999053db933440596513aa1f4b3120de5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ObsoleteQtMacros/UseModulesMacro-WARN.cmake" : {
      "ObjectId" : "e86a3723be7c4bd4f8267cd4ed7052a7d38845bb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/PolicyScope/CMakeLists.txt" : {
      "ObjectId" : "667561ea79db6a103970b91ff192b85fdd428c49",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/PolicyScope/NotClosed.cmake" : {
      "ObjectId" : "19b880efadb7489adbb17ae97dc2d269928f560d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/PolicyScope/NotOpened.cmake" : {
      "ObjectId" : "bb9f3a36440fe8ec31c0dea26cd3bdc1ec35234d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/PolicyScope/RunCMakeTest.cmake" : {
      "ObjectId" : "abd27f4cd8781fd0f9fbb3b76104b639e7f877e2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/PolicyScope/dir-in-macro-generate-time.cmake" : {
      "ObjectId" : "04a7c2c7f9956af62b2ce583c7b0172b03b2d842",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/PolicyScope/dir-in-macro-include.cmake" : {
      "ObjectId" : "fd326f12c357de20583e378638879c983a11ee2f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This does not affect dir1 despite being set before the add_subdirectory.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/PolicyScope/dir1/CMakeLists.txt" : {
      "ObjectId" : "16bcb36899a385f62340c4b466cf8006c3a63a3e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/PolicyScope/parent-dir-generate-time.cmake" : {
      "ObjectId" : "a0842f7b2806623a0a5383686d57874c461a97b1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This affects dir1 despite being set after the add_subdirectory.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/PositionIndependentCode/CMakeLists.txt" : {
      "ObjectId" : "90afc127eda2f9441610f0198f43e3dbac35e4f3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MSVC creates extra targets which pollute the stderr unless we set this.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/PositionIndependentCode/Conflict1.cmake" : {
      "ObjectId" : "242bec37a5f56e712aa3505e620c0ad39fbabd75",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/PositionIndependentCode/Conflict2.cmake" : {
      "ObjectId" : "215d08dae59250210f0af752e455270392f8df1a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/PositionIndependentCode/Conflict3.cmake" : {
      "ObjectId" : "bf669bf4fc882bd402d65e8c179b4061c1adb4df",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/PositionIndependentCode/Conflict4.cmake" : {
      "ObjectId" : "ff5dfb353c079bfe7e0e349a895ec2fb1fef4e31",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/PositionIndependentCode/Conflict5.cmake" : {
      "ObjectId" : "e6055f45081f47c9907b1ae975c472439055a28f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/PositionIndependentCode/Conflict6.cmake" : {
      "ObjectId" : "7ea7c5f731dbbaed63c1e62b0fd672d51adc6a39",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/PositionIndependentCode/Debug.cmake" : {
      "ObjectId" : "4a8fbacba42896d639fab2a2f5c131365a25c0c5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/PositionIndependentCode/RunCMakeTest.cmake" : {
      "ObjectId" : "6a67e3cad105f73104e622a8e0cafd03a20c0da3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/RunCMake.cmake" : {
      "ObjectId" : "c076ad9b2ac9d2b371c4cce42b5e17b3ebd8732a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Protect RunCMake tests from calling environment.\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/RunCTest.cmake" : {
      "ObjectId" : "89e16ee69fae50cad1805644f86a24e3b958a025",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/RuntimePath/CMakeLists.txt" : {
      "ObjectId" : "a640c569ec2c77147afdc0912beefda8a4443f00",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/RuntimePath/RunCMakeTest.cmake" : {
      "ObjectId" : "3f238f2955ba90ab328e7b599d39f9643eba545d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/RuntimePath/SymlinkImplicit.cmake" : {
      "ObjectId" : "6578f8fa8c71495c82a53d72550df3a777c4f56d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/RuntimePath/SymlinkImplicitCheck.cmake" : {
      "ObjectId" : "d34742eb5ab9235db07254dc23ef87b1b2a565fb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ScriptMode/RunCMakeTest.cmake" : {
      "ObjectId" : "4c44ffb0991d7170e5cdde88628944e720182e7e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ScriptMode/set_directory_properties.cmake" : {
      "ObjectId" : "bf793172f60102c6cc305a76cf067a047b4a67f9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/SourceProperties/CMakeLists.txt" : {
      "ObjectId" : "a17c8cd139451009ccd4496433cf4e7dee929757",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/SourceProperties/RelativeIncludeDir.cmake" : {
      "ObjectId" : "08dffa81ee694c15ccaed06eca4617c37197d3d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/SourceProperties/RunCMakeTest.cmake" : {
      "ObjectId" : "0982153170ac9ec5b92e6d31215a1a966ae7bdd7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Swift/CMakeLists.txt" : {
      "ObjectId" : "74b3ff8de38d8e90e2e9549eb077ea0a023fa581",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Swift/NotSupported.cmake" : {
      "ObjectId" : "19f297a87fb94bf0a876003694ec2a70b428bc3c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Swift/RunCMakeTest.cmake" : {
      "ObjectId" : "4864295dc2a00495245d20ce35c743715916bd27",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Swift/XcodeTooOld.cmake" : {
      "ObjectId" : "19f297a87fb94bf0a876003694ec2a70b428bc3c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/AtWithVariable.cmake" : {
      "ObjectId" : "2bbf61db39e8d691fd34c8072ddf22b80ad34835",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Expanded here.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 'right' is dereferenced because 'var' was dereferenced when\n\n# assigning to 'ref' above.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/AtWithVariableAtOnly.cmake" : {
      "ObjectId" : "e06484c226ef62e83129f1d928aa761fe2ca8c70",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Expanded here.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# No dereference done at all.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/AtWithVariableAtOnlyFile.cmake" : {
      "ObjectId" : "bdd7bcd25237ddd22e5a077aab4203ee1c5d013d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/AtWithVariableEmptyExpansion.cmake" : {
      "ObjectId" : "840c7f0d6b0f99aaff01bb0c8ce57230156a6ac2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Literal since 'var' is not defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 'var' is dereferenced here.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/AtWithVariableEmptyExpansionAtOnly.cmake" : {
      "ObjectId" : "b657506be767bd654a3b11aea0266f60c425365c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Literal since 'var' is not defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 'var' is dereferenced, but now 'right'\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/AtWithVariableFile.cmake" : {
      "ObjectId" : "c709099287b42a7005ead25c43f0c110526af15f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/BOM-UTF-16-BE.cmake" : {
      "ObjectId" : "c51f6e6027f1659583ba801fad26614fa4f6257b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/BOM-UTF-16-LE.cmake" : {
      "ObjectId" : "b57446f25d6fc00af6acceda2f14c69cf57505ef",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/BOM-UTF-32-BE.cmake" : {
      "ObjectId" : "23c57f3e8fce6933721d553eb253544829c6090f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/BOM-UTF-32-LE.cmake" : {
      "ObjectId" : "c330f5bcb588347bc60333f45674882f6b73a539",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/BOM-UTF-8.cmake" : {
      "ObjectId" : "bdff83be80d40ec9dbd0a13e5daa9c6ca5041896",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/Bracket0.cmake" : {
      "ObjectId" : "4bc017212bf1318b98d784b7054bc5e77358be72",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/Bracket1.cmake" : {
      "ObjectId" : "587a57525fde8486348b67c01a85eb69d3dc36a7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/Bracket2.cmake" : {
      "ObjectId" : "5c5feed1acf56343aaf8de4268793b91ccc25a80",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[[Bracket Comment 1]]",
        "Line" : 1,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : "#[[Bracket Comment 2]]",
        "Line" : 2,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/BracketBackslash.cmake" : {
      "ObjectId" : "5478e5d766deb070e93dded64619b611365319ad",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/BracketCRLF.cmake" : {
      "ObjectId" : "2ea6df2fd5ace5c0e997623262d313505d6501b1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/BracketComment0.cmake" : {
      "ObjectId" : "0ee95de88dc30aac342fc81d73b0b0b603abb1cb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[=[\n#]]\nmessage(FATAL_ERROR \"This is commented out.\")\n#]==]=]",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/BracketComment1.cmake" : {
      "ObjectId" : "2ec9d201670b5b871fff6696e88a8eb40410de23",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##[[\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#]]\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/BracketComment2.cmake" : {
      "ObjectId" : "3eda32d34c8a944d7e4a6b4f2bdf2f8f0d91d710",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# [[\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#]]\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/BracketComment3.cmake" : {
      "ObjectId" : "ffd03a9311858ea6b355918c341a884f5accf08e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[[Text on opening line\nmessage(FATAL_ERROR \"This is commented out.\")\n#]=]]",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/BracketComment4.cmake" : {
      "ObjectId" : "9d586f11499513b033391a44da65348c1134b7b6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[[\nmessage(FATAL_ERROR \"This is commented out.\")\n#]]",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/BracketComment5.cmake" : {
      "ObjectId" : "dc9e6b48d39b751418963b019a41a59fdf4c9228",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[[\nmessage(FATAL_ERROR \"This is commented out.\")\n#]]",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[[\nmessage(FATAL_ERROR \"This is commented out.\")\n#]]",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#[[\nmessage(FATAL_ERROR \"This is commented out.\")\n#]]",
        "Line" : 5,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "#message(FATAL_ERROR \"This is commented out.\")\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#[[\nmessage(FATAL_ERROR \"This is commented out.\")\n#]]",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#message(FATAL_ERROR \"This is commented out.\")\n",
        "Line" : 10,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/BracketNoSpace0.cmake" : {
      "ObjectId" : "1de1450552e3de672560c25d2ad079156e11d6bf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/BracketNoSpace1.cmake" : {
      "ObjectId" : "7982bf3c6307312eba2f144826734a0e09c3cd5e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/BracketNoSpace2.cmake" : {
      "ObjectId" : "f1507f3ace93a57d6fb6127079dbb8b3e1550073",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[[bracket comment]]",
        "Line" : 1,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/BracketNoSpace3.cmake" : {
      "ObjectId" : "45dc900ea7a32c27f6645b95769de1be59fb48af",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[[bracket comment]]",
        "Line" : 1,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/BracketNoSpace4.cmake" : {
      "ObjectId" : "cb4ddbec87baaa837c9cdd3731bb1e3c01e9e058",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[[bracket comment]]",
        "Line" : 1,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/BracketNoSpace5.cmake" : {
      "ObjectId" : "c68452322ade4defca26f756b7627bfcc0b738f0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[[bracket comment]]",
        "Line" : 1,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMP0053-At-NEW.cmake" : {
      "ObjectId" : "40dbe46c59f2f636716a180e279aa26bb037e895",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Not expanded here with the new policy.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMP0053-At-OLD.cmake" : {
      "ObjectId" : "666f107b8d5b991f4ce75ce44806ed26dcad5f9d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Expanded here with the old policy.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMP0053-At-WARN-newlines.cmake" : {
      "ObjectId" : "c493505b1add849bbc5492347d93eaa63e627d1c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Expanded here with the old policy.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMP0053-At-WARN.cmake" : {
      "ObjectId" : "19c7f533946d1edb269b1a728e07108955936594",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Expanded here with the old policy.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMP0053-Dollar-NEW.cmake" : {
      "ObjectId" : "b81fd56eb4d07729a4dbb8c360db54c530e4359c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMP0053-Dollar-OLD.cmake" : {
      "ObjectId" : "647f4648ba21fcfc62a8fdd39e53ab56a3c2e370",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMP0053-NUL.cmake" : {
      "ObjectId" : "9ae090680203e36971b3235ac829e5a1e3539f3e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0,
      "Errorlog" : "line 1:9 token recognition error at: '\"\\0'\nline 1:12 token recognition error at: '\")\\nset(nul \\0'\n"
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMP0053-NameWithCarriageReturn.cmake" : {
      "ObjectId" : "b8a403d181dbf0462bc51a9c16af8b22924d7764",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMP0053-NameWithCarriageReturnQuoted.cmake" : {
      "ObjectId" : "bb0d93f09d247c85a7ba3a140a83fd69439d60b7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMP0053-NameWithEscapedSpaces.cmake" : {
      "ObjectId" : "805b2ca6f638c0518517cf8db8583c234a1ac2ff",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMP0053-NameWithEscapedSpacesQuoted.cmake" : {
      "ObjectId" : "58d8e8ff7223e4131a23218ad3d277cc39df5948",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMP0053-NameWithEscapedTabs.cmake" : {
      "ObjectId" : "214ab5de2e04cf919df0ea382c3f257d5276e946",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMP0053-NameWithEscapedTabsQuoted.cmake" : {
      "ObjectId" : "aa5123f56ee10775c1cfcf917f367264baf4cd2e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMP0053-NameWithNewline.cmake" : {
      "ObjectId" : "45b532e10339500437fedb11b127b763937b9ea4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMP0053-NameWithNewlineQuoted.cmake" : {
      "ObjectId" : "6fe568db27c8a2e5ab6e2da78db4ecedcf089379",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMP0053-NameWithSpaces.cmake" : {
      "ObjectId" : "dae7d25489384bb8874c9c7376b46a41cb9493b9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMP0053-NameWithSpacesQuoted.cmake" : {
      "ObjectId" : "e252cff574f57af8ccf307393b67c66d2070cd19",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMP0053-NameWithTabs.cmake" : {
      "ObjectId" : "45e30457fdf1452903471ff33c1854c6a480958f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMP0053-NameWithTabsQuoted.cmake" : {
      "ObjectId" : "498675fe484a68b3ed890949738007b6aebe71ff",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMP0053-ParenInENV.cmake" : {
      "ObjectId" : "b5cdf0fd1d7343725245c4e6642bd266800c8f96",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMP0053-ParenInQuotedENV.cmake" : {
      "ObjectId" : "5559d4b9d8394a6b6637029ed98edc31e2e6d88f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMP0053-WARN.cmake" : {
      "ObjectId" : "6e8b07bbee62c957ee22d393fd05257c66bd0152",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CMakeLists.txt" : {
      "ObjectId" : "4b3de84d9499354e47d5ed61c196a2d65fa9e2c7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CommandComments.cmake" : {
      "ObjectId" : "0fd748452d990784345b5ef619f8946035eb80ce",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#)\n",
        "Line" : 1,
        "CharPositionInLine" : 25
      },
      "1" : {
        "Text" : "# )\n",
        "Line" : 3,
        "CharPositionInLine" : 27
      },
      "2" : {
        "Text" : "# \"Commented\" )\n",
        "Line" : 5,
        "CharPositionInLine" : 29
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CommandEOF.cmake" : {
      "ObjectId" : "36ebb02949eb5f9a54223d85d876d66395c3e06e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CommandError0.cmake" : {
      "ObjectId" : "3222a9765a6339d1cc1c2332f679b8b94591c074",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CommandError1.cmake" : {
      "ObjectId" : "f8661a198a8fef736b6e65394973473a697e6953",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CommandError2.cmake" : {
      "ObjectId" : "a269682a036e6900c7cbb7e15433ca1158451147",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CommandNewlines.cmake" : {
      "ObjectId" : "0587afb31d52bca4d9b07e89be2a82d87ddb8383",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CommandSpaces.cmake" : {
      "ObjectId" : "5bd42945f9b65ee9424c2f559d9c758fed702758",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/CommandTabs.cmake" : {
      "ObjectId" : "93876f862c42b33a78834131cbf3e9854d119a81",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/Escape1.cmake" : {
      "ObjectId" : "3bf801e6429ae752150fa6610dd33194495bcbf3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#comment\n",
        "Line" : 1,
        "CharPositionInLine" : 34
      },
      "1" : {
        "Text" : "#comment\n",
        "Line" : 2,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/Escape2.cmake" : {
      "ObjectId" : "078a822892d11191e5846c42a1613a6897ac1119",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/EscapeCharsAllowed.cmake" : {
      "ObjectId" : "e9c568da058406ea9335f37ef985ae2fbe57d929",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/EscapeCharsDisallowed.cmake" : {
      "ObjectId" : "eef01a082c2774259b9d591e488fba934c1ae870",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the tests in the binary directory.\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/EscapeQuotes.cmake" : {
      "ObjectId" : "46d2b6f47e98badf6dc7b1e6fa7a84ec9dc6f7be",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/EscapedAt.cmake" : {
      "ObjectId" : "1ced62085be5053b3a31ba2ca1caa6daefdf09f4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/ExpandInAt.cmake" : {
      "ObjectId" : "98f0277daf455c8471bfbe27d0769898e2e54683",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/ForEachBracket1.cmake" : {
      "ObjectId" : "a55e21f07c7376c57ddf346a9e6928705a56ac8c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/FunctionBracket1.cmake" : {
      "ObjectId" : "8ed4f6506b532ddb51344470d874fa75b975d21f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/FunctionUnmatched.cmake" : {
      "ObjectId" : "515b6bf632b3e9e48e5da8cd7e90c59baea8e572",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#endfunction() # missing\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/FunctionUnmatchedForeach.cmake" : {
      "ObjectId" : "ee9c184593407a62265c673ac6b15b966fcc2f8f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#endforeach() # missing\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/MacroBracket1.cmake" : {
      "ObjectId" : "ef6de20abba086edd225c9dadba4b3f3d71c2b5d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/MacroUnmatched.cmake" : {
      "ObjectId" : "302d96ec3b413040d80a70d62d785e3087a80d9f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#endmacro() # missing\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/MacroUnmatchedForeach.cmake" : {
      "ObjectId" : "be443dd9b522482f58d6b0e1f7119a0e4edca9a3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#endforeach() # missing\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/NameWithCarriageReturn.cmake" : {
      "ObjectId" : "614f554bf8118b9ad10f6a5df79dc7740eb9c45a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/NameWithCarriageReturnQuoted.cmake" : {
      "ObjectId" : "bac69e4ee49337c6fa14d7db4da7180a29e34a53",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/NameWithEscapedSpaces.cmake" : {
      "ObjectId" : "6cb84014d6a8a58b8993955cdb197ae57028d5b1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/NameWithEscapedSpacesQuoted.cmake" : {
      "ObjectId" : "2bd4bfd7ac0bf1d1dd10eb8aea4a464e58f99167",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/NameWithEscapedTabs.cmake" : {
      "ObjectId" : "c6faa7ab46e43bc7639d2a80675a81dababe5fb2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/NameWithEscapedTabsQuoted.cmake" : {
      "ObjectId" : "d9be7634a5359333e47d4c88757acc244d8a3681",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/NameWithNewline.cmake" : {
      "ObjectId" : "583bcb05fa383e8397147b4e5bf3e1297c91758b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/NameWithNewlineQuoted.cmake" : {
      "ObjectId" : "da6d2cf8d9773920021c2cb2ce30e75900107534",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/NameWithSpaces.cmake" : {
      "ObjectId" : "01febe9ee0e7be2feb3d3e629a14c5b123d680b6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/NameWithSpacesQuoted.cmake" : {
      "ObjectId" : "3fba53f54e119b0b39f330afde587be9e04f9f5f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/NameWithTabs.cmake" : {
      "ObjectId" : "c3b1bea5a45e214661ad6f20a8c95b58761c7410",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/NameWithTabsQuoted.cmake" : {
      "ObjectId" : "8ddb85dcd51f7611f6cd49dbebd750fcf933b57a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/NullAfterBackslash.cmake" : {
      "ObjectId" : "ed96904dca0a91cc79a7d2a40f4ef62a8fc56a6f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/NullTerminatedArgument.cmake" : {
      "ObjectId" : "c82aceb539706c3bd6c8c2fb9642f4dd9a0e09dc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/OneLetter.cmake" : {
      "ObjectId" : "3c341fab02c7a44e03e35ad6c6a61d47df424363",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/ParenInENV.cmake" : {
      "ObjectId" : "148f7266d994bda704432efbccac36c4113ed72a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/ParenInQuotedENV.cmake" : {
      "ObjectId" : "6333717406013bd1bbaefa2f8dba9b7640171a43",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/ParenInVarName0.cmake" : {
      "ObjectId" : "f863d20c621523d843d5d915a03ac77e250bcbcb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/ParenInVarName1.cmake" : {
      "ObjectId" : "9fdc87bbfcbc27951026a226a126b69d6c48d9af",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/ParenNoSpace0.cmake" : {
      "ObjectId" : "175fe4a80cb492109c2f1ec9809a5c593740e948",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/ParenNoSpace1.cmake" : {
      "ObjectId" : "550339a2f5f442358d7a623028e3a9e167956781",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/ParenNoSpace2.cmake" : {
      "ObjectId" : "c46a887473b82ffcb49c2f8dd896757e2a8cf399",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/QueryCache.cmake" : {
      "ObjectId" : "20c648e6032a982006177dc5601b216a1eedf848",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/RunCMakeTest.cmake" : {
      "ObjectId" : "8d74dc1633f64b98deba6571ca627f82e19fe4ba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Variable expansion tests\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Variable name tests\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Variable special types\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Function and macro tests.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/String0.cmake" : {
      "ObjectId" : "95281d73f38561d5b2d7a3ef7a2de31c6c572673",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/String1.cmake" : {
      "ObjectId" : "a94c9ffdb4d9e5c52e3602f9587a219971e00b8d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/StringBackslash.cmake" : {
      "ObjectId" : "066be965d439fcca5cf71c024f3e8aa56c0ce7da",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/StringCRLF.cmake" : {
      "ObjectId" : "14aad31a233c80ff3c9f681f20d0516c4ac52c47",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/StringContinuation1.cmake" : {
      "ObjectId" : "ae86bb22cb68b6312acfa9821fadd5eebb1848f8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/StringContinuation2.cmake" : {
      "ObjectId" : "490a40890017aa0e883b6ef8165c270bdc156355",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/StringNoSpace.cmake" : {
      "ObjectId" : "76f22db9aed8d14d465e64ca5ae39d3fc295bb4d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Quoted arguments may be immediately followed by another argument.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/Unquoted0.cmake" : {
      "ObjectId" : "c5314c9f0b3e9c011ec8eea3e93905a06d7cf645",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/Unquoted1.cmake" : {
      "ObjectId" : "515161f2b6e51b7d2d9a3aff8ecfdfffc44668ea",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/Unquoted2.cmake" : {
      "ObjectId" : "d94057d90381f6c7aa43f1f1ec870c173e1fbf1a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/UnterminatedBrace0.cmake" : {
      "ObjectId" : "0da12902a9606648845266a4fcaa98afcb912766",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/UnterminatedBrace1.cmake" : {
      "ObjectId" : "93fba3413e8acc8a98fe02d6bcde286a51ec53af",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/UnterminatedBrace2.cmake" : {
      "ObjectId" : "a650e5b728a4cade7177351dbc173f1130f11672",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/UnterminatedBracket0.cmake" : {
      "ObjectId" : "98cd906e0eebe51a096d260cf8b40745a0588478",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/UnterminatedBracket1.cmake" : {
      "ObjectId" : "706f7a32124f0225eeec0fa88e2fe4273db90e3a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/UnterminatedBracketComment.cmake" : {
      "ObjectId" : "ad71f3c5131f07905938fe53e4e3fdb1c28ef86c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0,
      "Errorlog" : "line 1:0 token recognition error at: '#[=[\\n#]]\\n'\n"
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/UnterminatedCall1.cmake" : {
      "ObjectId" : "1166109c9f80fcdfb93e95d1a287d9c6286f499c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/UnterminatedCall2.cmake" : {
      "ObjectId" : "26e9e62230fc43a6883b1ade841c188acff87a61",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/Syntax/UnterminatedString.cmake" : {
      "ObjectId" : "721ae7510aa8d87dfdfe3761dc31c74ac0904e96",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0,
      "Errorlog" : "line 1:8 token recognition error at: '\")\\n\u0000'\n"
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetObjects/CMakeLists.txt" : {
      "ObjectId" : "be9d4038db0ba39e5207fb871982b98dbe96ab10",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetObjects/NoTarget.cmake" : {
      "ObjectId" : "268577d50c9246a4eb89dc6ad53baaa07fa92f41",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetObjects/NotObjlibTarget.cmake" : {
      "ObjectId" : "3bb3e374d2de9f25097378a4ae178a32d6d47180",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetObjects/RunCMakeTest.cmake" : {
      "ObjectId" : "30b9fee53375aed86ca666bfb0f4f3b5b60f3f7d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPolicies/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPolicies/PolicyList.cmake" : {
      "ObjectId" : "c290b65a611d9a1b91887fde8421fb74a9e93f53",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPolicies/RunCMakeTest.cmake" : {
      "ObjectId" : "7a9463050c3ff4156d40352a873a04927b00ed35",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadInvalidName.cmake" : {
      "ObjectId" : "5f083e2a6baf89feac4d38641884fe7083d4f994",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadInvalidName1.cmake" : {
      "ObjectId" : "d5f661d600b4cc49695d967ef5472d9637cbfd94",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadInvalidName1/CMakeLists.txt" : {
      "ObjectId" : "13e1de7d6dd144c3d7d55d98f770a417377a3e70",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadInvalidName2.cmake" : {
      "ObjectId" : "6e4c1d0d397a57f84ed89c18ac5359ed56aa7882",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadInvalidName2/CMakeLists.txt" : {
      "ObjectId" : "4b784729e0210a6c509b5e1d87786f3d954967b8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadInvalidName3.cmake" : {
      "ObjectId" : "3f75aa3821e295d08e88e644643177bf422c2b44",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadInvalidName3/CMakeLists.txt" : {
      "ObjectId" : "516a049a8b6e059e085ef59563a73a12812483e3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadInvalidName4.cmake" : {
      "ObjectId" : "b616c310630eb5bf15f0fdc59af22cc66bf8dca5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadInvalidName4/CMakeLists.txt" : {
      "ObjectId" : "02f2a1a8af52ad8078491d1a3d70c255762d924d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadInvalidName5.cmake" : {
      "ObjectId" : "11cb6fa5205a11c4fdce712e2b8cc0b8cc4fbabb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadInvalidName5/CMakeLists.txt" : {
      "ObjectId" : "a653583b53ad925346714357f3992414b92997f3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadInvalidName6.cmake" : {
      "ObjectId" : "bf868a5012d3bc82fbd9bb10e0ca54341e2b0bca",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadInvalidName6/CMakeLists.txt" : {
      "ObjectId" : "614458ef208cc56eff093ddeafaa27e254ff4d3d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadInvalidName7.cmake" : {
      "ObjectId" : "36d1a79033e5fb3080469b82071f4ebe09e194b4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadInvalidName7/CMakeLists.txt" : {
      "ObjectId" : "8a9fe80182cf4b0584ad3e2278673ae3d9ebd1a6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadInvalidName8.cmake" : {
      "ObjectId" : "f059288c6d1115bc8547fb8b3a7487c9d88ef9cc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadInvalidName8/CMakeLists.txt" : {
      "ObjectId" : "b228159f063cd8423eb57c3ffdc1dbd474a74a37",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadNonTarget.cmake" : {
      "ObjectId" : "97d81e9f17557e7dfefceb600125ac0273e36674",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadSelfReference.cmake" : {
      "ObjectId" : "5a99f7afa8964f7f6e177ce1675eb8167265ea69",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadSelfReference1.cmake" : {
      "ObjectId" : "a85731ecfca1ec1922d641e8a0dd250f7d615c29",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadSelfReference1/CMakeLists.txt" : {
      "ObjectId" : "30c27f51b4b4a549fb93eae4f64462ef68eaf6ff",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadSelfReference2.cmake" : {
      "ObjectId" : "f1459b8cba584b4ced5c8ed8ee692803c06f8f24",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadSelfReference2/CMakeLists.txt" : {
      "ObjectId" : "c2322f43b8cd92a977ee9693e3927712cb55a5ba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadSelfReference3.cmake" : {
      "ObjectId" : "433b730115c29750857edb3d3d1287da8847c656",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadSelfReference3/CMakeLists.txt" : {
      "ObjectId" : "3e6c30a740a7315f474a591d49df44f4a6eb15db",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadSelfReference4.cmake" : {
      "ObjectId" : "4b6445916b7ebe374889bd80375367eec5fd9864",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadSelfReference4/CMakeLists.txt" : {
      "ObjectId" : "f79727a9c68041cfd782c000702edc3139d01323",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadSelfReference5.cmake" : {
      "ObjectId" : "74fff674d6f934ef1a0d0aa569a2bf5cc785382c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadSelfReference5/CMakeLists.txt" : {
      "ObjectId" : "c0badbfed32c617dcd2f872f22b4c05ed127c4ea",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadSelfReference6.cmake" : {
      "ObjectId" : "d6650d3a5ffc6fab304388afa06a8ba90d5923dc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/BadSelfReference6/CMakeLists.txt" : {
      "ObjectId" : "fcb6b3c3e7ac12d6e654e5b73cda90b6a218d8c0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/CMakeLists.txt" : {
      "ObjectId" : "90afc127eda2f9441610f0198f43e3dbac35e4f3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MSVC creates extra targets which pollute the stderr unless we set this.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/LinkImplementationCycle1.cmake" : {
      "ObjectId" : "4b60214f424176d8825198861c20baec9a0620ba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/LinkImplementationCycle2.cmake" : {
      "ObjectId" : "557eac1232918b3d40d908a37c949abff77c3f0c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/LinkImplementationCycle3.cmake" : {
      "ObjectId" : "0f921d457a33c896d5652fe9ff9a490da630e494",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is OK, because evaluating the INCLUDE_DIRECTORIES is not affected by\n\n# the content of the INTERFACE_LINK_LIBRARIES.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/LinkImplementationCycle4.cmake" : {
      "ObjectId" : "ab6d0b2652ebd134cd671a94282d260634193d89",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The INTERFACE_INCLUDE_DIRECTORIES do not depend on the link interface.\n\n# On its own, this is fine. It is only when used by empty3 that an error\n\n# is appropriately issued.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/LinkImplementationCycle5.cmake" : {
      "ObjectId" : "dc180e391679f700398f4d02c1beb03e1771496a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/LinkImplementationCycle6.cmake" : {
      "ObjectId" : "91252d0740bb8ecb63328ac1d01756e7c08d28bc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The INTERFACE_INCLUDE_DIRECTORIES do not depend on the link interface.\n\n# On its own, this is fine. It is only when used by empty3 that an error\n\n# is appropriately issued.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetPropertyGeneratorExpressions/RunCMakeTest.cmake" : {
      "ObjectId" : "4294e9fd790421fd73605e7e629dc83809ef0180",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetSources/CMP0026-LOCATION.cmake" : {
      "ObjectId" : "464df36821f40ca06a6c465c748676793c73f92b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetSources/CMP0076-OLD.cmake" : {
      "ObjectId" : "4d8c268efa15777f6b5fe88ba5d58abdb64382a9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetSources/CMP0076-WARN.cmake" : {
      "ObjectId" : "2e073311203a09653e1cce6e8a9df1bba98137fc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetSources/CMP0076-WARN/CMakeLists.txt" : {
      "ObjectId" : "f9c7d6d5e53975ac6b8d05889e52ef2b608e2aaa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetSources/CMakeLists.txt" : {
      "ObjectId" : "f452db177035b737ea028d8b2d42e3f28fefca76",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetSources/ConfigNotAllowed.cmake" : {
      "ObjectId" : "02af379722196be541cb41593677e07688a2ee3d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetSources/ExportBuild.cmake" : {
      "ObjectId" : "b626aa6cd15b63e0161007fa01b3e6339527ef25",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetSources/OriginDebug.cmake" : {
      "ObjectId" : "d40a1d82a97cee18d3777f3aec4f1b29c7bd2faa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetSources/OriginDebugIDE.cmake" : {
      "ObjectId" : "a3cc3a8ed06168431e6cd6bae1d2ad6c447f697f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Separate test for the IDEs, because they show the CMakeLists.txt file\n\n# as a source file.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetSources/RelativePathInInterface.cmake" : {
      "ObjectId" : "0d3e9a4564acb9bfac7975dd5accd28239dd6810",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetSources/RelativePathInSubdirGenEx.cmake" : {
      "ObjectId" : "1cdc2a78521e7c98fb7e44cbf862a3216663fa28",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetSources/RelativePathInSubdirGenEx/CMakeLists.txt" : {
      "ObjectId" : "3bcf454da5b22a419d8b2c82b888c03a36351686",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetSources/RelativePathInSubdirInclude.cmake" : {
      "ObjectId" : "4acbecacc1a107d9496c306ff02de6b9a4b4163e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetSources/RelativePathInSubdirInclude/CMakeLists.txt" : {
      "ObjectId" : "3dcb13545a9744bbaab47b6a040d9127edd6d2cc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetSources/RelativePathInSubdirInterface.cmake" : {
      "ObjectId" : "3652b4f64bd65e43c788c63795b1dc266c7b6736",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetSources/RelativePathInSubdirInterface/CMakeLists.txt" : {
      "ObjectId" : "02e69669e5869d620fdcbf06e06c7458bacd9f74",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetSources/RelativePathInSubdirPrivate.cmake" : {
      "ObjectId" : "d0d3dc4419a5bcdd33734cd0a0385baa80ac8bb6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetSources/RelativePathInSubdirPrivate/CMakeLists.txt" : {
      "ObjectId" : "56ee853e1c2ec26eea07b1a9c9f2ead046b904a9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/TargetSources/RunCMakeTest.cmake" : {
      "ObjectId" : "bee8c4e38f12ebdc7350c2757d455f2146718636",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ToolchainFile/CMakeLists.txt" : {
      "ObjectId" : "93ee9dfd5f01100535f91a6cad70bc8b2cf1d1b7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ToolchainFile/CallEnableLanguage-toolchain.cmake" : {
      "ObjectId" : "814510129234d8b63c9d3c9d65a0b4ed499b76f5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ToolchainFile/CallEnableLanguage.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ToolchainFile/CallProject-toolchain.cmake" : {
      "ObjectId" : "b113c132a8058f3f38986382c896082f2ed9edd4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ToolchainFile/CallProject.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ToolchainFile/FlagsInit-toolchain.cmake" : {
      "ObjectId" : "4c794b6a4aafd346f71c05f2941413efb2152144",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ToolchainFile/FlagsInit.cmake" : {
      "ObjectId" : "98873bf8b6e472c8783e68a1bd7be88be3a10547",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ToolchainFile/LinkFlagsInit-toolchain.cmake" : {
      "ObjectId" : "ca908ae846eaba91d4fe9f6b435f17466a70149e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ToolchainFile/LinkFlagsInit.cmake" : {
      "ObjectId" : "069d7410e4c0ddd91a1da425542aa37d6b9d9df7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# skip compiler test so we can check cached values\n",
        "Line" : 1,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ToolchainFile/RunCMakeTest.cmake" : {
      "ObjectId" : "8a202008f23939ef24e19f1ec7db4da3f78b74ae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/UseSWIG/CMP0078-NEW.cmake" : {
      "ObjectId" : "ce77218c8fdf4243045aa85439260580a22413cf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/UseSWIG/CMP0078-OLD.cmake" : {
      "ObjectId" : "2c4d142d5cf826e02de1a5fdb1aebc4b0b10b6f0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/UseSWIG/CMP0078-WARN.cmake" : {
      "ObjectId" : "86b21a58594941e9a96eb2a67df2694f81a6c329",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/UseSWIG/CMP0078-common.cmake" : {
      "ObjectId" : "6cf39dcf86641a5e472f4c1071d506c135396544",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/UseSWIG/CMakeLists.txt" : {
      "ObjectId" : "d1b0d2c3e8047e4d23fe1743d73fc931b8cc455d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/UseSWIG/RunCMakeTest.cmake" : {
      "ObjectId" : "b96622ae32b645d564e7a59ce28730fefae7a791",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/CMakeLists.txt" : {
      "ObjectId" : "91baae7eb578764650f041a4d682315d216d9c88",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/ExplicitCMakeLists-check.cmake" : {
      "ObjectId" : "b671e35807f613487202e0e41910b42320e52d77",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/ExplicitCMakeLists.cmake" : {
      "ObjectId" : "c9e44561bcb9c8080a086f9a2ccfd74dfe3e1bac",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/RunCMakeTest.cmake" : {
      "ObjectId" : "4bfb2f2e90cfba375045c9f91a880a71282c7637",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsCSharpCustomTags-check.cmake" : {
      "ObjectId" : "9eb4619f428d3b9be4fa3f03f8de82ab331c360c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test VS_CSHARP_* for the following extensions\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsCSharpCustomTags.cmake" : {
      "ObjectId" : "96be54b06b58c1715e5c3a16ddad6dbb0c7e8372",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test VS_CSHARP_* for the following extensions\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsCSharpReferenceProps-check.cmake" : {
      "ObjectId" : "8b9bb6731499f4a51f2ea7d3935d87c89a9a6b92",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsCSharpReferenceProps.cmake" : {
      "ObjectId" : "2af17569e129836d1003126160a0e2ee3a7e3383",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsCSharpWithoutSources-check.cmake" : {
      "ObjectId" : "90ae7c3c07353416d5313265e5c5e27ccbd509bf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsCSharpWithoutSources.cmake" : {
      "ObjectId" : "5fdeaa0a2eb31b6035f4fe45a5f8993221b3138f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsConfigurationType-check.cmake" : {
      "ObjectId" : "4690970a3f9a41a28dcdf91c7e4c0fcca761db56",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsConfigurationType.cmake" : {
      "ObjectId" : "a73dfe8c04e5b83eab421afb4263c4b6de5252fb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsCustomProps-check.cmake" : {
      "ObjectId" : "22a3df0f0cb7f8ca41a6ab3a1de04061e4b3ab12",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsCustomProps.cmake" : {
      "ObjectId" : "fbbcfcf372ea7c6748e87ca85206ebeda268f030",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsDebuggerCommand-check.cmake" : {
      "ObjectId" : "440f9f263c97b6e08f69c5900ffcc643fb925231",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsDebuggerCommand.cmake" : {
      "ObjectId" : "5dcb6d13166a538dd9f62edc98385060017c0380",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsDebuggerCommandArguments-check.cmake" : {
      "ObjectId" : "b2e0a437259ea59f5aaec9e07d020656650b97fb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsDebuggerCommandArguments.cmake" : {
      "ObjectId" : "aa87cdc4d8f08491243532ff42cbd6bee3a2b00e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsDebuggerEnvironment-check.cmake" : {
      "ObjectId" : "2427ad454d8d6295c0970cd6c1df8ae7dd3d577e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsDebuggerEnvironment.cmake" : {
      "ObjectId" : "d5bec4c56a505985b2a6720ef8c2e75933bf1e4e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsDebuggerWorkingDir-check.cmake" : {
      "ObjectId" : "6a142f81eaf2ce9f1d6f64e3e63cbe6667e8bcf2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsDebuggerWorkingDir.cmake" : {
      "ObjectId" : "36daed00e5b16a00213a2b1ebac386b098b0df06",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsGlobals-check.cmake" : {
      "ObjectId" : "0e7fd45c10731ad22b09e766a846ec88f876d829",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsGlobals.cmake" : {
      "ObjectId" : "a3ed5afa9bfb815c156d9f6e8cb2affc2bde4e53",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsSdkDirectories-check.cmake" : {
      "ObjectId" : "c21afb64260b0a0363eb809ac37eec5b9ba1d9be",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsSdkDirectories.cmake" : {
      "ObjectId" : "c8f2a5a27d042a857ea726131aa18ad1961ce021",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsTargetsFileReferences-check.cmake" : {
      "ObjectId" : "3d01c2c30c427c7aa86f6e4f876b2273ed0d3170",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VS10Project/VsTargetsFileReferences.cmake" : {
      "ObjectId" : "5ca4f1f85a7545b9e235c96fa739bc60e9b66b29",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/AddPackageToDefault-check.cmake" : {
      "ObjectId" : "7265900d9b86131b54feec7efea39a6153ca092c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/AddPackageToDefault.cmake" : {
      "ObjectId" : "5f69ec5de725b6f6fe07606cbc40df97c1c24ded",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/MorePost-check.cmake" : {
      "ObjectId" : "d239b28b638389e09a41c049294915856afc5283",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/MorePost.cmake" : {
      "ObjectId" : "2eb3f60af55183c3a7b9bde1965091f9347846c0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/MorePre-check.cmake" : {
      "ObjectId" : "89b3c7eb8006a81e2b6091c167b40bf1cb9628f4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/MorePre.cmake" : {
      "ObjectId" : "07f4eb8fcddd9b215ef41790b6740dc85b80d815",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/OnePost-check.cmake" : {
      "ObjectId" : "f7d3712607b683e58533237cf47786909f25172d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/OnePost.cmake" : {
      "ObjectId" : "2295cfb0172577c4ce9da21e6c8664843f7130be",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/OnePre-check.cmake" : {
      "ObjectId" : "c5db139aa5ab3c4ef6193eecb1490a44baa84c60",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/OnePre.cmake" : {
      "ObjectId" : "1499b4780f4e65477ff5594cbf1973ffaef44522",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/Override1-check.cmake" : {
      "ObjectId" : "5905204bdef9bdae2bcd26bda1209b5e351c2cb5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/Override1.cmake" : {
      "ObjectId" : "a726c9fd2cd1107530eb09e38c35d5c9b745350b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/Override2-check.cmake" : {
      "ObjectId" : "c981ec0ef3fea113e5d51b75f5ea3ad3bd19753b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/Override2.cmake" : {
      "ObjectId" : "0ce43cc0e337b2de4f48b52967e1117697d6d470",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/Override3-check.cmake" : {
      "ObjectId" : "baee9edc08de35245c0430db5e3243c585b9c163",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/Override3.cmake" : {
      "ObjectId" : "a59ce1904ca399a930148f1443227297b813710f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/PrePost-check.cmake" : {
      "ObjectId" : "957c964cf4c09aa62084f42d2e847134d1c5166d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/PrePost.cmake" : {
      "ObjectId" : "976c341ed9ef41b1ef2c92df1b09325dafe71c51",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/RunCMakeTest.cmake" : {
      "ObjectId" : "c25833d95b2dc2b2f6eae1c1baa3de82e3dfbfa3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/StartupProject-check.cmake" : {
      "ObjectId" : "f36aab2758fe2f397acab31784635f5e8cb352a2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/StartupProject.cmake" : {
      "ObjectId" : "7192f3deacd9a19b60e4acfe1d69168cc7b8c25b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/StartupProjectMissing-check.cmake" : {
      "ObjectId" : "b1017dd07c19f5d940aca47da796697000071a59",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/StartupProjectMissing.cmake" : {
      "ObjectId" : "907a877f872ee547c7cf28a07b90c9048dc6e152",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/StartupProjectUseFolders-check.cmake" : {
      "ObjectId" : "c0a545a2748edd1984e5991fdfa980d233567b23",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/StartupProjectUseFolders.cmake" : {
      "ObjectId" : "8e422a49588e2f0994b01048455ad842c4f3577c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VSSolution/solution_parsing.cmake" : {
      "ObjectId" : "4b2755005d89058474e263587d6c07b7258da5b1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VisibilityPreset/CMP0063-Common.cmake" : {
      "ObjectId" : "afea20b850a3ca4778ce2a0ab2d2c971e2d38484",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VisibilityPreset/CMP0063-NEW.cmake" : {
      "ObjectId" : "9d1ee407405e67c38ceec113b960b37a1442d363",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ensure CMake would warn even if toolchain does not really have these flags.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VisibilityPreset/CMP0063-OLD.cmake" : {
      "ObjectId" : "8378209c976f4947d5bc4755613953a1c8d262fa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ensure CMake would warn even if toolchain does not really have these flags.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VisibilityPreset/CMP0063-WARN-exe.cmake" : {
      "ObjectId" : "cef1d7521961389f0e62f6f02641038f15bfbe9e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ensure CMake warns even if toolchain does not really have these flags.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VisibilityPreset/CMP0063-WARN-no.cmake" : {
      "ObjectId" : "2a9c9e543d3100c5e0f16831d2559eaad0b50885",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ensure CMake does not warn even if toolchain really does have these flags.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VisibilityPreset/CMP0063-WARN-obj.cmake" : {
      "ObjectId" : "81d1c339bd54fac2905b2622173135034c5cd855",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ensure CMake warns even if toolchain does not really have these flags.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VisibilityPreset/CMP0063-WARN-sta.cmake" : {
      "ObjectId" : "132e076e27cc2cc32a51d6fb02e0c0b8a11785be",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ensure CMake warns even if toolchain does not really have these flags.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VisibilityPreset/CMakeLists.txt" : {
      "ObjectId" : "18dfd2686f63fed35d3e7940d69512d8fd0ed2e3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VisibilityPreset/PropertyTypo.cmake" : {
      "ObjectId" : "c6e9dd9436755b296fd9752106133bb4811b95c9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ensure CMake warns even if toolchain does not really have these flags.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/VisibilityPreset/RunCMakeTest.cmake" : {
      "ObjectId" : "7a000ee9acd9637d4a1aefade2ecf04dfc00eeec",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/WorkingDirectory/RunCMakeTest.cmake" : {
      "ObjectId" : "a7685aeed0ddacd95fd74bff3cf313b6bebd3d8c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Deliberately a file\n",
        "Line" : 7,
        "CharPositionInLine" : 76
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/WorkingDirectory/buildAndTestNoBuildDir-check.cmake" : {
      "ObjectId" : "fcfe4619b6b414f71e269f17c7c73fe2fc6d077a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/WorkingDirectory/buildAndTestNoBuildDir.cmake" : {
      "ObjectId" : "ad795c472c3066e1dc088a5d1a83c8a331b1a28c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We want a single test that always passes. We should never actually get to\n\n# configure with this file, so we use a successful configure-build-test\n\n# sequence to denote failure of the test case.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/WorkingDirectory/dirNotExist.cmake" : {
      "ObjectId" : "642386e852395536aa8b668071f2265b0e8254fa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/WriteCompilerDetectionHeader/CMakeLists.txt" : {
      "ObjectId" : "872338d3c6fb582cef9be58c82f315c89698d6b4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/WriteCompilerDetectionHeader/EmptyPrefix.cmake" : {
      "ObjectId" : "eda6b185aa33561e4886a30ad55a7254b2d5e21f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/WriteCompilerDetectionHeader/ExtraArgs.cmake" : {
      "ObjectId" : "c2a21af990cc66965c3672b0a4c57ae6e95154de",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/WriteCompilerDetectionHeader/FileTypo.cmake" : {
      "ObjectId" : "c90eda21e8cdd09d154aeb60253aa31d5a95f9a4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/WriteCompilerDetectionHeader/InvalidArgs.cmake" : {
      "ObjectId" : "cfebae13ed1cb74922fcdd6f12d0d94278b89a2d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/WriteCompilerDetectionHeader/InvalidCXXFeature.cmake" : {
      "ObjectId" : "da870fa82d528b8fedff5b9e7fea9d0aeaa60a86",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/WriteCompilerDetectionHeader/InvalidCompiler.cmake" : {
      "ObjectId" : "ecd09571b55563bed0d9624b8e6539b3b9aa3d41",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/WriteCompilerDetectionHeader/InvalidFeature.cmake" : {
      "ObjectId" : "cd839686a97cd346be600912c1dd3551ccf9ef20",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/WriteCompilerDetectionHeader/InvalidPrefix.cmake" : {
      "ObjectId" : "6599f35a9edad398c5335b9ecc4741367077729b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/WriteCompilerDetectionHeader/MultiBadOutDir.cmake" : {
      "ObjectId" : "b545beef6e5b0f4f27118ba6cfac1a0d1d10d5d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/WriteCompilerDetectionHeader/MultiNoOutFileVar.cmake" : {
      "ObjectId" : "e42b0ed683af55593622db56ff87774b7df3d22d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/WriteCompilerDetectionHeader/MultiNoOutdir.cmake" : {
      "ObjectId" : "e8c2ae14ff2ec067af61c4a4342ae7d9accd32a2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/WriteCompilerDetectionHeader/NoCompiler.cmake" : {
      "ObjectId" : "2dc14e9a698c1ea37481fb0fcee614cc61cc6e2f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# COMPILERS\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/WriteCompilerDetectionHeader/NoFeature.cmake" : {
      "ObjectId" : "1fbc1292a9f0a952071097369a8988f148637091",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FEATURES\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/WriteCompilerDetectionHeader/OldVersion.cmake" : {
      "ObjectId" : "a6e30224cc6178ff87c17e7764346cff5ab952c1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/WriteCompilerDetectionHeader/PrefixTypo.cmake" : {
      "ObjectId" : "8b6774c44afaf6629b3048fb7cae94743b2f6b9a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/WriteCompilerDetectionHeader/RunCMakeTest.cmake" : {
      "ObjectId" : "a834e6d45f2c32657075bbdf24abe917c9c421b2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/DeploymentTarget.cmake" : {
      "ObjectId" : "6281352e704d26db0ee14432be493ca6c3176258",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# using Xcode 7.1 SDK versions for deployment targets\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/ExplicitCMakeLists-check.cmake" : {
      "ObjectId" : "3073e0b87ae7c56a13eab8e83574bf897a4b2b8b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/ExplicitCMakeLists.cmake" : {
      "ObjectId" : "678b0ea9d2962430c07ca33ae09857fb025e08bf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/PerConfigPerSourceDefinitions.cmake" : {
      "ObjectId" : "f9df55fe9d034893c240dc3ba3b8ccf9866fe309",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/PerConfigPerSourceFlags.cmake" : {
      "ObjectId" : "99cec5b9940fccb6d16e496dd39f20a4d54371bc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/PerConfigPerSourceIncludeDirs.cmake" : {
      "ObjectId" : "4476c39fc3c7ede052aa0f1107b3eebb62db6fe8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/PerConfigPerSourceOptions.cmake" : {
      "ObjectId" : "f8e80308318dcf152526832271712d4659d59cbb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/RunCMakeTest.cmake" : {
      "ObjectId" : "fb0400560a87be45d3e906a6727974f60765346d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XcodeIOSInstallCombined\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# XcodeIOSInstallCombinedPrune\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# XcodeIOSInstallCombinedSingleArch\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# build ios before macos\n",
        "Line" : 196,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeAttributeGenex-check.cmake" : {
      "ObjectId" : "8a3950671de2fe5a28c17f95023f5b4cb57c46b6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# per target attribute with genex\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# per target attribute with variant\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# global attribute with genex\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# global attribute with variant\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeAttributeGenex.cmake" : {
      "ObjectId" : "d8cb3bd2381e00b2974b128df3801486ef62b7fb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# per target attribute with genex\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# per target attribute with variant\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# global attribute with genex\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# global attribute with variant\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeAttributeGenexError.cmake" : {
      "ObjectId" : "98ad6c5a87ca074f11e490a778af098c497d0cc8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeAttributeLocation-check.cmake" : {
      "ObjectId" : "2f5513173edefb320d8751fdcd100987ccf42f23",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeAttributeLocation.cmake" : {
      "ObjectId" : "5ab5528a808e69f7ba34e8dad41b4d31e5616b19",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeBundles-install-check.cmake" : {
      "ObjectId" : "758d7305331a3901d24d420744972108e7543923",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeBundles.cmake" : {
      "ObjectId" : "5d19ee8187d8d93015a41b682880c6d18311ddf8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# check if Xcode and CMake have the same understanding of Bundle layout\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# due to lack of toolchain file it might point to running macOS version\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# App Bundle\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# with custom extension\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Shared Framework (not supported for iOS on Xcode < 6)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# with custom extension\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Static Framework (not supported for Xcode < 6)\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# with custom extension\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Bundle\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# with custom extension\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeDependOnZeroCheck.cmake" : {
      "ObjectId" : "d759a65455fa980a67fce863726d66468c323389",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeFileType-check.cmake" : {
      "ObjectId" : "1847bc9868797949cb9b2f3c0897f3f6d4574de6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeFileType.cmake" : {
      "ObjectId" : "7faa781518d2b855a9d6471f422dcc0c779c75f5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeGenerateTopLevelProjectOnly-check.cmake" : {
      "ObjectId" : "64654af5e9f4c03139e2d485fba553abd289e0d7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeGenerateTopLevelProjectOnly.cmake" : {
      "ObjectId" : "7e53c494e98ee7e6764e595c6c9e1985b6d8b1d2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeIOSInstallCombined-install-check.cmake" : {
      "ObjectId" : "a1c06718f287d26c5dd1c9466ebdc4ed4aea65b2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeIOSInstallCombined.cmake" : {
      "ObjectId" : "d7f39202119e8459ae9cb5508a2e9795d9e0f6a8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# due to lack of toolchain file it might point to running macOS version\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeIOSInstallCombinedPrune-install-check.cmake" : {
      "ObjectId" : "83da17da7ed78d52b871a99e1658c46b1d9498f3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeIOSInstallCombinedPrune.cmake" : {
      "ObjectId" : "28ab883d7e63a19f95c55483bd7ed6d42c24762e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# due to lack of toolchain file it might point to running macOS version\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeIOSInstallCombinedSingleArch-install-check.cmake" : {
      "ObjectId" : "3c11ae0eeba761dff99c96e724ebad3a5458d315",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeIOSInstallCombinedSingleArch.cmake" : {
      "ObjectId" : "5e7961a77966c333afec3a3c180abe13d297ec24",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# due to lack of toolchain file it might point to running macOS version\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeInstallIOS.cmake" : {
      "ObjectId" : "a7974106958037393d7a9f1f22bc23d8026332fb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeMultiplatform.cmake" : {
      "ObjectId" : "a1064f45dcfe2314ebdd9ae1b936fa0c47624432",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeObjectNeedsEscape-check.cmake" : {
      "ObjectId" : "c34e3feb6b75ca4b7a7c35340f9f5de75c385bb4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeObjectNeedsEscape.cmake" : {
      "ObjectId" : "7606a1906e89813ab45c98501ae6f64c5a56c696",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeObjectNeedsQuote-check.cmake" : {
      "ObjectId" : "be7d96ab6510b786b73c0db0f2a26448638aaa3f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeObjectNeedsQuote.cmake" : {
      "ObjectId" : "ecc56abb7d158961f69206b7f0eabca591b5363e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeOptimizationFlags-check.cmake" : {
      "ObjectId" : "f5595b315ffc18ab06a7fec041fc0c5759d7867d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeOptimizationFlags.cmake" : {
      "ObjectId" : "e14bf808d90df50c510d36ed38645a83a2d0405d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodePlatformFrameworks.cmake" : {
      "ObjectId" : "74dc9783ecc6a02810262ec56f7f0eb8cdd193f9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodePreserveNonOptimizationFlags-check.cmake" : {
      "ObjectId" : "2f6c03d2070cf4863a5d6d0c730be8efbc5eb557",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodePreserveNonOptimizationFlags.cmake" : {
      "ObjectId" : "16f038184077591ea17e50c4e9d8d7fdd22529c4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodePreserveObjcFlag-check.cmake" : {
      "ObjectId" : "332906f8e69d28cb15802bc42ba2800a7eb1cb4e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodePreserveObjcFlag.cmake" : {
      "ObjectId" : "64db6333452050960f3e4250f64f8c98c17f512f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeSchemaGeneration.cmake" : {
      "ObjectId" : "2fe5a9f839b014e5ce665ed3a4a2da8ec9cc89d2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeSchemaProperty-check.cmake" : {
      "ObjectId" : "f675d819a23b4964708e678def744722166aa3b1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeSchemaProperty.cmake" : {
      "ObjectId" : "2b72a64f17d7fba2a18031dceb9282a86ac3d9de",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/XcodeTbdStub.cmake" : {
      "ObjectId" : "e83d7f3cd82ed8bcabf25f617d71f56e354c6b50",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/osx.cmake" : {
      "ObjectId" : "e021fcd45737a304e2349aa312f16b994eaf7cab",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/subproject/CMakeLists.txt" : {
      "ObjectId" : "20e12b17cc6fe621b17aa0fc0d776637d156e263",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/XcodeProject/zerocheck/CMakeLists.txt" : {
      "ObjectId" : "4adde99d7e6faa25280f48da4327a94434b8ac54",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_command/AppendNoOutput.cmake" : {
      "ObjectId" : "c6c716b0dd669ea9924b0305d734397bb60b6ab1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_command/AppendNotOutput.cmake" : {
      "ObjectId" : "cc16129807a250806543fd352cec37d2511eacbb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_command/AssigningMultipleTargets.cmake" : {
      "ObjectId" : "fe1cceb9a6271b8352c157d7fa9223b5c54fb261",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_command/BadArgument.cmake" : {
      "ObjectId" : "d9e7bd45b95f4dfb3c7ecf459df74d40505db10e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_command/CMakeLists.txt" : {
      "ObjectId" : "ef2163c298341fcdf0c2afd89dd4234a4b8b21d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_command/NoArguments.cmake" : {
      "ObjectId" : "8781a87a8253793df49c3439328715a2ecc819a4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_command/NoOutputOrTarget.cmake" : {
      "ObjectId" : "933ee32b29823df3f7c6a08e0d1ed456da15c3ad",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_command/OutputAndTarget.cmake" : {
      "ObjectId" : "55806f3fcdf1246d3f1dc9b6fd3cc4174227eb48",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_command/RemoveEmptyCommands-check.cmake" : {
      "ObjectId" : "b2970444e99c3f67e5d067759a933fae9ce416b9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# extract build events\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_command/RemoveEmptyCommands.cmake" : {
      "ObjectId" : "eb190cc99b544d97477d4d9ff040a1673e7b63cf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# reduce number of configuration types\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add one command for all and one for debug only\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add command for debug only\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add separate commands for configurations\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_command/RunCMakeTest.cmake" : {
      "ObjectId" : "0387dbb602c4a4c272c7d405494fd6ff6d57aaac",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_command/SourceByproducts.cmake" : {
      "ObjectId" : "824f41da726ff3997fc836e50cb0615aa22fcc8c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_command/SourceUsesTerminal.cmake" : {
      "ObjectId" : "295fab141c65ea0464b43d69d88026b9bc550cdf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_command/TargetImported.cmake" : {
      "ObjectId" : "c0f2d66a078a71f3c334f55fa70f62b693c6c7c8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_command/TargetNotInDir.cmake" : {
      "ObjectId" : "a5510262aae38d366a02fa9152a3d0b2130d1d55",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_command/TargetNotInDir/CMakeLists.txt" : {
      "ObjectId" : "3d51d27b31098f7ccf36a633fded42e0f91efcb2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_command/generate-once.cmake" : {
      "ObjectId" : "2a8e8433ebb3ccea02fed49bf9cc4626b9d162a1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_target/BadTargetName.cmake" : {
      "ObjectId" : "c4381a2399b31586b5c5201826b3438fbd1c5148",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_target/ByproductsNoCommand.cmake" : {
      "ObjectId" : "6c142a270ad8f245c9930cecf45f4050daa028d1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_target/CMakeLists.txt" : {
      "ObjectId" : "ef2163c298341fcdf0c2afd89dd4234a4b8b21d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_target/CommandExpandsEmpty.cmake" : {
      "ObjectId" : "bc899a4d21947dc29957141c6f68fcb60e6ed888",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_target/NoArguments.cmake" : {
      "ObjectId" : "ec6a21200ae343391c32cd4bee969f013f8a818e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_target/RunCMakeTest.cmake" : {
      "ObjectId" : "2caed03289e258cce41980d565793da15932d008",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_target/TargetOrder.cmake" : {
      "ObjectId" : "21669c01121ce4072b49ec7b2cd461bba93c6454",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add a target that requires step1 to run first but enforces\n\n# it only by target-level ordering dependency.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add a target that requires step1 and step2 to work,\n\n# only depends on step1 transitively through step2, but\n\n# also gets a copy of step2's custom command.\n\n# The Ninja generator in particular must be careful with\n\n# this case because it needs to compute the proper set of\n\n# target ordering dependencies for the step2 custom command\n\n# even though it appears in both the step2 and step3\n\n# targets due to dependency propagation.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We want this target to always run first.  Add it last so\n\n# that serial builds require dependencies to order it first.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_custom_target/UsesTerminalNoCommand.cmake" : {
      "ObjectId" : "b0c207b42945ba1818638c80f5b0339636d3d4a2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_dependencies/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_dependencies/NoTarget.cmake" : {
      "ObjectId" : "9037694170539dae33866274ebe5444bce5068ae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_dependencies/ReadOnlyProperty.cmake" : {
      "ObjectId" : "f0e4069eda06e0ff0f6dffbae72f2ac3e9d34449",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_dependencies/RetrieveDependencies.cmake" : {
      "ObjectId" : "45b3974420c71ff79a0e6d4484dd60274218788f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_dependencies/RunCMakeTest.cmake" : {
      "ObjectId" : "507d43fd561ae016e6ffed57c594fccff64947a0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_executable/CMakeLists.txt" : {
      "ObjectId" : "ef2163c298341fcdf0c2afd89dd4234a4b8b21d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_executable/NoSources.cmake" : {
      "ObjectId" : "563564ad67a97f2a48713de0dffcc779c7671564",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_executable/NoSourcesButLinkObjects.cmake" : {
      "ObjectId" : "d0f20934e62c113fcfdf197e3076f9e0e4e666cc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_executable/OnlyObjectSources.cmake" : {
      "ObjectId" : "1c90e9adc8523c19b1479fa1e6c74ab3f50aeea6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_executable/RunCMakeTest.cmake" : {
      "ObjectId" : "88916b71f3528508ef4e577ad8a2a7dadecf5899",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_library/CMP0073.cmake" : {
      "ObjectId" : "b34f5dccd2087950b1d22686a2ffef1fc5bd17c6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_library/CMakeLists.txt" : {
      "ObjectId" : "ef2163c298341fcdf0c2afd89dd4234a4b8b21d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_library/INTERFACEwithNoSources.cmake" : {
      "ObjectId" : "79188f387bec507ac5e39981f3a4b305204ba88b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_library/INTERFACEwithNoSourcesButLinkObjects.cmake" : {
      "ObjectId" : "53a48f0bd7059dd911de495c265e998696cc312d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_library/INTERFACEwithOnlyObjectSources.cmake" : {
      "ObjectId" : "86fab1dee4c900de6f9cd7128fb3654131344496",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_library/MODULEwithNoSources.cmake" : {
      "ObjectId" : "5df5033c64e71d75d54ce42a78099990e1ca83a8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_library/MODULEwithNoSourcesButLinkObjects.cmake" : {
      "ObjectId" : "f9d00dea8be04aa42b1a084933762d62098f5e61",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_library/MODULEwithOnlyObjectSources.cmake" : {
      "ObjectId" : "187481a140c2b120d9e1f2f073d5185f9437c4ea",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_library/OBJECTwithNoSources.cmake" : {
      "ObjectId" : "742e8299ab16b123b36dd73d3b273b4e8d125f86",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_library/OBJECTwithNoSourcesButLinkObjects.cmake" : {
      "ObjectId" : "6b4b55fdaa9414f6c12013811d62f82f90c5b155",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_library/OBJECTwithOnlyObjectSources.cmake" : {
      "ObjectId" : "ff75a8cb453d2e11dd2acde28db5c1b9b474a353",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_library/RunCMakeTest.cmake" : {
      "ObjectId" : "dfadb8fc18b554aef35a48a304a8743bef9a0003",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_library/SHAREDwithNoSources.cmake" : {
      "ObjectId" : "e147b44bc57f99e3125e3af9b2df20a9a473a54e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_library/SHAREDwithNoSourcesButLinkObjects.cmake" : {
      "ObjectId" : "5e3c2709d7b5cf9c8e66f62cf665317ca1ba3174",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_library/SHAREDwithOnlyObjectSources.cmake" : {
      "ObjectId" : "09281b00db14f78626f0eb3834d0cbe524a05d64",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_library/STATICwithNoSources.cmake" : {
      "ObjectId" : "94a2d9ab0babac61420f852876cec691ab913ef5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_library/STATICwithNoSourcesButLinkObjects.cmake" : {
      "ObjectId" : "b6e137f3a168678907ad9911dcedaf2db9bd1945",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_library/STATICwithOnlyObjectSources.cmake" : {
      "ObjectId" : "74a8947f2c74428b021c0d7238232226bb42bc6f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_library/UNKNOWNwithNoSources.cmake" : {
      "ObjectId" : "dc5d7773bf94f201f6e4c4448b9495ec24539191",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_library/UNKNOWNwithNoSourcesButLinkObjects.cmake" : {
      "ObjectId" : "a977d42fc1358679ef3576965c812987327213a3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_library/UNKNOWNwithOnlyObjectSources.cmake" : {
      "ObjectId" : "604e339aa71ba543481881ac1e5d58e14384a57f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_link_options/CMakeLists.txt" : {
      "ObjectId" : "14ef56e8e87dc838b66333eca696822c30298567",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_link_options/LINKER_SHELL_expansion-build-check.cmake" : {
      "ObjectId" : "d0ef8de8522c2eeadf3c9b76d940fe14d385b2a2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_link_options/LINKER_SHELL_expansion.cmake" : {
      "ObjectId" : "7316ef52b9d67c32ee5711d21c8d5dd3aad10456",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_link_options/LINKER_expansion-build-check.cmake" : {
      "ObjectId" : "d0ef8de8522c2eeadf3c9b76d940fe14d385b2a2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_link_options/LINKER_expansion-list.cmake" : {
      "ObjectId" : "34dcc675686265e1edafe987fff4d53855030171",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ensure no temp file will be used\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use LAUNCH facility to dump linker command\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# generate reference for LINKER flag\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_link_options/LINKER_expansion-validation.cmake" : {
      "ObjectId" : "bebd6c736737a557ff69c7d29e7a596b79363953",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_link_options/LINKER_expansion.cmake" : {
      "ObjectId" : "42b286d2da599e46c8ef1819aa75362cdac4cbaf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_link_options/LINK_OPTIONS-exe-check.cmake" : {
      "ObjectId" : "4a22d7e6db9d04b3f4276d679e642900f0990b0a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_link_options/LINK_OPTIONS-mod-check.cmake" : {
      "ObjectId" : "d695761c9fb1d207981dfddb2db322d562992f8c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_link_options/LINK_OPTIONS-shared-check.cmake" : {
      "ObjectId" : "eaac8e37206ac4169056c7da15bfccafc4f46b3a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_link_options/LINK_OPTIONS.cmake" : {
      "ObjectId" : "802ff4f42550830c8a624b3184cabf7d65502f6e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_link_options/RunCMakeTest.cmake" : {
      "ObjectId" : "4f5df724e4c375d9b0d7a9ac73f7012a51e18017",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Intel compiler does not reject bad flags or objects!\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_link_options/bad_SHELL_usage.cmake" : {
      "ObjectId" : "324893ddf2b5d7f879c7765f37ab406e8e7710c5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_subdirectory/CMakeLists.txt" : {
      "ObjectId" : "18dfd2686f63fed35d3e7940d69512d8fd0ed2e3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_subdirectory/DoesNotExist.cmake" : {
      "ObjectId" : "fe2945ce7e898d12d6dcf59b3790d32959eb84be",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_subdirectory/ExcludeFromAll.cmake" : {
      "ObjectId" : "f686005113bd446e828b749b8b8cf2778e274eca",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_subdirectory/ExcludeFromAll/CMakeLists.txt" : {
      "ObjectId" : "b1df6b04f7f1c36cdd5389098063013302a5d94c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_subdirectory/Function.cmake" : {
      "ObjectId" : "e804da968331737058c0aa499cc8f40a7d507dc6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_subdirectory/Function/CMakeLists.txt" : {
      "ObjectId" : "7b9e801ceca5d854aea1982d976378338bb19837",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_subdirectory/Missing.cmake" : {
      "ObjectId" : "0e6892763d075261105fbab2ab9e3c1bc497f635",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/add_subdirectory/RunCMakeTest.cmake" : {
      "ObjectId" : "88b92830857aa5a71ed62bbd0b8b60345da712a9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/alias_targets/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/alias_targets/RunCMakeTest.cmake" : {
      "ObjectId" : "dded248ed1b78a420cd5116b43f473582541eb4d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/alias_targets/add_dependencies.cmake" : {
      "ObjectId" : "7436371a229cbe8d250c82083f246d71400aeaf8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/alias_targets/add_executable-library.cmake" : {
      "ObjectId" : "e30f112d84bade82308c90e18ac74c10981b7b80",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/alias_targets/add_library-executable.cmake" : {
      "ObjectId" : "22457a9b736444b6ceebd72cf636578a83e707e0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/alias_targets/alias-target.cmake" : {
      "ObjectId" : "0b8da6014b65f43a1711103df8b8393ee5252f28",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/alias_targets/exclude-from-all.cmake" : {
      "ObjectId" : "0091918fe336aa7b2cd60fa9b521d9a5cfebd370",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/alias_targets/export.cmake" : {
      "ObjectId" : "dd84a80da29f12ff732c6d7149dabab88c4dce29",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/alias_targets/imported-global-target.cmake" : {
      "ObjectId" : "12c4e0a616e5400a152d4fa305765d4f959a7f2d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/alias_targets/imported-target.cmake" : {
      "ObjectId" : "bb682fecd89fd19639acad63d2d17e85473ce09e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/alias_targets/imported.cmake" : {
      "ObjectId" : "6a605911a7b1046b96703bebf6a31b1c671af5e6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/alias_targets/install-export.cmake" : {
      "ObjectId" : "b1c6a4f4d426eea668dd5a8ab59a197d9c36c928",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/alias_targets/invalid-name.cmake" : {
      "ObjectId" : "bbd39e3b6f3a0e506dcc0c91794c297220d66502",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/alias_targets/invalid-target.cmake" : {
      "ObjectId" : "c43da6162354dcb13cd57e686435753e8977bbb0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/alias_targets/multiple-targets.cmake" : {
      "ObjectId" : "811eb7a53478906e479e46940d114aabbb414a6f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/alias_targets/name-conflict.cmake" : {
      "ObjectId" : "d21a092489e5da3c20d86eed85d130e9fc67c021",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/alias_targets/no-targets.cmake" : {
      "ObjectId" : "a5c5ee501df15757aaa4a507464882f1020c862d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/alias_targets/set_property.cmake" : {
      "ObjectId" : "1f5e475c4a1ea6332b035d08a58b24cc6c1dadd0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/alias_targets/set_target_properties.cmake" : {
      "ObjectId" : "ee44d4595a641743be426d0d3b3368e1b76873cc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/alias_targets/target_include_directories.cmake" : {
      "ObjectId" : "c26830e119347b91a996a11f9e644b2790aff503",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/alias_targets/target_link_libraries.cmake" : {
      "ObjectId" : "b7b9e60185b1479c4412cd3358afc7a8dfd394e5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/build_command/BeforeProject.cmake" : {
      "ObjectId" : "a2175c469523450a0560bebbcc1188682eefe327",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/build_command/CMP0061-NEW.cmake" : {
      "ObjectId" : "2e439cbbd383e6c0032d74c6d0730ca77abda98c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/build_command/CMP0061-OLD-make.cmake" : {
      "ObjectId" : "1542d8c16bbdf4264c34e524c992b58d17fb778b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/build_command/CMP0061-OLD-other.cmake" : {
      "ObjectId" : "1542d8c16bbdf4264c34e524c992b58d17fb778b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/build_command/CMP0061Common.cmake" : {
      "ObjectId" : "50cd7d75889ad587e4d7ce27f9e564f9ce9a78e3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/build_command/CMakeLists.txt" : {
      "ObjectId" : "73e6a785a41ba7c68337a271e5897cb471881d71",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/build_command/ErrorsCommon.cmake" : {
      "ObjectId" : "f007b8875a6080e35198879ab358056876593f44",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This CMakeLists file is *sometimes expected* to result in a configure error.\n\n#\n\n# expect this to succeed:\n\n# ../bin/Release/cmake -G Xcode\n\n#   ../../CMake/Tests/CMakeCommands/build_command\n\n#\n\n# expect this to fail:\n\n# ../bin/Release/cmake -DTEST_ERROR_CONDITIONS:BOOL=ON -G Xcode\n\n#   ../../CMake/Tests/CMakeCommands/build_command\n\n#\n\n# This project exists merely to test the CMake command 'build_command'...\n\n# ...even purposefully calling it with known-bad argument lists to cover\n\n# error handling code.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test with no arguments (an error):\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Test with unknown arguments (also an error):\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Test the one arg signature with none of the optional KEYWORD arguments:\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Test the two-arg legacy signature:\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Test the optional KEYWORDs:\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/build_command/ErrorsOFF.cmake" : {
      "ObjectId" : "7b9cac6473da631190f21a8060f96adc5425aa94",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/build_command/ErrorsON.cmake" : {
      "ObjectId" : "d7b709b87f996971b16c328b4c68e4f4e37f251c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/build_command/RunCMakeTest.cmake" : {
      "ObjectId" : "c3bef4c8178db572380dca0ac265250700769408",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_minimum_required/Before24.cmake" : {
      "ObjectId" : "c28fc8a9d20029e5ac7ccbb84e7ed473e6fe602a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_minimum_required/CMakeLists.txt" : {
      "ObjectId" : "e8db6b05be2a6a51fd86a2ec769c627d458f5269",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_minimum_required/CompatBefore24.cmake" : {
      "ObjectId" : "ca0cb1ded8ddc78ac50478d5516a44150e326506",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_minimum_required/Future.cmake" : {
      "ObjectId" : "2b5c44517be861b92c98c5ed25dd9dd7da3b589b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_minimum_required/PolicyBefore24.cmake" : {
      "ObjectId" : "62d38361322c7adf34daf16d529c35bc28ffd9ac",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_minimum_required/Range.cmake" : {
      "ObjectId" : "0080092693e2390b6a3ef9ae65df0107f88551e6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_minimum_required/RangeBad.cmake" : {
      "ObjectId" : "2a2dade2cb7867662915bfcf920c506b481fc590",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_minimum_required/RunCMakeTest.cmake" : {
      "ObjectId" : "1030211e7232ab98535f760abdd0d44833396167",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_minimum_required/Unknown.cmake" : {
      "ObjectId" : "6c70f917c0f487633d8e39aeefbfa91e01651fcd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_parse_arguments/ArgvN.cmake" : {
      "ObjectId" : "96a373d1ff15fc36fe9419601e57de7d1bd91112",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_parse_arguments/BadArgvN1.cmake" : {
      "ObjectId" : "f8941304abee42032b0604528a5317c97dd1f31b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_parse_arguments/BadArgvN2.cmake" : {
      "ObjectId" : "d20c2c8519ef32699179823b26faed34d15f7ad5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_parse_arguments/BadArgvN3.cmake" : {
      "ObjectId" : "8fb3fdd1dc6d30329a8957444e1aee18bb6af859",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_parse_arguments/BadArgvN4.cmake" : {
      "ObjectId" : "b887a28b571e942a34abc19c0b76a97fc4df34c0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_parse_arguments/CMakeLists.txt" : {
      "ObjectId" : "6dd8cdf551e8c5b90465044b9808c05efe88ea0d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_parse_arguments/CornerCases.cmake" : {
      "ObjectId" : "028bfaf3ec07815adfe1159f2600b5aeeee9c882",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# example from the documentation\n\n# OPTIONAL is a keyword and therefore terminates the definition of\n\n# the multi-value DEFINITION before even a single value has been added\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure a list is split\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do not split if argn is quoted\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Do not split if argn is quoted\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_parse_arguments/CornerCasesArgvN.cmake" : {
      "ObjectId" : "807ed03e1e4e738a5d6ccd31b7c13b2a5066c10b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_parse_arguments/Errors.cmake" : {
      "ObjectId" : "6a380810d88efb68cb61d3cf2fc33d90bbc2f7e8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# wrong argument count\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# not an error\n",
        "Line" : 5,
        "CharPositionInLine" : 47
      },
      "2" : {
        "Text" : "# duplicate keywords\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_parse_arguments/Initialization.cmake" : {
      "ObjectId" : "b4199eadcd6559e3c50b3bcfa8fa8e221a8bddcb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# unparsed arguments\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# options\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# single arguments\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# multi arguments\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_parse_arguments/Mix.cmake" : {
      "ObjectId" : "b3eff3947a8f89e09ae201eef2e06b68db872c63",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# specify two keywords for each category and set the first keyword of each\n\n# within ARGN\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# same as above but reversed ARGN\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_parse_arguments/RunCMakeTest.cmake" : {
      "ObjectId" : "1e15b3b2ccb5d197406136cc722a81c153f5b511",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_parse_arguments/Utils.cmake" : {
      "ObjectId" : "f2001f2c0f4a67175a8da17d95a43442f34304f7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test the TEST macro itself\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/cmake_parse_arguments/test_utils.cmake" : {
      "ObjectId" : "9ce99b8a4dd30db8785459f53188ac2d54425afb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/configure_file/BadArg.cmake" : {
      "ObjectId" : "769fae1ab53ae07fa28476a5fa8d52ac87047609",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/configure_file/CMakeLists.txt" : {
      "ObjectId" : "289710955440b63a5c0eb79b4596ac0f88b9bfa2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/configure_file/DirInput.cmake" : {
      "ObjectId" : "920ea280c7e7ca89d75c2fff51e8decd8ae7f58f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/configure_file/DirOutput.cmake" : {
      "ObjectId" : "aa0fadfe60224aa476308977227a3b6eacca58a9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/configure_file/NO-BOM.cmake" : {
      "ObjectId" : "003d52663216e760446a1e502e87797b79afc9eb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/configure_file/NewLineStyle-COPYONLY.cmake" : {
      "ObjectId" : "c07b8f58284b82625f113f88169ef5d6e204c3c6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/configure_file/NewLineStyle-NoArg.cmake" : {
      "ObjectId" : "b35bde11bdd9aa99fe12ab62589c61f0dd875086",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/configure_file/NewLineStyle-ValidArg.cmake" : {
      "ObjectId" : "8d9f474488930f0a475e7472a7dc56e84219e4f4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/configure_file/NewLineStyle-WrongArg.cmake" : {
      "ObjectId" : "3ae906dbaee60cada8992832756c7a4ce7669ea5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/configure_file/Relative.cmake" : {
      "ObjectId" : "085991c72f8c92beca0c3dcea10efecfc0875a8f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/configure_file/RerunCMake.cmake" : {
      "ObjectId" : "890cc1fa8a276f88884a55fb9999045e86d2919b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# write to stderr if cmake reruns\n",
        "Line" : 1,
        "CharPositionInLine" : 39
      },
      "1" : {
        "Text" : "# make sure CMakeCache.txt is newer than ConfigureFileOutput.txt\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/configure_file/RunCMakeTest.cmake" : {
      "ObjectId" : "de144682c84b43549d3704713d5906c9751c4e7e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# handle 1s resolution\n",
        "Line" : 32,
        "CharPositionInLine" : 55
      },
      "2" : {
        "Text" : "# handle 1s resolution\n",
        "Line" : 38,
        "CharPositionInLine" : 55
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/configure_file/UTF16BE-BOM.cmake" : {
      "ObjectId" : "c5707425aa83aa0e5db3a7d053dffec83401998d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/configure_file/UTF16LE-BOM.cmake" : {
      "ObjectId" : "05c9cd7577327711b5b1ab36db78a4b4272039f7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/configure_file/UTF32BE-BOM.cmake" : {
      "ObjectId" : "0c6ea8753111efd0d12edace23c2ae7703750fb4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/configure_file/UTF32LE-BOM.cmake" : {
      "ObjectId" : "b6351b00778c4c14cedc58598ca8df338c2dba0f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/configure_file/UTF8-BOM.cmake" : {
      "ObjectId" : "af2adae4a712127e62af62fbb6ace2cdd758d654",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/configure_file/UnknownArg.cmake" : {
      "ObjectId" : "5125c83b21d3f1a92ccfc4d5c047703033810b4a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/continue/CMakeLists.txt" : {
      "ObjectId" : "ef2163c298341fcdf0c2afd89dd4234a4b8b21d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/continue/ContinueForEachInLists.cmake" : {
      "ObjectId" : "fbd7359fec39158aa645eb8239aba4810f9b96d7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/continue/ContinueForeach.cmake" : {
      "ObjectId" : "9b3e17f3e69fc69a5c2004a6dad19f7ba32e2d95",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/continue/ContinueNestedForeach.cmake" : {
      "ObjectId" : "de7c51b20730619a81f247504cf6fbe7baffeb1a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/continue/ContinueWhile.cmake" : {
      "ObjectId" : "f69993cc4522149460217516726e331ec1423bd5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/continue/NoArgumentsToContinue.cmake" : {
      "ObjectId" : "609804d4b64a8fb7ea5bd39b81814d9d4a401d2f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/continue/NoEnclosingBlock.cmake" : {
      "ObjectId" : "9661e0d3e63262ff40fa5a1a75b62fd832b31056",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/continue/NoEnclosingBlockInFunction.cmake" : {
      "ObjectId" : "eb2a0984fa04a01b0b5c56f3fe72dba74072448c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/continue/RunCMakeTest.cmake" : {
      "ObjectId" : "37caf9c3baf752122e13360440b2e23da4ade3dd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_build/BuildChangeId-check.cmake" : {
      "ObjectId" : "074801f88e19130c594da33d3fb716b0eb46354d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_build/RunCMakeTest.cmake" : {
      "ObjectId" : "1092d2ad41210e7d0e07155810db0f8dccdfc326",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_cmake_error/RunCMakeTest.cmake" : {
      "ObjectId" : "0ec04c2707865f41325b69ba0057a8841d0916a1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_configure/RunCMakeTest.cmake" : {
      "ObjectId" : "fc1b02cf075e07dda7e3d0917b422d504f578d70",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_coverage/RunCMakeTest.cmake" : {
      "ObjectId" : "dd443fc49ef3c830d4f5d7e47d9731e3e11df7aa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_disabled_test/RunCMakeTest.cmake" : {
      "ObjectId" : "12541c47ef4e0479176ea247d076e006015a6d8a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Consider a fixture that has a setup test, a cleanup test and a disabled test\n\n# which requires that fixture. Limit the test list with a regular expression\n\n# that matches the disabled test but not the setup or cleanup tests, so the\n\n# initial set of tests to be executed contains just the disabled test. Since\n\n# the only test requiring the fixture is disabled, CTest should not\n\n# automatically add in the setup and cleanup tests for the fixture, since no\n\n# enabled test requires them.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_fixtures/RunCMakeTest.cmake" : {
      "ObjectId" : "17542030ef56429a63ae45d7f87f99f3ac4f69cf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Isolate our ctest runs from external environment.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------\n\n# CMake configure will pass\n\n#------------------------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#------------------------------------------------------------\n\n# CMake configure will fail due to cyclic test dependencies\n\n#------------------------------------------------------------\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#------------------------------------------------------------\n\n# Repeat some of the exclusion tests with ctest command line\n\n# options instead of arguments to ctest_test(). This verifies\n\n# that the command line options make it through as well.\n\n#------------------------------------------------------------\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_labels_for_subprojects/CTestConfigCTestScript-check.cmake" : {
      "ObjectId" : "ea05851131a044b60333c85cf1639ee895a28174",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_labels_for_subprojects/CTestScriptVariable-check.cmake" : {
      "ObjectId" : "ea05851131a044b60333c85cf1639ee895a28174",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_labels_for_subprojects/CTestScriptVariableCommandLine-check.cmake" : {
      "ObjectId" : "7beefba2fb6136a3108ca73df78725b3c56576a5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_labels_for_subprojects/MyExperimentalFeature/CMakeLists.txt" : {
      "ObjectId" : "cc07a07f7fb69ce38fcfc61c2d21b98244d539db",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_labels_for_subprojects/MyProductionCode/CMakeLists.txt" : {
      "ObjectId" : "c2ee673ab59a8e43043e32bd651ca97700e07d22",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_labels_for_subprojects/MyThirdPartyDependency/CMakeLists.txt" : {
      "ObjectId" : "d5b9c2f22056911a98ff1e4fc903afe3b2d71ade",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_labels_for_subprojects/MyThirdPartyDependency/src/CMakeLists.txt" : {
      "ObjectId" : "dc6cb2a57eb294a337ed70d5576ed140a46cf436",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_labels_for_subprojects/RunCMakeTest.cmake" : {
      "ObjectId" : "dbe7bf826e915fe9b1b6d72172e6c0906573a34d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 1. Specify subprojects in the CTest script\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 2. Specify subprojects via a CTest script variable on the command line e.g.\n\n#    ctest -S test.cmake -DCTEST_LABELS_FOR_SUBPROJECTS:STRING=\"MySubproject\"\n\n# Note: This test includes a failing build\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 3. Set subprojects via a CTest module variable on the command line\n\n#    (will populate DartConfiguration.tcl)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# 4. Set subprojects via a CTest module variable in CMakeLists.txt\n\n#    (will populate DartConfiguration.tcl)\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The remaining tests set subprojects in CTestConfig.cmake. Settings in this\n\n# config file are shared by both the CTest module and the ctest command line\n\n# `Dashboard Client` mode (e.g. ctest -S).\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# 5. Check that the Subproject timing Summary is printed\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# 6. Use --no-subproject-summary to disable the Subproject timing summary.\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# 7. Verify that subprojects are sent to CDash when running a CTest script\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_memcheck/RunCMakeTest.cmake" : {
      "ObjectId" : "ab4c5abe58e7566f565a839a54a060d746ebae3d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# add ThreadSanitizer test\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# add standalone LeakSanitizer test\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# add AddressSanitizer test\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# add AddressSanitizer/LeakSanitizer test\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# add MemorySanitizer test\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# add UndefinedBehaviorSanitizer test\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CTest will add the logfile option before any custom options. Set the logfile\n\n# again, this time to an empty string. This will cause the logfile to be\n\n# missing, which will be the prove for us that the custom option is indeed used.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#----------------------------------------------------------------------------\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_memcheck/testAddressLeakSanitizer.cmake" : {
      "ObjectId" : "ca36a7c89db26a332dd3fd2ae0a288ce033adecf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this file simulates a program that has been built with AddressSanitizer\n\n# options\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if we are not asked to simulate AddressSanitizer don't do it\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear the log files\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# create an error of each type of LeakSanitizer\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_memcheck/testAddressSanitizer.cmake" : {
      "ObjectId" : "1219666fd48588ef3cda9667d43ecce286d46abc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this file simulates a program that has been built with address sanitizer\n\n# options\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if we are not asked to simulate address sanitizer don't do it\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear the log file\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# create an example error from address santizer\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_memcheck/testLeakSanitizer.cmake" : {
      "ObjectId" : "6d51f834678040016a7e27a31a6f345aa022b43c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this file simulates a program that has been built with LeakSanitizer\n\n# options\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if we are not asked to simulate LeakSanitizer don't do it\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear the log files\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# create an error of each type of LeakSanitizer\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_memcheck/testMemorySanitizer.cmake" : {
      "ObjectId" : "3b3ac22bd79ecff39f0fb1f99602119a1fade786",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this file simulates a program that has been built with MemorySanitizer\n\n# options\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if we are not asked to simulate address sanitizer don't do it\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear the log file\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# create an error of each type of thread santizer\n\n# these names come from tsan_report.cc in llvm\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_memcheck/testThreadSanitizer.cmake" : {
      "ObjectId" : "e7a5c9f460cc32f8577859850deb3d8932c1dce4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this file simulates a program that has been built with ThreadSanitizer\n\n# options\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear the log file\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# create an error of each type of thread santizer\n\n# these names come from tsan_report.cc in llvm\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_memcheck/testUndefinedBehaviorSanitizer.cmake" : {
      "ObjectId" : "ba6122d6c2a8a70bdaf27fe6e25d7b56794d9f6d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this file simulates a program that has been built with\n\n# UndefinedBehaviorSanitizer options\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if we are not asked to simulate address sanitizer don't do it\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear the log file\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# create an error like undefined behavior santizer creates;\n\n# these names come from ubsan_diag.cc and ubsan_handlers.cc\n\n# in llvm\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_skipped_test/RunCMakeTest.cmake" : {
      "ObjectId" : "dcf5cd4e2f7b50f9a249d33bb1306bfeefe5e95c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_start/AppendDifferentModel-check.cmake" : {
      "ObjectId" : "d71b1cf01127523594b39c5a67166f5e7cc957f4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_start/AppendNoModel-check.cmake" : {
      "ObjectId" : "d71b1cf01127523594b39c5a67166f5e7cc957f4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_start/AppendSameModel-check.cmake" : {
      "ObjectId" : "d71b1cf01127523594b39c5a67166f5e7cc957f4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_start/RunCMakeTest.cmake" : {
      "ObjectId" : "9b57b1be6d63ab4de886ef8eaf867544dce6a49b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_start/WriteModelToTagContinuous-check.cmake" : {
      "ObjectId" : "4e67bf5557dfd80c65c4ae6d0b3439e5b764622a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_start/WriteModelToTagExperimental-check.cmake" : {
      "ObjectId" : "b5bf2cfa4ce09fd32ab95632449a795e3ee83ad7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_start/WriteModelToTagNightly-check.cmake" : {
      "ObjectId" : "35d05665419a3a7ddfb515ba53cb46b9cdedefab",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_start/WriteModelToTagNoMatchingTrack-check.cmake" : {
      "ObjectId" : "bd2862deb4a90c72f6f00ad7a64ecf9038414be7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_submit/RunCMakeTest.cmake" : {
      "ObjectId" : "952368d83877e4b3ca767f716c3918f1bdd24a2d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Default case parameters.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Test bad argument combinations.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Test failed drops by various protocols\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_test/RunCMakeTest.cmake" : {
      "ObjectId" : "6877e6a87c0e14601ba641a8c240277cebdc44b8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests for the 'Test Load' feature of ctest\n\n#\n\n# Spoof a load average value to make these tests more reliable.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Verify that new tests are started when the load average falls below\n\n# our threshold.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Verify that new tests are not started when the load average exceeds\n\n# our threshold and that they then run once the load average drops.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Verify that when an invalid \"TEST_LOAD\" value is given, a warning\n\n# message is displayed and the value is ignored.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Verify that new tests are started when the load average falls below\n\n# our threshold.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Verify that new tests are not started when the load average exceeds\n\n# our threshold and that they then run once the load average drops.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Verify that when an invalid \"CTEST_TEST_LOAD\" value is given,\n\n# a warning message is displayed and the value is ignored.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Verify that the \"TEST_LOAD\" value has higher precedence than\n\n# the \"CTEST_TEST_LOAD\" value\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_test/TestChangeId-check.cmake" : {
      "ObjectId" : "b9884f1ec1291b740d15ae6e08827c371bbb4ca3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_test/TestOutputSize-check.cmake" : {
      "ObjectId" : "74ad6695bba035813dfbd3e6799af8664e789cfd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/ctest_upload/RunCMakeTest.cmake" : {
      "ObjectId" : "b33d2781edf723130fb65706aa87dc22032de992",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/execute_process/CMakeLists.txt" : {
      "ObjectId" : "a640c569ec2c77147afdc0912beefda8a4443f00",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/execute_process/Encoding.cmake" : {
      "ObjectId" : "3dc7c397b3babb0dc6e5eaf5eaaa93a1c558494f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/execute_process/EncodingMissing.cmake" : {
      "ObjectId" : "ae97480bc5fca29717ac55f4508dec1c96335bb2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/execute_process/ExitValues.cmake" : {
      "ObjectId" : "d80a57b2de249321535ce4b1363c75b4f67bb7d3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#1st TEST RESULT_VARIABLE ONLY\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#2nd TEST RESULT_VARIABLE and RESULTS_VARIABLE\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#3rd TEST RESULTS_VARIABLE\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#4th TEST RESULT_VARIABLE and RESULTS_VARIABLE WITH MULTICOMMAND\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#5th TEST RESULT_VARIABLE and RESULTS_VARIABLE WITH MULTICOMMAND\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/execute_process/MergeOutput.cmake" : {
      "ObjectId" : "528ac90149a46d8479e9ef0f292a3bc96bb3bbdf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/execute_process/MergeOutputFile.cmake" : {
      "ObjectId" : "1a0d90e165fe175d8b97899fc4aea19f07d00242",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/execute_process/MergeOutputVars.cmake" : {
      "ObjectId" : "3e7c69e2e16e183c2696d75c31f715acfaa85034",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/execute_process/RunCMakeTest.cmake" : {
      "ObjectId" : "cb40b40a483890eac05bbf102da681a0daa6de42",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/export/AppendExport.cmake" : {
      "ObjectId" : "2a99dfce482e7ba94b38af2498f773b6ca3fcf7d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/export/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/export/CustomTarget.cmake" : {
      "ObjectId" : "4d2bf18dbb5e8273e8080e952cc9cb109c18f81a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/export/ExportPropertiesUndefined.cmake" : {
      "ObjectId" : "aa529f29a5b8681e22c31bdf883f407841e7a421",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/export/ForbiddenToExportImportedProperties.cmake" : {
      "ObjectId" : "9c8653d8d4bcb923967fa8f425d08e8955ce02af",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/export/ForbiddenToExportInterfaceProperties.cmake" : {
      "ObjectId" : "bab8de0f348d99a962d7a4f09838edec45c97fed",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/export/ForbiddenToExportPropertyWithGenExp.cmake" : {
      "ObjectId" : "065cdbcdbc8a972bae7156f2942baa2fceb1109a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/export/NoExportSet.cmake" : {
      "ObjectId" : "72390e822a3bf5565be2fc1582549a7a815395e6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/export/OldIface.cmake" : {
      "ObjectId" : "833b023d1e250fddf8209f52e1f22a13b9cdcef4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/export/RunCMakeTest.cmake" : {
      "ObjectId" : "46bb1fca3abea21e0d66e7e43eefecdc9f3cd053",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/export/TargetNotFound.cmake" : {
      "ObjectId" : "a7c398daf0aaa25c729a5ec1ba02fe80b730fecf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/CMakeLists.txt" : {
      "ObjectId" : "289710955440b63a5c0eb79b4596ac0f88b9bfa2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/DOWNLOAD-hash-mismatch.cmake" : {
      "ObjectId" : "a91b217c2b4cf81d3dd80538c276d825606ebe08",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/DOWNLOAD-httpheader-not-set.cmake" : {
      "ObjectId" : "6efc9580639d7a943f0b4f290bf87aca6d227290",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/DOWNLOAD-netrc-bad.cmake" : {
      "ObjectId" : "6a62df94e59e4a8b1f8bc18931f1722125365710",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/DOWNLOAD-pass-not-set.cmake" : {
      "ObjectId" : "61eff6d65ebe05b8904b7c3afcc3be7136046616",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/DOWNLOAD-unused-argument.cmake" : {
      "ObjectId" : "2fa5482d28d67a878c0b3f3cb8df304c72f1991b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/FileOpenFailRead.cmake" : {
      "ObjectId" : "4d4c6dc16d292e55b7c5bbeb5a7388b77072e814",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/GLOB-CONFIGURE_DEPENDS-RerunCMake.cmake" : {
      "ObjectId" : "fe87c78491b92f5371048b25a1881c3a66955b4a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/GLOB-error-CONFIGURE_DEPENDS-SCRIPT_MODE.cmake" : {
      "ObjectId" : "9dc0f039320f79dd40aa507d8ff5e24f128a71ea",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/GLOB-error-CONFIGURE_DEPENDS-modified.cmake" : {
      "ObjectId" : "8d74deac664cd76dd930ff9cc787a3fff8a15d07",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/GLOB-error-LIST_DIRECTORIES-no-arg.cmake" : {
      "ObjectId" : "a8e15f23ea18d03063bbc0e9f8abfd31aa1bd0ce",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/GLOB-error-LIST_DIRECTORIES-not-boolean.cmake" : {
      "ObjectId" : "f735433985de28d012b5fa39ab037f591fab7ba5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/GLOB-error-RELATIVE-no-arg.cmake" : {
      "ObjectId" : "a5558812694c8852cd01363ae5f077d8e158612e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/GLOB-noexp-CONFIGURE_DEPENDS.cmake" : {
      "ObjectId" : "9dc0f039320f79dd40aa507d8ff5e24f128a71ea",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/GLOB-noexp-FOLLOW_SYMLINKS.cmake" : {
      "ObjectId" : "6d467a0c67cd2c3cf3e06541037b1c0f365e8051",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/GLOB-noexp-LIST_DIRECTORIES.cmake" : {
      "ObjectId" : "37a9d542e0d510fa0480507e628a4e30968106f8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/GLOB-noexp-RELATIVE.cmake" : {
      "ObjectId" : "7b2d4042041af64c3bd4ae7e62b6ed4d6c2a17cd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/GLOB-sort-dedup.cmake" : {
      "ObjectId" : "1e1c5797f030c5c693313f92e5b540eb0e06bb6d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/GLOB-warn-CONFIGURE_DEPENDS-late.cmake" : {
      "ObjectId" : "0b69552917cb6f7ca438313912915f77cef8fbf7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/GLOB.cmake" : {
      "ObjectId" : "c524e42b745dfb708de7673780560e169faae87f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/GLOB_RECURSE-cyclic-recursion.cmake" : {
      "ObjectId" : "fb8be4230103aa56f144a332497fc10721b6ffcf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/GLOB_RECURSE-noexp-FOLLOW_SYMLINKS.cmake" : {
      "ObjectId" : "5e5ce9288372c545d502600639522377d8e339a7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/GLOB_RECURSE-warn-CONFIGURE_DEPENDS-ninja-version.cmake" : {
      "ObjectId" : "8e8089516921da7becc70186c00b223dca2c0fb5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/GLOB_RECURSE.cmake" : {
      "ObjectId" : "530930f1431597384aa41091d21052b4c62df62f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/INSTALL-DIRECTORY.cmake" : {
      "ObjectId" : "0bc1d18a93c7e88f9ed1979f2d0243e23a3b35d4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/INSTALL-FILES_FROM_DIR-bad.cmake" : {
      "ObjectId" : "807b704e076b82b3701c6587d181aea42b113f52",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/INSTALL-FILES_FROM_DIR.cmake" : {
      "ObjectId" : "24e5282f368fcd6a0f2509f56e8db2746fb12756",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/INSTALL-MESSAGE-bad.cmake" : {
      "ObjectId" : "f878c691973d2fdb2562acfed2047489bcd0adb8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/INSTALL-SYMLINK.cmake" : {
      "ObjectId" : "5a4284a63cb7f80ff29bd34374d747b7f0906624",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/LOCK-error-file-create-fail.cmake" : {
      "ObjectId" : "4868cfe29d471fc6f1098e4b6a238d1890156684",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/LOCK-error-guard-incorrect.cmake" : {
      "ObjectId" : "51daa7cd1d5b4963ed8970d596139aef29934553",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/LOCK-error-incorrect-timeout-trail.cmake" : {
      "ObjectId" : "c4f1b75dacfa847d5999757bf1c1eea1d4d4d966",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/LOCK-error-incorrect-timeout.cmake" : {
      "ObjectId" : "d882467d40c2ab01b84de88e343c8ce86a902f01",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/LOCK-error-lock-fail.cmake" : {
      "ObjectId" : "aa7f663c248cc6926531986f771601a41fddf6da",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to lock file '${lfile}/cmake.lock'. Since `lfile` is not a directory\n\n# expected that operation will fail.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/LOCK-error-negative-timeout.cmake" : {
      "ObjectId" : "6a0f19023116cff70ae364f1551b388883ad05d5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/LOCK-error-no-function.cmake" : {
      "ObjectId" : "1b8b06a339fbf6eabf8455e1532aafe158682406",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/LOCK-error-no-guard.cmake" : {
      "ObjectId" : "48ffc5ee77139a9fc2d8788f47717229087ac06d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/LOCK-error-no-path.cmake" : {
      "ObjectId" : "12d79b740e1f35acdd438fa483835dc803e342f9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/LOCK-error-no-result-variable.cmake" : {
      "ObjectId" : "e6ac18d634728095dbd0b9228d13a17ab6b03caf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/LOCK-error-no-timeout.cmake" : {
      "ObjectId" : "16181922d5e59f70e23fd5d17e799340bd93a60e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/LOCK-error-timeout.cmake" : {
      "ObjectId" : "b6b9476034e350b549d1700a662a6e87417df8e3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/LOCK-error-unknown-option.cmake" : {
      "ObjectId" : "88ef002b2912f9424da6ecc5c5f99346843db8ba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/LOCK-lowercase.cmake" : {
      "ObjectId" : "373afdadb5bb97bd811890b1c0c41c31da55f067",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/LOCK.cmake" : {
      "ObjectId" : "8eff084695b87e0c437534e752bc9e6ab11c9edd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/READ_ELF.cmake" : {
      "ObjectId" : "cd02c9b6233cd1ee0555aa8238f934f36eb1ad86",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/RunCMakeTest.cmake" : {
      "ObjectId" : "b3832301a8a1941a2a0dc6d45d09d716bd2d307f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tests are valid both for GLOB and GLOB_RECURSE\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Detect ninja version so we know what tests can be supported.\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/TOUCH-error-in-source-directory.cmake" : {
      "ObjectId" : "9aa7c567e4a63b409aa11aa910e4a76ca1b3024b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/TOUCH-error-missing-directory.cmake" : {
      "ObjectId" : "0cfb8d9a988ace5151dc4d2ca31b76ae1d484856",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/TOUCH.cmake" : {
      "ObjectId" : "8931eb53a8454278edf7e49785676a5234da790d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/UPLOAD-httpheader-not-set.cmake" : {
      "ObjectId" : "18d43cc2cf3910f0989a8e6545d79005e4f13c08",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/UPLOAD-netrc-bad.cmake" : {
      "ObjectId" : "e59a2c498832256411bb2a0088f6054f17ac3928",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/UPLOAD-pass-not-set.cmake" : {
      "ObjectId" : "4f3d86ce499785b1ef00583e7c1d0fe230111df0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/UPLOAD-unused-argument.cmake" : {
      "ObjectId" : "92c878c8e5bffb874bd1f3b6391dac10939d3f50",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/subdir_test_unlock/CMakeLists.txt" : {
      "ObjectId" : "c167cd77c679b8a16408c818b1b56f897256c5a2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/file/timeout-script.cmake" : {
      "ObjectId" : "e07dbf0b8a5c4435d97ff83f89b2acdd38d7b3b9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_dependency/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_dependency/RunCMakeTest.cmake" : {
      "ObjectId" : "a72d18962ff3053ab7e9482f27c48a3db4ecf37f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Success tests\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Failure tests\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_dependency/bad-version-exact.cmake" : {
      "ObjectId" : "c4ca5e29dae30e744cc13ca5c47afb407d1c91fc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_dependency/bad-version-fuzzy.cmake" : {
      "ObjectId" : "c7cf4eef499afc952d73b1391fe4faac78569624",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_dependency/basic.cmake" : {
      "ObjectId" : "c7795f21710f0f49b5bcae949ce25001500cc2f4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_dependency/invalid-arg.cmake" : {
      "ObjectId" : "daaf5694a4fe13c0fd4076e93249f8affd953856",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_dependency/realistic.cmake" : {
      "ObjectId" : "e633a312be6eaac8a83c66d0a6f2930f7fafc5a9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_dependency/share/cmake/Pack1/Pack1Config.cmake" : {
      "ObjectId" : "7d55ef61d931039d292b171e73f81273aae76de5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_dependency/share/cmake/Pack1/Pack1ConfigVersion.cmake" : {
      "ObjectId" : "dfb7b6c8477df9ee8fa8dda361b8030763023aae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_dependency/share/cmake/Pack2/Pack2Config.cmake" : {
      "ObjectId" : "7e8a60ba015bfa8ba320e61d3d73ff0450afe93e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_dependency/share/cmake/Pack2/Pack2ConfigVersion.cmake" : {
      "ObjectId" : "dfb7b6c8477df9ee8fa8dda361b8030763023aae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_file/CMakeLists.txt" : {
      "ObjectId" : "ef2163c298341fcdf0c2afd89dd4234a4b8b21d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_file/PrefixInPATH.cmake" : {
      "ObjectId" : "1e33c08a6159ef93abd307c59c2c4b664b912a05",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_file/RunCMakeTest.cmake" : {
      "ObjectId" : "5ce96e0e8000b836d1cc87a89abe1896171a74a2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_library/CMakeLists.txt" : {
      "ObjectId" : "ef2163c298341fcdf0c2afd89dd4234a4b8b21d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_library/Created.cmake" : {
      "ObjectId" : "c0fd823c7dbf935d00dc7311f0b936d993817f07",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_library/LibArchLink.cmake" : {
      "ObjectId" : "c91381d85015930952abf755100416bf6fb667a4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_library/PrefixInPATH.cmake" : {
      "ObjectId" : "f1b8b187a52b07df97c75fe36f6a768cf9bf6fd9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_library/RunCMakeTest.cmake" : {
      "ObjectId" : "e7e8db39ade1830d2d74b9ca3fe064f3ffa964a8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/CMP0074-OLD.cmake" : {
      "ObjectId" : "435831702491569b8828abf03089dc23f7bd9601",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/CMP0074-WARN.cmake" : {
      "ObjectId" : "0d4ada78c2a908076bb67e5ab2a19b0bb875712f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# (do not set CMP0074)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/CMP0074-common.cmake" : {
      "ObjectId" : "bfacd82c4aade45e4454bbe64d5205234352dff7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# (includer selects CMP0074)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/ComponentRequiredAndOptional.cmake" : {
      "ObjectId" : "0355f5af36c2fac1c45256ee3e7edd825930e30e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/MissingConfig.cmake" : {
      "ObjectId" : "238e7e49888a22bea5b792227c5ca8857954cd9d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/MissingConfigOneName.cmake" : {
      "ObjectId" : "11676a9abe289d8508adc2a88df0ea54df229b8d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/MissingConfigRequired.cmake" : {
      "ObjectId" : "0ae67023a86225185e8e7e42e78858799f91a50e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/MissingConfigVersion.cmake" : {
      "ObjectId" : "ac35a79e48b3990913fffe956bf69c6aa0f0ce75",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/MissingModule.cmake" : {
      "ObjectId" : "76bcef293e92e46c6bb5547294b3f837536323b7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/MissingModuleRequired.cmake" : {
      "ObjectId" : "897eda6886e8b1a7a51a04faa8819b75ba6979c0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/MissingNormal.cmake" : {
      "ObjectId" : "fb90e01281eff3d67ab4386bcb90c1282f9af203",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/MissingNormalRequired.cmake" : {
      "ObjectId" : "33353d8cda21bdd04b6953ab61ba0a4cb07b89cf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/MissingNormalVersion.cmake" : {
      "ObjectId" : "2d9ce4ea52c26ab07d30df92ffaf245b7710630f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/MissingNormalWarnNoModuleNew.cmake" : {
      "ObjectId" : "0211249c6fb6edda8634497d7c4b7afb308b7c3f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/MissingNormalWarnNoModuleOld.cmake" : {
      "ObjectId" : "1c4a77599d3afb63198827393a42ee275cbbefcc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/MixedModeOptions.cmake" : {
      "ObjectId" : "7f78ee05f5e02a06bc03e4932c4d16dc4b0b41c4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/PackageRoot.cmake" : {
      "ObjectId" : "aa12e9b5f2aaf600da5b96989d4dcb19c3c0eac0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/PackageRoot/BarConfig.cmake" : {
      "ObjectId" : "9eaf386126a320fd28d7fa41707241ed30d5dee9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/PackageRoot/FindBar.cmake" : {
      "ObjectId" : "9eaf386126a320fd28d7fa41707241ed30d5dee9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/PackageRoot/FindFoo.cmake" : {
      "ObjectId" : "b929c2ad8b236a9bb54fdf48cc1caf4b1ca36960",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/PackageRoot/foo/cmake_root/cmake/BarConfig.cmake" : {
      "ObjectId" : "9eaf386126a320fd28d7fa41707241ed30d5dee9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/PackageRoot/foo/env_root/cmake/BarConfig.cmake" : {
      "ObjectId" : "9eaf386126a320fd28d7fa41707241ed30d5dee9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/PackageRootNestedConfig.cmake" : {
      "ObjectId" : "1ef32cbbaafeed0a4272d6f530c6e2cd785cfdeb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/PackageRootNestedModule.cmake" : {
      "ObjectId" : "017834cd343cd207d158c0d1a3626e067a09096a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/PolicyPop.cmake" : {
      "ObjectId" : "4866f24f51fed2f652a6d3357d513c5023e8ccf5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/PolicyPop/PolicyPopConfig.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/PolicyPop/PolicyPopConfigVersion.cmake" : {
      "ObjectId" : "483fb10f27519d3a2b389cf696ed8bbd19597455",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/PolicyPush.cmake" : {
      "ObjectId" : "30c3ce2a385d127ea8bf7fd18726a1846e2a622d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/PolicyPush/PolicyPushConfig.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/PolicyPush/PolicyPushConfigVersion.cmake" : {
      "ObjectId" : "45a8dbd40b44b07d3da2ad70f17125b69457865c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/RunCMakeTest.cmake" : {
      "ObjectId" : "c06840290f7213614070ffc14dc799493897f896",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/SetFoundFALSE.cmake" : {
      "ObjectId" : "fbcec3c56be3220a2e428ce653bf6124472869d3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/SetFoundFALSEConfig.cmake" : {
      "ObjectId" : "ae6bd14540e006d3bbda86cd4c5cf5bf004cb83c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/VersionedA-1/VersionedAConfig.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/VersionedA-1/VersionedAConfigVersion.cmake" : {
      "ObjectId" : "2dbcfb2656f107d7cbe27065952eec23c8f59eba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/VersionedA-2/VersionedAConfig.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/VersionedA-2/VersionedAConfigVersion.cmake" : {
      "ObjectId" : "7eb83329796286fc92efe5365fa34d4a68837b90",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/WrongVersion.cmake" : {
      "ObjectId" : "5bc711fb4a43a04c22b54e4480724dcdef00c627",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_package/WrongVersionConfig.cmake" : {
      "ObjectId" : "5bc711fb4a43a04c22b54e4480724dcdef00c627",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_path/CMakeLists.txt" : {
      "ObjectId" : "ef2163c298341fcdf0c2afd89dd4234a4b8b21d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_path/FrameworksWithSubdirs.cmake" : {
      "ObjectId" : "b28602151fb8ed21fc7d804883a7d4072888767c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_path/PrefixInPATH.cmake" : {
      "ObjectId" : "614d64f1fa031ff269f182e3bcc02e448e8fda61",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_path/RunCMakeTest.cmake" : {
      "ObjectId" : "bf0fa8951d362be5f1dc4f53c013dc24c46b54ed",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_program/CMakeLists.txt" : {
      "ObjectId" : "74b3ff8de38d8e90e2e9549eb077ea0a023fa581",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_program/DirsPerName.cmake" : {
      "ObjectId" : "6db778d7e3ea67dea483f23c02c026b264984649",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_program/EnvAndHints.cmake" : {
      "ObjectId" : "14ebd6e2fc4f6a6f36be21d397856bb33b06f94f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_program/NamesPerDir.cmake" : {
      "ObjectId" : "5f00a28d0ad456137c990dd58354a78867acdc68",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_program/RelAndAbsPath.cmake" : {
      "ObjectId" : "9a42c5e17b9a65af169ae159bfef10975a50c95c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# testNoSuchFile should only be found if the file absolute path is\n\n# incorrectly prepended with the search path.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ./testCWD should not be found without '.' being in the path list.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Confirm that adding '.' to path does locate ./testCWD.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_program/RunCMakeTest.cmake" : {
      "ObjectId" : "6903f057b8f28b9b9112ffbfc6d967939271e904",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_program/WindowsCom.cmake" : {
      "ObjectId" : "b32d9e85167b40ddd2a950319cec77ec9c52e78b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/find_program/WindowsExe.cmake" : {
      "ObjectId" : "3a336ec6129e0cf2fde79a9b6768e0ac79aa66c8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/foreach/BadRangeInFunction.cmake" : {
      "ObjectId" : "f51cbbf11727b9eb07c99b171ddf4aefec3653c8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/foreach/CMakeLists.txt" : {
      "ObjectId" : "bf2ef1506eab776e7736df37a608f19acbeaf1a9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/foreach/RunCMakeTest.cmake" : {
      "ObjectId" : "4b74cfe49370297e96c63dc3400ad1049c59e920",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_filename_component/CMakeLists.txt" : {
      "ObjectId" : "74b3ff8de38d8e90e2e9549eb077ea0a023fa581",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_filename_component/KnownComponents.cmake" : {
      "ObjectId" : "ac77ac3dec9183423166a25654b76ec690d63e4d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Assertion macro\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General test of all component types given an absolute path.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test Windows paths with DIRECTORY component and an absolute Windows path.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Test finding absolute paths.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Test finding absolute paths from various base directories.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Test finding absolute paths with CACHE parameter.  (Note that more\n\n# rigorous testing of the CACHE parameter comes later with PROGRAM).\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Test the PROGRAM component type.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Test CACHE parameter for most component types.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Make sure that the existing CACHE entry from previous is honored:\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Test the PROGRAM component type with CACHE specified.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# 1. Make sure it makes a cache variable in the first place for basic usage:\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# 2. Set some existing cache variables & make sure the function returns them:\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# 3. Now test basic usage when PROGRAM_ARGS is used:\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# 4. Test that existing cache variables are returned when PROGRAM_ARGS is used:\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Test that ONLY the expected cache variables were created.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Catch likely typo when appending to non_cache_vars:\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 16
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_filename_component/RunCMakeTest.cmake" : {
      "ObjectId" : "156fc8f3ccdc04176572793d007802efec51a423",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_filename_component/UnknownComponent.cmake" : {
      "ObjectId" : "06abc51e6262eda0b5cae23601f47f1488bf05b2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/BadArgument.cmake" : {
      "ObjectId" : "382dabb50b130a4efdd5d2e6aec571e266032198",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/BadDirectory.cmake" : {
      "ObjectId" : "cdbfa807c271d3383237e7156be3f54959026b08",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/BadScope.cmake" : {
      "ObjectId" : "ea8566b50fe162cf76b5803991032c0f60b07f15",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/BadTarget.cmake" : {
      "ObjectId" : "9992dabed46657ece0ac77f5900ca8a1cad57a77",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/BadTest.cmake" : {
      "ObjectId" : "44bf3ebc54b1866ef65bb264b95d03b2563550db",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/DebugConfigurations.cmake" : {
      "ObjectId" : "534beafcde7dfa0ae5d4c14d1f4c4e1678bbebd4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/GlobalName.cmake" : {
      "ObjectId" : "497700cb3bf55c2d02ca7bffb24884078bd96b39",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/IsMultiConfig.cmake" : {
      "ObjectId" : "64d5ff635b82773eb8e14ace1a0e048a77428813",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/MissingArgument.cmake" : {
      "ObjectId" : "f0d004dc49c6f01941dbed760067ce06be041e89",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/NoCache.cmake" : {
      "ObjectId" : "9719fe775b5b86d873227b6185d992c04737843a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/NoProperty.cmake" : {
      "ObjectId" : "bee230d9b56406951f7e429c4b07b6dac67a48c9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/NoSource.cmake" : {
      "ObjectId" : "89773c810b0bd5178e9a524ccad5979c695926a3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/NoTarget.cmake" : {
      "ObjectId" : "8f1fa23af566ee4a7b4be9b312200593164470fc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/NoTest.cmake" : {
      "ObjectId" : "045bd56ecc9cf831f605c61f3c8511f39e3e5a8a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/NotMultiConfig.cmake" : {
      "ObjectId" : "59172d59fc82e6f045b2d75d401281a798f20ad8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/RunCMakeTest.cmake" : {
      "ObjectId" : "06a0c673c1cc68bbd017911846ece51cbf722a3f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Since we are testing the GENERATOR_IS_MULTI_CONFIG property itself,\n\n# don't rely on RunCMake_GENERATOR_IS_MULTI_CONFIG being set correctly\n\n# and instead explicitly check for a match against those generators we\n\n# expect to be multi-config\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/VariableName.cmake" : {
      "ObjectId" : "9190f80ad9f6f578f2130cca2a6ab041a8715365",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/cache_properties.cmake" : {
      "ObjectId" : "bf3e7abe99e0b47cf83bb3efe958166e241c93b7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# empty\n",
        "Line" : 10,
        "CharPositionInLine" : 42
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/directory_properties.cmake" : {
      "ObjectId" : "9b978fd503837ef0da73121709b46b263aa2aa8b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/directory_properties/CMakeLists.txt" : {
      "ObjectId" : "95106adca37e621d770b5d3c76f9002220f60e79",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/directory_properties/sub1/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/directory_properties/sub2/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/global_properties.cmake" : {
      "ObjectId" : "20731360b30fedc91d34f36c22ef1925602a5e30",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/install_properties.cmake" : {
      "ObjectId" : "aa8922594689495008372177ba188553c9538504",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/source_properties.cmake" : {
      "ObjectId" : "12d2d0797c0e225d9e6399262b05bd8391d263d8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test strange legacy behavior in which the order in which source files are\n\n# first accessed affects how properties are applied without an extension.\n\n# See also issue #15208.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set property without extension\n",
        "Line" : 22,
        "CharPositionInLine" : 49
      },
      "2" : {
        "Text" : "# should have property\n\n# should not have property\n\n# should have property\n",
        "Line" : 23,
        "CharPositionInLine" : 43
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/target_properties.cmake" : {
      "ObjectId" : "321d5b5b8bc0847fabfa1de9e861ca3a039e1c32",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/get_property/test_properties.cmake" : {
      "ObjectId" : "1d0295ca70c7878aaa4338d8ad794b72b6add00a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/if/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/if/InvalidArgument1.cmake" : {
      "ObjectId" : "b4fb97f419287c1b207c28d6f7bdff6ff524ec14",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/if/IsDirectory.cmake" : {
      "ObjectId" : "23d126dd46632ab8e1acf6e932315a79ff882858",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/if/IsDirectoryLong.cmake" : {
      "ObjectId" : "e6939ac1000e64e311dd628ea5838dc22828579a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/if/MatchesSelf.cmake" : {
      "ObjectId" : "3131ac4f482fc97609e79f51527a7e0678b022a7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/if/RunCMakeTest.cmake" : {
      "ObjectId" : "f54edf7edd1178bc00fc677739cdfe9f182c9d70",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/if/TestNameThatDoesNotExist.cmake" : {
      "ObjectId" : "74bc8b02fb6098f1360145dfe9a41c44b471258d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/if/TestNameThatExists.cmake" : {
      "ObjectId" : "65c2b462c11433df1e7f020bb172e53ec8bb00ed",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/if/duplicate-deep-else.cmake" : {
      "ObjectId" : "94f06defb94fdf358c801bf9ba60d9922a5d8246",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/if/duplicate-else-after-elseif.cmake" : {
      "ObjectId" : "d1d4ac18a6f155d31ab924eb10ad5de93e523306",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/if/duplicate-else.cmake" : {
      "ObjectId" : "14a03ac571e454cba174b022d71181c84f3cdf4b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/if/elseif-message.cmake" : {
      "ObjectId" : "593096610d063a2e54913e7511e35a1cd8cc3463",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/if/misplaced-elseif.cmake" : {
      "ObjectId" : "d27f24e18ed28edaa8e2307925ea68ce29046e2e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include/CMP0024-NEW.cmake" : {
      "ObjectId" : "0e03d2af85a2857d95d5c78ee223367fd4313417",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include/CMP0024-WARN.cmake" : {
      "ObjectId" : "783cf78e5d5502f186bb38ea304e60c7fa8cfc6e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include/EmptyString.cmake" : {
      "ObjectId" : "4285cb3d5db76f5f20203ddd49a45d0555643bb0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include/EmptyStringOptional.cmake" : {
      "ObjectId" : "549d46b3dbd8ca0fded650bf1853571757168e3a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include/ExportExportInclude.cmake" : {
      "ObjectId" : "14e5d913f1b59019c62f39b0d4b01f6a7c7bd458",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include/RunCMakeTest.cmake" : {
      "ObjectId" : "bea7d5cc489346955a336fc5540b70ace4541b84",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include/subdir1/CMakeLists.txt" : {
      "ObjectId" : "11a76d1dd3be456cd9c93c96ba5945e2f63ebb09",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include/subdir2/CMakeLists.txt" : {
      "ObjectId" : "7361f9cb119e126e6c2c0cf48b9093ea7de2c460",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_directories/CMP0021.cmake" : {
      "ObjectId" : "f18666b07637a4fe9fbf02eb7df96266927166bc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_directories/CMakeLists.txt" : {
      "ObjectId" : "289710955440b63a5c0eb79b4596ac0f88b9bfa2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_directories/DebugIncludes.cmake" : {
      "ObjectId" : "10a4c50206165e43785b37a4a09cac3b1c25907b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_directories/DirectoryBefore.cmake" : {
      "ObjectId" : "be3f663810021828a3380ac5e10d03eb55a80a11",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_directories/ImportedTarget.cmake" : {
      "ObjectId" : "f752f98e9599e156b9bfe195b84ae1f3a72e6ed9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_directories/NotFoundContent.cmake" : {
      "ObjectId" : "9677e0c43aa7bf411243cb80a3eb0face36f8914",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_directories/RunCMakeTest.cmake" : {
      "ObjectId" : "57e82749356eef3033e2cfb89c783ff0b9f6bc38",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Protect tests from running inside the default install prefix.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_directories/TID-bad-target.cmake" : {
      "ObjectId" : "32201c1fb4146d3ec146a079fe5b0a8ae9bb6c16",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_directories/incomplete-genex.cmake" : {
      "ObjectId" : "976695a648c1859d70337af3a6eec0e40da285f6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This test ensures that some internal mechanisms of cmGeneratorExpression\n\n# do not segfault (#14410).\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test that cmGeneratorExpression::Preprocess(StripAllGeneratorExpressions)\n\n# does not segfault\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test that cmGeneratorExpression::Preprocess(BuildInterface) does not segfault\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Test that cmGeneratorExpression::Preprocess(InstallInterface)\n\n# and cmGeneratorExpression::Split do not segfault\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_directories/install_config.cmake" : {
      "ObjectId" : "46c626c70ce09bafd5d9f8438e46ada930c8fadd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_external_msproject/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_external_msproject/CustomConfig-check.cmake" : {
      "ObjectId" : "1a940b81069cad5a9df3763b9fec6a78fe299624",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_external_msproject/CustomConfig.cmake" : {
      "ObjectId" : "1f935cd58c0eb5d8a7a54702d4b8ff5809d68696",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_external_msproject/CustomGuid-check.cmake" : {
      "ObjectId" : "3747934db6ffeec0c056b5838dc0f1c9a91e25ca",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_external_msproject/CustomGuid.cmake" : {
      "ObjectId" : "1dbe7da05768d0f3ea94d78ad0341bb06c526494",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_external_msproject/CustomGuidTypePlatform-check.cmake" : {
      "ObjectId" : "0b2ac1db0d34a74e6555ccb3bf18e53a47d60a9e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_external_msproject/CustomGuidTypePlatform.cmake" : {
      "ObjectId" : "ee4db655f292498809ba6fd6c7365b1a1f33ea32",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test all optional parameters are set.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_external_msproject/CustomTypePlatform-check.cmake" : {
      "ObjectId" : "c431b03d6274087d22d477a17482407199a76f4d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_external_msproject/CustomTypePlatform.cmake" : {
      "ObjectId" : "8c76adbc849960cca71a69d2264f6863ed5fa6bc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_external_msproject/RunCMakeTest.cmake" : {
      "ObjectId" : "47dac349f03899c801c4a875f718004025d6c03b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_external_msproject/check_utils.cmake" : {
      "ObjectId" : "e9e9cac72a2f3d3406ac145d08e5abc995dc1453",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check that file contains line that matches regular expression.\n\n# Sets IS_FOUND variable to TRUE if found and to FALSE otherwise.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Search and parse project section line by project name.\n\n# If search was successful stores found type and guid into FOUND_TYPE and FOUND_GUID variables respectively.\n\n# Sets IS_FOUND variable to TRUE if found and to FALSE otherwise.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search project section line by project name and type.\n\n# Returns TRUE if found and FALSE otherwise\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search project section line by project name and id.\n\n# Returns TRUE if found and FALSE otherwise\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Search project's build configuration line by project name and target platform name.\n\n# Returns TRUE if found and FALSE otherwise\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# extract project guid\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# probably whould be better to use configuration name\n\n# extracted from CMAKE_CONFIGURATION_TYPES than just hardcoded \"Debug\" instead\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Search project's build configuration line by project name and target configuration name.\n\n# Returns TRUE if found and FALSE otherwise\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# extract project guid\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# RunCMake test check helper\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_guard/CMakeLists.txt" : {
      "ObjectId" : "d3137f614c00a9858c9042188cc3b5d72090c95a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_guard/DirectoryScope.cmake" : {
      "ObjectId" : "d6c5a3ce2232cbe145136a741f3b3025c5f8a0a9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test include_guard with DIRECTORY scope\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add subdirectory which includes DirScript three times:\n\n# 1. Include at inner function scope\n\n# 2. At directory scope\n\n# 3. At another subdirectory to check that the guard is checked\n\n# against parent directories\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add another directory which includes DirScript\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# check inclusions count\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_guard/GlobalScope.cmake" : {
      "ObjectId" : "02137fa7707e4d595e39912c366a5d3d088dfda1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test GLOBAL include guard\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_guard/InvalidArgumentsNumber.cmake" : {
      "ObjectId" : "a63a395c04735a3f290cdce332e46708a74d8766",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_guard/InvalidScope.cmake" : {
      "ObjectId" : "f69f9fd644e42f1032ebf4c5ebc97d4bd04df59a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_guard/RunCMakeTest.cmake" : {
      "ObjectId" : "e87bddd8740e88c2600b4ee4ef6e283a1eb0530d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_guard/Scripts/DirScript.cmake" : {
      "ObjectId" : "e61d180516c9bef537cca8d5d01316fd4a88abe2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_guard/Scripts/GlobScript.cmake" : {
      "ObjectId" : "c26bf40e82418a9a64e0f98f682d43f7ee233957",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_guard/Scripts/VarScript.cmake" : {
      "ObjectId" : "3080377cbe5a0d3c8c683ea8e0326bd8b19a6100",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_guard/VariableScope.cmake" : {
      "ObjectId" : "7f8477db3dd5e438874d00129fe234eee7916876",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test include_guard with VARIABLE scope\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include twice in the same scope\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Check again that include_guard has been reset\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_guard/global_script_dir/CMakeLists.txt" : {
      "ObjectId" : "ee7ea2eccede361229615a7ce78ba3c562e9bcaf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_guard/sub_dir_script1/CMakeLists.txt" : {
      "ObjectId" : "d3626e5fa3bb2910c07a96f846e342b4e3597a82",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_guard/sub_dir_script1/sub_dir_script3/CMakeLists.txt" : {
      "ObjectId" : "1c3b1b245b4e58b54318825edfcb4f149961fde6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/include_guard/sub_dir_script2/CMakeLists.txt" : {
      "ObjectId" : "1c3b1b245b4e58b54318825edfcb4f149961fde6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/CMP0062-NEW.cmake" : {
      "ObjectId" : "9e7a5fb82ffd636a9067d96d27d29cf24152d967",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/CMP0062-OLD.cmake" : {
      "ObjectId" : "8874923b4cb4ce1a6f01f85207b93e210e0f1833",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/CMP0062-WARN.cmake" : {
      "ObjectId" : "018f82275adc5fa7ab686abea67950b0acae83b4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/CMakeLists.txt" : {
      "ObjectId" : "6dd8cdf551e8c5b90465044b9808c05efe88ea0d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/DIRECTORY-DESTINATION-bad.cmake" : {
      "ObjectId" : "f050cdfd7de95fa253ee104a952c897d18fc213d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/DIRECTORY-DIRECTORY-bad.cmake" : {
      "ObjectId" : "ec0436d387cfd3e76ce17674644a0ac13cb8deea",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/DIRECTORY-MESSAGE_NEVER-check.cmake" : {
      "ObjectId" : "3605163a0dd2c0c96a5f709d0461ba33d2c1dcf8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/DIRECTORY-MESSAGE_NEVER.cmake" : {
      "ObjectId" : "eefb8374f9104c741856fd4e8bb8a2a01aea2f53",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/DIRECTORY-OPTIONAL-all-check.cmake" : {
      "ObjectId" : "c14998ecf77d9c7e0a877bdb92b590a78e0cdd76",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/DIRECTORY-OPTIONAL.cmake" : {
      "ObjectId" : "e57aab005e385e57ae1d6bdd004ce059acf6cccd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/DIRECTORY-PATTERN-MESSAGE_NEVER.cmake" : {
      "ObjectId" : "de844f7d4381728f249ea3ce379c156edf81631a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/DIRECTORY-PATTERN-all-check.cmake" : {
      "ObjectId" : "7a20edc36422864bf521ba4d139f91189ddb128f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/DIRECTORY-PATTERN.cmake" : {
      "ObjectId" : "74d804351e35cf6a1b6615a3f7d8bbf7e5829aa4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: If/when CMake gains a good way to read file permissions, we should\n\n# check that these permissions were set correctly.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/DIRECTORY-message-check.cmake" : {
      "ObjectId" : "c9de3ead186508bbb5e17ae227642d8c11496b42",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/DIRECTORY-message-lazy-check.cmake" : {
      "ObjectId" : "43390120171e9bc8fd0bc9dc945e34071ce17f2c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/DIRECTORY-message-lazy.cmake" : {
      "ObjectId" : "ed4356714a4c52eb095aec5111bf185e869b617a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/DIRECTORY-message.cmake" : {
      "ObjectId" : "913ed157de297c8dc9fc5e3599456f12b5994941",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/Deprecated-all-check.cmake" : {
      "ObjectId" : "9ea33a6b4f82809fc3e9b7c763e8123599c74a45",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/Deprecated.cmake" : {
      "ObjectId" : "c435cb507614c454004e757d3292cc11f8ffe1e1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/EXPORT-OldIFace.cmake" : {
      "ObjectId" : "ee3fb232844c8c324028a2a80cbec85aec03e404",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/EXPORT-OldIFace/CMakeLists.txt" : {
      "ObjectId" : "32292e2f6507b1fff73a891d2f95b9ffdc0e2084",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/FILES-DESTINATION-bad.cmake" : {
      "ObjectId" : "0fda078db6da82ddabeb7a06e431391d008680de",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/FILES-EXCLUDE_FROM_ALL-all-check.cmake" : {
      "ObjectId" : "0368df1199fa404a9ce4b43b4219cf1b18d2f35d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/FILES-EXCLUDE_FROM_ALL-exc-check.cmake" : {
      "ObjectId" : "41a816ff06b2f590bda0e80e87da09ade014b9c2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/FILES-EXCLUDE_FROM_ALL-uns-check.cmake" : {
      "ObjectId" : "68a1378fccc11b146005819cdb368540ed560f51",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/FILES-EXCLUDE_FROM_ALL.cmake" : {
      "ObjectId" : "720299b94fcbc7dd0f3afbd34f4eb9f2e09f518d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/FILES-OPTIONAL-all-check.cmake" : {
      "ObjectId" : "2997a8d4ea501b57f4524d94c6679bab89d80598",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/FILES-OPTIONAL.cmake" : {
      "ObjectId" : "812bf4f026a4a6698a35ce8f1547ff72d3a3371f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/FILES-PERMISSIONS-all-check.cmake" : {
      "ObjectId" : "b8ba6d0d59e2b020e50e46ae098751f222adaf7e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/FILES-PERMISSIONS.cmake" : {
      "ObjectId" : "999c271f93c4d8afc2d71c8aa853b05036ce6bbe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/FILES-TARGET_OBJECTS-all-check.cmake" : {
      "ObjectId" : "f7f2a3a94eeb793ec10fa2e0e4348154bffd6adb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/FILES-TARGET_OBJECTS.cmake" : {
      "ObjectId" : "40c58ad573e04006eaf7384eba8e5bc8687d6b54",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/InstallRequiredSystemLibraries.cmake" : {
      "ObjectId" : "27ff68387538faadbb29d00264c34bd83ea4327c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: This test emits warnings because InstallRequiredSystemLibraries\n\n# doesn't currently work properly. The warnings have been suppressed in\n\n# InstallRequiredSystemLibraries-stderr.txt. This needs to be fixed.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/PRE_POST_INSTALL_SCRIPT-all-check.cmake" : {
      "ObjectId" : "16ff1e1c1d26b88712d305110562acb72ef189b1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/PRE_POST_INSTALL_SCRIPT.cmake" : {
      "ObjectId" : "357c68872299dab7f16b331bff79cbab0de33a09",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/RunCMakeTest.cmake" : {
      "ObjectId" : "ec022caa9aa3d05569119878318c117578292e5b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Function to build and install a project.  The latter step *-check.cmake\n\n# scripts can check installed files using the check_installed function.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check \"all\" components.\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Check unspecified component.\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Check explicit component.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Function called in *-check.cmake scripts to check installed files.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/SCRIPT-COMPONENT-all-check.cmake" : {
      "ObjectId" : "48d8e1aec60ed55b0a6149135342faef3aecd70a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/SCRIPT-COMPONENT-dev-check.cmake" : {
      "ObjectId" : "48d8e1aec60ed55b0a6149135342faef3aecd70a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/SCRIPT-COMPONENT-uns-check.cmake" : {
      "ObjectId" : "e09a102afdd8a9fe537771baef206f7ec52ec100",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/SCRIPT-COMPONENT.cmake" : {
      "ObjectId" : "aaa9bd45a72dd0077fe9de210c3493c67dfb39b5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/SCRIPT-all-check.cmake" : {
      "ObjectId" : "48d8e1aec60ed55b0a6149135342faef3aecd70a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/SCRIPT.cmake" : {
      "ObjectId" : "f857b54371b2cd440a29734134435588a7caa1a0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/SkipInstallRulesNoWarning1-check.cmake" : {
      "ObjectId" : "28076983d60f86e7274349a08489044f217aa89c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/SkipInstallRulesNoWarning1.cmake" : {
      "ObjectId" : "22c7f8ca8a29f5d7fa16d0414d7597d3b7129efe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/SkipInstallRulesNoWarning2-check.cmake" : {
      "ObjectId" : "4372b77c0e80dd970554e42ae569f9606a0fe8ee",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/SkipInstallRulesNoWarning2.cmake" : {
      "ObjectId" : "2f5f03af0628706dabdd97f877ecbe2d462e4227",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/SkipInstallRulesWarning-check.cmake" : {
      "ObjectId" : "28076983d60f86e7274349a08489044f217aa89c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/SkipInstallRulesWarning.cmake" : {
      "ObjectId" : "b621d9b54fec6cc5bca8846125f2a9be3df4272d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-CONFIGURATIONS-all-check.cmake" : {
      "ObjectId" : "2866e7fb9fbf49aec432c8ccbb45705952c339be",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-CONFIGURATIONS.cmake" : {
      "ObjectId" : "5531cd2ffebd7ee76f73e04ddfeefd0e95086abb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-DESTINATION-bad.cmake" : {
      "ObjectId" : "feff52dfe4b9baa8954c73874cc30693ada78c0c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-EXCLUDE_FROM_ALL-all-check.cmake" : {
      "ObjectId" : "9b538bb6d4c61d7f0d15bb8ab565a0d28053b540",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-EXCLUDE_FROM_ALL-exc-check.cmake" : {
      "ObjectId" : "aef0d27974f83b19d16a4a1723e5a30f506b9f24",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-EXCLUDE_FROM_ALL-uns-check.cmake" : {
      "ObjectId" : "56fd264034ca2620b22e73afc9f2848c89f73658",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-EXCLUDE_FROM_ALL.cmake" : {
      "ObjectId" : "6fb2036a6ee9acbf70966e4303e0b2277a90ceef",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-InstallFromSubDir-all-check.cmake" : {
      "ObjectId" : "1d747c30113732bac4333cc92030d47d6864b386",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-InstallFromSubDir.cmake" : {
      "ObjectId" : "8615d6ecbc84fa640e2e6e6a4f46415ccb246853",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-InstallFromSubDir/CMakeLists.txt" : {
      "ObjectId" : "477d9381f0b14440a9535e94a0fc456e291f3dca",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-NAMELINK_COMPONENT-all-check.cmake" : {
      "ObjectId" : "bc9ebd192f3d1d0871cfc1d608ae81fbed11b595",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-NAMELINK_COMPONENT-bad-all.cmake" : {
      "ObjectId" : "701d0931c1b8144b5bb64e0332d5fb829d3cda53",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-NAMELINK_COMPONENT-bad-exc.cmake" : {
      "ObjectId" : "19c12d4bcc650adf34ecf1514fe4efc7b7631ed2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-NAMELINK_COMPONENT-dev-check.cmake" : {
      "ObjectId" : "5396cdbf393cf5a33c759874a4f53cf99765b7a9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-NAMELINK_COMPONENT-lib-check.cmake" : {
      "ObjectId" : "3f6be686c79933beec6688e284e5da6c5e787ff4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-NAMELINK_COMPONENT-uns-check.cmake" : {
      "ObjectId" : "0033c88e4736e22b2d8587323e5448886f206c80",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-NAMELINK_COMPONENT.cmake" : {
      "ObjectId" : "0e684e18469b501b7e911c81aa5d6537f1fd9937",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-OPTIONAL-all-check.cmake" : {
      "ObjectId" : "bcf71ddfee8800b4f586e6114e869c6d9a238db1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-OPTIONAL.cmake" : {
      "ObjectId" : "d3c5cdae2b6b91b9ea0b09ab026c7afcf87e2525",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-OUTPUT_NAME-all-check.cmake" : {
      "ObjectId" : "5daecc815d0c9e67eeca7e837f8beb16d94ee4d3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-OUTPUT_NAME.cmake" : {
      "ObjectId" : "67e7069411a1e8d25c69c6dc7146bc14abcc9da5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-Parts-all-check.cmake" : {
      "ObjectId" : "6245839fc66c15bfea8a0e00e30a116f4c3a84c0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-Parts.cmake" : {
      "ObjectId" : "2a46ab9a9d603591f658596baaa81bffe88087ed",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-RPATH-all-check.cmake" : {
      "ObjectId" : "fa52d65cff4b2f128701214f13079aa39b9fe882",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/TARGETS-RPATH.cmake" : {
      "ObjectId" : "b75deffff554b8d704fbe3eff8deed9fa3ded77d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/install_script.cmake" : {
      "ObjectId" : "1f8522c7062551a8d2cbd6725cbfb9743f76734a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/postinstall.cmake" : {
      "ObjectId" : "7607f40e178722a7f483233eafb5ddf655faf0f5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/install/preinstall.cmake" : {
      "ObjectId" : "4b28d1626fb258425dd853aa79aed3fe094181a1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/interface_library/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/interface_library/IMPORTED_LIBNAME-bad-value.cmake" : {
      "ObjectId" : "1af65b468a3f66b42305837e774b23ca1cafd1c5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/interface_library/IMPORTED_LIBNAME-non-iface.cmake" : {
      "ObjectId" : "fe6841a368093245c283bac6ed917183350cbb54",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/interface_library/IMPORTED_LIBNAME-non-imported.cmake" : {
      "ObjectId" : "07a67d7079fe5d37cdca3b6901671842165d9b15",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/interface_library/RunCMakeTest.cmake" : {
      "ObjectId" : "5a6af1da6870f71a07f8b03ef5d95270d75310db",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/interface_library/add_custom_command-TARGET.cmake" : {
      "ObjectId" : "a5136eff834427c8f945a6430f99a65792c1bb97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/interface_library/genex_link.cmake" : {
      "ObjectId" : "0dbf029feaf4f7a3297e0dafda4bb321bfe4b4f2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# When not using a generator expression here, no error is generated\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/interface_library/global-interface.cmake" : {
      "ObjectId" : "d2bfc64ed91cd14f0b30fe865a80a04311395e80",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/interface_library/invalid_name.cmake" : {
      "ObjectId" : "9a965aa8a0bb3a9f49c6afce03a2132f6184c5d1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/interface_library/invalid_signature.cmake" : {
      "ObjectId" : "4e53534b287100b4e62080c606e464cfca9daea9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_library(iface19 GLOBAL INTERFACE) Tested separately\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/interface_library/no_shared_libs.cmake" : {
      "ObjectId" : "ed81878cbe339e0b128111e23297f107ef943825",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/interface_library/target_commands.cmake" : {
      "ObjectId" : "3182e8933e543cb2834f46382cff68988960cb76",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/interface_library/whitelist.cmake" : {
      "ObjectId" : "bf64f01b004ba883ab4928d5674740f497967231",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Properties starting with `_` are allowed.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Properties starting with a lowercase letter are allowed.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/EmptyFilterRegex.cmake" : {
      "ObjectId" : "33849cd4a967fbacdd1863c507430b44d28b99c6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/EmptyGet0.cmake" : {
      "ObjectId" : "494710825fce04bc6ff4d5b22ffe1037f2930a59",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/EmptyInsert-1.cmake" : {
      "ObjectId" : "140da5d07a507c60d36c57001c11646dc9a6ace9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/EmptyRemoveAt0.cmake" : {
      "ObjectId" : "d6a3e85c6acc6d1472987e7867e4a61d9392b888",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/FILTER-NotList.cmake" : {
      "ObjectId" : "1e15635b94eafbb3f43374e153b125614a9c277a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/FILTER-REGEX-InvalidMode.cmake" : {
      "ObjectId" : "e02b9291a3eb8b15092cb06f7926eaca4d1ad7ad",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/FILTER-REGEX-InvalidOperator.cmake" : {
      "ObjectId" : "96246225e0f630ae38aacc49f8c1fe364ce59393",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/FILTER-REGEX-InvalidRegex.cmake" : {
      "ObjectId" : "0641062b5da80999499b937dc193a0efe8f45c3a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/FILTER-REGEX-TooManyArguments.cmake" : {
      "ObjectId" : "d9cd8eba5d855299fc76bb53d355eaa54510180a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/FILTER-REGEX-Valid0.cmake" : {
      "ObjectId" : "f395e61b05d2171689aff169b89ffc174755b541",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/FILTER-REGEX-Valid1.cmake" : {
      "ObjectId" : "e65928191fb7d0fd2d0a2a358116f25497d374f9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/GET-CMP0007-WARN.cmake" : {
      "ObjectId" : "833f3520489146d54986bab19c38c9f5bb7b76f8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/GET-InvalidIndex.cmake" : {
      "ObjectId" : "178295a209987145f8e869e6b3de5c4e179629e5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/INSERT-InvalidIndex.cmake" : {
      "ObjectId" : "12ac114cb78907e4a69c98fd1b45b28d5bb96b45",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/InvalidSubcommand.cmake" : {
      "ObjectId" : "f35a1181efaed7b006d4015fc847af0f0720e791",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/JOIN-NoArguments.cmake" : {
      "ObjectId" : "2ab449a97add7c06af51c14fde29ccab9dec5f6b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/JOIN-NoVariable.cmake" : {
      "ObjectId" : "b60d8f14f597dd2d102e3ec15859eef2543bc31f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/JOIN-TooManyArguments.cmake" : {
      "ObjectId" : "dc651f6c1011607adfd617ca2fd70813404d27db",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/JOIN.cmake" : {
      "ObjectId" : "24a623e6680f1030cb694353d8374b1c3daebeb3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/LENGTH-TooManyArguments.cmake" : {
      "ObjectId" : "327db6a84dc8f6f5aee1d9d9fc468304833391d4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/NoArguments.cmake" : {
      "ObjectId" : "7916aaaecc149fb2db3d4f02f3e939509fed2da6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/REMOVE_AT-InvalidIndex.cmake" : {
      "ObjectId" : "d4f3921263503c5243fb1e4d3f6057030acb215a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/REMOVE_AT-NotList.cmake" : {
      "ObjectId" : "5266c7fe99941cc1ff0ff4bfefd7c5b905574df7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/REMOVE_DUPLICATES-NotList.cmake" : {
      "ObjectId" : "218f2272cdaa246fac53c962e231db1486e2c758",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/REMOVE_DUPLICATES-TooManyArguments.cmake" : {
      "ObjectId" : "b5eb46e6446ee05a1c80e6c037f25f9b26f51982",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/REMOVE_ITEM-NotList.cmake" : {
      "ObjectId" : "079e7fbce2e5fa9d83d996622ac31554d107c2e3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/REVERSE-NotList.cmake" : {
      "ObjectId" : "977e2ccac17db143197806864b3bac6f000094b3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/REVERSE-TooManyArguments.cmake" : {
      "ObjectId" : "3a554a01aec6efcfe0d205a25245ce3390496574",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/RunCMakeTest.cmake" : {
      "ObjectId" : "a8a0b57178446f38d73429d39a22da66e6cfa220",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 'action' oriented tests\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 'selector' oriented tests\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 'output' oriented tests\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Successful tests\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# argument tests\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Successful tests\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/SORT-BadCaseOption.cmake" : {
      "ObjectId" : "ac5c102b6bdd28035a182f115e013600acec0ba7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/SORT-BadCompareOption.cmake" : {
      "ObjectId" : "d5c632e39dfd1bfb105d44eabad286f9b74c325e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/SORT-BadOrderOption.cmake" : {
      "ObjectId" : "e23219772a87820b36952c23e0e15653554b4ac2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/SORT-DuplicateCaseOption.cmake" : {
      "ObjectId" : "ba52b24103fc4e089b63018ba67fcf4a1dfec6d0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/SORT-DuplicateCompareOption.cmake" : {
      "ObjectId" : "fd2e31d1ef3174c550d6d54283174a49ad461e8c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/SORT-DuplicateOrderOption.cmake" : {
      "ObjectId" : "26d9c7d8a6edc3c3536160e5f193773fc4ad7e0e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/SORT-NoCaseOption.cmake" : {
      "ObjectId" : "57cc4292cceab7b01c4af80c38dd8c3d321459e3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/SORT-NotList.cmake" : {
      "ObjectId" : "8f48e104327b8b11d59b2cdab26cde61f7548104",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/SORT-TooManyArguments.cmake" : {
      "ObjectId" : "81b195d67b49d71c5a99efa6ff189d0ab45b4aa6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/SORT-WrongOption.cmake" : {
      "ObjectId" : "81b195d67b49d71c5a99efa6ff189d0ab45b4aa6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/SORT.cmake" : {
      "ObjectId" : "4a9e064dd7b5abd9ef24ef4452391a5788eb0d1d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Test with default options\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Test CASE INSENSITIVE ORDER ASCENDING COMPARE STRING\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Test CASE INSENSITIVE ORDER DESCENDING COMPARE STRING\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Test CASE SENSITIVE ORDER ASCENDING COMPARE STRING\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Test CASE SENSITIVE ORDER DESCENDING COMPARE STRING\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Test CASE INSENSITIVE ORDER ASCENDING COMPARE FILE_BASENAME\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Test CASE INSENSITIVE ORDER DESCENDING COMPARE FILE_BASENAME\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Test CASE SENSITIVE ORDER ASCENDING COMPARE FILE_BASENAME\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Test CASE SENSITIVE ORDER DESCENDING COMPARE FILE_BASENAME\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/SUBLIST-InvalidIndex.cmake" : {
      "ObjectId" : "565b9dc391917724dce92787567a0bd261a0f24c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/SUBLIST-InvalidLength.cmake" : {
      "ObjectId" : "1dab83f22562d2b6f43029e9b75a886224f0d941",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/SUBLIST-NoArguments.cmake" : {
      "ObjectId" : "df38b8780b72396bde30c42c0b97033ee587288e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/SUBLIST-NoVariable.cmake" : {
      "ObjectId" : "83edae9f30624a683c396542be4cda02ea307cb7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/SUBLIST-TooManyArguments.cmake" : {
      "ObjectId" : "28f20c120010d068a008c1c5fb7cc65621ef51d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/SUBLIST.cmake" : {
      "ObjectId" : "fd15c28447d3bd6f90f378b3ce9ed5303abfaa42",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-APPEND-NoArguments.cmake" : {
      "ObjectId" : "f1611870d5339bf8ed8dbe20488d3d4ac8e39d11",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-APPEND-TooManyArguments.cmake" : {
      "ObjectId" : "8430a4c8c1533d415e7ae4b9b9403feb9c2c163e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-APPEND.cmake" : {
      "ObjectId" : "96390882fe5d667b4ad2c180e62c24cbc8983b5c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-GENEX_STRIP-TooManyArguments.cmake" : {
      "ObjectId" : "257d7fe8ab1553f2568d86164ea39cb80350815f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-GENEX_STRIP.cmake" : {
      "ObjectId" : "8045eef6d284da898e371aa9d269326ed6f7247b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-InvalidAction.cmake" : {
      "ObjectId" : "fb2cc30d96bf4e738fada202ccdf0c174b080e11",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-NoAction.cmake" : {
      "ObjectId" : "3690f14360292f0e2db35be02b00d50ae7e58f28",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-Output-OUTPUT_VARIABLE-NoArguments.cmake" : {
      "ObjectId" : "acc4094842d02eb08474b49c70b8d8547702af59",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-Output-OUTPUT_VARIABLE-TooManyArguments.cmake" : {
      "ObjectId" : "c4da86416c3760ee75057cd686d92933e0d822e4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-PREPEND-NoArguments.cmake" : {
      "ObjectId" : "a8e453058765b800d3f232d5217471e8f3b3371a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-PREPEND-TooManyArguments.cmake" : {
      "ObjectId" : "1f904ad666aa3b0b735ec6516101fa0d67df4edb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-PREPEND.cmake" : {
      "ObjectId" : "55b8867d514b20091e012d5e71e40c993ac524ae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-REPLACE-InvalidRegex.cmake" : {
      "ObjectId" : "f440c35631f8ac3d5ffb3070d94e4649eb517262",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-REPLACE-InvalidReplace1.cmake" : {
      "ObjectId" : "35387f000d2006eec9160ef5f388b82f1d8666d0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-REPLACE-InvalidReplace2.cmake" : {
      "ObjectId" : "2f1f2c7e17f528ab0f69b71ae441a7190686bf57",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-REPLACE-NoArguments.cmake" : {
      "ObjectId" : "b7b1e9dd1fc8cc0d25e04914dc60ec8e7c525497",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-REPLACE-NoEnoughArguments.cmake" : {
      "ObjectId" : "1d418c00e9d89d6e266f3d336a67fd3c935cb967",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-REPLACE-TooManyArguments.cmake" : {
      "ObjectId" : "baed0af2796516d2a0b8b0b9d6d83e8603898ace",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-REPLACE.cmake" : {
      "ObjectId" : "256b1b8c624f02d2fcc9db091ebaa5b257d07e95",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-STRIP-TooManyArguments.cmake" : {
      "ObjectId" : "c6a8213142887594d2a152c03f966a4f34fd3b52",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-STRIP.cmake" : {
      "ObjectId" : "366c63a83c2fb3de93dfe5c9d69716d19a1585fa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-Selector-AT-BadArgument.cmake" : {
      "ObjectId" : "f61b86bc2dafcfb8708a09c4ef3f5386de72c31f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-Selector-AT-InvalidIndex.cmake" : {
      "ObjectId" : "d33586c36dc2519763c20cbf6b7f624db51cc499",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-Selector-AT-NoArguments.cmake" : {
      "ObjectId" : "052b79bbe4157af9827c990dca264aa4e63d5cd1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-Selector-FOR-BadArgument.cmake" : {
      "ObjectId" : "55527be216f86bfa56c8ac789a901c820b594510",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-Selector-FOR-InvalidIndex.cmake" : {
      "ObjectId" : "6e2374e3153fee779ea2c0ea32ec3cac14cc20e2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-Selector-FOR-NoArguments.cmake" : {
      "ObjectId" : "4902cc9a72ea393622707320e6e18b2174552f8e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-Selector-FOR-NoEnoughArguments.cmake" : {
      "ObjectId" : "81417de5707a5cb5dcb21eba8030ed010f7c3114",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-Selector-FOR-TooManyArguments.cmake" : {
      "ObjectId" : "80917d65a8a2f4535ef1e4c64c74af53cba5ed47",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-Selector-REGEX-InvalidRegex.cmake" : {
      "ObjectId" : "56e202bb4543eb1a8b5923813a92d5d8ba414382",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-Selector-REGEX-NoArguments.cmake" : {
      "ObjectId" : "f199d0e12a3eb30f8509e14ca352903e7bb83e7e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-Selector-REGEX-TooManyArguments.cmake" : {
      "ObjectId" : "4aa1619d7825ae96a8afcb52cbf733b0818edcfc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-TOLOWER-TooManyArguments.cmake" : {
      "ObjectId" : "1758e19e42ee618206ec1a77e79c71336d3fce39",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-TOLOWER.cmake" : {
      "ObjectId" : "a2d73480c42e8e0da544c6fbb88fa2569135a682",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-TOUPPER-TooManyArguments.cmake" : {
      "ObjectId" : "58d6a8cd7d1d875ecdc028f385796569776bba2a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/list/TRANSFORM-TOUPPER.cmake" : {
      "ObjectId" : "5b1fcb66e433db3b087d28199d3ac21ae8a5f932",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/math/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/math/MATH-DivideByZero.cmake" : {
      "ObjectId" : "3ac161e119e9fa635f15186e0afa5be9247e0385",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/math/MATH-DoubleOption.cmake" : {
      "ObjectId" : "7bcb78ec2a7fdacac9f4b197fedbc1cbe1268277",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/math/MATH-InvalidExpression.cmake" : {
      "ObjectId" : "6e37128d75f8aaa11d5168e1823bd9e217e43278",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/math/MATH-ToleratedExpression.cmake" : {
      "ObjectId" : "d1be218c818ed35c886264fbbd2b04d78b432adf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/math/MATH-TooManyArguments.cmake" : {
      "ObjectId" : "969dc80f0c1556c564bd1ebd88c5aa707739987e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/math/MATH-WrongArgument.cmake" : {
      "ObjectId" : "fb6d2e725d62f13c5296676fe2f0b483af54ccd9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/math/MATH.cmake" : {
      "ObjectId" : "a5f50cd9037c67fc5af4a9cda7e6da05dde18b06",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/math/RunCMakeTest.cmake" : {
      "ObjectId" : "a4d5c31df966ed35289ae3816c87f05b64ed98c1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/message/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/message/RunCMakeTest.cmake" : {
      "ObjectId" : "24dad039e2a088624d888e6d7712830eab85cdb2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# message command sets fatal occurred flag, so check each type of error\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# separately\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/message/defaultmessage.cmake" : {
      "ObjectId" : "427014d56abb3740220f17407e19e20893bd80f8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/message/errormessage_deprecated.cmake" : {
      "ObjectId" : "579275e9432f93c7e7276f6d99127105c30fa0a8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/message/errormessage_dev.cmake" : {
      "ObjectId" : "6ba11657fe67d7fa0f4b1c3004d29b8d7a512969",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/message/message-internal-warning.cmake" : {
      "ObjectId" : "33993c7ffcc28d80b086842c2027966c0cf2452e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/message/nomessage-internal-warning.cmake" : {
      "ObjectId" : "3ec2e28d78e6a7765577370b1a7bf2bc2f0c442f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/message/nomessage.cmake" : {
      "ObjectId" : "78f476945755ae5f6654669505444a29b49d49fb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/message/warnmessage.cmake" : {
      "ObjectId" : "53f2a436466f46aa38ca9721420ada5c50854266",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/no_install_prefix/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/no_install_prefix/RunCMakeTest.cmake" : {
      "ObjectId" : "292344999bc80829eb9a6a374a7d4f81129ef345",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/no_install_prefix/do_test.cmake" : {
      "ObjectId" : "340c7dcc9eec253c0ce09f0bdba22b0d5fc13c16",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/no_install_prefix/no_install_prefix.cmake" : {
      "ObjectId" : "c7d28daa8cb6a0306fcb592d6eefacaccd14b552",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/no_install_prefix/with_install_prefix.cmake" : {
      "ObjectId" : "c7d28daa8cb6a0306fcb592d6eefacaccd14b552",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/option/CMP0077-NEW.cmake" : {
      "ObjectId" : "d4c518b1e2c4f061be6fc69d1c45e2220d7504b5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Verify that option DOESN'T overwrite existing normal variable when the policy\n\n#is set to NEW\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/option/CMP0077-OLD.cmake" : {
      "ObjectId" : "4c52d4b922d28f6c824f621a5d7b5fb4d9c76069",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Verify that option overwrites existing normal variable when the policy\n\n#is set to OLD\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/option/CMP0077-SECOND-PASS.cmake" : {
      "ObjectId" : "f62a85370e28e0765e824ec0a141085beb3f9e27",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Verify that when both a cache and local version of a value exist that CMake\n\n#doesn't produce a CMP0077 warning and that we get the expected values.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/option/CMP0077-WARN.cmake" : {
      "ObjectId" : "7f994569f943daec8159adc275f86c10139dcb9a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Verify that option overwrites existing normal variable when the policy\n\n#is set to OLD\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/option/CMakeLists.txt" : {
      "ObjectId" : "11dc49a05e8e46ac50e5425d846cf6fa926e6891",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/option/RunCMakeTest.cmake" : {
      "ObjectId" : "979afa1ce5c6b1d4846e68ea1cfa1b13699d1f7e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/CMP0048-NEW.cmake" : {
      "ObjectId" : "7e16b7081830f94e652ca7665af2f80751dfd8fb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/CMP0048-OLD-VERSION.cmake" : {
      "ObjectId" : "6fbbe0a276695e00101703c897fbc4910db653c0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/CMP0048-OLD.cmake" : {
      "ObjectId" : "6c32d2cc4fc5e7da046bab38cb7ce35f974cbb0e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/CMP0048-WARN.cmake" : {
      "ObjectId" : "97359e64fdaaaf5df8c889998617ff61e2345797",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/ExplicitRC.cmake" : {
      "ObjectId" : "b3feaa9b86c6dc9f1b5399d39179001bdda2fd6e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/LanguagesEmpty.cmake" : {
      "ObjectId" : "4de2ccabd3460b1718cb4bd2d00deadd23391727",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/LanguagesImplicit.cmake" : {
      "ObjectId" : "e40845488d0a0efd0ac0c8ffa351ec6be91263c5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/LanguagesNONE.cmake" : {
      "ObjectId" : "2c0125f2274d56d5e1e4954a30b422d159385769",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/LanguagesTwice.cmake" : {
      "ObjectId" : "6c4a3dc9593eabb199e220204dcf02279b93894b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/LanguagesUnordered.cmake" : {
      "ObjectId" : "cd3ba28723311a31a2744072d96223f09b144dca",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/ProjectDescription.cmake" : {
      "ObjectId" : "3a47362231f14ff72221b41a6fb6e68a04910e03",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/ProjectDescription2.cmake" : {
      "ObjectId" : "3f186ba1955cead5f38d868fc67475a48afda9fb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/ProjectDescriptionNoArg.cmake" : {
      "ObjectId" : "25acff8408b20ce3fb090714de089b257ef2f72e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/ProjectDescriptionNoArg2.cmake" : {
      "ObjectId" : "f50a2f688aecbfc03f7b74b7904859a4e00c4d9c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/ProjectHomepage.cmake" : {
      "ObjectId" : "3307f1fc9dabfd11e2441f6a1d49f4e422d71308",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/ProjectHomepage2.cmake" : {
      "ObjectId" : "184c392c4aeeaf8a34a299f5a8a01aa13106846a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/ProjectHomepageNoArg.cmake" : {
      "ObjectId" : "460554194b518130e36f0ed093c5b84bb4e2b4d5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/ProjectTwice.cmake" : {
      "ObjectId" : "d053834dc47647937b262ec1ee99d60bd265be18",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/RunCMakeTest.cmake" : {
      "ObjectId" : "3a8ad4bbf0efe66f19861d229877b130d13a6820",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/VersionAndLanguagesEmpty.cmake" : {
      "ObjectId" : "d6056ce1b70a654f2fe607c48468e5a6fb68275e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/VersionEmpty.cmake" : {
      "ObjectId" : "0cfb29140f1da3ba90679db92004badfb5a8075f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/VersionInvalid.cmake" : {
      "ObjectId" : "8d5dd7f255b0bb8cd81df241e9ee27f7609875c9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/VersionMissingLanguages.cmake" : {
      "ObjectId" : "dc415141c85b77e8e98d1a31b77eb453b7ede4d8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/VersionMissingValueOkay.cmake" : {
      "ObjectId" : "1fb1437501f9fe692e1e7c3bf790d9aebec6b068",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project/VersionTwice.cmake" : {
      "ObjectId" : "dc0c996cfa94f689b98b6a9aa0b17fbd3e53e57c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project_injected/CMP0048-WARN.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project_injected/CMakeLists.txt" : {
      "ObjectId" : "1b4931b8fcefa1de78a059c33cdad57742f997f7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# old enough to not set CMP0048\n",
        "Line" : 1,
        "CharPositionInLine" : 41
      },
      "1" : {
        "Text" : "# no project(${RunCMake_TEST} NONE)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/project_injected/RunCMakeTest.cmake" : {
      "ObjectId" : "ba1a003778d30a46de25b5ef76d2f58eb7b2ef8b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Simulate a previous CMake run that used `project(... VERSION ...)`\n\n# in a non-injected call site.\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/return/CMakeLists.txt" : {
      "ObjectId" : "ef2163c298341fcdf0c2afd89dd4234a4b8b21d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/return/ReturnFromForeach.cmake" : {
      "ObjectId" : "c71cf33d1f025db1f1ce6d2529414a0219c1ee72",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/return/RunCMakeTest.cmake" : {
      "ObjectId" : "2cc6c9d328275f42cd05d8426e1785cbc39ecc34",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/separate_arguments/CMakeLists.txt" : {
      "ObjectId" : "289710955440b63a5c0eb79b4596ac0f88b9bfa2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/separate_arguments/EmptyCommand.cmake" : {
      "ObjectId" : "895b6ac2eea0ccf7b498869dc9c315eff52fca10",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/separate_arguments/NativeCommand.cmake" : {
      "ObjectId" : "1cb009e9f06daee9b604090f35ab3a3b21fb64b0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/separate_arguments/PlainCommand.cmake" : {
      "ObjectId" : "311a99378c06ab0730c4d87b310806effe63c242",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/separate_arguments/RunCMakeTest.cmake" : {
      "ObjectId" : "07951bb5973bd22ae3b435c66a3d1d8764763c45",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/separate_arguments/UnixCommand.cmake" : {
      "ObjectId" : "0b5767ac5b1b9b4867edb9ac2bc55be95f5615d9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/separate_arguments/WindowsCommand.cmake" : {
      "ObjectId" : "86aa14ad060c71eb30d1dd97b33ac5a22dccb1ee",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/set/CMakeLists.txt" : {
      "ObjectId" : "4b3de84d9499354e47d5ed61c196a2d65fa9e2c7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/set/ParentPulling.cmake" : {
      "ObjectId" : "2614533f4e7a7416f2ab9145fe6eab97f0afac57",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/set/ParentPullingRecursive.cmake" : {
      "ObjectId" : "a3e29f5b87ca0bc3c59d59af0940ea8064ce485c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pull the value in implicitly.\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Pull it down explicitly.\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Set values for inner to manipulate.\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Do what inner does so that we can test the values that inner should have\n\n# pulled through to here.\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# variable name is:\n\n#\n\n#    <upscope>_<pulltype>_<downscope>_<settype>\n\n#\n\n# where the value is the name of the scope it was set in. The scopes available\n\n# are \"top\", \"outer\", and \"inner\". The pull type may either be \"implicit\" or\n\n# \"explicit\" based on whether the pull is due to a variable dereference or a\n\n# PARENT_SCOPE setting. The settype is \"set\" where both scopes set a value,\n\n# \"unset\" where upscope unsets it and downscope sets it, and \"tounset\" where\n\n# upscope sets it and downscope unsets it.\n\n#\n\n# We test the following combinations:\n\n#\n\n#   - outer overriding top's values;\n\n#   - inner overriding top's values;\n\n#   - inner overriding outer's values; and\n\n#   - outer overriding inner's values in top after inner has run.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set values for inner to manipulate.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set values for outer to manipulate.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/set/ParentScope.cmake" : {
      "ObjectId" : "9bd6bcace2d947005b53f9d121b0c5079df994cd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/set/RunCMakeTest.cmake" : {
      "ObjectId" : "b8e8cf1f9c1de2b0e1505f55b7bcbec56ecaaa89",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/set_property/CMakeLists.txt" : {
      "ObjectId" : "18dfd2686f63fed35d3e7940d69512d8fd0ed2e3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/set_property/COMPILE_DEFINITIONS.cmake" : {
      "ObjectId" : "f0c63bf0fe0c7db4299a7adac6a0824899fe92c5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/set_property/COMPILE_FEATURES.cmake" : {
      "ObjectId" : "1ab52ef9d43acb504e96aa7e9c442343662f27e8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/set_property/COMPILE_OPTIONS.cmake" : {
      "ObjectId" : "75f05354125e1337f74edcbb10b7aad329960792",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/set_property/Common.cmake" : {
      "ObjectId" : "9d5e4f4e81e759b8e2ce2abf6066704c42f12a08",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/set_property/IMPORTED_GLOBAL.cmake" : {
      "ObjectId" : "08308ebaee1818f45d256fadfdb0a5cbd47607a1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Changing property on IMPORTED target created with `GLOBAL` option.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Appending property is never allowed!\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Changing property on IMPORTED target created without `GLOBAL` option.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Setting property on non-IMPORTED target is never allowed!\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Local IMPORTED targets can only be promoted from same directory!\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Note: The value should not have changed. However, it does change because the\n\n# check for the same directory comes after it was changed! (At least, that is\n\n# not really bad because the generation will fail due to this error.)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Global IMPORTED targets from subdir are always visible\n\n# no matter how they became global.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Changing property on IMPORTED target from subdir is never possible.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/set_property/IMPORTED_GLOBAL/CMakeLists.txt" : {
      "ObjectId" : "468bf781c4c7130b50217fb0a4696698b942de54",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Extend visibility of ImportedSubdirTarget2 to global scope.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Only targets from the same directory can be promoted.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/set_property/INCLUDE_DIRECTORIES.cmake" : {
      "ObjectId" : "c9a91516a0461bd5a0d199d34e2462ae71bc5837",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/set_property/LINK_DIRECTORIES.cmake" : {
      "ObjectId" : "8529ef5b2730a99d044a5b7efb22c85da3dce122",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/set_property/LINK_LIBRARIES.cmake" : {
      "ObjectId" : "5155f59c451df7c5f947527b62947582772777d2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/set_property/LINK_OPTIONS.cmake" : {
      "ObjectId" : "6daf41b49267c37339719820152ebe8460f7ff6a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/set_property/RunCMakeTest.cmake" : {
      "ObjectId" : "8d4614c5d808849b39c1967b4277db408ea251ee",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/set_property/SOURCES.cmake" : {
      "ObjectId" : "820641e006738a159947406b9d253190e43db64f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/set_property/TYPE.cmake" : {
      "ObjectId" : "84812660ddb0f92972b93faad8ea68d44e082c16",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/set_property/USER_PROP.cmake" : {
      "ObjectId" : "aa0aa83704b667d54b5191a1dee07fd5e970eb4b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/set_property/USER_PROP_INHERITED.cmake" : {
      "ObjectId" : "2429866ed04fb323ca5837bc00278ac60beacb3f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Needed for source property tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=================================================\n\n# Directory property chaining\n\n#=================================================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=================================================\n\n# The other property types all chain the same way\n\n#=================================================\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/set_property/USER_PROP_INHERITED/CMakeLists.txt" : {
      "ObjectId" : "234f4ee5d37876e553146f10a75e51a0da101f07",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/Append.cmake" : {
      "ObjectId" : "2634274bf5cc554bfe4f40721d2739f90cf59f9f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/AppendNoArgs.cmake" : {
      "ObjectId" : "f54fb771909f355f17369525b0febd93411961d9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/Concat.cmake" : {
      "ObjectId" : "7260c95dd26a0341c40d24cd6535b8e519513632",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/ConcatNoArgs.cmake" : {
      "ObjectId" : "ba21136621282a6ea3b6eae2a0233fd6b315878a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/Join.cmake" : {
      "ObjectId" : "081f1e4fc0833266a712f3bea060c33c28dc9fd5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/JoinNoArgs.cmake" : {
      "ObjectId" : "35ba4d9ddb77b1ec12ef29fd362805f0056ac824",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/JoinNoVar.cmake" : {
      "ObjectId" : "35f7b927272934fa2d9f2f12d95f8ef5a8554f5c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/Prepend.cmake" : {
      "ObjectId" : "8eaeebb46a49aeb877efce0213d4ff5bca14fcff",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/PrependNoArgs.cmake" : {
      "ObjectId" : "f324f285400f2ec1f2423b587952bb1fe59b8f3f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/RegexClear.cmake" : {
      "ObjectId" : "d5edaacd6e474c01f1cfd4f021001da07c6eef54",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ensure cmMakefile::PushScope/PopScope work.\n",
        "Line" : 46,
        "CharPositionInLine" : 20
      },
      "1" : {
        "Text" : "# Ensure that the subdir didn't mess with this scope.\n",
        "Line" : 54,
        "CharPositionInLine" : 81
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/RegexMultiMatchClear.cmake" : {
      "ObjectId" : "80b6b3c7b47f834b1f2f2a10f0488702c2e018cd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/RunCMakeTest.cmake" : {
      "ObjectId" : "211337aa5c7611265f05137fe6b38c666904d1e7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/Timestamp.cmake" : {
      "ObjectId" : "cba258d12bf4582517328e1be5142ed55b1eb5b5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/TimestampEmpty.cmake" : {
      "ObjectId" : "21b770fd6c01b89bd286e03992b8f2d357bbc2ba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/TimestampInvalid.cmake" : {
      "ObjectId" : "ab362708aae137273c6e6a635c45b3c6f4d60654",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/TimestampInvalid2.cmake" : {
      "ObjectId" : "5cc61b8b149969763acabc9fa471067f07bba488",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/UTF-16BE.cmake" : {
      "ObjectId" : "da986c0ccaff3e68b9504682640df85a0f57ee8d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/UTF-16LE.cmake" : {
      "ObjectId" : "326d848d2d0d73d4077addddc4945eda96e575fc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/UTF-32BE.cmake" : {
      "ObjectId" : "debdeaa73183af3619b61c99ab2bdae71ec15f28",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/UTF-32LE.cmake" : {
      "ObjectId" : "22aab5f2408632d50203eeeaa1a95f8528c03127",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/Uuid.cmake" : {
      "ObjectId" : "2613d2682ca6da094966ec4e0734d41b9811d1e8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/UuidBadNamespace.cmake" : {
      "ObjectId" : "f6079252b9d7b5ef913d732de4cac66dea2974fd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/UuidBadType.cmake" : {
      "ObjectId" : "bf4909e9cefedec5c4bada6bdace8f1639f50618",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/UuidMissingNameValue.cmake" : {
      "ObjectId" : "407a1d7f8f43aba3cba0b75e1a6ee410f895f2c1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/UuidMissingNamespace.cmake" : {
      "ObjectId" : "5a71e4f70a6cfbdcace92d1edc9e22259b2f6bf0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/UuidMissingNamespaceValue.cmake" : {
      "ObjectId" : "f2219c0ffbc08a6e8a68afbf15f8595df7555d5e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/UuidMissingTypeValue.cmake" : {
      "ObjectId" : "6678a4658fbf8ea38bb76e886ec38babd1bdd370",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/cmake/Finddummy.cmake" : {
      "ObjectId" : "4cbc1fb4bb269301412c72696e664141d0594ab9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/string/subdir/CMakeLists.txt" : {
      "ObjectId" : "5573308925f25c86b1597bf6922bdbd4683a04e7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_compile_features/CMakeLists.txt" : {
      "ObjectId" : "289710955440b63a5c0eb79b4596ac0f88b9bfa2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_compile_features/RunCMakeTest.cmake" : {
      "ObjectId" : "1f67f11a096a2b5b781e228ddd0f3d19eb8636d4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_compile_features/alias_target.cmake" : {
      "ObjectId" : "6fcdadaa594d07d487039a014ad9158209300973",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_compile_features/cxx_not_enabled.cmake" : {
      "ObjectId" : "b7e91196e4ee08a438818480b60671b1d84d21c2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_compile_features/imported_target.cmake" : {
      "ObjectId" : "e410ace2a17d49e8c038e4598a0ea4f2bff07efc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_compile_features/invalid_args.cmake" : {
      "ObjectId" : "cc051a445d2d0f119aadeef85d3084c42f9b16d7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_compile_features/invalid_args_on_interface.cmake" : {
      "ObjectId" : "49d2d827dd0e27a9160385ac5d38d1020ec24d9c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_compile_features/no_matching_c_feature.cmake" : {
      "ObjectId" : "0e93b41ffcf4d911dbbe0a1baedf6918c79b3f73",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Simulate passing the test.\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_compile_features/no_matching_cxx_feature.cmake" : {
      "ObjectId" : "4ee3445e85beafb56f901e0bbddf3e7034763865",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Simulate passing the test.\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# If a compiler supports both extensions, remove one of them.\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_compile_features/no_target.cmake" : {
      "ObjectId" : "a514de86a74956dd8affc6da70326d26aa82f420",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_compile_features/not_a_c_feature.cmake" : {
      "ObjectId" : "f5d70d0935e9ea7c82bdcf925e93f303bf5eebb2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_compile_features/not_a_cxx_feature.cmake" : {
      "ObjectId" : "bc3a8c4f68caf4fb05df8191745bfaba46e4ca2c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_compile_features/not_enough_args.cmake" : {
      "ObjectId" : "f5b719863c2ec352add48f30b6b23a8ba412e3bf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_compile_features/utility_target.cmake" : {
      "ObjectId" : "8919056518b7026fe802fab6a4f64ac4134f2498",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/CMP0023-NEW-2.cmake" : {
      "ObjectId" : "f8b354690c6d7dd10566f110234ee892ab184c0c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/CMP0023-NEW.cmake" : {
      "ObjectId" : "f0aa63fbd41db84d71eec6c1d8c9984fb62f8978",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/CMP0023-WARN-2.cmake" : {
      "ObjectId" : "2e9cba82c33c66e0f2fc7087427605ecfe5c9717",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/CMP0023-WARN.cmake" : {
      "ObjectId" : "fcc8da03e95689c834dca866959d8e7200c5bd69",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/CMP0079-iface-NEW.cmake" : {
      "ObjectId" : "82486c42cd702a505ee38b76e25693460ef6f44e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/CMP0079-iface-OLD.cmake" : {
      "ObjectId" : "e04a2bb53ddc61c78cc578a2fcfb07cb50213629",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/CMP0079-iface-WARN.cmake" : {
      "ObjectId" : "2041893c86782f764ec9efa24264ddc454ab1953",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/CMP0079-iface-common.cmake" : {
      "ObjectId" : "3982ff264ca03e567c53ad19bb8bc88b5b511e56",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/CMP0079-iface/CMakeLists.txt" : {
      "ObjectId" : "4b15b329bcaac3544095d69d0d2e13b132cabf21",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/CMP0079-link-NEW-bogus.cmake" : {
      "ObjectId" : "8622f14e7f385fa43a28b4dadce94ca8c988db6c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/CMP0079-link-NEW.cmake" : {
      "ObjectId" : "72e45749474034af27a0829d34c4b37f7dbe933c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/CMP0079-link-OLD.cmake" : {
      "ObjectId" : "caa7231b7139749ee4700ec6ecd7f0db5f5dff6f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/CMP0079-link-WARN.cmake" : {
      "ObjectId" : "e83818a9d51d64dc4e4daab43884d875f2467042",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/CMP0079-link-common.cmake" : {
      "ObjectId" : "4f9454f0a594c45166b436d4408bff5e3de790e9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/CMP0079-link/CMakeLists.txt" : {
      "ObjectId" : "8b2b3c94f28f8771990df8bd267c8dcfeb808b8e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/CMakeLists.txt" : {
      "ObjectId" : "8f85fbf5402f5875ba03ffe8df8093fef7f997e1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/ImportedTarget.cmake" : {
      "ObjectId" : "e5ec3f6b6d6711ed8b666629f3016ac4c99ae4f6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/ImportedTargetFailure.cmake" : {
      "ObjectId" : "3ac0aa98134afa54c2ffe84e6f79097f9174e27f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/MixedSignature.cmake" : {
      "ObjectId" : "fa7068584849c8ed111c82b7f02242ce03e62412",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/RunCMakeTest.cmake" : {
      "ObjectId" : "a041d6d4e712a34919e8189caf63f10172967dda",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/Separate-PRIVATE-LINK_PRIVATE-uses.cmake" : {
      "ObjectId" : "e32891d6dd6899862c6753fac42aac089e96c0ac",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/SharedDepNotTarget.cmake" : {
      "ObjectId" : "bab537edbc0b9c241c4d946c5f89ad7f0dff01ba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/StaticPrivateDepNotExported.cmake" : {
      "ObjectId" : "9b97918a5769a3d5a99051379b4847835c3dd99f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/StaticPrivateDepNotTarget.cmake" : {
      "ObjectId" : "7122ae91ed148deb966198023f5d6bc05c230d8a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/SubDirTarget.cmake" : {
      "ObjectId" : "32431cecc029abaf441416e7498c74c3c254442a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/SubDirTarget/CMakeLists.txt" : {
      "ObjectId" : "b0b23809a656248dbb5c2b2d1fbcafbd33b0e86e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_libraries/UNKNOWN-IMPORTED-GLOBAL.cmake" : {
      "ObjectId" : "f52fa30bc836ef518a82fd611c4177d94248ad00",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_options/CMakeLists.txt" : {
      "ObjectId" : "14ef56e8e87dc838b66333eca696822c30298567",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_options/LINKER_expansion-LINKER-check.cmake" : {
      "ObjectId" : "d0ef8de8522c2eeadf3c9b76d940fe14d385b2a2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_options/LINKER_expansion-LINKER_SHELL-check.cmake" : {
      "ObjectId" : "d0ef8de8522c2eeadf3c9b76d940fe14d385b2a2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_options/LINKER_expansion-validation.cmake" : {
      "ObjectId" : "1af8f13a32965d477d2bba470331f7b116ab6946",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_options/LINKER_expansion.cmake" : {
      "ObjectId" : "b3448679df28a84e406bc9d03c624c4eed2d4e98",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ensure no temp file will be used\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use LINKER alone\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use LAUNCH facility to dump linker command\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use LINKER with SHELL\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# use LAUNCH facility to dump linker command\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# generate reference for LINKER flag\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_options/LINK_OPTIONS-basic-check.cmake" : {
      "ObjectId" : "77995061077772c76b8d8b337923cb9c18f9c472",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_options/LINK_OPTIONS-exe-check.cmake" : {
      "ObjectId" : "a686de945a34a139d85c18e7e01c1d729d960fa1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_options/LINK_OPTIONS-interface-check.cmake" : {
      "ObjectId" : "6c5ffdb364da710a57099d046873255d3f2b5fa3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_options/LINK_OPTIONS-interface-static-check.cmake" : {
      "ObjectId" : "6c5ffdb364da710a57099d046873255d3f2b5fa3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_options/LINK_OPTIONS-mod-check.cmake" : {
      "ObjectId" : "a686de945a34a139d85c18e7e01c1d729d960fa1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_options/LINK_OPTIONS-shared-check.cmake" : {
      "ObjectId" : "a686de945a34a139d85c18e7e01c1d729d960fa1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_options/LINK_OPTIONS-static-check.cmake" : {
      "ObjectId" : "b68e451750b75b79fdcc43a64ac3ccec93755322",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_options/LINK_OPTIONS.cmake" : {
      "ObjectId" : "bb048412e8ae8babc410c597e38da8d989bf9054",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# basic configuration\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# INTERFACE_LINK_OPTIONS\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# static library with INTERFACE_LINK_OPTIONS\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# static library with generator expression\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# produces no options\n",
        "Line" : 37,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# shared library with generator expression\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# produces no options\n",
        "Line" : 44,
        "CharPositionInLine" : 11
      },
      "7" : {
        "Text" : "# module library with generator expression\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# executable with generator expression\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_options/RunCMakeTest.cmake" : {
      "ObjectId" : "1eaa5d2ff22ac4cdeae678dbd28c4390a0b47f46",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Intel compiler does not reject bad flags or objects!\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/target_link_options/bad_SHELL_usage.cmake" : {
      "ObjectId" : "b0adf19369c270b5bde2c861dd6f1123408aebc3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/test_include_dirs/CMakeLists.txt" : {
      "ObjectId" : "dc924869733de74ad995c052229ead7c866fdccc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/test_include_dirs/RunCMakeTest.cmake" : {
      "ObjectId" : "72056aee36fd125c144e1fb000481be261eb1ba2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/test_include_dirs/TID.cmake" : {
      "ObjectId" : "1e74f90fe0d355dc5be7cfa9bbf76fd4df4fb92f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/test_include_dirs/add-tests.cmake" : {
      "ObjectId" : "e74665acc9d5b34e8d481e82ae692843e0a34c68",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/BadLinkLibraries.cmake" : {
      "ObjectId" : "e8b5add873c9a9ab93d25a6a527380a9c628c222",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/BadSources1.cmake" : {
      "ObjectId" : "aa4dc5ee5e11deb4a9861dde7c1e73ee2bfc5396",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/BadSources2.cmake" : {
      "ObjectId" : "ed2b0364d28d9e9a430680740ed6a09079a6d54a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/CMP0056.cmake" : {
      "ObjectId" : "e8d3d4a3bdb6b54bdcfabdd879d5e6b73cc8ed32",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/CMP0066.cmake" : {
      "ObjectId" : "4b95251a01c9169728f0c549f838ac03b8a222c0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/CMP0067.cmake" : {
      "ObjectId" : "dd05d96e6edfc201b60ae79eca451f128ba04ba5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/CStandard.cmake" : {
      "ObjectId" : "2849ed4fd360b314b2f6f93d8776664bdc242b71",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/CStandardGNU.cmake" : {
      "ObjectId" : "79ae8744502cf93623a60bf8e84f1c4eea778984",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/CStandardNoDefault.cmake" : {
      "ObjectId" : "97e72ea40c4882f555a17b127e8878db599c4f85",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# bogus, but not used\n",
        "Line" : 4,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/CopyFileErrorNoCopyFile.cmake" : {
      "ObjectId" : "8d7cb0e7f0c5833bfebb979385881b9551120597",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/CudaStandard.cmake" : {
      "ObjectId" : "96da422c6467725349a05c5cf8decb4f5aa78d80",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/CudaStandardNoDefault.cmake" : {
      "ObjectId" : "ea22152c0d8a7fa2d90fd52ef07dc4e9a937ce09",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# bogus, but not used\n",
        "Line" : 4,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/CxxStandard.cmake" : {
      "ObjectId" : "bcb49b9b3cb4e15c84bf3c55a1c79209a91f30f7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/CxxStandardGNU.cmake" : {
      "ObjectId" : "e714fe4d01628bcf72295b749a57dee1fd646bae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/CxxStandardNoDefault.cmake" : {
      "ObjectId" : "35caa9d0943a55047d205b6467554ef85f43dd3d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# bogus, but not used\n",
        "Line" : 4,
        "CharPositionInLine" : 17
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/NoArgs.cmake" : {
      "ObjectId" : "8f751d9a223262d5278e7cceecdec22fad18b807",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/NoCopyFile.cmake" : {
      "ObjectId" : "8c648ff3287397c67b2ec4d620d558d2641178e1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/NoCopyFile2.cmake" : {
      "ObjectId" : "04b7f688299fbeceddf1973a530a3ad11d4c53a8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/NoCopyFileError.cmake" : {
      "ObjectId" : "d4d69ee018fe9a15af2861d66043f9a371afd09a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/NoOutputVariable.cmake" : {
      "ObjectId" : "3b9cb345b2c2141e931635296f443af3368a91ab",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/NoOutputVariable2.cmake" : {
      "ObjectId" : "ad9ac9ac5f475370b59eceb1b124c03d0b5c561a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/NoSources.cmake" : {
      "ObjectId" : "8a73af42c5e1fc41a828ec3e5e87af63bb9ab58d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/NonSourceCompileDefinitions.cmake" : {
      "ObjectId" : "8eb0d47a0a76133be0791822083f968abab57887",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/NonSourceCopyFile.cmake" : {
      "ObjectId" : "c44192f9e37a3a64350ff252f359deb5a16fdf0f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/OneArg.cmake" : {
      "ObjectId" : "e60a46207aff048313dab46c4eccd8daeb12b552",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/PlatformVariables.cmake" : {
      "ObjectId" : "54da645734d6b835b41fed0c638009fdce7e8816",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Normally this variable should be set by a platform information module or\n\n# a toolchain file, but for purposes of this test we simply set it here.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check that the cache was populated with our custom variable.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/RerunCMake.cmake" : {
      "ObjectId" : "5a9f1d41daee9f41a871c5a5865eb40610b79c96",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# write to stderr if cmake reruns\n",
        "Line" : 1,
        "CharPositionInLine" : 39
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/RunCMakeTest.cmake" : {
      "ObjectId" : "6a1bc64c028ae01b01067bc3b00f016ef25059b6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use a single build tree for a few tests without cleaning.\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Older Ninja keeps all rerun output on stdout\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle 1s resolution\n",
        "Line" : 79,
        "CharPositionInLine" : 55
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/TargetTypeExe.cmake" : {
      "ObjectId" : "9b6e7272f93930e22906b07edbf6f9e0475e9a52",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/TargetTypeInvalid.cmake" : {
      "ObjectId" : "0bbc4ac82f5af02b907c45cbd8d92cc8d3ca4483",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/TargetTypeStatic.cmake" : {
      "ObjectId" : "006b8b89803621fd6dfcf5c8f62c16acbe62e058",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/TwoArgs.cmake" : {
      "ObjectId" : "7f2212d62d25a901e9adbfb48ffd58accf48043b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/WarnDeprecated.cmake" : {
      "ObjectId" : "dfcb5f903b31a997475f74ab4d8c66bb9f9b56a7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check that the cache was populated with our custom variable.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_compile/proj/CMakeLists.txt" : {
      "ObjectId" : "78a87c016ef4a3b960ad21891e6de5b034c3aefe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_run/BadLinkLibraries.cmake" : {
      "ObjectId" : "a124bf6e19220390ee4511e180186b1548525429",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_run/CMakeLists.txt" : {
      "ObjectId" : "e03478039afd0ec4378c2ea4aafceb22336f80d7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/try_run/RunCMakeTest.cmake" : {
      "ObjectId" : "1ec9a55aa84d14d7d08050b2bc68a05315736636",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/variable_watch/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/variable_watch/ModifiedAccess.cmake" : {
      "ObjectId" : "87943b39f1fafddd430e5e4fb5f5dc43cec930c7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/variable_watch/ModifyWatchInCallback.cmake" : {
      "ObjectId" : "1dee8375a577630397279d3afdec9701e3ff1c41",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/variable_watch/NoWatcher.cmake" : {
      "ObjectId" : "8a68efbe429ba53334682b2b429d36a72bc7f5b9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/variable_watch/RaiseInParentScope.cmake" : {
      "ObjectId" : "207798e4b0efb32d3fba7341066efc0b2d71f6cc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# --------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/variable_watch/RunCMakeTest.cmake" : {
      "ObjectId" : "3883999c6ab967c532d52e1eb04559eb76d7d242",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/variable_watch/WatchTwice.cmake" : {
      "ObjectId" : "540cfc160c818fe850668f0e5c9cf21ff9e94f8a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/while/CMakeLists.txt" : {
      "ObjectId" : "12cd3c77577bcfb2187bd283bd974466debcfc67",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/while/EndAlone.cmake" : {
      "ObjectId" : "82c09a07bfdd893fe3dafc0a67e8e36f813c6625",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/while/EndAloneArgs.cmake" : {
      "ObjectId" : "886d98c7c6f06058dce5f01a00323fb537673a0d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/while/EndMismatch.cmake" : {
      "ObjectId" : "5c338d697440f87695c2f7e89de1ed0f962bf5e9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/while/EndMissing.cmake" : {
      "ObjectId" : "1abaaaf2b19a1527f715df386f7dd23d56bde597",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/while/MissingArgument.cmake" : {
      "ObjectId" : "32eaa2698f697abb3874ef33b214e366e47ac533",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RunCMake/while/RunCMakeTest.cmake" : {
      "ObjectId" : "7da80ace3082866c6efd60cdbdf363ec76c0001e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/RuntimePath/CMakeLists.txt" : {
      "ObjectId" : "6583a8712817489840f27650a18004582973fe0b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add a simple chain of shared libraries that must be found.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add a library that provides a conflicting location to make sure\n\n# rpath ordering works.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add a library that would provide a conflicting location if not for\n\n# soname analysis in rpath ordering.  This will also break the old\n\n# link directory ordering to make sure files are linked with full\n\n# paths.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/SBCS/CMakeLists.txt" : {
      "ObjectId" : "b3c3c2cfcb771c37a48c28bd3c59fcab0e8d6597",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a SBCS test case\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/SameName/CMakeLists.txt" : {
      "ObjectId" : "d78879dd9571240e42abc72bd452d382e82b7298",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SameName/Exe1/CMakeLists.txt" : {
      "ObjectId" : "b9182f2097de86db809c543ec5603b174751e723",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a target with the same name as a target in a different dir\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# and two targets in the same dir with the same name\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/SameName/Lib1/CMakeLists.txt" : {
      "ObjectId" : "40fa15422e994649284cee710e8bc744fdfc73de",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Server/CMakeLists.txt" : {
      "ObjectId" : "8321edb1dc3471f405f23e99b085be555289510c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# no .pyc files\n",
        "Line" : 8,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/Server/buildsystem1/CMakeLists.txt" : {
      "ObjectId" : "d690472d1b519bff21277c494bc0a145762d82c1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Server/buildsystem1/subdir/CMakeLists.txt" : {
      "ObjectId" : "9157312865baecc97d723e354048a89c16c4a146",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SetLang/CMakeLists.txt" : {
      "ObjectId" : "f24e5cb5df33eef4efa6950e3ddd15b06a936d44",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test forcing a source file language to c++ from c\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# force this to be verbose so I can debug a dashboard entry\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/Simple/CMakeLists.txt" : {
      "ObjectId" : "a951c2da21ae8092418cc5103a1863af0b39a061",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a simple test case\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make sure optimized libs are not used by debug builds\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/SimpleCOnly/CMakeLists.txt" : {
      "ObjectId" : "fb247790f0169123745025ac5d34a4ab2fa4d611",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this enables only C, i.e. disables C++\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# and some check, just to make sure it works:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# make sure optimized libs are not used by debug builds\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/SimpleExclude/CMakeLists.txt" : {
      "ObjectId" : "baca23e39bbfbda5ff3fab0f49e5d157fd7e9de9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SimpleExclude/dirC/CMakeLists.txt" : {
      "ObjectId" : "cf33f5aa25f7360df7b85fe990744301d989a6dd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SimpleExclude/dirC/dirA/CMakeLists.txt" : {
      "ObjectId" : "52fac81833ba3a8c76b2e88071a0245a2e7fa090",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SimpleExclude/dirC/dirB/CMakeLists.txt" : {
      "ObjectId" : "297f4873ce8c51ae6296922976cbb6acf8641076",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SimpleExclude/dirD/CMakeLists.txt" : {
      "ObjectId" : "44b8c27b6854a22f170121b788b313956fb0521c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SimpleInstall/CMakeLists.txt" : {
      "ObjectId" : "f8068b14315fdcde12c5ddad77e824b780fce406",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Skip generating the rpath pointing at the build tree to make sure\n\n# the executable is installed with the proper rpath in the install\n\n# tree.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure the executable can run from the install tree.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Skip the dependency that causes a build when installing.  This\n\n# avoids infinite loops when the post-build rule below installs.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure the install script ran.\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Test importing a library found on disk.\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check for failure of configuration-specific installation.\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Check for failure of directory installation.\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Check that scripts properly installed.\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Check for failure of empty directory installation.\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Make sure the test executable can run from the install tree.\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# try to import the exported targets again\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Wipe out the install directory to do a fresh test.\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# this is stage 1, so create libraries and modules and install everything\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Test <ARCHIVE|LIBRARY|RUNTIME>_OUTPUT_NAME properties.\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Disable VERSION test until it is implemented in the Xcode generator.\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Make sure the test executable can run from the install tree.\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Test per-configuration output name.\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# .exe, .dll\n\n# .so, mod.dll\n\n# .a, .lib\n",
        "Line" : 200,
        "CharPositionInLine" : 64
      },
      "18" : {
        "Text" : "# for coverage...target should always exist\n",
        "Line" : 210,
        "CharPositionInLine" : 13
      },
      "19" : {
        "Text" : "# Test old-style install commands.\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# \"export\" the targets collected in \"SimpleInstallS1\"\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Test optional installation.\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Test configuration-specific installation.\n",
        "Line" : 243,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Test directory installation.\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Alternate directory installation for coverage.\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Test empty directory installation.\n",
        "Line" : 280,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Test optional directory installation.\n",
        "Line" : 283,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Test user-specified install scripts, with and without COMPONENT.\n",
        "Line" : 286,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Dummy test of CPack\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#  find_program(found_compress\n\n#    NAMES compress)\n\n#  if(found_compress)\n\n#    find_program(file_command NAMES file)\n\n#    if(NOT file_command)\n\n#      set(file_command file)\n\n#    endif()\n\n#    execute_process(COMMAND ${file_command} ${found_compress}\n\n#      OUTPUT_VARIABLE output)\n\n#    set(SKIP_TZ FALSE)\n\n#    if(\"${output}\" MATCHES \"script\")\n\n#      set(SKIP_TZ TRUE)\n\n#    endif()\n\n#    if(\"${output}\" MATCHES \"dummy.sh\")\n\n#      set(SKIP_TZ TRUE)\n\n#    endif()\n\n#    if(NOT SKIP_TZ)\n\n#      message(\"compress found and it was not a script\")\n\n#      message(\"output from file command: [${output}]\")\n\n#      list(APPEND CPACK_GENERATOR \"TZ\")\n\n#    else()\n\n#      message(\"compress found, but it was a script so dont use it\")\n\n#      message(\"output from file command: [${output}]\")\n\n#    endif()\n\n#  endif()\n",
        "Line" : 332,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Avoid settings that require the .zip file command line tools...\n\n# (just build an NSIS installer without component support)\n\n#\n",
        "Line" : 376,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 31
    },
    "deps/src/cmake-3.13.4/Tests/SimpleInstall/InstallScript1.cmake" : {
      "ObjectId" : "ef9da5761c1de371c5287c5cc21303652d0bd162",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SimpleInstall/InstallScript2.cmake" : {
      "ObjectId" : "c1d20a3a6754c3d0384c2a85a5d0fda1d7d015fa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SimpleInstall/InstallScript3.cmake" : {
      "ObjectId" : "64851564d05742771290acaa2783e194b54ce6dd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SimpleInstall/InstallScript4.cmake" : {
      "ObjectId" : "34d0a73bb897b58af1fd9d27f4bdd485cb40ff75",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SimpleInstall/PackageScript.cmake" : {
      "ObjectId" : "f110b2f8fca11b5cf1fe7e390dcf62b76c49562a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SimpleInstall/PostInstall.cmake" : {
      "ObjectId" : "d616221ef319c5608061873ee2f242ac38a1d761",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SimpleInstall/PreInstall.cmake" : {
      "ObjectId" : "7a9851e1d8e66fe9efd334e6624f261f8e5d6f86",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SimpleInstall/TestSubDir/CMakeLists.txt" : {
      "ObjectId" : "860e10425fafe43a2c18aa0bd28498118255deae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SimpleInstall/scripts/CMakeLists.txt" : {
      "ObjectId" : "ec34e8c500f529c12864ff4ef938963915f13c24",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SimpleInstallS2/CMakeLists.txt" : {
      "ObjectId" : "4cf73559b0415f34e74cc79cacdce548babc748f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Skip generating the rpath pointing at the build tree to make sure\n\n# the executable is installed with the proper rpath in the install\n\n# tree.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure the executable can run from the install tree.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Skip the dependency that causes a build when installing.  This\n\n# avoids infinite loops when the post-build rule below installs.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure the install script ran.\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Test importing a library found on disk.\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check for failure of configuration-specific installation.\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Check for failure of directory installation.\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Check that scripts properly installed.\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Check for failure of empty directory installation.\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Make sure the test executable can run from the install tree.\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# try to import the exported targets again\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Wipe out the install directory to do a fresh test.\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# this is stage 1, so create libraries and modules and install everything\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Test <ARCHIVE|LIBRARY|RUNTIME>_OUTPUT_NAME properties.\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Disable VERSION test until it is implemented in the Xcode generator.\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Make sure the test executable can run from the install tree.\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Test per-configuration output name.\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# .exe, .dll\n\n# .so, mod.dll\n\n# .a, .lib\n",
        "Line" : 200,
        "CharPositionInLine" : 64
      },
      "18" : {
        "Text" : "# for coverage...target should always exist\n",
        "Line" : 210,
        "CharPositionInLine" : 13
      },
      "19" : {
        "Text" : "# Test old-style install commands.\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# \"export\" the targets collected in \"SimpleInstallS1\"\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Test optional installation.\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Test configuration-specific installation.\n",
        "Line" : 243,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Test directory installation.\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Alternate directory installation for coverage.\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Test empty directory installation.\n",
        "Line" : 280,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Test optional directory installation.\n",
        "Line" : 283,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Test user-specified install scripts, with and without COMPONENT.\n",
        "Line" : 286,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Dummy test of CPack\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#  find_program(found_compress\n\n#    NAMES compress)\n\n#  if(found_compress)\n\n#    find_program(file_command NAMES file)\n\n#    if(NOT file_command)\n\n#      set(file_command file)\n\n#    endif()\n\n#    execute_process(COMMAND ${file_command} ${found_compress}\n\n#      OUTPUT_VARIABLE output)\n\n#    set(SKIP_TZ FALSE)\n\n#    if(\"${output}\" MATCHES \"script\")\n\n#      set(SKIP_TZ TRUE)\n\n#    endif()\n\n#    if(\"${output}\" MATCHES \"dummy.sh\")\n\n#      set(SKIP_TZ TRUE)\n\n#    endif()\n\n#    if(NOT SKIP_TZ)\n\n#      message(\"compress found and it was not a script\")\n\n#      message(\"output from file command: [${output}]\")\n\n#      list(APPEND CPACK_GENERATOR \"TZ\")\n\n#    else()\n\n#      message(\"compress found, but it was a script so dont use it\")\n\n#      message(\"output from file command: [${output}]\")\n\n#    endif()\n\n#  endif()\n",
        "Line" : 332,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Avoid settings that require the .zip file command line tools...\n\n# (just build an NSIS installer without component support)\n\n#\n",
        "Line" : 375,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 31
    },
    "deps/src/cmake-3.13.4/Tests/SimpleInstallS2/InstallScript1.cmake" : {
      "ObjectId" : "ef9da5761c1de371c5287c5cc21303652d0bd162",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SimpleInstallS2/InstallScript2.cmake" : {
      "ObjectId" : "c1d20a3a6754c3d0384c2a85a5d0fda1d7d015fa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SimpleInstallS2/InstallScript3.cmake" : {
      "ObjectId" : "64851564d05742771290acaa2783e194b54ce6dd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SimpleInstallS2/InstallScript4.cmake" : {
      "ObjectId" : "34d0a73bb897b58af1fd9d27f4bdd485cb40ff75",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SimpleInstallS2/PackageScript.cmake" : {
      "ObjectId" : "f110b2f8fca11b5cf1fe7e390dcf62b76c49562a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SimpleInstallS2/PostInstall.cmake" : {
      "ObjectId" : "d616221ef319c5608061873ee2f242ac38a1d761",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SimpleInstallS2/PreInstall.cmake" : {
      "ObjectId" : "7a9851e1d8e66fe9efd334e6624f261f8e5d6f86",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SimpleInstallS2/TestSubDir/CMakeLists.txt" : {
      "ObjectId" : "860e10425fafe43a2c18aa0bd28498118255deae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SimpleInstallS2/scripts/CMakeLists.txt" : {
      "ObjectId" : "ec34e8c500f529c12864ff4ef938963915f13c24",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SourceFileIncludeDirProperty/CMakeLists.txt" : {
      "ObjectId" : "786d5b6837bd3bf1165cc068a45fcee146651202",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check that source level include directory take\n\n# precedence over target one\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/SourceFileProperty/CMakeLists.txt" : {
      "ObjectId" : "1b6506da57f011033cb325ef9795636a8849d0c7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If a file exists by this name, use it.\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Work on case-sensitive file systems as well.\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/SourceGroups/CMakeLists.txt" : {
      "ObjectId" : "813774d6a8c26ad1f190c1738d3c60f7156f428a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this is not really a test which can fail\n\n# it is more an example with several source_group()\n\n# commands.\n\n# The created projects have to be loaded manually\n\n# in Visual Studio/Xcode/Eclipse/...\n\n# to see whether the correct groups have been created.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# a sub group\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# a sub sub group\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# a group with empty name\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# a group, whose name consists only of the delimiter\n\n#should be handled the same way as an empty name\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# a sub sub group whose last component has the same name\n\n# as an already existing group\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# a group without files, is currently not created\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Tests/SourcesProperty/CMakeLists.txt" : {
      "ObjectId" : "d1c35d8011afd9e4e65deca845b035eab891a292",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/StagingPrefix/CMakeLists.txt" : {
      "ObjectId" : "64a3cd2291e41f456059fbe166f5f161aacf0a06",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Wipe out the install tree\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build and install the producer.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build and install the consumer.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/StagingPrefix/Consumer/CMakeLists.txt" : {
      "ObjectId" : "a230441e6452be7a531508dea2f863ddcc3bb731",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/StagingPrefix/Consumer/cmake/FindBar.cmake" : {
      "ObjectId" : "29e4478aed4fd313ba635aa46fae784b98ac0671",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/StagingPrefix/Producer/CMakeLists.txt" : {
      "ObjectId" : "eb3d98f2e65e050a92c0acf8679f109705fdad8b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/StringFileTest/CMakeLists.txt" : {
      "ObjectId" : "faf3bc90b6dc946dbb08ffbdee4f960c540d45f8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Read file test\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test reading a binary file into hex representation\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# file(STRINGS) test\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# test reading a file and getting its binary data as hex string\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# test that file(STRINGS) also work with Intel hex and Motorola S-record files\n\n# this file has been created with \"sdcc main.c\"\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this file has been created with \"sdcc main.c --out-fmt-s19\"\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#this file has utf-8 content\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# String test\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Make-style unquoted argument test\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Make directories test\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Write results to the file (test write file)\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Verify that the file was created recently.\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Test configuration of the string\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Write include file to a file\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Test file copy with relative paths\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# test no OWNER_WRITE\n",
        "Line" : 200,
        "CharPositionInLine" : 30
      },
      "16" : {
        "Text" : "# Only copy the main source file\n",
        "Line" : 202,
        "CharPositionInLine" : 31
      },
      "17" : {
        "Text" : "# Block recursion for in-source build\n",
        "Line" : 203,
        "CharPositionInLine" : 22
      },
      "18" : {
        "Text" : "# Test file glob\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Test FOREACH range\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Test FOREACH IN signature\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Test SUBSTRING command\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "deps/src/cmake-3.13.4/Tests/SubDir/CMakeLists.txt" : {
      "ObjectId" : "32aa93ffc7d1584f32d5d8a11f86298d2a919263",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#WATCOM WMAKE does not support + in the name of a file!\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/SubDir/Examples/CMakeLists.txt" : {
      "ObjectId" : "8cd7e24e16102a62957005600fbdacb5dd735876",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SubDir/Examples/example1/CMakeLists.txt" : {
      "ObjectId" : "20d065e542f3136b0cf7bb1e1fa79d39e6b41232",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SubDir/Examples/example2/CMakeLists.txt" : {
      "ObjectId" : "388e33c3d732f0edc4af256cc63126faae12f48d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SubDir/Executable/CMakeLists.txt" : {
      "ObjectId" : "fbe338ef4671b1709aeb26106bccccbf33ba3e2c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SubDirSpaces/CMakeLists.txt" : {
      "ObjectId" : "8313e12aafe18d8f5120fad3310c97af80024818",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Some systems do not seem to support rpath with spaces.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# be able to see output from make on dashboards\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GNU Make 3.82 fails on parens: http://savannah.gnu.org/bugs/?30612\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#WATCOM WMAKE does not support + in the name of a file!\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/SubDirSpaces/Executable Sources/CMakeLists.txt" : {
      "ObjectId" : "77e6751cdbbd67e31d6cc8b070410ac433114cc6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SubDirSpaces/Executable/CMakeLists.txt" : {
      "ObjectId" : "77e6751cdbbd67e31d6cc8b070410ac433114cc6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SubDirSpaces/Some Examples/CMakeLists.txt" : {
      "ObjectId" : "8cd7e24e16102a62957005600fbdacb5dd735876",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SubDirSpaces/Some Examples/example1/CMakeLists.txt" : {
      "ObjectId" : "20d065e542f3136b0cf7bb1e1fa79d39e6b41232",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SubDirSpaces/Some Examples/example2/CMakeLists.txt" : {
      "ObjectId" : "388e33c3d732f0edc4af256cc63126faae12f48d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SubDirSpaces/Some(x86) Sources/CMakeLists.txt" : {
      "ObjectId" : "cfba9169c8a6133e236b7ff9c9a115407f51ba6a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SubProject/CMakeLists.txt" : {
      "ObjectId" : "b2bada9110f57b289d0e78370eaca5b116de134e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# require generation\n",
        "Line" : 3,
        "CharPositionInLine" : 49
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/SubProject/foo/CMakeLists.txt" : {
      "ObjectId" : "011178b264355ba56be8ed5097841a63f2a261db",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SwiftMix/CMakeLists.txt" : {
      "ObjectId" : "5e50470f66c455ab157bfe07ede519b5d1fe8565",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SwiftOnly/CMakeLists.txt" : {
      "ObjectId" : "cf4463ccf604a0e971e77bae157f9c4e515987dd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SwigTest/CMakeLists.txt" : {
      "ObjectId" : "65f5c93e2c501a0fa069a5a3bdd4f7795c376457",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/SystemInformation/CMakeLists.txt" : {
      "ObjectId" : "db54612454f1d90643a2daf151ee230865c89247",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/TargetName/CMakeLists.txt" : {
      "ObjectId" : "9729d21ffdc9bacdaf08cad0414607c8b58267c1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/TargetName/executables/CMakeLists.txt" : {
      "ObjectId" : "2671e3e900699d3dbae4715b54fb381d5915882f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/TargetName/scripts/CMakeLists.txt" : {
      "ObjectId" : "58af64d65f09bbe19130f76e3670631c8eec395b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#hello_world\n",
        "Line" : 10,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/TestDriver/CMakeLists.txt" : {
      "ObjectId" : "d4f4a51bd610fd8eff168d2e648a1f38d5f45635",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Testing/CMakeLists.txt" : {
      "ObjectId" : "8f69cbe442906cadb61d08a912d33a38e0c6f4bf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Testing\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Lib and exe path\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Where will executable tests be written ?\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Include Dart\n\n# (will also set NSLOOKUP, HOSTNAME, etc.)\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Extra coverage\n\n#\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Enable testing\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Add test\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# skip level test\n\n#\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Per-config target name and generator expressions.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "deps/src/cmake-3.13.4/Tests/Testing/DartConfig.cmake" : {
      "ObjectId" : "7c2171b3d50d03d0900594ab9cd9da62ec41be59",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Dashboard is opened for submissions for a 24 hour period starting at\n\n# the specified NIGHLY_START_TIME. Time is specified in 24 hour format.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dart server to submit results (used by client)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dart server configuration\n\n# set (CVS_WEB_URL \"\")\n\n# set (CVS_WEB_CVSROOT \"\")\n\n# set (USE_DOXYGEN \"Off\")\n\n# set (DOXYGEN_URL \"\")\n\n# set (GNATS_WEB_URL \"\")\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Continuous email delivery variables\n\n# set (CONTINUOUS_FROM \"\")\n\n# set (SMTP_MAILHOST \"\")\n\n# set (CONTINUOUS_MONITOR_LIST \"\")\n\n# set (CONTINUOUS_BASE_URL \"\")\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/Testing/Sub/Sub2/CMakeLists.txt" : {
      "ObjectId" : "78f4d1a9518771e28b9be97bb92292c692809654",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Add test\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/TestsWorkingDirectory/CMakeLists.txt" : {
      "ObjectId" : "6a6e9b6c7cfedd1c97fd006b403517d27114a809",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: How to deal with /debug, /release, etc. with VS or Xcode?\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME: How to deal with /debug, /release, etc. with VS or Xcode?\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/TestsWorkingDirectory/subdir/CMakeLists.txt" : {
      "ObjectId" : "c16b1db43ae4abbfa1f7157d1c310ba10a706131",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: How to deal with /debug, /release, etc. with VS or Xcode?\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME: How to deal with /debug, /release, etc. with VS or Xcode?\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/TryCompile/CMakeLists.txt" : {
      "ObjectId" : "184a7be5c865c9f1d42a635d296ca8c10cdd57a6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# try to compile a file that should compile\n\n# also check that COPY_FILE works\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# try to compile a file that should compile\n\n# also check that COPY_FILE_ERROR works\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# try to compile a file that should not compile\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# try to compile a file that should compile\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# try to compile a file that should not compile\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# try to compile two files that should compile\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# try to compile two files that should not compile\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# try to compile a file that should compile\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "######################################\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# now two tests for TRY_RUN\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# try to run a file that should compile and run without error\n\n# also check that OUTPUT_VARIABLE contains both the compile output\n\n# and the run output\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# check the compile output for the filename\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# check the run output\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# try to run a file that should compile and run, but return an error\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# check the compile output, it should contain the filename\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#... but not the run time output\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# check the run output, it should stdout\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#######################################################################\n\n#\n\n# also test that the CHECK_C_SOURCE_COMPILES, CHECK_CXX_SOURCE_COMPILES\n\n# CHECK_C_SOURCE_RUNS and CHECK_CXX_SOURCE_RUNS macros work\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#######################################################################\n\n#\n\n# also test that the check_prototype_definition macro works\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "deps/src/cmake-3.13.4/Tests/TryCompile/Inner/CMakeLists.txt" : {
      "ObjectId" : "d62bcc4dd286fdd05dd239be80b5c1c6959951f5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Tutorial/Step1/CMakeLists.txt" : {
      "ObjectId" : "e461d3c8b3b6a633e6e17a70a43837f57f0b4460",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# configure a header file to pass some of the CMake settings\n\n# to the source code\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add the binary tree to the search path for include files\n\n# so that we will find TutorialConfig.h\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add the executable\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/Tutorial/Step2/CMakeLists.txt" : {
      "ObjectId" : "cf1d30ee29ad85985219c5b6821b3b50fb23dde9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should we use our own math functions\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# configure a header file to pass some of the CMake settings\n\n# to the source code\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add the binary tree to the search path for include files\n\n# so that we will find TutorialConfig.h\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add the MathFunctions library?\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# add the executable\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Tests/Tutorial/Step2/MathFunctions/CMakeLists.txt" : {
      "ObjectId" : "8b443a65997d963b20328b43705f63a89f07adc6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Tutorial/Step3/CMakeLists.txt" : {
      "ObjectId" : "762302bc57199f460163b3b17dfb9e6d70ce7af1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should we use our own math functions\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# configure a header file to pass some of the CMake settings\n\n# to the source code\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add the binary tree to the search path for include files\n\n# so that we will find TutorialConfig.h\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add the MathFunctions library?\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# add the executable\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# add the install targets\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# enable testing\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# does the application run\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# does it sqrt of 25\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# does it handle negative numbers\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# does it handle small numbers\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# does the usage message work?\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "deps/src/cmake-3.13.4/Tests/Tutorial/Step3/MathFunctions/CMakeLists.txt" : {
      "ObjectId" : "f386036c3a4b22ca384a77575595e35fa5082223",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Tutorial/Step4/CMakeLists.txt" : {
      "ObjectId" : "5fbeb6b0b40a1ec69eb9d2e5c39c8aa0214af2a7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# does this system provide the log and exp functions?\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# should we use our own math functions\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# configure a header file to pass some of the CMake settings\n\n# to the source code\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add the binary tree to the search path for include files\n\n# so that we will find TutorialConfig.h\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# add the MathFunctions library?\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# add the executable\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# add the install targets\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# enable testing\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# does the application run\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# does the usage message work?\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#define a macro to simplify adding tests\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# do a bunch of result based tests\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "deps/src/cmake-3.13.4/Tests/Tutorial/Step4/MathFunctions/CMakeLists.txt" : {
      "ObjectId" : "f386036c3a4b22ca384a77575595e35fa5082223",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Tutorial/Step5/CMakeLists.txt" : {
      "ObjectId" : "93b3880f0667234bd652a38e93595bbbf136a209",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# does this system provide the log and exp functions?\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# should we use our own math functions\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# configure a header file to pass some of the CMake settings\n\n# to the source code\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add the binary tree to the search path for include files\n\n# so that we will find TutorialConfig.h\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# add the MathFunctions library?\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# add the executable\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# add the install targets\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# enable testing\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# does the application run\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# does the usage message work?\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#define a macro to simplify adding tests\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# do a bunch of result based tests\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "deps/src/cmake-3.13.4/Tests/Tutorial/Step5/MathFunctions/CMakeLists.txt" : {
      "ObjectId" : "453a46332ed04d51dfe6294b0c5b6671bcb90214",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# first we add the executable that generates the table\n\n# add the binary tree directory to the search path for include files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add the command to generate the source code\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add the main library\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/Tutorial/Step6/CMakeLists.txt" : {
      "ObjectId" : "0fb7cac5f766ad091c6b700fb986e073ff3fa337",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# does this system provide the log and exp functions?\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# should we use our own math functions\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# configure a header file to pass some of the CMake settings\n\n# to the source code\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add the binary tree to the search path for include files\n\n# so that we will find TutorialConfig.h\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# add the MathFunctions library?\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# add the executable\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# add the install targets\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# enable testing\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# does the application run\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# does the usage message work?\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#define a macro to simplify adding tests\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# do a bunch of result based tests\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# build a CPack driven installer package\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "deps/src/cmake-3.13.4/Tests/Tutorial/Step6/MathFunctions/CMakeLists.txt" : {
      "ObjectId" : "70a35f662e42db9e45370caedad7eeecefd9c9f4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# first we add the executable that generates the table\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add the command to generate the source code\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add the binary tree directory to the search path for include files\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add the main library\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/Tutorial/Step7/CMakeLists.txt" : {
      "ObjectId" : "d9a92fbef05b72ed6c07085b13cd175c4e82b48b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# does this system provide the log and exp functions?\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# should we use our own math functions\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# configure a header file to pass some of the CMake settings\n\n# to the source code\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add the binary tree to the search path for include files\n\n# so that we will find TutorialConfig.h\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# add the MathFunctions library?\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# add the executable\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# add the install targets\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# enable testing\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# does the application run\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# does the usage message work?\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#define a macro to simplify adding tests\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# do a bunch of result based tests\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# build a CPack driven installer package\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# enable dashboard scripting\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "deps/src/cmake-3.13.4/Tests/Tutorial/Step7/CTestConfig.cmake" : {
      "ObjectId" : "d8f5c4491e4a7d77e5a7c026f6198d28695f3665",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Tutorial/Step7/MathFunctions/CMakeLists.txt" : {
      "ObjectId" : "70a35f662e42db9e45370caedad7eeecefd9c9f4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# first we add the executable that generates the table\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add the command to generate the source code\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add the binary tree directory to the search path for include files\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add the main library\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/Tutorial/Step7/build1.cmake" : {
      "ObjectId" : "baa475f2879093c10a422efbf40558d06fe76aa8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Tutorial/Step7/build2.cmake" : {
      "ObjectId" : "c2f2e2e103cdf2911bc86187dffcb894e1661c7d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Unset/CMakeLists.txt" : {
      "ObjectId" : "07aa68e7ae9d3dc213b3bab94725a94fae14fabe",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Local variable\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Local variable test unset via set()\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Cache variable\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Test interaction of cache entries with variables.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Test unsetting of CACHE entry.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Test unset(... PARENT_SCOPE)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Tests/UseSWIG/BasicConfiguration.cmake" : {
      "ObjectId" : "fd3ac4031d048e625bbc52288b8de5ed8f5af1db",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Path separator\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/UseSWIG/BasicCsharp/CMakeLists.txt" : {
      "ObjectId" : "1a6c763b563f0745338263cbfe5aaa2939fc80ad",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/UseSWIG/BasicPerl/CMakeLists.txt" : {
      "ObjectId" : "cf02de7de68031bb9e330c564ed7df190e9285b0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/UseSWIG/BasicPython/CMakeLists.txt" : {
      "ObjectId" : "8bbd1cbe83dde3a845709a4a5a7399f6df364fc8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/UseSWIG/CMakeLists.txt" : {
      "ObjectId" : "4c3d901a9fc520d478ca82b2387eb5861e66fc4c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/UseSWIG/LegacyConfiguration.cmake" : {
      "ObjectId" : "1acc05a4dc60925dc09ab6da6591623e093e70ee",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Prevent deprecated warnings from new UseSWIG module\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Path separator\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/UseSWIG/LegacyPerl/CMakeLists.txt" : {
      "ObjectId" : "90d92f4eba444f7b8181003b1cbe4f4331d93d6a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/UseSWIG/LegacyPython/CMakeLists.txt" : {
      "ObjectId" : "03facb19a6cfcc84a09ab678809ee67386a8b9d7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/UseSWIG/ModuleVersion2/CMakeLists.txt" : {
      "ObjectId" : "a7ee2106ba62bfc2c94a9a3db9c975f457c7a0d3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# re-use sample interface file for another plugin\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/UseSWIG/MultipleModules/CMakeLists.txt" : {
      "ObjectId" : "f1dc379c56fe1bd01d25becc11489cb75d022256",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Path separator\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# re-use sample interface file for another plugin\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/UseSWIG/MultiplePython/CMakeLists.txt" : {
      "ObjectId" : "8f877557666dff961b01b107ca278df4dcdd7a0e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Path separator\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# re-use sample interface file for another plugin\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/UseSWIG/UseTargetINCLUDE_DIRECTORIES/CMakeLists.txt" : {
      "ObjectId" : "fbb72d571554f1fcf186ad16e7884200358f29a7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check that source property override target property\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/VSExcludeFromDefaultBuild/CMakeLists.txt" : {
      "ObjectId" : "243fdf58990348822a10a281775d2430bad0053f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE_VS_INCLUDE_INSTALL_TO_DEFAULT_BUILD will enable the INSTALL target to be part of the default build\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# First step is to clear all .exe files in output so that possible past\n\n# failures of this test do not prevent it from succeeding.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make sure ClearExes is executed before other targets are built\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/VSExcludeFromDefaultBuild/ClearExes.cmake" : {
      "ObjectId" : "99cf1a5cf56e7d1d7cb2e0a852cd4334b12b9cdd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/VSExcludeFromDefaultBuild/ResultTest.cmake" : {
      "ObjectId" : "f96e70bc73825423611c77e1a6f95afc6cca10f6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/VSExternalInclude/CMakeLists.txt" : {
      "ObjectId" : "7465243bd9cdafdac6b30d0174c390a5c1745c51",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# make sure directories exists\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# generate lib1\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# generate lib2\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# lib2 depends on lib1\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# target depends on lib2\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# VS 10 vcxproj files have depends in them\n\n# Since lib1 and lib2 do not depend on each other\n\n# then the vcxproj files do not depend on each other\n\n# and the sln file can no longer be the only source\n\n# of that depend.  So, for VS 10 make the executable\n\n# depend on lib1 and lib2\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Interaction testing between the FOLDER target property and\n\n# INCLUDE_EXTERNAL_MSPROJECT targets:\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Tests/VSExternalInclude/Lib1/CMakeLists.txt" : {
      "ObjectId" : "9dfac8616ecac28f5727a3c63688d639ed911b45",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/VSExternalInclude/Lib2/CMakeLists.txt" : {
      "ObjectId" : "f4513548dd8776824a8427cb7e92d2e014e82a97",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/VSGNUFortran/CMakeLists.txt" : {
      "ObjectId" : "993d0d65f7782b89a6920f32a49f5b655e3c6c75",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# force the executable to be put out of Debug/Release dir\n\n# because gmake build of fortran will not be in a config\n\n# directory, and for easier testing we want the exe and .dll\n\n# to be in the same directory.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use a cmake script to run the executable so that PATH\n\n# can be set with the MinGW/bin in it, and the fortran\n\n# runtime libraries can be found.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/VSGNUFortran/c_code/CMakeLists.txt" : {
      "ObjectId" : "27d22fd35664ef569bfd0da5b2f5eb99b18f33cd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/VSGNUFortran/subdir/CMakeLists.txt" : {
      "ObjectId" : "0b99199539c837ff0c8f3dbd063133824b676678",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add the fortran subdirectory as a fortran project\n\n# the subdir is fortran, the project is FortranHello\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# project name in toplevel CMakeLists.txt\n",
        "Line" : 5,
        "CharPositionInLine" : 24
      },
      "2" : {
        "Text" : "# ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}\n",
        "Line" : 7,
        "CharPositionInLine" : 18
      },
      "3" : {
        "Text" : "# target libraries created\n",
        "Line" : 8,
        "CharPositionInLine" : 24
      },
      "4" : {
        "Text" : "# link interface libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 18
      },
      "5" : {
        "Text" : "# hello needs world to link\n",
        "Line" : 14,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Tests/VSGNUFortran/subdir/fortran/CMakeLists.txt" : {
      "ObjectId" : "f68e38e20f4d2c54ef93c19c18bd4fe7f0e5dd5b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add a function to test for -lsunquad on sunpro sun systems.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check for the fortran c interface mangling\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/VSMASM/CMakeLists.txt" : {
      "ObjectId" : "2923e15278eb8fe975a4d187e732f926918d131c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/VSMidl/CMakeLists.txt" : {
      "ObjectId" : "432506c3ba329ae6be6200f4c46889d194bdcc24",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This CMakeLists.txt file exists solely to drive the one found in the \"src\"\n\n# subdir as an ExternalProject build. The project in \"src\" cannot build when\n\n# there is a space in the directory name, so we copy that directory to a place\n\n# guaranteed not to have a space in the name, build it there, and then copy the\n\n# resulting output directory back up here into this CMake test's build tree.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try for USERPROFILE as HOME equivalent:\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# But just use root of SystemDrive if HOME contains any spaces:\n\n# (Default on XP and earlier...)\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Source dir for this project exists in the CMake source tree, but we cannot\n\n# use it in-place since there might be a space in its directory name.\n\n# Source dir is therefore copied under a '.cmake/Dashboards'\n\n# dir in your HOME directory to give it a name with no spaces.\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Tests/VSMidl/src/CMakeLists.txt" : {
      "ObjectId" : "e745fdde4e0ac0d563ef8d1d6eceda44b6e86037",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/VSNASM/CMakeLists.txt" : {
      "ObjectId" : "821d0227e3d35b194aeced1fb2f34dcfbae11bd1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test quoting for definitions with spaces.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test quoting for file names with spaces. The file is generated because CMake\n\n# itself cannot have files with spaces.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/VSNsightTegra/CMakeLists.txt" : {
      "ObjectId" : "6d74f2f85e3723f0d613518d4dc84e3e3519285f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test linking to library by name\n",
        "Line" : 46,
        "CharPositionInLine" : 39
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/VSNsightTegra/build.xml" : {
      "ObjectId" : "17a2cc07b9cf7ee2e93dc045fc83162c42f5d98b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/VSProjectInSubdir/CMakeLists.txt" : {
      "ObjectId" : "c164a979815935a58fca5fd89d80164e3777f322",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/VSProjectInSubdir/subdir/CMakeLists.txt" : {
      "ObjectId" : "6c1b6a11a860d9dfcf1a04770cd67b288f6b18b7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/VSResource/CMakeLists.txt" : {
      "ObjectId" : "fb47c7e138c5948c666c31dc6c234f02554be850",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Because of the following avoidance techniques required for windres and VS6,\n\n# we recommend using a configured header file, and defining preprocessor\n\n# symbols via #define code and including that header in the rc file. Using\n\n# add_definitions is fine for simple definitions (with no spaces and no\n\n# quoting), but requires avoidance or work-arounds beyond that...\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# windres rc compiler does not properly define quoted /D values as strings\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# windres cannot handle spaces in include dir\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# VS6 rc compiler does not deal well with spaces in a \"/D\" value, but it can\n\n# handle the quoting\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# expected case -- rc compiler is \"capable enough\"\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Tests/VSResourceNinjaForceRSP/CMakeLists.txt" : {
      "ObjectId" : "29ba0cee56013204d16c1f06e765b771cf5bfa9d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/VSWinStorePhone/CMakeLists.txt" : {
      "ObjectId" : "acda117353dd36036a3718d07c9c3d9f5a1c93a2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Windows Phone 8.0 needs to copy all the images.\n\n# It doesn't know to use relative paths.\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Add a reference to an SDK\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Tests/VSWindowsFormsResx/CMakeLists.txt" : {
      "ObjectId" : "43c4833830eca1aaf866a9eeb3ae02932b219c1e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Example CMakeLists.txt file to demonstrate how to make a designable Windows Forms project with CMake.\n\n#\n\n# Code modifications and example by John Farrier, john.farrier@helleboreconsulting.com\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Project Name\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note: The designable form is assumed to have a .h extension as is default in Visual Studio.\n\n# Note: The designable form is assumed to have a .resx file with the same name and path (save extension) as is default in Visual Studio\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Note: The property VS_GLOBAL_KEYWORD must be set.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Note: The property VS_DOTNET_REFERENCES must be set.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Note: Modification of compiler flags is required for CLR compatibility now that we are using .resx files.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Tests/VSXaml/CMakeLists.txt" : {
      "ObjectId" : "f384c8213120710ef3b1b5e5744e1363acb916a8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/VariableUnusedViaSet/CMakeLists.txt" : {
      "ObjectId" : "0123ab22111ba30dbdbb73e132be4ab3bc4a8b5d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Warning should occur here\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Tests/VariableUnusedViaUnset/CMakeLists.txt" : {
      "ObjectId" : "4b4031da3f91c26ab23bcc62c47d418dccaecb53",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE: Changing lines in here changes the test results since the first\n\n# instance shouldn't warn, but the second should and they have the same message\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A warning should NOT be issued for this line:\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Warning should occur here:\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/VariableUsage/CMakeLists.txt" : {
      "ObjectId" : "4da1f56c7ff228fc91adb6ceff80444e50f0ef64",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Visibility/CMakeLists.txt" : {
      "ObjectId" : "9498ca65c5be113320a6352b8c352b78c67ce13b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Visibility/verify.cmake" : {
      "ObjectId" : "3b2028cf7bdab317b4689a3b533728dbb82797f3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/WarnUnusedCliUnused/CMakeLists.txt" : {
      "ObjectId" : "7ed69bf3c861c6efefdb8b63242a4bbaec10e530",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Tests/Wrapping/CMakeLists.txt" : {
      "ObjectId" : "7f29c31c6589194991c2b0b9b1e96e100273466b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Wrapping\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable cleaning of custom command outputs to preserve the hacks\n\n# used to generate the files using CONFIGURE_FILE.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Lib and exe path\n\n#\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Where will executable tests be written ?\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Add exe\n\n#\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Qt Wrappers\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# FLTK Wrappers\n\n#\n\n# Since FLTK_FLUID_EXE is supposed to create a .cxx/.h from a .fl/.fld,\n\n# create an empty one so that the dependencies can be met.\n\n#\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Mangled Mesa\n\n#\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Tests/X11/CMakeLists.txt" : {
      "ObjectId" : "76ae58c7412605b434f2ed5558ccfa7d76bee53f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a simple C only test case\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# so for universal binaries this test will fail if\n\n#\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# build a CPack driven installer package\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Tests/XCTest/CMakeLists.txt" : {
      "ObjectId" : "d0b07ea1ca7f14a01a4eeb275b89d8a881cb2857",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Framework\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XCTest for Framework\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Cocoa App Bundle\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# XCTest for Cocoa App Bundle\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Static lib\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# XCTest for Static lib\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/cmake-3.13.4/Tests/iOSNavApp/CMakeLists.txt" : {
      "ObjectId" : "1fc33e01a45ea4834160f1e7021c4c80a351ef12",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Utilities/CMakeLists.txt" : {
      "ObjectId" : "056454019dbf591421a3a433ef15a0feb5ad155d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Undocumented option to extract and install pre-built documentation.\n\n# This is intended for use during packaging of CMake itself.\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Normal documentation build.\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Make sure generated files use the same clang-tidy checks (none).\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Utilities/Doxygen/CMakeLists.txt" : {
      "ObjectId" : "6a90c847452186d05c4cd43ba5793473ff1a15ca",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Build the reference\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n## Output formats\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#\n\n# Configure the script and the doxyfile, then add target\n\n#\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#\n\n# Installation\n\n#\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Utilities/KWIML/CMakeLists.txt" : {
      "ObjectId" : "15e65e5c770a271001e5ad315301a30d8ffe5b03",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright Kitware, Inc.\n\n# Distributed under the OSI-approved BSD 3-Clause License.\n\n# See accompanying file Copyright.txt for details.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Utilities/KWIML/test/CMakeLists.txt" : {
      "ObjectId" : "40fe62f200d131cfd80ebc84ac96135696e7741d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright Kitware, Inc.\n\n# Distributed under the OSI-approved BSD 3-Clause License.\n\n# See accompanying file Copyright.txt for details.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Suppress printf/scanf format warnings; we test if the sizes match.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Xcode 2.x forgets to create the output directory before linking\n\n# the individual architectures.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Utilities/Release/WiX/CMakeLists.txt" : {
      "ObjectId" : "cc0dbe1a63c13081402dee6eaf3089296efe3609",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Utilities/Release/WiX/CustomAction/CMakeLists.txt" : {
      "ObjectId" : "7efd01e005a25d9b5b25dc8a21fa8824d965a3e8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Utilities/Release/create-cmake-release.cmake" : {
      "ObjectId" : "b3cc352329097bc6246d2a29cdca98b1599ce8df",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Windows x86\n\n# OS X x86_64\n\n# Linux x86_64\n",
        "Line" : 9,
        "CharPositionInLine" : 30
      },
      "1" : {
        "Text" : "# Windows x64\n",
        "Line" : 15,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Utilities/Release/linux64_release.cmake" : {
      "ObjectId" : "dc3412020f398ebbf1ae00dd75f0d5a8b51c68d9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Exclude Qt5 tests because our Qt5 is static.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Utilities/Release/osx_release.cmake" : {
      "ObjectId" : "be11d470ba1eeb8322b4472e17dec9a9994a90e2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#build using bzip2 for smaller package size\n",
        "Line" : 9,
        "CharPositionInLine" : 29
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Utilities/Release/release_cmake.cmake" : {
      "ObjectId" : "b2c21b7dc4bd51f6b450cdad22f04a7abb48c4bf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# default to self extracting tgz, tgz, and tar.Z\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# define a macro to run a remote command\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set this so configure file will work from script mode\n\n# create the script specific for the given host\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# run the script by starting a shell on the remote machine\n\n# then using the script file as input to the shell\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# now figure out which types of packages were created\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# copy all the files over from the remote machine\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# if there are extra files to copy get them as well\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Utilities/Release/upload_release.cmake" : {
      "ObjectId" : "bbc74379dcfa819865941d408aeb248d05054e3b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pause to give each upload a distinct (to the nearest second)\n\n# time stamp\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Utilities/Release/win32_release.cmake" : {
      "ObjectId" : "2e817d9258cfcb771db716ef9cd997d25b908a98",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Some tests fail spuriously too often.\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Utilities/Release/win64_release.cmake" : {
      "ObjectId" : "33af830c48bd07fd4ae1df5b6f817b0c7261176b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Some tests fail spuriously too often.\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Utilities/Scripts/BoostScanDeps.cmake" : {
      "ObjectId" : "28a94ce89568bb5f8073914ac8c8de6cd588daea",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Scan the Boost headers and determine the library dependencies.  Note\n\n# that this script only scans one Boost version at once; invoke once\n\n# for each Boost release.  Note that this does require the headers for\n\n# a given component to match the library name, since this computes\n\n# inter-library dependencies.  Library components for which this\n\n# assumption does not hold true and which have dependencies on other\n\n# Boost libraries will require special-casing.  It also doesn't handle\n\n# private dependencies not described in the headers, for static\n\n# library dependencies--this is also a limitation of auto-linking, and\n\n# I'm unaware of any specific instances where this would be\n\n# problematic.\n\n#\n\n# Invoke in script mode, defining these variables:\n\n# BOOST_DIR - the root of the boost includes\n\n#\n\n# The script will process each directory under the root as a\n\n# \"component\".  For each component, all the headers will be scanned to\n\n# determine the components it depends upon by following all the\n\n# possible includes from this component.  This is to match the\n\n# behaviour of autolinking.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Written by Roger Leigh <rleigh@codelibre.net>\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Determine header dependencies on libraries using the embedded dependency information.\n\n#\n\n# component - the component to check (uses all headers from boost/${component})\n\n# includedir - the path to the Boost headers\n\n# _ret_libs - list of library dependencies\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# _boost_unprocessed_headers - list of headers requiring parsing\n\n# _boost_processed_headers - headers already parsed (or currently being parsed)\n\n# _boost_new_headers - new headers discovered for future processing\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Start by finding all headers for the component; header\n\n# dependencies via #include will be solved by future passes\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Special-case since it is part of mpi; look only in boost/mpi/python*\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Special-case since it is part of python; look only in boost/python/numpy*\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Special-case since it is a serialization variant; look in boost/serialization\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Not really a library in its own right, but treat it as one\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Single test header\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Single test header\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Single test header\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Default behaviour where header directory is the same as the library name.\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# The optional whitespace before \"#\" is intentional\n\n# (boost/serialization/config.hpp bug).\n",
        "Line" : 102,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# These components may or may not be required; not\n\n# possible to tell without knowing where and when\n\n# BOOST_BZIP2_BINARY and BOOST_ZLIB_BINARY are defined.\n\n# If building against an external zlib or bzip2, this is\n\n# undesirable.\n",
        "Line" : 122,
        "CharPositionInLine" : 12
      },
      "16" : {
        "Text" : "# Optional python dependency; skip to avoid making it a\n\n# hard dependency (handle as special-case for mpi_python).\n",
        "Line" : 132,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# Optional python dependency; skip to avoid making it a\n\n# hard dependency (handle as special-case for numpy).\n",
        "Line" : 138,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# message(STATUS \"Unfiltered dependencies for Boost::${component}: ${_boost_DEPS}\")\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#string(REGEX REPLACE \";\" \" \" _boost_DEPS_STRING \"${_boost_DEPS}\")\n\n#if (NOT _boost_DEPS_STRING)\n\n#  set(_boost_DEPS_STRING \"(none)\")\n\n#endif()\n\n#message(STATUS \"Dependencies for Boost::${component}: ${_boost_DEPS_STRING}\")\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# List of all directories and files\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Components as directories\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# The following components are not top-level directories, so require\n\n# special-casing:\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Special-case mpi_python, since it's a part of mpi\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Special-case numpy, since it's a part of python\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Special-case wserialization, which is a variant of serialization\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Special-case math* since there are six libraries, but no actual math\n\n# library component.  Handle specially when scanning above.\n\n#\n\n# Special-case separate test libraries, which are all part of test\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Process each component defined above\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Output results\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "deps/src/cmake-3.13.4/Utilities/Sphinx/CMakeLists.txt" : {
      "ObjectId" : "1cbc463714d8656411b5b820799492fc5a78454a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sphinx texinfo builder supports .info, .txt, .html and .pdf output.\n\n# SPHINX_INFO controls the .info output.\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Workaround for assistant prior to\n\n# https://codereview.qt-project.org/#change,82250 in Qt 4.\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Workaround sphinx configurability:\n\n# https://bitbucket.org/birkenfeld/sphinx/issue/1448/make-qthelp-more-configurable\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Create proper identifiers. Workaround for\n\n# https://bitbucket.org/birkenfeld/sphinx/issue/1491/qthelp-should-generate-identifiers-for\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# log stdout, pass stderr\n",
        "Line" : 137,
        "CharPositionInLine" : 32
      },
      "6" : {
        "Text" : "# Build documentation after main executables.\n",
        "Line" : 159,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 7
    },
    "deps/src/cmake-3.13.4/Utilities/Sphinx/apply_qthelp_css_workaround.cmake" : {
      "ObjectId" : "288f370ea514ac350abf6d711cdc5534c55fbb76",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Utilities/Sphinx/fixup_qthelp_names.cmake" : {
      "ObjectId" : "e35ef25bef698e5cb68e6bd773f8d36e8d1cb82b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Utilities/cmbzip2/CMakeLists.txt" : {
      "ObjectId" : "2aff69c08be45616e768d30d637aa6deb6197849",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Utilities/cmcompress/CMakeLists.txt" : {
      "ObjectId" : "806357327c0ccedeb026f5528dea8f289b671fc1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Utilities/cmcurl/CMake/CurlSymbolHiding.cmake" : {
      "ObjectId" : "15ba46e46727272b0fbb155163ffe0b56a290924",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# note: this is considered buggy prior to 4.0 but the autotools don't care, so let's ignore that fact\n",
        "Line" : 21,
        "CharPositionInLine" : 6
      },
      "1" : {
        "Text" : "# note: this should probably just check for version 9.1.045 but I'm not 100% sure\n\n#       so let's to it the same way autotools do.\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#present since 3.4.3 but broken\n",
        "Line" : 50,
        "CharPositionInLine" : 47
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Utilities/cmcurl/CMake/FindBrotli.cmake" : {
      "ObjectId" : "351b8f757b8bb2d992a64e4477a11d429565833d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Utilities/cmcurl/CMake/FindCARES.cmake" : {
      "ObjectId" : "723044a644252dc2de88f965158f47cff8cbef89",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find c-ares\n\n# Find the c-ares includes and library\n\n# This module defines\n\n#  CARES_INCLUDE_DIR, where to find ares.h, etc.\n\n#  CARES_LIBRARIES, the libraries needed to use c-ares.\n\n#  CARES_FOUND, If false, do not try to use c-ares.\n\n# also defined, but not for general use are\n\n# CARES_LIBRARY, where to find the c-ares library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Utilities/cmcurl/CMake/FindGSS.cmake" : {
      "ObjectId" : "7a637fc29c2ebabb5ea6c68e92376fcde0991278",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the GSS Kerberos library\n\n# Once done this will define\n\n#\n\n#  GSS_ROOT_DIR - Set this variable to the root installation of GSS\n\n#\n\n# Read-Only variables:\n\n#  GSS_FOUND - system has the Heimdal library\n\n#  GSS_FLAVOUR - \"MIT\" or \"Heimdal\" if anything found.\n\n#  GSS_INCLUDE_DIR - the Heimdal include directory\n\n#  GSS_LIBRARIES - The libraries needed to use GSS\n\n#  GSS_LINK_DIRECTORIES - Directories to add to linker search path\n\n#  GSS_LINKER_FLAGS - Additional linker flags\n\n#  GSS_COMPILER_FLAGS - Additional compiler flags\n\n#  GSS_VERSION - This is set to version advertised by pkg-config or read from manifest.\n\n#                In case the library is found but no version info available it'll be set to \"unknown\"\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# try to find library using system pkg-config if user didn't specify root dir\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#not found by pkg-config. Let's take more traditional approach.\n",
        "Line" : 40,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "# if not found in user-supplied directories, maybe system knows better\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# 0 means success\n",
        "Line" : 67,
        "CharPositionInLine" : 34
      },
      "5" : {
        "Text" : "# should also work in an odd case when multiple directories are given\n",
        "Line" : 68,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# 0 means success\n",
        "Line" : 90,
        "CharPositionInLine" : 34
      },
      "7" : {
        "Text" : "# this script gives us libraries and link directories. Blah. We have to deal with it.\n",
        "Line" : 91,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# older versions may not have the \"--version\" parameter. In this case we just don't care.\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# older versions may not have the \"--vendor\" parameter. In this case we just don't care.\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# most probably, shouldn't really matter\n",
        "Line" : 128,
        "CharPositionInLine" : 33
      },
      "11" : {
        "Text" : "# either there is no config script or we are on platform that doesn't provide one (Windows?)\n",
        "Line" : 137,
        "CharPositionInLine" : 9
      },
      "12" : {
        "Text" : "#jay, we've found something\n",
        "Line" : 149,
        "CharPositionInLine" : 25
      },
      "13" : {
        "Text" : "# prevent compiling the header - just check if we can include it\n",
        "Line" : 156,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# I'm not convienced if this is the right way but this is what autotools do at the moment\n",
        "Line" : 167,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# if we have headers, check if we can link libraries\n",
        "Line" : 183,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# those suffixes are not checked for HINTS\n",
        "Line" : 207,
        "CharPositionInLine" : 54
      },
      "CommentCount" : 17
    },
    "deps/src/cmake-3.13.4/Utilities/cmcurl/CMake/FindLibSSH2.cmake" : {
      "ObjectId" : "84822dba74d7bec17da318b46fa602cf860a5d12",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the libssh2 library\n\n# Once done this will define\n\n#\n\n# LIBSSH2_FOUND - system has the libssh2 library\n\n# LIBSSH2_INCLUDE_DIR - the libssh2 include directory\n\n# LIBSSH2_LIBRARY - the libssh2 library name\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Utilities/cmcurl/CMake/FindMbedTLS.cmake" : {
      "ObjectId" : "a91639589218f082d349c69aba941b007f636572",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Utilities/cmcurl/CMake/FindNGHTTP2.cmake" : {
      "ObjectId" : "348b9612dfa701e428b75c8ab63963859483e943",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Utilities/cmcurl/CMake/Macros.cmake" : {
      "ObjectId" : "7f71345156c2165d219ac52967e0250485b24b57",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#File defines convenience macros for available feature testing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This macro checks if the symbol exists in the library and if it\n\n# does, it prepends library to the list.  It is intended to be called\n\n# multiple times with a sequence of possibly dependent libraries in\n\n# order of least-to-most-dependent.  Some libraries depend on others\n\n# to link correctly.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if header file exists and add it to the list.\n\n# This macro is intended to be called multiple times with a sequence of\n\n# possibly dependent header files.  Some headers depend on others to be\n\n# compiled correctly.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# For other curl specific tests, use this macro.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Need a way to write to stdin, this will do\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Tests for a valid nroff option to generate a manpage\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Save the option if it was valid\n",
        "Line" : 72,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# No need for the temporary file\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "deps/src/cmake-3.13.4/Utilities/cmcurl/CMake/OtherTests.cmake" : {
      "ObjectId" : "ce6d3e13a3195ff2c4f006ba5ed4f9dc933b9468",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The begin of the sources (macros and includes)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# See HAVE_POLL in CMakeLists.txt for why poll is disabled on macOS\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Utilities/cmcurl/CMake/Platforms/WindowsCache.cmake" : {
      "ObjectId" : "2dbe1bbbd0137df7b68c0da1fcd66ad7c93b8eaa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Utilities/cmcurl/CMake/Utilities.cmake" : {
      "ObjectId" : "5cb1d449754bb28a8577350887a7741709998099",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# File containing various utilities\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Returns a list of arguments that evaluate to true\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Utilities/cmcurl/CMakeLists.txt" : {
      "ObjectId" : "27b7507f69d4ac1b576724297e01ae5ce6c2695a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set curl options as needed for CMake build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use OS X SSL/TLS native implementation if available on target version.\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Windows Vista and above have inet_pton, but this will link on\n\n# older versions and then the executable will fail to launch at\n\n# runtime on older versions because no DLL provides the symbol.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Starting with OSX 10.11 there is an unrelated libnetwork library which will\n\n# be picked up during curl configuration. Linking against this library is\n\n# unnecessary and breaks backward compatibility of the resulting binaries\n\n# because libnetwork is unavailable on older OSX versions.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Disable warnings to avoid changing 3rd party code.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2018, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at https://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n\n# curl/libcurl CMake script\n\n# by Tetetest and Sukender (Benoit Neil)\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# TODO:\n\n# The output .so file lacks the soname number which we currently have within the lib/Makefile.am file\n\n# Add full (4 or 5 libs) SSL support\n\n# Add INSTALL target (EXTRA_DIST variables in Makefile.am may be moved to Makefile.inc so that CMake/CPack is aware of what's to include).\n\n# Add CTests(?)\n\n# Check on all possible platforms\n\n# Test with as many configurations possible (With or without any option)\n\n# Create scripts that help keeping the CMake build system up to date (to reduce maintenance). According to Tetetest:\n\n#  - lists of headers that 'configure' checks for;\n\n#  - curl-specific tests (the ones that are in m4/curl-*.m4 files);\n\n#  - (most obvious thing:) curl version numbers.\n\n# Add documentation subproject\n\n#\n\n# To check:\n\n# (From Daniel Stenberg) The cmake build selected to run gcc with -fPIC on my box while the plain configure script did not.\n\n# (From Daniel Stenberg) The gcc command line use neither -g nor any -O options. As a developer, I also treasure our configure scripts's --enable-debug option that sets a long range of \"picky\" compiler options.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This code not needed for building within CMake.\n",
        "Line" : 135,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Sukender: Is it necessary?\n",
        "Line" : 147,
        "CharPositionInLine" : 38
      },
      "9" : {
        "Text" : "# Setup package meta-data\n\n# SET(PACKAGE \"curl\")\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# This code not needed for building within CMake.\n",
        "Line" : 151,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# SET(PACKAGE_TARNAME \"curl\")\n\n# SET(PACKAGE_NAME \"curl\")\n\n# SET(PACKAGE_VERSION \"-\")\n\n# SET(PACKAGE_STRING \"curl-\")\n\n# SET(PACKAGE_BUGREPORT \"a suitable curl mailing list => https://curl.haxx.se/mail/\")\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# surprisingly, CHECK_C_COMPILER_FLAG needs a new variable to store each new\n\n# test result in.\n",
        "Line" : 185,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# DEBUGBUILD will be defined only for Debug builds\n",
        "Line" : 196,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# This code not needed for building within CMake.\n",
        "Line" : 209,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# For debug libs and exes, add \"-d\" postfix\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# initialize CURL_LIBS\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This code not needed for building within CMake.\n",
        "Line" : 226,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Force the feature off as this name is used as guard macro...\n",
        "Line" : 295,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# This code not needed for building within CMake.\n",
        "Line" : 301,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Required for building manual, docs, tests\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# We need ansi c-flags, especially on HP\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disable warnings on Borland to avoid changing 3rd party code.\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# If we are on AIX, do the _ALL_SOURCE magic\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Include all the necessary files for macros\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# On windows preload settings\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Check for all needed libraries\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# This code not needed for building within CMake.\n",
        "Line" : 365,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# Use the cmake-defined dl libs as dl is should not be used\n\n# on HPUX, but rather dld this avoids a warning\n",
        "Line" : 368,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Yellowtab Zeta needs different libraries than BeOS 5.\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# check SSL libraries\n\n# TODO support GNUTLS, NSS, POLARSSL, AXTLS, CYASSL\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Windows native SSL/TLS support\n",
        "Line" : 426,
        "CharPositionInLine" : 23
      },
      "32" : {
        "Text" : "# CMAKE_USE_WINSSL implies CURL_WINDOWS_SSPI\n",
        "Line" : 427,
        "CharPositionInLine" : 27
      },
      "33" : {
        "Text" : "# Optionally build with a specific CA cert bundle.\n",
        "Line" : 472,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Optionally build with a specific CA cert dir.\n",
        "Line" : 476,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Now that we know, we're not using windows LDAP...\n",
        "Line" : 517,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Check for LDAP\n",
        "Line" : 522,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "#LDAP includes won't be used\n",
        "Line" : 538,
        "CharPositionInLine" : 66
      },
      "38" : {
        "Text" : "#LDAP includes won't be used\n",
        "Line" : 542,
        "CharPositionInLine" : 66
      },
      "39" : {
        "Text" : "# No ldap, no ldaps.\n",
        "Line" : 592,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Check for idn\n",
        "Line" : 605,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Check for symbol dlopen (same as HAVE_LIBDL)\n",
        "Line" : 608,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# This code not needed for building within CMake.\n",
        "Line" : 611,
        "CharPositionInLine" : 6
      },
      "43" : {
        "Text" : "# Depend on ZLIB via imported targets if supported by the running\n\n# version of CMake.  This allows our dependents to get our dependencies\n\n# transitively.\n",
        "Line" : 623,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CMake-specific curl code.\n",
        "Line" : 637,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#libSSH2\n",
        "Line" : 659,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# find_package has already found the headers\n",
        "Line" : 676,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# now check for specific libssh2 symbols as they were added in different versions\n",
        "Line" : 681,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# MIT\n",
        "Line" : 710,
        "CharPositionInLine" : 11
      },
      "49" : {
        "Text" : "# This code not needed for building within CMake.\n",
        "Line" : 760,
        "CharPositionInLine" : 6
      },
      "50" : {
        "Text" : "#\n\n# CA handling\n\n#\n",
        "Line" : 761,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Skip autodetection of unset CA path because CA bundle is set explicitly\n",
        "Line" : 794,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# Skip autodetection of unset CA bundle because CA path is set explicitly\n",
        "Line" : 796,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# first try autodetecting a CA bundle, then a CA path\n",
        "Line" : 798,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Check for header files\n",
        "Line" : 833,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Check for some functions that are used\n",
        "Line" : 935,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# poll on macOS is unreliable, it first did not exist, then was broken until\n\n# fixed in 10.9 only to break again in 10.12.\n",
        "Line" : 946,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# symbol exists in win32, but function does not.\n",
        "Line" : 1016,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# _WIN32_WINNT_VISTA (0x0600)\n",
        "Line" : 1020,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# _WIN32_WINNT_WINXP (0x0501)\n",
        "Line" : 1023,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# sigaction and sigsetjmp are special. Use special mechanism for\n\n# detecting those, but only if previous attempt failed.\n",
        "Line" : 1037,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# If there is no stricmp(), do not allow LDAP to parse URLs\n",
        "Line" : 1052,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Do curl specific tests\n",
        "Line" : 1057,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# include this header to get the type\n",
        "Line" : 1100,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Check for reentrant\n",
        "Line" : 1115,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Check clock_gettime(CLOCK_MONOTONIC, x) support\n",
        "Line" : 1151,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Check compiler support of __builtin_available()\n",
        "Line" : 1154,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Some other minor tests\n",
        "Line" : 1157,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Fix libz / zlib.h\n",
        "Line" : 1163,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Check for nonblocking\n",
        "Line" : 1175,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# The Mac version of GCC warns about use of long double.  Disable it.\n",
        "Line" : 1194,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "# TODO test which of these headers are required\n",
        "Line" : 1206,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# For Windows, all compilers used by CMake should support large files\n",
        "Line" : 1221,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Use the manifest embedded in the Windows Resource\n",
        "Line" : 1225,
        "CharPositionInLine" : 2
      },
      "74" : {
        "Text" : "# Disable default manifest added by CMake\n",
        "Line" : 1230,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# this assumes clang or gcc style options\n",
        "Line" : 1245,
        "CharPositionInLine" : 4
      },
      "76" : {
        "Text" : "# Ugly (but functional) way to include \"Makefile.inc\" by transforming it (= regenerate it).\n",
        "Line" : 1250,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Replace $() with ${}\n",
        "Line" : 1260,
        "CharPositionInLine" : 112
      },
      "78" : {
        "Text" : "# Replace @@ with ${}, even if that may not be read by CMake scripts.\n",
        "Line" : 1261,
        "CharPositionInLine" : 105
      },
      "79" : {
        "Text" : "# This code not needed for building within CMake.\n",
        "Line" : 1266,
        "CharPositionInLine" : 6
      },
      "80" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CMake-specific curl code.\n",
        "Line" : 1286,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 1296,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# This code not needed for building within CMake.\n",
        "Line" : 1298,
        "CharPositionInLine" : 6
      },
      "83" : {
        "Text" : "# Helper to populate a list (_items) with a label when conditions (the remaining\n\n# args) are satisfied\n",
        "Line" : 1304,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# TODO need to disable policy CMP0054 (CMake 3.1) to allow this indirection\n",
        "Line" : 1307,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# Clear list and try to detect available features\n",
        "Line" : 1313,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# TODO SSP1 (WinSSL) check is missing\n",
        "Line" : 1326,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# TODO SSP1 missing for SPNEGO\n",
        "Line" : 1329,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# NTLM support requires crypto function adaptions from various SSL libs\n\n# TODO alternative SSL libs tests for SSP1, GNUTLS, NSS\n",
        "Line" : 1334,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# TODO missing option (autoconf: --enable-ntlm-wb)\n",
        "Line" : 1338,
        "CharPositionInLine" : 2
      },
      "90" : {
        "Text" : "# TODO missing option (--enable-tls-srp), depends on GNUTLS_SRP/OPENSSL_SRP\n",
        "Line" : 1341,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# TODO option --with-nghttp2 tests for nghttp2 lib and nghttp2/nghttp2.h header\n",
        "Line" : 1343,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# Clear list and try to detect available protocols\n",
        "Line" : 1348,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# CURL_DISABLE_LDAP implies CURL_DISABLE_LDAPS\n\n# TODO check HAVE_LDAP_SSL (in autoconf this is enabled with --enable-ldaps)\n",
        "Line" : 1357,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# curl-config needs the following options to be set.\n",
        "Line" : 1379,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# TODO probably put a -D... options here?\n",
        "Line" : 1381,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# TODO when to set \"-DCURL_STATICLIB\" for CPPFLAG_CURL_STATICLIB?\n",
        "Line" : 1383,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# \"a\" (Linux) or \"lib\" (Windows)\n",
        "Line" : 1405,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# Set this to \"yes\" to append all libraries on which -lcurl is dependent\n",
        "Line" : 1408,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# SUPPORT_FEATURES\n\n# SUPPORT_PROTOCOLS\n",
        "Line" : 1410,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# Finally generate a \"curl-config\" matching this config\n\n# Use:\n\n# * ENABLE_SHARED\n\n# * ENABLE_STATIC\n",
        "Line" : 1414,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# Finally generate a pkg-config file matching this config\n",
        "Line" : 1427,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# install headers\n",
        "Line" : 1433,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# Use:\n\n# * TARGETS_EXPORT_NAME\n\n# * PROJECT_NAME\n",
        "Line" : 1445,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# Workaround for MSVS10 to avoid the Dialog Hell\n\n# FIXME: This could be removed with future version of CMake.\n",
        "Line" : 1464,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 105
    },
    "deps/src/cmake-3.13.4/Utilities/cmcurl/include/curl/curlbuild.h.cmake" : {
      "ObjectId" : "c8b4f527055ed14574e17d1ba7a5f30f34ec87c3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/***************************************************************************\n *                                  _   _ ____  _\n *  Project                     ___| | | |  _ \\| |\n *                             / __| | | | |_) | |\n *                            | (__| |_| |  _ <| |___\n *                             \\___|\\___/|_| \\_\\_____|\n *\n * Copyright (C) 1998 - 2008, Daniel Stenberg, <daniel@haxx.se>, et al.\n *\n * This software is licensed as described in the file COPYING, which\n * you should have received as part of this distribution. The terms\n * are also available at https://curl.haxx.se/docs/copyright.html.\n *\n * You may opt to use, copy, modify, merge, publish, distribute and/or sell\n * copies of the Software, and permit persons to whom the Software is\n * furnished to do so, under the terms of the COPYING file.\n *\n * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n * KIND, either express or implied.\n *\n ***************************************************************************/",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* ================================================================ */\n/*               NOTES FOR CONFIGURE CAPABLE SYSTEMS                */\n/* ================================================================ */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/*\n * NOTE 1:\n * -------\n *\n * Nothing in this file is intended to be modified or adjusted by the\n * curl library user nor by the curl library builder.\n *\n * If you think that something actually needs to be changed, adjusted\n * or fixed in this file, then, report it on the libcurl development\n * mailing list: https://cool.haxx.se/mailman/listinfo/curl-library/\n *\n * This header file shall only export symbols which are 'curl' or 'CURL'\n * prefixed, otherwise public name space would be polluted.\n *\n * NOTE 2:\n * -------\n *\n * Right now you might be staring at file include/curl/curlbuild.h.in or\n * at file include/curl/curlbuild.h, this is due to the following reason:\n *\n * On systems capable of running the configure script, the configure process\n * will overwrite the distributed include/curl/curlbuild.h file with one that\n * is suitable and specific to the library being configured and built, which\n * is generated from the include/curl/curlbuild.h.in template file.\n *\n */",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* ================================================================ */\n/*  DEFINITION OF THESE SYMBOLS SHALL NOT TAKE PLACE ANYWHERE ELSE  */\n/* ================================================================ */",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* ================================================================ */\n/*  EXTERNAL INTERFACE SETTINGS FOR CONFIGURE CAPABLE SYSTEMS ONLY  */\n/* ================================================================ */",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system  */\n/* header file ws2tcpip.h must be included by the external interface. */",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system   */\n/* header file sys/types.h must be included by the external interface. */",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system */\n/* header file stdint.h must be included by the external interface.  */",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system  */\n/* header file inttypes.h must be included by the external interface. */",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system    */\n/* header file sys/socket.h must be included by the external interface. */",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system  */\n/* header file sys/poll.h must be included by the external interface. */",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* The size of `int', as computed by sizeof. */",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* The size of `long', as computed by sizeof. */",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* The size of `long long', as computed by sizeof. */",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* The size of `ssize_t', as computed by sizeof. */",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Integral data type used for curl_socklen_t. */",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* The size of `curl_socklen_t', as computed by sizeof. */",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Data type definition of curl_socklen_t. */",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* TODO: need adjustment here. */",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Data type definition of curl_off_t. */",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "deps/src/cmake-3.13.4/Utilities/cmcurl/lib/CMakeLists.txt" : {
      "ObjectId" : "2a6279c29a9dfd4ec7543a6463f5e6672b06434c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use:\n\n# * CURL_STATICLIB\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SET(CSOURCES\n\n# #  memdebug.c -not used\n\n# # nwlib.c - Not used\n\n# # strtok.c - specify later\n\n# # strtoofft.c - specify later\n\n# )\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# # if we have Kerberos 4, right now this is never on\n\n# #OPTION(CURL_KRB4 \"Use Kerberos 4\" OFF)\n\n# IF(CURL_KRB4)\n\n# SET(CSOURCES ${CSOURCES}\n\n# krb4.c\n\n# security.c\n\n# )\n\n# ENDIF(CURL_KRB4)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# #OPTION(CURL_MALLOC_DEBUG \"Debug mallocs in Curl\" OFF)\n\n# MARK_AS_ADVANCED(CURL_MALLOC_DEBUG)\n\n# IF(CURL_MALLOC_DEBUG)\n\n# SET(CSOURCES ${CSOURCES}\n\n# memdebug.c\n\n# )\n\n# ENDIF(CURL_MALLOC_DEBUG)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# # only build compat strtoofft if we need to\n\n# IF(NOT HAVE_STRTOLL AND NOT HAVE__STRTOI64)\n\n# SET(CSOURCES ${CSOURCES}\n\n# strtoofft.c\n\n# )\n\n# ENDIF(NOT HAVE_STRTOLL AND NOT HAVE__STRTOI64)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The rest of the build\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# For windows we want to install OPENSSL_LIBRARIES dlls\n\n# and also copy them into the build tree so that testing\n\n# can find them.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This code not needed for building within CMake.\n",
        "Line" : 106,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# This code not needed for building within CMake.\n",
        "Line" : 114,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Remove the \"lib\" prefix since the library is already named \"libcurl\".\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add \"_imp\" as a suffix before the extension to avoid conflicting with the statically linked \"libcurl.lib\"\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "deps/src/cmake-3.13.4/Utilities/cmcurl/lib/Makefile.inc.cmake" : {
      "ObjectId" : "1754591e8b42911bcb32f7b4ccba6d909c332a78",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2018, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at https://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Utilities/cmcurl/lib/curl_config.h.cmake" : {
      "ObjectId" : "d5e3a90cfe1b5c6297b8a09e95e21926c56b47e9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* lib/curl_config.h.in.  Generated somehow by cmake.  */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* when building libcurl itself */",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* to disable cookies support */",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* to disable cryptographic authentication */",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* to disable DICT */",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* to disable FILE */",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* to disable FTP */",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* to disable GOPHER */",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* to disable IMAP */",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* to disable HTTP */",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* to disable LDAP */",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* to disable LDAPS */",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* to disable POP3 */",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* to disable proxies */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* to disable RTSP */",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* to disable SMB */",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* to disable SMTP */",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* to disable TELNET */",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* to disable TFTP */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* to disable verbose strings */",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* to make a symbol visible */",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Ensure using CURL_EXTERN_SYMBOL is possible */",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Use Windows LDAP implementation */",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* when not building a shared library */",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* your Entropy Gathering Daemon socket pathname */",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Define if you want to enable IPv6 support */",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "/* Define to the type qualifier of arg 1 for getnameinfo. */",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "/* Define to the type of arg 1 for getnameinfo. */",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "/* Define to the type of arg 2 for getnameinfo. */",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "/* Define to the type of args 4 and 6 for getnameinfo. */",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "/* Define to the type of arg 7 for getnameinfo. */",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "/* Specifies the number of arguments to getservbyport_r */",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "/* Specifies the size of the buffer to pass to getservbyport_r */",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "/* Define to 1 if you have the alarm function. */",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "/* Define to 1 if you have the <alloca.h> header file. */",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "/* Define to 1 if you have the <arpa/inet.h> header file. */",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "/* Define to 1 if you have the <arpa/tftp.h> header file. */",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "/* Define to 1 if you have the <assert.h> header file. */",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "/* Define to 1 if you have the `basename' function. */",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "/* Define to 1 if bool is an available type. */",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "/* Define to 1 if you have the __builtin_available function. */",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "/* Define to 1 if you have the clock_gettime function and monotonic timer. */",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "/* Define to 1 if you have the `closesocket' function. */",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "/* Define to 1 if you have the `CRYPTO_cleanup_all_ex_data' function. */",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "/* Define to 1 if you have the <crypto.h> header file. */",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "/* Define to 1 if you have the <des.h> header file. */",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "/* Define to 1 if you have the <dlfcn.h> header file. */",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "/* Define to 1 if you have the `ENGINE_load_builtin_engines' function. */",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "/* Define to 1 if you have the <errno.h> header file. */",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "/* Define to 1 if you have the <err.h> header file. */",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "/* Define to 1 if you have the fcntl function. */",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "/* Define to 1 if you have the <fcntl.h> header file. */",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "/* Define to 1 if you have a working fcntl O_NONBLOCK function. */",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "/* Define to 1 if you have the fdopen function. */",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "/* Define to 1 if you have the `fork' function. */",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "/* Define to 1 if you have the freeaddrinfo function. */",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "/* Define to 1 if you have the freeifaddrs function. */",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "/* Define to 1 if you have the ftruncate function. */",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "/* Define to 1 if you have a working getaddrinfo function. */",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "/* Define to 1 if you have the `geteuid' function. */",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "/* Define to 1 if you have the gethostbyaddr function. */",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "/* Define to 1 if you have the gethostbyaddr_r function. */",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "/* gethostbyaddr_r() takes 5 args */",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "/* gethostbyaddr_r() takes 7 args */",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "/* gethostbyaddr_r() takes 8 args */",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "/* Define to 1 if you have the gethostbyname function. */",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "/* Define to 1 if you have the gethostbyname_r function. */",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "/* gethostbyname_r() takes 3 args */",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "/* gethostbyname_r() takes 5 args */",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "/* gethostbyname_r() takes 6 args */",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "/* Define to 1 if you have the gethostname function. */",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "/* Define to 1 if you have a working getifaddrs function. */",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "/* Define to 1 if you have the getnameinfo function. */",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "/* Define to 1 if you have the `getpass_r' function. */",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "/* Define to 1 if you have the `getppid' function. */",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "/* Define to 1 if you have the `getprotobyname' function. */",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "/* Define to 1 if you have the `getpwuid' function. */",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "/* Define to 1 if you have the `getpwuid_r' function. */",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "/* Define to 1 if you have the `getrlimit' function. */",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "/* Define to 1 if you have the getservbyport_r function. */",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "/* Define to 1 if you have the `gettimeofday' function. */",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "/* Define to 1 if you have a working glibc-style strerror_r function. */",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "/* Define to 1 if you have a working gmtime_r function. */",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "/* if you have the gssapi libraries */",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "/* Define to 1 if you have the <gssapi/gssapi_generic.h> header file. */",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "/* Define to 1 if you have the <gssapi/gssapi.h> header file. */",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "/* Define to 1 if you have the <gssapi/gssapi_krb5.h> header file. */",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "/* if you have the GNU gssapi libraries */",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "/* if you have the Heimdal gssapi libraries */",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "/* if you have the MIT gssapi libraries */",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "/* Define to 1 if you have the `idna_strerror' function. */",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "/* Define to 1 if you have the `idn_free' function. */",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "/* Define to 1 if you have the <idn-free.h> header file. */",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "/* Define to 1 if you have the <ifaddrs.h> header file. */",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "/* Define to 1 if you have the `inet_addr' function. */",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "/* Define to 1 if you have the inet_ntoa_r function. */",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "/* inet_ntoa_r() takes 2 args */",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "/* inet_ntoa_r() takes 3 args */",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "/* Define to 1 if you have a IPv6 capable working inet_ntop function. */",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "/* Define to 1 if you have a IPv6 capable working inet_pton function. */",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "/* Define to 1 if you have the <inttypes.h> header file. */",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "/* Define to 1 if you have the ioctl function. */",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "/* Define to 1 if you have the ioctlsocket function. */",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "/* Define to 1 if you have the IoctlSocket camel case function. */",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "/* Define to 1 if you have a working IoctlSocket camel case FIONBIO function.\n   */",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "/* Define to 1 if you have a working ioctlsocket FIONBIO function. */",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "/* Define to 1 if you have a working ioctl FIONBIO function. */",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "/* Define to 1 if you have a working ioctl SIOCGIFADDR function. */",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "/* Define to 1 if you have the <io.h> header file. */",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "/* if you have the Kerberos4 libraries (including -ldes) */",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "/* Define to 1 if you have the `krb_get_our_ip_for_realm' function. */",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "/* Define to 1 if you have the <krb.h> header file. */",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "/* Define to 1 if you have the lber.h header file. */",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "/* Define to 1 if you have the ldapssl.h header file. */",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "/* Define to 1 if you have the ldap.h header file. */",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "/* Use LDAPS implementation */",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "/* Define to 1 if you have the ldap_ssl.h header file. */",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "/* Define to 1 if you have the `ldap_url_parse' function. */",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "/* Define to 1 if you have the <libgen.h> header file. */",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "/* Define to 1 if you have the `idn' library (-lidn). */",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "/* Define to 1 if you have the `resolv' library (-lresolv). */",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "/* Define to 1 if you have the `resolve' library (-lresolve). */",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "/* Define to 1 if you have the `socket' library (-lsocket). */",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "/* Define to 1 if you have the `ssh2' library (-lssh2). */",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "/* Define to 1 if libssh2 provides `libssh2_version'. */",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "125" : {
        "Text" : "/* Define to 1 if libssh2 provides `libssh2_init'. */",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "/* Define to 1 if libssh2 provides `libssh2_exit'. */",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "127" : {
        "Text" : "/* Define to 1 if libssh2 provides `libssh2_scp_send64'. */",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "128" : {
        "Text" : "/* Define to 1 if libssh2 provides `libssh2_session_handshake'. */",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "129" : {
        "Text" : "/* Define to 1 if you have the <libssh2.h> header file. */",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "130" : {
        "Text" : "/* Define to 1 if you have the `ssl' library (-lssl). */",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "131" : {
        "Text" : "/* if zlib is available */",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "132" : {
        "Text" : "/* if brotli is available */",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "133" : {
        "Text" : "/* if your compiler supports LL */",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "134" : {
        "Text" : "/* Define to 1 if you have the <locale.h> header file. */",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "135" : {
        "Text" : "/* Define to 1 if you have a working localtime_r function. */",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "136" : {
        "Text" : "/* Define to 1 if the compiler supports the 'long long' data type. */",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "137" : {
        "Text" : "/* Define to 1 if you have the malloc.h header file. */",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "138" : {
        "Text" : "/* Define to 1 if you have the <memory.h> header file. */",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "/* Define to 1 if you have the MSG_NOSIGNAL flag. */",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "140" : {
        "Text" : "/* Define to 1 if you have the <netdb.h> header file. */",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "141" : {
        "Text" : "/* Define to 1 if you have the <netinet/in.h> header file. */",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "/* Define to 1 if you have the <netinet/tcp.h> header file. */",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "/* Define to 1 if you have the <net/if.h> header file. */",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "144" : {
        "Text" : "/* Define to 1 if NI_WITHSCOPEID exists and works. */",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "145" : {
        "Text" : "/* if you have an old MIT gssapi library, lacking GSS_C_NT_HOSTBASED_SERVICE */",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "146" : {
        "Text" : "/* Define to 1 if you have the <openssl/crypto.h> header file. */",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "147" : {
        "Text" : "/* Define to 1 if you have the <openssl/engine.h> header file. */",
        "Line" : 443,
        "CharPositionInLine" : 0
      },
      "148" : {
        "Text" : "/* Define to 1 if you have the <openssl/err.h> header file. */",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "149" : {
        "Text" : "/* Define to 1 if you have the <openssl/pem.h> header file. */",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "150" : {
        "Text" : "/* Define to 1 if you have the <openssl/pkcs12.h> header file. */",
        "Line" : 452,
        "CharPositionInLine" : 0
      },
      "151" : {
        "Text" : "/* Define to 1 if you have the <openssl/rsa.h> header file. */",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "152" : {
        "Text" : "/* Define to 1 if you have the <openssl/ssl.h> header file. */",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "153" : {
        "Text" : "/* Define to 1 if you have the <openssl/x509.h> header file. */",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "154" : {
        "Text" : "/* Define to 1 if you have the <pem.h> header file. */",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "155" : {
        "Text" : "/* Define to 1 if you have the `perror' function. */",
        "Line" : 467,
        "CharPositionInLine" : 0
      },
      "156" : {
        "Text" : "/* Define to 1 if you have the `pipe' function. */",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "157" : {
        "Text" : "/* Define to 1 if you have a working poll function. */",
        "Line" : 473,
        "CharPositionInLine" : 0
      },
      "158" : {
        "Text" : "/* If you have a fine poll */",
        "Line" : 476,
        "CharPositionInLine" : 0
      },
      "159" : {
        "Text" : "/* Define to 1 if you have the <poll.h> header file. */",
        "Line" : 479,
        "CharPositionInLine" : 0
      },
      "160" : {
        "Text" : "/* Define to 1 if you have a working POSIX-style strerror_r function. */",
        "Line" : 482,
        "CharPositionInLine" : 0
      },
      "161" : {
        "Text" : "/* Define to 1 if you have the <pthread.h> header file */",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "162" : {
        "Text" : "/* Define to 1 if you have the <pwd.h> header file. */",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "163" : {
        "Text" : "/* Define to 1 if you have the `RAND_egd' function. */",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "164" : {
        "Text" : "/* Define to 1 if you have the `RAND_screen' function. */",
        "Line" : 494,
        "CharPositionInLine" : 0
      },
      "165" : {
        "Text" : "/* Define to 1 if you have the `RAND_status' function. */",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "166" : {
        "Text" : "/* Define to 1 if you have the recv function. */",
        "Line" : 500,
        "CharPositionInLine" : 0
      },
      "167" : {
        "Text" : "/* Define to 1 if you have the recvfrom function. */",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "168" : {
        "Text" : "/* Define to 1 if you have the <rsa.h> header file. */",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "169" : {
        "Text" : "/* Define to 1 if you have the select function. */",
        "Line" : 509,
        "CharPositionInLine" : 0
      },
      "170" : {
        "Text" : "/* Define to 1 if you have the send function. */",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "171" : {
        "Text" : "/* Define to 1 if you have the 'fsetxattr' function. */",
        "Line" : 515,
        "CharPositionInLine" : 0
      },
      "172" : {
        "Text" : "/* fsetxattr() takes 5 args */",
        "Line" : 518,
        "CharPositionInLine" : 0
      },
      "173" : {
        "Text" : "/* fsetxattr() takes 6 args */",
        "Line" : 521,
        "CharPositionInLine" : 0
      },
      "174" : {
        "Text" : "/* Define to 1 if you have the <setjmp.h> header file. */",
        "Line" : 524,
        "CharPositionInLine" : 0
      },
      "175" : {
        "Text" : "/* Define to 1 if you have the `setlocale' function. */",
        "Line" : 527,
        "CharPositionInLine" : 0
      },
      "176" : {
        "Text" : "/* Define to 1 if you have the `setmode' function. */",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "177" : {
        "Text" : "/* Define to 1 if you have the `setrlimit' function. */",
        "Line" : 533,
        "CharPositionInLine" : 0
      },
      "178" : {
        "Text" : "/* Define to 1 if you have the setsockopt function. */",
        "Line" : 536,
        "CharPositionInLine" : 0
      },
      "179" : {
        "Text" : "/* Define to 1 if you have a working setsockopt SO_NONBLOCK function. */",
        "Line" : 539,
        "CharPositionInLine" : 0
      },
      "180" : {
        "Text" : "/* Define to 1 if you have the <sgtty.h> header file. */",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "181" : {
        "Text" : "/* Define to 1 if you have the sigaction function. */",
        "Line" : 545,
        "CharPositionInLine" : 0
      },
      "182" : {
        "Text" : "/* Define to 1 if you have the siginterrupt function. */",
        "Line" : 548,
        "CharPositionInLine" : 0
      },
      "183" : {
        "Text" : "/* Define to 1 if you have the signal function. */",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "184" : {
        "Text" : "/* Define to 1 if you have the <signal.h> header file. */",
        "Line" : 554,
        "CharPositionInLine" : 0
      },
      "185" : {
        "Text" : "/* Define to 1 if you have the sigsetjmp function or macro. */",
        "Line" : 557,
        "CharPositionInLine" : 0
      },
      "186" : {
        "Text" : "/* Define to 1 if sig_atomic_t is an available typedef. */",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "187" : {
        "Text" : "/* Define to 1 if sig_atomic_t is already defined as volatile. */",
        "Line" : 563,
        "CharPositionInLine" : 0
      },
      "188" : {
        "Text" : "/* Define to 1 if struct sockaddr_in6 has the sin6_scope_id member */",
        "Line" : 566,
        "CharPositionInLine" : 0
      },
      "189" : {
        "Text" : "/* Define to 1 if you have the `socket' function. */",
        "Line" : 569,
        "CharPositionInLine" : 0
      },
      "190" : {
        "Text" : "/* Define to 1 if you have the `SSL_get_shutdown' function. */",
        "Line" : 572,
        "CharPositionInLine" : 0
      },
      "191" : {
        "Text" : "/* Define to 1 if you have the <ssl.h> header file. */",
        "Line" : 575,
        "CharPositionInLine" : 0
      },
      "192" : {
        "Text" : "/* Define to 1 if you have the <stdbool.h> header file. */",
        "Line" : 578,
        "CharPositionInLine" : 0
      },
      "193" : {
        "Text" : "/* Define to 1 if you have the <stdint.h> header file. */",
        "Line" : 581,
        "CharPositionInLine" : 0
      },
      "194" : {
        "Text" : "/* Define to 1 if you have the <stdio.h> header file. */",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "195" : {
        "Text" : "/* Define to 1 if you have the <stdlib.h> header file. */",
        "Line" : 587,
        "CharPositionInLine" : 0
      },
      "196" : {
        "Text" : "/* Define to 1 if you have the strcasecmp function. */",
        "Line" : 590,
        "CharPositionInLine" : 0
      },
      "197" : {
        "Text" : "/* Define to 1 if you have the strcasestr function. */",
        "Line" : 593,
        "CharPositionInLine" : 0
      },
      "198" : {
        "Text" : "/* Define to 1 if you have the strcmpi function. */",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "199" : {
        "Text" : "/* Define to 1 if you have the strdup function. */",
        "Line" : 599,
        "CharPositionInLine" : 0
      },
      "200" : {
        "Text" : "/* Define to 1 if you have the strerror_r function. */",
        "Line" : 602,
        "CharPositionInLine" : 0
      },
      "201" : {
        "Text" : "/* Define to 1 if you have the stricmp function. */",
        "Line" : 605,
        "CharPositionInLine" : 0
      },
      "202" : {
        "Text" : "/* Define to 1 if you have the <strings.h> header file. */",
        "Line" : 608,
        "CharPositionInLine" : 0
      },
      "203" : {
        "Text" : "/* Define to 1 if you have the <string.h> header file. */",
        "Line" : 611,
        "CharPositionInLine" : 0
      },
      "204" : {
        "Text" : "/* Define to 1 if you have the strlcat function. */",
        "Line" : 614,
        "CharPositionInLine" : 0
      },
      "205" : {
        "Text" : "/* Define to 1 if you have the `strlcpy' function. */",
        "Line" : 617,
        "CharPositionInLine" : 0
      },
      "206" : {
        "Text" : "/* Define to 1 if you have the strncasecmp function. */",
        "Line" : 620,
        "CharPositionInLine" : 0
      },
      "207" : {
        "Text" : "/* Define to 1 if you have the strncmpi function. */",
        "Line" : 623,
        "CharPositionInLine" : 0
      },
      "208" : {
        "Text" : "/* Define to 1 if you have the strnicmp function. */",
        "Line" : 626,
        "CharPositionInLine" : 0
      },
      "209" : {
        "Text" : "/* Define to 1 if you have the <stropts.h> header file. */",
        "Line" : 629,
        "CharPositionInLine" : 0
      },
      "210" : {
        "Text" : "/* Define to 1 if you have the strstr function. */",
        "Line" : 632,
        "CharPositionInLine" : 0
      },
      "211" : {
        "Text" : "/* Define to 1 if you have the strtok_r function. */",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "212" : {
        "Text" : "/* Define to 1 if you have the strtoll function. */",
        "Line" : 638,
        "CharPositionInLine" : 0
      },
      "213" : {
        "Text" : "/* if struct sockaddr_storage is defined */",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "214" : {
        "Text" : "/* Define to 1 if you have the timeval struct. */",
        "Line" : 644,
        "CharPositionInLine" : 0
      },
      "215" : {
        "Text" : "/* Define to 1 if you have the <sys/filio.h> header file. */",
        "Line" : 647,
        "CharPositionInLine" : 0
      },
      "216" : {
        "Text" : "/* Define to 1 if you have the <sys/ioctl.h> header file. */",
        "Line" : 650,
        "CharPositionInLine" : 0
      },
      "217" : {
        "Text" : "/* Define to 1 if you have the <sys/param.h> header file. */",
        "Line" : 653,
        "CharPositionInLine" : 0
      },
      "218" : {
        "Text" : "/* Define to 1 if you have the <sys/poll.h> header file. */",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "219" : {
        "Text" : "/* Define to 1 if you have the <sys/resource.h> header file. */",
        "Line" : 659,
        "CharPositionInLine" : 0
      },
      "220" : {
        "Text" : "/* Define to 1 if you have the <sys/select.h> header file. */",
        "Line" : 662,
        "CharPositionInLine" : 0
      },
      "221" : {
        "Text" : "/* Define to 1 if you have the <sys/socket.h> header file. */",
        "Line" : 665,
        "CharPositionInLine" : 0
      },
      "222" : {
        "Text" : "/* Define to 1 if you have the <sys/sockio.h> header file. */",
        "Line" : 668,
        "CharPositionInLine" : 0
      },
      "223" : {
        "Text" : "/* Define to 1 if you have the <sys/stat.h> header file. */",
        "Line" : 671,
        "CharPositionInLine" : 0
      },
      "224" : {
        "Text" : "/* Define to 1 if you have the <sys/time.h> header file. */",
        "Line" : 674,
        "CharPositionInLine" : 0
      },
      "225" : {
        "Text" : "/* Define to 1 if you have the <sys/types.h> header file. */",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "226" : {
        "Text" : "/* Define to 1 if you have the <sys/uio.h> header file. */",
        "Line" : 680,
        "CharPositionInLine" : 0
      },
      "227" : {
        "Text" : "/* Define to 1 if you have the <sys/un.h> header file. */",
        "Line" : 683,
        "CharPositionInLine" : 0
      },
      "228" : {
        "Text" : "/* Define to 1 if you have the <sys/utime.h> header file. */",
        "Line" : 686,
        "CharPositionInLine" : 0
      },
      "229" : {
        "Text" : "/* Define to 1 if you have the <termios.h> header file. */",
        "Line" : 689,
        "CharPositionInLine" : 0
      },
      "230" : {
        "Text" : "/* Define to 1 if you have the <termio.h> header file. */",
        "Line" : 692,
        "CharPositionInLine" : 0
      },
      "231" : {
        "Text" : "/* Define to 1 if you have the <time.h> header file. */",
        "Line" : 695,
        "CharPositionInLine" : 0
      },
      "232" : {
        "Text" : "/* Define to 1 if you have the <tld.h> header file. */",
        "Line" : 698,
        "CharPositionInLine" : 0
      },
      "233" : {
        "Text" : "/* Define to 1 if you have the `tld_strerror' function. */",
        "Line" : 701,
        "CharPositionInLine" : 0
      },
      "234" : {
        "Text" : "/* Define to 1 if you have the `uname' function. */",
        "Line" : 704,
        "CharPositionInLine" : 0
      },
      "235" : {
        "Text" : "/* Define to 1 if you have the <unistd.h> header file. */",
        "Line" : 707,
        "CharPositionInLine" : 0
      },
      "236" : {
        "Text" : "/* Define to 1 if you have the `utime' function. */",
        "Line" : 710,
        "CharPositionInLine" : 0
      },
      "237" : {
        "Text" : "/* Define to 1 if you have the <utime.h> header file. */",
        "Line" : 713,
        "CharPositionInLine" : 0
      },
      "238" : {
        "Text" : "/* Define to 1 if compiler supports C99 variadic macro style. */",
        "Line" : 716,
        "CharPositionInLine" : 0
      },
      "239" : {
        "Text" : "/* Define to 1 if compiler supports old gcc variadic macro style. */",
        "Line" : 719,
        "CharPositionInLine" : 0
      },
      "240" : {
        "Text" : "/* Define to 1 if you have the winber.h header file. */",
        "Line" : 722,
        "CharPositionInLine" : 0
      },
      "241" : {
        "Text" : "/* Define to 1 if you have the windows.h header file. */",
        "Line" : 725,
        "CharPositionInLine" : 0
      },
      "242" : {
        "Text" : "/* Define to 1 if you have the winldap.h header file. */",
        "Line" : 728,
        "CharPositionInLine" : 0
      },
      "243" : {
        "Text" : "/* Define to 1 if you have the winsock2.h header file. */",
        "Line" : 731,
        "CharPositionInLine" : 0
      },
      "244" : {
        "Text" : "/* Define to 1 if you have the winsock.h header file. */",
        "Line" : 734,
        "CharPositionInLine" : 0
      },
      "245" : {
        "Text" : "/* Define this symbol if your OS supports changing the contents of argv */",
        "Line" : 737,
        "CharPositionInLine" : 0
      },
      "246" : {
        "Text" : "/* Define to 1 if you have the writev function. */",
        "Line" : 740,
        "CharPositionInLine" : 0
      },
      "247" : {
        "Text" : "/* Define to 1 if you have the ws2tcpip.h header file. */",
        "Line" : 743,
        "CharPositionInLine" : 0
      },
      "248" : {
        "Text" : "/* Define to 1 if you have the <x509.h> header file. */",
        "Line" : 746,
        "CharPositionInLine" : 0
      },
      "249" : {
        "Text" : "/* Define if you have the <process.h> header file. */",
        "Line" : 749,
        "CharPositionInLine" : 0
      },
      "250" : {
        "Text" : "/* if you have the zlib.h header file */",
        "Line" : 752,
        "CharPositionInLine" : 0
      },
      "251" : {
        "Text" : "/* Define to the sub-directory in which libtool stores uninstalled libraries.\n   */",
        "Line" : 755,
        "CharPositionInLine" : 0
      },
      "252" : {
        "Text" : "/* If you lack a fine basename() prototype */",
        "Line" : 759,
        "CharPositionInLine" : 0
      },
      "253" : {
        "Text" : "/* Define to 1 if you need the lber.h header file even with ldap.h */",
        "Line" : 762,
        "CharPositionInLine" : 0
      },
      "254" : {
        "Text" : "/* Define to 1 if you need the malloc.h header file even with stdlib.h */",
        "Line" : 765,
        "CharPositionInLine" : 0
      },
      "255" : {
        "Text" : "/* Define to 1 if _REENTRANT preprocessor symbol must be defined. */",
        "Line" : 768,
        "CharPositionInLine" : 0
      },
      "256" : {
        "Text" : "/* cpu-machine-OS */",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "257" : {
        "Text" : "/* Name of package */",
        "Line" : 774,
        "CharPositionInLine" : 0
      },
      "258" : {
        "Text" : "/* Define to the address where bug reports for this package should be sent. */",
        "Line" : 777,
        "CharPositionInLine" : 0
      },
      "259" : {
        "Text" : "/* Define to the full name of this package. */",
        "Line" : 780,
        "CharPositionInLine" : 0
      },
      "260" : {
        "Text" : "/* Define to the full name and version of this package. */",
        "Line" : 783,
        "CharPositionInLine" : 0
      },
      "261" : {
        "Text" : "/* Define to the one symbol short name of this package. */",
        "Line" : 786,
        "CharPositionInLine" : 0
      },
      "262" : {
        "Text" : "/* Define to the version of this package. */",
        "Line" : 789,
        "CharPositionInLine" : 0
      },
      "263" : {
        "Text" : "/* a suitable file to read random data from */",
        "Line" : 792,
        "CharPositionInLine" : 0
      },
      "264" : {
        "Text" : "/* Define to the type of arg 1 for recvfrom. */",
        "Line" : 795,
        "CharPositionInLine" : 0
      },
      "265" : {
        "Text" : "/* Define to the type pointed by arg 2 for recvfrom. */",
        "Line" : 798,
        "CharPositionInLine" : 0
      },
      "266" : {
        "Text" : "/* Define to 1 if the type pointed by arg 2 for recvfrom is void. */",
        "Line" : 801,
        "CharPositionInLine" : 0
      },
      "267" : {
        "Text" : "/* Define to the type of arg 3 for recvfrom. */",
        "Line" : 804,
        "CharPositionInLine" : 0
      },
      "268" : {
        "Text" : "/* Define to the type of arg 4 for recvfrom. */",
        "Line" : 807,
        "CharPositionInLine" : 0
      },
      "269" : {
        "Text" : "/* Define to the type pointed by arg 5 for recvfrom. */",
        "Line" : 810,
        "CharPositionInLine" : 0
      },
      "270" : {
        "Text" : "/* Define to 1 if the type pointed by arg 5 for recvfrom is void. */",
        "Line" : 813,
        "CharPositionInLine" : 0
      },
      "271" : {
        "Text" : "/* Define to the type pointed by arg 6 for recvfrom. */",
        "Line" : 816,
        "CharPositionInLine" : 0
      },
      "272" : {
        "Text" : "/* Define to 1 if the type pointed by arg 6 for recvfrom is void. */",
        "Line" : 819,
        "CharPositionInLine" : 0
      },
      "273" : {
        "Text" : "/* Define to the function return type for recvfrom. */",
        "Line" : 822,
        "CharPositionInLine" : 0
      },
      "274" : {
        "Text" : "/* Define to the type of arg 1 for recv. */",
        "Line" : 825,
        "CharPositionInLine" : 0
      },
      "275" : {
        "Text" : "/* Define to the type of arg 2 for recv. */",
        "Line" : 828,
        "CharPositionInLine" : 0
      },
      "276" : {
        "Text" : "/* Define to the type of arg 3 for recv. */",
        "Line" : 831,
        "CharPositionInLine" : 0
      },
      "277" : {
        "Text" : "/* Define to the type of arg 4 for recv. */",
        "Line" : 834,
        "CharPositionInLine" : 0
      },
      "278" : {
        "Text" : "/* Define to the function return type for recv. */",
        "Line" : 837,
        "CharPositionInLine" : 0
      },
      "279" : {
        "Text" : "/* Define as the return type of signal handlers (`int' or `void'). */",
        "Line" : 840,
        "CharPositionInLine" : 0
      },
      "280" : {
        "Text" : "/* Define to the type qualifier of arg 5 for select. */",
        "Line" : 843,
        "CharPositionInLine" : 0
      },
      "281" : {
        "Text" : "/* Define to the type of arg 1 for select. */",
        "Line" : 846,
        "CharPositionInLine" : 0
      },
      "282" : {
        "Text" : "/* Define to the type of args 2, 3 and 4 for select. */",
        "Line" : 849,
        "CharPositionInLine" : 0
      },
      "283" : {
        "Text" : "/* Define to the type of arg 5 for select. */",
        "Line" : 852,
        "CharPositionInLine" : 0
      },
      "284" : {
        "Text" : "/* Define to the function return type for select. */",
        "Line" : 855,
        "CharPositionInLine" : 0
      },
      "285" : {
        "Text" : "/* Define to the type qualifier of arg 2 for send. */",
        "Line" : 858,
        "CharPositionInLine" : 0
      },
      "286" : {
        "Text" : "/* Define to the type of arg 1 for send. */",
        "Line" : 861,
        "CharPositionInLine" : 0
      },
      "287" : {
        "Text" : "/* Define to the type of arg 2 for send. */",
        "Line" : 864,
        "CharPositionInLine" : 0
      },
      "288" : {
        "Text" : "/* Define to the type of arg 3 for send. */",
        "Line" : 867,
        "CharPositionInLine" : 0
      },
      "289" : {
        "Text" : "/* Define to the type of arg 4 for send. */",
        "Line" : 870,
        "CharPositionInLine" : 0
      },
      "290" : {
        "Text" : "/* Define to the function return type for send. */",
        "Line" : 873,
        "CharPositionInLine" : 0
      },
      "291" : {
        "Text" : "/* The size of `int', as computed by sizeof. */",
        "Line" : 876,
        "CharPositionInLine" : 0
      },
      "292" : {
        "Text" : "/* The size of `short', as computed by sizeof. */",
        "Line" : 879,
        "CharPositionInLine" : 0
      },
      "293" : {
        "Text" : "/* The size of `long', as computed by sizeof. */",
        "Line" : 882,
        "CharPositionInLine" : 0
      },
      "294" : {
        "Text" : "/* The size of `long long', as computed by sizeof. */",
        "Line" : 885,
        "CharPositionInLine" : 0
      },
      "295" : {
        "Text" : "/* The size of `__int64', as computed by sizeof. */",
        "Line" : 888,
        "CharPositionInLine" : 0
      },
      "296" : {
        "Text" : "/* The size of `off_t', as computed by sizeof. */",
        "Line" : 891,
        "CharPositionInLine" : 0
      },
      "297" : {
        "Text" : "/* The size of `curl_off_t', as computed by sizeof. */",
        "Line" : 894,
        "CharPositionInLine" : 0
      },
      "298" : {
        "Text" : "/* The size of `size_t', as computed by sizeof. */",
        "Line" : 897,
        "CharPositionInLine" : 0
      },
      "299" : {
        "Text" : "/* The size of `ssize_t', as computed by sizeof. */",
        "Line" : 900,
        "CharPositionInLine" : 0
      },
      "300" : {
        "Text" : "/* The size of `time_t', as computed by sizeof. */",
        "Line" : 903,
        "CharPositionInLine" : 0
      },
      "301" : {
        "Text" : "/* Define to 1 if you have the ANSI C header files. */",
        "Line" : 906,
        "CharPositionInLine" : 0
      },
      "302" : {
        "Text" : "/* Define to the type of arg 3 for strerror_r. */",
        "Line" : 909,
        "CharPositionInLine" : 0
      },
      "303" : {
        "Text" : "/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */",
        "Line" : 912,
        "CharPositionInLine" : 0
      },
      "304" : {
        "Text" : "/* Define if you want to enable c-ares support */",
        "Line" : 915,
        "CharPositionInLine" : 0
      },
      "305" : {
        "Text" : "/* Define if you want to enable POSIX threaded DNS lookup */",
        "Line" : 918,
        "CharPositionInLine" : 0
      },
      "306" : {
        "Text" : "/* Define if you want to enable WIN32 threaded DNS lookup */",
        "Line" : 921,
        "CharPositionInLine" : 0
      },
      "307" : {
        "Text" : "/* Define to disable non-blocking sockets. */",
        "Line" : 924,
        "CharPositionInLine" : 0
      },
      "308" : {
        "Text" : "/* if GnuTLS is enabled */",
        "Line" : 927,
        "CharPositionInLine" : 0
      },
      "309" : {
        "Text" : "/* if PolarSSL is enabled */",
        "Line" : 930,
        "CharPositionInLine" : 0
      },
      "310" : {
        "Text" : "/* if DarwinSSL is enabled */",
        "Line" : 933,
        "CharPositionInLine" : 0
      },
      "311" : {
        "Text" : "/* if mbedTLS is enabled */",
        "Line" : 936,
        "CharPositionInLine" : 0
      },
      "312" : {
        "Text" : "/* if libSSH2 is in use */",
        "Line" : 939,
        "CharPositionInLine" : 0
      },
      "313" : {
        "Text" : "/* If you want to build curl with the built-in manual */",
        "Line" : 942,
        "CharPositionInLine" : 0
      },
      "314" : {
        "Text" : "/* if NSS is enabled */",
        "Line" : 945,
        "CharPositionInLine" : 0
      },
      "315" : {
        "Text" : "/* if you want to use OpenLDAP code instead of legacy ldap implementation */",
        "Line" : 948,
        "CharPositionInLine" : 0
      },
      "316" : {
        "Text" : "/* if OpenSSL is in use */",
        "Line" : 951,
        "CharPositionInLine" : 0
      },
      "317" : {
        "Text" : "/* to enable NGHTTP2  */",
        "Line" : 954,
        "CharPositionInLine" : 0
      },
      "318" : {
        "Text" : "/* if Unix domain sockets are enabled  */",
        "Line" : 957,
        "CharPositionInLine" : 0
      },
      "319" : {
        "Text" : "/* to enable SSPI support */",
        "Line" : 960,
        "CharPositionInLine" : 0
      },
      "320" : {
        "Text" : "/* to enable Windows SSL  */",
        "Line" : 963,
        "CharPositionInLine" : 0
      },
      "321" : {
        "Text" : "/* enable multiple SSL backends */",
        "Line" : 966,
        "CharPositionInLine" : 0
      },
      "322" : {
        "Text" : "/* Define to 1 if using yaSSL in OpenSSL compatibility mode. */",
        "Line" : 969,
        "CharPositionInLine" : 0
      },
      "323" : {
        "Text" : "/* Version number of package */",
        "Line" : 972,
        "CharPositionInLine" : 0
      },
      "324" : {
        "Text" : "/* Define to 1 if OS is AIX. */",
        "Line" : 975,
        "CharPositionInLine" : 0
      },
      "325" : {
        "Text" : "/* Number of bits in a file offset, on hosts where this is settable. */",
        "Line" : 980,
        "CharPositionInLine" : 0
      },
      "326" : {
        "Text" : "/* Define for large files, on AIX-style hosts. */",
        "Line" : 983,
        "CharPositionInLine" : 0
      },
      "327" : {
        "Text" : "/* define this if you need it to compile thread-safe code */",
        "Line" : 986,
        "CharPositionInLine" : 0
      },
      "328" : {
        "Text" : "/* Define to empty if `const' does not conform to ANSI C. */",
        "Line" : 989,
        "CharPositionInLine" : 0
      },
      "329" : {
        "Text" : "/* Type to use in place of in_addr_t when system does not provide it. */",
        "Line" : 992,
        "CharPositionInLine" : 0
      },
      "330" : {
        "Text" : "/* Define to `__inline__' or `__inline' if that's what the C compiler\n   calls it, or to nothing if 'inline' is not supported under any name.  */",
        "Line" : 995,
        "CharPositionInLine" : 0
      },
      "331" : {
        "Text" : "/* Define to `unsigned int' if <sys/types.h> does not define. */",
        "Line" : 1001,
        "CharPositionInLine" : 0
      },
      "332" : {
        "Text" : "/* the signed version of size_t */",
        "Line" : 1004,
        "CharPositionInLine" : 0
      },
      "333" : {
        "Text" : "/* Define to 1 if you have the mach_absolute_time function. */",
        "Line" : 1017,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 334
    },
    "deps/src/cmake-3.13.4/Utilities/cmexpat/CMakeLists.txt" : {
      "ObjectId" : "470fcba99c5d86ce0e22344913858bc0c3691fc5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Disable warnings to avoid changing 3rd party code.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Utilities/cmexpat/ConfigureChecks.cmake" : {
      "ObjectId" : "057cfa58d6aa44f066d41565ba6d66098ff01c3c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#/* Define to 1 if you have the ANSI C header files. */\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#/* 1234 = LIL_ENDIAN, 4321 = BIGENDIAN */\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Utilities/cmexpat/expat_config.h.cmake" : {
      "ObjectId" : "ad540d604be24c96a6dd23745f30dfc7579df594",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* expat_config.h.in.  Generated from configure.in by autoheader.  */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* 1234 = LIL_ENDIAN, 4321 = BIGENDIAN */",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Define to 1 if you have the `bcopy' function. */",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Define to 1 if you have the <dlfcn.h> header file. */",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Define to 1 if you have the <fcntl.h> header file. */",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Define to 1 if you have the `getpagesize' function. */",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Define to 1 if you have the <inttypes.h> header file. */",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Define to 1 if you have the `memmove' function. */",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Define to 1 if you have the <memory.h> header file. */",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Define to 1 if you have a working `mmap' system call. */",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Define to 1 if you have the <stdint.h> header file. */",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Define to 1 if you have the <stdlib.h> header file. */",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Define to 1 if you have the <strings.h> header file. */",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Define to 1 if you have the <string.h> header file. */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Define to 1 if you have the <sys/stat.h> header file. */",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Define to 1 if you have the <sys/types.h> header file. */",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Define to 1 if you have the <unistd.h> header file. */",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Define to 1 if you have the ANSI C header files. */",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* whether byteorder is bigendian */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Define to specify how much context to retain around the current parse\n   point. */",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Define to make parameter entity parsing functionality available. */\n/* #undef XML_DTD */",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Define to make XML Namespaces functionality available. */\n/* #undef XML_NS */",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Define to __FUNCTION__ or \"\" if `__func__' does not conform to ANSI C. */",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Define to `long' if <sys/types.h> does not define. */",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Define to `unsigned' if <sys/types.h> does not define. */",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "deps/src/cmake-3.13.4/Utilities/cmjsoncpp/CMakeLists.txt" : {
      "ObjectId" : "ef370cc2c52a4a0824eeb102d257213c9bb342da",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Disable warnings to avoid changing 3rd party code.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Utilities/cmlibarchive/CMakeFiles/CMakeTmp/CMakeFiles/CMakeDirectoryInformation.cmake" : {
      "ObjectId" : "1a3749c724f397348bce94d608f6c80fe9697dd8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE generated file: DO NOT EDIT!\n\n# Generated by \"Unix Makefiles\" Generator, CMake Version 3.13\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Relative path conversion top directories.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Force unix paths in dependencies.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The C and CXX include file regular expressions for this directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/cmake-3.13.4/Utilities/cmlibarchive/CMakeFiles/CMakeTmp/CMakeFiles/cmTC_93eb5.dir/DependInfo.cmake" : {
      "ObjectId" : "e332892eaaf85b87cd3e366124f9d77ee85b30cf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The set of languages for which implicit dependencies are needed:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The set of files for implicit dependencies of each language:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The include file search paths:\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Targets to which this target links.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Fortran module output directory.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Utilities/cmlibarchive/CMakeFiles/CMakeTmp/CMakeFiles/cmTC_93eb5.dir/cmake_clean.cmake" : {
      "ObjectId" : "8fa468c515f916be7a19202e0f175b936421e346",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Per-language clean rules from dependency scanning.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Utilities/cmlibarchive/CMakeFiles/CMakeTmp/CMakeLists.txt" : {
      "ObjectId" : "454c5c4f5c8f19001504ef9d21c184c49b51fba6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/cmake-3.13.4/Utilities/cmlibarchive/CMakeFiles/CMakeTmp/Makefile" : {
      "ObjectId" : "04ed646efdf97c37c90abdde0a08ef322e32a424",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# CMAKE generated file: DO NOT EDIT!\n\n# Generated by \"Unix Makefiles\" Generator, CMake Version 3.13\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default target executed when no arguments are given to make.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Allow only one \"make -f Makefile2\" at a time, but pass parallelism.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=============================================================================\n\n# Special targets provided by cmake.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Disable implicit rules so canonical targets will work.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Remove some rules from gmake that .SUFFIXES does not remove.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Produce verbose output by default.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Suppress display of executed commands.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# A target that is always out of date.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#=============================================================================\n\n# Set environment variables for the build.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The shell in which to execute make rules.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The CMake executable.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The command to remove a file.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Escaping for special characters.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# The top-level source directory on which CMake was run.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# The top-level build directory on which CMake was run.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#=============================================================================\n\n# Targets provided globally by CMake.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Special rule for the target rebuild_cache\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Special rule for the target rebuild_cache\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Special rule for the target edit_cache\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Special rule for the target edit_cache\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# The main all target\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# The main clean target\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# The main clean target\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Prepare targets for installation.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Prepare targets for installation.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#=============================================================================\n\n# Target rules for targets named cmTC_93eb5\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Build rule for target.\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# fast build rule for target.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# target to build an object file\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Help Target\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#=============================================================================\n\n# Special targets to cleanup operation of make.\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    },
    "deps/src/cmake-3.13.4/Utilities/cmlibarchive/CMakeFiles/CMakeTmp/cmake_install.cmake" : {
      "ObjectId" : "428a47e1059ef13182397a29fb34d55bb1a313d8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install script for directory: /Users/hoytak/workspace/turicreate-4/deps/src/cmake-3.13.4/Utilities/cmlibarchive/CMakeFiles/CMakeTmp\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the install prefix\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the install configuration name.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the component getting installed.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Is this installation the result of a crosscompile?\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Utilities/cmlibarchive/CMakeLists.txt" : {
      "ObjectId" : "1700f80f5321d2a36b1e08f9a8c3a17cc1e8baff",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# On MacOS, prefer MacPorts libraries to system libraries.\n\n# I haven't come up with a compelling argument for this to be conditional.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Enable @rpath in the install name.\n\n# detail in \"cmake  --help-policy CMP0042\"\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Version - read from 'version' file.\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# INTERFACE_VERSION increments with every release\n\n# libarchive 2.7 == interface version 9 = 2 + 7\n\n# libarchive 2.8 == interface version 10 = 2 + 8\n\n# libarchive 2.9 == interface version 11 = 2 + 9\n\n# libarchive 3.0 == interface version 12\n\n# libarchive 3.1 == interface version 13\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set SOVERSION == Interface version\n\n# ?? Should there be more here ??\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Enalbe CMAKE_PUSH_CHECK_STATE() and CMAKE_POP_CHECK_STATE() macros\n\n# saving and restoring the state of the variables.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Initialize the state of the variables. This initialization is not\n\n# necessary but this shows you what value the variables initially have.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Disable warnings to avoid changing 3rd party code.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable CTest/CDash support\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# CNG is used for encrypt/decrypt Zip archives on Windows.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#ELSEIF(WINDOWS_VERSION STREQUAL \"WINXP\")\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# no threads in CMake\n",
        "Line" : 98,
        "CharPositionInLine" : 22
      },
      "14" : {
        "Text" : "# Ask wchar.h for mbstate_t\n",
        "Line" : 101,
        "CharPositionInLine" : 39
      },
      "15" : {
        "Text" : "#\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# Generate list.h\n\n#\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Remove _listfile and _cmlist from _argv\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#\n\n# Generate installation rules for man pages.\n\n#\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\n\n# Find out what macro is needed to use libraries on Windows.\n\n#\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Save the state of the variables\n",
        "Line" : 157,
        "CharPositionInLine" : 29
      },
      "21" : {
        "Text" : "# Clear ${VAR} from CACHE If the libraries which ${VAR} was\n\n# checked with are changed.\n",
        "Line" : 161,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# Check if the library can be used with the macro.\n",
        "Line" : 168,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# Save the libraries which ${VAR} is checked with.\n",
        "Line" : 176,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "# Restore the state of the variables\n",
        "Line" : 180,
        "CharPositionInLine" : 28
      },
      "25" : {
        "Text" : "#\n\n# Check compress/decompress libraries\n\n#\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# GnuWin32 is only for Win32, not Win64.\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# You have to add a path availabel DLL file into PATH environment variable.\n\n# Maybe DLL path is \"C:/Program Files/GnuWin32/bin\".\n\n# The zlib and the bzip2 Setup program have installed programs and DLLs into\n\n# \"C:/Program Files/GnuWin32\" by default.\n\n# This is convenience setting for Windows.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "#\n\n# If you didn't use Setup program or installed into nonstandard path,\n\n# cmake cannot find out your zlib or bzip2 libraries and include files,\n\n# you should execute cmake with  -DCMAKE_PREFIX_PATH option.\n\n#   e.g.\n\n#     cmake -DCMAKE_PREFIX_PATH=<your-GnuWin32-path> <path-to-source>\n\n#\n\n# If compiling error occurred in zconf.h, You may need patch to zconf.h.\n\n#--- zconf.h.orig\t2005-07-21 00:40:26.000000000\n\n#+++ zconf.h\t2009-01-19 11:39:10.093750000\n\n#@@ -286,7 +286,7 @@\n\n#\n\n# #if 1           /* HAVE_UNISTD_H -- this line is updated by ./configure */\n\n# #  include <sys/types.h> /* for off_t */\n\n#-#  include <unistd.h>    /* for SEEK_* and off_t */\n\n#+#  include <stdio.h>    /* for SEEK_* and off_t */\n\n# #  ifdef VMS\n\n# #    include <unixio.h>   /* for off_t */\n\n# #  endif\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "#\n\n# Find ZLIB\n\n#\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Override cached value\n",
        "Line" : 225,
        "CharPositionInLine" : 24
      },
      "31" : {
        "Text" : "#\n\n# Test if ZLIB_WINAPI macro is needed to use.\n\n#\n",
        "Line" : 233,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Test if a macro is needed for the library.\n",
        "Line" : 244,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "#\n\n# Find BZip2\n\n#\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Override cached value\n",
        "Line" : 264,
        "CharPositionInLine" : 25
      },
      "35" : {
        "Text" : "# Test if a macro is needed for the library.\n",
        "Line" : 271,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "#\n\n# Find LZMA\n\n#\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Override cached value\n",
        "Line" : 293,
        "CharPositionInLine" : 26
      },
      "38" : {
        "Text" : "# Test if a macro is needed for the library.\n",
        "Line" : 302,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# LZMA not found and will not be used.\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# CMake does not need LZO2 support in libarchive\n",
        "Line" : 317,
        "CharPositionInLine" : 6
      },
      "41" : {
        "Text" : "#\n\n# Find LZO2\n\n#\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 323,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# Override cached value\n",
        "Line" : 332,
        "CharPositionInLine" : 24
      },
      "44" : {
        "Text" : "#\n\n# TODO: test for static library.\n\n#\n",
        "Line" : 340,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# CMake does not need LZ4 support in libarchive\n",
        "Line" : 347,
        "CharPositionInLine" : 6
      },
      "46" : {
        "Text" : "#\n\n# Find LZ4\n\n#\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 353,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# Override cached value\n",
        "Line" : 362,
        "CharPositionInLine" : 23
      },
      "49" : {
        "Text" : "# Save the state of the variables\n",
        "Line" : 367,
        "CharPositionInLine" : 27
      },
      "50" : {
        "Text" : "# Restore the state of the variables\n",
        "Line" : 370,
        "CharPositionInLine" : 26
      },
      "51" : {
        "Text" : "#\n\n# TODO: test for static library.\n\n#\n",
        "Line" : 373,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "#\n\n# Find Zstd\n\n#\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 383,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "#\n\n# TODO: test for static library.\n\n#\n",
        "Line" : 398,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "#\n\n# Check headers\n\n#\n",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Some FreeBSD headers assume sys/types.h was already included.\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Alphabetize the rest unless there's a compelling reason\n",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Following files need windows.h, so we should test it after windows.h test.\n",
        "Line" : 505,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "#\n\n# Check whether use of __EXTENSIONS__ is safe.\n\n# We need some macro such as _GNU_SOURCE to use extension functions.\n\n#\n",
        "Line" : 509,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "#\n\n# Find Nettle\n\n#\n",
        "Line" : 524,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "#\n\n# Find OpenSSL\n\n# (Except on Mac, where OpenSSL is deprecated.)\n\n#\n",
        "Line" : 547,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Override cached value\n",
        "Line" : 558,
        "CharPositionInLine" : 27
      },
      "63" : {
        "Text" : "# FreeBSD libmd\n",
        "Line" : 561,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Save the state of the variables\n",
        "Line" : 565,
        "CharPositionInLine" : 29
      },
      "65" : {
        "Text" : "# Restore the state of the variables\n",
        "Line" : 569,
        "CharPositionInLine" : 28
      },
      "66" : {
        "Text" : "#\n\n# How to prove that CRYPTO functions, which have several names on various\n\n# platforms, just see if archive_digest.c can compile and link against\n\n# required libraries.\n\n#\n",
        "Line" : 573,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Probe the local implementation for whether this\n",
        "Line" : 590,
        "CharPositionInLine" : 8
      },
      "68" : {
        "Text" : "# crypto implementation is available on this platform.\n",
        "Line" : 591,
        "CharPositionInLine" : 1
      },
      "69" : {
        "Text" : "# Inform user whether or not we found it; if not, log why we didn't.\n",
        "Line" : 648,
        "CharPositionInLine" : 1
      },
      "70" : {
        "Text" : "# Add appropriate libs/includes depending on whether the implementation\n\n# was found on this platform.\n",
        "Line" : 661,
        "CharPositionInLine" : 6
      },
      "71" : {
        "Text" : "#\n\n# CRYPTO functions on Windows is defined at archive_windows.c, thus we do not\n\n# need the test what the functions can be mapped to archive_{crypto name}_init,\n\n# archive_{crypto name}_update and archive_{crypto name}_final.\n\n# The functions on Windows use CALG_{crypto name} macro to create a crypt object\n\n# and then we need to know what CALG_{crypto name} macros is available to show\n\n# ARCHIVE_CRYPTO_{crypto name}_WIN macros because Windows 2000 and earlier version\n\n# of Windows XP do not support SHA256, SHA384 and SHA512.\n\n#\n",
        "Line" : 674,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "#\n\n# Find iconv\n\n# POSIX defines the second arg as const char **\n\n# and requires it to be in libc.  But we can accept\n\n# a non-const argument here and can support iconv()\n\n# being in libiconv.\n\n#\n",
        "Line" : 754,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Save the state of the variables\n",
        "Line" : 763,
        "CharPositionInLine" : 29
      },
      "74" : {
        "Text" : "#\n\n# During checking iconv proto type, we should use -Werror to avoid the\n\n# success of iconv detection with a warnig which success is a miss\n\n# detection. So this needs for all build mode(even it's a release mode).\n\n#\n",
        "Line" : 766,
        "CharPositionInLine" : 6
      },
      "75" : {
        "Text" : "# NOTE: /WX option is the same as gcc's -Werror option.\n",
        "Line" : 777,
        "CharPositionInLine" : 6
      },
      "76" : {
        "Text" : "#\n",
        "Line" : 780,
        "CharPositionInLine" : 4
      },
      "77" : {
        "Text" : "# Restore the state of the variables\n",
        "Line" : 796,
        "CharPositionInLine" : 28
      },
      "78" : {
        "Text" : "# Save the state of the variables\n",
        "Line" : 801,
        "CharPositionInLine" : 27
      },
      "79" : {
        "Text" : "#SET(INCLUDES ${INCLUDES} \"iconv.h\")\n",
        "Line" : 805,
        "CharPositionInLine" : 4
      },
      "80" : {
        "Text" : "# If iconv isn't in libc and we have a libiconv, try that.\n",
        "Line" : 812,
        "CharPositionInLine" : 4
      },
      "81" : {
        "Text" : "# Test if a macro is needed for the library.\n",
        "Line" : 816,
        "CharPositionInLine" : 6
      },
      "82" : {
        "Text" : "#\n\n# Set up CMAKE_REQUIRED_* for CHECK_ICONV\n\n#\n",
        "Line" : 825,
        "CharPositionInLine" : 6
      },
      "83" : {
        "Text" : "# LIBICONV_STATIC is necessary for the success of CHECK_ICONV\n\n# on Windows.\n",
        "Line" : 831,
        "CharPositionInLine" : 8
      },
      "84" : {
        "Text" : "#\n\n# Find locale_charset() for libiconv.\n\n#\n",
        "Line" : 844,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# Test if a macro is needed for the library.\n",
        "Line" : 856,
        "CharPositionInLine" : 8
      },
      "86" : {
        "Text" : "# Restore the state of the variables\n",
        "Line" : 877,
        "CharPositionInLine" : 26
      },
      "87" : {
        "Text" : "# Make sure ICONV variables are not in CACHE after ENABLE_ICONV disabled\n\n# (once enabled).\n",
        "Line" : 879,
        "CharPositionInLine" : 2
      },
      "88" : {
        "Text" : "# CMake does not need XML support in libarchive\n",
        "Line" : 895,
        "CharPositionInLine" : 6
      },
      "89" : {
        "Text" : "#\n\n# Find Libxml2\n\n#\n",
        "Line" : 896,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# Save the state of the variables\n",
        "Line" : 905,
        "CharPositionInLine" : 27
      },
      "91" : {
        "Text" : "# libxml2's include files use iconv.h\n",
        "Line" : 909,
        "CharPositionInLine" : 2
      },
      "92" : {
        "Text" : "# Test if a macro is needed for the library.\n",
        "Line" : 913,
        "CharPositionInLine" : 2
      },
      "93" : {
        "Text" : "# Restore the state of the variables\n",
        "Line" : 923,
        "CharPositionInLine" : 26
      },
      "94" : {
        "Text" : "#\n\n# Find Expat\n\n#\n",
        "Line" : 925,
        "CharPositionInLine" : 2
      },
      "95" : {
        "Text" : "# Save the state of the variables\n",
        "Line" : 934,
        "CharPositionInLine" : 29
      },
      "96" : {
        "Text" : "# Restore the state of the variables\n",
        "Line" : 939,
        "CharPositionInLine" : 28
      },
      "97" : {
        "Text" : "#\n\n# Check functions\n\n#\n",
        "Line" : 946,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# Save the state of the variables\n",
        "Line" : 949,
        "CharPositionInLine" : 25
      },
      "99" : {
        "Text" : "#\n\n# During checking functions, we should use -fno-builtin to avoid the\n\n# failure of function detection which failure is an error \"conflicting\n\n# types for built-in function\" caused by using -Werror option.\n\n#\n",
        "Line" : 952,
        "CharPositionInLine" : 2
      },
      "100" : {
        "Text" : "# Restore the state of the variables\n",
        "Line" : 1048,
        "CharPositionInLine" : 24
      },
      "101" : {
        "Text" : "# Make sure we have the POSIX version of readdir_r, not the\n\n# older 2-argument version.\n",
        "Line" : 1058,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# dirfd can be either a function or a macro.\n",
        "Line" : 1064,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# Only detect readlinkat() if we also have AT_FDCWD in unistd.h.\n\n# NOTE: linux requires fcntl.h for AT_FDCWD.\n",
        "Line" : 1069,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# To verify major(), we need to both include the header\n\n# of interest and verify that the result can be linked.\n\n# CHECK_FUNCTION_EXISTS doesn't accept a header argument,\n\n# CHECK_SYMBOL_EXISTS doesn't test linkage.\n",
        "Line" : 1076,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "#\n\n# Check defines\n\n#\n",
        "Line" : 1095,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "#\n\n# Check struct members\n\n#\n\n# Check for tm_gmtoff in struct tm\n",
        "Line" : 1120,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "# Check for f_namemax in struct statfs\n",
        "Line" : 1129,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "# Check for birthtime in struct stat\n",
        "Line" : 1133,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "# Check for high-resolution timestamps in struct stat\n",
        "Line" : 1137,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "# Check for block size support in struct stat\n",
        "Line" : 1150,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "# Check for st_flags in struct stat (BSD fflags)\n",
        "Line" : 1153,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "#\n\n#\n",
        "Line" : 1162,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "#\n\n# Check for integer types\n\n#\n\n#\n",
        "Line" : 1167,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "#\n",
        "Line" : 1200,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "#\n",
        "Line" : 1209,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "#\n",
        "Line" : 1218,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "#\n",
        "Line" : 1227,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "#\n",
        "Line" : 1232,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "#\n",
        "Line" : 1241,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "#\n",
        "Line" : 1250,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "#\n",
        "Line" : 1259,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "#\n",
        "Line" : 1268,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "#\n",
        "Line" : 1277,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "#\n",
        "Line" : 1286,
        "CharPositionInLine" : 0
      },
      "125" : {
        "Text" : "#\n\n# Check if _FILE_OFFSET_BITS macro needed for large files\n\n#\n",
        "Line" : 1291,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "#\n\n# Check for Extended Attribute libraries, headers, and functions\n\n#\n",
        "Line" : 1296,
        "CharPositionInLine" : 0
      },
      "127" : {
        "Text" : "# FreeBSD xattr support\n",
        "Line" : 1322,
        "CharPositionInLine" : 4
      },
      "128" : {
        "Text" : "# Linux xattr support\n",
        "Line" : 1342,
        "CharPositionInLine" : 4
      },
      "129" : {
        "Text" : "# AIX xattr support\n",
        "Line" : 1362,
        "CharPositionInLine" : 4
      },
      "130" : {
        "Text" : "#\n\n# Check for ACL libraries, headers, and functions\n\n#\n\n# The ACL support in libarchive is written against the POSIX1e draft,\n\n# which was never officially approved and varies quite a bit across\n\n# platforms.  Worse, some systems have completely non-POSIX acl functions,\n\n# which makes the following checks rather more complex than I would like.\n\n#\n",
        "Line" : 1401,
        "CharPositionInLine" : 0
      },
      "131" : {
        "Text" : "# Solaris and derivates ACLs\n",
        "Line" : 1410,
        "CharPositionInLine" : 2
      },
      "132" : {
        "Text" : "# Libacl\n",
        "Line" : 1414,
        "CharPositionInLine" : 2
      },
      "133" : {
        "Text" : "# Richacl\n",
        "Line" : 1553,
        "CharPositionInLine" : 2
      },
      "134" : {
        "Text" : "# If someone runs cmake, then disables ACL support, we need\n\n# to forcibly override the cached values for these.\n",
        "Line" : 1608,
        "CharPositionInLine" : 2
      },
      "135" : {
        "Text" : "#\n\n# Check MD5/RMD160/SHA support\n\n# NOTE: Crypto checks must be run last before generating config.h\n\n#\n",
        "Line" : 1618,
        "CharPositionInLine" : 0
      },
      "136" : {
        "Text" : "# Libmd has to be probed after OpenSSL.\n",
        "Line" : 1629,
        "CharPositionInLine" : 0
      },
      "137" : {
        "Text" : "# Generate \"config.h\" from \"build/cmake/config.h.in\"\n",
        "Line" : 1634,
        "CharPositionInLine" : 0
      },
      "138" : {
        "Text" : "#\n\n# Register installation of PDF documents.\n\n#\n",
        "Line" : 1640,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "#\n\n# On Windows platform, It's better that we install PDF documents\n\n# on one's computer.\n\n# These PDF documents are available in the release package.\n\n#\n",
        "Line" : 1644,
        "CharPositionInLine" : 2
      },
      "140" : {
        "Text" : "#\n\n#\n\n#\n",
        "Line" : 1656,
        "CharPositionInLine" : 0
      },
      "141" : {
        "Text" : "#\n",
        "Line" : 1660,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "# We need CoreServices on Mac OS.\n",
        "Line" : 1665,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 143
    },
    "deps/src/cmake-3.13.4/Utilities/cmlibarchive/CTestConfig.cmake" : {
      "ObjectId" : "7a09742db098881d5393532dae557405a51f9e87",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: This file should be moved into the build/cmake directory...\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The libarchive CDash page appears at\n\n#   http://my.cdash.org/index.php?project=libarchive\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Utilities/cmlibarchive/build/cmake/CheckFileOffsetBits.cmake" : {
      "ObjectId" : "f123e6b93d29123f3dad364c4c2476ddea351379",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if _FILE_OFFSET_BITS macro needed for large files\n\n# CHECK_FILE_OFFSET_BITS ()\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# Copyright (c) 2009, Michihiro NAKAJIMA\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#INCLUDE(CheckCXXSourceCompiles)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/cmake-3.13.4/Utilities/cmlibarchive/build/cmake/CheckFuncs.cmake" : {
      "ObjectId" : "ae1826b89073817a8df6598bf86587d33d23b18a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check if the system has the specified function; treat glibc \"stub\"\n\n# functions as nonexistent:\n\n# CHECK_FUNCTION_EXISTS_GLIBC (FUNCTION FUNCVAR)\n\n#\n\n#  FUNCTION - the function(s) where the prototype should be declared\n\n#  FUNCVAR - variable to define if the function does exist\n\n#\n\n# In particular, this understands the glibc convention of\n\n# defining macros __stub_XXXX or __stub___XXXX if the function\n\n# does appear in the library but is merely a stub that does nothing.\n\n# By detecting this case, we can select alternate behavior on\n\n# platforms that don't support this functionality.\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# Copyright (c) 2009, Michihiro NAKAJIMA\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Utilities/cmlibarchive/build/cmake/CheckHeaderDirent.cmake" : {
      "ObjectId" : "cc33934db79a5232123b780b7c0387c7d91128c2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if the system has the specified type\n\n# CHECK_HEADER_DIRENT (HEADER1 HEARDER2 ...)\n\n#\n\n#  HEADER - the header(s) where the prototype should be declared\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# Copyright (c) 2009, Michihiro NAKAJIMA\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Utilities/cmlibarchive/build/cmake/CheckTypeExists.cmake" : {
      "ObjectId" : "7c449d772621ba06004c4982bcd1bb0a668a9a58",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if the system has the specified type\n\n# CHECK_TYPE_EXISTS (TYPE HEADER VARIABLE)\n\n#\n\n#  TYPE - the name of the type or struct or class you are interested in\n\n#  HEADER - the header(s) where the prototype should be declared\n\n#  VARIABLE - variable to store the result\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# Copyright (c) 2009, Michihiro NAKAJIMA\n\n# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Utilities/cmlibarchive/build/cmake/CreatePkgConfigFile.cmake" : {
      "ObjectId" : "fc8529a571f2833310199d6f8cbb0a48022c04b7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Generate a libarchive.pc like autotools for pkg-config\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the required variables (we use the same input file as autotools)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Now, this is not particularly pretty, nor is it terribly accurate...\n\n# Loop over all our additional libs\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Extract the filename from the absolute path\n",
        "Line" : 12,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Strip the lib prefix\n",
        "Line" : 14,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Append it to our LIBS string\n",
        "Line" : 16,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# libxml2 is easier, since it's already using pkg-config\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# FIXME: The order of the libraries doesn't take dependencies into account,\n\n#\t thus there's a good chance it'll make some binutils versions unhappy...\n\n#\t This only affects Libs.private (looked up for static builds) though.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# And install it, of course ;).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "deps/src/cmake-3.13.4/Utilities/cmlibarchive/build/cmake/FindLibGCC.cmake" : {
      "ObjectId" : "5827e07130891da13813262a522029d4615d6e88",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find libgcc\n\n# Find the libgcc library.\n\n#\n\n#  LIBGCC_LIBRARIES      - List of libraries when using libgcc\n\n#  LIBGCC_FOUND          - True if libgcc found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBGCC_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Utilities/cmlibarchive/build/cmake/FindNettle.cmake" : {
      "ObjectId" : "c805f8e952075996fd5bed98a73c27f78c50730d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Nettle\n\n# Find the Nettle include directory and library\n\n#\n\n#  NETTLE_INCLUDE_DIR    - where to find <nettle/sha.h>, etc.\n\n#  NETTLE_LIBRARIES      - List of libraries when using libnettle.\n\n#  NETTLE_FOUND          - True if libnettle found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set NETTLE_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Utilities/cmlibarchive/build/cmake/FindPCREPOSIX.cmake" : {
      "ObjectId" : "b013b61d1e9a97b2a48dc0ca2eee4bd7b8e3ba0d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find pcreposix\n\n# Find the native PCRE and PCREPOSIX include and libraries\n\n#\n\n#  PCRE_INCLUDE_DIR    - where to find pcreposix.h, etc.\n\n#  PCREPOSIX_LIBRARIES - List of libraries when using libpcreposix.\n\n#  PCRE_LIBRARIES      - List of libraries when using libpcre.\n\n#  PCREPOSIX_FOUND     - True if libpcreposix found.\n\n#  PCRE_FOUND          - True if libpcre found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PCREPOSIX_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Utilities/cmlibarchive/build/cmake/LibarchiveCodeCoverage.cmake" : {
      "ObjectId" : "a1740736656d6b2a0a5637cc028796fa3fe34711",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#################################################################\n\n# Adds a build target called \"coverage\" for code coverage.\n\n#\n\n# This compiles the code using special GCC flags, run the tests,\n\n# and then generates a nice HTML output. This new \"coverage\" make\n\n# target will only be available if you build using GCC in Debug\n\n# mode. If any of the required programs (lcov and genhtml) were\n\n# not found, a FATAL_ERROR message is printed.\n\n#\n\n# If not already done, this code will set ENABLE_TEST to ON.\n\n#\n\n# To build the code coverage and open it in your browser do this:\n\n#\n\n#    mkdir debug\n\n#    cd debug\n\n#    cmake -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=ON ..\n\n#    make -j4\n\n#    make coverage\n\n#    xdg-open coverage/index.html\n\n#################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find programs we need\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check, compiler, build types and programs are available\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Enable testing if not already done\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#################################################################\n\n# Set special compiler and linker flags for test coverage\n\n#################################################################\n\n# 0. Enable debug: -g\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# 1. Disable optimizations: -O0\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# 2. Enable all kind of warnings:\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# 3. Enable special coverage flag (HINT: --coverage is a synonym for -fprofile-arcs -ftest-coverage)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#################################################################\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "deps/src/cmake-3.13.4/Utilities/cmlibarchive/libarchive/CMakeLists.txt" : {
      "ObjectId" : "e38d66453b891cfd9ebdffd8771b0c74626eef6b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################\n\n#\n\n# How to build libarchive\n\n#\n\n############################################\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Public headers\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sources and private headers\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Man pages\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CMake needs just one static \"cmlibarchive\" library.\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/cmake-3.13.4/Utilities/cmliblzma/CMakeLists.txt" : {
      "ObjectId" : "e9f88266d99ed37cae29844304ad648bda77a9e3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Disable warnings to avoid changing 3rd party code.\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable the XL compiler optimizer because it causes crashes\n\n# and other bad behavior in liblzma code.\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Disable the old GNU compiler optimizer.\n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Utilities/cmlibrhash/CMakeLists.txt" : {
      "ObjectId" : "aa280554c5d991a184810129844438cab47066bd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Disable warnings to avoid changing 3rd party code.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/cmake-3.13.4/Utilities/cmlibuv/CMakeLists.txt" : {
      "ObjectId" : "a503041beca852cc1a516d653feefafc68a59781",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Disable warnings to avoid changing 3rd party code.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The running version of CMake does not know how to add this flag.\n",
        "Line" : 274,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# The running version of CMake does not know how to add this flag.\n",
        "Line" : 285,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "deps/src/cmake-3.13.4/Utilities/cmzlib/CMakeLists.txt" : {
      "ObjectId" : "0be48f107f1d8162eff170349fa1fb33bbbc48f1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Disable warnings to avoid changing 3rd party code.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# source files for zlib\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for windows add the .def and .rc files to the source list\n\n# if building shared libs\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/curl-7.33.0/CMake/CurlCheckCSourceCompiles.cmake" : {
      "ObjectId" : "b63276809561d7e8de29df7e7338832c70b7d6ba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if the source code provided in the SOURCE argument compiles.\n\n# CURL_CHECK_C_SOURCE_COMPILES(SOURCE VAR)\n\n# - macro which checks if the source code compiles\n\n#  SOURCE   - source code to try to compile\n\n#  VAR      - variable to store whether the source code compiled\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#  CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If the number of arguments is greater than 2 (SOURCE VAR)\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# then add the third argument as a message\n",
        "Line" : 20,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "deps/src/curl-7.33.0/CMake/CurlCheckCSourceRuns.cmake" : {
      "ObjectId" : "6b14af80dd304b078d32df36b868f0aed00e90cb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if the source code provided in the SOURCE argument compiles and runs.\n\n# CURL_CHECK_C_SOURCE_RUNS(SOURCE VAR)\n\n# - macro which checks if the source code runs\n\n#  SOURCE   - source code to try to compile\n\n#  VAR - variable to store size if the type exists.\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#  CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If the number of arguments is greater than 2 (SOURCE VAR)\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# then add the third argument as a message\n",
        "Line" : 20,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# if it did not compile make the return value fail code of 1\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# if the return value was 0 then it worked\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "deps/src/curl-7.33.0/CMake/FindOpenSSL.cmake" : {
      "ObjectId" : "279428be28467b541f2e920ee9d98fe49366e9d1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Extension of the standard FindOpenSSL.cmake\n\n# Adds OPENSSL_INCLUDE_DIRS and libeay32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# starting 2.8 it is better to use standard modules\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Bill Hoffman told that libeay32 is necessary for him:\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# if (CMAKE_MAJOR_VERSION EQUAL \"2\" AND CMAKE_MINOR_VERSION LESS \"8\")\n",
        "Line" : 17,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "deps/src/curl-7.33.0/CMake/FindZLIB.cmake" : {
      "ObjectId" : "b2cfe1879d8d89ec829c573731b98632d7ab47da",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate zlib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# starting 2.8 it is better to use standard modules\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/curl-7.33.0/CMake/OtherTests.cmake" : {
      "ObjectId" : "89d0048445d79ff899974af7543d9f8286bfb98f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET(HEADER_INCLUDES\n\n#  ${HEADER_INCLUDES}\n\n#  \"${header}\")\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#    AC_CACHE_CHECK([types of arguments and return type for recv],\n\n#[curl_cv_func_recv_args], [\n\n#SET(curl_cv_func_recv_args \"unknown\")\n\n#for recv_retv in 'int' 'ssize_t'; do\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#MESSAGE(\"RECV_TYPE_ARG1 ${RECV_TYPE_ARG1}\")\n\n#MESSAGE(\"RECV_TYPE_ARG2 ${RECV_TYPE_ARG2}\")\n\n#MESSAGE(\"RECV_TYPE_ARG3 ${RECV_TYPE_ARG3}\")\n\n#MESSAGE(\"RECV_TYPE_ARG4 ${RECV_TYPE_ARG4}\")\n\n#MESSAGE(\"RECV_TYPE_RETV ${RECV_TYPE_RETV}\")\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#    AC_CACHE_CHECK([types of arguments and return type for send],\n\n#[curl_cv_func_send_args], [\n\n#SET(curl_cv_func_send_args \"unknown\")\n\n#for send_retv in 'int' 'ssize_t'; do\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#MESSAGE(\"Found arguments: ${curl_cv_func_send_test}\")\n",
        "Line" : 119,
        "CharPositionInLine" : 18
      },
      "5" : {
        "Text" : "#MESSAGE(\"SEND_TYPE_ARG1 ${SEND_TYPE_ARG1}\")\n\n#MESSAGE(\"SEND_TYPE_ARG2 ${SEND_TYPE_ARG2}\")\n\n#MESSAGE(\"SEND_TYPE_ARG3 ${SEND_TYPE_ARG3}\")\n\n#MESSAGE(\"SEND_TYPE_ARG4 ${SEND_TYPE_ARG4}\")\n\n#MESSAGE(\"SEND_TYPE_RETV ${SEND_TYPE_RETV}\")\n\n#MESSAGE(\"SEND_QUAL_ARG2 ${SEND_QUAL_ARG2}\")\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#SET(HEADER_INCLUDES\n\n#  ${HEADER_INCLUDES}\n\n#  \"${header}\")\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "deps/src/curl-7.33.0/CMake/Platforms/WindowsCache.cmake" : {
      "ObjectId" : "49161f86d06bb3f6656cc029c540504ae8ff53ac",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/curl-7.33.0/CMake/Utilities.cmake" : {
      "ObjectId" : "37cdfe3bf65c22e003cef0da0c120e10f6fc1450",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# File containing various utilities\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Converts a CMake list to a string containing elements separated by spaces\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Appends a lis of item to a string which is a space-separated list, if they don't already exist.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Convinience function that does the same as LIST(FIND ...) but with a TRUE/FALSE return value.\n\n# Ex: IN_STR_LIST(MY_LIST \"Searched item\" WAS_FOUND)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/curl-7.33.0/CMakeLists.txt" : {
      "ObjectId" : "a7ecacebff978ea3509492637979a28a19e16b3f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cURL/libcurl CMake script\n\n# by Tetetest and Sukender (Benoit Neil)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO:\n\n# The output .so file lacks the soname number which we currently have within the lib/Makefile.am file\n\n# Add full (4 or 5 libs) SSL support\n\n# Add INSTALL target (EXTRA_DIST variables in Makefile.am may be moved to Makefile.inc so that CMake/CPack is aware of what's to include).\n\n# Add CTests(?)\n\n# Check on all possible platforms\n\n# Test with as many configurations possible (With or without any option)\n\n# Create scripts that help keeping the CMake build system up to date (to reduce maintenance). According to Tetetest:\n\n#  - lists of headers that 'configure' checks for;\n\n#  - curl-specific tests (the ones that are in m4/curl-*.m4 files);\n\n#  - (most obvious thing:) curl version numbers.\n\n# Add documentation subproject\n\n#\n\n# To check:\n\n# (From Daniel Stenberg) The cmake build selected to run gcc with -fPIC on my box while the plain configure script did not.\n\n# (From Daniel Stenberg) The gcc command line use neither -g nor any -O options. As a developer, I also treasure our configure scripts's --enable-debug option that sets a long range of \"picky\" compiler options.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sukender: Is it necessary?\n",
        "Line" : 43,
        "CharPositionInLine" : 38
      },
      "3" : {
        "Text" : "# Setup package meta-data\n\n# SET(PACKAGE \"curl\")\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# SET(PACKAGE_TARNAME \"curl\")\n\n# SET(PACKAGE_NAME \"curl\")\n\n# SET(PACKAGE_VERSION \"-\")\n\n# SET(PACKAGE_STRING \"curl-\")\n\n# SET(PACKAGE_BUGREPORT \"a suitable curl mailing list => http://curl.haxx.se/mail/\")\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# initialize CURL_LIBS\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#INCLUDE(Dart)\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# IF(WIN32)\n\n# OPTION(CURL_WINDOWS_SSPI \"Use windows libraries to allow NTLM authentication without openssl\" ON)\n\n# MARK_AS_ADVANCED(CURL_WINDOWS_SSPI)\n\n# ENDIF()\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We need ansi c-flags, especially on HP\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Disable warnings on Borland to avoid changing 3rd party code.\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If we are on AIX, do the _ALL_SOURCE magic\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Include all the necessary files for macros\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# On windows preload settings\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# This macro checks if the symbol exists in the library and if it\n\n# does, it prepends library to the list.\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Check for all needed libraries\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Yellowtab Zeta needs different libraries than BeOS 5.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# some windows compilers do not have wldap32\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# IF(NOT CURL_SPECIAL_LIBZ)\n\n#  CHECK_LIBRARY_EXISTS_CONCAT(\"z\"      inflateEnd   HAVE_LIBZ)\n\n# ENDIF(NOT CURL_SPECIAL_LIBZ)\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Check for idn\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Check for LDAP\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# if(NOT HAVE_LIBLDAP)\n\n# SET(CURL_DISABLE_LDAP ON)\n\n# endif(NOT HAVE_LIBLDAP)\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Check for symbol dlopen (same as HAVE_LIBDL)\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# For other tests to use the same libraries\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# AND CURL_CONFIG_HAS_BEEN_RUN_BEFORE\n",
        "Line" : 230,
        "CharPositionInLine" : 15
      },
      "24" : {
        "Text" : "# If we have features.h, then do the _BSD_SOURCE magic\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Check if header file exists and add it to the list.\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Check for header files\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# No ldap, no ldaps.\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Different sizeofs, etc.\n",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#    define CURL_SIZEOF_LONG        4\n\n#    define CURL_TYPEOF_CURL_OFF_T  long long\n\n#    define CURL_FORMAT_CURL_OFF_T  \"lld\"\n\n#    define CURL_FORMAT_CURL_OFF_TU \"llu\"\n\n#    define CURL_FORMAT_OFF_T       \"%lld\"\n\n#    define CURL_SIZEOF_CURL_OFF_T  8\n\n#    define CURL_SUFFIX_CURL_OFF_T  LL\n\n#    define CURL_SUFFIX_CURL_OFF_TU ULL\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# TODO: need adjustment here.\n",
        "Line" : 436,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Check for some functions that are used\n",
        "Line" : 452,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# symbol exists in win32, but function does not.\n",
        "Line" : 531,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# sigaction and sigsetjmp are special. Use special mechanism for\n\n# detecting those, but only if previous attempt failed.\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# If there is no stricmp(), do not allow LDAP to parse URLs\n",
        "Line" : 549,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# For other curl specific tests, use this macro.\n",
        "Line" : 554,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Do curl specific tests\n",
        "Line" : 623,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Check for reentrant\n",
        "Line" : 670,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Some other minor tests\n",
        "Line" : 706,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Fix libz / zlib.h\n",
        "Line" : 712,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Check for nonblocking\n",
        "Line" : 734,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# The Mac version of GCC warns about use of long double.  Disable it.\n",
        "Line" : 756,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# For windows, do not allow the compiler to use default target (Vista).\n",
        "Line" : 790,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Sets up the dependencies (zlib, OpenSSL, etc.) of a cURL subproject according to options.\n\n# TODO This is far to be complete!\n",
        "Line" : 799,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#ADD_DEFINITIONS( -DHAVE_ZLIB_H -DHAVE_ZLIB -DHAVE_LIBZ )\n",
        "Line" : 804,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "#ADD_DEFINITIONS( -DUSE_SSLEAY )\n",
        "Line" : 811,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# Ugly (but functional) way to include \"Makefile.inc\" by transforming it (= regenerate it).\n",
        "Line" : 817,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Replace $() with ${}\n",
        "Line" : 827,
        "CharPositionInLine" : 112
      },
      "48" : {
        "Text" : "# Replace @@ with ${}, even if that may not be read by CMake scripts.\n",
        "Line" : 828,
        "CharPositionInLine" : 105
      },
      "49" : {
        "Text" : "# This needs to be run very last so other parts of the scripts can take advantage of this.\n",
        "Line" : 841,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Installation.\n\n# First, install generated curlbuild.h\n",
        "Line" : 846,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Next, install other headers excluding curlbuild.h\n",
        "Line" : 850,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Workaround for MSVS10 to avoid the Dialog Hell\n\n# FIXME: This could be removed with future version of CMake.\n",
        "Line" : 857,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 53
    },
    "deps/src/curl-7.33.0/Makefile" : {
      "ObjectId" : "3efb8ebefef959f9ef1117d2446d256a39419979",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2010, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at http://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We don't need to do anything for vc6.\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# VC9 makefiles are for use with VS2008\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# VC10 makefiles are for use with VS2010\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4,
      "Errorlog" : "line 36:6 token recognition error at: '\\s'\nline 42:6 token recognition error at: '\\s'\nline 48:6 token recognition error at: '\\s'\nline 54:6 token recognition error at: '\\s'\nline 93:6 token recognition error at: '\\s'\nline 124:6 token recognition error at: '\\s'\nline 130:6 token recognition error at: '\\s'\nline 136:6 token recognition error at: '\\s'\nline 142:6 token recognition error at: '\\s'\nline 148:6 token recognition error at: '\\s'\nline 154:6 token recognition error at: '\\s'\nline 160:6 token recognition error at: '\\s'\nline 166:6 token recognition error at: '\\s'\nline 172:6 token recognition error at: '\\s'\nline 178:6 token recognition error at: '\\s'\nline 184:6 token recognition error at: '\\s'\nline 190:6 token recognition error at: '\\s'\nline 196:6 token recognition error at: '\\s'\nline 202:6 token recognition error at: '\\s'\nline 208:6 token recognition error at: '\\s'\nline 214:6 token recognition error at: '\\s'\n"
    },
    "deps/src/curl-7.33.0/Makefile.am" : {
      "ObjectId" : "608bd110a067e2766855178af3b92fa831b112e9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at http://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# List of libcurl source files required to generate VC IDE dsp and prj files\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is a hook to have 'make clean' also clean up the docs and the tests\n\n# dir. The extra check for the Makefiles being present is necessary because\n\n# 'make distcheck' will make clean first in these directories _before_ it runs\n\n# this hook.\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Build source and binary rpms. For rpm-3.0 and above, the ~/.rpmmacros\n\n# must contain the following line:\n\n# %_topdir /home/loic/local/rpm\n\n# and that /home/loic/local/rpm contains the directory SOURCES, BUILD etc.\n\n#\n\n# cd /home/loic/local/rpm ; mkdir -p SOURCES BUILD RPMS/i386 SPECS SRPMS\n\n#\n\n# If additional configure flags are needed to build the package, add the\n\n# following in ~/.rpmmacros\n\n# %configure CFLAGS=\"%{optflags}\" ./configure %{_target_platform} --prefix=%{_prefix} ${AM_CONFIGFLAGS}\n\n# and run make rpm in the following way:\n\n# AM_CONFIGFLAGS='--with-uri=/home/users/loic/local/RedHat-6.2' make rpm\n\n#\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# file (which ends up back in this directory).\n\n# The pkgadd file is in 'pkgtrans' format, so to install on Solaris, do\n\n# pkgadd -d ./HAXXcurl-*\n\n#\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# gak - libtool requires an absoulte directory, hence the pwd below...\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Build a cygwin binary tarball installation file\n\n# resulting .tar.bz2 file will end up at packages/Win32/cygwin\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We extend the standard install with a custom hook:\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We extend the standard uninstall with a custom hook:\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9,
      "Errorlog" : "line 151:63 token recognition error at: '\\s'\nline 213:14 token recognition error at: '\\l'\nline 259:14 token recognition error at: '\\l'\n"
    },
    "deps/src/curl-7.33.0/docs/Makefile.am" : {
      "ObjectId" : "8466a6c296cc235a7a2cf1672fdc639160caba50",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at http://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/curl-7.33.0/docs/examples/Makefile.am" : {
      "ObjectId" : "8e2bc9a835caeb77ec23e08e9e76450349341f74",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at http://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify our include paths here, and do it relative to $(top_srcdir) and\n\n# $(top_builddir), to ensure that these paths which belong to the library\n\n# being currently built and tested are searched before the library which\n\n# might possibly already be installed in the system.\n\n#\n\n# $(top_builddir)/include/curl for generated curlbuild.h included from curl.h\n\n# $(top_builddir)/include for generated curlbuild.h inc. from lib/curl_setup.h\n\n# $(top_srcdir)/include is for libcurl's external include files\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Avoid libcurl obsolete stuff\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prevent LIBS from being used for all link targets\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Dependencies\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Makefile.inc provides the check_PROGRAMS and COMPLICATED_EXAMPLES defines\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/curl-7.33.0/docs/libcurl/Makefile.am" : {
      "ObjectId" : "3114e2b3b0ff60f9a0f51b5966d7bc16fdd1c817",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at http://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/curl-7.33.0/include/Makefile.am" : {
      "ObjectId" : "3b24860299525e8d69368d677e1191e4e525c8e3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/src/curl-7.33.0/include/curl/Makefile.am" : {
      "ObjectId" : "86e8b78344de31206fd05cbd69bb9c2ebb36826e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at http://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# curlbuild.h does not exist in the git tree. When the original libcurl\n\n# source code distribution archive file is created, curlbuild.h.dist is\n\n# renamed to curlbuild.h and included in the tarball so that it can be\n\n# used directly on non-configure systems.\n\n#\n\n# The distributed curlbuild.h will be overwritten on configure systems\n\n# when the configure script runs, with one that is suitable and specific\n\n# to the library being configured and built.\n\n#\n\n# curlbuild.h.in is the distributed template file from which the configure\n\n# script creates curlbuild.h at library configuration time, overwiting the\n\n# one included in the distribution archive.\n\n#\n\n# curlbuild.h.dist is not included in the source code distribution archive.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for debug builds, we scan the sources on all regular make invokes\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/curl-7.33.0/include/curl/curlbuild.h.cmake" : {
      "ObjectId" : "3aa772fc4715dc853ee1c4752f55eaa900d1d2b3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/***************************************************************************\n *                                  _   _ ____  _\n *  Project                     ___| | | |  _ \\| |\n *                             / __| | | | |_) | |\n *                            | (__| |_| |  _ <| |___\n *                             \\___|\\___/|_| \\_\\_____|\n *\n * Copyright (C) 1998 - 2008, Daniel Stenberg, <daniel@haxx.se>, et al.\n *\n * This software is licensed as described in the file COPYING, which\n * you should have received as part of this distribution. The terms\n * are also available at http://curl.haxx.se/docs/copyright.html.\n *\n * You may opt to use, copy, modify, merge, publish, distribute and/or sell\n * copies of the Software, and permit persons to whom the Software is\n * furnished to do so, under the terms of the COPYING file.\n *\n * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n * KIND, either express or implied.\n *\n ***************************************************************************/",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* ================================================================ */\n/*               NOTES FOR CONFIGURE CAPABLE SYSTEMS                */\n/* ================================================================ */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/*\n * NOTE 1:\n * -------\n *\n * Nothing in this file is intended to be modified or adjusted by the\n * curl library user nor by the curl library builder.\n *\n * If you think that something actually needs to be changed, adjusted\n * or fixed in this file, then, report it on the libcurl development\n * mailing list: http://cool.haxx.se/mailman/listinfo/curl-library/\n *\n * This header file shall only export symbols which are 'curl' or 'CURL'\n * prefixed, otherwise public name space would be polluted.\n *\n * NOTE 2:\n * -------\n *\n * Right now you might be staring at file include/curl/curlbuild.h.in or\n * at file include/curl/curlbuild.h, this is due to the following reason:\n *\n * On systems capable of running the configure script, the configure process\n * will overwrite the distributed include/curl/curlbuild.h file with one that\n * is suitable and specific to the library being configured and built, which\n * is generated from the include/curl/curlbuild.h.in template file.\n *\n */",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* ================================================================ */\n/*  DEFINITION OF THESE SYMBOLS SHALL NOT TAKE PLACE ANYWHERE ELSE  */\n/* ================================================================ */",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* ================================================================ */\n/*  EXTERNAL INTERFACE SETTINGS FOR CONFIGURE CAPABLE SYSTEMS ONLY  */\n/* ================================================================ */",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system   */\n/* header file sys/types.h must be included by the external interface. */",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system */\n/* header file stdint.h must be included by the external interface.  */",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system  */\n/* header file inttypes.h must be included by the external interface. */",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* The size of `long', as computed by sizeof. */",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Integral data type used for curl_socklen_t. */",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* on windows socklen_t is in here */",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Data type definition of curl_socklen_t. */",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* The size of `curl_socklen_t', as computed by sizeof. */",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Signed integral data type used for curl_off_t. */",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Data type definition of curl_off_t. */",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* curl_off_t formatting string directive without \"%\" conversion specifier. */",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* unsigned curl_off_t formatting string without \"%\" conversion specifier. */",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* curl_off_t formatting string directive with \"%\" conversion specifier. */",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* The size of `curl_off_t', as computed by sizeof. */",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* curl_off_t constant suffix. */",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* unsigned curl_off_t constant suffix. */",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "deps/src/curl-7.33.0/lib/CMakeLists.txt" : {
      "ObjectId" : "b2bcf090467074c3676025336d45bc010a70cfc8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SET(CSOURCES\n\n# #  memdebug.c -not used\n\n# # nwlib.c - Not used\n\n# # strtok.c - specify later\n\n# # strtoofft.c - specify later\n\n# )\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# # if we have Kerberos 4, right now this is never on\n\n# #OPTION(CURL_KRB4 \"Use Kerberos 4\" OFF)\n\n# IF(CURL_KRB4)\n\n# SET(CSOURCES ${CSOURCES}\n\n# krb4.c\n\n# security.c\n\n# )\n\n# ENDIF(CURL_KRB4)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# #OPTION(CURL_MALLOC_DEBUG \"Debug mallocs in Curl\" OFF)\n\n# MARK_AS_ADVANCED(CURL_MALLOC_DEBUG)\n\n# IF(CURL_MALLOC_DEBUG)\n\n# SET(CSOURCES ${CSOURCES}\n\n# memdebug.c\n\n# )\n\n# ENDIF(CURL_MALLOC_DEBUG)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# # only build compat strtoofft if we need to\n\n# IF(NOT HAVE_STRTOLL AND NOT HAVE__STRTOI64)\n\n# SET(CSOURCES ${CSOURCES}\n\n# strtoofft.c\n\n# )\n\n# ENDIF(NOT HAVE_STRTOLL AND NOT HAVE__STRTOI64)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The rest of the build\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Static lib\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# DLL / so dynamic lib\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix since the library is already named \"libcurl\".\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add \"_imp\" as a suffix before the extension to avoid conflicting with the statically linked \"libcurl.lib\"\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "deps/src/curl-7.33.0/lib/Makefile.am" : {
      "ObjectId" : "4477cc25f80be09a6f8c6e2f5f933f7636407599",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at http://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This might hold -Werror\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Specify our include paths here, and do it relative to $(top_srcdir) and\n\n# $(top_builddir), to ensure that these paths which belong to the library\n\n# being currently built and tested are searched before the library which\n\n# might possibly already be installed in the system.\n\n#\n\n# $(top_builddir)/include/curl for generated curlbuild.h included from curl.h\n\n# $(top_builddir)/include for generated curlbuild.h inc. from lib/curl_setup.h\n\n# $(top_srcdir)/include is for libcurl's external include files\n\n# $(top_builddir)/lib is for libcurl's generated lib/curl_config.h file\n\n# $(top_srcdir)/lib for libcurl's lib/curl_setup.h and other \"private\" files\n\n# $(top_builddir)/ares is for in-tree c-ares's generated ares_build.h file\n\n# $(top_srcdir)/ares is for in-tree c-ares's external include files\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prevent LIBS from being used for all link targets\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Bumping of SONAME conditionally may seem like a weird thing to do, and yeah\n\n# it is. The problem is that we try to avoid the bump as hard as possible, but\n\n# yet it is still necessary for a few rare situations. The configure script will\n\n# attempt to figure out these situations, and it can be forced to consider this\n\n# to be such a case! See README.curl_off_t for further details.\n\n#\n\n# This conditional soname bump SHOULD be removed at next \"proper\" bump.\n\n#\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This flag accepts an argument of the form current[:revision[:age]]. So,\n\n# passing -version-info 3:12:1 sets current to 3, revision to 12, and age to\n\n# 1.\n\n#\n\n# Here's the simplified rule guide on how to change -version-info:\n\n# (current version is C:R:A)\n\n#\n\n# 1. if there are only source changes, use C:R+1:A\n\n# 2. if interfaces were added use C+1:0:A+1\n\n# 3. if interfaces were removed, then use C+1:0:0\n\n#\n\n# For the full guide on libcurl ABI rules, see docs/libcurl/ABI\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Makefile.inc provides the CSOURCES and HHEADERS defines\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# for debug builds, we scan the sources on all regular make invokes\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "deps/src/curl-7.33.0/lib/curl_config.h.cmake" : {
      "ObjectId" : "454c9e6d255ad6e0642d0a2d4d1f773ed2fb46ac",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* lib/curl_config.h.in.  Generated somehow by cmake.  */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* when building libcurl itself */",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Location of default ca bundle */",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Location of default ca path */",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* to disable cookies support */",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* to disable cryptographic authentication */",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* to disable DICT */",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* to disable FILE */",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* to disable FTP */",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* to disable HTTP */",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* to disable LDAP */",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* to disable LDAPS */",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* to disable proxies */",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* to disable TELNET */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* to disable TFTP */",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* to disable verbose strings */",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* to make a symbol visible */",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Ensure using CURL_EXTERN_SYMBOL is possible */",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Use Windows LDAP implementation */",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* when not building a shared library */",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Set to explicitly specify we don't want to use thread-safe functions */",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* your Entropy Gathering Daemon socket pathname */",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Define if you want to enable IPv6 support */",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Define to the type qualifier of arg 1 for getnameinfo. */",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Define to the type of arg 1 for getnameinfo. */",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Define to the type of arg 2 for getnameinfo. */",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "/* Define to the type of args 4 and 6 for getnameinfo. */",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "/* Define to the type of arg 7 for getnameinfo. */",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "/* Specifies the number of arguments to getservbyport_r */",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "/* Specifies the size of the buffer to pass to getservbyport_r */",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "/* Define to 1 if you have the alarm function. */",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "/* Define to 1 if you have the <alloca.h> header file. */",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "/* Define to 1 if you have the <arpa/inet.h> header file. */",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "/* Define to 1 if you have the <arpa/tftp.h> header file. */",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "/* Define to 1 if you have the <assert.h> header file. */",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "/* Define to 1 if you have the `basename' function. */",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "/* Define to 1 if bool is an available type. */",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "/* Define to 1 if you have the clock_gettime function and monotonic timer. */",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "/* Define to 1 if you have the `closesocket' function. */",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "/* Define to 1 if you have the `CRYPTO_cleanup_all_ex_data' function. */",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "/* Define to 1 if you have the <crypto.h> header file. */",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "/* Define to 1 if you have the <des.h> header file. */",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "/* Define to 1 if you have the <dlfcn.h> header file. */",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "/* Define to 1 if you have the `ENGINE_load_builtin_engines' function. */",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "/* Define to 1 if you have the <errno.h> header file. */",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "/* Define to 1 if you have the <err.h> header file. */",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "/* Define to 1 if you have the fcntl function. */",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "/* Define to 1 if you have the <fcntl.h> header file. */",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "/* Define to 1 if you have a working fcntl O_NONBLOCK function. */",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "/* Define to 1 if you have the fdopen function. */",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "/* Define to 1 if you have the `fork' function. */",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "/* Define to 1 if you have the freeaddrinfo function. */",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "/* Define to 1 if you have the freeifaddrs function. */",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "/* Define to 1 if you have the ftruncate function. */",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "/* Define to 1 if you have a working getaddrinfo function. */",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "/* Define to 1 if you have the `geteuid' function. */",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "/* Define to 1 if you have the gethostbyaddr function. */",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "/* Define to 1 if you have the gethostbyaddr_r function. */",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "/* gethostbyaddr_r() takes 5 args */",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "/* gethostbyaddr_r() takes 7 args */",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "/* gethostbyaddr_r() takes 8 args */",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "/* Define to 1 if you have the gethostbyname function. */",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "/* Define to 1 if you have the gethostbyname_r function. */",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "/* gethostbyname_r() takes 3 args */",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "/* gethostbyname_r() takes 5 args */",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "/* gethostbyname_r() takes 6 args */",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "/* Define to 1 if you have the gethostname function. */",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "/* Define to 1 if you have a working getifaddrs function. */",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "/* Define to 1 if you have the getnameinfo function. */",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "/* Define to 1 if you have the `getpass_r' function. */",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "/* Define to 1 if you have the `getppid' function. */",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "/* Define to 1 if you have the `getprotobyname' function. */",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "/* Define to 1 if you have the `getpwuid' function. */",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "/* Define to 1 if you have the `getrlimit' function. */",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "/* Define to 1 if you have the getservbyport_r function. */",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "/* Define to 1 if you have the `gettimeofday' function. */",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "/* Define to 1 if you have a working glibc-style strerror_r function. */",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "/* Define to 1 if you have a working gmtime_r function. */",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "/* if you have the gssapi libraries */",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "/* Define to 1 if you have the <gssapi/gssapi_generic.h> header file. */",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "/* Define to 1 if you have the <gssapi/gssapi.h> header file. */",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "/* Define to 1 if you have the <gssapi/gssapi_krb5.h> header file. */",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "/* if you have the GNU gssapi libraries */",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "/* if you have the Heimdal gssapi libraries */",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "/* if you have the MIT gssapi libraries */",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "/* Define to 1 if you have the `idna_strerror' function. */",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "/* Define to 1 if you have the `idn_free' function. */",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "/* Define to 1 if you have the <idn-free.h> header file. */",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "/* Define to 1 if you have the <ifaddrs.h> header file. */",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "/* Define to 1 if you have the `inet_addr' function. */",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "/* Define to 1 if you have the inet_ntoa_r function. */",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "/* inet_ntoa_r() takes 2 args */",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "/* inet_ntoa_r() takes 3 args */",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "/* Define to 1 if you have a IPv6 capable working inet_ntop function. */",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "/* Define to 1 if you have a IPv6 capable working inet_pton function. */",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "/* Define to 1 if you have the <inttypes.h> header file. */",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "/* Define to 1 if you have the ioctl function. */",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "/* Define to 1 if you have the ioctlsocket function. */",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "/* Define to 1 if you have the IoctlSocket camel case function. */",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "/* Define to 1 if you have a working IoctlSocket camel case FIONBIO function.\n   */",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "/* Define to 1 if you have a working ioctlsocket FIONBIO function. */",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "/* Define to 1 if you have a working ioctl FIONBIO function. */",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "/* Define to 1 if you have a working ioctl SIOCGIFADDR function. */",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "/* Define to 1 if you have the <io.h> header file. */",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "/* if you have the Kerberos4 libraries (including -ldes) */",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "/* Define to 1 if you have the `krb_get_our_ip_for_realm' function. */",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "/* Define to 1 if you have the <krb.h> header file. */",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "/* Define to 1 if you have the lber.h header file. */",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "/* Define to 1 if you have the ldapssl.h header file. */",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "/* Define to 1 if you have the ldap.h header file. */",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "/* Use LDAPS implementation */",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "/* Define to 1 if you have the ldap_ssl.h header file. */",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "/* Define to 1 if you have the `ldap_url_parse' function. */",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "/* Define to 1 if you have the <libgen.h> header file. */",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "/* Define to 1 if you have the `idn' library (-lidn). */",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "/* Define to 1 if you have the `resolv' library (-lresolv). */",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "/* Define to 1 if you have the `resolve' library (-lresolve). */",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "/* Define to 1 if you have the `socket' library (-lsocket). */",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "/* Define to 1 if you have the `ssh2' library (-lssh2). */",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "/* Define to 1 if you have the <libssh2.h> header file. */",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "/* Define to 1 if you have the `ssl' library (-lssl). */",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "/* if zlib is available */",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "/* Define to 1 if you have the <limits.h> header file. */",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "/* if your compiler supports LL */",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "/* Define to 1 if you have the <locale.h> header file. */",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "125" : {
        "Text" : "/* Define to 1 if you have a working localtime_r function. */",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "/* Define to 1 if the compiler supports the 'long long' data type. */",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "127" : {
        "Text" : "/* Define to 1 if you have the malloc.h header file. */",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "128" : {
        "Text" : "/* Define to 1 if you have the <memory.h> header file. */",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "129" : {
        "Text" : "/* Define to 1 if you have the MSG_NOSIGNAL flag. */",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "130" : {
        "Text" : "/* Define to 1 if you have the <netdb.h> header file. */",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "131" : {
        "Text" : "/* Define to 1 if you have the <netinet/in.h> header file. */",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "132" : {
        "Text" : "/* Define to 1 if you have the <netinet/tcp.h> header file. */",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "133" : {
        "Text" : "/* Define to 1 if you have the <net/if.h> header file. */",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "134" : {
        "Text" : "/* Define to 1 if NI_WITHSCOPEID exists and works. */",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "135" : {
        "Text" : "/* if you have an old MIT gssapi library, lacking GSS_C_NT_HOSTBASED_SERVICE\n   */",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "136" : {
        "Text" : "/* Define to 1 if you have the <openssl/crypto.h> header file. */",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "137" : {
        "Text" : "/* Define to 1 if you have the <openssl/engine.h> header file. */",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "138" : {
        "Text" : "/* Define to 1 if you have the <openssl/err.h> header file. */",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "/* Define to 1 if you have the <openssl/pem.h> header file. */",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "140" : {
        "Text" : "/* Define to 1 if you have the <openssl/pkcs12.h> header file. */",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "141" : {
        "Text" : "/* Define to 1 if you have the <openssl/rsa.h> header file. */",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "/* Define to 1 if you have the <openssl/ssl.h> header file. */",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "/* Define to 1 if you have the <openssl/x509.h> header file. */",
        "Line" : 432,
        "CharPositionInLine" : 0
      },
      "144" : {
        "Text" : "/* Define to 1 if you have the <pem.h> header file. */",
        "Line" : 435,
        "CharPositionInLine" : 0
      },
      "145" : {
        "Text" : "/* Define to 1 if you have the `perror' function. */",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "146" : {
        "Text" : "/* Define to 1 if you have the `pipe' function. */",
        "Line" : 441,
        "CharPositionInLine" : 0
      },
      "147" : {
        "Text" : "/* Define to 1 if you have a working poll function. */",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "148" : {
        "Text" : "/* If you have a fine poll */",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "149" : {
        "Text" : "/* Define to 1 if you have the <poll.h> header file. */",
        "Line" : 450,
        "CharPositionInLine" : 0
      },
      "150" : {
        "Text" : "/* Define to 1 if you have a working POSIX-style strerror_r function. */",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "151" : {
        "Text" : "/* Define to 1 if you have the <pwd.h> header file. */",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "152" : {
        "Text" : "/* Define to 1 if you have the `RAND_egd' function. */",
        "Line" : 459,
        "CharPositionInLine" : 0
      },
      "153" : {
        "Text" : "/* Define to 1 if you have the `RAND_screen' function. */",
        "Line" : 462,
        "CharPositionInLine" : 0
      },
      "154" : {
        "Text" : "/* Define to 1 if you have the `RAND_status' function. */",
        "Line" : 465,
        "CharPositionInLine" : 0
      },
      "155" : {
        "Text" : "/* Define to 1 if you have the recv function. */",
        "Line" : 468,
        "CharPositionInLine" : 0
      },
      "156" : {
        "Text" : "/* Define to 1 if you have the recvfrom function. */",
        "Line" : 471,
        "CharPositionInLine" : 0
      },
      "157" : {
        "Text" : "/* Define to 1 if you have the <rsa.h> header file. */",
        "Line" : 474,
        "CharPositionInLine" : 0
      },
      "158" : {
        "Text" : "/* Define to 1 if you have the select function. */",
        "Line" : 477,
        "CharPositionInLine" : 0
      },
      "159" : {
        "Text" : "/* Define to 1 if you have the send function. */",
        "Line" : 480,
        "CharPositionInLine" : 0
      },
      "160" : {
        "Text" : "/* Define to 1 if you have the <setjmp.h> header file. */",
        "Line" : 483,
        "CharPositionInLine" : 0
      },
      "161" : {
        "Text" : "/* Define to 1 if you have the `setlocale' function. */",
        "Line" : 486,
        "CharPositionInLine" : 0
      },
      "162" : {
        "Text" : "/* Define to 1 if you have the `setmode' function. */",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "163" : {
        "Text" : "/* Define to 1 if you have the `setrlimit' function. */",
        "Line" : 492,
        "CharPositionInLine" : 0
      },
      "164" : {
        "Text" : "/* Define to 1 if you have the setsockopt function. */",
        "Line" : 495,
        "CharPositionInLine" : 0
      },
      "165" : {
        "Text" : "/* Define to 1 if you have a working setsockopt SO_NONBLOCK function. */",
        "Line" : 498,
        "CharPositionInLine" : 0
      },
      "166" : {
        "Text" : "/* Define to 1 if you have the <sgtty.h> header file. */",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "167" : {
        "Text" : "/* Define to 1 if you have the sigaction function. */",
        "Line" : 504,
        "CharPositionInLine" : 0
      },
      "168" : {
        "Text" : "/* Define to 1 if you have the siginterrupt function. */",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "169" : {
        "Text" : "/* Define to 1 if you have the signal function. */",
        "Line" : 510,
        "CharPositionInLine" : 0
      },
      "170" : {
        "Text" : "/* Define to 1 if you have the <signal.h> header file. */",
        "Line" : 513,
        "CharPositionInLine" : 0
      },
      "171" : {
        "Text" : "/* Define to 1 if you have the sigsetjmp function or macro. */",
        "Line" : 516,
        "CharPositionInLine" : 0
      },
      "172" : {
        "Text" : "/* Define to 1 if sig_atomic_t is an available typedef. */",
        "Line" : 519,
        "CharPositionInLine" : 0
      },
      "173" : {
        "Text" : "/* Define to 1 if sig_atomic_t is already defined as volatile. */",
        "Line" : 522,
        "CharPositionInLine" : 0
      },
      "174" : {
        "Text" : "/* Define to 1 if struct sockaddr_in6 has the sin6_scope_id member */",
        "Line" : 525,
        "CharPositionInLine" : 0
      },
      "175" : {
        "Text" : "/* Define to 1 if you have the `socket' function. */",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "176" : {
        "Text" : "/* Define this if you have the SPNEGO library fbopenssl */",
        "Line" : 531,
        "CharPositionInLine" : 0
      },
      "177" : {
        "Text" : "/* Define to 1 if you have the `SSL_get_shutdown' function. */",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "178" : {
        "Text" : "/* Define to 1 if you have the <ssl.h> header file. */",
        "Line" : 537,
        "CharPositionInLine" : 0
      },
      "179" : {
        "Text" : "/* Define to 1 if you have the <stdbool.h> header file. */",
        "Line" : 540,
        "CharPositionInLine" : 0
      },
      "180" : {
        "Text" : "/* Define to 1 if you have the <stdint.h> header file. */",
        "Line" : 543,
        "CharPositionInLine" : 0
      },
      "181" : {
        "Text" : "/* Define to 1 if you have the <stdio.h> header file. */",
        "Line" : 546,
        "CharPositionInLine" : 0
      },
      "182" : {
        "Text" : "/* Define to 1 if you have the <stdlib.h> header file. */",
        "Line" : 549,
        "CharPositionInLine" : 0
      },
      "183" : {
        "Text" : "/* Define to 1 if you have the strcasecmp function. */",
        "Line" : 552,
        "CharPositionInLine" : 0
      },
      "184" : {
        "Text" : "/* Define to 1 if you have the strcasestr function. */",
        "Line" : 555,
        "CharPositionInLine" : 0
      },
      "185" : {
        "Text" : "/* Define to 1 if you have the strcmpi function. */",
        "Line" : 558,
        "CharPositionInLine" : 0
      },
      "186" : {
        "Text" : "/* Define to 1 if you have the strdup function. */",
        "Line" : 561,
        "CharPositionInLine" : 0
      },
      "187" : {
        "Text" : "/* Define to 1 if you have the strerror_r function. */",
        "Line" : 564,
        "CharPositionInLine" : 0
      },
      "188" : {
        "Text" : "/* Define to 1 if you have the stricmp function. */",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "189" : {
        "Text" : "/* Define to 1 if you have the <strings.h> header file. */",
        "Line" : 570,
        "CharPositionInLine" : 0
      },
      "190" : {
        "Text" : "/* Define to 1 if you have the <string.h> header file. */",
        "Line" : 573,
        "CharPositionInLine" : 0
      },
      "191" : {
        "Text" : "/* Define to 1 if you have the strlcat function. */",
        "Line" : 576,
        "CharPositionInLine" : 0
      },
      "192" : {
        "Text" : "/* Define to 1 if you have the `strlcpy' function. */",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "193" : {
        "Text" : "/* Define to 1 if you have the strncasecmp function. */",
        "Line" : 582,
        "CharPositionInLine" : 0
      },
      "194" : {
        "Text" : "/* Define to 1 if you have the strncmpi function. */",
        "Line" : 585,
        "CharPositionInLine" : 0
      },
      "195" : {
        "Text" : "/* Define to 1 if you have the strnicmp function. */",
        "Line" : 588,
        "CharPositionInLine" : 0
      },
      "196" : {
        "Text" : "/* Define to 1 if you have the <stropts.h> header file. */",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "197" : {
        "Text" : "/* Define to 1 if you have the strstr function. */",
        "Line" : 594,
        "CharPositionInLine" : 0
      },
      "198" : {
        "Text" : "/* Define to 1 if you have the strtok_r function. */",
        "Line" : 597,
        "CharPositionInLine" : 0
      },
      "199" : {
        "Text" : "/* Define to 1 if you have the strtoll function. */",
        "Line" : 600,
        "CharPositionInLine" : 0
      },
      "200" : {
        "Text" : "/* if struct sockaddr_storage is defined */",
        "Line" : 603,
        "CharPositionInLine" : 0
      },
      "201" : {
        "Text" : "/* Define to 1 if you have the timeval struct. */",
        "Line" : 606,
        "CharPositionInLine" : 0
      },
      "202" : {
        "Text" : "/* Define to 1 if you have the <sys/filio.h> header file. */",
        "Line" : 609,
        "CharPositionInLine" : 0
      },
      "203" : {
        "Text" : "/* Define to 1 if you have the <sys/ioctl.h> header file. */",
        "Line" : 612,
        "CharPositionInLine" : 0
      },
      "204" : {
        "Text" : "/* Define to 1 if you have the <sys/param.h> header file. */",
        "Line" : 615,
        "CharPositionInLine" : 0
      },
      "205" : {
        "Text" : "/* Define to 1 if you have the <sys/poll.h> header file. */",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "206" : {
        "Text" : "/* Define to 1 if you have the <sys/resource.h> header file. */",
        "Line" : 621,
        "CharPositionInLine" : 0
      },
      "207" : {
        "Text" : "/* Define to 1 if you have the <sys/select.h> header file. */",
        "Line" : 624,
        "CharPositionInLine" : 0
      },
      "208" : {
        "Text" : "/* Define to 1 if you have the <sys/socket.h> header file. */",
        "Line" : 627,
        "CharPositionInLine" : 0
      },
      "209" : {
        "Text" : "/* Define to 1 if you have the <sys/sockio.h> header file. */",
        "Line" : 630,
        "CharPositionInLine" : 0
      },
      "210" : {
        "Text" : "/* Define to 1 if you have the <sys/stat.h> header file. */",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "211" : {
        "Text" : "/* Define to 1 if you have the <sys/time.h> header file. */",
        "Line" : 636,
        "CharPositionInLine" : 0
      },
      "212" : {
        "Text" : "/* Define to 1 if you have the <sys/types.h> header file. */",
        "Line" : 639,
        "CharPositionInLine" : 0
      },
      "213" : {
        "Text" : "/* Define to 1 if you have the <sys/uio.h> header file. */",
        "Line" : 642,
        "CharPositionInLine" : 0
      },
      "214" : {
        "Text" : "/* Define to 1 if you have the <sys/un.h> header file. */",
        "Line" : 645,
        "CharPositionInLine" : 0
      },
      "215" : {
        "Text" : "/* Define to 1 if you have the <sys/utime.h> header file. */",
        "Line" : 648,
        "CharPositionInLine" : 0
      },
      "216" : {
        "Text" : "/* Define to 1 if you have the <termios.h> header file. */",
        "Line" : 651,
        "CharPositionInLine" : 0
      },
      "217" : {
        "Text" : "/* Define to 1 if you have the <termio.h> header file. */",
        "Line" : 654,
        "CharPositionInLine" : 0
      },
      "218" : {
        "Text" : "/* Define to 1 if you have the <time.h> header file. */",
        "Line" : 657,
        "CharPositionInLine" : 0
      },
      "219" : {
        "Text" : "/* Define to 1 if you have the <tld.h> header file. */",
        "Line" : 660,
        "CharPositionInLine" : 0
      },
      "220" : {
        "Text" : "/* Define to 1 if you have the `tld_strerror' function. */",
        "Line" : 663,
        "CharPositionInLine" : 0
      },
      "221" : {
        "Text" : "/* Define to 1 if you have the `uname' function. */",
        "Line" : 666,
        "CharPositionInLine" : 0
      },
      "222" : {
        "Text" : "/* Define to 1 if you have the <unistd.h> header file. */",
        "Line" : 669,
        "CharPositionInLine" : 0
      },
      "223" : {
        "Text" : "/* Define to 1 if you have the `utime' function. */",
        "Line" : 672,
        "CharPositionInLine" : 0
      },
      "224" : {
        "Text" : "/* Define to 1 if you have the <utime.h> header file. */",
        "Line" : 675,
        "CharPositionInLine" : 0
      },
      "225" : {
        "Text" : "/* Define to 1 if compiler supports C99 variadic macro style. */",
        "Line" : 678,
        "CharPositionInLine" : 0
      },
      "226" : {
        "Text" : "/* Define to 1 if compiler supports old gcc variadic macro style. */",
        "Line" : 681,
        "CharPositionInLine" : 0
      },
      "227" : {
        "Text" : "/* Define to 1 if you have the winber.h header file. */",
        "Line" : 684,
        "CharPositionInLine" : 0
      },
      "228" : {
        "Text" : "/* Define to 1 if you have the windows.h header file. */",
        "Line" : 687,
        "CharPositionInLine" : 0
      },
      "229" : {
        "Text" : "/* Define to 1 if you have the winldap.h header file. */",
        "Line" : 690,
        "CharPositionInLine" : 0
      },
      "230" : {
        "Text" : "/* Define to 1 if you have the winsock2.h header file. */",
        "Line" : 693,
        "CharPositionInLine" : 0
      },
      "231" : {
        "Text" : "/* Define to 1 if you have the winsock.h header file. */",
        "Line" : 696,
        "CharPositionInLine" : 0
      },
      "232" : {
        "Text" : "/* Define this symbol if your OS supports changing the contents of argv */",
        "Line" : 699,
        "CharPositionInLine" : 0
      },
      "233" : {
        "Text" : "/* Define to 1 if you have the writev function. */",
        "Line" : 702,
        "CharPositionInLine" : 0
      },
      "234" : {
        "Text" : "/* Define to 1 if you have the ws2tcpip.h header file. */",
        "Line" : 705,
        "CharPositionInLine" : 0
      },
      "235" : {
        "Text" : "/* Define to 1 if you have the <x509.h> header file. */",
        "Line" : 708,
        "CharPositionInLine" : 0
      },
      "236" : {
        "Text" : "/* Define if you have the <process.h> header file. */",
        "Line" : 711,
        "CharPositionInLine" : 0
      },
      "237" : {
        "Text" : "/* if you have the zlib.h header file */",
        "Line" : 714,
        "CharPositionInLine" : 0
      },
      "238" : {
        "Text" : "/* Define to the sub-directory in which libtool stores uninstalled libraries.\n   */",
        "Line" : 717,
        "CharPositionInLine" : 0
      },
      "239" : {
        "Text" : "/* If you lack a fine basename() prototype */",
        "Line" : 721,
        "CharPositionInLine" : 0
      },
      "240" : {
        "Text" : "/* Define to 1 if you need the lber.h header file even with ldap.h */",
        "Line" : 724,
        "CharPositionInLine" : 0
      },
      "241" : {
        "Text" : "/* Define to 1 if you need the malloc.h header file even with stdlib.h */",
        "Line" : 727,
        "CharPositionInLine" : 0
      },
      "242" : {
        "Text" : "/* Define to 1 if _REENTRANT preprocessor symbol must be defined. */",
        "Line" : 730,
        "CharPositionInLine" : 0
      },
      "243" : {
        "Text" : "/* cpu-machine-OS */",
        "Line" : 733,
        "CharPositionInLine" : 0
      },
      "244" : {
        "Text" : "/* Name of package */",
        "Line" : 736,
        "CharPositionInLine" : 0
      },
      "245" : {
        "Text" : "/* Define to the address where bug reports for this package should be sent. */",
        "Line" : 739,
        "CharPositionInLine" : 0
      },
      "246" : {
        "Text" : "/* Define to the full name of this package. */",
        "Line" : 742,
        "CharPositionInLine" : 0
      },
      "247" : {
        "Text" : "/* Define to the full name and version of this package. */",
        "Line" : 745,
        "CharPositionInLine" : 0
      },
      "248" : {
        "Text" : "/* Define to the one symbol short name of this package. */",
        "Line" : 748,
        "CharPositionInLine" : 0
      },
      "249" : {
        "Text" : "/* Define to the version of this package. */",
        "Line" : 751,
        "CharPositionInLine" : 0
      },
      "250" : {
        "Text" : "/* a suitable file to read random data from */",
        "Line" : 754,
        "CharPositionInLine" : 0
      },
      "251" : {
        "Text" : "/* Define to the type of arg 1 for recvfrom. */",
        "Line" : 757,
        "CharPositionInLine" : 0
      },
      "252" : {
        "Text" : "/* Define to the type pointed by arg 2 for recvfrom. */",
        "Line" : 760,
        "CharPositionInLine" : 0
      },
      "253" : {
        "Text" : "/* Define to 1 if the type pointed by arg 2 for recvfrom is void. */",
        "Line" : 763,
        "CharPositionInLine" : 0
      },
      "254" : {
        "Text" : "/* Define to the type of arg 3 for recvfrom. */",
        "Line" : 766,
        "CharPositionInLine" : 0
      },
      "255" : {
        "Text" : "/* Define to the type of arg 4 for recvfrom. */",
        "Line" : 769,
        "CharPositionInLine" : 0
      },
      "256" : {
        "Text" : "/* Define to the type pointed by arg 5 for recvfrom. */",
        "Line" : 772,
        "CharPositionInLine" : 0
      },
      "257" : {
        "Text" : "/* Define to 1 if the type pointed by arg 5 for recvfrom is void. */",
        "Line" : 775,
        "CharPositionInLine" : 0
      },
      "258" : {
        "Text" : "/* Define to the type pointed by arg 6 for recvfrom. */",
        "Line" : 778,
        "CharPositionInLine" : 0
      },
      "259" : {
        "Text" : "/* Define to 1 if the type pointed by arg 6 for recvfrom is void. */",
        "Line" : 781,
        "CharPositionInLine" : 0
      },
      "260" : {
        "Text" : "/* Define to the function return type for recvfrom. */",
        "Line" : 784,
        "CharPositionInLine" : 0
      },
      "261" : {
        "Text" : "/* Define to the type of arg 1 for recv. */",
        "Line" : 787,
        "CharPositionInLine" : 0
      },
      "262" : {
        "Text" : "/* Define to the type of arg 2 for recv. */",
        "Line" : 790,
        "CharPositionInLine" : 0
      },
      "263" : {
        "Text" : "/* Define to the type of arg 3 for recv. */",
        "Line" : 793,
        "CharPositionInLine" : 0
      },
      "264" : {
        "Text" : "/* Define to the type of arg 4 for recv. */",
        "Line" : 796,
        "CharPositionInLine" : 0
      },
      "265" : {
        "Text" : "/* Define to the function return type for recv. */",
        "Line" : 799,
        "CharPositionInLine" : 0
      },
      "266" : {
        "Text" : "/* Define as the return type of signal handlers (`int' or `void'). */",
        "Line" : 802,
        "CharPositionInLine" : 0
      },
      "267" : {
        "Text" : "/* Define to the type qualifier of arg 5 for select. */",
        "Line" : 805,
        "CharPositionInLine" : 0
      },
      "268" : {
        "Text" : "/* Define to the type of arg 1 for select. */",
        "Line" : 808,
        "CharPositionInLine" : 0
      },
      "269" : {
        "Text" : "/* Define to the type of args 2, 3 and 4 for select. */",
        "Line" : 811,
        "CharPositionInLine" : 0
      },
      "270" : {
        "Text" : "/* Define to the type of arg 5 for select. */",
        "Line" : 814,
        "CharPositionInLine" : 0
      },
      "271" : {
        "Text" : "/* Define to the function return type for select. */",
        "Line" : 817,
        "CharPositionInLine" : 0
      },
      "272" : {
        "Text" : "/* Define to the type qualifier of arg 2 for send. */",
        "Line" : 820,
        "CharPositionInLine" : 0
      },
      "273" : {
        "Text" : "/* Define to the type of arg 1 for send. */",
        "Line" : 823,
        "CharPositionInLine" : 0
      },
      "274" : {
        "Text" : "/* Define to the type of arg 2 for send. */",
        "Line" : 826,
        "CharPositionInLine" : 0
      },
      "275" : {
        "Text" : "/* Define to the type of arg 3 for send. */",
        "Line" : 829,
        "CharPositionInLine" : 0
      },
      "276" : {
        "Text" : "/* Define to the type of arg 4 for send. */",
        "Line" : 832,
        "CharPositionInLine" : 0
      },
      "277" : {
        "Text" : "/* Define to the function return type for send. */",
        "Line" : 835,
        "CharPositionInLine" : 0
      },
      "278" : {
        "Text" : "/* The size of `int', as computed by sizeof. */",
        "Line" : 838,
        "CharPositionInLine" : 0
      },
      "279" : {
        "Text" : "/* The size of `short', as computed by sizeof. */",
        "Line" : 841,
        "CharPositionInLine" : 0
      },
      "280" : {
        "Text" : "/* The size of `long', as computed by sizeof. */",
        "Line" : 844,
        "CharPositionInLine" : 0
      },
      "281" : {
        "Text" : "/* The size of `off_t', as computed by sizeof. */",
        "Line" : 847,
        "CharPositionInLine" : 0
      },
      "282" : {
        "Text" : "/* The size of `size_t', as computed by sizeof. */",
        "Line" : 850,
        "CharPositionInLine" : 0
      },
      "283" : {
        "Text" : "/* The size of `time_t', as computed by sizeof. */",
        "Line" : 853,
        "CharPositionInLine" : 0
      },
      "284" : {
        "Text" : "/* The size of `void*', as computed by sizeof. */",
        "Line" : 856,
        "CharPositionInLine" : 0
      },
      "285" : {
        "Text" : "/* Define to 1 if you have the ANSI C header files. */",
        "Line" : 859,
        "CharPositionInLine" : 0
      },
      "286" : {
        "Text" : "/* Define to the type of arg 3 for strerror_r. */",
        "Line" : 862,
        "CharPositionInLine" : 0
      },
      "287" : {
        "Text" : "/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */",
        "Line" : 865,
        "CharPositionInLine" : 0
      },
      "288" : {
        "Text" : "/* Define if you want to enable c-ares support */",
        "Line" : 868,
        "CharPositionInLine" : 0
      },
      "289" : {
        "Text" : "/* Define to disable non-blocking sockets. */",
        "Line" : 871,
        "CharPositionInLine" : 0
      },
      "290" : {
        "Text" : "/* if GnuTLS is enabled */",
        "Line" : 874,
        "CharPositionInLine" : 0
      },
      "291" : {
        "Text" : "/* if PolarSSL is enabled */",
        "Line" : 877,
        "CharPositionInLine" : 0
      },
      "292" : {
        "Text" : "/* if libSSH2 is in use */",
        "Line" : 880,
        "CharPositionInLine" : 0
      },
      "293" : {
        "Text" : "/* If you want to build curl with the built-in manual */",
        "Line" : 883,
        "CharPositionInLine" : 0
      },
      "294" : {
        "Text" : "/* if NSS is enabled */",
        "Line" : 886,
        "CharPositionInLine" : 0
      },
      "295" : {
        "Text" : "/* if OpenSSL is in use */",
        "Line" : 889,
        "CharPositionInLine" : 0
      },
      "296" : {
        "Text" : "/* if SSL is enabled */",
        "Line" : 892,
        "CharPositionInLine" : 0
      },
      "297" : {
        "Text" : "/* Define to 1 if you are building a Windows target without large file\n   support. */",
        "Line" : 895,
        "CharPositionInLine" : 0
      },
      "298" : {
        "Text" : "/* to enable SSPI support */",
        "Line" : 899,
        "CharPositionInLine" : 0
      },
      "299" : {
        "Text" : "/* Define to 1 if using yaSSL in OpenSSL compatibility mode. */",
        "Line" : 902,
        "CharPositionInLine" : 0
      },
      "300" : {
        "Text" : "/* Version number of package */",
        "Line" : 905,
        "CharPositionInLine" : 0
      },
      "301" : {
        "Text" : "/* Define to avoid automatic inclusion of winsock.h */",
        "Line" : 908,
        "CharPositionInLine" : 0
      },
      "302" : {
        "Text" : "/* Define to 1 if OS is AIX. */",
        "Line" : 911,
        "CharPositionInLine" : 0
      },
      "303" : {
        "Text" : "/* Number of bits in a file offset, on hosts where this is settable. */",
        "Line" : 916,
        "CharPositionInLine" : 0
      },
      "304" : {
        "Text" : "/* Define for large files, on AIX-style hosts. */",
        "Line" : 919,
        "CharPositionInLine" : 0
      },
      "305" : {
        "Text" : "/* define this if you need it to compile thread-safe code */",
        "Line" : 922,
        "CharPositionInLine" : 0
      },
      "306" : {
        "Text" : "/* Define to empty if `const' does not conform to ANSI C. */",
        "Line" : 925,
        "CharPositionInLine" : 0
      },
      "307" : {
        "Text" : "/* Type to use in place of in_addr_t when system does not provide it. */",
        "Line" : 928,
        "CharPositionInLine" : 0
      },
      "308" : {
        "Text" : "/* Define to `__inline__' or `__inline' if that's what the C compiler\n   calls it, or to nothing if 'inline' is not supported under any name.  */",
        "Line" : 931,
        "CharPositionInLine" : 0
      },
      "309" : {
        "Text" : "/* Define to `unsigned int' if <sys/types.h> does not define. */",
        "Line" : 937,
        "CharPositionInLine" : 0
      },
      "310" : {
        "Text" : "/* the signed version of size_t */",
        "Line" : 940,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 311
    },
    "deps/src/curl-7.33.0/packages/AIX/Makefile.am" : {
      "ObjectId" : "4b038ed31cae1c50dced08e47553ec3c0a30f876",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/src/curl-7.33.0/packages/AIX/RPM/Makefile.am" : {
      "ObjectId" : "d1e7bf9d93b88441b805d4e3a4fa2767e19d8de8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/src/curl-7.33.0/packages/EPM/Makefile.am" : {
      "ObjectId" : "b010a4b038a27b2c186d7c5023e81d1162b8e5c5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/src/curl-7.33.0/packages/Linux/Makefile.am" : {
      "ObjectId" : "5753055799b263c6fcba124906fdfe3332459e4d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/src/curl-7.33.0/packages/Linux/RPM/Makefile.am" : {
      "ObjectId" : "5d46d87c67100c702b4706d42fac6ba72498b660",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/src/curl-7.33.0/packages/Makefile.am" : {
      "ObjectId" : "bef04f3c2e5c5415bf697b71659f5cdec3734dad",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/src/curl-7.33.0/packages/Solaris/Makefile.am" : {
      "ObjectId" : "d0129479f072d583a38701e2f916d52f28774eb4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/curl-7.33.0/packages/Win32/Makefile.am" : {
      "ObjectId" : "93350ea13f97c27ec33b2764c1ea4c49b749a931",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/src/curl-7.33.0/packages/Win32/cygwin/Makefile.am" : {
      "ObjectId" : "b56148dc928eb63f7e7f00e454a65fffa3cff955",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# Build a Cygwin binary tar ball\n\n#\n\n# Read the README file for details on using this Makefile\n\n#\n\n# NOTE: As I'm not particularly familiar with Makefiles, this was the\n\n#  best I could come up with. It should probably be enhanced someday\n\n#  to actually use the correct target and pre-requisite names, etc...\n\n#  If anyone else wants to volunteer, feel free ;-)\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Cygwin build number (default to \"1\")\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Cygwin tarball build dir (fully-qualified name, gets deleted when done)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# $(STRIP) $(cygwintmp)/usr/bin/cygcurl-?.dll\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# copy some files into the binary install dir\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# copy some files into the -dev install dir, remove some from binary\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# create both tar files, and delete tmp folders\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "deps/src/curl-7.33.0/packages/vms/Makefile.am" : {
      "ObjectId" : "38f65859a3afc8a585a0775d5f54a83788164f61",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/src/curl-7.33.0/src/CMakeLists.txt" : {
      "ObjectId" : "0b4556f2c8cc09a46e8be4ce71a43decc9b27e0e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# First try to locate tool_hugehelp.c to see if it has already been created\n\n# TODO Find the file WITHOUT adding a cache entry!!! Or else the user can delete the file after the script was first run, and the script won't notice it has gone.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To be able to reach \"curl_setup_once.h\"\n\n# To be able to reach \"curl_config.h\"\n\n# To be able to reach \"curl/curlbuild.h\"\n",
        "Line" : 28,
        "CharPositionInLine" : 32
      },
      "2" : {
        "Text" : "# Setup dependencies\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################################################\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#SET_TARGET_PROPERTIES(${EXE_NAME} ARCHIVE_OUTPUT_DIRECTORY \"blah blah blah\")\n\n#SET_TARGET_PROPERTIES(${EXE_NAME} RUNTIME_OUTPUT_DIRECTORY \"blah blah blah\")\n\n#SET_TARGET_PROPERTIES(${EXE_NAME} LIBRARY_OUTPUT_DIRECTORY \"blah blah blah\")\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add the postfix to the executable since it is not added automatically as for modules and shared libraries\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#INCLUDE(ModuleInstall OPTIONAL)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/curl-7.33.0/src/Makefile.am" : {
      "ObjectId" : "72e6772002bf55762d6da9547cebb0f7cbc1739b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at http://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify our include paths here, and do it relative to $(top_srcdir) and\n\n# $(top_builddir), to ensure that these paths which belong to the library\n\n# being currently built and tested are searched before the library which\n\n# might possibly already be installed in the system.\n\n#\n\n# $(top_builddir)/include/curl for generated curlbuild.h included from curl.h\n\n# $(top_builddir)/include for generated curlbuild.h inc. from lib/curl_setup.h\n\n# $(top_srcdir)/include is for libcurl's external include files\n\n# $(top_builddir)/lib is for libcurl's generated lib/curl_config.h file\n\n# $(top_builddir)/src is for curl's generated src/curl_config.h file\n\n# $(top_srcdir)/lib for libcurl's lib/curl_setup.h and other \"borrowed\" files\n\n# $(top_srcdir)/src is for curl's src/tool_setup.h and \"curl-private\" files\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This might hold -Werror\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prevent LIBS from being used for all link targets\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if unit tests are enabled, build a static library to link them with\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use the C locale to ensure that only ASCII characters appear in the\n\n# embedded text.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# figured out by the configure script\n",
        "Line" : 82,
        "CharPositionInLine" : 36
      },
      "7" : {
        "Text" : "# Here are the stuff to create a built-in manual\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This generates the tool_hugehelp.c file in both uncompressed and\n\n# compressed formats\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# HAVE_LIBZ\n",
        "Line" : 108,
        "CharPositionInLine" : 5
      },
      "10" : {
        "Text" : "# This generates the tool_hugehelp.c file uncompressed only\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# USE_MANUAL\n",
        "Line" : 115,
        "CharPositionInLine" : 5
      },
      "12" : {
        "Text" : "# built-in manual has been disabled, make a blank file\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ignore tool_hugehelp.c since it is generated source code and it plays\n\n# by slightly different rules!\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# for debug builds, we scan the sources on all regular make invokes\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "deps/src/curl-7.33.0/tests/CMakeLists.txt" : {
      "ObjectId" : "04ab06ed66662e518f361291caf197c47153c521",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/src/curl-7.33.0/tests/Makefile.am" : {
      "ObjectId" : "ca69709da76304747fae0df63f4ec76035c6fb30",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at http://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# we have two variables here to make sure DIST_SUBDIRS won't get 'unit'\n\n# added twice as then targets such as 'distclean' misbehave and try to\n\n# do things twice in that subdir at times (and thus fails).\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if not cross-compiling:\n",
        "Line" : 59,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# make sure that PERL is pointing to an executable\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/curl-7.33.0/tests/certs/Makefile.am" : {
      "ObjectId" : "cd35bdff2d2539eeb0090f3d9894e7e71fd39bbc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at http://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/curl-7.33.0/tests/certs/scripts/Makefile.am" : {
      "ObjectId" : "ffc1449b7dab3a71cf8af0b9c58fa1cbdcffefc4",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at http://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/curl-7.33.0/tests/data/Makefile.am" : {
      "ObjectId" : "a46ebe0240c38f314a990388b9c130be44399491",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# this list is in numerical order\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/curl-7.33.0/tests/libtest/Makefile.am" : {
      "ObjectId" : "80707b165668eeebf413a48260bf99a1571747da",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at http://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify our include paths here, and do it relative to $(top_srcdir) and\n\n# $(top_builddir), to ensure that these paths which belong to the library\n\n# being currently built and tested are searched before the library which\n\n# might possibly already be installed in the system.\n\n#\n\n# $(top_builddir)/include/curl for generated curlbuild.h included from curl.h\n\n# $(top_builddir)/include for generated curlbuild.h inc. from lib/curl_setup.h\n\n# $(top_srcdir)/include is for libcurl's external include files\n\n# $(top_builddir)/lib is for libcurl's generated lib/curl_config.h file\n\n# $(top_srcdir)/lib for libcurl's lib/curl_setup.h and other \"borrowed\" files\n\n# $(top_builddir)/ares is for in-tree c-ares's generated ares_build.h file\n\n# $(top_srcdir)/ares is for in-tree c-ares's external include files\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Prevent LIBS from being used for all link targets\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Dependencies (may need to be overriden)\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Makefile.inc provides the source defines (TESTUTIL, SUPPORTFILES,\n\n# noinst_PROGRAMS, lib*_SOURCES, and lib*_CFLAGS)\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Preloading of libhostname allows host name overriding,\n\n# this is used to make some tests machine independent.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/curl-7.33.0/tests/server/Makefile.am" : {
      "ObjectId" : "7533a98b7d06b61acd9ea3ca7535212afb55453a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at http://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify our include paths here, and do it relative to $(top_srcdir) and\n\n# $(top_builddir), to ensure that these paths which belong to the library\n\n# being currently built and tested are searched before the library which\n\n# might possibly already be installed in the system.\n\n#\n\n# $(top_builddir)/include/curl for generated curlbuild.h included from curl.h\n\n# $(top_builddir)/include for generated curlbuild.h inc. from lib/curl_setup.h\n\n# $(top_srcdir)/include is for libcurl's external include files\n\n# $(top_builddir)/lib is for libcurl's generated lib/curl_config.h file\n\n# $(top_srcdir)/lib for libcurl's lib/curl_setup.h and other \"borrowed\" files\n\n# $(top_builddir)/ares is for in-tree c-ares's generated ares_build.h file\n\n# $(top_srcdir)/ares is for in-tree c-ares's external include files\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Prevent LIBS from being used for all link targets\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Makefile.inc provides neat definitions\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/curl-7.33.0/tests/unit/Makefile.am" : {
      "ObjectId" : "4b47f728be960313bff53b27917a9d9b4a6f9357",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2013, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at http://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify our include paths here, and do it relative to $(top_srcdir) and\n\n# $(top_builddir), to ensure that these paths which belong to the library\n\n# being currently built and tested are searched before the library which\n\n# might possibly already be installed in the system.\n\n#\n\n# $(top_builddir)/include/curl for generated curlbuild.h included from curl.h\n\n# $(top_builddir)/include for generated curlbuild.h inc. from lib/curl_setup.h\n\n# $(top_srcdir)/include is for libcurl's external include files\n\n# $(top_builddir)/lib is for libcurl's generated lib/curl_config.h file\n\n# $(top_srcdir)/lib for libcurl's lib/curl_setup.h and other \"borrowed\" files\n\n# $(top_builddir)/ares is for in-tree c-ares's generated ares_build.h file\n\n# $(top_srcdir)/ares is for in-tree c-ares's external include files\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Prevent LIBS from being used for all link targets\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Makefile.inc provides neat definitions\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/jpeg-8d/Makefile.am" : {
      "ObjectId" : "2509d279d86a66b28e264c4d678e5022904b3546",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n\n#\n\n#  Automake Makefile for the JPEG library\n\n#\n\n#  This file is written by Bob Friesenhahn, Guido Vollbeding\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sources to build library\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# System dependent sources\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Headers which are installed to support the library\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Headers which are not installed\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Manual pages (Automake uses 'MANS' for itself)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other documentation files\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Makefiles for various systems\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Configuration files\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Support scripts for configure\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Miscellaneous support files\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Test support files\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# libtool libraries to build\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Library sources for libjpeg.la\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# LDFLAGS for libjpeg.la\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Executables to build\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Executable sources & libs\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Manual pages to install\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Headers to install\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Other distributed headers\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Other distributed files\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Files to be cleaned\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Install jconfig.h\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Uninstall jconfig.h\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Run tests\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "deps/src/libevent-2.0.18-stable/Makefile.am" : {
      "ObjectId" : "081c128fd3372378318e01ebcbef937f1fb5516a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am for libevent\n\n# Copyright 2000-2007 Niels Provos\n\n# Copyright 2007-2012 Niels Provos and Nick Mathewson\n\n#\n\n# See LICENSE for copying information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 'foreign' means that we're not enforcing GNU package rules strictly.\n\n# '1.7' means that we need automake 1.7 or later (and we do).\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the \"Release\" of the Libevent ABI.  It takes precedence over\n\n# the VERSION_INFO, so that two versions of Libevent with the same\n\n# \"Release\" are never binary-compatible.\n\n#\n\n# This number incremented once for the 2.0 release candidate, and\n\n# will increment for each series until we revise our interfaces enough\n\n# that we can seriously expect ABI compatibility between series.\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is the version info for the libevent binary API.  It has three\n\n# numbers:\n\n#   Current  -- the number of the binary API that we're implementing\n\n#   Revision -- which iteration of the implementation of the binary\n\n#               API are we supplying?\n\n#   Age      -- How many previous binary API versions do we also\n\n#               support?\n\n#\n\n# To increment a VERSION_INFO (current:revision:age):\n\n#    If the ABI didn't change:\n\n#        Return (current:revision+1:age)\n\n#    If the ABI changed, but it's backward-compatible:\n\n#        Return (current+1:0:age+1)\n\n#    If the ABI changed and it isn't backward-compatible:\n\n#        Return (current+1:0:0)\n\n#\n\n# Once an RC is out, DO NOT MAKE ANY ABI-BREAKING CHANGES IN THAT SERIES\n\n# UNLESS YOU REALLY REALLY HAVE TO.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# History:          RELEASE    VERSION_INFO\n\n#  2.0.1-alpha --     2.0        1:0:0\n\n#  2.0.2-alpha --                2:0:0\n\n#  2.0.3-alpha --                2:0:0  (should have incremented; didn't.)\n\n#  2.0.4-alpha --                3:0:0\n\n#  2.0.5-beta  --                4:0:0\n\n#  2.0.6-rc    --     2.0        2:0:0\n\n#  2.0.7-rc    --     2.0        3:0:1\n\n#  2.0.8-rc    --     2.0        4:0:2\n\n#  2.0.9-rc    --     2.0        5:0:0 (ABI changed slightly)\n\n#  2.0.10-stable--    2.0        5:1:0 (No ABI change)\n\n#  2.0.11-stable--    2.0        6:0:1 (ABI changed, backward-compatible)\n\n#  2.0.12-stable--    2.0        6:1:1 (No ABI change)\n\n#  2.0.13-stable--    2.0        6:2:1 (No ABI change)\n\n#  2.0.14-stable--    2.0        6:3:1 (No ABI change)\n\n#  2.0.15-stable--    2.0        6:3:1 (Forgot to update :( )\n\n#  2.0.16-stable--    2.0        6:4:1 (No ABI change)\n\n#  2.0.17-stable--    2.0        6:5:1 (No ABI change)\n\n#  2.0.18-stable--    2.0        6:6:1 (No ABI change)\n\n#\n\n# For Libevent 2.1:\n\n#  2.1.1-alpha --     2.1        1:0:0\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ABI version history for this package effectively restarts every time\n\n# we change RELEASE.  Version 1.4.x had RELEASE of 1.4.\n\n#\n\n# Ideally, we would not be using RELEASE at all; instead we could just\n\n# use the VERSION_INFO field to label our backward-incompatible ABI\n\n# changes, and those would be few and far between.  Unfortunately,\n\n# Libevent still exposes far too many volatile structures in its\n\n# headers, so we pretty much have to assume that most development\n\n# series will break ABI compatibility.  For now, it's simplest just to\n\n# keep incrementing the RELEASE between series and resetting VERSION_INFO.\n\n#\n\n# Eventually, when we get to the point where the structures in the\n\n# headers are all non-changing (or not there at all!), we can shift to\n\n# a more normal worldview where backward-incompatible ABI changes are\n\n# nice and rare.  For the next couple of years, though, 'struct event'\n\n# is user-visible, and so we can pretty much guarantee that release\n\n# series won't be binary-compatible.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# These sources are conditionally added by configure.in or conditionally\n\n# included from other files.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/libevent-2.0.18-stable/include/Makefile.am" : {
      "ObjectId" : "5153db27cf49ac4d2422253f68fc77da7e6f40c0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# include/Makefile.am for libevent\n\n# Copyright 2000-2007 Niels Provos\n\n# Copyright 2007-2012 Niels Provos and Nick Mathewson\n\n#\n\n# See LICENSE for copying information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Without the nobase_ prefixing, Automake would strip \"event2/\" from\n\n## the source header filename to derive the installed header filename.\n\n## With nobase_ the installed path is $(includedir)/event2/ev*.h.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/libevent-2.0.18-stable/sample/Makefile.am" : {
      "ObjectId" : "c926f4e6fbddd2d6b39e44380c8e722fbe80cf55",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# sample/Makefile.am for libevent\n\n# Copyright 2000-2007 Niels Provos\n\n# Copyright 2007-2012 Niels Provos and Nick Mathewson\n\n#\n\n# See LICENSE for copying information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/libevent-2.0.18-stable/test/Makefile.am" : {
      "ObjectId" : "b10c41a8894c86f007d4987b29bff4a03680aca5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# test/Makefile.am for libevent\n\n# Copyright 2000-2007 Niels Provos\n\n# Copyright 2007-2012 Niels Provos and Nick Mathewson\n\n#\n\n# See LICENSE for copying information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/libpng-1.6.14/CMakeLists.txt" : {
      "ObjectId" : "664011db31b18705e25d8712a18bff6ded299792",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 2007-2014 Glenn Randers-Pehrson\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This code is released under the libpng license.\n\n# For conditions of distribution and use, see the disclaimer\n\n# and license in png.h\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# needed packages\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# not needed on windows\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# COMMAND LINE OPTIONS\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Many more configuration options could be added here\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# SET LIBNAME\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# to distinguish between debug and release lib\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Use the prebuilt pnglibconf.h file from the scripts folder\n\n# TODO: fix this by building with awk; without this no cmake build can be\n\n# configured directly (to do so indirectly use your local awk to build a\n\n# pnglibconf.h in the build directory.)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# OUR SOURCES\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# SOME NEEDED DEFINITIONS\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# NOW BUILD OUR TARGET\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# does not work without changing name\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# does not work with msvc due to png_lib_ver issue\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Ensure the CMAKE_LIBRARY_OUTPUT_DIRECTORY is set\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Set a variable with CMake code which:\n\n# Creates a symlink from src to dest (if possible) or alternatively\n\n# copies if different.\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# libpng is a library so default to 'lib'\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# CREATE PKGCONFIG FILES\n\n# we use the same files like ./configure, so we have to set its vars\n\n# Only do this on Windows for Cygwin - the files don't make much sense outside\n\n# a UNIX look alike\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# SET UP LINKS\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#   VERSION 16.${PNGLIB_RELEASE}.1.6.14\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# MSVC doesn't use a different file extension for shared vs. static\n\n# libs.  We are able to change OUTPUT_NAME to remove the _static\n\n# for all other platforms.\n",
        "Line" : 262,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# If CMake > 2.4.x, we set a variable used below to export\n\n# targets to an export file.\n\n# TODO: Use VERSION_GREATER after our cmake_minimum_required >= 2.6.2\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# future proof\n",
        "Line" : 277,
        "CharPositionInLine" : 38
      },
      "27" : {
        "Text" : "# INSTALL\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Create a symlink for libpng.dll.a => libpng16.dll.a on Cygwin\n",
        "Line" : 290,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Install man pages\n",
        "Line" : 329,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Install pkg-config files\n",
        "Line" : 335,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# On versions of CMake that support it, create an export file CMake\n\n# users can include() to import our targets\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# what's with libpng-manual.txt and all the extra files?\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# UNINSTALL\n\n# do we need this?\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# DIST\n\n# do we need this?\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# to create msvc import lib for mingw compiled shared lib\n\n# pexports libpng.dll > libpng.def\n\n# lib /def:libpng.def /machine:x86\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 36
    },
    "deps/src/libpng-1.6.14/Makefile.am" : {
      "ObjectId" : "052e596b63bc28ba8433048ca3cc78427c8779d5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am:\n\n#   Source file for Makefile.in (and hence Makefile)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# test programs - run on make check, make distcheck\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Utilities - installed\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This ensures that pnglibconf.h gets built at the start of 'make all' or\n\n# 'make check', but it does not add dependencies to the individual programs,\n\n# this is done below.\n\n#\n\n# IMPORTANT: always add the object modules of new programs to the list below\n\n# because otherwise the sequence 'configure; make new-program' will *sometimes*\n\n# result in the installed (system) pnglibconf.h being used and the result is\n\n# always wrong and always very confusing.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Generally these are single line shell scripts to run a test with a particular\n\n# set of parameters:\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# These tests are expected, and required, to fail:\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# man pages\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# generate the -config scripts if required\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# rules to build libpng, only build the old library on request\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# EXTRA_LTLIBRARIES= libpng.la\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#   Versioned symbols and restricted exports\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#   Only restricted exports when possible\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#distribute headers in /usr/include/libpng/*\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# pkg-config stuff, note that libpng.pc is always required in order\n\n# to get the correct library\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Extra source distribution files, '${srcdir}' is used below to stop build files\n\n# from those directories being included.  This only works if the configure is\n\n# not done in the source directory!\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# PNG_COPTS give extra options for the C compiler to be used on all compilation\n\n# steps (unless targe_CFLAGS is specified; that will take precedence over\n\n# AM_CFLAGS)\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# DFNCPP is normally just CPP - the C preprocessor - but on Solaris and maybe\n\n# other operating systems (NeXT?) the C preprocessor selected by configure\n\n# checks input tokens for validity - effectively it performs part of the ANSI-C\n\n# parsing - and therefore fails with the .df files.  configure.ac has special\n\n# checks for this and sets DFNCPP appropriately.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Rename functions in scripts/prefix.out with a PNG_PREFIX prefix.\n\n# Rename macros in scripts/macro.lst from PNG_PREFIXpng_ to PNG_ (the actual\n\n# implementation of the macro).\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# is empty\n",
        "Line" : 198,
        "CharPositionInLine" : 13
      },
      "19" : {
        "Text" : "# The following is necessary to ensure that the local pnglibconf.h is used, not\n\n# an installed one (this can happen immediately after on a clean system if\n\n# 'make test' is the first thing the user does.)  Only files which include\n\n# one of the png source files (typically png.h or pngpriv.h) need to be listed\n\n# here:\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# We must use -DPNG_NO_USE_READ_MACROS here even when the library may actually\n\n# be built with PNG_USE_READ_MACROS; this prevents the read macros from\n\n# interfering with the symbol file format.\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# The .dfn file for pnglibconf.h is machine generated\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Symbol checks (.def and .out files should match)\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# used on demand to regenerate the standard header, CPPFLAGS should\n\n# be empty - no non-standard defines\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Extra checks\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Don't distribute the generated script files\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Make links between installed files with release-specific names and the generic\n\n# file names.  If this install rule is run the generic names will be deleted and\n\n# recreated - this has obvious issues for systems with multiple installations.\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# EXT_LIST is a list of the possibly library directory extensions, this exists\n\n# because we can't find a good way of discovering the file extensions that are\n\n# actually installed on a given system, so instead we check for every extension\n\n# we have seen.\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# If --enable-unversioned-links is specified the header and lib file links\n\n# will be automatically made on a 'make install':\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Likewise, --install-pc causes libpng.pc to be constructed:\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# And --install-config:\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# The following addition ensures that 'make all' always builds the test programs\n\n# too.  It used to, but some change either in libpng or configure stopped this\n\n# working.\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "deps/src/libsodium-0.7.1/Makefile.am" : {
      "ObjectId" : "41145f026acc7a313dbcc38f576b9019b0c1f04c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/src/libsodium-0.7.1/dist-build/Makefile.am" : {
      "ObjectId" : "05efe6a7e4c17af054f15cf6200bae98947d0a3d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/src/libsodium-0.7.1/msvc-scripts/Makefile.am" : {
      "ObjectId" : "16481929aa8d44a22efcd3f6476da80afce2d281",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/src/libsodium-0.7.1/src/Makefile.am" : {
      "ObjectId" : "64445045e6aabc1e7379a2961f298dc807a867f2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/src/libsodium-0.7.1/src/libsodium/Makefile.am" : {
      "ObjectId" : "869c43960e0363a90af7bb661b21402354f3da82",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/src/libsodium-0.7.1/src/libsodium/include/Makefile.am" : {
      "ObjectId" : "894c371a3707724305e375e9c7eaadaf9f2ce4eb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/src/libsodium-0.7.1/test/Makefile.am" : {
      "ObjectId" : "346d2692d637f3539ddb26d917222ff60cfb94ad",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/src/libsodium-0.7.1/test/default/Makefile.am" : {
      "ObjectId" : "11d76e08edde34c5cf69de8eda8b670c43fd8b79",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/src/libxml2-2.9.1/Makefile.am" : {
      "ObjectId" : "4d0d3acd1de5a491de861df4b80e19e78ec29ae8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# that one forces the rebuild when \"make rebuild\" is run on doc/\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# that one is just to make sure it is rebuilt if missing\n\n# but adding the dependances generate mess\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#testOOM_SOURCES=testOOM.c testOOMlib.h testOOMlib.c\n\n#testOOM_LDFLAGS =\n\n#testOOM_DEPENDENCIES = $(DEPS)\n\n#testOOM_LDADD= $(LDADDS)\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## We create xml2Conf.sh here and not from configure because we want\n\n## to get the paths expanded correctly.  Macros like srcdir are given\n\n## the value NONE in configure if the user doesn't specify them (this\n\n## is an autoconf feature, not a bug).\n",
        "Line" : 1184,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Use sed and then mv to avoid problems if the user interrupts.\n",
        "Line" : 1190,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Install the tests program sources as examples\n\n#\n",
        "Line" : 1221,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Coverage support, largely borrowed from libvirt\n\n# Both binaries comes from the lcov package in Fedora\n\n#\n",
        "Line" : 1252,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8,
      "Errorlog" : "line 981:44 token recognition error at: '\\1'\nline 984:48 token recognition error at: '\\1'\nline 1031:48 token recognition error at: '\\1'\nline 1057:48 token recognition error at: '\\1'\nline 1086:48 token recognition error at: '\\1'\n"
    },
    "deps/src/libxml2-2.9.1/VxWorks/Makefile" : {
      "ObjectId" : "bf69b93bd2a2b497866b56d0c0a8f9e2e07455fc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##----------------------------------------------------------------\n\n##\n\n##-- Filename: Makefile\n\n##\n\n##-- $Date: 2008/02/23 02:56:17 $\n\n##-- $Revision: 1.2 $\n\n##-- $Name:  $\n\n##\n\n##----------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#FLAGS = -Wall -O2 -Isrc -Isrc/include -D_REENTRANT=1\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/libxml2-2.9.1/doc/Makefile.am" : {
      "ObjectId" : "2df9bba1f2e0ca33bd647f831742b53763d5601e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The top-level SGML file.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The directory containing the source code (if it contains documentation).\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# A file in win32 depends upon one of the doc files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Expanded form of EXTRA_DIST_wc\n\n#\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/libxml2-2.9.1/doc/devhelp/Makefile.am" : {
      "ObjectId" : "dad7975220c96b7536a926c7466585816677e9d0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/src/libxml2-2.9.1/doc/examples/Makefile.am" : {
      "ObjectId" : "96579b8402183718405b1c8d5e1ddd7475f6e293",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##\n\n## This file is auto-generated by index.py\n\n## DO NOT EDIT !!!\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/libxml2-2.9.1/example/Makefile.am" : {
      "ObjectId" : "488ee6e8c49edd648cba7602e0d6c75fe5451d62",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/src/libxml2-2.9.1/include/Makefile.am" : {
      "ObjectId" : "93f9be342d331d0c24adf543c1007aa6bd56b4cd",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/libxml2-2.9.1/include/libxml/Makefile.am" : {
      "ObjectId" : "cf9297aad66b00d498cab89883985c552ae2febb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/libxml2-2.9.1/python/Makefile.am" : {
      "ObjectId" : "708d9da188325cab2bc51ce592ff9107ea9c0105",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile for libxml2 python library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libxml.c #includes libxml2-export.c\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/libxml2-2.9.1/python/tests/Makefile.am" : {
      "ObjectId" : "95ebead8ea4794d85e756904d35b33b9ee8a675c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/src/libxml2-2.9.1/xstc/Makefile.am" : {
      "ObjectId" : "1c3b69ba5aa044266c3555f5772df7f895ef15f0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# Definition for the tests from W3C\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# The local data and scripts\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Nothing is done by make, only make tests and\n\n# only if Python and Schemas are enabled.\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Rule to load the test description and extract the informations\n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# The python tests are generated via XSLT\n\n#\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# The actual test run if present. PYTHONPATH is updated to make sure\n\n# we run the version from the loacl build and not preinstalled bindings\n\n#\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Heavy, works well only on RHEL3\n\n#\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/nanomsg-1.0.0/CMakeLists.txt" : {
      "ObjectId" : "5cffc29f70abc41c26c24caf13380fa4064d9729",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#   Copyright (c) 2012 Martin Sustrik  All rights reserved.\n\n#   Copyright (c) 2013 GoPivotal, Inc.  All rights reserved.\n\n#   Copyright (c) 2015-2016 Jack R. Dunaway. All rights reserved.\n\n#   Copyright 2016 Garrett D'Amore <garrett@damore.org>\n\n#   Copyright 2016 Franklin \"Snaipe\" Mathieu <franklinmathieu@gmail.com>\n\n#\n\n#   Permission is hereby granted, free of charge, to any person obtaining a copy\n\n#   of this software and associated documentation files (the \"Software\"),\n\n#   to deal in the Software without restriction, including without limitation\n\n#   the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n#   and/or sell copies of the Software, and to permit persons to whom\n\n#   the Software is furnished to do so, subject to the following conditions:\n\n#\n\n#   The above copyright notice and this permission notice shall be included\n\n#   in all copies or substantial portions of the Software.\n\n#\n\n#   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n#   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n#   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n#   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n#   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n\n#   IN THE SOFTWARE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Newer cmake on MacOS should use @rpath\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Determine library versions.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Determine package version.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Working off a git repo, using git versioning\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Get version from last tag\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# | sed -e \"s:v::\"\n",
        "Line" : 68,
        "CharPositionInLine" : 65
      },
      "7" : {
        "Text" : "# If the sources have been changed locally, add -dirty to the version.\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#  If git is not available (e.g. when building from source package)\n\n#  we can extract the package version from .version file.\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# User-defined options.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#  Platform checks.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Target Windows Vista and later\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Windows is a special snowflake.\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Unconditionally declare the following feature test macros.  These are\n\n# needed for some platforms (glibc and SunOS/illumos) and should be harmless\n\n# on the others.\n",
        "Line" : 180,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#  Build the tools\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Build the documenation\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#  Build unit tests.\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#  Transport tests.\n",
        "Line" : 352,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#  Protocol tests.\n",
        "Line" : 362,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#  Feature tests.\n",
        "Line" : 370,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Platform-specific tests\n",
        "Line" : 400,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#  Build the performance tests.\n",
        "Line" : 405,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 22
    },
    "deps/src/nanomsg-1.0.0/src/CMakeLists.txt" : {
      "ObjectId" : "4d0839e1c627ab18e76dc60c87aafb765a571f69",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#   Copyright (c) 2012-2013 Martin Sustrik  All rights reserved.\n\n#   Copyright (c) 2013 GoPivotal, Inc.  All rights reserved.\n\n#   Copyright (c) 2015-2016 Jack R. Dunaway. All rights reserved.\n\n#\n\n#   Permission is hereby granted, free of charge, to any person obtaining a copy\n\n#   of this software and associated documentation files (the \"Software\"),\n\n#   to deal in the Software without restriction, including without limitation\n\n#   the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n#   and/or sell copies of the Software, and to permit persons to whom\n\n#   the Software is furnished to do so, subject to the following conditions:\n\n#\n\n#   The above copyright notice and this permission notice shall be included\n\n#   in all copies or substantial portions of the Software.\n\n#\n\n#   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n#   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n#   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n#   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n#   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n\n#   IN THE SOFTWARE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# No operation\n",
        "Line" : 292,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Provide same folder structure in IDE as on disk\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Get the path of the file relative to source directory\n",
        "Line" : 329,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Remove the filename part\n",
        "Line" : 336,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# CMake source_group expects \\\\, not /\n",
        "Line" : 339,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Set library outputs same as top-level project binary outputs\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# pkg-config file\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "deps/src/openssl-1.0.2/Makefile" : {
      "ObjectId" : "f814f529cf7ea6f3f89fc947faa94c12f8135f69",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "### Generated automatically from Makefile.org by Configure.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n\n## Makefile for OpenSSL\n\n##\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# HERE indicates where this Makefile lives.  This can be used to indicate\n\n# where sub-Makefiles are expected to be.  Currently has very limited usage,\n\n# and should probably not be bothered with at all.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# INSTALL_PREFIX is for package builders so that they can configure\n\n# for, say, /usr/ and yet have everything installed to /tmp/somedir/usr/.\n\n# Normally it is left empty.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Do not edit this manually. Use Configure --openssldir=DIR do change this!\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# NO_IDEA - Define to build without the IDEA algorithm\n\n# NO_RC4  - Define to build without the RC4 algorithm\n\n# NO_RC2  - Define to build without the RC2 algorithm\n\n# THREADS - Define when building with threads, you will probably also need any\n\n#           system defines as well, i.e. _REENTERANT for Solaris 2.[34]\n\n# TERMIO  - Define the termio terminal subsystem, needed if sgtty is missing.\n\n# TERMIOS - Define the termios terminal subsystem, Silicon Graphics.\n\n# LONGCRYPT - Define to use HPUX 10.x's long password modification to crypt(3).\n\n# DEVRANDOM - Give this the value of the 'random device' if your OS supports\n\n#           one.  32 bytes will be read from this when the random\n\n#           number generator is initalised.\n\n# SSL_FORBID_ENULL - define if you want the server to be not able to use the\n\n#           NULL encryption ciphers.\n\n#\n\n# LOCK_DEBUG - turns on lots of lock debug output :-)\n\n# REF_CHECK - turn on some xyz_free() assertions.\n\n# REF_PRINT - prints some stuff on structure free.\n\n# CRYPTO_MDEBUG - turns on my 'memory leak' detecting stuff\n\n# MFUNC - Make all Malloc/Free/Realloc calls call\n\n#       CRYPTO_malloc/CRYPTO_free/CRYPTO_realloc which can be setup to\n\n#       call application defined callbacks via CRYPTO_set_mem_functions()\n\n# MD5_ASM needs to be defined to use the x86 assembler for MD5\n\n# SHA1_ASM needs to be defined to use the x86 assembler for SHA1\n\n# RMD160_ASM needs to be defined to use the x86 assembler for RIPEMD160\n\n# Do not define B_ENDIAN or L_ENDIAN if 'unsigned long' == 8.  It must\n\n# equal 4.\n\n# PKCS1_CHECK - pkcs1 tests.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# We let the C compiler driver to take care of .s files. This is done in\n\n# order to be excused from maintaining a separate set of architecture\n\n# dependent assembler flags. E.g. if you throw -mcpu=ultrasparc at SPARC\n\n# gcc, then the driver will automatically translate it to -xarch=v8plus\n\n# and pass it down to assembler.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# For x86 assembler: Set PROCESSOR to 386 if you want to support\n\n# the 80386.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# CPUID module collects small commonly used assembler snippets\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# KRB5 stuff\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Zlib stuff\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# TOP level FIPS install directory.\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# This is the location of fipscanister.o and friends.\n\n# The FIPS module build will place it $(INSTALLTOP)/lib\n\n# but since $(INSTALLTOP) can only take the default value\n\n# when the module is built it will be in /usr/local/ssl/lib\n\n# $(INSTALLTOP) for this build may be different so hard\n\n# code the path.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The location of the library which contains fipscanister.o\n\n# normally it will be libcrypto unless fipsdso is set in which\n\n# case it will be libfips. If not compiling in FIPS mode at all\n\n# this is empty making it a useful test for a FIPS compile.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Shared library base address. Currently only used on Windows.\n\n#\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# dirs in crypto to build\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# keep in mind that the above list is adjusted by ./Configure\n\n# according to no-xxx arguments...\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# tests to perform.  \"alltests\" is a special word indicating that all tests\n\n# should be performed.\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# as we stick to -e, CLEARENV ensures that local variables in lower\n\n# Makefiles remain local and variable. $${VAR+VAR} is tribute to Korn\n\n# shell, which [annoyingly enough] terminates unset with error if VAR\n\n# is not present:-( TOP= && unset TOP is tribute to HP-UX /bin/sh,\n\n# which terminates unset with error if no variable was present:-(\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# MAKEOVERRIDES= effectively \"equalizes\" GNU-ish and SysV-ish make flavors,\n\n# which in turn eliminates ambiguities in variable treatment with -e.\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# BUILD_CMD is a generic macro to build a given target in a given\n\n# subdirectory.  The target must be given through the shell variable\n\n# `target' and the subdirectory to build in must be given through `dir'.\n\n# This macro shouldn't be used directly, use RECURSIVE_BUILD_CMD or\n\n# BUILD_ONE_CMD instead.\n\n#\n\n# BUILD_ONE_CMD is a macro to build a given target in a given\n\n# subdirectory if that subdirectory is part of $(DIRS).  It requires\n\n# exactly the same shell variables as BUILD_CMD.\n\n#\n\n# RECURSIVE_BUILD_CMD is a macro to build a given target in all\n\n# subdirectories defined in $(DIRS).  It requires that the target\n\n# is given through the shell variable `target'.\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Build distribution tar-file. As the list of files returned by \"find\" is\n\n# pretty long, on several platforms a \"too many arguments\" error or similar\n\n# would occur. Therefore the list of files is temporarily stored into a file\n\n# and read directly, requiring GNU-Tar. Call \"make TAR=gtar dist\" if the normal\n\n# tar does not support the --files-from option.\n",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 688,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23,
      "Errorlog" : "line 575:48 token recognition error at: '\\1'\nline 628:61 token recognition error at: '\\1'\nline 628:64 token recognition error at: '\\3'\n"
    },
    "deps/src/openssl-1.0.2/apps/Makefile" : {
      "ObjectId" : "72657ea658733c305028f2de7cd12f2485372416",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n#  apps/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# KRB5 stuff\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 101,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/Makefile" : {
      "ObjectId" : "9a39e934ad5c8e26601188087bdd649d599c994a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# INCLUDES targets sudbirs!\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# DO NOT DELETE THIS LINE/) {print; exit(0);}' $(MAKEFILE) >Makefile.new\n",
        "Line" : 140,
        "CharPositionInLine" : 20
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/aes/Makefile" : {
      "ObjectId" : "709b1af39b7ffe5b3fc3f212e34443d4b870c39e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# crypto/aes/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TEST=aestest.c\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GNU make \"catch all\"\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 110,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 126,
        "CharPositionInLine" : 25
      },
      "5" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/openssl-1.0.2/crypto/asn1/Makefile" : {
      "ObjectId" : "2e2a097399be6f322a6735e503f6b686327de63a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/asn1/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 81,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 97,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/bf/Makefile" : {
      "ObjectId" : "d01bfaa31558dd4e77e5a85c71397262cd978c2d",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/blowfish/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We need to use force because 'install' matches 'INSTALL' on case\n\n# insensitive systems\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 60,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 76,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/openssl-1.0.2/crypto/bio/Makefile" : {
      "ObjectId" : "c395d804968166b8dc1eef168e4b014f122cae03",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/bio/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\tbf_lbuf.c\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\tbf_lbuf.o\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 61,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 77,
        "CharPositionInLine" : 25
      },
      "5" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/openssl-1.0.2/crypto/bn/Makefile" : {
      "ObjectId" : "0cdbd2016c63f201751b75d31f2958333f19571a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/bn/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GNU assembler fails to compile PA-RISC2 modules, insist on calling\n\n# vendor assembler...\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ppc - AIX, Linux, MacOS X...\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# GNU make \"catch all\"\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 158,
        "CharPositionInLine" : 25
      },
      "5" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 182,
        "CharPositionInLine" : 25
      },
      "6" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/src/openssl-1.0.2/crypto/buffer/Makefile" : {
      "ObjectId" : "2efba47f07002c7552db21854b7d8e2e7a8a454f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/buffer/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 49,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 65,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/camellia/Makefile" : {
      "ObjectId" : "88535f963aed3d506c65d3e9ddef60cd38a0a1e3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# crypto/camellia/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TEST=camelliatest.c\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 63,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 79,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/openssl-1.0.2/crypto/cast/Makefile" : {
      "ObjectId" : "f3f4859886a6ce9855e1e786c2fc0e6edd6106e3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/cast/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 57,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 73,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/cmac/Makefile" : {
      "ObjectId" : "54e7cc39d52b923b4e1a6199882819839645f661",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/cmac/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 49,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 65,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/cms/Makefile" : {
      "ObjectId" : "644fef399ee989270fae6d1e971722be28e4a273",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/cms/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 55,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 71,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/comp/Makefile" : {
      "ObjectId" : "efda832dce47f3b22eaa8938e323dc34112d45dc",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/comp/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 52,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 68,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/conf/Makefile" : {
      "ObjectId" : "78bb3241065d869bd706e44991c92a129a76a298",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/conf/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 52,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 68,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/des/Makefile" : {
      "ObjectId" : "060c64795e29742568b50b9ed9199404af90f321",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/des/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We need to use force because 'install' matches 'INSTALL' on case\n\n# insensitive systems\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 84,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 100,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/openssl-1.0.2/crypto/dh/Makefile" : {
      "ObjectId" : "f447907820c1a67f8e07435efefc4cd234601dfa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/dh/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 51,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 67,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/dsa/Makefile" : {
      "ObjectId" : "5fef4ca5adfc5382873c5bf2cc0e00b510b4a724",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/dsa/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 51,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 67,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/dso/Makefile" : {
      "ObjectId" : "fb2709ed63a7601f5fe86ab6e6dec60c00abb7cb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/dso/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 51,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 67,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/ec/Makefile" : {
      "ObjectId" : "0d9f3ab256a0af3d13e351c633316a1cc43b6f72",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# crypto/ec/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 66,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 82,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/ecdh/Makefile" : {
      "ObjectId" : "df1b03adb1dd056883a22eb1099bc44ef05bb5ba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# crypto/ecdh/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 50,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 66,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/ecdsa/Makefile" : {
      "ObjectId" : "e89e0c010c6b93bc19ab7c7c8c94a288b395f5ae",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# crypto/ecdsa/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 50,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 66,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/engine/Makefile" : {
      "ObjectId" : "2ee6c72362d1972b0ac69e9b0a388aabdcca1124",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/engine/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 59,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 75,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/err/Makefile" : {
      "ObjectId" : "862b23ba1768b63289cdaafb0e6452ea66a41a29",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/err/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 49,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 65,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/evp/Makefile" : {
      "ObjectId" : "30590d56bb724ae3773319d2c1276b6951408180",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/evp/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 74,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 90,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/hmac/Makefile" : {
      "ObjectId" : "0e91709f64ca31c45a6c5f3e99bb443ccc5899ab",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/md/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 49,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 65,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/idea/Makefile" : {
      "ObjectId" : "8af0acdad97249c9b56441b1fa8642bc1ae399aa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/idea/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 49,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 65,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/jpake/Makefile" : {
      "ObjectId" : "110c49ce0b4a84903a4ccc551941d7792d682422",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 28,
        "CharPositionInLine" : 25
      },
      "1" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 36,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/openssl-1.0.2/crypto/krb5/Makefile" : {
      "ObjectId" : "14077390d6923dfac00f407ae60ca2186d9fb4bb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/krb5/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 50,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 66,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/lhash/Makefile" : {
      "ObjectId" : "82bddac474503034f5572a93d03b851e929cd15b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/lhash/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 49,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 65,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/md2/Makefile" : {
      "ObjectId" : "17f878aeb7d464780d91cb7ff240d4987d4b7fed",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/md/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 49,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 65,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/md4/Makefile" : {
      "ObjectId" : "e6f1e4478c048d2f05eb3016d9bec0ed3393510c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/md4/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 50,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 66,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/md5/Makefile" : {
      "ObjectId" : "390e5f1c7dc7f1d767a7ed16d9fe80b2f72186f8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/md5/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 67,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 83,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4,
      "Errorlog" : "line 53:17 token recognition error at: '\\s'\n"
    },
    "deps/src/openssl-1.0.2/crypto/mdc2/Makefile" : {
      "ObjectId" : "141553149d54706d623a3dae92c733d96e7cc6d6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/mdc2/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 49,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 65,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/modes/Makefile" : {
      "ObjectId" : "cbcbfad4b117ca1ac40ba8b57dbecfffc0860ff8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/modes/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#EXHEADER= store.h str_compat.h\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GNU make \"catch all\"\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 83,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 99,
        "CharPositionInLine" : 25
      },
      "5" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/openssl-1.0.2/crypto/objects/Makefile" : {
      "ObjectId" : "a8aedbd422870c28d0e9f8a2ba5723d14a7f0451",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/objects/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# objects.pl both reads and writes obj_mac.num\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 62,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 78,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/openssl-1.0.2/crypto/ocsp/Makefile" : {
      "ObjectId" : "60c414cf4da605735f4fc135acc96705a6ab20ca",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/ocsp/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 52,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 68,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/pem/Makefile" : {
      "ObjectId" : "7691f83f6e1d402f7fc5d42adfe212f8ff9d05c6",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/pem/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 52,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 68,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/pkcs12/Makefile" : {
      "ObjectId" : "3a7498fe7ad99a11da2eaf3be46a137c26c30f53",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/pkcs12/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 55,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 71,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/pkcs7/Makefile" : {
      "ObjectId" : "effe05fc043d3c66e53fae942dbb1a6bce95e9c8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/pkcs7/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 56,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 72,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/pqueue/Makefile" : {
      "ObjectId" : "fb36a0c876e3c1605ab3b035cdca41a8de24de35",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/pqueue/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 49,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 65,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/rand/Makefile" : {
      "ObjectId" : "27694aa66498935d1327697c9c8a0a3035891476",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/rand/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 51,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 67,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/rc2/Makefile" : {
      "ObjectId" : "8a9d49ab5eb8b2b5ee9a541b80c1da82d80d44a9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/rc2/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 49,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 65,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/rc4/Makefile" : {
      "ObjectId" : "76860aeb4bf3692777382845a53cebd0dd2b156f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/rc4/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GNU make \"catch all\"\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 77,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 93,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/openssl-1.0.2/crypto/rc5/Makefile" : {
      "ObjectId" : "8a8b00eb89e6038b912ff722dd8a56713e5f82e8",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/rc5/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 57,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 73,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/ripemd/Makefile" : {
      "ObjectId" : "25140b2a73e212108bde492ff4acc6f82f945336",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/ripemd/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 57,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 73,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/rsa/Makefile" : {
      "ObjectId" : "af487b6004fb3bcba5279ad64339ac683861f14b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/rsa/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 55,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 71,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/seed/Makefile" : {
      "ObjectId" : "4bc55e4916491bdd3a0c80a9be27424a0091705f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# crypto/seed/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 50,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 66,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/sha/Makefile" : {
      "ObjectId" : "a8c0cf78509d5852969eaca729d1177f8d61ff1c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/sha/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Solaris make has to be explicitly told\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GNU make \"catch all\"\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 112,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 128,
        "CharPositionInLine" : 25
      },
      "5" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/openssl-1.0.2/crypto/srp/Makefile" : {
      "ObjectId" : "ddf674864f98a853e858149581fdc0aa900a6bb9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 49,
        "CharPositionInLine" : 25
      },
      "1" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/openssl-1.0.2/crypto/stack/Makefile" : {
      "ObjectId" : "5327692ac895cef5a4ae6abb620cd43c01326b07",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/stack/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 49,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 65,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/store/Makefile" : {
      "ObjectId" : "0dcfd7857a37713f2959dcbd366246deb2943698",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/store/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TEST= storetest.c\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#EXHEADER= store.h str_compat.h\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 51,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 67,
        "CharPositionInLine" : 25
      },
      "5" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/src/openssl-1.0.2/crypto/ts/Makefile" : {
      "ObjectId" : "c18234555be300a4d89ca7c1d6ddfa8c8cb3325e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# SSLeay/crypto/ts/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 63,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/openssl-1.0.2/crypto/txt_db/Makefile" : {
      "ObjectId" : "e6f30331d8dd2f72395e7a50a64c97f07bbd479e",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/txt_db/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 49,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 65,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/ui/Makefile" : {
      "ObjectId" : "a685659fb4c88466d0e1e384ca81edfe43bbe976",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/ui/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TEST= uitest.c\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 53,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 69,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/src/openssl-1.0.2/crypto/whrlpool/Makefile" : {
      "ObjectId" : "f4d46e4d17b79e73c6c79732eefa31f1da4e1faa",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# crypto/whrlpool/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 62,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 78,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/x509/Makefile" : {
      "ObjectId" : "cfbb59c37d0e64252d343c82c6d6c4d785662039",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/x509/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 59,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 75,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/crypto/x509v3/Makefile" : {
      "ObjectId" : "cdbfd524039215e8a1f15df8672afcbf12af2db2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/crypto/x509v3/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 59,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# should be set by upper Makefile...\n",
        "Line" : 75,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/demos/bio/Makefile" : {
      "ObjectId" : "f8c8f03517c4af8f25a03c715058cb6cdfcc3a47",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/src/openssl-1.0.2/demos/easy_tls/Makefile" : {
      "ObjectId" : "208070074c028dd97a480c60598d7c37ff71e5a2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for easy-tls example application (rudimentary client and server)\n\n# $Id: Makefile,v 1.2 2001/09/18 09:15:40 bodo Exp $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For adapting this Makefile to a different system, only the following\n\n# definitions should need customizing:\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#############################################################################\n\n#\n\n# SSLeay/OpenSSL imports\n\n#\n\n# OPENSSLDIR (set above) can be either the directory where OpenSSL is\n\n# installed or the directory where it was compiled.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We rely on having a new OpenSSL release where include files\n\n# have names like <openssl/ssl.h> (not just <ssl.h>).\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# libcrypto.a and libssl.a are directly in $(OPENSSLDIR) if this is\n\n# the compile directory, or in $(OPENSSLDIR)/lib if we use an installed\n\n# library.  With the following definition, we can handle either case.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#############################################################################\n\n#\n\n# Stuff for handling the source files\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# For RCS:\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Distribution .tar:\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Working .tar:\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# For emacs:\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#############################################################################\n\n#\n\n# Compilation\n\n#\n\n# The following definitions are system dependent (and hence defined\n\n# at the beginning of this Makefile, where they are more easily found):\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "### CC=gcc\n\n### SYSCFLAGS=-Wall -pedantic -g -O2\n\n### SYSLIBS=-lxnet\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# EXTRACFLAGS=-DTLS_APP=\\\"test.h\\\" -DDEBUG_TLS\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# The rest shouldn't need to be touched.\n\n#\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "deps/src/openssl-1.0.2/demos/engines/cluster_labs/Makefile" : {
      "ObjectId" : "956193f0937c349b86d66c2fb3cd26c9384dd5e2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# DO NOT DELETE.*/,$$d' < Makefile > Makefile.tmp\n",
        "Line" : 93,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/openssl-1.0.2/demos/engines/ibmca/Makefile" : {
      "ObjectId" : "72f354635993aa42d972857c46b59af7ab1cf32f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# DO NOT DELETE.*/,$$d' < Makefile > Makefile.tmp\n",
        "Line" : 93,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/openssl-1.0.2/demos/engines/rsaref/Makefile" : {
      "ObjectId" : "63b8c79d2705aef77570c81cb46497af05198788",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# DO NOT DELETE.*/,$$d' < Makefile > Makefile.tmp\n",
        "Line" : 114,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/openssl-1.0.2/demos/engines/zencod/Makefile" : {
      "ObjectId" : "5b6a339ab2ba904e97d1e390692954a053b50a14",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# DO NOT DELETE.*/,$$d' < Makefile > Makefile.tmp\n",
        "Line" : 93,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/openssl-1.0.2/demos/prime/Makefile" : {
      "ObjectId" : "0166cd46fe46448504ea7bfb286a215b669369b5",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/src/openssl-1.0.2/demos/sign/Makefile" : {
      "ObjectId" : "e6d391e4ada441db01f7b1593d418f9d635748a3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/src/openssl-1.0.2/demos/state_machine/Makefile" : {
      "ObjectId" : "c7a114540de91d8433f541a35b71f11091cf7f8f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/src/openssl-1.0.2/demos/tunala/Makefile" : {
      "ObjectId" : "bef1704a3caa69018d404fb260e0bb334b146beb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Edit these to suit\n\n#\n\n# Oh yeah, and please read the README too.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Edit, particularly the \"-ldl\" if not building with \"dlfcn\" support\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Extra dependencies, should really use makedepend\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/openssl-1.0.2/demos/tunala/Makefile.am" : {
      "ObjectId" : "706c7806c9d91e38f94a2939b70a600266189a39",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Our includes come from the OpenSSL build-tree we're in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/openssl-1.0.2/engines/Makefile" : {
      "ObjectId" : "da6c8750b5ae44bb392d1c1eb0f7a5b5d0a914ba",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/engines/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/openssl-1.0.2/engines/ccgost/Makefile" : {
      "ObjectId" : "2f36580836e569c7fe9fe8e73800e5749900bb3a",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 43,
        "CharPositionInLine" : 24
      },
      "1" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/src/openssl-1.0.2/ssl/Makefile" : {
      "ObjectId" : "a7bd4ee143c936670af268058e2f1ddff9903b58",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/ssl/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# KRB5 stuff\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 77,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/src/openssl-1.0.2/test/Makefile" : {
      "ObjectId" : "bc4a9200aff8fcc2581c684b053a4a3020316ecb",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# test/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# KRB5 stuff\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-lnsl -lsocket\n",
        "Line" : 18,
        "CharPositionInLine" : 9
      },
      "3" : {
        "Text" : "# $(METHTEST)$(EXE_EXT)\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#$(AESTEST)\n",
        "Line" : 305,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "#\t@echo \"test Rijndael\"\n\n#\t../util/shlib_wrap.sh ./$(AESTEST)\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#$(AESTEST).o: $(AESTEST).c\n\n#\t$(CC) -c $(CFLAGS) -DINTERMEDIATE_VALUE_KAT -DTRACE_KAT_MCT $(AESTEST).c\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#$(AESTEST)$(EXE_EXT): $(AESTEST).o $(DLIBCRYPTO)\n\n#\tif [ \"$(SHLIB_TARGET)\" = \"hpux-shared\" -o \"$(SHLIB_TARGET)\" = \"darwin-shared\" ] ; then \\\n#\t  $(CC) -o $(AESTEST)$(EXE_EXT) $(CFLAGS) $(AESTEST).o $(PEX_LIBS) $(DLIBCRYPTO) $(EX_LIBS) ; \\\n#\telse \\\n#\t  $(CC) -o $(AESTEST)$(EXE_EXT) $(CFLAGS) $(AESTEST).o $(PEX_LIBS) $(LIBCRYPTO) $(EX_LIBS) ; \\\n#\tfi\n",
        "Line" : 517,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 527,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "deps/src/openssl-1.0.2/tools/Makefile" : {
      "ObjectId" : "bb6fb71f3eb8a78173040442643383c09a51ac9b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# OpenSSL/tools/Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be set by top Makefile...\n",
        "Line" : 22,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/src/openssl-1.0.2/util/indent.pro" : {
      "ObjectId" : "e8714310cc4d1af0c95b1bc0cdc3357aad929e5c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/src/zlib-1.2.11/CMakeLists.txt" : {
      "ObjectId" : "0fe939df689306f1d0c7c657cb64dd0f0dedc134",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 47,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 128,
        "CharPositionInLine" : 23
      },
      "8" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n\n#\n\n# This has no effect with MSVC, on that platform the version info for\n\n# the DLL comes from the resource file win32/zlib1.rc\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Creates zlib1.dll when building shared library version\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#============================================================================\n\n# Example binaries\n\n#============================================================================\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "deps/src/zlib-1.2.11/Makefile" : {
      "ObjectId" : "6bba86c73fca2abda416baa1a7cf883b3494fb29",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/src/zlib-1.2.11/contrib/blast/Makefile" : {
      "ObjectId" : "9be80bafe050eed57029ef2e690f36677a3003c0",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/src/zlib-1.2.11/contrib/minizip/Makefile" : {
      "ObjectId" : "84eaad20d4fb19b00965268dd75d7e9b66c8cc21",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/src/zlib-1.2.11/contrib/minizip/Makefile.am" : {
      "ObjectId" : "d343011ebc3b3fd78d2bc3a29801a083c038cf0c",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/src/zlib-1.2.11/contrib/puff/Makefile" : {
      "ObjectId" : "0e2594c80885c0dbea13c6d22b2e60e9fb82b51f",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# puff full coverage test (should say 100%)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/src/zlib-1.2.11/contrib/untgz/Makefile" : {
      "ObjectId" : "b54266fba20a167a1d83b7afd503dfd2f849ca57",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/src/zlib-1.2.11/nintendods/Makefile" : {
      "ObjectId" : "0bec1498625d6f5cf687e2c715290e6c77fb92b1",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# TARGET is the name of the output\n\n# BUILD is the directory where object files & intermediate files will be placed\n\n# SOURCES is a list of directories containing source code\n\n# DATA is a list of directories containing data files\n\n# INCLUDES is a list of directories containing header files\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# options for code generation\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# list of directories containing libraries, this must be the top level containing\n\n# include and lib\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# no real need to edit anything past this point unless you need to add additional\n\n# rules for different file extensions\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# use CXX for linking C++ projects, CC for standard C\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# main targets\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "67573f86a6501063b10676a641c60b0c79808ff2",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/capi/CMakeLists.txt" : {
      "ObjectId" : "7f9465513e50dba288553c56fb2496f2c3a48aa7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fix the current source directory of the framework stuff so the macro below\n\n# references everything correctly.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A macro that allows building a custom C-API library.\n\n#\n\n#  The main variable here is the initializer source file and whether or not to\n\n#  build it as a framework.\n\n#\n\n#  To build it with a custom server initialization function, which allows for\n\n#  specifying which models are availalable for calling through the C-API, call\n\n#\n\n#  make_capi_library(MyTuriExecutor INITIALIZER_SOURCE_FILE my_turi_model_init.cpp REQUIRES unity)\n\n#\n\n#  See default_server_initializer.cpp as a template for this.\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#build out as a regular library\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# For both framework and non-framework, add .ver files as dependencies\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "src/cppipc/CMakeLists.txt" : {
      "ObjectId" : "be647bb2fcea7edf190ade4bdc31195ccc4a5ca9",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Libraries should not link both cppipc and cppipc_zookeeper together\n\n# They are not compatible\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/dot_graph_printer/CMakeLists.txt" : {
      "ObjectId" : "4a46d85be7ddf4be4ece3d4aa0dddd989a457b7b",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/exceptions/CMakeLists.txt" : {
      "ObjectId" : "f73d1f29ce0680eca3eb853f2467a1910351b3a3",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external/CMakeLists.txt" : {
      "ObjectId" : "23c265b658c6b046334ad400b5bb57b1eab9edb6",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Suppress all warnings in all external code.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#3rd party source \n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/external/Eigen/CMakeLists.txt" : {
      "ObjectId" : "f4c241b169ee9f051e754eaeab2b0c570bb8fbd7",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external/aws-sdk-cpp/CMakeLists.txt" : {
      "ObjectId" : "1183acf8773acf614ea7fa8bc6ae4a7e6f410234",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#aws-cpp-sdk-core/source/utils/crypto/commoncrypto/CryptoImpl.cpp\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/external/aws-sdk-cpp/aws-cpp-sdk-core/CMakeLists.txt" : {
      "ObjectId" : "dce50ef506d8fc7eac0f34915fb777ddf80c0188",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If building shared libraries, custom memory management enabled is the default, otherwise regular memory management is the default.\n\n# We make custom memory management the default on shared library builds because it is safer and much more difficult to accidentally\n\n# allocate in one DLLs heap while freeing in another (which will lead to runtime crashes)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Pretty sure we can use a regex here...\n\n# Go ahead and glob every directory so we can work around Visual Studio's crap.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# http client implementations\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# encryption implementations\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# misc platform-specific, not related to features (encryption/http clients)\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#add your windows specific impl stuff here.\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#add unix specific impl stuff here.\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Visual studio project directory structure\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# http client conditional headers\n",
        "Line" : 255,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# encryption conditional headers\n",
        "Line" : 262,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# http client conditional source\n",
        "Line" : 293,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# encryption conditional source\n",
        "Line" : 300,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# http client headers\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# encryption headers\n",
        "Line" : 408,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "src/external/aws-sdk-cpp/aws-cpp-sdk-s3/CMakeLists.txt" : {
      "ObjectId" : "a5e85ded6de4bace562547e15a836503c9d8cbbf",
      "LastModified" : "2019-02-21T18:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/external/coremltools_wrap/CMakeLists.txt" : {
      "ObjectId" : "8489ae71fcc0254e4ab37f85d6495d44bb53fe8a",
      "LastModified" : "2019-03-14T17:17:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Handle the coremltools dependencies.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If this variable is specified, then we pull the coremltools\n\n#from that repo to compile in.It should just work here.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/external/coremltools_wrap/coremltools/CMakeLists.txt" : {
      "ObjectId" : "e53b62779d204c903843d93a63f28f2414736383",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Allow Python to be found at runtime instead of compile/link time\n\n# This is apparently the default on Linux\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Allow Python to be found at runtime instead of compile/link time\n\n# This is apparently the default on Linux\n",
        "Line" : 181,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Workaround for building multiple platform versions since python setuptools only take in one platform via '--plat-name' argument\n\n# and cmake 'foreach' does not seem to work inside add_custom_target\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "src/external/coremltools_wrap/coremltools/deps/CMakeLists.txt" : {
      "ObjectId" : "858e6a02f66eb024064c02297831a6894cf70a81",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/BUILD" : {
      "ObjectId" : "e5662c4d7a09e890d63b2935d27c9c8c028f9335",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Bazel (http://bazel.io/) BUILD file for Protobuf.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n# Protobuf Runtime Library\n################################################################################",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Android builds do not need to link in a separate pthread library.",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# AUTOGEN(protobuf_lite_srcs)",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# AUTOGEN(protobuf_srcs)",
        "Line" : 116,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# This provides just the header files for use in projects that need to build\n# shared libraries for dynamic loading. This target is available until Bazel\n# adds native support for such use cases.\n# TODO(keveman): Remove this target once the support gets added to Bazel.",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# AUTOGEN(well_known_protos)",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "################################################################################\n# Protocol Buffers Compiler\n################################################################################",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# AUTOGEN(protoc_lib_srcs)",
        "Line" : 264,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "################################################################################\n# Tests\n################################################################################",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# AUTOGEN(lite_test_protos)",
        "Line" : 380,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# AUTOGEN(test_protos)",
        "Line" : 391,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# AUTOGEN(common_test_srcs)",
        "Line" : 450,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# AUTOGEN(test_plugin_srcs)",
        "Line" : 461,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# AUTOGEN(test_srcs)",
        "Line" : 476,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Files for csharp_bootstrap_unittest.cc.",
        "Line" : 552,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "################################################################################\n# Java support\n################################################################################",
        "Line" : 569,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "################################################################################\n# Python support\n################################################################################",
        "Line" : 600,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Copy the builtin proto files from src/google/protobuf to\n# python/google/protobuf. This way, the generated Python sources will be in the\n# same directory as the Python runtime sources. This is necessary for the\n# modules to be imported correctly since they are all part of the same Python\n# package.",
        "Line" : 676,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# TODO(dzc): Remove this once py_proto_library can have labels in srcs, in\n# which case we can simply add :protos_python in srcs.",
        "Line" : 688,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Copy the test proto files from src/google/protobuf to\n# python/google/protobuf. This way, the generated Python sources will be in the\n# same directory as the Python runtime sources. This is necessary for the\n# modules to be imported correctly by the tests since they are all part of the\n# same Python package.",
        "Line" : 713,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# TODO(dzc): Remove this once py_proto_library can have labels in srcs, in\n# which case we can simply add :protos_python_test in srcs.",
        "Line" : 725,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/Makefile.am" : {
      "ObjectId" : "3b57b585697f908188dea167c56c6f4ff52a41b3",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build . before src so that our all-local and clean-local hooks kicks in at\n\n# the right time.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Always include gmock in distributions.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build gmock before we build protobuf tests.  We don't add gmock to SUBDIRS\n\n# because then \"make check\" would also build and run all of gmock's own tests,\n\n# which takes a lot of time and is generally not useful to us.  Also, we don't\n\n# want \"make install\" to recurse into gmock since we don't want to overwrite\n\n# the installed version of gmock if there is one.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We would like to clean gmock when \"make clean\" is invoked.  But we have to\n\n# be careful because clean-local is also invoked during \"make distclean\", but\n\n# \"make distclean\" already recurses into gmock because it's listed among the\n\n# DIST_SUBDIRS.  distclean will delete gmock/Makefile, so if we then try to\n\n# cd to the directory again and \"make clean\" it will fail.  So, check that the\n\n# Makefile exists before recursing.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Deletes all the files generated by autogen.sh.\n",
        "Line" : 934,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/benchmarks/Makefile.am" : {
      "ObjectId" : "d98eae5eadbbeb8c169fe109b132c59fdac468f6",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Explicit deps because BUILT_SOURCES are only done before a \"make all/check\"\n\n# so a direct \"make test_cpp\" could fail if parallel enough.\n\n# See: https://www.gnu.org/software/automake/manual/html_node/Built-Sources-Example.html#Recording-Dependencies-manually\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We have to cd to $(srcdir) before executing protoc because $(protoc_inputs) is\n\n# relative to srcdir, which may not be the same as the current directory when\n\n# building out-of-tree.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/cmake/CMakeLists.txt" : {
      "ObjectId" : "7618ba21a13fbd9c7c6f1efdd527d216d15bb1ef",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Minimum CMake required\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake policies\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Options\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# User options\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Path to main configure script\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Parse configure script\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Description\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Version\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Contact\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Parse version tweaks\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Package version\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# FindZLIB module define ZLIB_INCLUDE_DIRS variable\n\n# Set ZLIB_INCLUDE_DIRECTORIES for compatible\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Using imported target if exists\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Explicitly set these to empty (override NOT_FOUND) so cmake doesn't\n\n# complain when we use them later.\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# In case we are building static libraries, link also the runtime library statically\n\n# so that MSVCR*.DLL is not required at runtime.\n\n# https://msdn.microsoft.com/en-us/library/2kzt1wy3.aspx\n\n# This is achieved by replacing msvc option /MD with /MT and /MDd with /MTd\n\n# http://www.cmake.org/Wiki/CMake_FAQ#How_can_I_build_my_MSVC_application_with_a_static_runtime.3F\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Build with multiple processes\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Allow big object\n",
        "Line" : 139,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Add the \"lib\" prefix for generated .lib outputs.\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# When building with \"make\", \"lib\" prefix will be added automatically by\n\n# the build tool.\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 20
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/cmake/examples.cmake" : {
      "ObjectId" : "e5cad63f67650db353a1f3a0e8b349e8cf0db32f",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Internal utility function: Create a custom target representing a build of examples with custom options.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Skip\n",
        "Line" : 20,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : "# Add examples as an external project.\n\n# sub_directory cannot be used because the find_package(protobuf) call would cause failures with redefined targets.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Build using the legacy compatibility module.\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#Build using the installed library.\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#Build using the installed library in legacy compatibility mode.\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/cmake/install.cmake" : {
      "ObjectId" : "28dc90dc3f3524a3bf11bad9edca959e03b48cae",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Internal function for parsing auto tools scripts\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install well-known type proto files\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install configuration\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Allows the build directory to be used as a find directory.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/cmake/libprotobuf-lite.cmake" : {
      "ObjectId" : "036b051707db291fd2978ab9d9f5893393669de7",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/cmake/libprotobuf.cmake" : {
      "ObjectId" : "5313d39ef874602fd6e6869359eb06dbb2a9b8c0",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/cmake/libprotoc.cmake" : {
      "ObjectId" : "b663e354ba4b8ba918a3d70d9b802c6c2dc7368e",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/cmake/protobuf-options.cmake" : {
      "ObjectId" : "47fb15825752e544fda411db01c8a4391ed4dd38",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Verbose output\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FindProtobuf module compatibel\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/cmake/protoc.cmake" : {
      "ObjectId" : "4f07c389c976777e7685beb8e321e7ffcb98fcff",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/cmake/tests.cmake" : {
      "ObjectId" : "38dc0b522dba0ea2d770d6c2bbf0b8ff0c3d1819",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/conformance/Makefile.am" : {
      "ObjectId" : "1a8b57485b296ec92de8ca3d2154e955570a7e35",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# lite/com/google/protobuf/Any.java                            \\\n  # lite/com/google/protobuf/AnyOrBuilder.java                   \\\n  # lite/com/google/protobuf/AnyProto.java                       \\\n  # lite/com/google/protobuf/BoolValue.java                      \\\n  # lite/com/google/protobuf/BoolValueOrBuilder.java             \\\n  # lite/com/google/protobuf/BytesValue.java                     \\\n  # lite/com/google/protobuf/BytesValueOrBuilder.java            \\\n  # lite/com/google/protobuf/conformance/Conformance.java        \\\n  # lite/com/google/protobuf/DoubleValue.java                    \\\n  # lite/com/google/protobuf/DoubleValueOrBuilder.java           \\\n  # lite/com/google/protobuf/Duration.java                       \\\n  # lite/com/google/protobuf/DurationOrBuilder.java              \\\n  # lite/com/google/protobuf/DurationProto.java                  \\\n  # lite/com/google/protobuf/FieldMask.java                      \\\n  # lite/com/google/protobuf/FieldMaskOrBuilder.java             \\\n  # lite/com/google/protobuf/FieldMaskProto.java                 \\\n  # lite/com/google/protobuf/FloatValue.java                     \\\n  # lite/com/google/protobuf/FloatValueOrBuilder.java            \\\n  # lite/com/google/protobuf/Int32Value.java                     \\\n  # lite/com/google/protobuf/Int32ValueOrBuilder.java            \\\n  # lite/com/google/protobuf/Int64Value.java                     \\\n  # lite/com/google/protobuf/Int64ValueOrBuilder.java            \\\n  # lite/com/google/protobuf/ListValue.java                      \\\n  # lite/com/google/protobuf/ListValueOrBuilder.java             \\\n  # lite/com/google/protobuf/NullValue.java                      \\\n  # lite/com/google/protobuf/StringValue.java                    \\\n  # lite/com/google/protobuf/StringValueOrBuilder.java           \\\n  # lite/com/google/protobuf/Struct.java                         \\\n  # lite/com/google/protobuf/StructOrBuilder.java                \\\n  # lite/com/google/protobuf/StructProto.java                    \\\n  # lite/com/google/protobuf/Timestamp.java                      \\\n  # lite/com/google/protobuf/TimestampOrBuilder.java             \\\n  # lite/com/google/protobuf/TimestampProto.java                 \\\n  # lite/com/google/protobuf/UInt32Value.java                    \\\n  # lite/com/google/protobuf/UInt32ValueOrBuilder.java           \\\n  # lite/com/google/protobuf/UInt64Value.java                    \\\n  # lite/com/google/protobuf/UInt64ValueOrBuilder.java           \\\n  # lite/com/google/protobuf/Value.java                          \\\n  # lite/com/google/protobuf/ValueOrBuilder.java                 \\\n  # lite/com/google/protobuf/WrappersProto.java\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# All source files excepet C++/Objective-C ones should be explicitly listed\n\n# here because the autoconf tools don't include files of other languages\n\n# automatically.\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Explicit deps beacuse BUILT_SOURCES are only done before a \"make all/check\"\n\n# so a direct \"make test_cpp\" could fail if parallel enough.\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Explicit dep beacuse BUILT_SOURCES are only done before a \"make all/check\"\n\n# so a direct \"make test_cpp\" could fail if parallel enough.\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# On travis, the build fails without the isysroot because whatever system\n\n# headers are being found don't include generics support for\n\n# NSArray/NSDictionary, the only guess is their image at one time had an odd\n\n# setup for Xcode and old frameworks are being found.\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Explicit dep beacuse BUILT_SOURCES are only done before a \"make all/check\"\n\n# so a direct \"make test_objc\" could fail if parallel enough.\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# JavaScript well-known types are expected to be in a directory called\n\n# google-protobuf, because they are usually in the google-protobuf npm\n\n# package.  But we want to use the sources from our tree, so we recreate\n\n# that directory structure here.\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Some implementations include pre-generated versions of well-known types.\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## $(PROTOC) -I$(srcdir) -I$(top_srcdir) --java_out=lite:lite $(conformance_protoc_inputs) $(well_known_type_protoc_inputs)\n",
        "Line" : 248,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# We have to cd to $(srcdir) before executing protoc because $(protoc_inputs) is\n\n# relative to srcdir, which may not be the same as the current directory when\n\n# building out-of-tree.\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## @mkdir -p lite\n\n## oldpwd=`pwd` && ( cd $(srcdir) && $$oldpwd/../src/protoc$(EXEEXT) -I. -I$(top_srcdir)/src --java_out=lite:$$oldpwd/lite $(conformance_protoc_inputs) $(well_known_type_protoc_inputs) )\n",
        "Line" : 259,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Currently the conformance code is alongside the rest of the C#\n\n# source, as it's easier to maintain there. We assume we've already\n\n# built that, so we just need a script to run it.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Targets for actually running tests.\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# These depend on library paths being properly set up.  The easiest way to\n\n# run them is to just use \"tox\" from the python dir.\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/examples/CMakeLists.txt" : {
      "ObjectId" : "2cd2acc0134fc5419aacb79dd9c58f1997d71389",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Minimum CMake required\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Project\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find required protobuf package\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# http://www.cmake.org/Wiki/CMake_FAQ#How_can_I_build_my_MSVC_application_with_a_static_runtime.3F\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Code Generation\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#Legacy Support\n",
        "Line" : 32,
        "CharPositionInLine" : 33
      },
      "6" : {
        "Text" : "#Executable setup\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#Legacy mode\n",
        "Line" : 56,
        "CharPositionInLine" : 33
      },
      "CommentCount" : 8
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/java/compatibility_tests/v2.5.0/deps/pom.xml" : {
      "ObjectId" : "7ceb96049d72b06a79b0756da0d22769068adf17",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/java/compatibility_tests/v2.5.0/more_protos/pom.xml" : {
      "ObjectId" : "ff0c4133f0d89cf066f9ccfbdc44a3ece26cad51",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/java/compatibility_tests/v2.5.0/pom.xml" : {
      "ObjectId" : "83a7563afd9f147ec67a38c1a5561d58a402292e",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/java/compatibility_tests/v2.5.0/protos/pom.xml" : {
      "ObjectId" : "a22e91ed1d61386ed98a978ca3afd4535df2fe0d",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/java/compatibility_tests/v2.5.0/tests/pom.xml" : {
      "ObjectId" : "f1ce46e7ab2d4e1a81fbbf00f6d87034558453d0",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/java/core/pom.xml" : {
      "ObjectId" : "9c4e1b930b94eb1ea70fbc5d2b335750b8ccfccf",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Include core protos in the bundle as resources ",
        "Line" : 45,
        "CharPositionInLine" : 60
      },
      "1" : {
        "Text" : " Use Antrun plugin to generate sources with protoc ",
        "Line" : 67,
        "CharPositionInLine" : 65
      },
      "2" : {
        "Text" : " Generate core protos ",
        "Line" : 71,
        "CharPositionInLine" : 40
      },
      "3" : {
        "Text" : " Generate the test protos ",
        "Line" : 85,
        "CharPositionInLine" : 44
      },
      "4" : {
        "Text" : " Add the generated sources to the build ",
        "Line" : 101,
        "CharPositionInLine" : 54
      },
      "5" : {
        "Text" : " OSGI bundle configuration ",
        "Line" : 133,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 6
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/java/lite/pom.xml" : {
      "ObjectId" : "c902f8192a191327d9328b9ae55d52b3f5e631a3",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Use Antrun plugin to generate sources with protoc ",
        "Line" : 43,
        "CharPositionInLine" : 65
      },
      "1" : {
        "Text" : " Generate core protos ",
        "Line" : 47,
        "CharPositionInLine" : 40
      },
      "2" : {
        "Text" : " Generate the test protos ",
        "Line" : 61,
        "CharPositionInLine" : 44
      },
      "3" : {
        "Text" : " Only compile a subset of the files ",
        "Line" : 77,
        "CharPositionInLine" : 50
      },
      "4" : {
        "Text" : " OSGI bundle configuration ",
        "Line" : 169,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 5
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/java/pom.xml" : {
      "ObjectId" : "81ffc48a310df158a4c525962e76c15b2d85e8b4",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " These are relative to the submodules ",
        "Line" : 29,
        "CharPositionInLine" : 50
      },
      "1" : {
        "Text" : " <module>lite</module> ",
        "Line" : 217,
        "CharPositionInLine" : 35
      },
      "CommentCount" : 2
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/java/util/pom.xml" : {
      "ObjectId" : "c72fa6509059f33ddfe1af5b87661cb948d1d8d1",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Use the core proto dir so that we can call the core generation script ",
        "Line" : 48,
        "CharPositionInLine" : 83
      },
      "1" : {
        "Text" : " Generate the test protos ",
        "Line" : 57,
        "CharPositionInLine" : 44
      },
      "2" : {
        "Text" : " Generate all of the test protos from the core module ",
        "Line" : 63,
        "CharPositionInLine" : 78
      },
      "3" : {
        "Text" : " Generate additional test protos for this module ",
        "Line" : 66,
        "CharPositionInLine" : 73
      },
      "4" : {
        "Text" : " Add the generated test sources to the build ",
        "Line" : 82,
        "CharPositionInLine" : 59
      },
      "5" : {
        "Text" : " Configure the OSGI bundle ",
        "Line" : 102,
        "CharPositionInLine" : 41
      },
      "6" : {
        "Text" : " Configure the fat jar to include all dependencies ",
        "Line" : 116,
        "CharPositionInLine" : 65
      },
      "CommentCount" : 7
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/javanano/pom.xml" : {
      "ObjectId" : "0395e8f2dc9ab0aecd9f897de9a7599bc6897955",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/protobuf.bzl" : {
      "ObjectId" : "73c396d5564964faba551563e0d92e9e56dd6211",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Bazel 0.4.4 and older have genfiles paths that look like:\n#   bazel-out/local-fastbuild/genfiles/external/repo/foo\n# After the exec root rearrangement, they look like:\n#   ../repo/bazel-out/local-fastbuild/genfiles/foo",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# We are using the fact that Bazel 0.4.4+ provides repository-relative paths\n# for ctx.genfiles_dir.",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# This means that we're either in the old version OR the new version in the local repo.\n# Either way, appending the source path to the genfiles dir works.",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "\"\"\"General implementation for generating protos\"\"\"",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "\"\"\"Generates codes from Protocol Buffers definitions.\n\nThis rule helps you to implement Skylark macros specific to the target\nlanguage. You should prefer more specific `cc_proto_library `,\n`py_proto_library` and others unless you are adding such wrapper macros.\n\nArgs:\n  srcs: Protocol Buffers definition files (.proto) to run the protocol compiler\n    against.\n  deps: a list of dependency labels; must be other proto libraries.\n  includes: a list of include paths to .proto files.\n  protoc: the label of the protocol compiler to generate the sources.\n  plugin: the label of the protocol compiler plugin to be passed to the protocol\n    compiler.\n  plugin_language: the language of the generated sources\n  plugin_options: a list of options to be passed to the plugin\n  gen_cc: generates C++ sources in addition to the ones from the plugin.\n  gen_py: generates Python sources in addition to the ones from the plugin.\n  outs: a list of labels of the expected outputs from the protocol compiler.\n\"\"\"",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "\"\"\"Bazel rule to create a C++ protobuf library from proto source files\n\n  NOTE: the rule is only an internal workaround to generate protos. The\n  interface may change and the rule may be removed when bazel has introduced\n  the native rule.\n\n  Args:\n    name: the name of the cc_proto_library.\n    srcs: the .proto files of the cc_proto_library.\n    deps: a list of dependency labels; must be cc_proto_library.\n    cc_libs: a list of other cc_library targets depended by the generated\n        cc_library.\n    include: a string indicating the include path of the .proto files.\n    protoc: the label of the protocol compiler to generate the sources.\n    internal_bootstrap_hack: a flag indicate the cc_proto_library is used only\n        for bootstraping. When it is set to True, no files will be generated.\n        The rule will simply be a provider for .proto files, so that other\n        cc_proto_library can depend on it.\n    use_grpc_plugin: a flag to indicate whether to call the grpc C++ plugin\n        when processing the proto files.\n    default_runtime: the implicitly default runtime which will be depended on by\n        the generated cc_library target.\n    **kargs: other keyword arguments that are passed to cc_library.\n\n  \"\"\"",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# For pre-checked-in generated files, we add the internal_bootstrap_hack\n# which will skip the codegen action.",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# An empty cc_library to make rule dependency consistent.",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "\"\"\"Bazel rule to generate the gen_well_known_protos_java genrule\n\n  Args:\n    srcs: the well known protos\n  \"\"\"",
        "Line" : 260,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "\"\"\"Macro to copy files to a different directory and then create a filegroup.\n\n  This is used by the //:protobuf_python py_proto_library target to work around\n  an issue caused by Python source files that are part of the same Python\n  package being in separate directories.\n\n  Args:\n    srcs: The source files to copy and add to the filegroup.\n    strip_prefix: Path to the root of the files to copy.\n    dest: The directory to copy the source files into.\n    **kwargs: extra arguments that will be passesd to the filegroup.\n  \"\"\"",
        "Line" : 284,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "\"\"\"Bazel rule to create a Python protobuf library from proto source files\n\n  NOTE: the rule is only an internal workaround to generate protos. The\n  interface may change and the rule may be removed when bazel has introduced\n  the native rule.\n\n  Args:\n    name: the name of the py_proto_library.\n    srcs: the .proto files of the py_proto_library.\n    deps: a list of dependency labels; must be py_proto_library.\n    py_libs: a list of other py_library targets depended by the generated\n        py_library.\n    py_extra_srcs: extra source files that will be added to the output\n        py_library. This attribute is used for internal bootstrapping.\n    include: a string indicating the include path of the .proto files.\n    default_runtime: the implicitly default runtime which will be depended on by\n        the generated py_library target.\n    protoc: the label of the protocol compiler to generate the sources.\n    use_grpc_plugin: a flag to indicate whether to call the Python C++ plugin\n        when processing the proto files.\n    **kargs: other keyword arguments that are passed to cc_library.\n\n  \"\"\"",
        "Line" : 323,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Note: Generated grpc code depends on Python grpc module. This dependency\n# is not explicitly listed in py_libs. Instead, host system is assumed to\n# have grpc installed.",
        "Line" : 355,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "\"\"\"Bazel rules to create batch tests for protobuf internal.\n\n  Args:\n    name: the name of the rule.\n    modules: a list of modules for tests. The macro will create a py_test for\n        each of the parameter with the source \"google/protobuf/%s.py\"\n    kargs: extra parameters that will be passed into the py_test.\n\n  \"\"\"",
        "Line" : 386,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 13
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/protoc-artifacts/pom.xml" : {
      "ObjectId" : "a06c99982a71e9c5060a574120d3abe7d1dad9ff",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Specify the staging repository to deploy to. This can be left\n             empty for the first deployment, and Sonatype will create one. For\n             subsequent deployments it should be set to what Sonatype has\n             created, so that all deployments will go to the same repository.\n             ",
        "Line" : 99,
        "CharPositionInLine" : 17
      },
      "CommentCount" : 1
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/ruby/pom.xml" : {
      "ObjectId" : "adf6ff207da9dbf68eca7d848724bb5c43f771b8",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/src/Makefile.am" : {
      "ObjectId" : "bfb875acf4a69be305e91a4563248480702be850",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Turn on all warnings except for sign comparison (we ignore sign comparison\n\n# in Google so our code base have tons of such warnings).\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If I say \"dist_include_DATA\", automake complains that $(includedir) is not\n\n# a \"legitimate\" directory for DATA.  Screw you, automake.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you are adding new files here, also remember to change the build files for\n\n# all other languages, //protoc-artifacts/build-zip.sh and run\n\n# //update_file_list.sh for bazel.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Not sure why these don't get cleaned automatically.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The special JS code for the well-known types is linked into the compiler via\n\n# well_known_types_embed.cc, which is generated from .js source files. We have\n\n# to build the js_embed binary using $(CXX_FOR_BUILD) so that it is executable\n\n# on the build machine in a cross-compilation setup.\n",
        "Line" : 510,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# We have to cd to $(srcdir) so that out-of-tree builds work properly.\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Tests ==============================================================\n",
        "Line" : 525,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We have to cd to $(srcdir) before executing protoc because $(protoc_inputs) is\n\n# relative to srcdir, which may not be the same as the current directory when\n\n# building out-of-tree.\n",
        "Line" : 723,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Disable optimization for tests unless the user explicitly asked for it,\n\n# since test_util.cc takes forever to compile with optimization (with GCC).\n\n# See configure.ac for more info.\n",
        "Line" : 756,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Run cpp_unittest again with PROTOBUF_TEST_NO_DESCRIPTORS defined.\n",
        "Line" : 837,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build lite_unittest separately, since it doesn't use gtest. It can't\n\n# depend on gtest because our internal version of gtest depend on proto\n\n# full runtime and we want to make sure this test builds without full\n\n# runtime.\n",
        "Line" : 860,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# lite_arena_unittest depends on gtest because teboring@ found that without\n\n# gtest when building the test internally our memory sanitizer doesn't detect\n\n# memory leaks (don't know why).\n",
        "Line" : 876,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Test plugin binary.\n",
        "Line" : 891,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This test target is to ensure all our public header files and generated\n\n# code is free from warnings. We have to be more pedantic about these\n\n# files because they are compiled by users with different compiler flags.\n",
        "Line" : 909,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "src/external/coremltools_wrap/coremltools/deps/protobuf/util/python/BUILD" : {
      "ObjectId" : "3ac03856690e43bba992ea8e5a1047e6435eed61",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# This is a placeholder for python headers. Projects needing to use\n# fast cpp protos in protobuf's python interface should build with\n# --define=use_fast_cpp_protos=true, and in addition, provide\n# //external:python_headers dependency that in turn provides Python.h.\n#\n# Projects that include protobuf using a Bazel external repository will need to\n# add a workspace rule to their WORKSPACE files to add an external workspace\n# that includes the Python headers. For example, the protobuf WORKSPACE file\n# includes the following local_repository rule that points to this directory:\n#\n# new_local_repository(\n#   name = \"python\",\n#   path = __workspace_dir__ + \"/util/python\",\n# )",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/external/coremltools_wrap/coremltools/deps/pybind11/CMakeLists.txt" : {
      "ObjectId" : "63f34830b84eb0bb94810a01f9e87552cb9ceba3",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt -- Build system for the pybind11 modules\n\n#\n\n# Copyright (c) 2015 Wenzel Jakob <wenzel@inf.ethz.ch>\n\n#\n\n# All rights reserved. Use of this source code is governed by a\n\n# BSD-style license that can be found in the LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cmake warns if loaded from a min-3.0-required parent dir, so silence the warning:\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Check if pybind11 is being used directly or via add_subdirectory\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Cache variables so pybind11_add_module can be used in parent projects\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compile with compiler warnings turned on\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# extract project version from source\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake >= 3.0\n",
        "Line" : 100,
        "CharPositionInLine" : 42
      },
      "7" : {
        "Text" : "# Build an interface library target:\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# to match exported target\n",
        "Line" : 113,
        "CharPositionInLine" : 46
      },
      "9" : {
        "Text" : "# GNUInstallDirs \"DATADIR\" wrong here; CMake search path wants \"share\".\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "src/external/coremltools_wrap/coremltools/deps/pybind11/tests/CMakeLists.txt" : {
      "ObjectId" : "05d03b274dc6dc8f9d7177043e5da24feedf187b",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Full set of test files (you can override these; see below)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Invoking cmake with something like:\n\n#     cmake -DPYBIND11_TEST_OVERRIDE=\"test_issues.cpp;test_picking.cpp\" ..\n\n# lets you override the tests that get compiled and run.  You can restore to all tests with:\n\n#     cmake -DPYBIND11_TEST_OVERRIDE= ..\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if Eigen is available; if not, remove from PYBIND11_TEST_FILES (but\n\n# keep it in PYBIND11_PYTEST_FILES, so that we get the \"eigen is not installed\"\n\n# skip message).\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create the binding library\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Always write the output file directly into the 'tests' directory (even on MSVC)\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make sure pytest is found or produce a fatal error\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# A single command to compile and run the tests\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# And another to show the .so size and, if a previous size, compare it:\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Test CMake build using functions and targets from subdirectory or installed location\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# 3.0 needed for interface library for subdirectory_target/installed_target\n\n# 3.1 needed for cmake -E env for testing\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Run all the tests\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "src/external/coremltools_wrap/coremltools/deps/pybind11/tests/test_cmake_build/installed_function/CMakeLists.txt" : {
      "ObjectId" : "e0c20a8a3634ea7e33859c5009ba2c9edd1b011a",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external/coremltools_wrap/coremltools/deps/pybind11/tests/test_cmake_build/installed_target/CMakeLists.txt" : {
      "ObjectId" : "dd206592ff59ba28fd5b4674398f407ba440ef37",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# make sure result is, for example, test_installed_target.so, not libtest_installed_target.dylib\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/external/coremltools_wrap/coremltools/deps/pybind11/tests/test_cmake_build/subdirectory_function/CMakeLists.txt" : {
      "ObjectId" : "278007aebd1c130cce62772decb6a19cd77e3fbb",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external/coremltools_wrap/coremltools/deps/pybind11/tests/test_cmake_build/subdirectory_target/CMakeLists.txt" : {
      "ObjectId" : "6b142d62a931a3636e4074a6d39be5a0e7052689",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# make sure result is, for example, test_installed_target.so, not libtest_installed_target.dylib\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/external/coremltools_wrap/coremltools/deps/pybind11/tools/FindEigen3.cmake" : {
      "ObjectId" : "66ffe8e1e5b462e565582a0930291ae0f54cf00b",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "src/external/coremltools_wrap/coremltools/deps/pybind11/tools/FindPythonLibsNew.cmake" : {
      "ObjectId" : "dc44a9df5486d7f5c4d9d0cd56972fc5e7460cbf",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find python libraries\n\n# This module finds the libraries corresponding to the Python interpeter\n\n# FindPythonInterp provides.\n\n# This code sets the following variables:\n\n#\n\n#  PYTHONLIBS_FOUND           - have the Python libs been found\n\n#  PYTHON_PREFIX              - path to the Python installation\n\n#  PYTHON_LIBRARIES           - path to the python library\n\n#  PYTHON_INCLUDE_DIRS        - path to where Python.h is found\n\n#  PYTHON_MODULE_EXTENSION    - lib extension, e.g. '.so' or '.pyd'\n\n#  PYTHON_MODULE_PREFIX       - lib name prefix: usually an empty string\n\n#  PYTHON_SITE_PACKAGES       - path to installation site-packages\n\n#  PYTHON_IS_DEBUG            - whether the Python interpreter is a debug build\n\n#\n\n# Thanks to talljimbo for the patch adding the 'LDVERSION' config\n\n# variable usage.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n# Copyright 2012 Continuum Analytics, Inc.\n\n#\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in the\n\n# documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n# nor the names of their contributors may be used to endorse or promote\n\n# products derived from this software without specific prior written\n\n# permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# # A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use the Python interpreter to find the libs.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# According to http://stackoverflow.com/questions/646518/python-how-to-detect-debug-interpreter\n\n# testing whether sys has the gettotalrefcount function is a reliable, cross-platform\n\n# way to detect a CPython debug interpreter.\n\n#\n\n# The library suffix is from the config var LDVERSION sometimes, otherwise\n\n# VERSION. VERSION will typically be like \"2.7\" on unix, and \"27\" on windows.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Convert the process output into a list\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make sure the Python has the same pointer-size as the chosen compiler\n\n# Skip if CMAKE_SIZEOF_VOID_P is not defined\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The built-in FindPython didn't always give the version numbers\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Make sure all directory separators are '/'\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# when run in a venv, PYTHON_PREFIX points to it. But the libraries remain in the\n\n# original python installation. They may be found relative to PYTHON_INCLUDE_DIR.\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# raise an error if the python libs are still not found.\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#message(STATUS \"Searching for Python libs in ${_PYTHON_LIBS_SEARCH}\")\n\n# Probably this needs to be more involved. It would be nice if the config\n\n# information the python interpreter itself gave us were more complete.\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# If all else fails, just set the name/version and let the linker figure out the path.\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# We use PYTHON_INCLUDE_DIR, PYTHON_LIBRARY and PYTHON_DEBUG_LIBRARY for the\n\n# cache entries because they are meant to specify the location of a single\n\n# library. We now set the variables listed by the documentation for this\n\n# module.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "src/external/coremltools_wrap/coremltools/deps/pybind11/tools/pybind11Tools.cmake" : {
      "ObjectId" : "3fbffeeffec6797fffce68dda51bebe6ab3908d3",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tools/pybind11Tools.cmake -- Build system for the pybind11 modules\n\n#\n\n# Copyright (c) 2015 Wenzel Jakob <wenzel@inf.ethz.ch>\n\n#\n\n# All rights reserved. Use of this source code is governed by a\n\n# BSD-style license that can be found in the LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add a CMake parameter for choosing a desired Python version\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Checks whether the given CXX/linker flags can compile and link a cxx file.  cxxflags and\n\n# linkerflags are lists of flags to use.  The result variable is a unique variable name for each set\n\n# of flags: the compilation result will be cached base on the result variable.  If the flags work,\n\n# sets them in cxxflags_out/linkerflags_out internal cache variables (in addition to ${result}).\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal: find the appropriate link time optimization flags for this compiler\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Clang Gold plugin does not support -Os; append -O3 to MinSizeRel builds to override it\n",
        "Line" : 62,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Intel equivalent to LTO is called IPO\n",
        "Line" : 80,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# cmake only interprets libraries as linker flags when they start with a - (otherwise it\n\n# converts /LTCG to \\LTCG as if it was a Windows path).  Luckily MSVC supports passing flags\n\n# with - instead of /, even if it is a bit non-standard:\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Enable LTO flags if found, except for Debug builds\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Build a Python extension module:\n\n# pybind11_add_module(<name> [MODULE | SHARED] [EXCLUDE_FROM_ALL]\n\n#                     [NO_EXTRAS] [THIN_LTO] source1 [source2 ...])\n\n#\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# from project CMakeLists.txt\n\n# from pybind11Config\n",
        "Line" : 130,
        "CharPositionInLine" : 37
      },
      "10" : {
        "Text" : "# The prefix and extension are provided by FindPythonLibsNew.cmake\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Link against the Python shared library on Windows\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# It's quite common to have multiple copies of the same Python version\n\n# installed on one's system. E.g.: one copy from the OS and another copy\n\n# that's statically linked into an application like Blender or Maya.\n\n# If we link our plugin library against the OS Python here and import it\n\n# into Blender or Maya later on, this will cause segfaults when multiple\n\n# conflicting Python instances are active at the same time (even when they\n\n# are of the same version).\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Windows is not affected by this issue since it handles DLL imports\n\n# differently. The solution for Linux and Mac OS is simple: we just don't\n\n# link against the Python library. The resulting shared library will have\n\n# missing symbols, but that's perfectly fine -- they will be resolved at\n\n# import time.\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Suppress CMake >= 3.0 warning for shared libraries\n",
        "Line" : 159,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# Make sure C++11/14 are enabled\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Set the default symbol visibility to hidden (very important to obtain small binaries)\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Strip unnecessary sections of the binary on Linux/Mac OS\n",
        "Line" : 180,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# /MP enables multithreaded builds (relevant when there are many files), /bigobj is\n\n# needed for bigger binding projects due to the limit to 64k addressable sections\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 19
    },
    "src/external/coremltools_wrap/coremltools/mlmodel/CMakeLists.txt" : {
      "ObjectId" : "e84818b1ce3b150783d2f8a55346428a85e35bd6",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external/google/CMakeLists.txt" : {
      "ObjectId" : "348426d730f2fa2f98e4e54b01711035fcb095fe",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#3rd party source \n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/external/google/protobuf/CMakeLists.txt" : {
      "ObjectId" : "dc65ba8d0392d968f8291701a0184b2595fb9e5b",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Don't need to pull in the compiler source files here.\n\n# Or any non-lite sources.\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/external/libjson/CMakeLists.txt" : {
      "ObjectId" : "8065aca3fffa8f8a1b6a3e8d5b08cec64161f896",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external/lz4/CMakeLists.txt" : {
      "ObjectId" : "57c509af943f9e38fbab5f0f5f3a6798e228656e",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external/sparsehash/CMakeLists.txt" : {
      "ObjectId" : "d3be81f2626e1ccafa893588e2ac128dffda5d4b",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external/uuid_p/CMakeLists.txt" : {
      "ObjectId" : "a5711e7ef9e398fbeaad34b68a531d8946db836a",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external/xgboost/CMakeLists.txt" : {
      "ObjectId" : "2d51499fb37c40b3222a3ffc7d944948c5599764",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external/xgboost/Makefile" : {
      "ObjectId" : "9474ce31cba5bf00f0ff7b7a1f6120ee056605c9",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# java include path\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CFLAGS += -fopenmp\n",
        "Line" : 24,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#CFLAGS += -fopenmp -Bstatic\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#LDFLAGS += -Wl,--whole-archive -lpthread -Wl --no-whole-archive\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# by default use c++11\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# handling dmlc\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# java lib\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# specify tensor path\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# now the wrapper takes in two files. io and wrapper part\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# dependency on rabit\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# R CMD build --no-build-vignettes xgboost\n\n# R CMD build xgboost\n\n# rm -rf xgboost\n\n# R CMD check --as-cran xgboost*.tar.gz\n",
        "Line" : 165,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#make clean\n",
        "Line" : 180,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#make python\n",
        "Line" : 192,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# lint requires dmlc to be in current folder\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "src/external/xgboost/doc/Makefile" : {
      "ObjectId" : "40bba2a280dbf702d78295537fa75b8fc00c4e6b",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/external/xgboost/java/xgboost4j-demo/pom.xml" : {
      "ObjectId" : "c6f3cf927e152f3960f1420ca3e96b1a26ef20d8",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "src/external/xgboost/java/xgboost4j/pom.xml" : {
      "ObjectId" : "bfb59abc7a2bda7b7281bfbf3d9f8005df3f450d",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "src/external/xgboost/subtree/rabit/Makefile" : {
      "ObjectId" : "8c9d9f4033cc49b10c89a4650f98f8acf719c203",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# build path\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# objectives that makes up rabit library\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# wrapper code\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/external/xgboost/subtree/rabit/doc/Makefile" : {
      "ObjectId" : "40bba2a280dbf702d78295537fa75b8fc00c4e6b",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/external/xgboost/subtree/rabit/guide/Makefile" : {
      "ObjectId" : "678a34c41d92139fa082a8750c0e404880110463",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/external/xgboost/subtree/rabit/test/Makefile" : {
      "ObjectId" : "62e4e17f07147b3a7df97c68b448ed14f9178025",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# specify tensor path\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# programs \n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# we can link against MPI version to get use MPI\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/fileio/CMakeLists.txt" : {
      "ObjectId" : "474c67f04dd4bb25c8b2521fda87bee57726a9b8",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# legacy\n",
        "Line" : 12,
        "CharPositionInLine" : 61
      },
      "CommentCount" : 1
    },
    "src/flexible_type/CMakeLists.txt" : {
      "ObjectId" : "d74d7f2e14a3ef8d98e65ca63dd6b67c66b14e2a",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#/**************************************************************************/\n\n#/*                                                                        */\n\n#/*                             Logger Library                             */\n\n#/*                                                                        */\n\n#/**************************************************************************/\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/generics/CMakeLists.txt" : {
      "ObjectId" : "7a2348e441e540ab784123859073eb82a0d86a9b",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/globals/CMakeLists.txt" : {
      "ObjectId" : "2716f0af36d2a397ce1fde3db4f3ea46a0bcab12",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/image/CMakeLists.txt" : {
      "ObjectId" : "871bf5892ccf7d6f7bcc67c83a4758d154ac2855",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#/**************************************************************************/\n\n#/*                                                                        */\n\n#/*                             Logger Library                             */\n\n#/*                                                                        */\n\n#/**************************************************************************/\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set to native if supported\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/lambda/CMakeLists.txt" : {
      "ObjectId" : "a4a5eed4cb64b390111a40af7dcb31965835b094",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/logger/CMakeLists.txt" : {
      "ObjectId" : "59c7400fb264a522372fbd72a21ea949b47638cb",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#/**************************************************************************/\n\n#/*                                                                        */\n\n#/*                             Logger Library                             */\n\n#/*                                                                        */\n\n#/**************************************************************************/\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/ml_data/CMakeLists.txt" : {
      "ObjectId" : "ad832922a9f7a749ae54e881ec8230dc13ed1527",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/nanosockets/CMakeLists.txt" : {
      "ObjectId" : "c41a962d261f394935a28fbbdf5ddfc683eae4c9",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/objc/CMakeLists.txt" : {
      "ObjectId" : "c2d07da41acef051732bbe11c5bccf3fe5fd1e21",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Adding sources here allows us to unit test these custom models in python.\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "src/optimization/CMakeLists.txt" : {
      "ObjectId" : "2a9ca6a3ec718ee8febd85bc47856ebdd30500e4",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/CMakeLists.txt" : {
      "ObjectId" : "1858a8d942330ff8d0cd22ec4380c1c005859930",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/config/CMakeLists.txt" : {
      "ObjectId" : "6345cb70946fc14d78bafc96b3c6d9603bdb698e",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#/**************************************************************************/\n\n#/*                                                                        */\n\n#/*                             Random Library                             */\n\n#/*                                                                        */\n\n#/**************************************************************************/\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/platform/crash_handler/CMakeLists.txt" : {
      "ObjectId" : "cad7255d796ff9eb4dc0c5748cdac2ae2a2f6985",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/minipsutil/CMakeLists.txt" : {
      "ObjectId" : "39cf42f7850267e00829c3102321d9d5b2bd3a56",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/network/CMakeLists.txt" : {
      "ObjectId" : "25409ca60fd5c3a770b9165331df3a0315642624",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/parallel/CMakeLists.txt" : {
      "ObjectId" : "d66cf81fc25da2b663db91d3b24415d8f5827df5",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/perf/CMakeLists.txt" : {
      "ObjectId" : "97b5b438e160b7bead96db516f8a31cdcc269c75",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/process/CMakeLists.txt" : {
      "ObjectId" : "574053c582022ff4325bf166d64ff86dbb6549d5",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/shmipc/CMakeLists.txt" : {
      "ObjectId" : "d314979ad7474e820125549b7dd1aa32ea6cfac0",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/so_utils/CMakeLists.txt" : {
      "ObjectId" : "08cce7b53d59e3fc47b375c0547eb09e3c923138",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/timer/CMakeLists.txt" : {
      "ObjectId" : "8fe41d16ff640cf312d9de4fe732fb62f156cea3",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#/**************************************************************************/\n\n#/*                                                                        */\n\n#/*                             Random Library                             */\n\n#/*                                                                        */\n\n#/**************************************************************************/\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/random/CMakeLists.txt" : {
      "ObjectId" : "a66c909c64e56facb9eaf14b956591852649d0e9",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#/**************************************************************************/\n\n#/*                                                                        */\n\n#/*                             Random Library                             */\n\n#/*                                                                        */\n\n#/**************************************************************************/\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/serialization/CMakeLists.txt" : {
      "ObjectId" : "856213f99c16980ff3ef4d0b5a94391145e5f2e6",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/sframe/CMakeLists.txt" : {
      "ObjectId" : "2651c1e8c8a150d9dfe92c53b984591fbb84dd17",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/sframe_query_engine/CMakeLists.txt" : {
      "ObjectId" : "92141bd21fc9b49b2bf0cd3b7467d99220add818",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/sgraph/CMakeLists.txt" : {
      "ObjectId" : "c0297ef37fa1be702a8bd85ff551fa6b89fa9cbb",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/sketches/CMakeLists.txt" : {
      "ObjectId" : "13691712287c7e21fbf19dcb99f59759ffb6fad2",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/stack_trace/CMakeLists.txt" : {
      "ObjectId" : "3e88ee5c4f75c778b07d6e523744ecb41e54ae48",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/startup_teardown/CMakeLists.txt" : {
      "ObjectId" : "a5a6146ac1b2aaa56583953603daa023be071ae7",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/table_printer/CMakeLists.txt" : {
      "ObjectId" : "4f2df57d2a15d36d39ac2bb248b35e1d4afd736a",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/toolkits/CMakeLists.txt" : {
      "ObjectId" : "a4bfc2f6c33da7b922628b2d6228fbb04a77f577",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/toolkits/image_deep_feature_extractor/CMakeLists.txt" : {
      "ObjectId" : "a818ce88e4984698f853951729a6a51e4b20f00f",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/CMakeLists.txt" : {
      "ObjectId" : "21f0610850deb7c999b1a8b9df16b952a771add8",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pull in all the libraries in the extensions directory.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# same as unity_shared, but all symbols exported\n\n# uses add_library instead of make_library so dependencies' symbols can be exported.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note: this is not actually a build or link time dependency, but both of these\n\n# targets are very expensive to link (in terms of RAM usage).\n\n# Let's make sure they don't link at the same time.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/unity/extensions/CMakeLists.txt" : {
      "ObjectId" : "9e7a5c63a9aeec5372bfc94f878f9fdf36e16eae",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE: used for auto-generated protobuf source files\n\n# NOTE: used for auto-generated protobuf source files\n",
        "Line" : 14,
        "CharPositionInLine" : 28
      },
      "1" : {
        "Text" : "#----------------------------\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# make_extension(grouped_sframe SOURCES grouped_sframe.cpp)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#----------------------------\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#----------------------------\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#----------------------------\n\n# make_extension(timeseries\n\n#   SOURCES\n\n#     timeseries/grouped_timeseries.cpp\n\n#     timeseries/registration.cpp\n\n#     timeseries/timeseries.cpp\n\n# )\n\n# target_link_libraries(timeseries PUBLIC grouped_sframe)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/unity/lib/CMakeLists.txt" : {
      "ObjectId" : "6bd6a54675e3d8cb79645c68705c93f9610f9af7",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/lib/annotation/CMakeLists.txt" : {
      "ObjectId" : "3ff3cfbf07da6a5ca966d002e4a7702287e25079",
      "LastModified" : "2019-03-26T22:59:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/lib/visualization/CMakeLists.txt" : {
      "ObjectId" : "303786f6ffec4785f2b2943437c8c6d63e8ba63c",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# HACK HACK HACK\n\n# columnwise_summary.cpp should be in this file, not the parent directory,\n\n# but including it here for some reason causes linker errors\n\n# in release/test (C++ unit tests) - but not debug! And only on Linux.\n\n# Not sure why.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/unity/python/CMakeLists.txt" : {
      "ObjectId" : "8b3ab837a6aaf821f5fe49c068046f4e4361577b",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# With CMake, a clean separation can be made between the source tree and the\n\n# build tree.  When all source is compiled, as with pure C/C++, the source is\n\n# no-longer needed in the build tree.  However, with pure *.py source, the\n\n# source is processed directly.  To handle this, we reproduce the availability\n\n# of the source files in the build tree.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copy all the open source python stuff over first\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Overwrite with the proprietary stuff\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/unity/python/doc/Makefile" : {
      "ObjectId" : "b8a103443d9f3df70b84892f5162173f43e1601c",
      "LastModified" : "2019-03-07T17:54:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/unity/python/turicreate/CMakeLists.txt" : {
      "ObjectId" : "fd0957d0c25c4ad2033ddc9df98e59548cc75a50",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We depend on the open source src/unity/python/turicreate\n\n# to fill\n\n#  - INSTALLATION_BINARY_FILES\n\n#  - INSTALLATION_EXTENSIONS\n\n#\n\n# These can be amended locally to set up alternative behavior\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add the propretary extensions\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/unity/python/turicreate/_cython/CMakeLists.txt" : {
      "ObjectId" : "76325cb8828620d551003973e06d406f64acbc79",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/toolkits/CMakeLists.txt" : {
      "ObjectId" : "3250ffae81d7a3315f900612409d9da2b781e929",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/toolkits/activity_classification/CMakeLists.txt" : {
      "ObjectId" : "65a342c44aa3fe1214ec1dd3cb892344f1c62e13",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/toolkits/clustering/CMakeLists.txt" : {
      "ObjectId" : "e72bcf29f802aad6395fb5791c461478b7f52ff3",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/toolkits/coreml_export/CMakeLists.txt" : {
      "ObjectId" : "a38a89db3ed53dab0c637891565714f341464858",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/toolkits/drawing_classifier/CMakeLists.txt" : {
      "ObjectId" : "656a3ccae929eabed9a4ef3c12ae888f2fa364ea",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/toolkits/evaluation/CMakeLists.txt" : {
      "ObjectId" : "46e87c4133f83a43607d14b2aac9b4fcd86deecf",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/toolkits/factorization/CMakeLists.txt" : {
      "ObjectId" : "ccc518a3b50ebcf2554d64241c64ea6bd75a0d4e",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/toolkits/feature_engineering/CMakeLists.txt" : {
      "ObjectId" : "353d02ce2476287fbdc377a652dfc357d4d5d61f",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/toolkits/graph_analytics/CMakeLists.txt" : {
      "ObjectId" : "0e136a4f44ae77839c79b71dd5f99d408a216bc1",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/toolkits/image/CMakeLists.txt" : {
      "ObjectId" : "4a9b5b30a810549da72e86e7c41c1dea87f79b7e",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/toolkits/ml_data_2/CMakeLists.txt" : {
      "ObjectId" : "4335946cb98cb3cccd2defb6b6ec0ebcf5f162c9",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/toolkits/ml_model/CMakeLists.txt" : {
      "ObjectId" : "7b1feb624308dd9f36ced489b54ed288646abe83",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/toolkits/nearest_neighbors/CMakeLists.txt" : {
      "ObjectId" : "9198e80f894f19743a07a22648f078872b2b10b6",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/toolkits/neural_net/CMakeLists.txt" : {
      "ObjectId" : "85d79e21cc3c4299dc78cbf926c15f38d3ca68a0",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The unity_neural_net library provides a platform-agnostic interface to\n\n# neural-network inference and training backends. It provides a factory method\n\n# that should instantiate a backend appropriate to the current platform and\n\n# hardware.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# When building for macOS, build the MetalPerformanceShaders-based backend.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: a backend wrapping MXNet.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/unity/toolkits/object_detection/CMakeLists.txt" : {
      "ObjectId" : "2440082c6130669845f2830ebfb81da9783f1e9a",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/toolkits/pattern_mining/CMakeLists.txt" : {
      "ObjectId" : "791e0c084cc3d883a9f250a42838b20142357215",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/toolkits/prototype/CMakeLists.txt" : {
      "ObjectId" : "36567193fc9ee049c3b0c3b3d88ca4f42d5ae235",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/toolkits/recsys/CMakeLists.txt" : {
      "ObjectId" : "de7e56a6bcdfe4e37636dc075c5137f5d22e3515",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# unity_evaluation\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/unity/toolkits/sgd/CMakeLists.txt" : {
      "ObjectId" : "9880f196cefa433684136e85d748dc363ddc1897",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/toolkits/sparse_similarity/CMakeLists.txt" : {
      "ObjectId" : "f10d7fbacd2bc90483c983fa420951aa27a80056",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/toolkits/supervised_learning/CMakeLists.txt" : {
      "ObjectId" : "1feecb83d8d2f860f60c65f15c93b4adeeb4f735",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/toolkits/text/CMakeLists.txt" : {
      "ObjectId" : "a15cc28cda783b4c36951d3f8a7f6d74bc21f510",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unity/toolkits/util/CMakeLists.txt" : {
      "ObjectId" : "ea0b409117123fb12e642d1be983909c0e973dfc",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/util/CMakeLists.txt" : {
      "ObjectId" : "4162f15a5d4cc4c79a4ad6a8199df4ac7a7ac732",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/vega_renderer/CMakeLists.txt" : {
      "ObjectId" : "bec818601df979cf477b99582bf7b813e136d2ed",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n## Preprocessed JavaScript artifacts\n\n##\n",
        "Line" : 29,
        "CharPositionInLine" : 3
      },
      "1" : {
        "Text" : "##\n\n## VegaRenderer\n\n##\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "src/visualization/CMakeLists.txt" : {
      "ObjectId" : "9a5001294d25cc38334a07e4e5cf9327beac12cd",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO - there are probably more files that should go here, but this one might be sufficient.\n\n# I'm hoping it reliably changes every build.\n",
        "Line" : 13,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 1
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "3f3739025f164e70992dcf74c0f13afd6140c110",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# vega_renderer\n",
        "Line" : 32,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "test/annotation/CMakeLists.txt" : {
      "ObjectId" : "b5b92db6a9022d33b70ae989f7b3e0982d74fef0",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE: used for auto-generated protobuf source files\n\n# NOTE: used for auto-generated protobuf source files\n",
        "Line" : 14,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 1
    },
    "test/capi/CMakeLists.txt" : {
      "ObjectId" : "08532d5063692a150074dabf2957fcc76bd0a745",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# temporarily disabled because it fails intermittently\n\n# make_boost_test(capi_sframe.cxx REQUIRES unity_shared_for_testing)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make_boost_test(basic_capi.cxx REQUIRES capi unity_shared_for_testing)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/cppipc/CMakeLists.txt" : {
      "ObjectId" : "baacc1ec5a213e7203a944c95779d80b1ce5ff20",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cppipc tests only a couple of these are testable\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/fileio/CMakeLists.txt" : {
      "ObjectId" : "3789d0e6a2d10a160c9b12f2577d20f23ec0a408",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this writes a big file\n\n# make_executable(windows_4gb_test SOURCES windows_4gb_test.cpp REQUIRES unity_shared_for_testing)\n\n#\n\n# requires s3\n\n# make_boost_test(sanitize_url_test.cxx REQUIRES unity_shared_for_testing)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/flexible_type/CMakeLists.txt" : {
      "ObjectId" : "bb7f1d39c041660c49b0bd24c765bf80730f3e82",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/generics/CMakeLists.txt" : {
      "ObjectId" : "b96b979979884731cdbb423abe6464eac2de4f09",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/lambda/CMakeLists.txt" : {
      "ObjectId" : "f1579ba4195a75e8b9be230dcc101563497d21ca",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/lazy_eval/CMakeLists.txt" : {
      "ObjectId" : "3ca23781f46150f0dc1da700ae0f66f22f2a04dc",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/logger/CMakeLists.txt" : {
      "ObjectId" : "71701d67a3c543c98cb83471129db28f6420aa50",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/ml_data/CMakeLists.txt" : {
      "ObjectId" : "b2f7583090319147b544f71c26345eda61fd8cff",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# KNOWN FAILURE\n\n# make_boost_test(dml_stats_merge_test.cxx REQUIRES unity_shared_for_testing)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/nanosockets/CMakeLists.txt" : {
      "ObjectId" : "d0c3eba08e3ab82ec026c322027c36ab018914f3",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#make_boost_test(pubsubtest.cxx REQUIRES unity_shared_for_testing)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/network/CMakeLists.txt" : {
      "ObjectId" : "0113999022a6d5830640a114b21a61aa8263edad",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/optimization/CMakeLists.txt" : {
      "ObjectId" : "0b0936207e7015184a9f24bf82a6c931b916695c",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/parallel/CMakeLists.txt" : {
      "ObjectId" : "ad7ebf924ac1f73e6d95ed24ebeb034591434fbc",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/process/CMakeLists.txt" : {
      "ObjectId" : "8ba9ded3ff2fbdc0469e0edba720eba57649ff0c",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/random/CMakeLists.txt" : {
      "ObjectId" : "f88ed19be35704868bc099d737583e197080f09c",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#make_boost_test(random_test.cxx REQUIRES unity_shared_for_testing)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/serialization/CMakeLists.txt" : {
      "ObjectId" : "106fc2f136ba864ce80813677b5f00d360c84176",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/sframe/CMakeLists.txt" : {
      "ObjectId" : "c59791eb88d892efd89a340fd96e96183299d8ab",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/sframe_query_engine/CMakeLists.txt" : {
      "ObjectId" : "3091536d2ac36b942df29cff852c67a6c64dfcdf",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/sframe_query_engine/operators/CMakeLists.txt" : {
      "ObjectId" : "4e56cae350d2df968cf93e6acede22aaff22b8ae",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The lambda test requires a pickled function without turicreate dependency\n\n# make_boost_test(lambda_transform.cxx REQUIRES unity_shared_for_testing)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/sgraph/CMakeLists.txt" : {
      "ObjectId" : "293e9d246697d561d2f5e8be0ee335797c86cf78",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/shmipc/CMakeLists.txt" : {
      "ObjectId" : "d4156090bf09e469c3db141e1e3935e08dd659af",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cppipc tests only a couple of these are testable\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/sketches/CMakeLists.txt" : {
      "ObjectId" : "b91aa4d4610ecb025c7945b0b2323f65f1cba616",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/table_printer/CMakeLists.txt" : {
      "ObjectId" : "3ef90ff3fd857fba92f64070eb92abbaddf8f0bc",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/timer/CMakeLists.txt" : {
      "ObjectId" : "7a003e4d0b37a7a15078b8aabbbcb5a1ad93ba16",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/timeseries/CMakeLists.txt" : {
      "ObjectId" : "e40ed33320184cbed34910e0bfe34cf4c003025e",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this test really should be in unity\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/toolkits/CMakeLists.txt" : {
      "ObjectId" : "139597f9cb07c5d48bed18984ec4747f4b4f3438",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/toolkits/supervised_learning/CMakeLists.txt" : {
      "ObjectId" : "6aa4cb1319a13a4031627f2b82aac15804b691ed",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/unity/CMakeLists.txt" : {
      "ObjectId" : "f0eae7baa94291bd7ca8f481eea20716833b1e78",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/unity/toolkits/CMakeLists.txt" : {
      "ObjectId" : "9130b53b1bfacca895f8236de04e8c9fdd3e1673",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/unity/toolkits/coreml_export/CMakeLists.txt" : {
      "ObjectId" : "3f298dda6e9c61349ca5f6f96e866ffcd9886592",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/unity/toolkits/feature_engineering/CMakeLists.txt" : {
      "ObjectId" : "37b7717a6a7c3ba78b64bbfc1961743ff4dfeb70",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/unity/toolkits/ml_data_2/CMakeLists.txt" : {
      "ObjectId" : "ed6e598e6ac9513edecf1010032d2e6f590c1115",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/unity/toolkits/neural_net/CMakeLists.txt" : {
      "ObjectId" : "43dc17ce4d00d2fc4272ceea3fb3151c4a97077b",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/unity/toolkits/object_detection/CMakeLists.txt" : {
      "ObjectId" : "a44f0a6ae97d843fe0894320bac56df3736e4496",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/unity/toolkits/pattern_mining/CMakeLists.txt" : {
      "ObjectId" : "44ad348f34eda52bbc37ca4ea67a81b224c39e2b",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/unity/toolkits/recsys/CMakeLists.txt" : {
      "ObjectId" : "27ed6c2e532f7064d0c463b14102625c391f220c",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Will enable these in a later pull request\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unity/toolkits/sparse_similarity/CMakeLists.txt" : {
      "ObjectId" : "daeb7523ba7e6e55f44b7aefe4162c03913128a2",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/unity/toolkits/synthetic_timings/CMakeLists.txt" : {
      "ObjectId" : "f92f9ad849de062af95eb4433d00ac07b624dd00",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/util/CMakeLists.txt" : {
      "ObjectId" : "b8d4f57bb26db8bf3cc74aa976cd28a0190af9a9",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO - seems we can delete crash_handler? Nothing is using it.\n\n#make_executable(test_crash_handler\n\n#  SOURCES test_crash_handler.cpp\n\n#  REQUIRES unity_shared_for_testing)\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "test/vega_renderer/CMakeLists.txt" : {
      "ObjectId" : "a3a8899278ad70db470b74509a7177e509255e50",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# sets XCTest_LIBRARIES\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# loop through files in turicreate\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "userguide/supervised-learning/notebooks/Makefile" : {
      "ObjectId" : "1c68d28d6439294c905e4c809b61a7a83a9175ed",
      "LastModified" : "2019-04-01T16:35:29Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 4425,
    "CMAKESOURCE" : 5,
    "QMAKE" : 51,
    "MAKEFILE" : 115,
    "AUTOMAKE" : 57,
    "BAZEL" : 3,
    "ANT" : 1,
    "MAVEN" : 14
  },
  "ElapsedTime" : 20452
}