{
  "Repository" : "5364765",
  "Revision" : "HEAD",
  "ObjectId" : "c0b05572733f1395666184ac3495166cd40945db",
  "CommitTime" : "2019-04-02T11:23:23Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "0e9b06b07c64782e190f4bac3b396ad16fb2fc0d",
      "LastModified" : "2018-01-17T13:46:20Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Allow e.g. \"make R=R-devel install\"\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Alternative 'install-metis': Get source code and build...\n\n## Select version that match R's Matrix package\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Edit \"metis-4.0/Makefile.in\" with COPTIONS = -fPIC\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Restore object files so we can make .so\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Get a rough changelog since most recent github revision tag\n\n## (Use as starting point when updating NEWS file)\n\n## NOTE: Run *after* updating version and date in DESCRIPTION.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## The CRAN version must be customized a bit...\n\n## FIXME: Is it possible to get 'Makevars' POSIX compliant without\n\n## losing the current flexibility e.g. 'make install-metis'? (Main\n\n## obstacle is lack of 'ifdef' in POSIX make).\n\n## FIXME: 'LinkingTo RcppEigen' is not really right but perhaps the\n\n## best we can do to assert RcppEigen is installed? (we need the\n\n## Eigen headers, nothing else)\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##########################################################\n\n## For travis tests\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "TMB/inst/include/Eigen/CMakeLists.txt" : {
      "ObjectId" : "9eb502b792d4a9607e2d323f2d8114939b43c209",
      "LastModified" : "2017-09-25T14:20:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "TMB/inst/include/cppad/CMakeLists.txt" : {
      "ObjectId" : "b969735a6525afae8c91ac051c8a30bcf9e5cfde",
      "LastModified" : "2017-09-25T14:20:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# $Id:$\n\n# -----------------------------------------------------------------------------\n\n# CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-15 Bradley M. Bell\n\n#\n\n# CppAD is distributed under multiple licenses. This distribution is under\n\n# the terms of the\n\n#                     GNU General Public License Version 3.\n\n#\n\n# A copy of this license is included in the COPYING file of this distribution.\n\n# Please visit http://www.coin-or.org/CppAD/ for information on other licenses.\n\n# -----------------------------------------------------------------------------\n\n# Build the cppad/configure.hpp file.\n\n# Inherit environment from ../CMakeLists.txt\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# command line arguments\n\n#\n\n# cppad_testvector\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# cppad_max_num_threads\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# cppad_sparse_list\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# cppad_tape_id_type\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# cppad_tape_addr_type\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# cppad_implicit_ctor_from_any_type\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# cppad_explicit_ctor\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# cppad_internal_sparse_set\n\n#\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# -----------------------------------------------------------------------------\n\n# cppad_boostvector, cppad_cppadvector, cppad_eigenvector, cppad_stdvector\n\n#\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# FIND_PACKAGE(Boost) done by ../CMakeLists.txt\n",
        "Line" : 92,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# =============================================================================\n\n# Begin C++11 features\n\n# -----------------------------------------------------------------------------\n\n# cppad_has_rvalue\n\n#\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# cppad_has_nullptr\n\n#\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# cppad_has_cstdint_8_to_64\n\n#\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# cppad_compiler_has_erf\n\n#\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# cppad_has_high_resolution_clock\n\n#\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# =============================================================================\n\n# End C++11 features\n\n# -----------------------------------------------------------------------------\n\n# cppad_has_gettimeofday\n\n#\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# cppad_size_t_not_unsigned_int\n\n#\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# cppad_tape_addr_type, cppad_tape_id_type\n\n#\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# cppad_max_num_threads\n\n#\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Copy a file to another location and modify its contents.\n\n# configure_file(InputFile OutputFile [COPYONLY] [ESCAPE_QUOTES] [@ONLY])\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "TMB/inst/include/unsupported/CMakeLists.txt" : {
      "ObjectId" : "4fef40a86c6d17dd8cc792a5e4f9e8d65abcdf58",
      "LastModified" : "2017-09-25T14:20:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# can't do EXCLUDE_FROM_ALL here, breaks CTest\n",
        "Line" : 4,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 1
    },
    "TMB/inst/include/unsupported/Eigen/CMakeLists.txt" : {
      "ObjectId" : "631a060145bd633e573e65e2db885cf78a970a01",
      "LastModified" : "2017-09-25T14:20:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "TMB/inst/include/unsupported/Eigen/CXX11/CMakeLists.txt" : {
      "ObjectId" : "385ed240c20773bf47cdfd6765ad6227508a9ae8",
      "LastModified" : "2017-09-25T14:20:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "TMB/inst/include/unsupported/Eigen/src/EulerAngles/CMakeLists.txt" : {
      "ObjectId" : "40af550e8a92987c7846e53e22d30c180a368492",
      "LastModified" : "2017-09-25T14:20:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "TMB/inst/include/unsupported/doc/CMakeLists.txt" : {
      "ObjectId" : "9e9ab98007eb189f2625f7fdd3c232c2d3da4e3b",
      "LastModified" : "2017-09-25T14:20:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "TMB/inst/include/unsupported/doc/examples/CMakeLists.txt" : {
      "ObjectId" : "c47646dfca9d76e45cf929d74508e32698d96ee3",
      "LastModified" : "2017-09-25T14:20:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "TMB/inst/include/unsupported/doc/snippets/CMakeLists.txt" : {
      "ObjectId" : "f0c5cc2a84dd65edd575963bf648a1481f9b1dde",
      "LastModified" : "2017-09-25T14:20:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "TMB/inst/include/unsupported/test/CMakeLists.txt" : {
      "ObjectId" : "b5fa1c84543c9b03f7dba2884ec8731d82b2ddb3",
      "LastModified" : "2017-09-25T14:20:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# generate split test header file only if it does not yet exist\n\n# in order to prevent a rebuild everytime cmake is configured\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this test seems to never have been successful on x87, so is considered to contain a FP-related bug.\n\n# see thread: \"non-linear optimization test summary\"\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: The following test names are prefixed with the cxx11 string, since historically\n\n# the tests depended on c++11. This isn't the case anymore so we ought to rename them.\n\n# FIXME: Old versions of MSVC fail to compile this code, so we just disable these tests\n\n# when using visual studio. We should make the check more strict to enable the tests for\n\n# newer versions of MSVC.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This test requires __uint128_t which is only available on 64bit systems\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# It should be safe to always run these tests as there is some fallback code for\n\n# older compiler that don't support cxx11.\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#  ei_add_test(cxx11_tensor_symmetry)\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# These tests needs nvcc\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Make sure to compile without the -pedantic, -Wundef, -Wnon-virtual-dtor\n\n# and -fno-check-new flags since they trigger thousands of compilation warnings\n\n# in the CUDA runtime\n\n# Also remove -ansi that is incompatible with std=c++11.\n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# otherwise the flag has already been added because of the above set(CMAKE_CXX_STANDARD 11)\n",
        "Line" : 227,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Contractions require arch 3.0 or higher\n",
        "Line" : 242,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# The random number generation code requires arch 3.5 or greater.\n",
        "Line" : 250,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "dox/Makefile" : {
      "ObjectId" : "c164c95d60f2239a417972183ab0b8e9b88f8087",
      "LastModified" : "2017-09-25T14:20:04Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "## Preparations for Doxygen\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Preparations for bookdown. _bookdown.yml seems to be the only way to limit the book to a subset of Rmd files ?\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Outcomment to get new layout\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## echo \"HTML_HEADER = layout/header.html\" >> Doxyfile.tmp\n\n## echo \"HTML_EXTRA_STYLESHEET = layout/customdoxygen.css\" >> Doxyfile.tmp\n\n## echo \"HTML_EXTRA_FILES = layout/doxy-boot.js\" >> Doxyfile.tmp\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "## sed -i 's/$(document).ready/$(document).skip_this_function/g' html/dynsections.js\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "## For quick preview\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## This is the version for gh-pages. We put book inside html folder and change relative links\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "tmb_examples/Makefile" : {
      "ObjectId" : "43ffb60b0554180ba5251b29e2804104b8daea20",
      "LastModified" : "2018-03-27T07:47:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Allow e.g. \"make R=R-devel\"\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##########################################################\n\n## For travis tests\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tmb_syntax/Makefile" : {
      "ObjectId" : "3aa045648f566c401ffcaf18b7275885dd410431",
      "LastModified" : "2018-05-15T07:43:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Allow e.g. \"make R=R-devel\"\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##########################################################\n\n## For travis tests\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Check that syntax is not broken for projects that depend on TMB\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 10,
    "MAKEFILE" : 4
  },
  "ElapsedTime" : 1698
}