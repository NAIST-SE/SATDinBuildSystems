{
  "Repository" : "2696876",
  "Revision" : "HEAD",
  "ObjectId" : "4d97d4cbcc8eaaf7a37191dbd559fbd348504b2a",
  "CommitTime" : "2019-04-17T21:44:32Z",
  "Files" : {
    "2d/CMakeLists.txt" : {
      "ObjectId" : "b66da5fd89b4d889b3fa83055cf3ceb697ed50ca",
      "LastModified" : "2019-03-06T21:07:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Install include files\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeLists.txt" : {
      "ObjectId" : "15be64cf0f485d89d3ba4cfd4c1311d737783b07",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### ---[ PCL global CMake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 1. Remove with 3.12.4.\n\n# 2. Remove search paths with *_ROOT since they will be automatically checked\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Set target C++ standard and required compiler features\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMake did not have cxx_std_14 compile feature prior to 3.8\n\n# We use cxx_attribute_deprecated as a proxy because this feature is a part of c++14 standard\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# In case the user does not setup CMAKE_BUILD_TYPE, assume it's RelWithDebInfo\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### ---[ Find universal dependencies\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ---[ Include pkgconfig\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ---[ Release/Debug specific flags\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ---[ special maintainer mode\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Update the documentation string of CMAKE_BUILD_TYPE for GUIs\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Compiler identification\n\n# Define a variable CMAKE_COMPILER_IS_X where X is the compiler short name.\n\n# Note: CMake automatically defines one for GNUCXX, nothing to do in this case.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create a variable with expected default CXX flags\n\n# This will be used further down the road to check if the user explicitly provided CXX flags\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Enable verbose timing display?\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# check for SSE flags\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ---[ Unix/Darwin/Windows specific flags\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Add extra code generation/link optimizations\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# /MANIFEST:NO\") # please, don't disable manifest generation, otherwise crash at start for vs2008\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Usage of COMPILE_LANGUAGE generator expression for MSVC in add_compile_options requires at least CMake 3.11, see https://gitlab.kitware.com/cmake/cmake/issues/17435\t  \n",
        "Line" : 162,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# MSVC_MP is 0 in case the information cannot be determined by ProcessorCount => fallback\n",
        "Line" : 164,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# MSVC_MP is 0 in case the information cannot be determined by ProcessorCount => fallback\n\n# Generator expression is necessary to limit /MP flag to C/CXX, so flag will be not set to e.g. CUDA (see https://gitlab.kitware.com/cmake/cmake/issues/17535)\n",
        "Line" : 173,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# Unfortunately older Clang versions do not have this: -Wno-unnamed-type-template-args\n",
        "Line" : 202,
        "CharPositionInLine" : 107
      },
      "21" : {
        "Text" : "# ---[ Windows requires DLLs (shared libraries) to be installed in the same directory as executables\n",
        "Line" : 232,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Check if the current generator is an IDE.\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Add an \"uninstall\" target\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "###\n\n# this is copy paste form http://www.itk.org/Wiki/CMake_RPATH_handling\n\n# in order to always make a full statement RPATH\n\n###\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "### ---[ Find universal dependencies\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Eigen (required)\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# FLANN (required)\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# libusb-1.0\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Dependencies for different grabbers\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# metslib\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# LibPNG\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Qhull\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Cuda\n",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Find VTK\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# On old VTK versions this variable does not exist. In this case it is\n\n# safe to assume OpenGL backend\n",
        "Line" : 375,
        "CharPositionInLine" : 6
      },
      "36" : {
        "Text" : "#Find PCAP\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# OpenGL and GLUT\n",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Boost (required)\n",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "### ---[ Create the config.h file\n",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "### ---[ Set up for tests\n",
        "Line" : 432,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "### ---[ Set up for examples\n\n#include(\"${PCL_SOURCE_DIR}/cmake/pcl_examples.cmake\")\n",
        "Line" : 435,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "### ---[ Add the libraries subdirectories\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "### ---[ Documentation\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "### ---[ Configure PCLConfig.cmake\n",
        "Line" : 452,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "### ---[ Package creation\n",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "### ---[ Make a pretty picture of the dependency graph\n",
        "Line" : 465,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "### ---[ Finish up\n",
        "Line" : 469,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "apps/3d_rec_framework/CMakeLists.txt" : {
      "ObjectId" : "26e33193a4899d2a567ffc3c8bb5a942f20e8af6",
      "LastModified" : "2019-03-06T21:07:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find VTK\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OpenNI found?\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default to not building for now\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install include files\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add to the compound apps target\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "apps/CMakeLists.txt" : {
      "ObjectId" : "f3e04f59303c48ab6474b53228da54984ab789b8",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# to be filled with all targets the apps subsystem\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Manual registration demo\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# OpenNI Passthrough application demo\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# OpenNI Organized Connected Component application demo\n",
        "Line" : 147,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# QHULL_FOUND\n",
        "Line" : 169,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# WITH_OPENNI\n",
        "Line" : 185,
        "CharPositionInLine" : 10
      },
      "6" : {
        "Text" : "# VTK_FOUND\n",
        "Line" : 186,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# OpenGL and GLUT\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Install include files\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "apps/cloud_composer/CMakeLists.txt" : {
      "ObjectId" : "dfd92f123de896bc9c8a2a5b757ddf713fc10e91",
      "LastModified" : "2019-03-06T21:07:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Disable some warnings which are all over Qt headers and make finding error messages hell\n\n#if(${CMAKE_CXX_FLAGS} MATCHES \"-Wconversion\")\n\n#    string(REGEX REPLACE \"-Wconversion(.+)\" \"\" CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS}\")\n\n#endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find VTK\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QT5 Found?\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# QVTK?\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Default to not building for now\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Create subdirectory for plugin libs\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build pcl_cc_tool_interface as static library, to fix issue mentioned in #2708\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Sources & Headers for main application\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Install include files\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#TOOL buildING SCRIPTS\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#FPFH Tool\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#Normals Tool\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Euclidean Clustering Tool\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#Statistical Outlier Removal Tool\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#Vox Grid Downsample Tool\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#Organized Segmentation\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#Sanitize Cloud Tool\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#Supervoxels\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Add to the compound apps target\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "apps/cloud_composer/ComposerTool.cmake" : {
      "ObjectId" : "3779e5127a2089aef250a2ed0f7cfe6c2eec95e3",
      "LastModified" : "2018-12-15T13:38:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Template to make a tool\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(\"Making plugin \" pcl_cc_tool_${TOOL_NAME})\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# message(\"Files:\"  ${TOOL_SOURCES} ${TOOL_HEADERS_MOC})\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "apps/in_hand_scanner/CMakeLists.txt" : {
      "ObjectId" : "e872fb945296a8f2de04e166a3fe1d514d58c890",
      "LastModified" : "2019-03-06T21:07:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# QT5 Found?\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OpenGL\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#OpenNI\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Default to not building for now\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################################################\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Qt\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Offline integration\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "################################################################################\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# In-hand scanner\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Offline integration\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add to the compound apps target\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "apps/modeler/CMakeLists.txt" : {
      "ObjectId" : "69eb7221c0ef1ae379c492bdb818db4f94d900cd",
      "LastModified" : "2019-03-06T21:07:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find VTK\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# QT5 Found?\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QVTK?\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Default to not building for now\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set Qt files and resources here\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Qt stuff\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Organize files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Generate executable\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Put the ui in the windows project file\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Install include files\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add to the compound apps target\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "apps/point_cloud_editor/CMakeLists.txt" : {
      "ObjectId" : "d063c4e2b3926016e89f1087cd053bf4d9b3e107",
      "LastModified" : "2019-03-06T21:07:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# QT5 Found?\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find OpenGL\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default to not building for now\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add to the compound apps target\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/CudaComputeTargetFlags.cmake" : {
      "ObjectId" : "928c664c5a027d97d066864a5c300cacd3ed0246",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  Compute target flags macros by Anatoly Baksheev\n\n#\n\n#  Usage in CmakeLists.txt:\n\n#    include(CudaComputeTargetFlags.cmake)\n\n#    APPEND_TARGET_ARCH_FLAGS()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#compute flags macros\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Tell NVCC to add binaries for the specified GPUs\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# User explicitly specified PTX for the concrete BIN\n",
        "Line" : 19,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# User didn't explicitly specify PTX for the concrete BIN, we assume PTX=BIN\n",
        "Line" : 22,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Tell NVCC to add PTX intermediate code for the specified architectures\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindDSSDK.cmake" : {
      "ObjectId" : "3212a0c446dbd8770ef394b091ca020ee5a0c4e2",
      "LastModified" : "2015-09-12T10:00:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Find SoftKinetic DepthSense SDK\n\n#\n\n#     find_package(DSSDK)\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  DSSDK_FOUND                 True if DepthSense SDK was found\n\n#  DSSDK_VERSION               The version of DepthSense SDK\n\n#  DSSDK_INCLUDE_DIRS          The location(s) of DepthSense SDK headers\n\n#  DSSDK_LIBRARIES             Libraries needed to use DepthSense SDK\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include directories\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Libraries\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Version\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindEigen.cmake" : {
      "ObjectId" : "e1fb6abe2f0e4659f3f2563470eaaaf1aa9775dc",
      "LastModified" : "2018-11-30T14:41:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Find Eigen3\n\n#\n\n# This sets the following variables:\n\n# EIGEN_FOUND - True if Eigen was found.\n\n# EIGEN_INCLUDE_DIRS - Directories containing the Eigen include files.\n\n# EIGEN_DEFINITIONS - Compiler flags for Eigen.\n\n# EIGEN_VERSION - Package version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindEnsenso.cmake" : {
      "ObjectId" : "98b56015b7245e7fdea711fe896f05d21d31acce",
      "LastModified" : "2017-11-08T14:52:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Find Ensenso SDK (IDS-Imaging)\n\n#\n\n#     find_package(Ensenso)\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  ENSENSO_FOUND               True if Ensenso SDK was found\n\n#  ENSENSO_INCLUDE_DIRS        The location(s) of Ensenso SDK headers\n\n#  ENSENSO_LIBRARIES           Libraries needed to use Ensenso SDK\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include directories\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Libraries\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/Modules/FindFLANN.cmake" : {
      "ObjectId" : "d44eb8dcd63532d8b1d5165ab9c06dfa74be9e6a",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindFLANN\n\n# --------\n\n#\n\n# Try to find FLANN library and include files.\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``FLANN::FLANN``\n\n#  Defined if the system has FLANN.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module sets the following variables:\n\n#\n\n# ::\n\n#\n\n#   FLANN_FOUND               True in case FLANN is found, otherwise false\n\n#   FLANN_DEFINITIONS         Compiler flags for FLANN.\n\n#   FLANN_INCLUDE_DIR         Location of FLANN header files\n\n#   FLANN_INCLUDE_DIRS        Location of FLANN header files (including dependencies)\n\n#   FLANN_LIBRARY             FLANN release library\n\n#   FLANN_LIBRARY_DEBUG       FLANN debug library\n\n#   FLANN_LIBRARIES           FLANN release and debug library\n\n#\n\n# Example usage\n\n# ^^^^^^^^^^^^^\n\n#\n\n# ::\n\n#\n\n#     find_package(FLANN REQUIRED)\n\n#\n\n#     add_executable(foo foo.cc)\n\n#     target_link_libraries(foo FLANN::FLANN)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindGTestSource.cmake" : {
      "ObjectId" : "801886f14357e57304b535fe525695e4027d6b36",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Find GTest\n\n#\n\n# This sets the following variables:\n\n# GTEST_FOUND - True if GTest was found.\n\n# GTEST_INCLUDE_DIRS - Directories containing the GTest include files.\n\n# GTEST_SRC_DIR - Directories containing the GTest source files.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindOpenNI.cmake" : {
      "ObjectId" : "09a6081138a14bd0c2607531be313f85ccccda87",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Find OpenNI\n\n#\n\n#     find_package(OpenNI)\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  OPENNI_FOUND                True if OpenNI was found\n\n#  OPENNI_INCLUDE_DIRS         The location(s) of OpenNI headers\n\n#  OPENNI_LIBRARIES            Libraries needed to use OpenNI\n\n#  OPENNI_DEFINITIONS          Compiler flags for OpenNI\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find LibUSB\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add a hint so that it can find it without the pkg-config\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add a hint so that it can find it without the pkg-config\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include directories\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Libraries\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindOpenNI2.cmake" : {
      "ObjectId" : "10263311293e47c413e1361d3ec3cec271b42cf6",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Find OpenNI2\n\n#\n\n#     find_package(OpenNI2)\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  OPENNI2_FOUND               True if OpenNI2 was found\n\n#  OPENNI2_INCLUDE_DIRS        The location(s) of OpenNI2 headers\n\n#  OPENNI2_LIBRARIES           Libraries needed to use OpenNI2\n\n#  OPENNI2_DEFINITIONS         Compiler flags for OpenNI2\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find LibUSB\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Win64 needs '64' suffix\n\n# common path for deb packages\n",
        "Line" : 48,
        "CharPositionInLine" : 58
      },
      "3" : {
        "Text" : "# No suffix needed on Win64\n\n# Linux\n",
        "Line" : 54,
        "CharPositionInLine" : 32
      },
      "4" : {
        "Text" : "# Windows default path, Win64 needs '64' suffix\n\n# Linux install does not use a separate 'lib' directory\n",
        "Line" : 56,
        "CharPositionInLine" : 58
      },
      "5" : {
        "Text" : "# Include directories\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Libraries\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "cmake/Modules/FindPcap.cmake" : {
      "ObjectId" : "0b4ec3fc0d3825ad68dab13db9945f2e96384aa7",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###################################################################\n\n#\n\n# Copyright (c) 2006 Frederic Heem, <frederic.heem@telsey.it>\n\n# Copyright (c) 2012 Keven Ring\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in\n\n# the documentation and/or other materials provided with the\n\n# distribution.\n\n#\n\n# * Neither the name of the Telsey nor the names of its\n\n# contributors may be used to endorse or promote products derived\n\n# from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n\n# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n\n# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n\n# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n###################################################################\n\n# - Find pcap\n\n# Find the PCAP includes and library\n\n# http://www.tcpdump.org/\n\n#\n\n# The environment variable PCAPDIR allows to specficy where to find\n\n# libpcap in non standard location.\n\n#\n\n# 2012/01/02 - KEVEN RING\n\n#              Modified to find include/libs for WinPCAP\n\n#\n\n# PCAP_INCLUDE_DIRS - where to find pcap.h, etc.\n\n# PCAP_LIBRARIES - List of libraries when using pcap.\n\n# PCAP_FOUND - True if pcap found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Functions\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Is pcap found ?\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/Modules/FindQVTK.cmake" : {
      "ObjectId" : "f6c8602b2c462f0f08b18931451479f9da80ec11",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Find QVTK\n\n#\n\n# This sets the following variables:\n\n# QVTK_FOUND - True if QVTK was found.\n\n# QVTK_INCLUDE_DIR - Directory containing the QVTK include files.\n\n# QVTK_LIBRARY - QVTK library.\n\n# if QVTK_FOUND then QVTK_INCLUDE_DIR is appended to VTK_INCLUDE_DIRS and\n\n# QVTK_LIBRARY is appended to QVTK_LIBRARY_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindQhull.cmake" : {
      "ObjectId" : "7f3cf90dc117662c3eac30c88d0372e65ec95898",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Find QHULL\n\n#\n\n# This sets the following variables:\n\n# QHULL_FOUND - True if QHULL was found.\n\n# QHULL_INCLUDE_DIRS - Directories containing the QHULL include files.\n\n# QHULL_LIBRARIES - Libraries needed to use QHULL.\n\n# QHULL_DEFINITIONS - Compiler flags for QHULL.\n\n# If QHULL_USE_STATIC is specified then look for static libraries ONLY else\n\n# look for shared ones\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include directories\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Libraries\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/Modules/FindRSSDK.cmake" : {
      "ObjectId" : "de0cf2cf86c633aa2ae3254a072b14073f3e2796",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Find Intel RealSense SDK\n\n#\n\n#     find_package(RSSDK)\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  RSSDK_FOUND                 True if RealSense SDK was found\n\n#  RSSDK_VERSION               The version of RealSense SDK\n\n#  RSSDK_INCLUDE_DIRS          The location(s) of RealSense SDK headers\n\n#  RSSDK_LIBRARIES             Libraries needed to use RealSense SDK\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include directories\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Libraries\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Version\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindSphinx.cmake" : {
      "ObjectId" : "61f5521c832fef20aabe473c4f2f4dc224ffae45",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Find Sphinx\n\n#\n\n# This sets the following variables:\n\n# SPHINX_FOUND - True if Sphinx was found.\n\n# SPHINX_EXECUTABLE - Sphinx-build executable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FinddavidSDK.cmake" : {
      "ObjectId" : "88406467f15967395a9eed40f7d16f990bb9fe11",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# - Try to find davidSDK (David Vision Systems)\n\n# Once done this will define\n\n#  DAVIDSDK_FOUND - System has davidSDK\n\n#  DAVIDSDK_INCLUDE_DIRS - The davidSDK include directories\n\n#  DAVIDSDK_LIBRARIES - The libraries needed to use davidSDK\n\n#  DAVIDSDK_DEFINITIONS - Compiler switches required for using davidSDK\n\n# -----------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set DAVIDSDK_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/Findlibusb-1.0.cmake" : {
      "ObjectId" : "6d7ac0cf12fe326592ceaa41f1bfba2ea26cbb6e",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libusb-1.0\n\n# Once done this will define\n\n#\n\n#  LIBUSB_1_FOUND - system has libusb\n\n#  LIBUSB_1_INCLUDE_DIRS - the libusb include directory\n\n#  LIBUSB_1_LIBRARIES - Link these to use libusb\n\n#  LIBUSB_1_DEFINITIONS - Compiler switches required for using libusb\n\n#\n\n#  Adapted from cmake-modules Google Code project\n\n#\n\n#  Copyright (c) 2006 Andreas Schneider <mail@cynapses.org>\n\n#\n\n#  (Changes for libusb) Copyright (c) 2008 Kyle Machulis <kyle@nonpolynomial.com>\n\n#\n\n#  Point Cloud Library (PCL) - www.pointclouds.org\n\n#  Copyright (c) 2012, Willow Garage, Inc. (use of FindPackageHandleStandardArgs)\n\n#\n\n# Redistribution and use is allowed according to the terms of the New BSD license.\n\n#\n\n# CMake-Modules Project New BSD License\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice, this\n\n#   list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the name of the CMake-Modules Project nor the names of its\n\n#   contributors may be used to endorse or promote products derived from this\n\n#   software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n#  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# show the LIBUSB_1_INCLUDE_DIRS and LIBUSB_1_LIBRARIES variables only in the advanced view\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/dep_graph.cmake" : {
      "ObjectId" : "4cc62c48616998dab720714098f405bbd1c3ab4c",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Make a dependency graph dot file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#file(APPEND ${_dot_file}\n\n#    \"  \\\"test\\\" [style=\\\"filled\\\" fillcolor=\\\"#A3A27C\\\" shape=\\\"box\\\"];\\n \")\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/pcl_all_in_one_installer.cmake" : {
      "ObjectId" : "718993466b90098542cf65a22d5d551576b5f66a",
      "LastModified" : "2019-03-06T21:07:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/pcl_cpack.cmake" : {
      "ObjectId" : "a759b1935978336da394f563e7c28ad7bc99bcbd",
      "LastModified" : "2019-03-06T21:07:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Package creation using CPack\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n#find available package generators\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# RPM (disabled until RedHat/Fedora users/developers need this)\n\n#find_program(RPM_PROGRAM rpm)\n\n#if(EXISTS ${RPM_PROGRAM})\n\n#  list(APPEND CPACK_GENERATOR \"RPM\")\n\n#endif()\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# DEB\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# NSIS\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# force CPACK_PACKAGE_INSTALL_REGISTRY_KEY because of a known limitation in cmake/cpack to be fixed in next releases\n\n# http://public.kitware.com/Bug/view.php?id=9094\n\n# This is to allow a 32bit and a 64bit of PCL to get installed on one system\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# dpkg\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# By default, do not warn when built on machines using only VS Express:\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###############################################################################\n\n# Make the CPack input file.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Prepare the components list\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# add documentation\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# add PCLConfig\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# add 3rdParty libs\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 13
    },
    "cmake/pcl_find_boost.cmake" : {
      "ObjectId" : "638fcf1aa1e367a61c7850c23c8ab5b2940d0f5c",
      "LastModified" : "2019-03-06T21:07:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find and set Boost flags\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If we would like to compile against a dynamically linked Boost\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Disable the config mode of find_package(Boost)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Optional boost modules\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Required boost modules\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Obtain diagnostic information about Boost's automatic linking outputted\n\n# during compilation time.\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "cmake/pcl_find_cuda.cmake" : {
      "ObjectId" : "c92981bd48002540723b534fc23e61f01c26a453",
      "LastModified" : "2019-03-06T21:07:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find CUDA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Setting this to true brakes Visual Studio builds.\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# CUDA_ARCH_BIN is a space separated list of versions to include in output so-file. So you can set CUDA_ARCH_BIN = 10 11 12 13 20\n\n# Also user can specify virtual arch in parenthesis to limit instructions set,\n\n# for example CUDA_ARCH_BIN = 11(11) 12(11) 13(11) 20(11) 21(11) -> forces using only sm_11 instructions.\n\n# The CMake scripts interpret XX as XX (XX). This allows user to omit parenthesis.\n\n# Arch 21 is an exceptional case since it doesn't have own sm_21 instructions set.\n\n# So 21 = 21(21) is an invalid configuration and user has to explicitly force previous sm_20 instruction set via 21(20).\n\n# CUDA_ARCH_BIN adds support of only listed GPUs. As alternative CMake scripts also parse 'CUDA_ARCH_PTX' variable,\n\n# which is a list of intermediate PTX codes to include in final so-file. The PTX code can/will be JIT compiled for any current or future GPU.\n\n# To add support of older GPU for kinfu, I would embed PTX 11 and 12 into so-file. GPU with sm_13 will run PTX 12 code (no difference for kinfu)\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Find a complete list for CUDA compute capabilities at http://developer.nvidia.com/cuda-gpus\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#set(CUDA_ARCH_PTX \"1.1 1.2\" CACHE STRING \"Specify 'virtual' PTX arch to build PTX intermediate code for. Example: 1.0 1.2 or 10 12\")\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Guess this macros will be included in cmake distributive\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Prevent compilation issues between recent gcc versions and old CUDA versions\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "cmake/pcl_find_gl.cmake" : {
      "ObjectId" : "a59b03fc935d8329e428779a1cfefa2b0d7f73ac",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to Find OpenGL and GLUT silently\n\n# In addition sets two flags if the found versions are Apple frameworks\n\n# OPENGL_IS_A_FRAMEWORK\n\n# GLUT_IS_A_FRAMEWORK\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/pcl_find_sse.cmake" : {
      "ObjectId" : "e6604d3268fbe3648e4096006440abd9395555b8",
      "LastModified" : "2019-03-06T21:07:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Check for the presence of SSE and figure out the flags to use for it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test GCC/G++ and CLANG\n",
        "Line" : 8,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Unfortunately we need to check for SSE to enable \"-mfpmath=sse\" alongside\n\n# \"-march=native\". The reason for this is that by default, 32bit architectures\n\n# tend to use the x87 FPU (which has 80 bit internal precision), thus leading\n\n# to different results than 64bit architectures which are using SSE2 (64 bit internal\n\n# precision). One solution would be to use \"-ffloat-store\" on 32bit (see\n\n# http://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html), but that slows code down,\n\n# so the preferred solution is to try \"-mpfmath=sse\" first.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Setting -ffloat-store to alleviate 32bit vs 64bit discrepancies on non-SSE\n\n# platforms.\n",
        "Line" : 186,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 4
    },
    "cmake/pcl_options.cmake" : {
      "ObjectId" : "c2453f1b3b62268250f770a80951b1ef1763802f",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Options for building PCL.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build shared libraries by default.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  set(CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_SHARED_LIBRARY_SUFFIX})\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build with dynamic linking for Boost (advanced users)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build with dynamic linking for FLANN (advanced users)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build with dynamic linking for QHull (advanced users)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Precompile for a minimal set of point types instead of all.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Precompile for a minimal set of point types instead of all.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Enable or Disable the check for SSE optimizations\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Display timing information for each compiler instance on screen\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# MSVC extra optimization options. Might lead to increasingly larger compile/link times.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Project folders\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "cmake/pcl_pclconfig.cmake" : {
      "ObjectId" : "7e3b39208a8a495ed6a77fecc8b7c187050398dd",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# do not include test targets\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#libusb-1.0 case\n",
        "Line" : 48,
        "CharPositionInLine" : 60
      },
      "2" : {
        "Text" : "#look for subsystems\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#Boost modules\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/pcl_targets.cmake" : {
      "ObjectId" : "41eb63df3d9ed7df6906e4c9a8c271c5025ff90f",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Add an option to build a subsystem or not.\n\n# _var The name of the variable to store the option in.\n\n# _name The name of the option's target subsystem.\n\n# _desc The description of the subsystem.\n\n# _default The default value (TRUE or FALSE)\n\n# ARGV5 The reason for disabling if the default is FALSE.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Add an option to build a subsystem or not.\n\n# _var The name of the variable to store the option in.\n\n# _parent The name of the parent subsystem\n\n# _name The name of the option's target subsubsystem.\n\n# _desc The description of the subsubsystem.\n\n# _default The default value (TRUE or FALSE)\n\n# ARGV5 The reason for disabling if the default is FALSE.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# Make one subsystem depend on one or more other subsystems, and disable it if\n\n# they are not being built.\n\n# _var The cumulative build variable. This will be set to FALSE if the\n\n#   dependencies are not met.\n\n# _name The name of the subsystem.\n\n# ARGN The subsystems and external libraries to depend on.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n# Make one subsystem depend on one or more other subsystems, and disable it if\n\n# they are not being built.\n\n# _var The cumulative build variable. This will be set to FALSE if the\n\n#   dependencies are not met.\n\n# _parent The parent subsystem name.\n\n# _name The name of the subsubsystem.\n\n# ARGN The subsystems and external libraries to depend on.\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###############################################################################\n\n# Add a set of include files to install.\n\n# _component The part of PCL that the install files belong to.\n\n# _subdir The sub-directory for these include files.\n\n# ARGN The include files.\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###############################################################################\n\n# Add a library target.\n\n# _name The library name.\n\n# _component The part of PCL that this library belongs to.\n\n# ARGN The source files for the library.\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# must link explicitly against boost.\n",
        "Line" : 196,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# because delay load is enabled for openmp.dll\n",
        "Line" : 207,
        "CharPositionInLine" : 50
      },
      "8" : {
        "Text" : "###############################################################################\n\n# Add a cuda library target.\n\n# _name The library name.\n\n# _component The part of PCL that this library belongs to.\n\n# ARGN The source files for the library.\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# to overcome a limitation in cuda_add_library, we add manually PCLAPI_EXPORTS macro\n",
        "Line" : 230,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# must link explicitly against boost.\n",
        "Line" : 236,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "###############################################################################\n\n# Add an executable target.\n\n# _name The executable name.\n\n# _component The part of PCL that this library belongs to.\n\n# ARGN the source files for the library.\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# must link explicitly against boost.\n",
        "Line" : 258,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Some app targets report are defined with subsys other than apps\n\n# It's simpler check for tools and assume everythin else as an app\n",
        "Line" : 270,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "###############################################################################\n\n# Add an executable target as a bundle when available and required\n\n# _name The executable name.\n\n# _component The part of PCL that this library belongs to.\n\n# _bundle\n\n# ARGN the source files for the library.\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# must link explicitly against boost.\n",
        "Line" : 299,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Some app targets report are defined with subsys other than apps\n\n# It's simpler check for tools and assume everythin else as an app\n",
        "Line" : 311,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "###############################################################################\n\n# Add an executable target.\n\n# _name The executable name.\n\n# _component The part of PCL that this library belongs to.\n\n# ARGN the source files for the library.\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# must link explicitly against boost.\n",
        "Line" : 338,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# There's a single app.\n",
        "Line" : 346,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "###############################################################################\n\n# Add a test target.\n\n# _name The test name.\n\n# _exename The exe name.\n\n# ARGN :\n\n#    FILES the source files for the test\n\n#    ARGUMENTS Arguments for test executable\n\n#    LINK_WITH link test executable with libraries\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#target_link_libraries(${_exename} ${GTEST_BOTH_LIBRARIES} ${PCL_ADD_TEST_LINK_WITH})\n",
        "Line" : 371,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# GTest >= 1.5 requires pthread and CMake's 2.8.4 FindGTest is broken\n",
        "Line" : 377,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# must link explicitly against boost only on Windows\n",
        "Line" : 381,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "###############################################################################\n\n# Add an example target.\n\n# _name The example name.\n\n# ARGN :\n\n#    FILES the source files for the example\n\n#    LINK_WITH link example executable with libraries\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# add target to list of example targets created at the parent scope\n",
        "Line" : 409,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "###############################################################################\n\n# Add compile flags to a target (because CMake doesn't provide something so\n\n# common itself).\n\n# _name The target name.\n\n# _flags The new compile flags to be added, as a string.\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "###############################################################################\n\n# Add link flags to a target (because CMake doesn't provide something so\n\n# common itself).\n\n# _name The target name.\n\n# _flags The new link flags to be added, as a string.\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "###############################################################################\n\n# Make a pkg-config file for a library. Do not include general PCL stuff in the\n\n# arguments; they will be added automatically.\n\n# _name The library name. \"pcl_\" will be preprended to this.\n\n# COMPONENT The part of PCL that this pkg-config file belongs to.\n\n# DESC Description of the library.\n\n# PCL_DEPS External dependencies to pcl libs, as a list. (will get mangled to external pkg-config name)\n\n# EXT_DEPS External dependencies, as a list.\n\n# INT_DEPS Internal dependencies, as a list.\n\n# CFLAGS Compiler flags necessary to build with the library.\n\n# LIB_FLAGS Linker flags necessary to link to the library.\n\n# HEADER_ONLY Ensures that no -L or l flags will be created.\n",
        "Line" : 442,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "###############################################################################\n\n# PRIVATE\n",
        "Line" : 484,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "###############################################################################\n\n# Reset the subsystem status map.\n",
        "Line" : 487,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "###############################################################################\n\n# Register a subsystem.\n\n# _name Subsystem name.\n\n# _desc Description of the subsystem\n",
        "Line" : 509,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "###############################################################################\n\n# Register a subsubsystem.\n\n# _name Subsystem name.\n\n# _desc Description of the subsystem\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "###############################################################################\n\n# Set the status of a subsystem.\n\n# _name Subsystem name.\n\n# _status TRUE if being built, FALSE otherwise.\n\n# ARGN[0] Reason for not building.\n",
        "Line" : 533,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "###############################################################################\n\n# Set the status of a subsystem.\n\n# _name Subsystem name.\n\n# _status TRUE if being built, FALSE otherwise.\n\n# ARGN[0] Reason for not building.\n",
        "Line" : 548,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "###############################################################################\n\n# Get the status of a subsystem\n\n# _var Destination variable.\n\n# _name Name of the subsystem.\n",
        "Line" : 563,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "###############################################################################\n\n# Get the status of a subsystem\n\n# _var Destination variable.\n\n# _name Name of the subsystem.\n",
        "Line" : 571,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "###############################################################################\n\n# Set the hyperstatus of a subsystem and its dependee\n\n# _name Subsystem name.\n\n# _dependee Dependent subsystem.\n\n# _status AUTO_OFF to disable AUTO_ON to enable\n\n# ARGN[0] Reason for not building.\n",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "###############################################################################\n\n# Get the hyperstatus of a subsystem and its dependee\n\n# _name IN subsystem name.\n\n# _dependee IN dependent subsystem.\n\n# _var OUT hyperstatus\n\n# ARGN[0] Reason for not building.\n",
        "Line" : 592,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "###############################################################################\n\n# Set the hyperstatus of a subsystem and its dependee\n",
        "Line" : 612,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "###############################################################################\n\n# Set the include directory name of a subsystem.\n\n# _name Subsystem name.\n\n# _includedir Name of subdirectory for includes\n\n# ARGN[0] Reason for not building.\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "###############################################################################\n\n# Get the include directory name of a subsystem - return _name if not set\n\n# _var Destination variable.\n\n# _name Name of the subsystem.\n",
        "Line" : 627,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "###############################################################################\n\n# Write a report on the build/not-build status of the subsystems\n",
        "Line" : 638,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "##############################################################################\n\n# Collect subdirectories from dirname that contains filename and store them in\n\n#  varname.\n\n# WARNING If extra arguments are given then they are considered as exception\n\n# list and varname will contain subdirectories of dirname that contains\n\n# fielename but doesn't belong to exception list.\n\n# dirname IN parent directory\n\n# filename IN file name to look for in each subdirectory of parent directory\n\n# varname OUT list of subdirectories containing filename\n\n# exception_list OPTIONAL and contains list of subdirectories not to account\n",
        "Line" : 686,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "########################################################################################\n\n# Macro to disable subsystem dependies\n\n# _subsys IN subsystem name\n",
        "Line" : 734,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "########################################################################################\n\n# Macro to enable subsystem dependies\n\n# _subsys IN subsystem name\n",
        "Line" : 747,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "########################################################################################\n\n# Macro to build subsystem centric documentation\n\n# _subsys IN the name of the subsystem to generate documentation for\n",
        "Line" : 764,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "###############################################################################\n\n# Add a dependency for a grabber\n\n# _name The dependency name.\n\n# _description The description text to display when dependency is not found.\n\n# This macro adds on option named \"WITH_NAME\", where NAME is the capitalized\n\n# dependency name. The user may use this option to control whether the\n\n# corresponding grabber should be built or not. Also an attempt to find a\n\n# package with the given name is made. If it is not successful, then the\n\n# \"WITH_NAME\" option is coerced to FALSE.\n",
        "Line" : 800,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "###############################################################################\n\n# Set the dependencies for a specific test module on the provided variable\n\n# _var The variable to be filled with the dependencies\n\n# _module The module name\n",
        "Line" : 824,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 49
    },
    "cmake/pcl_utils.cmake" : {
      "ObjectId" : "d87d02da94a1015fd8c2b4df4aff0b1d65aa39c2",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Turn a list into a string, with each item separated by spaces.\n\n# _string Name of the destination variable.\n\n# _list List to stringify.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Filter a list by a pattern.\n\n# _list List to filter.\n\n# _pattern The regular expression to filter by. See the if(... MATCHES ...)\n\n#   expression in the CMake help.\n\n# _output The name of the destination variable.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# Prefix every item in a list.\n\n# _output The name of the destination variable.\n\n# _prefix The value to prepend.\n\n# _list List to prefix.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n# Remove vtk definitions\n\n# This is used for CUDA targets, because nvcc does not like VTK 6+ definitions\n\n# style.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###############################################################################\n\n# Pull the component parts out of the version number.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Detect if we're in a developlment version and generate pretty version string\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "###############################################################################\n\n# Get the operating system information. Generally, CMake does a good job of\n\n# this. Sometimes, though, it doesn't give enough information. This macro will\n\n# distinguish between the UNIX variants. Otherwise, use the CMake variables\n\n# such as WIN32 and APPLE and CYGWIN.\n\n# Sets OS_IS_64BIT if the operating system is 64-bit.\n\n# Sets LINUX if the operating system is Linux.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###############################################################################\n\n# Set the destination directories for installing stuff.\n\n# Sets LIB_INSTALL_DIR. Install libraries here.\n\n# Sets BIN_INSTALL_DIR. Install binaries here.\n\n# Sets INCLUDE_INSTALL_DIR. Install include files here, preferably in a\n\n# subdirectory named after the library in question (e.g.\n\n# \"registration/blorgle.h\")\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Android, don't put into subdir\n",
        "Line" : 101,
        "CharPositionInLine" : 42
      },
      "9" : {
        "Text" : "###############################################################################\n\n# This macro processes a list of arguments into separate lists based on\n\n# keywords found in the argument stream. For example:\n\n# BUILDBLAG (misc_arg INCLUDEDIRS /usr/include LIBDIRS /usr/local/lib\n\n#            LINKFLAGS -lthatawesomelib CFLAGS -DUSEAWESOMELIB SOURCES blag.c)\n\n# Any other args found at the start of the stream will go into the variable\n\n# specified in _other_args. Typically, you would take arguments to your macro\n\n# as normal, then pass ${ARGN} to this macro to parse the dynamic-length\n\n# arguments (so if ${_otherArgs} comes back non-empty, you've ignored something\n\n# or the user has passed in some arguments without a keyword).\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###############################################################################\n\n# Set a value in a map.\n\n# _map The map name.\n\n# _key The key name.\n\n# _value The value.\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###############################################################################\n\n# Set a value in a global, cached map.\n\n# _map The map name.\n\n# _key The key name.\n\n# _value The value.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "###############################################################################\n\n# Get a value from a map.\n\n# _dest The name of the variable to store the value in.\n\n# _map The map name.\n\n# _key The key name.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##########################################################################\n\n# This function were copied from boost-cmake project.                    #\n\n# The license terms is as follow                                         #\n\n##########################################################################\n\n# Copyright (C) 2007 Douglas Gregor <doug.gregor@gmail.com>              #\n\n# Copyright (C) 2007 Troy Straszheim                                     #\n\n#                                                                        #\n\n# Distributed under the Boost Software License, Version 1.0.             #\n\n# See accompanying file LICENSE_1_0.txt or copy at                       #\n\n#   http://www.boost.org/LICENSE_1_0.txt                                 #\n\n##########################################################################\n\n# Perform a reverse topological sort on the given LIST.\n\n#\n\n#   topological_sort(my_list \"MY_\" \"_EDGES\")\n\n#\n\n# LIST is the name of a variable containing a list of elements to be\n\n# sorted in reverse topological order. Each element in the list has a\n\n# set of outgoing edges (for example, those other list elements that\n\n# it depends on). In the resulting reverse topological ordering\n\n# (written back into the variable named LIST), an element will come\n\n# later in the list than any of the elements that can be reached by\n\n# following its outgoing edges and the outgoing edges of any vertices\n\n# they target, recursively. Thus, if the edges represent dependencies\n\n# on build targets, for example, the reverse topological ordering is\n\n# the order in which one would build those targets.\n\n#\n\n# For each element E in this list, the edges for E are contained in\n\n# the variable named ${PREFIX}${E}${SUFFIX}, where E is the\n\n# upper-cased version of the element in the list. If no such variable\n\n# exists, then it is assumed that there are no edges. For example, if\n\n# my_list contains a, b, and c, one could provide a dependency graph\n\n# using the following variables:\n\n#\n\n#     MY_A_EDGES     b\n\n#     MY_B_EDGES\n\n#     MY_C_EDGES     a b\n\n#\n\n#  With the involcation of topological_sort shown above and these\n\n#  variables, the resulting reverse topological ordering will be b, a,\n\n#  c.\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Clear the stack and output variable\n",
        "Line" : 229,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Loop over all of the vertices, starting the topological sort from\n\n# each one.\n",
        "Line" : 234,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# If we haven't already processed this vertex, start a depth-first\n\n# search from where.\n",
        "Line" : 239,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Push this vertex onto the stack with all of its outgoing edges\n",
        "Line" : 242,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# We've now seen this vertex\n",
        "Line" : 247,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "# While the depth-first search stack is not empty\n",
        "Line" : 250,
        "CharPositionInLine" : 12
      },
      "20" : {
        "Text" : "# Remove the vertex and its remaining out-edges from the top\n\n# of the stack\n",
        "Line" : 253,
        "CharPositionInLine" : 16
      },
      "21" : {
        "Text" : "# Get the source vertex and the list of out-edges\n",
        "Line" : 258,
        "CharPositionInLine" : 16
      },
      "22" : {
        "Text" : "# While there are still out-edges remaining\n",
        "Line" : 263,
        "CharPositionInLine" : 16
      },
      "23" : {
        "Text" : "# Pull off the first outgoing edge\n",
        "Line" : 266,
        "CharPositionInLine" : 20
      },
      "24" : {
        "Text" : "# We have not seen the target before, so we will traverse\n\n# its outgoing edges before coming back to our\n\n# source. This is the key to the depth-first traversal.\n",
        "Line" : 272,
        "CharPositionInLine" : 24
      },
      "25" : {
        "Text" : "# We've now seen this vertex\n",
        "Line" : 276,
        "CharPositionInLine" : 24
      },
      "26" : {
        "Text" : "# Push the remaining edges for the current vertex onto the\n\n# stack\n",
        "Line" : 279,
        "CharPositionInLine" : 24
      },
      "27" : {
        "Text" : "# Setup the new source and outgoing edges\n",
        "Line" : 285,
        "CharPositionInLine" : 24
      },
      "28" : {
        "Text" : "# We have finished all of the outgoing edges for\n\n# SOURCE; add it to the resulting list.\n",
        "Line" : 295,
        "CharPositionInLine" : 16
      },
      "29" : {
        "Text" : "# Check the length of the stack\n",
        "Line" : 299,
        "CharPositionInLine" : 16
      },
      "30" : {
        "Text" : "# Somewhere a # slaps into the list so remove it\n",
        "Line" : 304,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "##\n\n# Swaps 2 elements at _pos1 and _pos2 of a list\n\n# _list [IN/OUT] a list\n\n# _pos1 [IN] position of the first element\n\n# _pos2 [IN] position of the second element\n\n# TODO ensure _pos1 and _pos2 are in range\n\n##\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# sort pos1 and pos2 such us pos1 < pos2\n",
        "Line" : 320,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "##\n\n# Fills a list with _length x _value\n\n# _list the list to fill\n\n# _length the desired list size\n\n# _value the filler\n\n##\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##\n\n# Set the value at element a known position of a list\n\n# _list the list to manipulate\n\n# _position position of the element to set\n\n# _value new element value\n\n##\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "###\n\n# Sorts list B the same way list A was sorted by fetching the indices\n\n# _list [IN] original list A\n\n# _sorted_list [IN] list A after sorting\n\n# _to_sort_relative [IN/OUT] list B\n\n##\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# ensure sizes are equal for the three lists else fail gracefully\n",
        "Line" : 385,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# unset the temporary list to avoid surprises (I had some them and were hard to find)\n",
        "Line" : 399,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# fill it with a dummy value\n",
        "Line" : 401,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "#iterate over the original list\n",
        "Line" : 403,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# get the element position in the sorted list\n",
        "Line" : 406,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# get the corresponding element from the list to sort\n",
        "Line" : 408,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# in the temporary list replace the dummy value by the corresponding\n",
        "Line" : 410,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# increment the counter\n",
        "Line" : 412,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# swap the temporary list and list to sort\n",
        "Line" : 415,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "###############################################################################\n\n# Find a Python module\n\n# From http://www.cmake.org/pipermail/cmake/2011-January/041666.html\n",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# A module's location is usually a directory, but for binary modules\n\n# it's a .so file.\n",
        "Line" : 429,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "###############################################################################\n\n# Checks if the current generator is an IDE\n\n# _out The boolean result\n",
        "Line" : 445,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Current known pool of generators\n",
        "Line" : 449,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# Visual Studio has multiple year releases and Win64 variants\n",
        "Line" : 457,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 50
    },
    "cmake/pcl_verbosity.cmake" : {
      "ObjectId" : "a045638c699dbb1f099ad942a3f923993fdeeb7d",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set PCL default verbosity level from cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# User input default info\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  message(WARNING \"Unknown verbosity level ${PCL_VERBOSITY_LEVEL}. Set to Info!\")\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "common/CMakeLists.txt" : {
      "ObjectId" : "3b07520108c523f3778d9be4c63c3b752f163961",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install include files\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cuda/CMakeLists.txt" : {
      "ObjectId" : "72cbd38b772aff7077b47eaae7321153a3617173",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cuda/apps/CMakeLists.txt" : {
      "ObjectId" : "422a868f9a652f127d2cfc6859868cb116ad398d",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---[ Point Cloud Library - pcl/cuda/apps\n\n# Find VTK\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cuda/common/CMakeLists.txt" : {
      "ObjectId" : "b5775afe577e449558ff79802b270ebcf2a56161",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## ---[ Point Cloud Library - pcl/cuda/common\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(LIB_NAME pcl_${SUBSYS_NAME})\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#PCL_MAKE_PKGCONFIG(${LIB_NAME} ${SUBSYS_NAME} \"${SUBSYS_DESC}\"\n\n#    \"${SUBSYS_DEPS}\" \"${EXT_DEPS}\" \"\" \"\" \"\")\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install include files\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cuda/features/CMakeLists.txt" : {
      "ObjectId" : "e896b2cd75989787fc91dbd4439198fbe0ee1c63",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---[ Point Cloud Library - pcl/cuda/io\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(EXT_DEPS CUDA)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install include files\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cuda/io/CMakeLists.txt" : {
      "ObjectId" : "956843482fe1db774a95f4994e0cc3adef62e436",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---[ Point Cloud Library - pcl/cuda/io\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(EXT_DEPS CUDA)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install include files\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cuda/sample_consensus/CMakeLists.txt" : {
      "ObjectId" : "782225b688eb6da484751074c2bc62fd8b070296",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---[ Point Cloud Library - pcl/cuda/io\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(EXT_DEPS CUDA)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install include files\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cuda/segmentation/CMakeLists.txt" : {
      "ObjectId" : "342e052fdbff4508376040a698c1e06b948fb598",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---[ Point Cloud Library - pcl/cuda/io\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(EXT_DEPS CUDA)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install include files\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "e12ce409ffd7357e072a3aa1ae53a2f4c566b95e",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/advanced/CMakeLists.txt" : {
      "ObjectId" : "57d14ff64b96137b2f080e2fdb65ce51fed86e62",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/doxygen/CMakeLists.txt" : {
      "ObjectId" : "831bbe8e4d124a0603e59efb27b92eb66951884a",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/CMakeLists.txt" : {
      "ObjectId" : "5282c37a50f1aa3635ed5dcb2a80ab4c3f4cda38",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/CMakeLists.txt" : {
      "ObjectId" : "3adb9765d7eecce87cdf24299e47b2f05dd5cadf",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#feature_evaluation\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#narf_descriptor_visualization\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Additional/Complex tutorials presented at PCL events\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "doc/tutorials/content/sources/alignment_prerejective/CMakeLists.txt" : {
      "ObjectId" : "5ed7e82e71244f4314228e4c410e614d40b72b89",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/bare_earth/CMakeLists.txt" : {
      "ObjectId" : "2652140a5fbab898499e6f8365e68883d0636462",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/bspline_fitting/CMakeLists.txt" : {
      "ObjectId" : "332515885ea8189b2fe8cbd65b7e3b277c709cb6",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/cloud_viewer/CMakeLists.txt" : {
      "ObjectId" : "284f06be9f7fd5f0640bc57201c72154c036d76e",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/cluster_extraction/CMakeLists.txt" : {
      "ObjectId" : "da3071f461c29e6730552779da909d527918c2bc",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/concatenate_clouds/CMakeLists.txt" : {
      "ObjectId" : "8f55a284f99914ba783038b625dbf263cfdcb65b",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/concatenate_fields/CMakeLists.txt" : {
      "ObjectId" : "970adacf803e5986dbc827f04a1b87d43a89cd4d",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/concatenate_points/CMakeLists.txt" : {
      "ObjectId" : "2044f0e366b9ea135600b58a9c106328a6242b44",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/concave_hull_2d/CMakeLists.txt" : {
      "ObjectId" : "37af0cb257438c24ad3a27d69323417b9637882e",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/conditional_euclidean_clustering/CMakeLists.txt" : {
      "ObjectId" : "453fc946c2b1ac7e740c34167246e40fe991b323",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/conditional_removal/CMakeLists.txt" : {
      "ObjectId" : "f1f78e0cc07f6825066c419fd30531f95dffb0f3",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/convex_hull_2d/CMakeLists.txt" : {
      "ObjectId" : "cf149d85f63757dea927448e47d20748bc3e2351",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/correspondence_grouping/CMakeLists.txt" : {
      "ObjectId" : "d48f2497b24da7b5c213ac76edd43155bb04d9f8",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/cylinder_segmentation/CMakeLists.txt" : {
      "ObjectId" : "8eb2b12c11777da999c40181ebb93eb7553fe5c2",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/davidsdk/CMakeLists.txt" : {
      "ObjectId" : "2336dcb2520668f2401f44463a2e416803ef27a6",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/don_segmentation/CMakeLists.txt" : {
      "ObjectId" : "4a356689f99042fa65ae3aaf41aa59b5a6f2189f",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/ensenso_cameras/CMakeLists.txt" : {
      "ObjectId" : "e510ea867ec48b8dc3d0e68bee586f5c9edfd04e",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/extract_indices/CMakeLists.txt" : {
      "ObjectId" : "7c75f4ee1902f5ca811ef4eb51b2738e638036b4",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/global_hypothesis_verification/CMakeLists.txt" : {
      "ObjectId" : "10d5b006ea73c02c9161934f542e8b8bfb44892f",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Pcl\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/tutorials/content/sources/gpu/people_detect/CMakeLists.txt" : {
      "ObjectId" : "9062ce8791c476b13b7355a939669030e1dfebdd",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Searching CUDA\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Include the FindCUDA script\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doc/tutorials/content/sources/greedy_projection/CMakeLists.txt" : {
      "ObjectId" : "d2689fb1cc4ad1b72fbe925fad76cf341a97fd5d",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/ground_based_rgbd_people_detection/CMakeLists.txt" : {
      "ObjectId" : "175f6452e329c24550f3e3c1ac8432614a678d2e",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/iccv2011/CMakeLists.txt" : {
      "ObjectId" : "a800af089097bbd3d2983d39323f03673c41e5b3",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_executable (iccv2011_test_surface src/test_surface.cpp)\n\n#target_link_libraries (iccv2011_test_surface ${PCL_LIBRARIES})\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/tutorials/content/sources/implicit_shape_model/CMakeLists.txt" : {
      "ObjectId" : "b19cf301d5532c0e511e4be27a4a992ba0474080",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/interactive_icp/CMakeLists.txt" : {
      "ObjectId" : "53fac37c019ed6521e14b72f107e854b7b13959a",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/iros2011/CMakeLists.txt" : {
      "ObjectId" : "6698ad68db159b618078fb6a93566c221297d9e0",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/iterative_closest_point/CMakeLists.txt" : {
      "ObjectId" : "97533be931273fbb27c79f88a3a5bcde5f3d2f1e",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/kdtree_search/CMakeLists.txt" : {
      "ObjectId" : "1874786492bed0a224e586a7f2d84821d09fef54",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/matrix_transform/CMakeLists.txt" : {
      "ObjectId" : "ab2394da3a7db3c87ca3907d8ab430bddcfb423d",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/min_cut_segmentation/CMakeLists.txt" : {
      "ObjectId" : "e3d26ae2758337203a201db57488615f48eba77a",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/model_outlier_removal/CMakeLists.txt" : {
      "ObjectId" : "de01df66ac83c8206b9ad3bb7e58dbd1dcbff255",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/moment_of_inertia/CMakeLists.txt" : {
      "ObjectId" : "817ee201e5221cbfefa5bf24160eb037398b0439",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/narf_descriptor_visualization/CMakeLists.txt" : {
      "ObjectId" : "69cc07cb89ae7253c20908f19a8739c6deb5f4b8",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/narf_feature_extraction/CMakeLists.txt" : {
      "ObjectId" : "a83a289a7662eb6851c449d29b1600e84c00e43a",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/narf_keypoint_extraction/CMakeLists.txt" : {
      "ObjectId" : "df0c982368270cbe9a724f7a912a16e01230efb5",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/normal_distributions_transform/CMakeLists.txt" : {
      "ObjectId" : "076c56aef96586f1fba8357150819dd1b9d80fb3",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/normal_estimation_using_integral_images/CMakeLists.txt" : {
      "ObjectId" : "c6b8fdc31c1d5ab405cebc1148bd94b16c0dd4a7",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/octree_change_detection/CMakeLists.txt" : {
      "ObjectId" : "dae72ab292af56542c3f57dd365bb226f448e371",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/octree_search/CMakeLists.txt" : {
      "ObjectId" : "26d1661c031844e57197f1218e140e550f3211e0",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/openni_grabber/CMakeLists.txt" : {
      "ObjectId" : "0a67ac5cfa3380e596ff73cb12b81b5a94986a2b",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/openni_narf_keypoint_extraction/CMakeLists.txt" : {
      "ObjectId" : "c513801657b97ab7ddba535c4efda196504a8709",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/openni_range_image_visualization/CMakeLists.txt" : {
      "ObjectId" : "ee9d2936e3e32eea6070de8d4f610d97f60bb4c9",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/pairwise_incremental_registration/CMakeLists.txt" : {
      "ObjectId" : "09662178184a25143601c41495788c7ba1a0fee5",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/passthrough/CMakeLists.txt" : {
      "ObjectId" : "b6f4e5d1cdf6fee985b5c5e136e75d9e5a51f299",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/pcd_read/CMakeLists.txt" : {
      "ObjectId" : "9bf29bfd24ef3e52e62913d6891645a906e646ff",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/pcd_write/CMakeLists.txt" : {
      "ObjectId" : "6476e96f0b473c4b08f2e7fcecc6219002555fc3",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/pcl_painter2D/CMakeLists.txt" : {
      "ObjectId" : "a531c964c576c17a6719de6a18e3f18134caa975",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/pcl_plotter/CMakeLists.txt" : {
      "ObjectId" : "420694d9fa8d6e48b952a1e917117fbe3bc46f12",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/pcl_visualizer/CMakeLists.txt" : {
      "ObjectId" : "461f6b0761defadf781563074a33e1aaa78bc6c2",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/planar_segmentation/CMakeLists.txt" : {
      "ObjectId" : "3450cbc49b306508a532527ec6a85bb1a9e1aaee",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/point_cloud_compression/CMakeLists.txt" : {
      "ObjectId" : "61a6e8a445aeb534abcd24e11d841bcad9966d45",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/project_inliers/CMakeLists.txt" : {
      "ObjectId" : "5fce83216e8e4a9f5e528c2ff8247f5dbcdad30e",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/qt_colorize_cloud/CMakeLists.txt" : {
      "ObjectId" : "b2f1b8a4cc8cdf42943e49b71f5c076180a9d7ae",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# init_qt: Let's do the CMake job for us\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For meta object compiler\n\n# Resource files\n\n# UI files\n",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# Find includes in corresponding build directories\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find the QtWidgets library\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Fix a compilation bug under ubuntu 16.04 (Xenial)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "doc/tutorials/content/sources/qt_colorize_cloud/pcl_visualizer.pro" : {
      "ObjectId" : "4108d56a289a85044a1a435d19d79899c4726c98",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-11-11T14:00:00\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/tutorials/content/sources/qt_visualizer/CMakeLists.txt" : {
      "ObjectId" : "7c4d7d4c0e1c43df0a06e630271f836f5b36f9f3",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# init_qt: Let's do the CMake job for us\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For meta object compiler\n\n# Resource files\n\n# UI files\n",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# Find includes in corresponding build directories\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find the QtWidgets library\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Fix a compilation bug under ubuntu 16.04 (Xenial)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "doc/tutorials/content/sources/qt_visualizer/pcl_visualizer.pro" : {
      "ObjectId" : "3ca33271874f4eb50a86a080ebc5ac0e0d43b744",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-05-01T14:24:33\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/tutorials/content/sources/radius_outlier_removal/CMakeLists.txt" : {
      "ObjectId" : "018599b7b5791aefbf1dabb5ffc6ee6633e41fc3",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/random_sample_consensus/CMakeLists.txt" : {
      "ObjectId" : "fddc4c61cab1bdd24170a08864ee3f0bad289fd2",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/range_image_border_extraction/CMakeLists.txt" : {
      "ObjectId" : "2e783227bcab7245e6e3f118d561f38674626973",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/range_image_creation/CMakeLists.txt" : {
      "ObjectId" : "a10bb574401692c9db526da7029190b369ba908d",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/range_image_visualization/CMakeLists.txt" : {
      "ObjectId" : "65230aa5820928ce10d485070a6af779e11de91f",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/region_growing_rgb_segmentation/CMakeLists.txt" : {
      "ObjectId" : "fb4544eabe087a9b92df48babe6c30d32d847e2b",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/region_growing_segmentation/CMakeLists.txt" : {
      "ObjectId" : "855ab516c1067cd392e2e114f71fd9bf638eca7d",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/registration_api/CMakeLists.txt" : {
      "ObjectId" : "845c1657bb51d5832621db4412cf3fed9a01a84f",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_executable (example1 example1.cpp)\n\n#target_link_libraries (example1 ${PCL_LIBRARIES})\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_executable (example3 example3.cpp)\n\n#target_link_libraries (example3 ${PCL_LIBRARIES})\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doc/tutorials/content/sources/remove_outliers/CMakeLists.txt" : {
      "ObjectId" : "19c951d3ef9ea918a17816e0e41c96f58cec16b5",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/resampling/CMakeLists.txt" : {
      "ObjectId" : "f2a48476e1a62e1c2fc4402ce7a1c4e845e5dfa4",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/rops_feature/CMakeLists.txt" : {
      "ObjectId" : "478955697811e1bb0f8e7780d7214dec337975ec",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/statistical_removal/CMakeLists.txt" : {
      "ObjectId" : "3bf9b093409894b5d9f3c60b32dfda99bea90f34",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/stick_segmentation/CMakeLists.txt" : {
      "ObjectId" : "72a1a3da7f56dbb8c0e000183742f8d56ccb22db",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/supervoxel_clustering/CMakeLists.txt" : {
      "ObjectId" : "ec50f3ffcc3342b08da7c24e3948a8998b47dd77",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/template_alignment/CMakeLists.txt" : {
      "ObjectId" : "7642bfb2aa1360cd737b121f8e9b72b6e6d732fc",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/tracking/CMakeLists.txt" : {
      "ObjectId" : "6edbeaedd3702a8eaaa92eeaa72935ffbe60f616",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/vfh_recognition/CMakeLists.txt" : {
      "ObjectId" : "82c3f690e3be4ce10e2aba8a7f314515f5181e20",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/tutorials/content/sources/voxel_grid/CMakeLists.txt" : {
      "ObjectId" : "6273daaabfd866ee500b27f352103300dcd00a9e",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "020f628c06362fbaa4d6adc43d6a4aab8063be8f",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this variable will filled with all targets added with pcl_add_example\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This looks for all examples/XXX/CMakeLists.txt\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Extract only relevant XXX and append it to PCL_EXAMPLES_SUBDIRS\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# PATH of get_filename_component has problem dealing with windows shared folders \"//xxx.xxx.xxx.xxx/folder\"\n\n# Check here for the discussion: http://www.pcl-developers.org/Small-hack-to-get-filename-component-td5706691.html\n\n# Modified by Yangyan Li(yangyan.lee@gmail.com)\n\n# get_filename_component (dir ${subdir} PATH)\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Add the subdirectories\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "examples/common/CMakeLists.txt" : {
      "ObjectId" : "1bce9da82de79fbaad086ca2de39741e7133e198",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/features/CMakeLists.txt" : {
      "ObjectId" : "7b1c895940ec4f97b6079d9e0b2d909fa5b1e19e",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/filters/CMakeLists.txt" : {
      "ObjectId" : "91ea9cd79ad41fc28c7198114ccea20f8d0088b8",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/geometry/CMakeLists.txt" : {
      "ObjectId" : "3b3aa5185b8669fd5a0a3f800d87369d6d259e32",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/keypoints/CMakeLists.txt" : {
      "ObjectId" : "133bfed82af790d99956fff6e3fe70c75c764b1f",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find VTK\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/outofcore/CMakeLists.txt" : {
      "ObjectId" : "aed932e9b5023ad7b248df75ee1e53f1427af328",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find VTK\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/segmentation/CMakeLists.txt" : {
      "ObjectId" : "5e672fd821351ea1fb303949cad7634ed96d6a44",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find VTK\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/stereo/CMakeLists.txt" : {
      "ObjectId" : "518d104942bd68e846fc9e725a344920434b874a",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find VTK\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/surface/CMakeLists.txt" : {
      "ObjectId" : "ec9f030d61044161d768226e51afd6cc030d32a1",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find VTK\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "features/CMakeLists.txt" : {
      "ObjectId" : "0b57d3df9ba9741444c29863ceffd4ea80a985f9",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Workaround to avoid hitting the MSVC 4GB linker memory limit when building pcl_features.\n\n# Disable whole program optimization (/GL) and link-time code generation (/LTCG).\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Install headers\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "filters/CMakeLists.txt" : {
      "ObjectId" : "af80a41e73203af8fa2f5811e22f6ba0fe6163f5",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install include files\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "geometry/CMakeLists.txt" : {
      "ObjectId" : "350fa7619e7ff121f64dcdb85ed983feec015026",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install include files\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "gpu/CMakeLists.txt" : {
      "ObjectId" : "289fd71db24b03b04a7ac1a53de688a2b62bb0b2",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "gpu/containers/CMakeLists.txt" : {
      "ObjectId" : "4679524b958b1da5c37f31312130e6e9d4ab78fb",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(EXT_DEPS CUDA)\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install include files\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "gpu/features/CMakeLists.txt" : {
      "ObjectId" : "ce35aabb1651d037988efb3f41f14f406b19d084",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(EXT_DEPS CUDA)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install include files\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "gpu/features/test/CMakeLists.txt" : {
      "ObjectId" : "7d81b67e7998d87f89b833d1b70f1cdf28470fe7",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "gpu/kinfu/CMakeLists.txt" : {
      "ObjectId" : "f13445ae986361eb1a5c4b5b5aa63f14746d36b5",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OpenNI found?\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(EXT_DEPS CUDA)\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install include files\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "gpu/kinfu/test/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "gpu/kinfu/tools/CMakeLists.txt" : {
      "ObjectId" : "95349b66c63ccfc6b8c88c6710477c7469710c80",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## KINECT FUSION\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## RECORD TSDFVOLUME\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "gpu/kinfu_large_scale/CMakeLists.txt" : {
      "ObjectId" : "d0cb57ff7d3128658750bc35031721de58e52a34",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OpenNI found?\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(EXT_DEPS CUDA)\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install include files\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "gpu/kinfu_large_scale/test/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "gpu/kinfu_large_scale/tools/CMakeLists.txt" : {
      "ObjectId" : "9b15d9ac2654b9775695a5ab853566be3d8f86e9",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## STANDALONE TEXTURE MAPPING\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## KINECT FUSION\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## STANDALONE MARCHING CUBES\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## RECORD MAPS_RGB\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "gpu/octree/CMakeLists.txt" : {
      "ObjectId" : "1c6f2aec13f06fe625e8d9af7029314732889cc7",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(EXT_DEPS CUDA)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install include files\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "gpu/octree/test/CMakeLists.txt" : {
      "ObjectId" : "54646f81bfb98ca58006140da87e5ddce35241da",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "gpu/people/CMakeLists.txt" : {
      "ObjectId" : "43fef11530dae6cc69740218c64fc2745c70c0b5",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#find NPP\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Label_skeleton\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# install include files\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "gpu/people/tools/CMakeLists.txt" : {
      "ObjectId" : "57f12101cf76e9c349cc72f36c55bc7537ee7206",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#PCL_ADD_EXECUTABLE(\"${the_target}\" \"${SUBSYS_NAME}\" people_tracking.cpp)\n\n#target_link_libraries(\"${the_target}\" pcl_common pcl_filters pcl_kdtree pcl_segmentation pcl_kdtree pcl_gpu_people pcl_filters pcl_io pcl_visualization)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#PCL_ADD_EXECUTABLE(people_pcd_folder \"${SUBSYS_NAME}\" people_pcd_folder.cpp)\n\n#target_link_libraries (people_pcd_folder pcl_common pcl_filters pcl_kdtree pcl_segmentation pcl_kdtree pcl_gpu_people pcl_filters pcl_io pcl_visualization ${Boost_LIBRARIES})\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#PCL_ADD_EXECUTABLE(people_pcd_person \"${SUBSYS_NAME}\" people_pcd_person.cpp)\n\n#target_link_libraries (people_pcd_person pcl_common pcl_filters pcl_kdtree pcl_segmentation pcl_kdtree pcl_gpu_people pcl_filters pcl_io pcl_visualization)\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "gpu/segmentation/CMakeLists.txt" : {
      "ObjectId" : "43320240af5027aea36621ec5bd6c577c3a064e8",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install include files\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "gpu/surface/CMakeLists.txt" : {
      "ObjectId" : "274ea2b370357f337aeb5d0096833ed5f111c54a",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(EXT_DEPS CUDA)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install include files\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "gpu/surface/test/CMakeLists.txt" : {
      "ObjectId" : "83f912d9310c1d50b9fa9c91862dc020f6f26786",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#PCL_ADD_TEST(a_gpu_surface_test ${the_test_target} FILES ${test_src} LINK_WITH pcl_io pcl_gpu_containers pcl_gpu_surface pcl_visualization pcl_surface pcl_octree pcl_kdtree pcl_search)\n\n#add_dependencies(${the_test_target} pcl_io pcl_gpu_containes pcl_gpu_surface pcl_visualization)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "gpu/tracking/CMakeLists.txt" : {
      "ObjectId" : "9bec4da2cc413738a69a0b60d83f027dbf73d2db",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(EXT_DEPS CUDA)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install include files\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "gpu/utils/CMakeLists.txt" : {
      "ObjectId" : "270baf27e49c78a4105d1aa1af98574cf925ca5a",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(EXT_DEPS CUDA)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install include files\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "io/CMakeLists.txt" : {
      "ObjectId" : "2047afaa0644261597024bd5ad679c789dabdeaa",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy OpenNI2 redist directory to bin. Needed for driver modules. Only tested on Windows.\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# VTK is mandatory for OBJ/PLY/STL input/output\n",
        "Line" : 133,
        "CharPositionInLine" : 32
      },
      "2" : {
        "Text" : "# Indicates that we can rely on VTK to be present\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# contains only depreciation note\n",
        "Line" : 281,
        "CharPositionInLine" : 46
      },
      "4" : {
        "Text" : "# Install include files\n",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "io/tools/CMakeLists.txt" : {
      "ObjectId" : "afc68bfdff61ee090e7c2cf9f7a08209da3c76a7",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#libply inherited tools\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "io/tools/ply/CMakeLists.txt" : {
      "ObjectId" : "ec15773f3026ffa0abf3cb28719fc55707237d7e",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "kdtree/CMakeLists.txt" : {
      "ObjectId" : "9b478439bd472a2ff4e4c130e2ae90234cc440d0",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install include files\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "keypoints/CMakeLists.txt" : {
      "ObjectId" : "e4d39d28295e52602c532c3db6cb693b4471fe4f",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install include files\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ml/CMakeLists.txt" : {
      "ObjectId" : "bed4533025e1971cac2c7050845404ddd94557f6",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install include files\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "octree/CMakeLists.txt" : {
      "ObjectId" : "9b3c6c256fb5a3b649d6586baf921f5967e99ea3",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install include files\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "outofcore/CMakeLists.txt" : {
      "ObjectId" : "ffc74ed4e2268fa61bcabb45b609081c26f96927",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#PCL_ADD_SSE_FLAGS(\"${LIB_NAME}\")\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install include files\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "outofcore/tools/CMakeLists.txt" : {
      "ObjectId" : "859aa0f967cc7b22b02dce125d66e55ffc54dca2",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# pcl_outofcore_process\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# pcl_outofcore_viewer\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "people/CMakeLists.txt" : {
      "ObjectId" : "8817dd47168f2095bb17ffe1fc58a8f8909b4a51",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install include files\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SET_TARGET_PROPERTIES(\"${LIB_NAME}\" PROPERTIES LINKER_LANGUAGE CXX)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "recognition/CMakeLists.txt" : {
      "ObjectId" : "6292f61866d472f5517c2d2c23a6782e51ad5ce3",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install include files\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "registration/CMakeLists.txt" : {
      "ObjectId" : "3f560e146414307df174b3ca03bf3481b4b54ec0",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#src/pairwise_graph_registration.cpp\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Install include files\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "sample_consensus/CMakeLists.txt" : {
      "ObjectId" : "9b73137482ac887948f5cb0f6006880ecee2672b",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install include files\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "search/CMakeLists.txt" : {
      "ObjectId" : "cae79b398aa4d140ed2c120c133ef8cc287b8c42",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "segmentation/CMakeLists.txt" : {
      "ObjectId" : "008fc0011657a0391453afb1dcfba1af0cfa42e1",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install include files\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "simulation/CMakeLists.txt" : {
      "ObjectId" : "eb85b81a6a9cd71c091d286dc9bf797eb4cab2cf",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install include files\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "simulation/tools/CMakeLists.txt" : {
      "ObjectId" : "08b16ddeef604ee26f3a0fdfec85176bd7075671",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "stereo/CMakeLists.txt" : {
      "ObjectId" : "d3d21bf5506d75135892cdc9f2b3a73c5509af4c",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install include files\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "surface/CMakeLists.txt" : {
      "ObjectId" : "0d6bba4c3cc6a31e140332909526d1bf8687f7b7",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install include files\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "surface/src/3rdparty/opennurbs/openNURBS.cmake" : {
      "ObjectId" : "51ca678d01827c54b690859221ebfc358a64c7fa",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#include/pcl/${SUBSYS_NAME}/3rdparty/opennurbs/opennurbs_gl.h\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#src/3rdparty/opennurbs/opennurbs_gl.cpp\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "surface/src/on_nurbs/on_nurbs.cmake" : {
      "ObjectId" : "20d4269d284fa837c0bd99b1fc7602c4de04694a",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/2d/CMakeLists.txt" : {
      "ObjectId" : "5791ec27fcf7a3c74d45cca7675336f61da9127d",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "f5ebd6753fb9b0427dd3b5162baaf04e730dd916",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/common/CMakeLists.txt" : {
      "ObjectId" : "6e7c69f2ed83fb97a2774ea4fcc060492d854dbd",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Args: name, executable_name\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#PCL_ADD_TEST(common_spring test_spring FILES test_spring.cpp LINK_WITH pcl_gtest pcl_common)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#PCL_ADD_TEST(common_convolution test_convolution FILES test_convolution.cpp LINK_WITH pcl_gtest pcl_common)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/features/CMakeLists.txt" : {
      "ObjectId" : "9775415a1d2ae9a9819c5bbbf054d536b4fe012f",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# module does not depend on these\n",
        "Line" : 4,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 1
    },
    "test/filters/CMakeLists.txt" : {
      "ObjectId" : "4e0ca5532e12e707de1fd1f369f9f430013b7a4b",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/geometry/CMakeLists.txt" : {
      "ObjectId" : "c0520e942a01659625270127b42de24c48cb77f2",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/io/CMakeLists.txt" : {
      "ObjectId" : "1062f19f55ec603b8bf628f25fbb7399409ff021",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Uses VTK readers to verify\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/kdtree/CMakeLists.txt" : {
      "ObjectId" : "b8391022d779f082d55adf7f46a37f58f906831e",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# io is not a mandatory dependency in kdtree\n",
        "Line" : 4,
        "CharPositionInLine" : 17
      },
      "CommentCount" : 1
    },
    "test/keypoints/CMakeLists.txt" : {
      "ObjectId" : "2cb8b42c44f10093bd599d2c0ab55c152bbe2213",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# module does not depend on these\n",
        "Line" : 4,
        "CharPositionInLine" : 17
      },
      "CommentCount" : 1
    },
    "test/octree/CMakeLists.txt" : {
      "ObjectId" : "65599bdf5d769dac2429ec48f377b65323e15be2",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/outofcore/CMakeLists.txt" : {
      "ObjectId" : "4c0504d02cbfd958d7b72dbd4f12f6fbdc86e96c",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# module does not depend on these\n",
        "Line" : 4,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 1
    },
    "test/people/CMakeLists.txt" : {
      "ObjectId" : "e9c4268700a4a8e6456718da0f4b3a105fdefc7f",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# module does not depend on these\n",
        "Line" : 4,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 1
    },
    "test/recognition/CMakeLists.txt" : {
      "ObjectId" : "d7c68afcccc4f685c5f3bb28fee7c7eb1ae382bb",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# module does not depend on these\n",
        "Line" : 4,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 1
    },
    "test/registration/CMakeLists.txt" : {
      "ObjectId" : "760e07f283a1cedd3a09f3b20a46b8d85ec51c1d",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# module does not depend on these\n",
        "Line" : 4,
        "CharPositionInLine" : 17
      },
      "CommentCount" : 1
    },
    "test/sample_consensus/CMakeLists.txt" : {
      "ObjectId" : "455d5d54d153f555946ac2b47157b93a12c07b35",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/search/CMakeLists.txt" : {
      "ObjectId" : "86daad88dc6edef42b1d8adcee4cbb22f2cb6f8b",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/segmentation/CMakeLists.txt" : {
      "ObjectId" : "53dabcab3c2d0928982d31dc037bc2777bfb9a1b",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# module does not depend on these\n",
        "Line" : 4,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 1
    },
    "test/surface/CMakeLists.txt" : {
      "ObjectId" : "55ac7faa94f905950a69d847520eb5ec1958d08a",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# module does not depend on these\n",
        "Line" : 4,
        "CharPositionInLine" : 51
      },
      "CommentCount" : 1
    },
    "test/visualization/CMakeLists.txt" : {
      "ObjectId" : "cb9d3d480b9797d73cfdd804c9231d2b73a6a5cb",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# module does not depend on these\n",
        "Line" : 4,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 1
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "064d5b06056d8a54dff088a77feaf7c13b4cf8a7",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# to be filled with all targets the tools subsystem\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#PCL_ADD_EXECUTABLE(pcl_openni_viewer_simple ${SUBSYS_NAME} openni_viewer_simple.cpp)\n\n#target_link_libraries(pcl_openni_viewer_simple pcl_common pcl_io pcl_kdtree pcl_visualization)\n",
        "Line" : 283,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "tracking/CMakeLists.txt" : {
      "ObjectId" : "9ff6c470a22902214cee8a6d4bcb7f4c356562b4",
      "LastModified" : "2019-04-11T16:08:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install include files\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "visualization/CMakeLists.txt" : {
      "ObjectId" : "ceaa85b64dace19a2037196a0eebe88a816fa0bc",
      "LastModified" : "2019-04-08T07:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# on apple, a workaround is used for the cocoa render window interactor\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# apple workaround (continued)\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install include files\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "visualization/test/CMakeLists.txt" : {
      "ObjectId" : "43cf1dbdfa994f3a93699dc843850b69f121f7b6",
      "LastModified" : "2018-12-20T13:37:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_executable(demo_vis test.cpp)\n\n#target_link_libraries(demo_vis pcl_common pcl_io pcl_kdtree pcl_visualization)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Depends on filters\n\n#add_executable(test_geometry test_geometry.cpp)\n\n#target_link_libraries(test_geometry pcl_common pcl_features pcl_filters pcl_io pcl_kdtree pcl_visualization)\n\n#add_test(vis_test_geometry test_geometry)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 197,
    "QMAKE" : 2
  },
  "ElapsedTime" : 4846
}