{
  "Repository" : "28034343",
  "Revision" : "HEAD",
  "ObjectId" : "f599b26817c532b6722631c4863d33ef20ba8059",
  "CommitTime" : "2019-02-03T19:25:22Z",
  "Files" : {
    "Core/llvm/CMakeLists.txt" : {
      "ObjectId" : "6dc2000045c7af57832e2c6e01619ad5300bff55",
      "LastModified" : "2018-05-28T12:46:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The minimum Mac OS X version needed by BugVM\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#should be passed from build.sh, just here to prevent warning\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# This was generated using 'llvm-config --libs core bitreader bitwriter irreader ipo arm x86 aarch64 debuginfo linker option instrumentation objcarcopts'\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Required clang libs\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# With the GNU linker library order is important and some libraries have\n\n# to be repeated in order to resolve all symbols properly.\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# This was generated using 'llvm-config --ldflags'\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Core/llvm/llvm/share/llvm/cmake/AddLLVM.cmake" : {
      "ObjectId" : "c8f1083be1f6b4e556db81cb91291451b1ec62a7",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# LLVM_REQUIRES_EH is an internal flag that individual\n\n# targets can use to force EH\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# LLVM_REQUIRES_RTTI is an internal flag that individual\n\n# targets can use to force RTTI\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Assume that;\n\n#   - LLVM_COMPILE_FLAGS is list.\n\n#   - PROPERTY COMPILE_FLAGS is string.\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Update target props, since all sources are C++.\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Gold and BFD ld require a version script rather than a plain list.\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# FIXME: Don't write the \"local:\" line on OpenBSD.\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Convert ${export_file} to native format (backslashes) for \"type\"\n\n# Does not use file(TO_NATIVE_PATH) as it doesn't create a native\n\n# path but a build-system specific format (see CMake bug\n\n# http://public.kitware.com/Bug/print_bug_page.php?bug_id=5939 )\n",
        "Line" : 92,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Force re-linking when the exports file changes. Actually, it\n\n# forces recompilation of the source file. The LINK_DEPENDS target\n\n# property only works for makefile-based generators.\n\n# FIXME: This is not safe because this will create the same target\n\n# ${native_export_file} in several different file:\n\n# - One where we emitted ${target_name}_exports\n\n# - One where we emitted the build command for the following object.\n\n# set_property(SOURCE ${first_source_file} APPEND PROPERTY\n\n#   OBJECT_DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/${native_export_file})\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Add dependency to *_exports later -- CMake issue 14747\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Pass -O3 to the linker. This enabled different optimizations on different\n\n# linkers.\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# With gold gc-sections is always safe.\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Note that there is a bug with -Wl,--icf=safe so it is not safe\n\n# to enable. See https://sourceware.org/bugzilla/show_bug.cgi?id=17704.\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# ld64's implementation of -dead_strip breaks tools that use plugins.\n",
        "Line" : 171,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Object files are compiled with -ffunction-data-sections.\n\n# Versions of bfd ld < 2.23.1 have a bug in --gc-sections that breaks\n\n# tools that use plugins. Always pass --gc-sections once we require\n\n# a newer linker.\n",
        "Line" : 175,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Set each output directory according to ${CMAKE_CONFIGURATION_TYPES}.\n\n# Note: Don't set variables CMAKE_*_OUTPUT_DIRECTORY any more,\n\n# or a certain builder, for eaxample, msbuild.exe, would be confused.\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Do nothing if *_OUTPUT_INTDIR is empty.\n",
        "Line" : 189,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# moddir -- corresponding to LIBRARY_OUTPUT_DIRECTORY.\n\n# It affects output of add_library(MODULE).\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# DLL platform\n",
        "Line" : 197,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# llvm_add_library(name sources...\n\n#   SHARED;STATIC\n\n#     STATIC by default w/o BUILD_SHARED_LIBS.\n\n#     SHARED by default w/  BUILD_SHARED_LIBS.\n\n#   MODULE\n\n#     Target ${name} might not be created on unsupported platforms.\n\n#     Check with \"if(TARGET ${name})\".\n\n#   OUTPUT_NAME name\n\n#     Corresponds to OUTPUT_NAME in target properties.\n\n#   DEPENDS targets...\n\n#     Same semantics as add_dependencies().\n\n#   LINK_COMPONENTS components...\n\n#     Same as the variable LLVM_LINK_COMPONENTS.\n\n#   LINK_LIBS lib_targets...\n\n#     Same semantics as target_link_libraries().\n\n#   ADDITIONAL_HEADERS\n\n#     May specify header files for IDE generators.\n\n#   )\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Pass through ADDITIONAL_HEADERS.\n",
        "Line" : 245,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Generate objlib\n",
        "Line" : 271,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Generate an obj library for both targets.\n",
        "Line" : 273,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Do add_dependencies(obj) later due to CMake issue 14747.\n",
        "Line" : 281,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# static\n",
        "Line" : 288,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# DEPENDS has been appended to LLVM_COMMON_LIBS.\n",
        "Line" : 293,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# objlib\n",
        "Line" : 296,
        "CharPositionInLine" : 27
      },
      "26" : {
        "Text" : "# FIXME: Add name_static to anywhere in TARGET ${name}'s PROPERTY.\n",
        "Line" : 300,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Do not add -Dname_EXPORTS to the command-line when building files in this\n\n# target. Doing so is actively harmful for the modules build because it\n\n# creates extra module variants, and not useful because we don't use these\n\n# macros.\n",
        "Line" : 342,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Add the explicit dependency information for this library.\n\n#\n\n# It would be nice to verify that we have the dependencies for this library\n\n# name, but using get_property(... SET) doesn't suffice to determine if a\n\n# property has been set to an empty value.\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Link libs w/o keywords, assuming PUBLIC.\n",
        "Line" : 366,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# We can use PRIVATE since SO knows its dependent libs.\n",
        "Line" : 379,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Add dependencies also to objlibs.\n\n# CMake issue 14747 --  add_dependencies() might be ignored to objlib's user.\n",
        "Line" : 389,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Add empty \"phony\" target\n",
        "Line" : 423,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# DLL platform\n",
        "Line" : 431,
        "CharPositionInLine" : 10
      },
      "34" : {
        "Text" : "# Do not add -Dname_EXPORTS to the command-line when building files in this\n\n# target. Doing so is actively harmful for the modules build because it\n\n# creates extra module variants, and not useful because we don't use these\n\n# macros.\n",
        "Line" : 459,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Add external project that may want to be built as part of llvm such as Clang,\n\n# lld, and Polly. This adds two options. One for the source directory of the\n\n# project, which defaults to ${CMAKE_CURRENT_SOURCE_DIR}/${name}. Another to\n\n# enable or disable building it with everything else.\n\n# Additional parameter can be specified as the name of directory.\n",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Generic support for adding a unittest.\n",
        "Line" : 583,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Visual Studio 2012 only supports up to 8 template parameters in\n\n# std::tr1::tuple by default, but gtest requires 10\n",
        "Line" : 589,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# gtest needs it for raw_ostream.\n",
        "Line" : 612,
        "CharPositionInLine" : 16
      },
      "39" : {
        "Text" : "# FIXME: This should depend only on the libraries Go needs.\n",
        "Line" : 626,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# This function provides an automatic way to 'configure'-like generate a file\n\n# based on a set of common and custom variables, specifically targeting the\n\n# variables needed for the 'lit.site.cfg' files. This function bundles the\n\n# common variables that any Lit instance is likely to need, and custom\n\n# variables can be passed in.\n",
        "Line" : 647,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Configuration-time: See Unit/lit.site.cfg.in\n",
        "Line" : 660,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# They below might not be the build tree but provided binary tree.\n",
        "Line" : 667,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# SHLIBDIR points the build tree.\n",
        "Line" : 673,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# FIXME: \"ENABLE_SHARED\" doesn't make sense, since it is used just for\n\n# plugins. We may rename it.\n",
        "Line" : 677,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# A raw function to create a lit target. This is used to implement the testuite\n\n# management functions.\n",
        "Line" : 701,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Tests should be excluded from \"Build Solution\".\n",
        "Line" : 732,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# A function to add a set of lit test suites to be driven through 'check-*' targets.\n",
        "Line" : 736,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# EXCLUDE_FROM_ALL excludes the test ${target} out of check-all.\n",
        "Line" : 740,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# Register the testsuites, params and depends for the global check rule.\n",
        "Line" : 742,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# Produce a specific suffixed check rule.\n",
        "Line" : 749,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 51
    },
    "Core/llvm/llvm/share/llvm/cmake/AddLLVMDefinitions.cmake" : {
      "ObjectId" : "33ac9731db5db73a9813f2da571980b0e7cc407c",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# There is no clear way of keeping track of compiler command-line\n\n# options chosen via `add_definitions', so we need our own method for\n\n# using it on tools/llvm-config/CMakeLists.txt.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Beware that there is no implementation of remove_llvm_definitions.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We don't want no semicolons on LLVM_DEFINITIONS:\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Core/llvm/llvm/share/llvm/cmake/AddOCaml.cmake" : {
      "ObjectId" : "4babaf68ef9683a5a0ec27f5db41846c84b94001",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build rules for the OCaml language.\n\n# Assumes FindOCaml is used.\n\n# http://ocaml.org/\n\n#\n\n# Example usage:\n\n#\n\n# add_ocaml_library(pkg_a OCAML mod_a OCAMLDEP pkg_b C mod_a_stubs PKG ctypes LLVM core)\n\n#\n\n# Unnamed parameters:\n\n#\n\n#   * Library name.\n\n#\n\n# Named parameters:\n\n#\n\n# OCAML     OCaml module names. Imply presence of a corresponding .ml and .mli files.\n\n# OCAMLDEP  Names of libraries this library depends on.\n\n# C         C stub sources. Imply presence of a corresponding .c file.\n\n# CFLAGS    Additional arguments passed when compiling C stubs.\n\n# PKG       Names of ocamlfind packages this library depends on.\n\n# LLVM      Names of LLVM libraries this library depends on.\n\n# NOCOPY    Do not automatically copy sources (.c, .ml, .mli) from the source directory,\n\n#           e.g. if they are generated.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Core/llvm/llvm/share/llvm/cmake/AddSphinxTarget.cmake" : {
      "ObjectId" : "045dc23ca2a83517c135fdf0a9f64318290b1992",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Handy function for creating the different Sphinx targets.\n\n#\n\n# ``builder`` should be one of the supported builders used by\n\n# the sphinx-build command.\n\n#\n\n# ``project`` should be the project name\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Quiet: no output other than errors and warnings.\n",
        "Line" : 22,
        "CharPositionInLine" : 31
      },
      "2" : {
        "Text" : "# Treat warnings as errors if requested\n",
        "Line" : 23,
        "CharPositionInLine" : 62
      },
      "3" : {
        "Text" : "# Source\n",
        "Line" : 24,
        "CharPositionInLine" : 58
      },
      "4" : {
        "Text" : "# Output\n",
        "Line" : 25,
        "CharPositionInLine" : 50
      },
      "5" : {
        "Text" : "# When \"clean\" target is run, remove the Sphinx build directory\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# We need to remove ${SPHINX_DOC_TREE_DIR} when make clean is run\n\n# but we should only add this path once\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Handle installation\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# FIXME: We might not ship all the tools that these man pages describe\n",
        "Line" : 51,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Slash indicates contents of\n",
        "Line" : 52,
        "CharPositionInLine" : 49
      },
      "CommentCount" : 10
    },
    "Core/llvm/llvm/share/llvm/cmake/ChooseMSVCCRT.cmake" : {
      "ObjectId" : "0e6e1aa55254e51480ba489e54c545c7a6accc25",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The macro choose_msvc_crt() takes a list of possible\n\n# C runtimes to choose from, in the form of compiler flags,\n\n# to present to the user. (MTd for /MTd, etc)\n\n#\n\n# The macro is invoked at the end of the file.\n\n#\n\n# CMake already sets CRT flags in the CMAKE_CXX_FLAGS_* and\n\n# CMAKE_C_FLAGS_* variables by default. To let the user\n\n# override that for each build type:\n\n# 1. Detect which CRT is already selected, and reflect this in\n\n# LLVM_USE_CRT_* so the user can have a better idea of what\n\n# changes they're making.\n\n# 2. Replace the flags in both variables with the new flag via a regex.\n\n# 3. set() the variables back into the cache so the changes\n\n# are user-visible.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Helper macros: ###\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Trying to match the beginning or end of the string with stuff\n\n# like [ ^]+ didn't work, so use a bunch of parentheses instead.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Find the selected-by-CMake CRT for each build type, if any.\n\n# Strip off the leading slash and any whitespace.\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Replaces or adds a flag to a variable.\n\n# Expects 'flag' to be padded with spaces.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make sure this change gets reflected in the cache/gui.\n\n# CMake requires the docstring parameter whenever set() touches the cache,\n\n# so get the existing docstring and re-use that.\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# List of valid CRTs for MSVC\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Core/llvm/llvm/share/llvm/cmake/CrossCompile.cmake" : {
      "ObjectId" : "400381cda48d054608cd48a3def0881c5a0514e9",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Core/llvm/llvm/share/llvm/cmake/FindOCaml.cmake" : {
      "ObjectId" : "8eba2127df1b361d9b70728d9f09a85753eb3286",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake find_package() module for the OCaml language.\n\n# Assumes ocamlfind will be used for compilation.\n\n# http://ocaml.org/\n\n#\n\n# Example usage:\n\n#\n\n# find_package(OCaml)\n\n#\n\n# If successful, the following variables will be defined:\n\n# OCAMLFIND\n\n# OCAML_VERSION\n\n# OCAML_STDLIB_PATH\n\n# HAVE_OCAMLOPT\n\n#\n\n# Also provides find_ocamlfind_package() macro.\n\n#\n\n# Example usage:\n\n#\n\n# find_ocamlfind_package(ctypes)\n\n#\n\n# In any case, the following variables are defined:\n\n#\n\n# HAVE_OCAML_${pkg}\n\n#\n\n# If successful, the following variables will be defined:\n\n#\n\n# OCAML_${pkg}_VERSION\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If it's optional and the constraint is not satisfied, pretend\n\n# it wasn't found.\n",
        "Line" : 87,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "Core/llvm/llvm/share/llvm/cmake/FindSphinx.cmake" : {
      "ObjectId" : "9d252e8b70aef4abf8a8da21eb0248bea53137a6",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake find_package() Module for Sphinx documentation generator\n\n# http://sphinx-doc.org/\n\n#\n\n# Example usage:\n\n#\n\n# find_package(Sphinx)\n\n#\n\n# If successful the following variables will be defined\n\n# SPHINX_FOUND\n\n# SPHINX_EXECUTABLE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle REQUIRED and QUIET arguments\n\n# this will also set SPHINX_FOUND to true if SPHINX_EXECUTABLE exists\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Provide options for controlling different types of output\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Core/llvm/llvm/share/llvm/cmake/GetSVN.cmake" : {
      "ObjectId" : "d512bd292cf43f3f875e5063b5725e1fc6597f89",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake project that writes Subversion revision information to a header.\n\n#\n\n# Input variables:\n\n#   FIRST_SOURCE_DIR  - First source directory\n\n#   FIRST_NAME        - The macro prefix for the first repository's info\n\n#   SECOND_SOURCE_DIR - Second source directory (opt)\n\n#   SECOND_NAME       - The macro prefix for the second repository's info (opt)\n\n#   HEADER_FILE       - The header file to write\n\n#\n\n# The output header will contain macros FIRST_REPOSITORY and FIRST_REVISION,\n\n# and SECOND_REPOSITORY and SECOND_REVISION if requested, where \"FIRST\" and\n\n# \"SECOND\" are substituted with the names specified in the input variables.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Chop off cmake/modules/GetSVN.cmake \n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Handle strange terminals\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If svn is a bat file, find_program(Subversion) doesn't find it.\n\n# Explicitly search for that here; Subversion_SVN_EXECUTABLE will override\n\n# the find_program call in FindSubversion.cmake.\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# FindSubversion does not work with symlinks. See PR 8437\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Copy the file only if it has changed.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Core/llvm/llvm/share/llvm/cmake/HandleLLVMOptions.cmake" : {
      "ObjectId" : "2ee0dd5b1b73414497ed20ca9d899eaf4660cb41",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This CMake module is responsible for interpreting the user defined LLVM_\n\n# options and executing the appropriate CMake commands to realize the users'\n\n# selections.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is commonly needed so make sure it's defined before we include anything\n\n# else.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Also test that we aren't using too old of a version of libstdc++ with the\n\n# Clang compiler. This is tricky as there is no real way to check the\n\n# version of libstdc++ directly. Instead we test for a known bug in\n\n# libstdc++4.6 that is fixed in libstdc++4.7.\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# MSVC doesn't like _DEBUG on release builds. See PR 4379.\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# On non-Debug builds cmake automatically defines NDEBUG, so we\n\n# explicitly undefine it:\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Also remove /D NDEBUG to avoid MSVC warnings about conflicting defines.\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# We use *.dylib rather than *.so on darwin.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Darwin-specific linker flags for loadable modules.\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Xcode has -mdynamic-no-pic on by default, which overrides -fPIC. I don't\n\n# know how to disable this, so just force ENABLE_PIC off for now.\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# On Windows all code is PIC. MinGW warns if -fPIC is used.\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# MinGW warns if -fvisibility-inlines-hidden is used.\n",
        "Line" : 151,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# TODO: support other platforms and toolchains.\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# For Xcode enable several build settings that correspond to\n\n# many warnings that are on by default in Clang but are\n\n# not enabled for historical reasons.  For versions of Xcode\n\n# that do not support these options they will simply\n\n# be ignored.\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# On Win32 using MS tools, provide an option to set the number of parallel jobs\n\n# to use.\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# set stack reserved size to ~10MB\n\n# CMake previously automatically set this value for MSVC builds, but the\n\n# behavior was changed in CMake 2.8.11 (Issue 12437) to use the MSVC default\n\n# value (1 MB) which is not enough for us in tasks such as parsing recursive\n\n# C++ templates in Clang.\n",
        "Line" : 218,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Add definitions that make MSVC much less annoying.\n",
        "Line" : 230,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# For some reason MS wants to deprecate a bunch of standard functions...\n",
        "Line" : 232,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Disabled warnings.\n",
        "Line" : 240,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Suppress 'unary minus operator applied to unsigned type, result still unsigned'\n\n# Suppress 'qualifier applied to function type has no meaning; ignored'\n\n# Suppress ''argument' : conversion from 'type1' to 'type2', possible loss of data'\n\n# Suppress ''var' : definition from the for loop is ignored; the definition from the enclosing scope is used'\n\n# Suppress ''var' : conversion from 'size_t' to 'type', possible loss of data'\n\n# Suppress ''declaration' : no matching operator delete found; memory will not be freed if initialization throws an exception'\n\n# Suppress 'behavior change: an object of POD type constructed with an initializer of the form () will be default-initialized'\n\n# Suppress 'new behavior: elements of array 'array' will be default initialized'\n\n# Suppress ''this' : used in base member initializer list'\n\n# Suppress 'declaration of 'var' hides local variable'\n\n# Suppress 'declaration of 'var' hides function parameter'\n\n# Suppress 'declaration of 'var' hides class member'\n\n# Suppress 'declaration of 'var' hides global declaration'\n\n# Suppress ''identifier' : decorated name length exceeded, name was truncated'\n\n# Suppress ''derived class' : destructor could not be generated because a base class destructor is inaccessible'\n\n# Suppress 'function' : destructor never returns, potential memory leak\n\n# Suppress ''type' : forcing value to bool 'true' or 'false' (performance warning)'\n",
        "Line" : 241,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "# Promoted warnings.\n",
        "Line" : 259,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Promote 'enumerator in switch of enum is not handled' to level 1 warning.\n",
        "Line" : 260,
        "CharPositionInLine" : 12
      },
      "21" : {
        "Text" : "# Promoted warnings to errors.\n",
        "Line" : 262,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Promote 'nonstandard extension used : class rvalue used as lvalue' to error.\n",
        "Line" : 263,
        "CharPositionInLine" : 12
      },
      "23" : {
        "Text" : "# Enable warnings\n",
        "Line" : 266,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# No MSVC equivalent available\n",
        "Line" : 270,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# Turn off missing field initializer warnings for gcc to avoid noise from\n\n# false positives with empty {}. Turn them on otherwise (they're off by\n\n# default for clang).\n",
        "Line" : 281,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Check if -Wnon-virtual-dtor warns even though the class is marked final.\n\n# If it does, don't add it. So it won't be added on clang 3.4 and older.\n\n# This also catches cases when -Wnon-virtual-dtor isn't supported by\n\n# the compiler at all.\n",
        "Line" : 298,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Check if -Wcomment is OK with an // comment ending with '\\' if the next\n\n# line is also a // comment.\n",
        "Line" : 312,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# MinGW and Cygwin are a bit stricter and lack things like\n\n# 'strdup', 'stricmp', etc in c++11 mode.\n",
        "Line" : 334,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# Check that we can build code with modules enabled, and that repeatedly\n\n# including <cassert> still manages to respect NDEBUG properly.\n",
        "Line" : 347,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Append -fno-omit-frame-pointer and turn on debug info to get better\n\n# stack traces.\n",
        "Line" : 366,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Use -O1 even in debug mode, otherwise sanitizers slowdown is too large.\n",
        "Line" : 373,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Turn on sanitizers if necessary.\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Turn on -gsplit-dwarf if requested\n",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# clang doesn't print colored diagnostics when invoked from Ninja\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Add flags for add_dead_strip().\n\n# FIXME: With MSVS, consider compiling with /Gy and linking with /OPT:REF?\n\n# But MinSizeRel seems to add that automatically, so maybe disable these\n\n# flags instead if LLVM_NO_DEAD_STRIP is set.\n",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Don't add -ffunction-section if it can be disabled with -fno-function-sections.\n\n# Doing so will break sanitizers.\n",
        "Line" : 430,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "# Prune --out-implib from executables. It doesn't make sense even\n\n# with --export-all-symbols.\n",
        "Line" : 439,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Remove flags here, for exceptions and RTTI.\n\n# Each target property or source property should be responsible to control\n\n# them.\n\n# CL.EXE complains to override flags like \"/GR /GR-\".\n",
        "Line" : 448,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Provide public options to globally control RTTI and EH\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Plugin support\n\n# FIXME: Make this configurable.\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 41
    },
    "Core/llvm/llvm/share/llvm/cmake/HandleLLVMStdlib.cmake" : {
      "ObjectId" : "47bb6cddc8e513c8d9b065f8caba51bbe5a08972",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This CMake module is responsible for setting the standard library to libc++\n\n# if the user has requested it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Core/llvm/llvm/share/llvm/cmake/LLVM-Config.cmake" : {
      "ObjectId" : "b24c12989fad88c866781e846f26f0756191b1ee",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sets variable `return_var' to ON if `library' corresponds to a\n\n# LLVM supported target. To OFF if it doesn't.\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Use plain form for legacy user.\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# This is Deprecated\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is a variant intended for the final user:\n\n# Map LINK_COMPONENTS to actual libnames.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Inside LLVM itself available libs are in a global property.\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Expand some keywords:\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Translate symbolic component names to real libraries:\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# add codegen, asmprinter, asmparser, disassembler\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# already processed\n",
        "Line" : 120,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# same case as in `native'.\n",
        "Line" : 130,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# already processed\n",
        "Line" : 132,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Canonize the component name:\n",
        "Line" : 136,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# The component is unknown. Maybe is an omitted target?\n",
        "Line" : 140,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Perform a post-order traversal of the dependency graph.\n\n# This duplicates the algorithm used by llvm-config, originally\n\n# in tools/llvm-config/llvm-config.cpp, function ComputeLibsForComponents.\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Expand dependencies while topologically sorting the list of libraries:\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Return just the libraries included in this build:\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    },
    "Core/llvm/llvm/share/llvm/cmake/LLVMConfig.cmake" : {
      "ObjectId" : "49e3a0128e206d687a5877b1b19760c80f46bc27",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file provides information and services to the final user.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compute the installation prefix from this LLVMConfig.cmake file location.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Core/llvm/llvm/share/llvm/cmake/LLVMConfigVersion.cmake" : {
      "ObjectId" : "1216c55772d08cfbb2efa123d5a7e155c61c6f3d",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# LLVM is API-compatible only with matching major.minor versions\n\n# and patch versions not less than that requested.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Core/llvm/llvm/share/llvm/cmake/LLVMExports-release.cmake" : {
      "ObjectId" : "eb3d5d1719f63afed6ff9dfdfc227b0d23a33f63",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------\n\n# Generated CMake target import file for configuration \"Release\".\n\n#----------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Commands may need to know the format version.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Import target \"LLVMSupport\" for configuration \"Release\"\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Import target \"LLVMTableGen\" for configuration \"Release\"\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Import target \"llvm-tblgen\" for configuration \"Release\"\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Import target \"LLVMCore\" for configuration \"Release\"\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Import target \"LLVMIRReader\" for configuration \"Release\"\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Import target \"LLVMCodeGen\" for configuration \"Release\"\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Import target \"LLVMSelectionDAG\" for configuration \"Release\"\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Import target \"LLVMAsmPrinter\" for configuration \"Release\"\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Import target \"LLVMBitReader\" for configuration \"Release\"\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Import target \"LLVMBitWriter\" for configuration \"Release\"\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Import target \"LLVMTransformUtils\" for configuration \"Release\"\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Import target \"LLVMInstrumentation\" for configuration \"Release\"\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Import target \"LLVMInstCombine\" for configuration \"Release\"\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Import target \"LLVMScalarOpts\" for configuration \"Release\"\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Import target \"LLVMipo\" for configuration \"Release\"\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Import target \"LLVMVectorize\" for configuration \"Release\"\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Import target \"LLVMHello\" for configuration \"Release\"\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Import target \"LLVMObjCARCOpts\" for configuration \"Release\"\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Import target \"LLVMLinker\" for configuration \"Release\"\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Import target \"LLVMAnalysis\" for configuration \"Release\"\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Import target \"LLVMipa\" for configuration \"Release\"\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Import target \"LLVMLTO\" for configuration \"Release\"\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Import target \"LLVMMC\" for configuration \"Release\"\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Import target \"LLVMMCParser\" for configuration \"Release\"\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Import target \"LLVMMCDisassembler\" for configuration \"Release\"\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Import target \"LLVMObject\" for configuration \"Release\"\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Import target \"LLVMOption\" for configuration \"Release\"\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Import target \"LLVMDebugInfo\" for configuration \"Release\"\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Import target \"LLVMExecutionEngine\" for configuration \"Release\"\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Import target \"LLVMInterpreter\" for configuration \"Release\"\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Import target \"LLVMMCJIT\" for configuration \"Release\"\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Import target \"LLVMRuntimeDyld\" for configuration \"Release\"\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Import target \"LLVMTarget\" for configuration \"Release\"\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Import target \"LLVMX86CodeGen\" for configuration \"Release\"\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Import target \"LLVMX86AsmParser\" for configuration \"Release\"\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Import target \"LLVMX86Disassembler\" for configuration \"Release\"\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Import target \"LLVMX86AsmPrinter\" for configuration \"Release\"\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Import target \"LLVMX86Desc\" for configuration \"Release\"\n",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Import target \"LLVMX86Info\" for configuration \"Release\"\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Import target \"LLVMX86Utils\" for configuration \"Release\"\n",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Import target \"LLVMARMCodeGen\" for configuration \"Release\"\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Import target \"LLVMARMInfo\" for configuration \"Release\"\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Import target \"LLVMARMAsmParser\" for configuration \"Release\"\n",
        "Line" : 427,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Import target \"LLVMARMDisassembler\" for configuration \"Release\"\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Import target \"LLVMARMAsmPrinter\" for configuration \"Release\"\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Import target \"LLVMARMDesc\" for configuration \"Release\"\n",
        "Line" : 457,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Import target \"LLVMAArch64CodeGen\" for configuration \"Release\"\n",
        "Line" : 467,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Import target \"LLVMAArch64Info\" for configuration \"Release\"\n",
        "Line" : 477,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Import target \"LLVMAArch64AsmParser\" for configuration \"Release\"\n",
        "Line" : 487,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Import target \"LLVMAArch64Disassembler\" for configuration \"Release\"\n",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Import target \"LLVMAArch64AsmPrinter\" for configuration \"Release\"\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Import target \"LLVMAArch64Desc\" for configuration \"Release\"\n",
        "Line" : 517,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Import target \"LLVMAArch64Utils\" for configuration \"Release\"\n",
        "Line" : 527,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Import target \"LLVMAsmParser\" for configuration \"Release\"\n",
        "Line" : 537,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Import target \"LLVMLineEditor\" for configuration \"Release\"\n",
        "Line" : 547,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Import target \"LLVMProfileData\" for configuration \"Release\"\n",
        "Line" : 557,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Import target \"gtest\" for configuration \"Release\"\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Import target \"gtest_main\" for configuration \"Release\"\n",
        "Line" : 577,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Import target \"llvm-config\" for configuration \"Release\"\n",
        "Line" : 587,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Import target \"opt\" for configuration \"Release\"\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Import target \"llvm-as\" for configuration \"Release\"\n",
        "Line" : 605,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Import target \"llvm-dis\" for configuration \"Release\"\n",
        "Line" : 614,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Import target \"llvm-mc\" for configuration \"Release\"\n",
        "Line" : 623,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Import target \"llc\" for configuration \"Release\"\n",
        "Line" : 632,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Import target \"llvm-ar\" for configuration \"Release\"\n",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Import target \"llvm-nm\" for configuration \"Release\"\n",
        "Line" : 650,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Import target \"llvm-size\" for configuration \"Release\"\n",
        "Line" : 659,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Import target \"llvm-cov\" for configuration \"Release\"\n",
        "Line" : 668,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Import target \"llvm-profdata\" for configuration \"Release\"\n",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Import target \"llvm-link\" for configuration \"Release\"\n",
        "Line" : 686,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Import target \"lli\" for configuration \"Release\"\n",
        "Line" : 695,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Import target \"llvm-extract\" for configuration \"Release\"\n",
        "Line" : 704,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Import target \"llvm-diff\" for configuration \"Release\"\n",
        "Line" : 713,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Import target \"macho-dump\" for configuration \"Release\"\n",
        "Line" : 722,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Import target \"llvm-objdump\" for configuration \"Release\"\n",
        "Line" : 731,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Import target \"llvm-readobj\" for configuration \"Release\"\n",
        "Line" : 740,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Import target \"llvm-rtdyld\" for configuration \"Release\"\n",
        "Line" : 749,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Import target \"llvm-dwarfdump\" for configuration \"Release\"\n",
        "Line" : 758,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Import target \"llvm-dsymutil\" for configuration \"Release\"\n",
        "Line" : 767,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Import target \"llvm-vtabledump\" for configuration \"Release\"\n",
        "Line" : 776,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Import target \"bugpoint\" for configuration \"Release\"\n",
        "Line" : 785,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Import target \"BugpointPasses\" for configuration \"Release\"\n",
        "Line" : 794,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Import target \"llvm-bcanalyzer\" for configuration \"Release\"\n",
        "Line" : 804,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Import target \"llvm-stress\" for configuration \"Release\"\n",
        "Line" : 813,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Import target \"llvm-mcmarkup\" for configuration \"Release\"\n",
        "Line" : 822,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Import target \"verify-uselistorder\" for configuration \"Release\"\n",
        "Line" : 831,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# Import target \"llvm-symbolizer\" for configuration \"Release\"\n",
        "Line" : 840,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# Import target \"llvm-c-test\" for configuration \"Release\"\n",
        "Line" : 849,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# Import target \"obj2yaml\" for configuration \"Release\"\n",
        "Line" : 858,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# Import target \"yaml2obj\" for configuration \"Release\"\n",
        "Line" : 867,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# Import target \"LTO\" for configuration \"Release\"\n",
        "Line" : 876,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# Import target \"llvm-lto\" for configuration \"Release\"\n",
        "Line" : 886,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# Commands beyond this point should not need to know the version.\n",
        "Line" : 895,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 95
    },
    "Core/llvm/llvm/share/llvm/cmake/LLVMExports.cmake" : {
      "ObjectId" : "55019167ef57f005e9e9a6b3a8a63e646cc605fa",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generated by CMake 3.3.2\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------\n\n# Generated CMake target import file.\n\n#----------------------------------------------------------------\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Commands may need to know the format version.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Protect against multiple inclusion, which would fail when already imported targets are added once more.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compute the installation prefix relative to this file.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create imported target LLVMSupport\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create imported target LLVMTableGen\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create imported target llvm-tblgen\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create imported target LLVMCore\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Create imported target LLVMIRReader\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Create imported target LLVMCodeGen\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create imported target LLVMSelectionDAG\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Create imported target LLVMAsmPrinter\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Create imported target LLVMBitReader\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Create imported target LLVMBitWriter\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Create imported target LLVMTransformUtils\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Create imported target LLVMInstrumentation\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Create imported target LLVMInstCombine\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Create imported target LLVMScalarOpts\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Create imported target LLVMipo\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Create imported target LLVMVectorize\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Create imported target LLVMHello\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Create imported target LLVMObjCARCOpts\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Create imported target LLVMLinker\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Create imported target LLVMAnalysis\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Create imported target LLVMipa\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Create imported target LLVMLTO\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Create imported target LLVMMC\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Create imported target LLVMMCParser\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Create imported target LLVMMCDisassembler\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Create imported target LLVMObject\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Create imported target LLVMOption\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Create imported target LLVMDebugInfo\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Create imported target LLVMExecutionEngine\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Create imported target LLVMInterpreter\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Create imported target LLVMMCJIT\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Create imported target LLVMRuntimeDyld\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Create imported target LLVMTarget\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Create imported target LLVMX86CodeGen\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Create imported target LLVMX86AsmParser\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Create imported target LLVMX86Disassembler\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Create imported target LLVMX86AsmPrinter\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Create imported target LLVMX86Desc\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Create imported target LLVMX86Info\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Create imported target LLVMX86Utils\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Create imported target LLVMARMCodeGen\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Create imported target LLVMARMInfo\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Create imported target LLVMARMAsmParser\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Create imported target LLVMARMDisassembler\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Create imported target LLVMARMAsmPrinter\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Create imported target LLVMARMDesc\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Create imported target LLVMAArch64CodeGen\n",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Create imported target LLVMAArch64Info\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Create imported target LLVMAArch64AsmParser\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Create imported target LLVMAArch64Disassembler\n",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Create imported target LLVMAArch64AsmPrinter\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Create imported target LLVMAArch64Desc\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Create imported target LLVMAArch64Utils\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Create imported target LLVMAsmParser\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Create imported target LLVMLineEditor\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Create imported target LLVMProfileData\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Create imported target gtest\n",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Create imported target gtest_main\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Create imported target llvm-config\n",
        "Line" : 445,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Create imported target opt\n",
        "Line" : 448,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Create imported target llvm-as\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Create imported target llvm-dis\n",
        "Line" : 459,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Create imported target llvm-mc\n",
        "Line" : 462,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Create imported target llc\n",
        "Line" : 465,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Create imported target llvm-ar\n",
        "Line" : 473,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Create imported target llvm-nm\n",
        "Line" : 476,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Create imported target llvm-size\n",
        "Line" : 479,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Create imported target llvm-cov\n",
        "Line" : 482,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Create imported target llvm-profdata\n",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Create imported target llvm-link\n",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Create imported target lli\n",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Create imported target llvm-extract\n",
        "Line" : 499,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Create imported target llvm-diff\n",
        "Line" : 502,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Create imported target macho-dump\n",
        "Line" : 505,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Create imported target llvm-objdump\n",
        "Line" : 508,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Create imported target llvm-readobj\n",
        "Line" : 511,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Create imported target llvm-rtdyld\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Create imported target llvm-dwarfdump\n",
        "Line" : 517,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Create imported target llvm-dsymutil\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Create imported target llvm-vtabledump\n",
        "Line" : 523,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Create imported target bugpoint\n",
        "Line" : 526,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Create imported target BugpointPasses\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Create imported target llvm-bcanalyzer\n",
        "Line" : 537,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# Create imported target llvm-stress\n",
        "Line" : 540,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# Create imported target llvm-mcmarkup\n",
        "Line" : 548,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# Create imported target verify-uselistorder\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# Create imported target llvm-symbolizer\n",
        "Line" : 554,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# Create imported target llvm-c-test\n",
        "Line" : 557,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# Create imported target obj2yaml\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# Create imported target yaml2obj\n",
        "Line" : 563,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# Create imported target LTO\n",
        "Line" : 566,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# Create imported target llvm-lto\n",
        "Line" : 569,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# Load information for each installed configuration.\n",
        "Line" : 576,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# Cleanup temporary variables.\n",
        "Line" : 583,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# Loop over all imported files and verify that they actually exist\n",
        "Line" : 586,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# This file does not depend on other imported targets which have\n\n# been exported from the same project but in a separate export set.\n",
        "Line" : 605,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# Commands beyond this point should not need to know the version.\n",
        "Line" : 608,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 102
    },
    "Core/llvm/llvm/share/llvm/cmake/LLVMParseArguments.cmake" : {
      "ObjectId" : "ce19be114b311dd7e23c4c044b3d716af4fce8d5",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copied from http://www.itk.org/Wiki/CMakeMacroParseArguments under\n\n# http://creativecommons.org/licenses/by/2.5/.\n\n#\n\n# The PARSE_ARGUMENTS macro will take the arguments of another macro and define\n\n# several variables. The first argument to PARSE_ARGUMENTS is a prefix to put on\n\n# all variables it creates. The second argument is a list of names, and the\n\n# third argument is a list of options. Both of these lists should be quoted. The\n\n# rest of PARSE_ARGUMENTS are arguments from another macro to be parsed.\n\n#\n\n# PARSE_ARGUMENTS(prefix arg_names options arg1 arg2...)\n\n#\n\n# For each item in options, PARSE_ARGUMENTS will create a variable with that\n\n# name, prefixed with prefix_. So, for example, if prefix is MY_MACRO and\n\n# options is OPTION1;OPTION2, then PARSE_ARGUMENTS will create the variables\n\n# MY_MACRO_OPTION1 and MY_MACRO_OPTION2. These variables will be set to true if\n\n# the option exists in the command line or false otherwise.\n\n#\n\n#For each item in arg_names, PARSE_ARGUMENTS will create a variable with that\n\n#name, prefixed with prefix_. Each variable will be filled with the arguments\n\n#that occur after the given arg_name is encountered up to the next arg_name or\n\n#the end of the arguments. All options are removed from these\n\n#lists. PARSE_ARGUMENTS also creates a prefix_DEFAULT_ARGS variable containing\n\n#the list of all arguments up to the first arg_name encountered.\n\n#\n\n#Here is a simple, albeit impractical, example of using PARSE_ARGUMENTS that\n\n#demonstrates its behavior.\n\n#\n\n# SET(arguments\n\n#     hello OPTION3 world\n\n#     LIST3 foo bar\n\n#     OPTION2\n\n#     LIST1 fuz baz\n\n#     )\n\n#\n\n# PARSE_ARGUMENTS(ARG \"LIST1;LIST2;LIST3\" \"OPTION1;OPTION2;OPTION3\" ${arguments})\n\n#\n\n# PARSE_ARGUMENTS creates 7 variables and sets them as follows:\n\n#   ARG_DEFAULT_ARGS: hello;world\n\n#   ARG_LIST1: fuz;baz\n\n#   ARG_LIST2:\n\n#   ARG_LIST3: foo;bar\n\n#   ARG_OPTION1: FALSE\n\n#   ARG_OPTION2: TRUE\n\n#   ARG_OPTION3: TRUE\n\n#\n\n# If you don't have any options, use an empty string in its place.\n\n#   PARSE_ARGUMENTS(ARG \"LIST1;LIST2;LIST3\" \"\" ${arguments})\n\n# Likewise if you have no lists.\n\n#   PARSE_ARGUMENTS(ARG \"\" \"OPTION1;OPTION2;OPTION3\" ${arguments})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Core/llvm/llvm/share/llvm/cmake/LLVMProcessSources.cmake" : {
      "ObjectId" : "64ebce805ebd5959a8bbcdcd46edea1d1d5b8c80",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Replaces a compiler option or switch `old' in `var' by `new'.\n\n# If `old' is not in `var', appends `new' to `var'.\n\n# Example: llvm_replace_compiler_option(CMAKE_CXX_FLAGS_RELEASE \"-O3\" \"-O2\")\n\n# If the option already is on the variable, don't add it:\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# This adds .td and .h files to the Visual Studio solution:\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Don't reject hidden files. Some editors create backups in the\n\n# same directory as the file.\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Core/llvm/llvm/share/llvm/cmake/TableGen.cmake" : {
      "ObjectId" : "67031a5d706d9a407ca715f8083739bbe6b5f5f9",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# LLVM_TARGET_DEFINITIONS must contain the name of the .td file to process.\n\n# Extra parameters for `tblgen' may come after `ofn' parameter.\n\n# Adds the name of the generated file to TABLEGEN_OUTPUT.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Validate calling context.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Generate tablegen output in a temporary file.\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# The file in LLVM_TARGET_DEFINITIONS may be not in the current\n\n# directory and local_tds may not contain it, so we must\n\n# explicitly list it here:\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Only update the real output file if there are any differences.\n\n# This prevents recompilation of all the files depending on it if there\n\n# aren't any.\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# `make clean' must remove all those generated files:\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Creates a target for publicly exporting tablegen dependencies.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Upgrade existing LLVM_TABLEGEN setting.\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Effective tblgen executable to be used:\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "Core/rt/vm/CMakeLists.txt" : {
      "ObjectId" : "b02e8f68a52253571dde7acf58e812b339dbdf42",
      "LastModified" : "2017-09-13T02:10:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The minimum Mac OS X version needed by apps built by BugVM\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The minimum iOS version needed by apps built by BugVM\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set up global C and C++ compiler flags\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker flags\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Assembler flags\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Ugly hardcoding. This is the offset in bytes of the gcDescriptor member in the Class struct from core/include/bugvm/types.h\n\n# Should be the value of sizeof(void*)*3 for the target platform.\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Core/rt/vm/MergeStaticLibObjectFiles.cmake" : {
      "ObjectId" : "ae18ae8bd6a3bd6001952347d99bdf5209a08e82",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 RoboVM AB\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#      http://www.apache.org/licenses/LICENSE-2.0\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Merges the object files in a sttaic lib into a single object file and\n\n# overwrites the static lib with a new static lib only containing this single\n\n# object file. Will not do anything if CMAKE_BUILD_TYPE is 'debug' as it\n\n# destroys the debug info. Only the specified symbols will be externally\n\n# visible in the resulting static lib.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Usage: merge_static_lib_object_files(lib sym1 sym2 ... symn)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Linux\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 7
    },
    "Core/rt/vm/bc/src/CMakeLists.txt" : {
      "ObjectId" : "df18feca2dedc2785aab3a65bdee527fb0393abf",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Core/rt/vm/core/src/CMakeLists.txt" : {
      "ObjectId" : "dbf0905f0a3453d3ea9b42fc2d7ccd8e931558f5",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The code in unwind.c doesn't work properly if compiled with tail call optimizations\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable optimizations\n",
        "Line" : 55,
        "CharPositionInLine" : 68
      },
      "2" : {
        "Text" : "# Disable optimizations\n",
        "Line" : 68,
        "CharPositionInLine" : 69
      },
      "3" : {
        "Text" : "# Disable optimizations\n",
        "Line" : 82,
        "CharPositionInLine" : 71
      },
      "CommentCount" : 4
    },
    "Core/rt/vm/debug/src/CMakeLists.txt" : {
      "ObjectId" : "575d446db413b7ded40fb6046f743404188d6ae5",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Core/rt/vm/rt/CMakeLists.txt" : {
      "ObjectId" : "85908d5e87dc6d1a7e2fe0baeb2458554cf580f4",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Core/rt/vm/rt/android/CMakeLists.txt" : {
      "ObjectId" : "d3eef53680f7047e8d3204a942aafb3ba1cf6d30",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Mac OS X and iOS ships with sqlite so we'll just use that\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Core/rt/vm/rt/android/dalvik/CMakeLists.txt" : {
      "ObjectId" : "f93ff895829de909870a05a32fe963e1f05114ab",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Core/rt/vm/rt/android/dalvik/vm/CMakeLists.txt" : {
      "ObjectId" : "0b0ec3df35d9c6d75dd212ed7156776aaab9bdb3",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Core/rt/vm/rt/android/external/expat/CMakeLists.txt" : {
      "ObjectId" : "b789b81c5a1cdce408661147fc5c03b76fe17d9a",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Core/rt/vm/rt/android/external/fdlibm/CMakeLists.txt" : {
      "ObjectId" : "2756444a5adf322a4e94da89542ff3b3030d71d4",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is necessary to guarantee that the FDLIBM functions are in\n\n# \"IEEE spirit\", i.e. to guarantee that the IEEE 754 core functions\n\n# are used.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable GCC optimizations that interact badly with this crufty\n\n# library (see their own admission in 'readme'). Without this, we\n\n# fail StrictMath tests on x86.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# fdlibm expects __LITTLE_ENDIAN to be defined for little endian targets but\n\n# clang defines __LITTLE_ENDIAN__.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Core/rt/vm/rt/android/external/icu4c/CMakeLists.txt" : {
      "ObjectId" : "bbd9f0e60be1c4a7bce3ed67b8d08aed48416bc0",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Core/rt/vm/rt/android/external/icu4c/common/CMakeLists.txt" : {
      "ObjectId" : "9d270970499f1f8ec6add54a4ddb1f2e966f97ae",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Core/rt/vm/rt/android/external/icu4c/i18n/CMakeLists.txt" : {
      "ObjectId" : "246abc0c5aa475a925dafc8722c42954d0c7de7e",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Core/rt/vm/rt/android/external/javasqlite/CMakeLists.txt" : {
      "ObjectId" : "c811d460fbb1d0f4ae5dec08fa3ef048237f00e0",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Core/rt/vm/rt/android/external/openssl/CMakeLists.txt" : {
      "ObjectId" : "00aa08c587a4a36fc3792fdd347370c61fb9a6ff",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines from Android's build-config.mk\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  -DTERMIO # BugVM note: Not available on Darwin. We enable termios.h use instead.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# BugVM note: Enabled instead of TERMIO.\n",
        "Line" : 11,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 3
    },
    "Core/rt/vm/rt/android/external/openssl/crypto/CMakeLists.txt" : {
      "ObjectId" : "81a81d982205ac1501996922a6de8db524d5e7a6",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if(ARM)\n\n#  add_definitions(-DOPENSSL_BN_ASM_MONT -DAES_ASM -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM)\n\n#endif()\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(ARM)\n\n#  set(SRC ${SRC}\n\n#    aes/asm/aes-armv4.s\n\n#    bn/asm/armv4-mont.s\n\n#    sha/asm/sha1-armv4-large.s\n\n#    sha/asm/sha256-armv4.s\n\n#    sha/asm/sha512-armv4.s\n\n#  )\n\n#else()\n",
        "Line" : 513,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#endif()\n",
        "Line" : 525,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Core/rt/vm/rt/android/external/openssl/ssl/CMakeLists.txt" : {
      "ObjectId" : "d76b015267664f069bee3b3747c0cf3ae875b7bd",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  ssltest.c # BugVM note: Doesn't seem to be needed.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Core/rt/vm/rt/android/external/sqlite/CMakeLists.txt" : {
      "ObjectId" : "13c9f29f0d4bd3ae1003e200f4ec83b1c514e8ac",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE the following flags,\n\n#   SQLITE_TEMP_STORE=3 causes all TEMP files to go into RAM. and thats the behavior we want\n\n#   SQLITE_ENABLE_FTS3   enables usage of FTS3 - NOT FTS1 or 2.\n\n#   SQLITE_DEFAULT_AUTOVACUUM=1  causes the databases to be subject to auto-vacuum\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Core/rt/vm/rt/android/external/zlib/CMakeLists.txt" : {
      "ObjectId" : "dd6ec8d699a7e1f640f48c385e0ae5bed56fefbc",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Core/rt/vm/rt/android/libcore/CMakeLists.txt" : {
      "ObjectId" : "99c1c748dd9bcb99dae002de279d0adc18508abd",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Core/rt/vm/rt/android/libcore/crypto/src/main/native/CMakeLists.txt" : {
      "ObjectId" : "12b9bed1af36bced2af70293518ab413cf3fbcb3",
      "LastModified" : "2017-08-11T20:39:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Core/rt/vm/rt/android/libcore/luni/src/main/native/CMakeLists.txt" : {
      "ObjectId" : "7db7ade34f12dc800ac5f79f32b4956a8e70e83e",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Core/rt/vm/rt/android/libnativehelper/CMakeLists.txt" : {
      "ObjectId" : "e9bf889066f02edcf72c6350f4e4b7d123df248c",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Core/rt/vm/rt/bugvm/CMakeLists.txt" : {
      "ObjectId" : "aebe2ea0e13a996d34465bfe9ae92f384f47dd34",
      "LastModified" : "2017-06-07T18:57:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lab/javacpp-presets/accelerate/pom.xml" : {
      "ObjectId" : "872638b35edb1a33e93b6cdc269406d932724569",
      "LastModified" : "2017-08-11T20:39:22Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "Lab/javacpp-presets/pom.xml" : {
      "ObjectId" : "b76a65b38f7f8e377e2333d63d16b54fcb86e287",
      "LastModified" : "2017-08-11T20:39:22Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " To skip execution of cppbuild.sh: -Djavacpp.cppbuild.skip=true ",
        "Line" : 33,
        "CharPositionInLine" : 129
      },
      "1" : {
        "Text" : " To skip header file parsing phase: -Djavacpp.parser.skip=true  ",
        "Line" : 34,
        "CharPositionInLine" : 129
      },
      "2" : {
        "Text" : " To skip native compilation phase: -Djavacpp.compiler.skip=true ",
        "Line" : 35,
        "CharPositionInLine" : 129
      },
      "3" : {
        "Text" : "              <copyResources>true</copyResources>",
        "Line" : 226,
        "CharPositionInLine" : 57
      },
      "4" : {
        "Text" : "                <manifest>                          ",
        "Line" : 243,
        "CharPositionInLine" : 60
      },
      "5" : {
        "Text" : "                  <addClasspath>true</addClasspath> ",
        "Line" : 244,
        "CharPositionInLine" : 60
      },
      "6" : {
        "Text" : "                </manifest>                         ",
        "Line" : 245,
        "CharPositionInLine" : 60
      },
      "7" : {
        "Text" : " <addClasspath/> is broken: http://jira.codehaus.org/browse/MJAR-61 ",
        "Line" : 247,
        "CharPositionInLine" : 94
      },
      "8" : {
        "Text" : " If someone knows a better way to do this, please do let me know! ",
        "Line" : 464,
        "CharPositionInLine" : 78
      },
      "CommentCount" : 9
    }
  },
  "FileTypes" : {
    "CMAKE" : 45,
    "MAVEN" : 2
  },
  "ElapsedTime" : 10423
}