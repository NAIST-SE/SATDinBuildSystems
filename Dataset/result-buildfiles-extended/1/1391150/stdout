{
  "Repository" : "1391150",
  "Revision" : "HEAD",
  "ObjectId" : "6b0de13ac78cb59b10e7a7a11d8a96d8fecbf951",
  "CommitTime" : "2018-12-14T21:38:20Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "69f87e94a4e565b7c59fb71b5fa189481268ae86",
      "LastModified" : "2018-08-07T11:55:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############################################################\n\n########################## Version ##########################\n\n#############################################################\n\n# For systems with git installed, find out revsion and description.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# overwrite version numbers for official release\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We use the FeatureSummary module to get a more readable CMake output\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Default build type is Release\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n############################# Fortran ##################################\n\n########################################################################\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# http://public.kitware.com/Bug/print_bug_page.php?bug_id=9220\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "########################################################################\n\n############################# C++11 ####################################\n\n########################################################################\n\n# Check if the compiler supports C++11\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Try to compile test with the proposed flag\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Save flag, if successful\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# If found, set flag\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Check if mkstemps is available\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "############################################################\n\n####################### Policies ###########################\n\n############################################################\n\n# Enforce cmake2.4+ style behaviour for\n\n# mixed filename/full path linker directives\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# cmake_policy propagation rules\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# cmake_policy avoid escaping in add_definitions\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# cmake_policy use MACOSX_RPATH=ON by default\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# cmake_policy how to interpret string arguments\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "############################################################\n\n####################### macports python ####################\n\n############################################################\n\n# find the macports python libs if they exist\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "############################################################\n\n################# WITH_COMMON option #######################\n\n############################################################\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Look for LAPACK\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# qpOASES and blockSQP built if LAPACK available\n",
        "Line" : 219,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Look for IPOPT\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Disabled by default\n",
        "Line" : 226,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "############################################################\n\n################# Misc options #############################\n\n############################################################\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# enabling OpenMP support if requested\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# enabling Threads support if requested\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# OpenCL\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Core depends on OpenCL for GPU calculations\n",
        "Line" : 270,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Enable: RTLD_DEEPBIND\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Suppress warnings for refcounting failures (at program closure)\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Have an so version?\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "############################################################\n\n################# Installation location ####################\n\n############################################################\n\n# Flat hierarchy if self-contained and on Windows\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Note: Files installed in a casadi subdirectory\n",
        "Line" : 301,
        "CharPositionInLine" : 25
      },
      "32" : {
        "Text" : "# Installation directories are cache entries that can be modified\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Make relative paths absolute (needed later on)\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Turn relative path into absolute\n",
        "Line" : 336,
        "CharPositionInLine" : 6
      },
      "35" : {
        "Text" : "# Flat installation hierarchy\n",
        "Line" : 340,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# Set rpath\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# the RPATH to be used when installing, but only if it's not a system directory\n",
        "Line" : 357,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "################################################################################\n\n############################### compiler warnings ##############################\n\n################################################################################\n\n# add compiler warnings\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# I don't know the MSVC warnings, so do nothing for now\n",
        "Line" : 402,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "#######################################################################\n\n############################### Extra runtime checks ##################\n\n#######################################################################\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#######################################################################\n\n############################# -fPIC ###################################\n\n#######################################################################\n\n# the following commands are needed to fix a problem with the libraries\n\n# for linux 64 bits\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#######################################################################\n\n########################### code coverage #############################\n\n#######################################################################\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Circumventing a bug in MinGW g++ v4.7.2, evoked by 752fa89355ffa\n",
        "Line" : 437,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Tentative fix for https://github.com/casadi/casadi/issues/1665\n",
        "Line" : 441,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fkeep-inline-functions\")\n",
        "Line" : 443,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Plugin version\n",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Necessary for Visual C++\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Dynamic loading (needed for loading plugins and external functions)\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Include support for deprecated features (to be removed in the next release)\n",
        "Line" : 460,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#######################################################################\n\n################# 3rd party interface #################################\n\n#######################################################################\n\n# Sundials: Solve initial-value problems in ODE and DAE\n",
        "Line" : 469,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# build the included sundials\n",
        "Line" : 477,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# try to find system sundials\n",
        "Line" : 481,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# CSparse: A sparse direct linear solver (included in the source)\n",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# build the included csparse\n",
        "Line" : 493,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# try to find system csparse\n",
        "Line" : 497,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# BLASFEO\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# try to find system blasfeo\n",
        "Line" : 515,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# HPMPC\n",
        "Line" : 522,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# try to find system hpmpc\n",
        "Line" : 538,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "# TinyXML: An XML reader, needed e.g. by the Modelica interface\n",
        "Line" : 545,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# build the included tinyxml\n",
        "Line" : 550,
        "CharPositionInLine" : 4
      },
      "63" : {
        "Text" : "# try to find system tinyxml\n",
        "Line" : 554,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# DSDP\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# build the included dsdp\n",
        "Line" : 565,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# try to find system dsdp\n",
        "Line" : 569,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# CLANG: A just-in-time compiler\n",
        "Line" : 575,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# try to find system CLANG\n",
        "Line" : 579,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# Lapack: Dense linear solvers\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# qpOASES: An active-set QP solver\n",
        "Line" : 594,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# blockSQP: A block-structure-exploiting SQP method\n",
        "Line" : 606,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# IPOPT: A sparse interior point NLP solver with filter line-search\n",
        "Line" : 615,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Bonmin: An MINLP solver\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Knitro: An NLP solver\n",
        "Line" : 629,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# CPLEX: A sparse mixed-integer QP solver\n",
        "Line" : 636,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# CLP: A sparse linear solver\n",
        "Line" : 644,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# SNOPT: An SQP method\n",
        "Line" : 651,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# HSL: Sparse direct linear solvers\n",
        "Line" : 668,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# OOQP: A sparse interior point QP solver\n",
        "Line" : 675,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# GUROBI: A sparse mixed-integer QP solver\n",
        "Line" : 682,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# SQIC: A QP solver\n",
        "Line" : 689,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# AMPL: Interface to the AMPL solver library and interfaced solvers\n",
        "Line" : 699,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Slicot: used for expm, dple\n",
        "Line" : 703,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Worhp: A sparse SQP method\n",
        "Line" : 716,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "######################################################\n\n##################### paths ##########################\n\n######################################################\n",
        "Line" : 723,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# On Windows, build everything in the same directory\n",
        "Line" : 727,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "# On non-Windows, use separate directories for build\n",
        "Line" : 731,
        "CharPositionInLine" : 2
      },
      "88" : {
        "Text" : "#####################################################\n\n######################### swig ######################\n\n#####################################################\n",
        "Line" : 736,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# -Wall leaks into clang-tidy (through compile_commands.json)\n\n# silently overruling the 'Checks' field.\n\n# These warnings come from external_packages\n",
        "Line" : 765,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "#####################################################\n\n################# include the rest ##################\n\n#####################################################\n",
        "Line" : 775,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "#####################################################\n\n######################### docs ######################\n\n#####################################################\n",
        "Line" : 789,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# Print a summary\n",
        "Line" : 804,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# what is this?\n",
        "Line" : 815,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "########################################################\n\n########### Generate config files ######################\n\n########################################################\n\n# Add all targets to the build-tree export set\n",
        "Line" : 820,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# Export the package for use from the build-tree\n\n# (this registers the build-tree with a global CMake-registry)\n",
        "Line" : 827,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# Create the casadi-config.cmake and casadi-config-version.cmake files\n",
        "Line" : 831,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# ... for the build tree\n",
        "Line" : 834,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# ... for the install tree\n",
        "Line" : 838,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# ... for both\n",
        "Line" : 843,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# Install the casadi-config.cmake and casadi-config-version.cmake\n",
        "Line" : 847,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# Install the export set for use with the install-tree\n",
        "Line" : 853,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 102
    },
    "casadi/CMakeLists.txt" : {
      "ObjectId" : "98a0946f4032737d7ba56f0588476a3615d9ab90",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Turn a runtime file into a file with strings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Start with an empty file\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Add declaration of string\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Append file as strings\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Replace \\ with \\\\\n\n# Replace \" with \\\"\n",
        "Line" : 12,
        "CharPositionInLine" : 49
      },
      "5" : {
        "Text" : "# End declaration\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# this function handles libraries and plugins\n\n# there is so much similarity in plugins/libraries, we just\n\n# use a flag and wrap this with casadi_plugin or casadi_library (above)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Link with the core\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Not core\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Core\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# IMPORTANT: Add the library to the \"export-set\"\n",
        "Line" : 45,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Main header files\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "casadi/config.h.cmake" : {
      "ObjectId" : "63fc6f661618f51376433e9029888c041ea6134b",
      "LastModified" : "2017-08-31T20:27:54Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n *    This file is part of CasADi.\n *\n *    CasADi -- A symbolic framework for dynamic optimization.\n *    Copyright (C) 2010-2014 Joel Andersson, Joris Gillis, Moritz Diehl,\n *                            K.U. Leuven. All rights reserved.\n *    Copyright (C) 2011-2014 Greg Horn\n *\n *    CasADi is free software; you can redistribute it and/or\n *    modify it under the terms of the GNU Lesser General Public\n *    License as published by the Free Software Foundation; either\n *    version 3 of the License, or (at your option) any later version.\n *\n *    CasADi is distributed in the hope that it will be useful,\n *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n *    Lesser General Public License for more details.\n *\n *    You should have received a copy of the GNU Lesser General Public\n *    License along with CasADi; if not, write to the Free Software\n *    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n *\n */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "casadi/core/CMakeLists.txt" : {
      "ObjectId" : "26d9a986e216d372886abd52aca7fe8b81ff846d",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create runtime\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MISC\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Interface class for printing to screen\n\n# This base class implements the reference counting (garbage collection) framework used in CasADi\n\n# Generic type used for options and for compatibility with dynamically typed languages like Python\n\n# Functionality for passing options to a class\n\n# Set of useful functions\n",
        "Line" : 17,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "# Helper class for differentiating and integrating simple polynomials\n",
        "Line" : 23,
        "CharPositionInLine" : 30
      },
      "4" : {
        "Text" : "# Template class Matrix<>, implements a sparse Matrix with col compressed storage, designed to work well with symbolic data types (SX)\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Base class for SXElem MX and Matrix<>\n\n# Base class for Matrix<> and MX\n\n# The Matrix template class\n",
        "Line" : 26,
        "CharPositionInLine" : 30
      },
      "6" : {
        "Text" : "# reference counted sparsity pattern\n\n# A \"slice\" in a language such as Python, A[start:stop:step], or Matlab, A(start:step:stop)\n\n# A reference to a block of the matrix to allow operations such as A(:,3) = ...\n\n# A reference to a set of nonzeros of the matrix to allow operations such as A[3] = ...\n",
        "Line" : 30,
        "CharPositionInLine" : 30
      },
      "7" : {
        "Text" : "# Directed, acyclic graph representation with scalar expressions\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# More general graph representation with sparse matrix expressions and function evaluations\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# A dynamically created function with AD capabilities\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# MISC useful stuff\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# User include class with the most essential includes\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# MISC\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Template class Matrix<>, implements a sparse Matrix with col compressed storage, designed to work well with symbolic data types (SX)\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Directed, acyclic graph representation with scalar expressions\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Symbolic expression class (scalar-valued atomics)\n",
        "Line" : 93,
        "CharPositionInLine" : 26
      },
      "16" : {
        "Text" : "# Base class for all the nodes\n",
        "Line" : 94,
        "CharPositionInLine" : 50
      },
      "17" : {
        "Text" : "# A symbolic SXElem variable\n\n# A constant SXElem node\n\n# A unary operation\n\n# A binary operation\n",
        "Line" : 95,
        "CharPositionInLine" : 53
      },
      "18" : {
        "Text" : "# More general graph representation with sparse matrix expressions and function evaluations\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Symbolic expression class (matrix-valued atomics)\n",
        "Line" : 101,
        "CharPositionInLine" : 26
      },
      "20" : {
        "Text" : "# Base class for all the MX nodes\n\n# Input and output MX instructions\n\n# A constant MX node\n\n# A symbolic MX variable\n\n# Unary operation\n\n# Binary operation\n\n# Matrix multiplication\n\n# Einstein product\n\n# Solve linear system of equations\n\n# Function call\n\n# Find first nonzero\n\n# 1-norm, 2-norm and infinity-norm\n\n# Matrix minimum\n\n# Transpose\n\n# Concatenation\n\n# Split (inverse of concatenation)\n\n# Reshape\n\n# Submatrix reference\n\n# Submatrix assignment\n\n# Get the nonzeros of matrix\n\n# Assign the nonzeros of a matrix to another matrix\n\n# Get elements of matrix by a symbolic slice\n\n# Sparse copy to another sparsity pattern\n\n# Determinant\n\n# Matrix inverse\n\n# Inner product\n\n# Bilinear form\n\n# Rank-1 update\n\n# Base class for nodes with multiple outputs\n\n# Assertion\n\n# Monitor\n\n# RepMat\n",
        "Line" : 102,
        "CharPositionInLine" : 50
      },
      "21" : {
        "Text" : "# A dynamically created function with AD capabilities\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Function object class (internal API)\n\n# Specialization of FunctionInternal to hold an oracle\n",
        "Line" : 137,
        "CharPositionInLine" : 50
      },
      "23" : {
        "Text" : "# Interface for user-defined function classes (public API)\n",
        "Line" : 139,
        "CharPositionInLine" : 26
      },
      "24" : {
        "Text" : "# Interface for user-defined function classes (internal API)\n",
        "Line" : 140,
        "CharPositionInLine" : 50
      },
      "25" : {
        "Text" : "# Plugin interface for Function\n\n# Helper class for derivative function generation\n\n# Base class for SXFunction and MXFunction\n",
        "Line" : 141,
        "CharPositionInLine" : 59
      },
      "26" : {
        "Text" : "# MISC useful stuff\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Runtime headers\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Add the runtime sources to internal (installed separately)\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Build static and/or shared\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Core needs support for dynamic linking\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Core depends on OpenCL for GPU calculations\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Realtime library\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 33
    },
    "casadi/core/runtime/CMakeLists.txt" : {
      "ObjectId" : "0ef1ce4a979d609b9bc58c85ffc1c087eb6ecaae",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# C runtime sources\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Stringify C runtime\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "casadi/interfaces/CMakeLists.txt" : {
      "ObjectId" : "a7be9928fa424e17186585e4deccc7a47181dcd2",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "casadi/interfaces/ampl/CMakeLists.txt" : {
      "ObjectId" : "b46675de774ca281ea0d2ddc39a55c71c06eabcf",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "casadi/interfaces/blocksqp/CMakeLists.txt" : {
      "ObjectId" : "080eae897c1f565a6c879a0b9f76c88c37b7ad59",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "casadi/interfaces/bonmin/CMakeLists.txt" : {
      "ObjectId" : "7a1ef862fed47f370f6f3bae3ab60067e1126ff4",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "casadi/interfaces/clang/CMakeLists.txt" : {
      "ObjectId" : "8093f0df5e168e19b6b44eb19570484a6e848529",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get resource directory\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create text files containing system paths\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for both C and C++\n",
        "Line" : 20,
        "CharPositionInLine" : 27
      },
      "3" : {
        "Text" : "# Only C\n",
        "Line" : 21,
        "CharPositionInLine" : 28
      },
      "4" : {
        "Text" : "# Only C++\n",
        "Line" : 22,
        "CharPositionInLine" : 30
      },
      "5" : {
        "Text" : "# On Windows, use relative paths\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Get C and C++ system includes\n\n# Note on OSX, \"gcc\" is often an alias for clang\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Printout\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Copy the shell script to the same directory\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Copy text files with paths to the designated location\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "casadi/interfaces/clp/CMakeLists.txt" : {
      "ObjectId" : "b87e7192eaa790d79c38a888d8f2e3b111e4bf60",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "casadi/interfaces/cplex/CMakeLists.txt" : {
      "ObjectId" : "2572a6da9535c29ddc1d102f76ba122250456237",
      "LastModified" : "2018-08-07T11:55:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "casadi/interfaces/csparse/CMakeLists.txt" : {
      "ObjectId" : "1514fd10b05422a1a64fc6e55272714b6aad746c",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "casadi/interfaces/gurobi/CMakeLists.txt" : {
      "ObjectId" : "c1ed34759e8e715db622e7bc0e0f10bd3d94404c",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "casadi/interfaces/hpmpc/CMakeLists.txt" : {
      "ObjectId" : "da9413e7e071d6b983b92b6365804a2d8a86a67e",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "casadi/interfaces/hsl/CMakeLists.txt" : {
      "ObjectId" : "7c4e0848d0cda78370b4c969c785413f5364f721",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "casadi/interfaces/ipopt/CMakeLists.txt" : {
      "ObjectId" : "126014a04594bf93f033ad851a8e95aa8d84a13e",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "casadi/interfaces/knitro/CMakeLists.txt" : {
      "ObjectId" : "a4f33bd33e014866f184ffc03df0caf13a0a88b0",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "casadi/interfaces/lapack/CMakeLists.txt" : {
      "ObjectId" : "059c95245bdebb2ddca5602a13df37f9f7fdbb54",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Linear solver using dense LU factorization in LAPACK\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Linear solver using dense QR factorization in LAPACK\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "casadi/interfaces/ooqp/CMakeLists.txt" : {
      "ObjectId" : "671b98fb9e3311c08d7ca182ec108d18ecf4ea05",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "casadi/interfaces/qpoases/CMakeLists.txt" : {
      "ObjectId" : "6765be44dadae8a6fa32aa11419332074da0e1fc",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "casadi/interfaces/slicot/CMakeLists.txt" : {
      "ObjectId" : "6bb78adfd24c8f717f89c3c07c6cfacf28d2f498",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "casadi/interfaces/snopt/CMakeLists.txt" : {
      "ObjectId" : "c55673717fcd33899fb2b3ca7e0ac16db411e58f",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "casadi/interfaces/sqic/CMakeLists.txt" : {
      "ObjectId" : "12a2abfc9f5db0b357bff690e3396d7e25217148",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "casadi/interfaces/sqic/Makefile" : {
      "ObjectId" : "f5826a3246a9fd1891f63b945dd52d8ff074bf05",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#prog: wsqic.cpp wsqic.hpp libwsqic.a\n\n#\tgcc wsqic.cpp -o prog -L. -lstdc++ -lwsqic /home/jg/programs/sqic-install/lib/libsqic.a /home/jg/programs/sqic-install/lib/libsnblas.a -lgfortran\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "casadi/interfaces/sundials/CMakeLists.txt" : {
      "ObjectId" : "9e10f50a170ea0d9d35b0cebe48d062e7c837f04",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SUNDIALS commons\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CVODES\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# IDAS\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# KINSOL\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "casadi/interfaces/tinyxml/CMakeLists.txt" : {
      "ObjectId" : "b1974da9dbf06fff0ed7956d02b1f0f645cf0d24",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "casadi/interfaces/worhp/CMakeLists.txt" : {
      "ObjectId" : "47211a024682793d0f55975d94620c2fe1a5a780",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "casadi/solvers/CMakeLists.txt" : {
      "ObjectId" : "47cfac2fc3e75920b9a4ed7787fb9d051e1e4d3c",
      "LastModified" : "2018-08-07T11:55:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Active-set QP solver\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Simple just-in-time compiler, using shell commands\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Explicit Runge-Kutta integrator\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Collocation integrator\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Linear interpolant\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Sparse direct QR - implemented in CasADi's C runtime\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Sparse direct LDL' - implemented in CasADi's C runtime\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# SQPMethod -  A basic SQP method\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# SCPgen -  An implementation of Lifted Newton SQP\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/ClangTidy.cmake" : {
      "ObjectId" : "617033b870f93bb3ad1551601ddb46b9d798f157",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# filtering out unwanted files\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "cmake/CppLint.cmake" : {
      "ObjectId" : "68e61df9061ff114dc21109f0fdc216d474e4b46",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2013 Daniel Scharrer\n\n#\n\n# This software is provided 'as-is', without any express or implied\n\n# warranty.  In no event will the author(s) be held liable for any damages\n\n# arising from the use of this software.\n\n#\n\n# Permission is granted to anyone to use this software for any purpose,\n\n# including commercial applications, and to alter it and redistribute it\n\n# freely, subject to the following restrictions:\n\n#\n\n# 1. The origin of this software must not be misrepresented; you must not\n\n#    claim that you wrote the original software. If you use this software\n\n#    in a product, an acknowledgment in the product documentation would be\n\n#    appreciated but is not required.\n\n# 2. Altered source versions must be plainly marked as such, and must not be\n\n#    misrepresented as being the original software.\n\n# 3. This notice may not be removed or altered from any source distribution.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 2014 Greg Horn\n\n# In order to comply with the above copyright, I am noting that I took\n\n# Daniel's script and hacked it a bit, mostly changing paths and filters\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# disable unwanted filters\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# THESE SHOW LEGITAMITE WARNINGS WHICH SHOULD BE FIXED:\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add a target that runs cpplint.py\n\n#\n\n# Parameters:\n\n# - TARGET_NAME the name of the target to add\n\n# - SOURCES_LIST a complete list of source and include files to check\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# PROJECT)\n",
        "Line" : 53,
        "CharPositionInLine" : 58
      },
      "6" : {
        "Text" : "# filtering out unwanted files\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#string(REGEX MATCH \".*\\\\.hpp$\" dummy ${item})\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#set(SOURCES_LIST ${SOURCES_LIST0}) # just use all files\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# message(\"LALALA SOURCES_LIST: ${TARGET_NAME}: ${SOURCES_LIST}\")\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#            \"--project=${PROJECT}\"\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cmake/FindBLASFEO.cmake" : {
      "ObjectId" : "5b1673ee93c65dfaa25663881128a085262f740a",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindBONMIN.cmake" : {
      "ObjectId" : "36a55c2696841fd99f1e5df3b9bef2012942ceb5",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get package info using pkg-config\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add osx frameworks to BONMIN_LIBRARIES\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# turn \"-framework;foo;-framework;bar;other\" into \"-framework foo;-framework bar;other\"\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# take \"-framework foo;-framework bar;other\" and add only frameworks to BONMIN_LIBRARIES\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Set standard flags\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindCASADI.cmake" : {
      "ObjectId" : "8a6aa274408406f3d84e3159925acc27130a4c93",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindCLANG.cmake" : {
      "ObjectId" : "4edf60b395fd3c13bc625fa37cd18bca050a1419",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file was partly taken from Sarcasm/irony-mode and modified\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Legacy version, to be removed\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Clang shares include directory with llvm\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# All clang libraries\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get libraries\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Return variables\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# most recent versions come first: http://llvm.org/apt/\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# List of likely locations of llvm\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# LLVM Homebrew\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# LLVM MacPorts\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# FreeBSD ports versions\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Locate the LLVM config script\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# LLVM version\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# LLVM installation prefix\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# LLVM include directory\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# LLVM library directory\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Clang shares include directory with llvm\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# All clang libraries\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Get libraries\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Get the LLVM libraries\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Get system libs\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Standard math\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# LLVM needs to be linked with zlib\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# ??\n",
        "Line" : 119,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "# ??\n",
        "Line" : 122,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# C++ compiler flags\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "cmake/FindCLP.cmake" : {
      "ObjectId" : "a7e1fe7ed4c1881e8b2597ddb2f5991cccc50622",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get package info using pkg-config\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add osx frameworks to CLP_LIBRARIES\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# turn \"-framework;foo;-framework;bar;other\" into \"-framework foo;-framework bar;other\"\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# take \"-framework foo;-framework bar;other\" and add only frameworks to CLP_LIBRARIES\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Set standard flags\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindCPLEX.cmake" : {
      "ObjectId" : "641c5970612526bdbd1b668a3fd94068c5ac5d31",
      "LastModified" : "2018-08-07T11:55:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# From martinsch/pgmlink and modified\n\n# This module finds cplex.\n\n#\n\n# User can give CPLEX enviromental variable as a hint\n\n#\n\n# It sets the following variables:\n\n#  CPLEX_FOUND              - Set to false, or undefined, if cplex isn't found.\n\n#  CPLEX_INCLUDE_DIRS       - include directory\n\n#  CPLEX_LIBRARIES          - library files\n\n# if(WIN32)\n\n#   execute_process(COMMAND cmd /C set CPLEX_STUDIO_DIR OUTPUT_VARIABLE CPLEX_STUDIO_DIR_VAR ERROR_QUIET OUTPUT_STRIP_TRAILING_WHITESPACE)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   if(NOT CPLEX_STUDIO_DIR_VAR)\n\n#     MESSAGE(FATAL_ERROR \"Unable to find CPLEX: environment variable CPLEX_STUDIO_DIR<VERSION> not set.\")\n\n#   endif()\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#   STRING(REGEX REPLACE \"^CPLEX_STUDIO_DIR\" \"\" CPLEX_STUDIO_DIR_VAR ${CPLEX_STUDIO_DIR_VAR})\n\n#   STRING(REGEX MATCH \"^[0-9]+\" CPLEX_WIN_VERSION ${CPLEX_STUDIO_DIR_VAR})\n\n#   STRING(REGEX REPLACE \"^[0-9]+=\" \"\" CPLEX_STUDIO_DIR_VAR ${CPLEX_STUDIO_DIR_VAR})\n\n#   file(TO_CMAKE_PATH \"${CPLEX_STUDIO_DIR_VAR}\" CPLEX_ROOT_DIR_GUESS) \n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#   set(CPLEX_WIN_VERSION ${CPLEX_WIN_VERSION} CACHE STRING \"CPLEX version to be used.\")\n\n#   set(CPLEX_ROOT_DIR \"${CPLEX_ROOT_DIR_GUESS}\" CACHE PATH \"CPLEX root directory.\")\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#   MESSAGE(STATUS \"Found CLPEX version ${CPLEX_WIN_VERSION} at '${CPLEX_ROOT_DIR}'\")\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#   STRING(REGEX REPLACE \"/VC/bin/.*\" \"\" VISUAL_STUDIO_PATH ${CMAKE_C_COMPILER})\n\n#   STRING(REGEX MATCH \"Studio [0-9]+\" CPLEX_WIN_VS_VERSION ${VISUAL_STUDIO_PATH})\n\n#   STRING(REGEX REPLACE \"Studio \" \"\" CPLEX_WIN_VS_VERSION ${CPLEX_WIN_VS_VERSION})\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#   if(${CPLEX_WIN_VS_VERSION} STREQUAL \"9\")\n\n#     set(CPLEX_WIN_VS_VERSION 2008)\n\n#   elseif(${CPLEX_WIN_VS_VERSION} STREQUAL \"10\")\n\n#     set(CPLEX_WIN_VS_VERSION 2010)\n\n#   elseif(${CPLEX_WIN_VS_VERSION} STREQUAL \"11\")\n\n#     set(CPLEX_WIN_VS_VERSION 2012)\n\n#   else()\n\n#     MESSAGE(FATAL_ERROR \"CPLEX: unknown Visual Studio version at '${VISUAL_STUDIO_PATH}'.\")\n\n#   endif()\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#   set(CPLEX_WIN_VS_VERSION ${CPLEX_WIN_VS_VERSION} CACHE STRING \"Visual Studio Version\")\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#   if(\"${CMAKE_C_COMPILER}\" MATCHES \"amd64\")\n\n#     set(CPLEX_WIN_BITNESS x64)\n\n#   else()\n\n#     set(CPLEX_WIN_BITNESS x86)\n\n#   endif()\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#   set(CPLEX_WIN_BITNESS ${CPLEX_WIN_BITNESS} CACHE STRING \"On Windows: x86 or x64 (32bit resp. 64bit)\")\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#   MESSAGE(STATUS \"CPLEX: using Visual Studio ${CPLEX_WIN_VS_VERSION} ${CPLEX_WIN_BITNESS} at '${VISUAL_STUDIO_PATH}'\")\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#   if(NOT CPLEX_WIN_LINKAGE)\n\n#     set(CPLEX_WIN_LINKAGE mda CACHE STRING \"CPLEX linkage variant on Windows. One of these: mda (dll, release), mdd (dll, debug), mta (static, release), mtd (static, debug)\")\n\n#   endif(NOT CPLEX_WIN_LINKAGE)\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#   # now, generate platform string\n\n#   set(CPLEX_WIN_PLATFORM \"${CPLEX_WIN_BITNESS}_windows_vs${CPLEX_WIN_VS_VERSION}/stat_${CPLEX_WIN_LINKAGE}\")\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# else()\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#windows\n",
        "Line" : 81,
        "CharPositionInLine" : 58
      },
      "15" : {
        "Text" : "#unix\n",
        "Line" : 82,
        "CharPositionInLine" : 57
      },
      "16" : {
        "Text" : "#unix \n",
        "Line" : 83,
        "CharPositionInLine" : 54
      },
      "17" : {
        "Text" : "#unix \n",
        "Line" : 84,
        "CharPositionInLine" : 49
      },
      "18" : {
        "Text" : "#osx \n",
        "Line" : 85,
        "CharPositionInLine" : 47
      },
      "19" : {
        "Text" : "#osx \n",
        "Line" : 86,
        "CharPositionInLine" : 50
      },
      "20" : {
        "Text" : "#windows\n",
        "Line" : 87,
        "CharPositionInLine" : 46
      },
      "21" : {
        "Text" : "#windows\n",
        "Line" : 88,
        "CharPositionInLine" : 52
      },
      "22" : {
        "Text" : "#unix\n",
        "Line" : 89,
        "CharPositionInLine" : 51
      },
      "23" : {
        "Text" : "#unix \n",
        "Line" : 90,
        "CharPositionInLine" : 48
      },
      "24" : {
        "Text" : "#unix \n",
        "Line" : 91,
        "CharPositionInLine" : 43
      },
      "25" : {
        "Text" : "#osx \n",
        "Line" : 92,
        "CharPositionInLine" : 41
      },
      "26" : {
        "Text" : "#osx \n",
        "Line" : 93,
        "CharPositionInLine" : 44
      },
      "27" : {
        "Text" : "#windows\n",
        "Line" : 94,
        "CharPositionInLine" : 40
      },
      "28" : {
        "Text" : "#unix\n",
        "Line" : 95,
        "CharPositionInLine" : 25
      },
      "29" : {
        "Text" : "#unix\n",
        "Line" : 96,
        "CharPositionInLine" : 28
      },
      "30" : {
        "Text" : "#windows\n",
        "Line" : 103,
        "CharPositionInLine" : 60
      },
      "31" : {
        "Text" : "#unix\n",
        "Line" : 104,
        "CharPositionInLine" : 70
      },
      "32" : {
        "Text" : "#unix \n",
        "Line" : 105,
        "CharPositionInLine" : 67
      },
      "33" : {
        "Text" : "#unix \n",
        "Line" : 106,
        "CharPositionInLine" : 62
      },
      "34" : {
        "Text" : "#osx \n",
        "Line" : 107,
        "CharPositionInLine" : 60
      },
      "35" : {
        "Text" : "#osx \n",
        "Line" : 108,
        "CharPositionInLine" : 63
      },
      "36" : {
        "Text" : "#unix\n",
        "Line" : 109,
        "CharPositionInLine" : 27
      },
      "37" : {
        "Text" : "#unix\n",
        "Line" : 110,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 38
    },
    "cmake/FindCSPARSE.cmake" : {
      "ObjectId" : "ee9ef339bbcb95024ac1dd2929c664414356ea13",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# libraries\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    message(STATUS \"Found ${LIB}: ${CSPARSE_LIB_${LIB}}\")\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  else()\n\n#    message(STATUS \"Could not find lib${LIB}\")\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindDSDP.cmake" : {
      "ObjectId" : "ccada8441ad91595cb641b3b64ee939dd2e225c4",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# libraries\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    message(STATUS \"Found ${LIB}: ${DSDP_LIB_${LIB}}\")\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  else()\n\n#    message(STATUS \"Could not find lib${LIB}\")\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindECOS.cmake" : {
      "ObjectId" : "36b998720da909e66975e62f9819d9bbadeed802",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Standard ecos build depends on rt for profiling\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindEigen3.cmake" : {
      "ObjectId" : "8cb9580703a3af67275b78fd59b5ec9d29880164",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindGSL.cmake" : {
      "ObjectId" : "c29c65b4f9ef10f839cc38d04cbe79f8d72161c3",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find gnu scientific library GSL\n\n# See\n\n# http://www.gnu.org/software/gsl/  and\n\n# http://gnuwin32.sourceforge.net/packages/gsl.htm\n\n#\n\n# From: http://www.miscdebris.net/blog/2010/06/21/cmake-module-to-find-gnu-scientific-library-findgsl-cmake/\n\n#\n\n# Based on a script of Felix Woelk and Jan Woetzel\n\n# (www.mip.informatik.uni-kiel.de)\n\n#\n\n# It defines the following variables:\n\n#  GSL_FOUND - system has GSL lib\n\n#  GSL_INCLUDE_DIRS - where to find headers\n\n#  GSL_LIBRARIES - full path to the libraries\n\n#  GSL_LIBRARY_DIRS, the directory where the PLplot library is found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  CMAKE_GSL_CXX_FLAGS  = Unix compiler flags for GSL, essentially \"`gsl-config --cxxflags`\"\n\n#  GSL_LINK_DIRECTORIES = link directories, useful for rpath on Unix\n\n#  GSL_EXE_LINKER_FLAGS = rpath on Unix\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Windows, but not for Cygwin and MSys where gsl-config is available\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# look for headers\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# look for gsl library\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# look for gsl cblas library\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# run the gsl-config program to get cxxflags\n",
        "Line" : 67,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# parse definitions from cflags; drop -D* from CFLAGS\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# parse include dirs from cflags; drop -I prefix\n",
        "Line" : 84,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# run the gsl-config program to get the libs\n",
        "Line" : 99,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# extract linkdirs (-L) for rpath (i.e., LINK_DIRECTORIES)\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 11
    },
    "cmake/FindGUROBI.cmake" : {
      "ObjectId" : "d995b138fc343e7016d43b4ed1bece595d5c7746",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### Taken from http://www.openflipper.org/svnrepo/CoMISo/trunk/CoMISo/cmake/FindGUROBI.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find GUROBI\n\n# Once done this will define\n\n#  GUROBI_FOUND - System has Gurobi\n\n#  GUROBI_INCLUDE_DIRS - The Gurobi include directories\n\n#  GUROBI_LIBRARIES - The libraries needed to use Gurobi\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# use c++ headers as default\n\n# set(GUROBI_COMPILER_FLAGS \"-DIL_STD\" CACHE STRING \"Gurobi Compiler Flags\")\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBCPLEX_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindHPMPC.cmake" : {
      "ObjectId" : "6f48a16396300d02d618b50c9550614d29cc3aec",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(HPMPC_INCLUDE_DIR ${HPMPC_INCLUDE_DIR} ${B_INCLUDE_DIR})\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "cmake/FindHSL.cmake" : {
      "ObjectId" : "a78b170fd82b64c007e2310222691dfb6309c1c5",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TRY TO FIND THE HSL LIBRARY\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindIPOPT.cmake" : {
      "ObjectId" : "bc733b794fbd5f8d067b84278c6e7f4017899c61",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get package info using pkg-config\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add osx frameworks to IPOPT_LIBRARIES\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# turn \"-framework;foo;-framework;bar;other\" into \"-framework foo;-framework bar;other\"\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# take \"-framework foo;-framework bar;other\" and add only frameworks to IPOPT_LIBRARIES\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Callback support\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# message(STATUS \"Detected an IPOPT configuration without development headers. Build will proceed, but without callback functionality. To enable it, see https://github.com/casadi/casadi/wiki/enableIpoptCallback\")\n",
        "Line" : 29,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Set standard flags\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/FindKNITRO.cmake" : {
      "ObjectId" : "102f9cb132627f277d6d23d0f282826d04b8fac7",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindLIFTOPT.cmake" : {
      "ObjectId" : "eaa628869576319656180890f2e1c36dfb8c5deb",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindMA27.cmake" : {
      "ObjectId" : "3b4336800b0c1b92c4264f6c265a1199efb9b8af",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TRY TO FIND THE MA27 LIBRARY\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindMA57.cmake" : {
      "ObjectId" : "f4f52d33aab7168855d29a74bc5d39a37c53a1d4",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TRY TO FIND THE MA57 LIBRARY\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindMATLAB.cmake" : {
      "ObjectId" : "19d3104397242f2c638d58e0bd87cf7e4a70184c",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - this module looks for Matlab\n\n# Defines:\n\n#  MATLAB_INCLUDE_DIR: include path for mex.h, engine.h\n\n#  MATLAB_LIBRARIES:   required libraries: libmex, etc\n\n#  MATLAB_MEX_LIBRARY: path to libmex.lib\n\n#  MATLAB_MX_LIBRARY:  path to libmx.lib\n\n#  MATLAB_MAT_LIBRARY:  path to libmat.lib\n\n#  MATLAB_ENG_LIBRARY: path to libeng.lib\n\n#  MATLAB_ROOT: path to Matlab's root directory\n\n#  MATLAB_MEX_EXE: path to mex program\n\n#  MATLAB_MEX_EXT: mex extension\n\n#  MATLAB_CFLAGS, MATLAB_CLINKER_FLAGS, MATLAB_CLIBS (and same for CXX and Fortran)\n\n#\n\n# Note: You cannot use MATLAB_CLIBS etc to \"target_link_libraries\" as that gets confused \n\n# by the flag that specifies where the matlab libraries are (at least on Windows for Visual Studio).\n\n# This variable also contains system libraries etc so it's probably not a good idea to use it in \n\n# your CMake file. You should probably use\n\n#\n\n#  include_directories(${MATLAB_INCLUDE_DIR})\n\n#  add_definitions(${MATLAB_CXXFLAGS})\n\n#  target_link_libraries(yourmexfile ${MATLAB_LIBRARIES} )\n\n#\n\n# Reason for MATLAB_CXXFLAGS: on linux, mex files need to be compiled with -fPIC, but that means all \n\n# linked libraries need to be compiled with -fPIC as well.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a derivative work of file FindMatlab.cmake released with\n\n# CMake v2.8, because the original seems to be a bit outdated\n\n#\n\n# This file uses ideas from Gerardus (Author: Ramon Casero <rcasero@...>, Tom Doel)\n\n# and a post by Kent Williams\n\n# http://www.cmake.org/pipermail/cmake/2013-December/056593.html\n\n#\n\n# Heavily modified by Kris Thielemans for WIN32 and recent versions of matlab\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n# Copyright 2014 University College London\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If MATLAB_ROOT was defined in the environment, use it.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# get path to the Matlab executable\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# found it, so let's find its absolute path and go one level up to find MATLAB_ROOT\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# remove symbolic links\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# find directory of executable\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# find root dir\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# store it in the cache\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# First set MATLAB_ROOT to an empty string but as a cached variable\n\n# this avoids CMake creating a local variable with the same name\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# now go and look in more places\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Search for a version of Matlab available, starting from the most modern one to older versions\n",
        "Line" : 79,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Check if this is a Mac\n",
        "Line" : 91,
        "CharPositionInLine" : 52
      },
      "15" : {
        "Text" : "# we look in the applications folder\n\n# Search for a version of Matlab available, starting from the most modern one to older versions\n",
        "Line" : 92,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# could go and look in some other default places for other OSses\n",
        "Line" : 102,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# TODO should really skip rest of configuration as it will all fail anyway.\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Find out where MATLAB libraries are\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Directory name depending on whether the Windows architecture is 32\n\n# bit or 64 bit\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Folder where the MEX libraries are, depending on the Windows compiler\n",
        "Line" : 128,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Assume people are generally using Visual Studio 7.1,\n\n# if using 7.0 need to link to: ../extern/lib/${WINDIR}/microsoft/msvc70\n",
        "Line" : 132,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# set(MATLAB_LIBRARIES_DIR \"${MATLAB_ROOT}/extern/lib/${WINDIR}/microsoft/msvc70\")\n",
        "Line" : 135,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# Assume people are generally using Borland 5.4,\n\n# if using 7.0 need to link to: ../extern/lib/${WINDIR}/microsoft/msvc70\n",
        "Line" : 137,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "# set(MATLAB_LIBRARIES_DIR \"${MATLAB_ROOT}/extern/lib/${WINDIR}/microsoft/bcc50\")\n\n# set(MATLAB_LIBRARIES_DIR \"${MATLAB_ROOT}/extern/lib/${WINDIR}/microsoft/bcc51\")\n",
        "Line" : 140,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# If the compiler is Visual Studio, but not any of the specific\n\n# versions above, we try our luck with the microsoft directory\n",
        "Line" : 143,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# There seems to be no way to let cmake do a search in subdirectories, so use \"find\"\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# find directory of executable\n",
        "Line" : 163,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# MATLAB_LIBRARIES\n",
        "Line" : 174,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# This is common to all platforms:\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Get paths to the Matlab MEX libraries\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Get path to the include directory\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# find mex extension\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "######################### find flags using \"mex -v\"\n\n# This is based on Kent Williams's post at\n\n# http://www.cmake.org/pipermail/cmake/2013-December/056593.html\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# mex -v outputs all the settings used for building MEX files, so \n\n# we can use it to grab the important variables needed\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# This sets MATLAB_CFLAGS, MATLAB_CLINKER_FLAGS, MATLAB_CLIBS (and same for CXX and Fortran)\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# parse mex output line by line by turning file into CMake list of lines\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# on Linux\n",
        "Line" : 251,
        "CharPositionInLine" : 43
      },
      "38" : {
        "Text" : "# on Windows\n",
        "Line" : 253,
        "CharPositionInLine" : 51
      },
      "39" : {
        "Text" : "# get rid of /implib statement used on some older windows-matlab versions (refers to temp file)\n",
        "Line" : 257,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "#message(STATUS \"mexcxx ${mexCxxFlags}\")\n",
        "Line" : 265,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# pre-2014a flags\n",
        "Line" : 270,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Since 2014a or so, mex can only be used for one type of source and no longer\n\n# reports all flags. We therefore need to run mex with different file types.\n\n#### C\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#### C++\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#### Fortran\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set MATLAB_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "cmake/FindMETIS.cmake" : {
      "ObjectId" : "7461f5f7c8b0a18cbf23943173843575b972f610",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TRY TO FIND THE METIS LIBRARY\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindMOSEK.cmake" : {
      "ObjectId" : "cfc29c9dd41a3dc93888005059ef8e1a0f0faff0",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindNUMPY.cmake" : {
      "ObjectId" : "ee1907bf13d0c0948a00b7042956e7a9fedefa12",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Joel: What is the purpose of this??\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindOCTAVE.cmake" : {
      "ObjectId" : "796e2cf865ccbd199921c4c77d9f3e200e157fca",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Octave\n\n# GNU Octave is a high-level interpreted language, primarily intended for numerical computations.\n\n# available at http://www.gnu.org/software/octave/\n\n#\n\n# This module defines:\n\n#  OCTAVE_EXECUTABLE           - octave interpreter\n\n#  OCTAVE_INCLUDE_DIRS         - include path for mex.h, mexproto.h\n\n#  OCTAVE_LIBRARIES            - required libraries: octinterp, octave, cruft\n\n#  OCTAVE_OCTINTERP_LIBRARY    - path to the library octinterp\n\n#  OCTAVE_OCTAVE_LIBRARY       - path to the library octave\n\n#  OCTAVE_VERSION_STRING       - octave version string\n\n#  OCTAVE_MAJOR_VERSION        - major version\n\n#  OCTAVE_MINOR_VERSION        - minor version\n\n#  OCTAVE_PATCH_VERSION        - patch version\n\n#  OCTAVE_OCT_FILE_DIR         - object files that will be dynamically loaded\n\n#  OCTAVE_OCT_LIB_DIR          - oct libraries\n\n#  OCTAVE_ROOT_DIR             - octave prefix\n\n#\n\n# The macro octave_add_oct allows to create compiled modules.\n\n# octave_add_oct ( target_name\n\n#         [SOURCES] source1 [source2 ...]\n\n#         [LINK_LIBRARIES  lib1 [lib2 ...]]\n\n#         [EXTENSION ext]\n\n# )\n\n#\n\n# To install it, you can the use the variable OCTAVE_OCT_FILE_DIR as follow:\n\n#  file ( RELATIVE_PATH PKG_OCTAVE_OCT_FILE_DIR ${OCTAVE_ROOT_DIR} ${OCTAVE_OCT_FILE_DIR} )\n\n#  install (\n\n#    TARGETS target_name\n\n#    DESTINATION ${PKG_OCTAVE_OCT_FILE_DIR}\n\n#  )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2013, Julien Schueller\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice, this\n\n#    list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# The views and conclusions contained in the software and documentation are those\n\n# of the authors and should not be interpreted as representing official policies,\n\n# either expressed or implied, of the FreeBSD Project.\n\n#=============================================================================\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle REQUIRED and QUIET options\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindOOQP.cmake" : {
      "ObjectId" : "29b5cad0e0d46a9ab920b11ed2df94ac83d712eb",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TRY TO FIND THE INCLUDE DIRECTORY\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TRY TO FIND THE LIBRARIES\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependent packages, BLAS and HSL\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# print OOQP_LIBRARIES\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# SUCCESS if BOTH THE LIBRARIES AND THE INCLUDE DIRECTORIES WERE FOUND\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindOpenCL.cmake" : {
      "ObjectId" : "cf0624fa24f225510207dd7b57acf50992c59911",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  This file taken from FindOpenCL project @ http://gitorious.com/findopencl\n\n#\n\n# - Try to find OpenCL\n\n# This module tries to find an OpenCL implementation on your system. It supports\n\n# AMD / ATI, Apple and NVIDIA implementations, but shoudl work, too.\n\n#\n\n# Once done this will define\n\n#  OPENCL_FOUND        - system has OpenCL\n\n#  OPENCL_INCLUDE_DIRS  - the OpenCL include directory\n\n#  OPENCL_LIBRARIES    - link these to use OpenCL\n\n#\n\n# WIN32 should work, but is untested\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The AMD SDK currently installs both x86 and x86_64 libraries\n\n# This is only a hack to find out architecture\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# find out if the user asked for a 64-bit build, and use the corresponding \n\n# 64 or 32 bit NVIDIA library paths to the search:\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# On Win32 search relative to the library\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Unix style platforms\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# The AMD SDK currently does not place its headers\n\n# in /usr/include, therefore also search relative\n\n# to the library\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# This is often the same, so clean up\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "cmake/FindPYREPORT.cmake" : {
      "ObjectId" : "8939c68ef4fcd3c7945db6279dacb2aeb8b6a327",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindSDPA.cmake" : {
      "ObjectId" : "47c42d79e436bb2b85bdad2f5bff56f0b15ec389",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindSLICOT.cmake" : {
      "ObjectId" : "b4c33daa2a14dd4e6a921a4617346b963eacf8aa",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindSNOPT.cmake" : {
      "ObjectId" : "7defcac22ba7780dfb3a70669781d46c5e6b5d57",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindSNOPT_INTERFACE.cmake" : {
      "ObjectId" : "3933b36e3310d53dff894c7bce6b5e6f1404c2fb",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindSQIC.cmake" : {
      "ObjectId" : "36d4e5196d8c7105fd9cf24c0a58b9c1e3978133",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TRY TO FIND THE INCLUDE DIRECTORY\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindSUNDIALS.cmake" : {
      "ObjectId" : "80108f8f0a1cb7dfdeffb2a9d29d7a5a5bb92c13",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# libraries\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  sundials_cvode\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  sundials_fnvecserial\n\n#  sundials_ida\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#    message(STATUS \"Found ${LIB}: ${SUNDIALS_LIB_${LIB}}\")\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  else()\n\n#    message(STATUS \"Could not find lib${LIB}\")\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindTINYXML.cmake" : {
      "ObjectId" : "38fc529cdde4536daa7474def83790f3d41b8e2a",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get package info using pkg-config\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  HINTS $ENV{SUNDIALS}/include\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set standard flags\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindWORHP.cmake" : {
      "ObjectId" : "da29ba9c04d37a3748381bd841756af18abe7bfb",
      "LastModified" : "2018-08-07T11:55:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TRY TO FIND THE INCLUDE DIRECTORY\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindWSMP.cmake" : {
      "ObjectId" : "6f0b8f39c419be4092b2c78d054399b5576cb43e",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TRY TO FIND THE WSMP LIBRARY\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/SpellCheck.cmake" : {
      "ObjectId" : "d981ce3f50770c7ce97041addffc62b9dca6ece1",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PROJECT)\n",
        "Line" : 3,
        "CharPositionInLine" : 57
      },
      "CommentCount" : 1
    },
    "cmake/UseDoxygen.cmake" : {
      "ObjectId" : "c312614182f3631f15b9a1d8175985bcc665bd47",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Run Doxygen\n\n#\n\n# Adds a doxygen target that runs doxygen to generate the html\n\n# and optionally the LaTeX API documentation.\n\n# The doxygen target is added to the doc target as a dependency.\n\n# i.e.: the API documentation is built with:\n\n#  make doc\n\n#\n\n# USAGE: GLOBAL INSTALL\n\n#\n\n# Install it with:\n\n#  cmake ./ && sudo make install\n\n# Add the following to the CMakeLists.txt of your project:\n\n#  include(UseDoxygen OPTIONAL)\n\n# Optionally copy Doxyfile.in in the directory of CMakeLists.txt and edit it.\n\n#\n\n# USAGE: INCLUDE IN PROJECT\n\n#\n\n#  set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR})\n\n#  include(UseDoxygen)\n\n# Add the Doxyfile.in and UseDoxygen.cmake files to the projects source directory.\n\n#\n\n#\n\n# Variables you may define are:\n\n#  DOXYFILE_SOURCE_DIR - Path where the Doxygen input files are.\n\n#       Defaults to the current source and binary directory.\n\n#  DOXYFILE_OUTPUT_DIR - Path where the Doxygen output is stored. Defaults to \"doc\".\n\n#\n\n#  DOXYFILE_LATEX - Set to \"NO\" if you do not want the LaTeX documentation\n\n#       to be built.\n\n#  DOXYFILE_LATEX_DIR - Directory relative to DOXYFILE_OUTPUT_DIR where\n\n#       the Doxygen LaTeX output is stored. Defaults to \"latex\".\n\n#\n\n#  DOXYFILE_HTML_DIR - Directory relative to DOXYFILE_OUTPUT_DIR where\n\n#       the Doxygen html output is stored. Defaults to \"html\".\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Copyright (c) 2009, 2010 Tobias Rautenkranz <tobias@rautenkranz.ch>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## LaTeX\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/UseSWIGMOD.cmake" : {
      "ObjectId" : "97ea38bed50d9f62938c29106db73bc087d7e353",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - SWIG module for CMake\n\n# Defines the following macros:\n\n#   SWIG_ADD_MODULE(name language [ files ])\n\n#     - Define swig module with given name and specified language\n\n#   SWIG_LINK_LIBRARIES(name [ libraries ])\n\n#     - Link libraries to swig module\n\n# All other macros are for internal use only.\n\n# To get the actual name of the swig module,\n\n# use: ${SWIG_MODULE_${name}_REAL_NAME}.\n\n# Set Source files properties such as CPLUSPLUS and SWIG_FLAGS to specify\n\n# special behavior of SWIG. Also global CMAKE_SWIG_FLAGS can be used to add\n\n# special flags to all swig calls.\n\n# Another special variable is CMAKE_SWIG_OUTDIR, it allows one to specify\n\n# where to write all the swig generated module (swig -outdir option)\n\n# The name-specific variable SWIG_MODULE_<name>_EXTRA_DEPS may be used\n\n# to specify extra dependencies for the generated modules.\n\n# If the source file generated by swig need some special flag you can use\n\n# set_SOURCE_FILES_PROPERTIES( ${swig_generated_file_fullname}\n\n#        PROPERTIES COMPILE_FLAGS \"-bla\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2004-2009 Kitware, Inc.\n\n# Copyright 2009 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Modifications:\n\n#  SWIG_FLAGS are not only retrieved from SOURCE_FILE_PROPERTIES, but also from a global variable:\n\n#  USE_SWIG_FLAGS_${language}\n\n#  USE_SWIG_FLAGS\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Enforce cmake2.4+ style behaviour for mixed filename/full path linker directives\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Get dependencies of the generated wrapper.\n\n#\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#    message(SEND_ERROR \"Command \\\"${SWIG_EXECUTABLE} -M -MF ${swig_getdeps_depsfile} ${swig_getdeps_extra_flags} ${CMAKE_SWIG_FLAGS} -${language} -o ${genWrapper} ${swig_getdeps_include_dirs} ${swigFile}\\\" failed with output:\\n${swig_getdeps_error}\")\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remove the first line\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Clean the end of each line\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Clean beginning of each line\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# clean paths\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#\n\n# For given swig module initialize variables associated with it\n\n#\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# when swig is used without the -interface it will produce in the module.py\n\n# a 'import _modulename' statement, which implies having a corresponding\n\n# _modulename.so (*NIX), _modulename.pyd (Win32).\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#\n\n# For a given language, input file, and output file, determine extra files that\n\n# will be generated. This is internal swig macro.\n\n#\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# Take swig (*.i) file and add proper custom commands for it\n\n#\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# If CMAKE_SWIG_OUTDIR was specified then pass it to -outdir\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# it may not exist, so create it:\n",
        "Line" : 188,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# If CMAKE_SWIG_OUTDIR was specified then pass it to -outdir\n",
        "Line" : 199,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# it may not exist, so create it:\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# add the language into the name of the file (i.e. TCL_wrap)\n\n# this allows for the same .i file to be wrapped into different languages\n",
        "Line" : 213,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#message(\"Full path to source file: ${swig_source_file_fullname}\")\n\n#message(\"Full path to the output file: ${swig_generated_file_fullname}\")\n",
        "Line" : 232,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# default is c, so add c++ flag if it is c++\n",
        "Line" : 241,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "#\n\n# Create Swig module\n\n#\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# In java you want:\n\n#      System.loadLibrary(\"LIBRARY\");\n\n# then JNI will look for a library whose name is platform dependent, namely\n\n#   MacOS  : libLIBRARY.jnilib\n\n#   Windows: LIBRARY.dll\n\n#   Linux  : libLIBRARY.so\n",
        "Line" : 306,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# this is only needed for the python case where a _modulename.so is generated\n",
        "Line" : 316,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Python extension modules on Windows must have the extension \".pyd\"\n\n# instead of \".dll\" as of Python 2.5.  Older python versions do support\n\n# this suffix.\n\n# http://docs.python.org/whatsnew/ports.html#SECTION0001510000000000000000\n\n# <quote>\n\n# Windows: .dll is no longer supported as a filename extension for extension modules.\n\n# .pyd is now the only filename extension that will be searched for.\n\n# </quote>\n",
        "Line" : 318,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "#\n\n# Like target_link_libraries but for swig modules\n\n#\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "cmake/canonicalize_paths.cmake" : {
      "ObjectId" : "2461de88e42ba0ed34b7d3268941c8ca0dc93bf8",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The following code canonicalizes paths:\n\n# e.g.  converts \"foo/bar/..;foo/../foo\"   to \"foo;foo\"\n\n# When a library is present in \"foo\" directory, \"foo/bar/..;foo/../foo\" would make CMake\n\n#  complain about this library being present in two different folders,\n\n#  which would be a recipe for trouble where it not for\n\n#  the fact that these directories are really identical.\n\n#  It could be considered a workaround for a bug in CMake.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# get_filename_component(CANONICAL_PATH ${arg} REALPATH)\n\n#  REALPATH is not defined in cmake 2.6.0\n\n#\n\n# The following is a workaround:\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/embed_resource.cmake" : {
      "ObjectId" : "65bca9b9ed3cff398f2ebf0e0b5a19c84c3a6b5e",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/embed_resources.cmake" : {
      "ObjectId" : "40002527040bcd1c2e7eaa4718cf2b99942d5649",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A macro for embedding parts of the source into code\n\n#\n\n# Example:  embed_resource(\"sqic\" \"wsqic.f90\" resource_file)\n\n# \n\n# This will make available a \"const char *\" named resource_sqic in the CasADi namespace\n\n# that contains the content of \"wsqic.f90\" by generating resource_file (a header)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/language_support.cmake" : {
      "ObjectId" : "3be19919954954826cf64ce375276d6e979bf4ab",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake/modules/language_support.cmake\n\n#\n\n# Temporary additional general language support is contained within this\n\n# file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This additional function definition is needed to provide a workaround for\n\n# CMake bug 9220.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# On debian testing (cmake 2.6.2), I get return code zero when calling\n\n# cmake the first time, but cmake crashes when running a second time\n\n# as follows:\n\n#\n\n#  -- The Fortran compiler identification is unknown\n\n#  CMake Error at /usr/share/cmake-2.6/Modules/CMakeFortranInformation.cmake:7 (GET_FILENAME_COMPONENT):\n\n#    get_filename_component called with incorrect number of arguments\n\n#  Call Stack (most recent call first):\n\n#    CMakeLists.txt:3 (enable_language)\n\n#\n\n# My workaround is to invoke cmake twice.  If both return codes are zero,\n\n# it is safe to invoke ENABLE_LANGUAGE(Fortran OPTIONAL)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#message(\"DEBUG: language = ${language}\")\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Second run\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Temporary tests of the above function.\n\n#workaround_9220(CXX CXX_language_works)\n\n#message(\"CXX_language_works = ${CXX_language_works}\")\n\n#workaround_9220(CXXp CXXp_language_works)\n\n#message(\"CXXp_language_works = ${CXXp_language_works}\")\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "docs/api/Makefile" : {
      "ObjectId" : "009c67968a79f79185bc6c463ef1db0e9c83beb7",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "docs/api/examples/Makefile" : {
      "ObjectId" : "0063ab0ea491d1b72147f82d9a196918132b625e",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "docs/api/examples/ctemplate/CMakeLists.txt" : {
      "ObjectId" : "615bfae92cfd8edda05ddc00fb226e31087eb8fb",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "docs/api/sphinx/Makefile" : {
      "ObjectId" : "b6eecba6e7156945e269c4b338cb5d6b0e6c95d0",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "docs/cheatsheet/Makefile" : {
      "ObjectId" : "35eca14fffb6420b71d795ef70ee120d44e8d9dd",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "docs/documents/Makefile" : {
      "ObjectId" : "65bdb3df3a99ac78d5cbfc59296dcbb4d0b300ef",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "docs/embeddable_codegen/CMakeLists.txt" : {
      "ObjectId" : "91022aa79943c855bfbcf16000c0798b8497938d",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Possible CasADi core dependencies (depending on options)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "docs/example_pack/Makefile" : {
      "ObjectId" : "c040e74ec8e7b2d9dde003d47c36ed3fedf80b0d",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "docs/examples/CMakeLists.txt" : {
      "ObjectId" : "8ace157636d4e31e056fa4240df07f281ac05a6c",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "docs/examples/cplusplus/CMakeLists.txt" : {
      "ObjectId" : "e91a9eb64383edb2ed04ae9ff6fa6dff2845b279",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add IPOPT link directories\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Error handling\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Callback functions\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Small example on how sparsity can be propagated throw a CasADi expression\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Rosenbrock problem\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Rocket using Ipopt\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Race car using Ipopt\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# basic snopt example\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Rocket solved with MX + SX\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Parse AMPL models and solve with Ipopt\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Parse AMPL models and solve with Worhp\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Parse AMPL models and solve with KNITRO\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# rocket example using sundials and ipopt, also demonstrating linking with plugins\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Writing a multiple shooting code from scratch\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Solve linear system of equations\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Test integrators\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Parametric NLP\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Test OpenCL and show all devices\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Implicit Runge-Kutta integrator from scratch\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# DaeBuilder\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "docs/examples/cplusplus/cmake_find_package/CMakeLists.txt" : {
      "ObjectId" : "7bbb8a0e30eb99b09ea36d7babd3eb8d0fa365e0",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# export CMAKE_PREFIX_PATH=../casadi_install/casadi/cmake/\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "docs/examples/cplusplus/cmake_find_package/Makefile" : {
      "ObjectId" : "4011f589a23c14a828a14d06e5055ab07c78022f",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# CMAKE generated file: DO NOT EDIT!\n\n# Generated by \"Unix Makefiles\" Generator, CMake Version 3.5\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default target executed when no arguments are given to make.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Allow only one \"make -f Makefile2\" at a time, but pass parallelism.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=============================================================================\n\n# Special targets provided by cmake.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Disable implicit rules so canonical targets will work.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Remove some rules from gmake that .SUFFIXES does not remove.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Suppress display of executed commands.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# A target that is always out of date.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#=============================================================================\n\n# Set environment variables for the build.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The shell in which to execute make rules.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The CMake executable.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The command to remove a file.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Escaping for special characters.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The top-level source directory on which CMake was run.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# The top-level build directory on which CMake was run.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#=============================================================================\n\n# Targets provided globally by CMake.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Special rule for the target rebuild_cache\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Special rule for the target rebuild_cache\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Special rule for the target edit_cache\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Special rule for the target edit_cache\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# The main all target\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# The main clean target\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# The main clean target\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Prepare targets for installation.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Prepare targets for installation.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# clear depends\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#=============================================================================\n\n# Target rules for targets named daebuilder\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Build rule for target.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# fast build rule for target.\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#=============================================================================\n\n# Target rules for targets named casadi_error_handling\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Build rule for target.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# fast build rule for target.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#=============================================================================\n\n# Target rules for targets named callback\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Build rule for target.\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# fast build rule for target.\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#=============================================================================\n\n# Target rules for targets named propagating_sparsity\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Build rule for target.\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# fast build rule for target.\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#=============================================================================\n\n# Target rules for targets named test_linsol\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Build rule for target.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# fast build rule for target.\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# target to build an object file\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# target to build an object file\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# target to build an object file\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# target to build an object file\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# target to build an object file\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Help Target\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#=============================================================================\n\n# Special targets to cleanup operation of make.\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Special rule to run CMake to check the build system integrity.\n\n# No rule that depends on this can have commands that come from listfiles\n\n# because they might be regenerated.\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 59
    },
    "docs/users_guide/Makefile" : {
      "ObjectId" : "0195aa78395f9ba528107a264df32ab3a03f559b",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0,
      "Errorlog" : "line 15:35 token recognition error at: '\"\\newcommand{\\c'\nline 15:76 token recognition error at: '\\x'\nline 15:85 token recognition error at: '\\i'\nline 19:48 token recognition error at: '\\c'\nline 19:76 token recognition error at: '\\x'\nline 19:85 token recognition error at: '\\i'\nline 21:48 token recognition error at: '\\c'\nline 21:76 token recognition error at: '\\x'\nline 21:85 token recognition error at: '\\i'\nline 21:115 token recognition error at: '\" -jobname=casadi-users_guide\\n\\trm -f *.out *.toc #pytex_*\\n\u0000'\n"
    },
    "experimental/CMakeLists.txt" : {
      "ObjectId" : "2b0f439e28cf58dcf7d31348e8e2f83682d80c88",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add IPOPT link directories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Writing a multiple shooting code from scratch\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "external_packages/CMakeLists.txt" : {
      "ObjectId" : "47a18dfa3d74dff2f68bbf293f62658c78c4bb49",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external_packages/CSparse/CMakeLists.txt" : {
      "ObjectId" : "bcc42889193c8ef3d8223d8cc532f072c97b28fb",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external_packages/DSDP/CMakeLists.txt" : {
      "ObjectId" : "c39b9b1caaa24d5263bcc9432203edfcf4c42b43",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external_packages/blasfeo/CMakeLists.txt" : {
      "ObjectId" : "ea6a80b02c87e1122dba7c6eb73ac43d14277c02",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external_packages/casadi-sundials/CMakeLists.txt" : {
      "ObjectId" : "58d1694437b9a033d98a2b72390ac88a32a79dd4",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a alternative version of the original CMakeLists.txt\n\n# Joel Andersson\n\n# K.U. Leuven 2012, 2016\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   sundials/sundials_lapack.h\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#   cvodes/cvodes_lapack.h\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#   idas/idas_lapack.h\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#   kinsol/kinsol_lapack.h\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#   cvodes/cvodes_lapack.c\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#   idas/idas_lapack.c\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#   kinsol/kinsol_lapack.c\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "external_packages/hpmpc/CMakeLists.txt" : {
      "ObjectId" : "aad76f92f85dd562f9e43ce0a4a78702273a4745",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external_packages/qpOASES/CMakeLists.txt" : {
      "ObjectId" : "7e9217803ecaac815e4a45e3c950ab8a7b9c4106",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a alternative version of the original CMakeLists.txt\n\n# Joris Gillis\n\n# K.U. Leuven 2012\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Uncomment to bypass user-defined linear solver (requires HSL)\n\n#add_definitions(-DSOLVER_MA27)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment to bypass user-defined linear solver (requires HSL)\n\n#target_link_libraries(casadi_qpoases ${HSL_LIBRARIES})\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "external_packages/qpOASES/Makefile" : {
      "ObjectId" : "1ae785d321fc306215553bc01fc5a138cf485d90",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##\n\n##\tThis file is part of qpOASES.\n\n##\n\n##\tqpOASES -- An Implementation of the Online Active Set Strategy.\n\n##\tCopyright (C) 2007-2015 by Hans Joachim Ferreau, Andreas Potschka,\n\n##\tChristian Kirches et al. All rights reserved.\n\n##\n\n##\tqpOASES is free software; you can redistribute it and/or\n\n##\tmodify it under the terms of the GNU Lesser General Public\n\n##\tLicense as published by the Free Software Foundation; either\n\n##\tversion 2.1 of the License, or (at your option) any later version.\n\n##\n\n##\tqpOASES is distributed in the hope that it will be useful,\n\n##\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\n##\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. \n\n##\tSee the GNU Lesser General Public License for more details.\n\n##\n\n##\tYou should have received a copy of the GNU Lesser General Public\n\n##\tLicense along with qpOASES; if not, write to the Free Software\n\n##\tFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n\n##\tFilename:  Makefile\n\n##\tAuthor:    Hans Joachim Ferreau\n\n##\tVersion:   3.2\n\n##\tDate:      2007-2015\n\n##\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##\n\n##\ttargets\n\n##\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#src_aw testing\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#src_aw:\n\n#\t@cd $@; ${MAKE} -s \n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\t&& cd src_aw            && ${MAKE} -s clean && cd .. \\\n#\t&& cd debugging         && ${MAKE} -s clean && cd .. \\\n\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##\n\n##   end of file\n\n##\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "external_packages/qpOASES/src/Makefile" : {
      "ObjectId" : "bcad734806ebba51574c923f029442a44c5c95a6",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##\n\n##\tThis file is part of qpOASES.\n\n##\n\n##\tqpOASES -- An Implementation of the Online Active Set Strategy.\n\n##\tCopyright (C) 2007-2015 by Hans Joachim Ferreau, Andreas Potschka,\n\n##\tChristian Kirches et al. All rights reserved.\n\n##\n\n##\tqpOASES is free software; you can redistribute it and/or\n\n##\tmodify it under the terms of the GNU Lesser General Public\n\n##\tLicense as published by the Free Software Foundation; either\n\n##\tversion 2.1 of the License, or (at your option) any later version.\n\n##\n\n##\tqpOASES is distributed in the hope that it will be useful,\n\n##\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\n##\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n##\tSee the GNU Lesser General Public License for more details.\n\n##\n\n##\tYou should have received a copy of the GNU Lesser General Public\n\n##\tLicense along with qpOASES; if not, write to the Free Software\n\n##\tFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n\n##\tFilename:  src/Makefile\n\n##\tAuthor:    Hans Joachim Ferreau, Andreas Potschka, Christian Kirches\n\n##\tVersion:   3.2\n\n##\tDate:      2007-2015\n\n##\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##\n\n##\tflags\n\n##\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##\n\n##\ttargets\n\n##\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##\n\n##\tend of file\n\n##\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "external_packages/snopt-interface/CMakeLists.txt" : {
      "ObjectId" : "a6fdf1ae3aeb7b9f4004a48452ae0640d7bd5d88",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external_packages/tinyxml-2.6.2/CMakeLists.txt" : {
      "ObjectId" : "ea659730e8f5e6bb9a33f1ae9932f8d205bd7e86",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "misc/CMakeLists.txt" : {
      "ObjectId" : "92855ecac69d2f93ddfa5ad984d1bf2c8b99cfe9",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "swig/CMakeLists.txt" : {
      "ObjectId" : "125d37cef08e321663dd1b261c29c9252544b313",
      "LastModified" : "2018-08-07T11:55:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE: you are not allowed to generate header files with configure_file in this module.\n\n# See https://github.com/casadi/casadi/issues/646\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cmake_policy propagation rules\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This will make the swig command return an error so that \"make\" will fail,\n\n# but swig will emit the output files anyways so subsequent calls to \"make\"\n\n# will succeed. At least buildbot will report failures.\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Include the use SWIG file\n\n#include(UseSWIG)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set SWIG flags\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#set(CMAKE_SWIG_FLAGS ${CMAKE_SWIG_FLAGS} \"-fcompact\")\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "swig/extending_casadi/CMakeLists.txt" : {
      "ObjectId" : "e88c037a5818eaeb3f485964e9bc262ba05f66ed",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Simple library that shows how CasADi can be extended\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "swig/json/CMakeLists.txt" : {
      "ObjectId" : "62d8c7e1ea35e105381d766f702488b5e92bb3e1",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate SWIG wrapper\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CPACK_MONOLITHIC_INSTALL FALSE)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This will not actually work since we are in a EXCLUDE_FROM_ALL\n\n# http://cmake.3232098.n2.nabble.com/Yet-another-install-vs-exclude-from-all-thread-td4967491.html\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Pass meta information\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Breaks up a string in the form n1.n2.n3 into three parts and stores\n\n# them in major, minor, and patch.  version should be a value, not a\n\n# variable, while major, minor and patch should be variables.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# if version end on a plus, it is a late build\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "swig/linklist.txt.cmake" : {
      "ObjectId" : "17010b2f581ad6cf19d00b46a67ffd7d84547103",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "swig/matlab/CMakeLists.txt" : {
      "ObjectId" : "6bf87b16ea69af98bf62b55a643e9a19d3c6ba09",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate SWIG wrapper (for both MATLAB and Octave)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install the generated front-end to ${MATLAB_PREFIX}\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install MATLAB/Octave helper files\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MATLAB specific stuff\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Make target\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Find MATLAB\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Compile MEX file\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Octave specific stuff\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Make target\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Find Octave\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Compile MEX file\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Example of how to extend CasADi with additional features\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install the generated front-end to ${MATLAB_PREFIX}\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 13
    },
    "swig/python/CMakeLists.txt" : {
      "ObjectId" : "e4c9f6ecdcab3cda18ba389c6a3133d3724e13ae",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Workaround for OS X\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find packages\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We don't really need the libs, but the headers.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# a python library is built in the build directory inside swig/python\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Generate SWIG wrapper\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Make target\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# dlls don't allow missing symbols\n",
        "Line" : 108,
        "CharPositionInLine" : 10
      },
      "7" : {
        "Text" : "# Custom installation command for Python\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Install C++ wrapper library\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Install Python proxy classes\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Install Python proxy classes\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Install Python tools\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install Python package initialization\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Example of how to extend CasADi with additional features\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "test/Makefile" : {
      "ObjectId" : "0fe17f8b95f401afc77697bced4797e520f9fe4e",
      "LastModified" : "2018-04-12T20:22:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Each of these targets will be tested by CasADi's trunktesterbot as individual tests.\n\n# These targets must all go on one line\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set to -memcheck if you want to include a check for memory leaks\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# No memory checks\n",
        "Line" : 52,
        "CharPositionInLine" : 94
      },
      "3" : {
        "Text" : "# No memchecks because there is a memory leak in SuperLU\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# No memchecks because it leaks like hell, and is slow\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# No memchecks because it's slow\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    }
  },
  "FileTypes" : {
    "CMAKE" : 94,
    "CMAKESOURCE" : 1,
    "MAKEFILE" : 12
  },
  "ElapsedTime" : 6793
}