{
  "Repository" : "20962992",
  "Revision" : "HEAD",
  "ObjectId" : "da053a043f4843ac7ddc3f8fc72b3483e6c1a857",
  "CommitTime" : "2019-04-15T16:04:46Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "1ac1970e8877cdb5d27d29d3913fb4d7c81b82fe",
      "LastModified" : "2018-09-28T18:20:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Process code in each subdirectories\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_SUBDIRECTORY(examples EXCLUDE_FROM_ALL)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Settings.cmake" : {
      "ObjectId" : "9632c8901299bae9488e94011f120e3c62ec3cb3",
      "LastModified" : "2018-11-22T22:42:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set output directories\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Windows export symbols.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include customized FindPackage scripts\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set PIC\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include all libraries\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Options\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Need support for C++14.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add pybind11\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Setup RPath\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/FindAllDependencies.cmake" : {
      "ObjectId" : "7fcfedbd2cb348f3a6028d45f2e4994ed210c892",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MKL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include Eigen\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TBB\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# OpenCL\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# SpraseHash\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# GMP\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# MPFR\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# CGAL\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# MMG\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Qhull\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Quartet\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Triangle\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Tetgen\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Cork\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Clipper\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# libigl\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Carve\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# BSP\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# SuiteSparse\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Cholmod\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Metis\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# tinyxml2\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Lapack\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Geogram\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Draco\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# TetWild\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# openmp\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Fast winding number\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "cmake/FindBLAS.cmake" : {
      "ObjectId" : "68c4e072417b9bc434895d1feb6e89e3bc7e5548",
      "LastModified" : "2013-08-29T20:18:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find BLAS library\n\n#\n\n# This module finds an installed library that implements the BLAS\n\n# linear-algebra interface (see http://www.netlib.org/blas/).\n\n# The list of libraries searched for is mainly taken\n\n# from the autoconf macro file, acx_blas.m4 (distributed at\n\n# http://ac-archive.sourceforge.net/ac-archive/acx_blas.html).\n\n#\n\n# This module sets the following variables:\n\n#  BLAS_FOUND - set to true if a library implementing the BLAS interface\n\n#    is found\n\n#  BLAS_INCLUDE_DIR - Directories containing the BLAS header files\n\n#  BLAS_DEFINITIONS - Compilation options to use BLAS\n\n#  BLAS_LINKER_FLAGS - Linker flags to use BLAS (excluding -l\n\n#    and -L).\n\n#  BLAS_LIBRARIES_DIR - Directories containing the BLAS libraries.\n\n#     May be null if BLAS_LIBRARIES contains libraries name using full path.\n\n#  BLAS_LIBRARIES - List of libraries to link against BLAS interface.\n\n#     May be null if the compiler supports auto-link (e.g. VC++).\n\n#  BLAS_USE_FILE - The name of the cmake module to include to compile\n\n#     applications or libraries using BLAS.\n\n#\n\n# This module was modified by CGAL team:\n\n# - find libraries for a C++ compiler, instead of Fortran\n\n# - added BLAS_INCLUDE_DIR, BLAS_DEFINITIONS and BLAS_LIBRARIES_DIR\n\n# - removed BLAS95_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This macro checks for the existence of the combination of fortran libraries\n\n# given by _list.  If the combination is found, this macro checks (using the\n\n# check_function_exists macro) whether can link against that library\n\n# combination using the name of a routine given by _name using the linker\n\n# flags given by _flags.  If the combination of libraries is found and passes\n\n# the link test, LIBRARIES is set to the list of complete library paths that\n\n# have been found and DEFINITIONS to the required definitions.\n\n# Otherwise, LIBRARIES is set to FALSE.\n\n# N.B. _prefix is the prefix applied to the names of all cached variables that\n\n# are generated internally and marked advanced by this macro.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(\"DEBUG: check_fortran_libraries(${_list} in ${_path})\")\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Check for the existence of the libraries given by _list\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# search first in ${_path}\n",
        "Line" : 54,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# if not found, search in environment variables and system\n",
        "Line" : 59,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Test this combination of libraries with the Fortran/f2c interface.\n\n# We test the Fortran interface first as it is well standardized.\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Some C++ linkers require the f2c library to link with Fortran libraries.\n\n# I do not know which ones, thus I just add the f2c library if it is available.\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#message(\"DEBUG: CMAKE_REQUIRED_DEFINITIONS = ${CMAKE_REQUIRED_DEFINITIONS}\")\n\n#message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n\n# Check if function exists with f2c calling convention (ie a trailing underscore)\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# If not found, test this combination of libraries with a C interface.\n\n# A few implementations (ie ACML) provide a C interface. Unfortunately, there is no standard.\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# on failure\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#message(\"DEBUG: ${DEFINITIONS} = ${${DEFINITIONS}}\")\n\n#message(\"DEBUG: ${LIBRARIES} = ${${LIBRARIES}}\")\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#\n\n# main\n\n#\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Is it already configured?\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# reset variables\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#\n\n# If Unix, search for BLAS function in possible libraries\n\n#\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# BLAS in ATLAS library? (http://math-atlas.sourceforge.net/)\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# BLAS in PhiPACK libraries? (requires generic BLAS lib, too)\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# BLAS in Alpha CXML library?\n",
        "Line" : 181,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# BLAS in Alpha DXML library? (now called CXML, see above)\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# BLAS in Sun Performance library?\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Extra linker flag\n",
        "Line" : 219,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# BLAS in SCSL library?  (SGI/Cray Scientific Library)\n",
        "Line" : 224,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# BLAS in SGIMATH library?\n",
        "Line" : 237,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# BLAS in IBM ESSL library? (requires generic BLAS lib, too)\n",
        "Line" : 250,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "#BLAS in intel mkl 10 library? (em64t 64bit)\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "### windows version of intel mkl 10?\n",
        "Line" : 276,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "#older versions of intel mkl libs\n",
        "Line" : 289,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# BLAS in intel mkl library? (shared)\n",
        "Line" : 291,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "#BLAS in intel mkl library? (static, 32bit)\n",
        "Line" : 304,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "#BLAS in intel mkl library? (static, em64t 64bit)\n",
        "Line" : 317,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "#BLAS in acml library?\n",
        "Line" : 330,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Apple BLAS library?\n",
        "Line" : 343,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Generic BLAS library?\n\n# This configuration *must* be the last try as this library is notably slow.\n",
        "Line" : 368,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Add variables to cache\n",
        "Line" : 400,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "#message(\"DEBUG: BLAS_INCLUDE_DIR = ${BLAS_INCLUDE_DIR}\")\n\n#message(\"DEBUG: BLAS_DEFINITIONS = ${BLAS_DEFINITIONS}\")\n\n#message(\"DEBUG: BLAS_LINKER_FLAGS = ${BLAS_LINKER_FLAGS}\")\n\n#message(\"DEBUG: BLAS_LIBRARIES = ${BLAS_LIBRARIES}\")\n\n#message(\"DEBUG: BLAS_LIBRARIES_DIR = ${BLAS_LIBRARIES_DIR}\")\n\n#message(\"DEBUG: BLAS_FOUND = ${BLAS_FOUND}\")\n",
        "Line" : 412,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 37
    },
    "cmake/FindBSP.cmake" : {
      "ObjectId" : "89a01e38abbfb85999b34924c1ae306955ebf334",
      "LastModified" : "2018-09-28T18:20:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find BSP  library (http://www.gilbertbernstein.com/project_boolean.html)\n\n# The following variables are set\n\n#\n\n# BSP_FOUND\n\n# BSP_INCLUDE_DIRS\n\n# BSP_LIBRARIES\n\n#\n\n# It searches the environment variable $BSP_PATH automatically.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindCarve.cmake" : {
      "ObjectId" : "415a4f5a1421778b1b70578c7e6d9301afca6112",
      "LastModified" : "2018-09-28T18:20:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Carve library\n\n# (https://code.google.com/p/carve/)\n\n# The following variables are set\n\n#\n\n# CARVE_FOUND\n\n# CARVE_INCLUDE_DIRS\n\n# CARVE_LIBRARIES\n\n#\n\n# It searches the environment variable $CARVE_PATH automatically.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindCholmod.cmake" : {
      "ObjectId" : "8e3fa8da97ec304f07cec66b8116a7677e28d6f3",
      "LastModified" : "2018-09-28T18:20:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindClipper.cmake" : {
      "ObjectId" : "b1040bbe1dac472cbc193b307913eeab17a282a3",
      "LastModified" : "2018-09-28T18:20:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Clipper library (http://www.angusj.com/delphi/clipper.php).\n\n# The following variables are set\n\n#\n\n# CLIPPER_FOUND\n\n# CLIPPER_INCLUDE_DIRS\n\n# CLIPPER_LIBRARIES\n\n#\n\n# It searches the environment variable $CLIPPER_PATH automatically.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindCork.cmake" : {
      "ObjectId" : "6baa64b463141d8602440eee72aa44340dc1bd39",
      "LastModified" : "2018-09-28T18:20:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Cork library (https://github.com/gilbo/cork)\n\n# The following variables are set\n\n#\n\n# CORK_FOUND\n\n# CORK_INCLUDE_DIRS\n\n# CORK_LIBRARIES\n\n#\n\n# It searches the environment variable $CORK_PATH automatically.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindDraco.cmake" : {
      "ObjectId" : "3953b635c8b4531be11aa8f72f3c32dbbb2c9365",
      "LastModified" : "2018-09-28T18:20:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Finddraco\n\n#\n\n# Locates draco and sets the following variables:\n\n#\n\n# draco_FOUND\n\n# draco_INCLUDE_DIRS\n\n# draco_LIBARY_DIRS\n\n# draco_LIBRARIES\n\n# draco_VERSION_STRING\n\n#\n\n# draco_FOUND is set to YES only when all other variables are successfully\n\n# configured.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set draco_INCLUDE_DIRS\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  Extract the version string from draco_version.h.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find the library.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Store path to library.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindEigen.cmake" : {
      "ObjectId" : "c2621bd17e58e00402c302d1c62dd2a014f56fec",
      "LastModified" : "2018-09-28T18:20:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Eigen\n\n# This module searches for the Eigen C++ library.\n\n# \n\n# The module defines the following variables:\n\n#  EIGEN_INCLUDE_DIRS, where to find Eigen/Core, etc.\n\n#  EIGEN_FOUND, if false, do not try to use EIGEN.\n\n#\n\n# and the following target:\n\n#  EIGEN::Eigen\n\n#\n\n# Variables used by this module, they can change the default behavior and need\n\n# to be set before calling find_package:\n\n#\n\n#  EIGEN_ROOT_DIR - The prefered installation prefix when searching for Eigen\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Finds the include files directory\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindFastWindingNumber.cmake" : {
      "ObjectId" : "db9bd02df66de5f5ede0254314368222cf1d035e",
      "LastModified" : "2018-09-28T18:20:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find FastWindingNumber library (https://github.com/sideeffects/WindingNumber)\n\n# The following variables are set\n\n#\n\n# FAST_WINDING_NUMBER_FOUND\n\n# FAST_WINDING_NUMBER_INCLUDE_DIRS\n\n# FAST_WINDING_NUMBER_LIBRARIES\n\n#\n\n# It searches the environment variable $FAST_WINDING_NUMBER_PATH automatically.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindGMP.cmake" : {
      "ObjectId" : "0b1720b542ff5a30b32b1261cd476105116d091c",
      "LastModified" : "2018-11-22T22:42:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the GMP librairies\n\n# GMP_FOUND - system has GMP lib\n\n# GMP_INCLUDE_DIRS - the GMP include directory\n\n# GMP_LIBRARIES - Libraries needed to use GMP\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "cmake/FindGeogram.cmake" : {
      "ObjectId" : "163aca7e854dec34b100d397bdf66a46a838fa57",
      "LastModified" : "2018-09-28T18:20:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Geogram\n\n# ------------\n\n#\n\n# Find Geogram include dirs and libraries\n\n#\n\n# This module defines the following variables:\n\n#\n\n#   Geogram_FOUND        - True if geogram has been found.\n\n#   Geogram::geogram     - Imported target for the main Geogram library.\n\n#   Geogram::geogram_gfx - Imported target for Geogram graphics library.\n\n#\n\n# This module reads hints about the Geogram location from the following\n\n# environment variables:\n\n#\n\n#   GEOGRAM_INSTALL_PREFIX - Directory where Geogram is installed.\n\n#\n\n# Authors: Jeremie Dumas\n\n#          Pierre Moulon\n\n#          Bruno Levy\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This one we search in both Geogram search path and\n\n# system search path since it may be already installed\n\n# in the system\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create an imported target for Geogram \n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Interface include directory\n",
        "Line" : 74,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# Link to library file\n",
        "Line" : 79,
        "CharPositionInLine" : 16
      },
      "5" : {
        "Text" : "# Interface include directory\n",
        "Line" : 93,
        "CharPositionInLine" : 16
      },
      "6" : {
        "Text" : "# Link to library file\n",
        "Line" : 98,
        "CharPositionInLine" : 16
      },
      "7" : {
        "Text" : "# Hide variables from the default CMake-Gui options\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Some specific settings for Windows\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Default mode for Windows uses static libraries. Use this variable to\n\n# link with geogram compiled as DLLs.\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# remove warning for multiply defined symbols (caused by multiple\n\n# instanciations of STL templates)\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# remove all unused stuff from windows.h\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# do not define a min() and a max() macro, breaks\n\n# std::min() and std::max() !!\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# we want M_PI etc...\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# If we use static library, we link with the static C++ runtime.\n",
        "Line" : 136,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 15
    },
    "cmake/FindJigsaw.cmake" : {
      "ObjectId" : "a6a08e2d4a279111a6b49335b5895e2f2cd92e81",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Jigsaw library (https://github.com/dengwirda/jigsaw)\n\n# The following variables are set\n\n#\n\n# JIGSAW_FOUND\n\n# JIGSAW_INCLUDE_DIRS\n\n# JIGSAW_LIBRARIES\n\n#\n\n# It searches the environment variable $JIGSAW_PATH automatically.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindMKL.cmake" : {
      "ObjectId" : "ce82a3cd2547b9880832e3cbf23c6afe681bb608",
      "LastModified" : "2018-12-19T03:43:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#\n\n# \\file      cmake/FindMKL.cmake\n\n# \\author    J. Bakosi\n\n# \\copyright 2012-2015, Jozsef Bakosi, 2016, Los Alamos National Security, LLC.\n\n# \\brief     Find the Math Kernel Library from Intel\n\n# \\date      Thu 26 Jan 2017 02:05:50 PM MST\n\n#\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the Math Kernel Library from Intel\n\n#\n\n#  MKL_FOUND - System has MKL\n\n#  MKL_INCLUDE_DIRS - MKL include files directories\n\n#  MKL_LIBRARIES - The MKL libraries\n\n#  MKL_INTERFACE_LIBRARY - MKL interface library\n\n#  MKL_SEQUENTIAL_LAYER_LIBRARY - MKL sequential layer library\n\n#  MKL_CORE_LIBRARY - MKL core library\n\n#\n\n#  The environment variables MKLROOT and INTEL are used to find the library.\n\n#  Everything else is ignored. If MKL is found \"-DMKL_ILP64\" is added to\n\n#  CMAKE_C_FLAGS and CMAKE_CXX_FLAGS.\n\n#\n\n#  Example usage:\n\n#\n\n#  find_package(MKL)\n\n#  if(MKL_FOUND)\n\n#    target_link_libraries(TARGET ${MKL_LIBRARIES})\n\n#  endif()\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If already in cache, be silent\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(ABI \"-m64\")\n",
        "Line" : 94,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -DMKL_ILP64 ${ABI}\")\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -DMKL_ILP64 ${ABI}\")\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set MKL_FOUND to TRUE if\n\n# all listed variables are TRUE.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindMPFR.cmake" : {
      "ObjectId" : "793ddaa5668ac3357b65fd0cab5df3447ad91128",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the GMP librairies\n\n# MPFR_FOUND - system has GMP lib\n\n# MPFR_INCLUDE_DIRS - the GMP include directory\n\n# MPFR_LIBRARIES - Libraries needed to use GMP\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindMetis.cmake" : {
      "ObjectId" : "bc91802ee08d2372f81c59c1955d213506527421",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find METIS library (http://glaros.dtc.umn.edu/gkhome/METIS/METIS/overview)\n\n# The following varaibles are set\n\n#\n\n# METIS_FOUND\n\n# METIS_INCLUDE_DIRS\n\n# METIS_LIBRARIES\n\n#\n\n# It searches the following environment varaibles\n\n# $METIS_PATH, $METIS_ROOT, $METIS_INC, $METIS_LIB\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindMmg.cmake" : {
      "ObjectId" : "df18187c05134f014f1269edb3719ee1d1004cc8",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## =============================================================================\n\n##  This file is part of the mmg software package for the tetrahedral\n\n##  mesh modification.\n\n##  Copyright (c) Inria - IMB (Université de Bordeaux) - LJLL (UPMC), 2004- .\n\n##\n\n##  mmg is free software: you can redistribute it and/or modify it\n\n##  under the terms of the GNU Lesser General Public License as published\n\n##  by the Free Software Foundation, either version 3 of the License, or\n\n##  (at your option) any later version.\n\n##\n\n##  mmg is distributed in the hope that it will be useful, but WITHOUT\n\n##  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n\n##  FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public\n\n##  License for more details.\n\n##\n\n##  You should have received a copy of the GNU Lesser General Public\n\n##  License and of the GNU General Public License along with mmg (in\n\n##  files COPYING.LESSER and COPYING). If not, see\n\n##  <http://www.gnu.org/licenses/>. Please read their terms carefully and\n\n##  use this copy of the mmg distribution only if you accept them.\n\n## =============================================================================\n\n#\n\n# This package define the MMG_INCLUDE_DIR and the MMG_LIBRARY variables.  To\n\n# link with the mmg library using CMake add the following lines to your\n\n# CMakeLists.txt:\n\n#\n\n# INCLUDE(FindMmg.cmake)\n\n#\n\n# INCLUDE_DIRECTORIES(${MMG_INCLUDE_DIR})\n\n#\n\n# TARGET_LINK_LIBRARIES( ${YOUR_TARGET} ${MMG_LIBRARY})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check for mmg library\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindNumPy.cmake" : {
      "ObjectId" : "f2cf39c7d68466686e947296a1e0bcd193f20d1b",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the NumPy libraries\r\n\n# This module finds if NumPy is installed, and sets the following variables\r\n\n# indicating where it is.\r\n\n#\r\n\n# TODO: Update to provide the libraries and paths for linking npymath lib.\r\n\n#\r\n\n#  NUMPY_FOUND               - was NumPy found\r\n\n#  NUMPY_VERSION             - the version of NumPy found as a string\r\n\n#  NUMPY_VERSION_MAJOR       - the major version number of NumPy\r\n\n#  NUMPY_VERSION_MINOR       - the minor version number of NumPy\r\n\n#  NUMPY_VERSION_PATCH       - the patch version number of NumPy\r\n\n#  NUMPY_VERSION_DECIMAL     - e.g. version 1.6.1 is 10601\r\n\n#  NUMPY_INCLUDE_DIRS        - path to the NumPy include files\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#============================================================================\r\n\n# Copyright 2012 Continuum Analytics, Inc.\r\n\n#\r\n\n# MIT License\r\n\n#\r\n\n# Permission is hereby granted, free of charge, to any person obtaining\r\n\n# a copy of this software and associated documentation files\r\n\n# (the \"Software\"), to deal in the Software without restriction, including\r\n\n# without limitation the rights to use, copy, modify, merge, publish,\r\n\n# distribute, sublicense, and/or sell copies of the Software, and to permit\r\n\n# persons to whom the Software is furnished to do so, subject to\r\n\n# the following conditions:\r\n\n# \r\n\n# The above copyright notice and this permission notice shall be included\r\n\n# in all copies or substantial portions of the Software.\r\n\n# \r\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\r\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\r\n\n# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\r\n\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\r\n\n# OTHER DEALINGS IN THE SOFTWARE.\r\n\n# \r\n\n#============================================================================\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Finding NumPy involves calling the Python interpreter\r\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Convert the process output into a list\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Make sure all directory separators are '/'\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get the major and minor version numbers\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindNumericLibraries.cmake" : {
      "ObjectId" : "97d23f221d265c89dff35ab209e042929ab69c9c",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the following numeric libraries\n\n# + SuiteSparse\n\n# + Metis\n\n# + MKL\n\n# It sets the following variables\n\n# NUMERIC_LIBRARIES     - library names\n\n# NUMERIC_INCLUDE_DIRS  - path to all NUMERIC library files\n\n#\n\n# Example:\n\n# FIND_PACKAGE(NumericLibraries)\n\n# INCLUDE_DIRECTORIES(${NUMERIC_INCLUDE_DIRS})\n\n# LINK_DIRECTORIES(${NUMERIC_LIBRARY_DIRS})\n\n# TARGET_LINK_LIBRARIES(LibName ${NUMERIC_LIBRARIES})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SuiteSparse\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#IF ((DEFINED ENV{SUITESPARSE_LIB}) AND (DEFINED ENV{SUITESPARSE_INC}))\n\n#    #MESSAGE(\"SuiteSparse\")\n\n#    SET(LIBRARIES amd camd colamd ccolamd cholmod umfpack suitesparseconfig)\n\n#    LIST(APPEND NUMERIC_LIBRARIES amd camd colamd ccolamd umfpack suitesparseconfig cholmod)\n\n#    LIST(APPEND NUMERIC_LIBRARY_DIRS $ENV{SUITESPARSE_LIB})\n\n#    LIST(APPEND NUMERIC_INCLUDE_DIRS $ENV{SUITESPARSE_INC})\n\n#ELSE ((DEFINED ENV{SUITESPARSE_LIB}) AND (DEFINED ENV{SUITESPARSE_INC}))\n\n#    FIND_PACKAGE(\"Umfpack\")\n\n#    LIST(APPEND NUMERIC_LIBRARIES ${UMFPACK_LIBRARIES})\n\n#    LIST(APPEND NUMERIC_INCLUDE_DIRS ${UMFPACK_INCLUDES})\n\n#    FIND_PACKAGE(\"Cholmod\")\n\n#    LIST(APPEND NUMERIC_LIBRARIES ${CHOLMOD_LIBRARIES})\n\n#    LIST(APPEND NUMERIC_INCLUDE_DIRS ${CHOLMOD_INCLUDES})\n\n#ENDIF ((DEFINED ENV{SUITESPARSE_LIB}) AND (DEFINED ENV{SUITESPARSE_INC}))\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MKL\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#MESSAGE(\"MKL\")\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "## Metis\n\n#IF ((DEFINED ENV{METIS_LIB}) AND (DEFINED ENV{METIS_INC}))\n\n#    #MESSAGE(\"Metis\")\n\n#    LIST(APPEND NUMERIC_LIBRARIES metis)\n\n#    LIST(APPEND NUMERIC_LIBRARY_DIRS $ENV{METIS_LIB})\n\n#    LIST(APPEND NUMERIC_INCLUDE_DIRS $ENV{METIS_INC})\n\n#ENDIF ((DEFINED ENV{METIS_LIB}) AND (DEFINED ENV{METIS_INC}))\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Debug\n\n#MESSAGE(${NUMERIC_LIBRARIES})\n\n#MESSAGE(${NUMERIC_INCLUDE_DIRS})\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/FindOpenCL.cmake" : {
      "ObjectId" : "a1f25794f1ae0ae0ff685dadb8340e2e81fe601b",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenCL\n\n# This module tries to find an OpenCL implementation on your system. It supports\n\n# AMD / ATI, Apple and NVIDIA implementations, but shoudl work, too.\n\n#\n\n# Once done this will define\n\n#  OPENCL_FOUND        - system has OpenCL\n\n#  OPENCL_INCLUDE_DIRS  - the OpenCL include directory\n\n#  OPENCL_LIBRARIES    - link these to use OpenCL\n\n#\n\n# WIN32 should work, but is untested\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The AMD SDK currently installs both x86 and x86_64 libraries\n\n# This is only a hack to find out architecture\n",
        "Line" : 32,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# On Win32 search relative to the library\n",
        "Line" : 43,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Unix style platforms\n",
        "Line" : 49,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# The AMD SDK currently does not place its headers\n\n# in /usr/include, therefore also search relative\n\n# to the library\n",
        "Line" : 57,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# This is often the same, so clean up\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "cmake/FindQhull.cmake" : {
      "ObjectId" : "45bdc3489e862f91ae5620947882ab460998af6a",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Find QHULL\n\n#\n\n# This sets the following variables:\n\n# QHULL_FOUND - True if QHULL was found.\n\n# QHULL_INCLUDE_DIRS - Directories containing the QHULL include files.\n\n# QHULL_LIBRARIES - Libraries needed to use QHULL.\n\n# QHULL_DEFINITIONS - Compiler flags for QHULL.\n\n# If QHULL_USE_STATIC is specified then look for static libraries ONLY else \n\n# look for shared ones\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_definitions(\"-Dqh_QHpointer\")\n",
        "Line" : 85,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "#message(STATUS \"QHULL found (include: ${QHULL_INCLUDE_DIRS}, lib: ${QHULL_LIBRARIES})\")\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindQuartet.cmake" : {
      "ObjectId" : "d6a1d87ec14578001b11f3be3f6a670d004745f1",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Quartet library (https://github.com/crawforddoran/quartet)\n\n# The following variables are set\n\n#\n\n# QUARTET_FOUND\n\n# QUARTET_INCLUDE_DIRS\n\n# QUARTET_LIBRARIES\n\n#\n\n# It searches the environment variable $QUARTET_PATH automatically.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindSparseHash.cmake" : {
      "ObjectId" : "c5e5ee8e5185ea0bf0c607098debeee58212a88c",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find SparseHash (https://code.google.com/p/sparsehash/)\n\n# The following variables are set.\n\n#\n\n#   SPARSEHASH_FOUND\n\n#   SPARSEHASH_INCLUDE_DIRS\n\n#\n\n# and the following target:\n\n#\n\n#   SPARSEHASH\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find include directory\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindTBB.cmake" : {
      "ObjectId" : "94a7dfcc41ea4b1baf3a1aced23a2a70ecc3441b",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## ======================================================================== ##\n\n## Copyright 2009-2018 Intel Corporation                                    ##\n\n##                                                                          ##\n\n## Licensed under the Apache License, Version 2.0 (the \"License\");          ##\n\n## you may not use this file except in compliance with the License.         ##\n\n## You may obtain a copy of the License at                                  ##\n\n##                                                                          ##\n\n##     http://www.apache.org/licenses/LICENSE-2.0                           ##\n\n##                                                                          ##\n\n## Unless required by applicable law or agreed to in writing, software      ##\n\n## distributed under the License is distributed on an \"AS IS\" BASIS,        ##\n\n## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. ##\n\n## See the License for the specific language governing permissions and      ##\n\n## limitations under the License.                                           ##\n\n## ======================================================================== ##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# workaround for parentheses in variable name / CMP0053\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "##############################################################\n\n# Install TBB\n\n##############################################################\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindTetWild.cmake" : {
      "ObjectId" : "9d4b796a662a2eb463b3e5a7a5f4dd487e237163",
      "LastModified" : "2019-03-12T15:40:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find TetWild\n\n# This module searches for TetWild library (https://github.com/Yixin-Hu/TetWild)\n\n#\n\n# The module defines the following variables:\n\n#   TETWILD_FOUND:        Defined only if TetWild is found.\n\n#   TETWILD_INCLUDE_DIRS: The include directory containing `tetwild.h`\n\n#   TETWILD_LIBRARY:      The full path of TetWild library.\n\n#\n\n# It searches the environment variable $TETWILD_PATH automatically.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindTetgen.cmake" : {
      "ObjectId" : "d30273b0f3d04f7842ae639e74ce9015b77de2ea",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find tetgen library (http://wias-berlin.de/software/tetgen/)\n\n# The following variables are set\n\n#\n\n# TETGEN_FOUND\n\n# TETGEN_INCLUDE_DIRS\n\n# TETGEN_LIBRARIES\n\n#\n\n# It searches the environment variable $TETGEN_PATH automatically.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindTriangle.cmake" : {
      "ObjectId" : "124bb7b284f83a1aecefee5d5cca287a7fa0083f",
      "LastModified" : "2019-03-12T15:40:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Jonathan Shewchuk's Triangle\n\n# (http://www.cs.cmu.edu/~quake/triangle.html)\n\n# The following variables are set.\n\n#\n\n# TRIANGLE_FOUND\n\n# TRIANGLE_INCLUDE_DIRS\n\n# TRIANGLE_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find include directory.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard package handling\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindUmfpack.cmake" : {
      "ObjectId" : "1cd6d58e762d2d5fe1e85256cf8315b4ce87dc45",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#else (AMD_LIBRARY)\n\n#  set(UMFPACK_LIBRARIES FALSE)\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#else (COLAMD_LIBRARY)\n\n#  set(UMFPACK_LIBRARIES FALSE)\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/Findlibigl.cmake" : {
      "ObjectId" : "b670baa4881410d1b82d18e27230ab0da90dab5a",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find libigl (http://igl.ethz.ch/projects/libigl/)\n\n# The following variables are set\n\n#\n\n# LIBIGL_FOUND\n\n# LIBIGL_INCLUDE_DIRS\n\n#\n\n# It searches the environment variable $LIBIGL_PATH\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Findtinyxml2.cmake" : {
      "ObjectId" : "2699ef76873deb0f3cbe2bdff53659a49d626a8c",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find TINYXML2 library (https://github.com/gilbo/TINYXML2)\n\n# The following variables are set\n\n#\n\n# TINYXML2_FOUND\n\n# TINYXML2_INCLUDE_DIRS\n\n# TINYXML2_LIBRARIES\n\n#\n\n# It searches the environment variable $TINYXML2_PATH automatically.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/GenerateDependencyTargets.cmake" : {
      "ObjectId" : "52a6af4f83e0a2b4c4fc1f89d5b6092252667971",
      "LastModified" : "2019-03-12T15:40:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# It seems CGAL does not capture this flag in ${CGAL_DEFINITIONS}...\n",
        "Line" : 208,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "docs/Makefile" : {
      "ObjectId" : "c506e0c86ee9717acd6287777c964b2ce027fa42",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "python/CMakeLists.txt" : {
      "ObjectId" : "0999650f5a1d310e278ca6f4f3b1238682b7c101",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "c67442b5ff37113b7163a46d60d30ea4439f55a4",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add executable and library\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Google sparse/dense hash\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "7f6cf353e73bb42ff6214a0e463bea80362cc240",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add googletest googlemock support.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create unit test interface target.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ADD_SUBDIRECTORY(learning_tests)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/external/gmock-1.7.0/CMakeLists.txt" : {
      "ObjectId" : "572d0444bf14834b1fde7f3e7398638cf4e4b7ce",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Mock.\n\n#\n\n# To run the tests for Google Mock itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A directory to find Google Test sources.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Google Test also calls hermetic setup functions from add_subdirectory,\n\n# although its changes will not affect things at the current scope.\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gmock_SOURCE_DIR} and to the root binary directory as\n\n# ${gmock_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Instructs CMake to process Google Test's CMakeLists.txt and add its\n\n# targets to the current scope.  We are placing Google Test's binary\n\n# directory in a subdirectory of our own as VC compilation may break\n\n# if they are the same (the default).\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Although Google Test's CMakeLists.txt calls this function, the\n\n# changes there don't affect the current scope.  Therefore we have to\n\n# call it again here.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# from ${gtest_dir}/cmake/internal_utils.cmake\n",
        "Line" : 56,
        "CharPositionInLine" : 30
      },
      "10" : {
        "Text" : "# Adds Google Mock's and Google Test's header directories to the search path.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This directory is needed to build directly from Google\n\n# Test sources.\n",
        "Line" : 62,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gmock & gmock_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Google Mock libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that Google Mock can be compiled by\n\n# a user aggressive about warnings.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################################\n\n#\n\n# Google Mock's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Mock itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gmock_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgmock_build_tests=ON flag when running cmake.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# gmock_all_test is commented to save time building and running tests.\n\n# Uncomment if necessary.\n\n# cxx_test(gmock_all_test gmock_main)\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Tests that a binary can be built with Google Mock as a shared library.  On\n\n# some system configurations, it may not possible to run the binary without\n\n# knowing more details about the system configurations. We do not try to run\n\n# this binary. To get a more robust shared library coverage, configure with\n\n# -DBUILD_SHARED_LIBS=ON.\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 21
    },
    "tests/external/gmock-1.7.0/Makefile.am" : {
      "ObjectId" : "0eb7bd8f342e94ff8e8c74834d740cf7abd4add8",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We may need to build our internally packaged gtest. If so, it will be\n\n# included in the 'subdirs' variable.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is generated by the configure script, so clean it for distribution.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build rules for tests. Automake's naming for some of these variables isn't\n\n# terribly obvious, so this is a brief reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This exercises all major components of Google Mock.  It also\n\n# verifies that libgmock works.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This tests using Google Mock in multiple translation units.  It also\n\n# verifies that libgmock_main and libgmock work.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Tests that fused gmock files compile and work.\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Google Mock source files that we don't compile directly.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C++ tests that we don't compile using autotools.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Python tests, which we don't run using autotools.\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Nonstandard package files for distribution.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Pump scripts for generating Google Mock headers.\n\n# TODO(chandlerc@google.com): automate the generation of *.h from *.h.pump.\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Script for fusing Google Mock and Google Test source files.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# The Google Mock Generator tool from the cppclean project.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# CMake scripts.\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Microsoft Visual Studio 2005 projects.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Microsoft Visual Studio 2010 projects.\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# gmock_test.cc does not really depend on files generated by the\n\n# fused-gmock-internal rule.  However, gmock_test.o does, and it is\n\n# important to include test/gmock_test.cc as part of this rule in order to\n\n# prevent compiling gmock_test.o until all dependent files have been\n\n# generated.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# TODO(vladl@google.com): Find a way to add Google Tests's sources here.\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Mock can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "tests/external/gmock-1.7.0/gtest/CMakeLists.txt" : {
      "ObjectId" : "57470c84f3af0772c411bbb8bbbb41b515747ecd",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 52,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# The C++ Standard specifies tuple_element<int, class>.\n\n# Yet MSVC 10's <utility> declares tuple_element<size_t, class>.\n\n# That declaration conflicts with our own standard-conforming\n\n# tuple implementation.  Therefore using our own tuple with\n\n# MSVC 10 doesn't compile.\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "tests/external/gmock-1.7.0/gtest/Makefile.am" : {
      "ObjectId" : "9c96b42572ca943d5fb4d4303842f12a545e8523",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "tests/external/gmock-1.7.0/gtest/cmake/internal_utils.cmake" : {
      "ObjectId" : "8cb21894cebacd5bdfb598c8663a5be50325d70f",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 107,
        "CharPositionInLine" : 32
      },
      "17" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 31
    },
    "tests/external/gmock-1.7.0/gtest/make/Makefile" : {
      "ObjectId" : "9ac74493ba55246597e90b898fae847ae358eab5",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building Google Test and using it in user\n\n# tests.  Please tweak it to suit your environment and project.  You\n\n# may want to move it to your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GTEST_HEADERS, which you can use in your own targets\n\n# but shouldn't modify.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test's header directory as a system directory, such that\n\n# the compiler doesn't generate warnings in Google Test headers.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Builds gtest.a and gtest_main.a.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For simplicity and to avoid depending on Google Test's\n\n# implementation details, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Test\n\n# compiles fast and for ordinary users its source rarely changes.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Builds a sample test.  A test should link with either gtest.a or\n\n# gtest_main.a, depending on whether it defines its own main()\n\n# function.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "tests/external/gmock-1.7.0/gtest/scripts/test/Makefile" : {
      "ObjectId" : "cdff584637b7a6e9df1fa43ce8f588c43815e561",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A Makefile for fusing Google Test and building a sample test against it.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make check  - makes everything and runs the built sample test.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Points to the root of fused Google Test, relative to where this file is.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paths to the fused gtest files.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find the sample test.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find gtest_main.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# We have no idea here whether pthreads is available in the system, so\n\n# disable its use.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "tests/external/gmock-1.7.0/make/Makefile" : {
      "ObjectId" : "c1cc0e90f172b9f6a48fa9f74d72342d1d2e2585",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building both Google Mock and Google Test and\n\n# using them in user tests.  This file is self-contained, so you don't\n\n# need to use the Makefile in Google Test's source tree.  Please tweak\n\n# it to suit your environment and project.  You may want to move it to\n\n# your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GMOCK_HEADERS and GTEST_HEADERS, which you can use\n\n# in your own targets but shouldn't modify.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file, or if you want to use\n\n# a copy of Google Test at a different location.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Points to the root of Google Mock, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test and Google Mock's header directories as system\n\n# directories, such that the compiler doesn't generate warnings in\n\n# these headers.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# All Google Mock headers. Note that all Google Test headers are\n\n# included here too, as they are #included by Google Mock headers.\n\n# Usually you shouldn't change this definition.\t\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Builds gmock.a and gmock_main.a.  These libraries contain both\n\n# Google Mock and Google Test.  A test should link with either gmock.a\n\n# or gmock_main.a, depending on whether it defines its own main()\n\n# function.  It's fine if your test only uses features from Google\n\n# Test (and not Google Mock).\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# For simplicity and to avoid depending on implementation details of\n\n# Google Mock and Google Test, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Mock and\n\n# Google Test compile fast and for ordinary users their source rarely\n\n# changes.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Builds a sample test.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "tests/learning_tests/CMakeLists.txt" : {
      "ObjectId" : "0b359f9916458651046766814ac7daeb3264de8e",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/learning_tests/eigen/CMakeLists.txt" : {
      "ObjectId" : "7ee4c9544ae02104c6c3e159c71ae7a59807021a",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/learning_tests/opencl/CMakeLists.txt" : {
      "ObjectId" : "f431926594fb2ae8511c035dfd198e67684b8817",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define kernel path\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/learning_tests/swig/CMakeLists.txt" : {
      "ObjectId" : "3da5845f28e71a55041a8e1bc18a0c901d969dca",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add swig wrapper for the library\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find python\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find numpy\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add eigen wrapper\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Generate wrapper for python\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "tests/learning_tests/swig_eigen/CMakeLists.txt" : {
      "ObjectId" : "3efc253a3c4f81b099023e8bf071aeec0bb98e91",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add swig wrapper for the library\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find python\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find numpy\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add eigen wrapper\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Generate wrapper for python\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "tests/src/CMakeLists.txt" : {
      "ObjectId" : "d64cf4bcfeda66213a6e18ac675f4c6dfff8205e",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/src/Others/CMakeLists.txt" : {
      "ObjectId" : "472f0f37142b3e9b2995f045fe1dc1bb3fa0862c",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include headers\n\n#INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hash Grid Profiler\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/tools/Assembler/CMakeLists.txt" : {
      "ObjectId" : "82d7c509b427ab2bd578e2f6d8fbe68e9c227156",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/tools/BVH/CMakeLists.txt" : {
      "ObjectId" : "b62fdcac5211048d92871768c7c97a2aabcf4d6d",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/tools/Boolean/CMakeLists.txt" : {
      "ObjectId" : "d76a13725ac068766e6190013fea7432d41a5489",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/tools/CGAL/CMakeLists.txt" : {
      "ObjectId" : "64726f4caa3680978a77378910c5282b67c10649",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/tools/CMakeLists.txt" : {
      "ObjectId" : "913b58ab6fc0065b527b7d9fe5a65330d169cfb5",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#IF (TARGET envelope)\n\n#    ADD_SUBDIRECTORY(Envelope)\n\n#    LIST(APPEND TARGET_MODULE_TESTS envelope_tests)\n\n#ENDIF (TARGET envelope)\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/tools/Compression/CMakeLists.txt" : {
      "ObjectId" : "18980151619046b582b59c7a952587f4ae100d55",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/tools/ConvexHull/CMakeLists.txt" : {
      "ObjectId" : "868580cbfb380d5fb127e2f338dc0a40c77a5bc5",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/tools/EigenUtils/CMakeLists.txt" : {
      "ObjectId" : "42e855e9af70ccf7b7a755cb8b00d7a1ac3f1611",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/tools/Envelope/CMakeLists.txt" : {
      "ObjectId" : "88bf70f2aaa52dcfd1843039a1fda4c0bf5bc33e",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ADD_CUSTOM_COMMAND(TARGET envelope_tests POST_BUILD COMMAND\n\n#    \"${CMAKE_CURRENT_SOURCE_DIR}/unit_test_driver.py\")\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/tools/Geogram/CMakeLists.txt" : {
      "ObjectId" : "36531ff48300ff7c5f7333c9254caee338734476",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/tools/IGL/CMakeLists.txt" : {
      "ObjectId" : "002fdaa72c0921d8cdf24b840d60f0df6dbf1ad0",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/tools/MeshUtils/CMakeLists.txt" : {
      "ObjectId" : "5b358fbbcab9bf4c8b83af41424d1b95923dccde",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/tools/Predicates/CMakeLists.txt" : {
      "ObjectId" : "68af82d866882ff6d24fa5a85d67356a018279be",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/tools/SparseSolver/CMakeLists.txt" : {
      "ObjectId" : "9ec06ae5a20fd3e1965be0488dd00d94e971845a",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/tools/TetGen/CMakeLists.txt" : {
      "ObjectId" : "a3f78ce541b8d0ec74bcc510af40d94025229797",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/tools/Tetrahedralization/CMakeLists.txt" : {
      "ObjectId" : "3f04b1ab7ffdfacf45a31975afcbb63efe066e49",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/tools/Triangle/CMakeLists.txt" : {
      "ObjectId" : "2fac22682df6ffb88714b58b6d5b35bbeecef093",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/tools/Triangulation/CMakeLists.txt" : {
      "ObjectId" : "4282a817e272dcef5b3b3b8fb56466679d36ec38",
      "LastModified" : "2019-03-12T15:40:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/tools/Wires/CMakeLists.txt" : {
      "ObjectId" : "54e0f1240667b84ef0e400d99f74d6768715aec3",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third_party/CMakeLists.txt" : {
      "ObjectId" : "c5dfbc65c0f112a328daeb8deb6e040ef1dda79a",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set output directories\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set install directory\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# RPath\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++11\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set position independent build\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CCache support.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Both eigen and qhull uses INCLUDE_INSTALL_DIR, unset to avoid collision.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "third_party/cmake/TetWild.cmake" : {
      "ObjectId" : "83e8107b1c3c20e26d66a1ed7ec3e8f08fae3efa",
      "LastModified" : "2019-03-12T15:40:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find TetWild and build it as part of the current build.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third_party/cmake/geogram.cmake" : {
      "ObjectId" : "dc374fd36af511707de17cffd78bd860f5dd3fff",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\r\n\n# Find Geogram and build it as part of the current build\r\n\n################################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\r\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################################################\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################################################\r\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# remove warning for multiply defined symbols (caused by multiple\r\n\n# instanciations of STL templates)\r\n\n#target_compile_options(geogram INTERFACE /wd4251)\r\n",
        "Line" : 61,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# remove all unused stuff from windows.h\r\n\n# target_compile_definitions(geogram INTERFACE -DWIN32_LEAN_AND_MEAN)\r\n\n# target_compile_definitions(geogram INTERFACE -DVC_EXTRALEAN)\r\n",
        "Line" : 65,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# do not define a min() and a max() macro, breaks\r\n\n# std::min() and std::max() !!\r\n",
        "Line" : 69,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# we want M_PI etc...\r\n",
        "Line" : 73,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# If we use static library, we link with the static C++ runtime.\r\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "third_party/cmake/jigsaw.cmake" : {
      "ObjectId" : "d0b135f26fcd4f0818c6d783f6292c5bbf048035",
      "LastModified" : "2019-03-12T15:40:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Assembler/Assemblers/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Assembler/CMakeLists.txt" : {
      "ObjectId" : "18fb4d388762fd6a7668c7c633d9944bbcd5e51a",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Assembler/Elements/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Assembler/FESetting/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Assembler/Materials/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Assembler/Math/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Assembler/Mesh/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Assembler/ShapeFunctions/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/BVH/CGAL/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/BVH/CMakeLists.txt" : {
      "ObjectId" : "fc5514b577d0a339a90ac696cb20d032f0d7e8f2",
      "LastModified" : "2019-03-12T15:40:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/BVH/Geogram/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/BVH/IGL/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Boolean/BSP/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Boolean/CGAL/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Boolean/CMakeLists.txt" : {
      "ObjectId" : "f5178e001dc256caf1627532e2ff1e3bb7484ce5",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/Boolean/Carve/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Boolean/Clipper/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Boolean/Cork/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Boolean/IGL/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/CGAL/CMakeLists.txt" : {
      "ObjectId" : "37e04e5074d9243f48e7359dec1f0cfdf8153643",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "e0e15f8b899003d0a792c78830688003f8f08305",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Depreciated tools\n\n#ADD_SUBDIRECTORY(OpenCL)\n\n#ADD_SUBDIRECTORY(EigenUtils)\n\n#ADD_SUBDIRECTORY(Envelope)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/Compression/CMakeLists.txt" : {
      "ObjectId" : "b9d2271457f62f00236137821fd8ea1b75b3af50",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/Compression/Draco/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/ConvexHull/CGAL/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/ConvexHull/CMakeLists.txt" : {
      "ObjectId" : "3815e8107ccd955c315fd5372840e9863932e05a",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/ConvexHull/Qhull/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/ConvexHull/TetGen/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/ConvexHull/Triangle/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/EigenUtils/CMakeLists.txt" : {
      "ObjectId" : "c054cf0977726ab73081cdfdbb7bffc321d1fa7f",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/Envelope/CMakeLists.txt" : {
      "ObjectId" : "7e868ea4d57b9e88709723233daecb4b391dc7c5",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include this directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ADD_LIBRARY(lib_envelope SHARED ${SRC_FILES} ${INC_FILES})\n\n#SET_TARGET_PROPERTIES(lib_envelope PROPERTIES OUTPUT_NAME \"envelope\")\n\n#TARGET_LINK_LIBRARIES(lib_envelope Mesh lib_MeshUtils)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tools/Geogram/CMakeLists.txt" : {
      "ObjectId" : "b24a3022c7cfa28ada366091df19510a4697d1f4",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/IGL/CMakeLists.txt" : {
      "ObjectId" : "eac3b5f67bb485516cf2233a5d2e18a57366619e",
      "LastModified" : "2019-03-25T04:49:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/MeshUtils/CMakeLists.txt" : {
      "ObjectId" : "0a1a54a83e1c76b36d7aa382a3247e16a215d367",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/OpenCL/CMakeLists.txt" : {
      "ObjectId" : "c16ea7c61afa8f9457faa21267759156528095d9",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OpenCL\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Boudle lib into a single target.\n\n# To build it, one can just \"make opencl_wrapper\"\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/OuterHull/CMakeLists.txt" : {
      "ObjectId" : "6761527256709c1f22a882deda438de1fa13feee",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/OuterHull/IGL/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Predicates/CMakeLists.txt" : {
      "ObjectId" : "71295dbf00e9897a83367ef772013bc9b6d7364e",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/SelfIntersection/CMakeLists.txt" : {
      "ObjectId" : "98354d0ea36140e0e729a499a2489a032929c4d0",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/SelfIntersection/IGL/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/SparseSolver/CMakeLists.txt" : {
      "ObjectId" : "3fc933fe0689c5fb83a0c6fd3946ef78f911b9ee",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/TetGen/CMakeLists.txt" : {
      "ObjectId" : "02c651f865f8ee287f879888cd2f4d2dd5d68bf0",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/Tetrahedralization/CGAL/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Tetrahedralization/CMakeLists.txt" : {
      "ObjectId" : "a2a566af3acae395d830603ec3fa4dc2b14c8cd7",
      "LastModified" : "2019-03-25T04:49:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/Tetrahedralization/Geogram/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Tetrahedralization/MMG/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Tetrahedralization/Quartet/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Tetrahedralization/TetGen/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Tetrahedralization/TetWild/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Triangle/CMakeLists.txt" : {
      "ObjectId" : "fc7d9a92b87e4633b25803e96a284f9d2306e1a0",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Triangulation/CGAL/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Triangulation/CMakeLists.txt" : {
      "ObjectId" : "ddbff1d55a661ffda0dad5d3112ad0ebcff8af8b",
      "LastModified" : "2019-03-25T04:49:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/Triangulation/Geogram/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Triangulation/IGL/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Triangulation/Jigsaw/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2018-12-13T03:00:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Triangulation/MMG/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2019-03-25T04:49:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Triangulation/ShewchukTriangle/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2019-03-25T04:49:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/WindingNumber/CMakeLists.txt" : {
      "ObjectId" : "68c928e3ca32cd409f9a765cd6401a25816310f6",
      "LastModified" : "2019-03-25T04:49:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/WindingNumber/FastWindingNumber/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2019-03-25T04:49:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/WindingNumber/IGL/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2019-03-25T04:49:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Wires/Attributes/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2019-03-25T04:49:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Wires/CMakeLists.txt" : {
      "ObjectId" : "2aa01bb43a476a96b3d3db685a97315d396678b9",
      "LastModified" : "2019-03-25T04:49:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Wires/Inflator/CMakeLists.txt" : {
      "ObjectId" : "11e9e807ab329b0af7814ae6ecc7002d4e821b03",
      "LastModified" : "2019-03-25T04:49:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Wires/Interfaces/CMakeLists.txt" : {
      "ObjectId" : "11e9e807ab329b0af7814ae6ecc7002d4e821b03",
      "LastModified" : "2019-03-25T04:49:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Wires/Misc/CMakeLists.txt" : {
      "ObjectId" : "1cbf9946a0e126015dc24433e5efc7d5b9e7e4cb",
      "LastModified" : "2019-03-25T04:49:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Wires/Parameters/CMakeLists.txt" : {
      "ObjectId" : "11e9e807ab329b0af7814ae6ecc7002d4e821b03",
      "LastModified" : "2019-03-25T04:49:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Wires/Tiler/CMakeLists.txt" : {
      "ObjectId" : "11e9e807ab329b0af7814ae6ecc7002d4e821b03",
      "LastModified" : "2019-03-25T04:49:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/Wires/WireNetwork/CMakeLists.txt" : {
      "ObjectId" : "11e9e807ab329b0af7814ae6ecc7002d4e821b03",
      "LastModified" : "2019-03-25T04:49:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 136,
    "MAKEFILE" : 4,
    "AUTOMAKE" : 2
  },
  "ElapsedTime" : 1945
}