{
  "Repository" : "14058359",
  "Revision" : "HEAD",
  "ObjectId" : "889ba52baf0f3c0616f515420593dc66d41c2c9f",
  "CommitTime" : "2015-08-15T22:14:00Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "372274d8a7428ae7a950143f45f85c09e1cb3122",
      "LastModified" : "2015-06-25T16:28:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If the user specifies -DCMAKE_BUILD_TYPE on the command line, take their\n\n# definition and dump it in the cache along with proper documentation, otherwise\n\n# set MAKE_BUILD_TYPE to Debug prior to calling PROJECT()\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Project name\n\n###############################################################################\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make macs happy\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# determine platform - this is used to replace @PLATFORM@ in the various\n\n# export.h.in files.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Create vcproj.user file for Visual Studio to set debug working directory\n\n# correctly.\n\n# (Thanks David Avedissian)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###############################################################################\n\n# set output locations\n\n###############################################################################\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###############################################################################\n\n# compiler definitions and flags\n\n###############################################################################\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###############################################################################\n\n# D compiler (experimental)\n\n###############################################################################\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###############################################################################\n\n# generate missing folders and files\n\n###############################################################################\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###############################################################################\n\n# set where the export.h template file is\n\n###############################################################################\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###############################################################################\n\n# Dependency settings\n\n###############################################################################\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# utility library and plugin manager header files are globally accessible\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "framework/CMakeLists.txt" : {
      "ObjectId" : "aa61dbf2183af9c3783b6aea5328beb918349bce",
      "LastModified" : "2015-05-16T02:14:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# compiler flags for this library\n\n###############################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# generate config.h for this library\n\n###############################################################################\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# source files and library definition\n\n###############################################################################\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The library is being built\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###############################################################################\n\n# utility library\n\n###############################################################################\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###############################################################################\n\n# install targets\n\n###############################################################################\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# only install if shared library\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "lightship/CMakeLists.txt" : {
      "ObjectId" : "dcffee449553a6e64f5ec23764e7bbeb833d0890",
      "LastModified" : "2015-06-25T16:28:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# compiler flags for this project\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# source files and runtime definition\n\n###############################################################################\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# generates the correct project files for visual studio, setting the correct\n\n# debug working directory and other stuff\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n# generate config.h and export.h\n\n###############################################################################\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###############################################################################\n\n# install targets\n\n###############################################################################\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "plugins/CMakeLists.txt" : {
      "ObjectId" : "bf677668914e8a418ea086a1049f2ae798c81001",
      "LastModified" : "2015-04-08T01:32:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# D plugins\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/core/CMakeLists.txt" : {
      "ObjectId" : "c6adc4bbeb41c90f59665f4e4ce8c9b5b28e0913",
      "LastModified" : "2015-08-07T22:46:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/input/CMakeLists.txt" : {
      "ObjectId" : "962ffe1bb1db8a57b839e6ebbe09f34e9bbdb17c",
      "LastModified" : "2015-05-16T02:14:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# compiler flags for this project\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# generate config.h for this plugin\n\n###############################################################################\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# source files and library definition\n\n###############################################################################\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust output name to not have the \"lib\" prefix and insert version number\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ensure plugin is built before lightship\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this library is being built\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###############################################################################\n\n# copy plugin to plugins/ folder after build\n\n###############################################################################\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###############################################################################\n\n# link lightship utility and framework libraries\n\n###############################################################################\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###############################################################################\n\n# install targets\n\n###############################################################################\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "plugins/core/menu/CMakeLists.txt" : {
      "ObjectId" : "1c6c60e558c243069bbcd72dd99d8c655bbf4843",
      "LastModified" : "2015-05-16T02:14:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# compiler flags for this project\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# generate config.h for this plugin\n\n###############################################################################\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# source files and library definition\n\n###############################################################################\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust output name to not have the \"lib\" prefix and insert version number\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ensure plugin is built before lightship\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this library is being built\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###############################################################################\n\n# copy plugin to plugins/ folder after build\n\n###############################################################################\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###############################################################################\n\n# link lightship utility and framework libraries\n\n###############################################################################\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###############################################################################\n\n# dependent on renderer_gl and yaml\n\n###############################################################################\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###############################################################################\n\n# install targets\n\n###############################################################################\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "plugins/core/python/CMakeLists.txt" : {
      "ObjectId" : "c972bb766d32209d7e53fb2c15a78215c844939d",
      "LastModified" : "2015-08-15T22:14:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# compiler flags for this project\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# generate config.h and export.h for this plugin\n\n###############################################################################\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# source files and library definition\n\n###############################################################################\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust output name to not have the \"lib\" prefix and insert version number\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ensure plugin is built before lightship\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this library is being built\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###############################################################################\n\n# copy plugin to plugins/ folder after build\n\n###############################################################################\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###############################################################################\n\n# link lightship utility and plugin framework\n\n###############################################################################\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###############################################################################\n\n# python\n\n###############################################################################\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###############################################################################\n\n# install targets\n\n###############################################################################\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "plugins/core/renderer_gl/CMakeLists.txt" : {
      "ObjectId" : "306dd86d0dd5ad961b23750bd2433d27b233c2a5",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MinGW always builds position independent code\n",
        "Line" : 2,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : "# MinGW always builds position independent code\n",
        "Line" : 7,
        "CharPositionInLine" : 19
      },
      "2" : {
        "Text" : "# needs to be added before setting additional compiler flags\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n# compiler flags for this project\n\n###############################################################################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###############################################################################\n\n# generate config.h for this plugin\n\n###############################################################################\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###############################################################################\n\n# source files and library definition\n\n###############################################################################\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# adjust output name to not have the \"lib\" prefix and insert version number\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ensure plugin is built before lightship\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# this library is being built\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###############################################################################\n\n# copy plugin to plugins/ folder after build\n\n###############################################################################\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###############################################################################\n\n# GLFW\n\n###############################################################################\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###############################################################################\n\n# GLEW\n\n###############################################################################\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "###############################################################################\n\n# OpenGL\n\n###############################################################################\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###############################################################################\n\n# freetype\n\n###############################################################################\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "###############################################################################\n\n# stb\n\n###############################################################################\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "###############################################################################\n\n# link lightship utility and framework libraries\n\n###############################################################################\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "###############################################################################\n\n# install targets\n\n###############################################################################\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "plugins/core/renderer_gl/ext/CMakeLists.txt" : {
      "ObjectId" : "81e32671d70bf623cce86ba19309bbd050edd689",
      "LastModified" : "2015-01-01T14:11:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/core/renderer_gl/ext/GL/CMakeLists.txt" : {
      "ObjectId" : "fe1b3d468ebb9d5b1113a6b7d2521997a806a69a",
      "LastModified" : "2015-08-07T22:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### GLFW ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### GLEW ###\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/core/renderer_gl/ext/GL/glew-1.9.0/Makefile" : {
      "ObjectId" : "c0771498a3e720a9600d287b302124a8db33b204",
      "LastModified" : "2014-12-14T18:17:55Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!gmake\r\n\n## The OpenGL Extension Wrangler Library\r\n\n## Copyright (C) 2002-2008, Milan Ikits <milan ikits[]ieee org>\r\n\n## Copyright (C) 2002-2008, Marcelo E. Magallon <mmagallo[]debian org>\r\n\n## Copyright (C) 2002, Lev Povalahev\r\n\n## All rights reserved.\r\n\n## \r\n\n## Redistribution and use in source and binary forms, with or without \r\n\n## modification, are permitted provided that the following conditions are met:\r\n\n## \r\n\n## * Redistributions of source code must retain the above copyright notice, \r\n\n##   this list of conditions and the following disclaimer.\r\n\n## * Redistributions in binary form must reproduce the above copyright notice, \r\n\n##   this list of conditions and the following disclaimer in the documentation \r\n\n##   and/or other materials provided with the distribution.\r\n\n## * The name of the author may be used to endorse or promote products \r\n\n##   derived from this software without specific prior written permission.\r\n\n##\r\n\n## THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" \r\n\n## AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE \r\n\n## IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n\n## ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE \r\n\n## LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR \r\n\n## CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \r\n\n## SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n\n## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n\n## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n\n## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\r\n\n## THE POSSIBILITY OF SUCH DAMAGE.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To disable stripping of binaries either:\r\n\n#   - use STRIP= on gmake command-line\r\n\n#   - edit this makefile to set STRIP to the empty string\r\n\n#\r\n\n# To disable symlinks:\r\n\n#   - use LN= on gmake command-line\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GLEW shared and static libraries\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# GLEW MX static and shared libraries\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# GLEW utility programs\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install targets\r\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# runtime\r\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# development files\r\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# runtime\r\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# development files\r\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Distributions\r\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "plugins/core/renderer_gl/ext/GL/glew-1.9.0/auto/Makefile" : {
      "ObjectId" : "065e5c083b468b5c866af06217bd8184c93f3522",
      "LastModified" : "2014-12-14T18:17:55Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "## Copyright (C) 2002-2008, Marcelo E. Magallon <mmagallo[]debian org>\r\n\n## Copyright (C) 2002-2008, Milan Ikits <milan ikits[]ieee org>\r\n\n##\r\n\n## This program is distributed under the terms and conditions of the GNU\r\n\n## General Public License Version 2 as published by the Free Software\r\n\n## Foundation or, at your option, any later version.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#GLEW_SPLIT_SOURCE = yes\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#http://oss.sgi.com/projects/ogl-sample/registry/\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#GL_CORE_SPEC := $(shell grep GL_VERSION custom.txt | sed 's/\\(.*\\)/$(CORE)\\/\\1/g;')\r\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#GLX_CORE_SPEC := $(shell grep GLX_VERSION custom.txt | sed 's/\\(.*\\)/$(CORE)\\/\\1/g;')\r\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\tperl -e \"s/GLEW_VERSION_STRING/$(GLEW_VERSION)/g\" -pi $@\r\n\n#\tperl -e \"s/GLEW_ARB_vertex_shader = !_glewInit_GL_ARB_vertex_shader\\(GLEW_CONTEXT_ARG_VAR_INIT\\);/{ GLEW_ARB_vertex_shader = !_glewInit_GL_ARB_vertex_shader(GLEW_CONTEXT_ARG_VAR_INIT); _glewInit_GL_ARB_vertex_program(GLEW_CONTEXT_ARG_VAR_INIT); }/g\" -pi $@\r\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update documentation\r\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#<a href=\"$(@F)\">(.*)</a>#\\1#' > $@\r\n",
        "Line" : 326,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "#<a href=\"$(@F)\">(.*)</a>#\\1#' $@\r\n",
        "Line" : 336,
        "CharPositionInLine" : 15
      },
      "9" : {
        "Text" : "#<a href=\"$(@F)\">(.*)</a>#\\1#' $@\r\n",
        "Line" : 346,
        "CharPositionInLine" : 15
      },
      "10" : {
        "Text" : "#<a href=\"$(@F)\">(.*)</a>#\\1#' $@\r\n",
        "Line" : 356,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 11,
      "Errorlog" : "line 26:97 token recognition error at: '\\1'\nline 27:78 token recognition error at: '\\1'\nline 29:100 token recognition error at: '\\1'\n"
    },
    "plugins/core/renderer_gl/ext/GL/glew-1.9.0/build/vc6/Makefile" : {
      "ObjectId" : "7ecef0ede747abd38872de7a848291b8ed4351c7",
      "LastModified" : "2014-12-14T18:17:55Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "plugins/core/renderer_gl/ext/GL/glfw-3.0.3/CMake/amd64-mingw32msvc.cmake" : {
      "ObjectId" : "705e251d3917f3787eca55aa3b3b0e303aee548f",
      "LastModified" : "2014-12-14T18:17:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win64\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure the behaviour of the find commands \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/core/renderer_gl/ext/GL/glfw-3.0.3/CMake/i586-mingw32msvc.cmake" : {
      "ObjectId" : "393ddbda3019706378b25bb3d1abb634a3936866",
      "LastModified" : "2014-12-14T18:17:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure the behaviour of the find commands \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/core/renderer_gl/ext/GL/glfw-3.0.3/CMake/i686-pc-mingw32.cmake" : {
      "ObjectId" : "9a46aef7b3457c8382fe16b3ad2e5a776f7f5f7d",
      "LastModified" : "2014-12-14T18:17:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target system name\n",
        "Line" : 2,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "#Configure the behaviour of the find commands \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/core/renderer_gl/ext/GL/glfw-3.0.3/CMake/i686-w64-mingw32.cmake" : {
      "ObjectId" : "9bd60936de2ed08f365601fbbfe404adbb37853a",
      "LastModified" : "2014-12-14T18:17:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target system name\n",
        "Line" : 2,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "# Configure the behaviour of the find commands \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/core/renderer_gl/ext/GL/glfw-3.0.3/CMake/modules/FindEGL.cmake" : {
      "ObjectId" : "0929c920de87f5c65f9bc504c334246752890608",
      "LastModified" : "2014-12-14T18:17:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find EGL\n\n#\n\n# EGL_INCLUDE_DIR\n\n# EGL_LIBRARY\n\n# EGL_FOUND\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/core/renderer_gl/ext/GL/glfw-3.0.3/CMake/modules/FindGLESv1.cmake" : {
      "ObjectId" : "3c779295b35c89e2ade50706c1b72491f6c3f769",
      "LastModified" : "2014-12-14T18:17:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find GLESv1\n\n#\n\n# GLESv1_INCLUDE_DIR\n\n# GLESv1_LIBRARY\n\n# GLESv1_FOUND\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/core/renderer_gl/ext/GL/glfw-3.0.3/CMake/modules/FindGLESv2.cmake" : {
      "ObjectId" : "0a2f810a9e2108fc6f970bcdd1d37d0bd92280dd",
      "LastModified" : "2014-12-14T18:17:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find GLESv2\n\n#\n\n# GLESv2_INCLUDE_DIR\n\n# GLESv2_LIBRARY\n\n# GLESv2_FOUND\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/core/renderer_gl/ext/GL/glfw-3.0.3/CMake/x86_64-w64-mingw32.cmake" : {
      "ObjectId" : "84b2c701ec1d9e2ee0b72f3031cfccb4a81d205e",
      "LastModified" : "2014-12-14T18:17:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target system name\n",
        "Line" : 2,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "# Configure the behaviour of the find commands \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/core/renderer_gl/ext/GL/glfw-3.0.3/CMakeLists.txt" : {
      "ObjectId" : "a050eb4731dd824a4f9db314fa5ec711af56b89b",
      "LastModified" : "2015-08-07T22:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Set compiler specific flags\n\n#--------------------------------------------------------------------\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Detect and select backend APIs\n\n#--------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use Win32 for window creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The DLL links against winmm; the static library loads it\n\n# That way, both code paths receive testing\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# HACK: When building on MinGW, WINVER and UNICODE need to be defined before\n\n# the inclusion of stddef.h (by glfw3.h), which is itself included before\n\n# win32_platform.h.  We define them here until a saner solution can be found\n\n# NOTE: MinGW-w64 and Visual C++ do /not/ need this hack.\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use WGL for context creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use X11 for window creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Set up library and include paths\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Check for XRandR (modern resolution switching and gamma control)\n",
        "Line" : 200,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Check for XInput (high-resolution cursor motion)\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Backwards compatibility (bug in CMake 2.8.7)\n",
        "Line" : 219,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Check for Xf86VidMode (fallback gamma control)\n",
        "Line" : 224,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Backwards compatibility (see CMake bug 0006976)\n",
        "Line" : 235,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Check for Xkb (X keyboard extension)\n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use GLX for context creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Check for dlopen support as a fallback\n",
        "Line" : 284,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use EGL for context creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use Cocoa for window creation and NSOpenGL for context creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Set up library and include paths\n",
        "Line" : 356,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Export GLFW library dependencies\n\n#--------------------------------------------------------------------\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Choose library output name\n\n#--------------------------------------------------------------------\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# On Unix-like systems, shared libraries can use the soname system.\n",
        "Line" : 378,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Create generated files\n\n#--------------------------------------------------------------------\n\n#configure_file(${GLFW_SOURCE_DIR}/docs/Doxyfile.in\n\n#               ${GLFW_BINARY_DIR}/docs/Doxyfile @ONLY)\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Add subdirectories\n\n#--------------------------------------------------------------------\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#if (DOXYGEN_FOUND)\n\n#    add_subdirectory(docs)\n\n#endif()\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Install files other than the library\n\n# The library is installed by src/CMakeLists.txt\n\n#--------------------------------------------------------------------\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Only generate this target if no higher-level project already has\n",
        "Line" : 439,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 27
    },
    "plugins/core/renderer_gl/ext/GL/glfw-3.0.3/examples/CMakeLists.txt" : {
      "ObjectId" : "01998196fe509ba6043fedc4ee48a1f305be1f58",
      "LastModified" : "2014-12-14T18:17:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# HACK: This is NOTFOUND on OS X 10.8\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Set fancy names for bundles\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Set boring names for executables\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Tell MSVC to use main instead of WinMain for Windows subsystem executables\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "plugins/core/renderer_gl/ext/GL/glfw-3.0.3/src/CMakeLists.txt" : {
      "ObjectId" : "d8c6f7a0f09e936fa102a9473626282c20ecdef6",
      "LastModified" : "2014-12-14T18:17:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For some reason, CMake doesn't know about .m\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Include version information in the output\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# The GLFW DLL needs a special compile-time macro and import library name\n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Append -fno-common to the compile flags to work around a bug in\n\n# Apple's GCC\n",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "plugins/core/renderer_gl/ext/GL/glfw-3.0.3/tests/CMakeLists.txt" : {
      "ObjectId" : "94ac755b942a967eff051de18511a8aaeb24133b",
      "LastModified" : "2014-12-14T18:17:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# HACK: This is NOTFOUND on OS X 10.8\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Tell MSVC to use main instead of WinMain for Windows subsystem executables\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "plugins/core/renderer_gl/ext/freetype-2.5.5/CMakeLists.txt" : {
      "ObjectId" : "adfd6f1cd42effb9cd5d7d87a140779a545056fd",
      "LastModified" : "2015-08-07T22:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Copyright 2013, 2014 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# Written by John Cary <cary@txcorp.com>\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n\n#\n\n#\n\n# Say\n\n#\n\n#   cmake CMakeLists.txt\n\n#\n\n# to create a Makefile that builds a static version of the library.\n\n#\n\n# For a dynamic library, use\n\n#\n\n#   cmake CMakeLists.txt -DBUILD_SHARED_LIBS:BOOL=true\n\n#\n\n# For a framework on OS X, use\n\n#\n\n#   cmake CMakeLists.txt -DBUILD_FRAMEWORK:BOOL=true -G Xcode\n\n#\n\n# instead.\n\n#\n\n# For an iOS static library, use\n\n#\n\n#   cmake CMakeLists.txt -DIOS_PLATFORM=OS -G Xcode\n\n#\n\n# or\n\n#\n\n#   cmake CMakeLists.txt -DIOS_PLATFORM=SIMULATOR -G Xcode\n\n#\n\n# Please refer to the cmake manual for further options, in particular, how\n\n# to modify compilation and linking parameters.\n\n#\n\n# Some notes.\n\n#\n\n# . `cmake' will overwrite FreeType's original (top-level) `Makefile' file.\n\n#\n\n# . You can use `cmake' directly on a freshly cloned FreeType git\n\n#   repository.\n\n#\n\n# . `CMakeLists.txt'  is provided as-is since it is not used by the\n\n#   developer team.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMAKE_TOOLCHAIN_FILE must be set before `project' is called, which\n\n# configures the base build environment and references the toolchain file\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# iOS only uses static libraries\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Compiler definitions for building the library\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Specify library include directories\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create the configuration file\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# For the auto-generated ftconfig.h file\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Installations\n\n# Note the trailing slash in the argument to the `DIRECTORY' directive\n\n#install(DIRECTORY ${PROJECT_SOURCE_DIR}/include/\n\n#  DESTINATION include/freetype2\n\n#  PATTERN \"internal\" EXCLUDE\n\n#)\n\n#install(TARGETS freetype\n\n#  RUNTIME DESTINATION bin\n\n#  LIBRARY DESTINATION lib\n\n#  ARCHIVE DESTINATION lib\n\n#  FRAMEWORK DESTINATION Library/Frameworks\n\n#)\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Packaging\n\n# CPack version numbers for release tarball name.\n\n#set(CPACK_PACKAGE_VERSION_MAJOR ${VERSION_MAJOR})\n\n#set(CPACK_PACKAGE_VERSION_MINOR ${VERSION_MINOR})\n\n#set(CPACK_PACKAGE_VERSION_PATCH ${VERSION_PATCH}})\n\n#if (NOT DEFINED CPACK_PACKAGE_DESCRIPTION_SUMMARY)\n\n#  set(CPACK_PACKAGE_DESCRIPTION_SUMMARY \"${CMAKE_PROJECT_NAME}\")\n\n#endif ()\n\n#if (NOT DEFINED CPACK_SOURCE_PACKAGE_FILE_NAME)\n\n#  set(CPACK_SOURCE_PACKAGE_FILE_NAME\n\n#    \"${CMAKE_PROJECT_NAME}-${PROJECT_VERSION}-r${PROJECT_REV}\"\n\n#    CACHE INTERNAL \"tarball basename\"\n\n#  )\n\n#endif ()\n\n#set(CPACK_SOURCE_GENERATOR TGZ)\n\n#set(CPACK_SOURCE_IGNORE_FILES\n\n#  \"/CVS/;/.svn/;.swp$;.#;/#;/build/;/serial/;/ser/;/parallel/;/par/;~;/preconfig.out;/autom4te.cache/;/.config\")\n\n#set(CPACK_GENERATOR TGZ)\n\n#include(CPack)\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# add make dist target\n\n#add_custom_target(dist COMMAND ${CMAKE_MAKE_PROGRAM} package_source)\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# eof\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "plugins/core/renderer_gl/ext/freetype-2.5.5/src/tools/ftrandom/Makefile" : {
      "ObjectId" : "2e619299cdfcdb13ec98282f200b013d60a002c3",
      "LastModified" : "2015-08-07T22:46:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# TOP_DIR and OBJ_DIR should be set by the user to the right directories,\n\n# if necessary.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The setup below is for gcc on a Unix-like platform.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# EOF\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/d/CMakeLists.txt" : {
      "ObjectId" : "f6f20f835fd2cd53565c9a709d3bf5c0bc11e9f4",
      "LastModified" : "2015-08-07T22:46:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/d/d_example/CMakeLists.txt" : {
      "ObjectId" : "f42e35244733bd480922b6a61b2d0ccc871bb55b",
      "LastModified" : "2015-08-07T22:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# set plugin metadata\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# source files and library definition\n\n###############################################################################\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ensure plugin is built before lightship\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n# copy plugin to plugins/ folder after build\n\n###############################################################################\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "scripts/cmake/CMakeLists.txt" : {
      "ObjectId" : "fed73af707d4e24fee12b2319752265ebb88fce4",
      "LastModified" : "2015-08-07T22:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# create build directory for this architecture and make sure it gets\n\n# ignored by git\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# configure toolchain file and install file\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# execute cmake to configure the project for this architecture\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# reference the generated install script\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "cc24936de269667e16c524bac4e299685b1f3f18",
      "LastModified" : "2015-08-07T22:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# death tests in debug mode\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# generates the correct project files for visual studio, setting the correct\n\n# debug working directory and other stuff\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# remove the dummy file required for git to track the empty directory\n\n# this is for one of the directory unit tests\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/gmock/CMakeLists.txt" : {
      "ObjectId" : "5ea1d962b391a97c545651726b5a1f935c1e17c3",
      "LastModified" : "2015-08-07T22:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Mock.\n\n#\n\n# To run the tests for Google Mock itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A directory to find Google Test sources.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Google Test also calls hermetic setup functions from add_subdirectory,\n\n# although its changes will not affect things at the current scope.\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gmock_SOURCE_DIR} and to the root binary directory as\n\n# ${gmock_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Instructs CMake to process Google Test's CMakeLists.txt and add its\n\n# targets to the current scope.  We are placing Google Test's binary\n\n# directory in a subdirectory of our own as VC compilation may break\n\n# if they are the same (the default).\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Although Google Test's CMakeLists.txt calls this function, the\n\n# changes there don't affect the current scope.  Therefore we have to\n\n# call it again here.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# from ${gtest_dir}/cmake/internal_utils.cmake\n",
        "Line" : 62,
        "CharPositionInLine" : 30
      },
      "10" : {
        "Text" : "# Adds Google Mock's and Google Test's header directories to the search path.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This directory is needed to build directly from Google\n\n# Test sources.\n",
        "Line" : 68,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gmock & gmock_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Google Mock libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that Google Mock can be compiled by\n\n# a user aggressive about warnings.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################################\n\n#\n\n# Google Mock's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Mock itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gmock_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgmock_build_tests=ON flag when running cmake.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# gmock_all_test is commented to save time building and running tests.\n\n# Uncomment if necessary.\n\n# cxx_test(gmock_all_test gmock_main)\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Tests that a binary can be built with Google Mock as a shared library.  On\n\n# some system configurations, it may not possible to run the binary without\n\n# knowing more details about the system configurations. We do not try to run\n\n# this binary. To get a more robust shared library coverage, configure with\n\n# -DBUILD_SHARED_LIBS=ON.\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 21
    },
    "tests/gmock/gtest/CMakeLists.txt" : {
      "ObjectId" : "57470c84f3af0772c411bbb8bbbb41b515747ecd",
      "LastModified" : "2015-08-07T22:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 52,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# The C++ Standard specifies tuple_element<int, class>.\n\n# Yet MSVC 10's <utility> declares tuple_element<size_t, class>.\n\n# That declaration conflicts with our own standard-conforming\n\n# tuple implementation.  Therefore using our own tuple with\n\n# MSVC 10 doesn't compile.\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "tests/gmock/gtest/cmake/internal_utils.cmake" : {
      "ObjectId" : "8cb21894cebacd5bdfb598c8663a5be50325d70f",
      "LastModified" : "2015-08-07T22:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 107,
        "CharPositionInLine" : 32
      },
      "17" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 31
    },
    "util/CMakeLists.txt" : {
      "ObjectId" : "beb6c5fb72869337de145bced5bbbb076a4064ca",
      "LastModified" : "2015-08-07T22:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# compiler flags for this library\n\n###############################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# generate config.h for this library\n\n###############################################################################\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# memory debugging\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# log related stuff\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# thread pool and multithreading related stuff\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# type size checks\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Windows specific\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# detect invalid settings\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# print out a summary\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###############################################################################\n\n# select platform specific implementation source files\n\n###############################################################################\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###############################################################################\n\n# source files and library definition\n\n###############################################################################\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The library is being built\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "###############################################################################\n\n# dynamic linker\n\n###############################################################################\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###############################################################################\n\n# threads\n\n###############################################################################\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "###############################################################################\n\n# libyaml\n\n###############################################################################\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# yaml is built statically\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "###############################################################################\n\n# install targets\n\n###############################################################################\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# only install if shared library\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "util/ext/CMakeLists.txt" : {
      "ObjectId" : "db8f3b51a16e31baa1eea596a3e7518a3561bec4",
      "LastModified" : "2015-08-07T22:46:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "util/ext/yaml-0.1.5-cmake/CMakeLists.txt" : {
      "ObjectId" : "1d75ba58f2cc274354813b856422537876b3d5f8",
      "LastModified" : "2015-08-07T22:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# options, kawalski\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# generate config.h\n\n###############################################################################\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# compiler definitions and flags\n\n###############################################################################\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MinGW always builds position independent code\n",
        "Line" : 60,
        "CharPositionInLine" : 23
      },
      "4" : {
        "Text" : "# MinGW always builds position independent code\n",
        "Line" : 67,
        "CharPositionInLine" : 23
      },
      "5" : {
        "Text" : "###############################################################################\n\n# source files and library definition\n\n###############################################################################\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###############################################################################\n\n# install targets\n\n###############################################################################\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "CMAKE" : 34,
    "MAKEFILE" : 4
  },
  "ElapsedTime" : 1243
}