{
  "Repository" : "12560047",
  "Revision" : "HEAD",
  "ObjectId" : "b525f540918afbd82989598d0e2be18217b5558d",
  "CommitTime" : "2019-04-14T08:49:48Z",
  "Files" : {
    "algorithm/containers/dynamic_array_test/CMakeLists.txt" : {
      "ObjectId" : "a67c2e2536614e85b510bcef4c2483dbc43b2185",
      "LastModified" : "2018-08-10T12:35:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_executable (dynamic_array_test\n\n#    \"dynamic_array_test.c\"\n\n#\t\"../dynamic_array.c\"\n\n#\t\"../../algutils.c\"\n\n#\t)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# References:\n\n# https://github.com/Microsoft/vcpkg/issues/1094\n\n# https://github.com/Microsoft/vcpkg/blob/8379a80abe5288c7c06d5b9ab16efe355d1c6f62/docs/EXAMPLES.md#example-1-2-b",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "algorithm/dsp/FindPeaks/FindPeaksTest/CMakeLists.txt" : {
      "ObjectId" : "c758414528d71b3ea85559872007e89847ff9417",
      "LastModified" : "2018-12-29T10:06:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "algorithm/math/Abs/AbsTest.pro" : {
      "ObjectId" : "555cc052adafe984dd9d8c232d82e7a0dd5dde5c",
      "LastModified" : "2018-08-10T12:35:36Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "algorithm/misc/data_rate_unit_unittest/CMakeLists.txt" : {
      "ObjectId" : "7d1a55adcc7cd7857c8f2d8849232cc1144b13dc",
      "LastModified" : "2018-08-23T10:39:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "algorithm/os/HostByteOrder/CMakeLists.txt" : {
      "ObjectId" : "f43720014a5efa4da3ae7ff986b20e7dd70ab5fb",
      "LastModified" : "2018-11-17T12:49:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "algorithm/search/binary_search/CMakeLists.txt" : {
      "ObjectId" : "17498d54d8995253d8e3eb25e0d9286059200428",
      "LastModified" : "2018-12-29T10:06:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "algorithm/string/string_unittest/CMakeLists.txt" : {
      "ObjectId" : "780972cd21c864a85b44bf42eff35a0f39b11863",
      "LastModified" : "2018-12-29T10:06:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "c/C99/struct_initialization/deployment.pri" : {
      "ObjectId" : "5f1749fc26dd725b43f321040877b80c1730d8f7",
      "LastModified" : "2018-12-29T10:06:11Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# This file was generated by an application wizard of Qt Creator.\n\n# The code below handles deployment to Android and Maemo, aswell as copying\n\n# of the application data to shadow build directories on desktop.\n\n# It is recommended not to modify this file, since newer versions of Qt Creator\n\n# may offer an updated version of it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Assumed to be a Desktop Unix\n",
        "Line" : 125,
        "CharPositionInLine" : 13
      },
      "CommentCount" : 2
    },
    "c/C99/struct_initialization/struct_initialization.pro" : {
      "ObjectId" : "23ebc5ace1174d84b686261986b3cae02ebdf6ec",
      "LastModified" : "2018-12-29T10:06:11Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "c/TCP_IP/gethostname/CMakeLists.txt" : {
      "ObjectId" : "a309d424f1aa64766aa5aaa9fc24b5531aa3bdf5",
      "LastModified" : "2018-12-29T10:06:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://stackoverflow.com/questions/6594796/how-do-i-make-cmake-output-into-a-bin-dir\n\n# https://gitlab.kitware.com/cmake/community/wikis/doc/cmake/Useful-Variables\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "c/TCP_IP/getnameinfo/CMakeLists.txt" : {
      "ObjectId" : "134ed6912e5552dc4e5a649ecb60a14dbc65d483",
      "LastModified" : "2018-12-29T10:06:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_definitions(-DUSING_UNICODE=0)\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "c/TCP_IP/hostinfo/CMakeLists.txt" : {
      "ObjectId" : "115773737374f78d8df791c7589007e0852677e4",
      "LastModified" : "2018-12-29T10:06:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "c/TCP_IP/inet_pton_test/CMakeLists.txt" : {
      "ObjectId" : "847127c699cc68ede5bd5d0a99fe8a664e4164d1",
      "LastModified" : "2018-12-29T10:06:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "c/TCP_IP/tcp_chatroom_client/CMakeLists.txt" : {
      "ObjectId" : "ad461b2090d161780d107158f9263a8e8405aacd",
      "LastModified" : "2018-12-29T10:06:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Currently, find_package does work with `getopt-win32` when using vcpkg.\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# References:\n\n# https://stackoverflow.com/questions/13703647/how-to-properly-add-include-directories-with-cmake\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "c/TCP_IP/tcp_chatroom_select_serv/CMakeLists.txt" : {
      "ObjectId" : "e24e77e7b68dc8891369cd5d024bb78778c24beb",
      "LastModified" : "2018-12-29T10:06:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "c/TCP_IP/tcp_echo_client/CMakeLists.txt" : {
      "ObjectId" : "e1bc1ad90c6bff01f9513cef7e89b0c42486c3a9",
      "LastModified" : "2018-12-29T10:06:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "c/TCP_IP/tcpbench/CMakeLists.txt" : {
      "ObjectId" : "930cc3ee27c613f652fbaeb5bb95b17ec0286e6f",
      "LastModified" : "2018-12-29T10:06:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Currently, find_package does work with `getopt-win32` when using vcpkg.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "c/TCP_IP/tcpclient/CMakeLists.txt" : {
      "ObjectId" : "3feff429ae2a2647fe81210d70e933fd94c9e325",
      "LastModified" : "2018-12-29T10:06:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Currently, find_package does work with `getopt-win32` when using vcpkg.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# References:\n\n# https://stackoverflow.com/questions/13703647/how-to-properly-add-include-directories-with-cmake\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "c/TCP_IP/tcpsrv/CMakeLists.txt" : {
      "ObjectId" : "595813b0c1d066095c5e120b2f8772ec07b44ecb",
      "LastModified" : "2018-12-29T10:06:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "c/TCP_IP/udpbench/CMakeLists.txt" : {
      "ObjectId" : "55ecdb7b8ceb63879ad692424075129fe5959569",
      "LastModified" : "2018-12-29T10:06:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Currently, find_package does work with `getopt-win32` when using vcpkg.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# References:\n\n# https://github.com/zeromq/libzmq/blob/master/CMakeLists.txt\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "c/TCP_IP/udpbroadcast/CMakeLists.txt" : {
      "ObjectId" : "cb53a5abff60ba1b9927d079a942bbeb8cdca98c",
      "LastModified" : "2018-12-29T10:06:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Currently, find_package does work with `getopt-win32` when using vcpkg.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# References:\n\n# https://github.com/zeromq/libzmq/blob/master/CMakeLists.txt\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "c/ZeroMQ/czmq/ipc_test/CMakeLists.txt" : {
      "ObjectId" : "737754791f1bffda498e376f1c1730c80392e9c0",
      "LastModified" : "2018-12-29T10:06:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#AND NOT DEFINED CMAKE_TOOLCHAIN_FILE)\n",
        "Line" : 3,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : "#set(VCPKG_TARGET_TRIPLET x64-windows-static)\n\n#set(CMAKE_GENERATOR_PLATFORM x64)\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#find_package(ZeroMQ CONFIG REQUIRED)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#if(VCPKG_TARGET_TRIPLET MATCHES \"^.+-static$\" OR VCPKG_TARGET_TRIPLET STREQUAL \"x64-linux\")\n\n#    message(\"Linked to czmq-static.\")\n\n#    target_link_libraries(ipc_test PRIVATE czmq-static)\n\n#else()\n\n#    message(\"Linked to czmq.\")\n\n#    target_link_libraries(ipc_test PRIVATE czmq)\n\n#endif()\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# References:\n\n# https://github.com/Microsoft/vcpkg/blob/master/docs/users/integration.md\n\n# https://blogs.msdn.microsoft.com/vcblog/2016/11/01/vcpkg-updates-static-linking-is-now-available/\n\n# https://stackoverflow.com/questions/28350214/how-to-build-x86-and-or-x64-on-windows-from-command-line-with-cmake\n\n# https://stackoverflow.com/questions/920500/what-is-the-purpose-of-cxa-pure-virtual\n\n# https://stackoverflow.com/questions/10703876/gcc-undefined-cxa-pure-virtual\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "c/ZeroMQ/zguide_examples/WeatherServer/CMakeLists.txt" : {
      "ObjectId" : "7047e0aa1c62bc800bf7f95a651985bac30c8dac",
      "LastModified" : "2019-02-13T06:24:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://stackoverflow.com/questions/13703647/how-to-properly-add-include-directories-with-cmake\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "c/ZeroMQ/zguide_examples/version/CMakeLists.txt" : {
      "ObjectId" : "c16b36f5ee6aef257ee25f6dabb010b406bfaf7a",
      "LastModified" : "2019-02-13T06:24:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://github.com/QuantStack/xeus/blob/master/CMakeLists.txt\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "c/ZeroMQ/zguide_examples/zeromq_HelloWorld/CMakeLists.txt" : {
      "ObjectId" : "0f335af2dba24211fce397b9fcb5efa822a14b07",
      "LastModified" : "2019-02-13T06:24:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "c/ZeroMQ/zmqbench/CMakeLists.txt" : {
      "ObjectId" : "81ae4a253918c533564895fd646a481e6c50e429",
      "LastModified" : "2019-02-13T06:24:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://stackoverflow.com/questions/34937671/cmake-how-to-check-if-preprocessor-is-defined\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "c/curl/pctutil/CMakeLists.txt" : {
      "ObjectId" : "ee72c4aebd0aee60177674d5e25748eb5d5c27f0",
      "LastModified" : "2019-02-13T06:24:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "c/getopt/getopt_long_test/CMakeLists.txt" : {
      "ObjectId" : "79e040c73b6a26c6f07aed08a8d4647e316bfb4a",
      "LastModified" : "2019-02-13T06:24:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Currently, find_package does work with `getopt-win32` when using vcpkg.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# References:\n\n# https://stackoverflow.com/questions/13703647/how-to-properly-add-include-directories-with-cmake\n\n# https://stackoverflow.com/questions/10671916/how-to-copy-dll-files-into-the-same-folder-as-the-executable-using-cmake\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "c/getopt/getopt_test/CMakeLists.txt" : {
      "ObjectId" : "567fd96bea20ba25396dcf91adb53029ca5d6d64",
      "LastModified" : "2019-02-13T06:24:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Currently, find_package does work with `getopt-win32` when using vcpkg.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# References:\n\n# https://stackoverflow.com/questions/13703647/how-to-properly-add-include-directories-with-cmake\n\n# https://stackoverflow.com/questions/10671916/how-to-copy-dll-files-into-the-same-folder-as-the-executable-using-cmake\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "c/getprogname_unittest/CMakeLists.txt" : {
      "ObjectId" : "9f534164117ec5b34b1a5a96981445941b1a660d",
      "LastModified" : "2019-02-13T06:24:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "c/libui/controlgallery/CMakeLists.txt" : {
      "ObjectId" : "34e0797c0a9e98bf329fe2b0a7391c5c5f741054",
      "LastModified" : "2019-02-13T06:24:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# https://stackoverflow.com/questions/45724766/how-to-set-c-application-entry-point-to-main-on-windows-using-cmake\n\n# https://stackoverflow.com/questions/2753761/how-do-i-tell-cmake-not-to-create-a-console-window\n\n# https://developercommunity.visualstudio.com/content/problem/46678/cmake-set-subsystem-to-console.html\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "c/libuv/tcp_echo_client/CMakeLists.txt" : {
      "ObjectId" : "d255095194733afd001f50adaaccbbaca6cbf527",
      "LastModified" : "2019-02-13T06:24:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "c/nanomsg/nanomsgbench/CMakeLists.txt" : {
      "ObjectId" : "52fc51359e526a71e164df351bb030896df706d8",
      "LastModified" : "2019-02-13T06:24:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://stackoverflow.com/questions/34937671/cmake-how-to-check-if-preprocessor-is-defined\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "c/nanopb/person_example/CMakeLists.txt" : {
      "ObjectId" : "162ec21497fbe212b91cec3505756fbdd66c78d9",
      "LastModified" : "2019-03-03T08:01:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# http://www.cmake.org/Wiki/CMake_FAQ#How_can_I_build_my_MSVC_application_with_a_static_runtime.3F\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These two files are generated by nanopb's protocol compiler.\n\n# First, install protobuf python package:\n\n#     cd protobuf/python\n\n#     python setup.py build\n\n#     python setup.py install\n\n# Then, run:\n\n# protoc --plugin=protoc-gen-nanopb=protoc-gen-nanopb.bat --nanopb_out=. person.proto\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# References:\n\n# https://github.com/nanopb/nanopb\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "c/nng/nngbench/CMakeLists.txt" : {
      "ObjectId" : "8848d9a2789d3ff820ed2728b37e1cd071dc3234",
      "LastModified" : "2019-03-03T08:01:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://stackoverflow.com/questions/34937671/cmake-how-to-check-if-preprocessor-is-defined\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "c/print_integers/CMakeLists.txt" : {
      "ObjectId" : "2cad5e74b685c3f257dc848169f7872729825efb",
      "LastModified" : "2019-03-03T08:01:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "c/rapidstring/hello_rapidstring/CMakeLists.txt" : {
      "ObjectId" : "9a45e7125ddac512ba55af5182e5dcbf238807f8",
      "LastModified" : "2019-03-03T08:01:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Basics/iterator/inserter_vs_front_inserter/CMakeLists.txt" : {
      "ObjectId" : "024b783a5bbe3c8cbd9447a14e80e4071c28362a",
      "LastModified" : "2019-03-03T08:01:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Basics/map/word_count/CMakeLists.txt" : {
      "ObjectId" : "58703bdd1024e49829dc2e13e8f861711e4abd9b",
      "LastModified" : "2019-03-03T08:01:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Basics/memory/new_struct/CMakeLists.txt" : {
      "ObjectId" : "7974f6ed30c074cb9e9b0f94f625e53aefecf763",
      "LastModified" : "2019-03-03T08:01:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Basics/random/gen_10_random_numbers/CMakeLists.txt" : {
      "ObjectId" : "05cde1545c10a71bfba0c4c289af2671976d6459",
      "LastModified" : "2019-03-29T12:46:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Basics/random/gen_random_real_numbers/CMakeLists.txt" : {
      "ObjectId" : "a99d0f4b5d545f50e575fc221105986dc79ef0ac",
      "LastModified" : "2019-03-29T12:46:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Basics/random/normal_distribution/CMakeLists.txt" : {
      "ObjectId" : "88a6962a754a3ec8b709cccde79ccb44c596e947",
      "LastModified" : "2019-03-29T12:46:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Basics/regex/ibeeac/CMakeLists.txt" : {
      "ObjectId" : "9353ffa2947d2e3ffe290006c0c8e35d48ffff03",
      "LastModified" : "2019-03-29T12:47:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Basics/set/multiset_example/CMakeLists.txt" : {
      "ObjectId" : "8a9e27f4fb48c42f4866df2542c3921f45f2f18d",
      "LastModified" : "2019-03-29T12:47:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Basics/sstream/stringstream_test/CMakeLists.txt" : {
      "ObjectId" : "5bc9f35959010728e930394c8da82e103ef4f852",
      "LastModified" : "2019-03-29T12:47:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Basics/template/compare/CMakeLists.txt" : {
      "ObjectId" : "e699a28302e8b58c15320617c7e65b7bbe6c15ba",
      "LastModified" : "2019-03-29T12:47:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/BinaryStream/BinaryStream.pro" : {
      "ObjectId" : "34886c27dfb910e68fb8001cc284dd83e48b98cd",
      "LastModified" : "2019-03-29T12:47:41Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# References:\n\n# QSanguosha\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/Boost/Interprocess/00_QuickGuideExample/CMakeLists.txt" : {
      "ObjectId" : "e1cd5be5665376a4576644295728a61741599f2a",
      "LastModified" : "2019-03-29T12:47:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://cmake.org/cmake/help/latest/module/FindBoost.html\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/Boost/Thread/AsyncDemo/CMakeLists.txt" : {
      "ObjectId" : "60493464372fa2f6d9682e6e7e33fe71a2a36615",
      "LastModified" : "2019-03-29T12:47:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# Ongoing-Study/os/ProducerConsumerProblem/ProducerConsumerProblemCpp11v2/CMakeLists.txt\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/C++11/is_unique_benchmark/CMakeLists.txt" : {
      "ObjectId" : "f234d42cbd77a48556a320dddb15216f90875382",
      "LastModified" : "2019-03-29T12:47:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/C++11/list_splice_test/CMakeLists.txt" : {
      "ObjectId" : "bd13e009e14ac361453a1dc097c825f182837f16",
      "LastModified" : "2019-03-29T12:47:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://stackoverflow.com/questions/10851247/how-to-activate-c-11-in-cmake\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/C++11/logger_test/CMakeLists.txt" : {
      "ObjectId" : "75da1545aaca71e00eacb61c78625541631bc75a",
      "LastModified" : "2019-03-29T12:47:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/C++11/put_time_test/CMakeLists.txt" : {
      "ObjectId" : "75c7ee9b37652d87335981e246ded2799d47ebfd",
      "LastModified" : "2019-03-29T12:47:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://stackoverflow.com/questions/10851247/how-to-activate-c-11-in-cmake\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/C++11/reader_writer_lock_test/CMakeLists.txt" : {
      "ObjectId" : "316699399b340a374270943f0ab377ec89d71172",
      "LastModified" : "2019-03-29T12:47:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/C++11/set_benchmark/CMakeLists.txt" : {
      "ObjectId" : "113bfdc5c0a210ccd9a016387bf6b68f8b85c5c5",
      "LastModified" : "2019-03-29T12:47:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/C++11/varadic_template_test/CMakeLists.txt" : {
      "ObjectId" : "3b1cc99c666be2b83cef5906d2f51e0b01ad5e24",
      "LastModified" : "2019-03-29T12:47:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/environment_variables/CMakeLists.txt" : {
      "ObjectId" : "05731554c63fafb492a662b66c5215520bc96d2a",
      "LastModified" : "2019-03-29T12:47:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# FindGTest.cmake\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# `vcpkg.exe` is installed to `E:\\vcpkg` on my PC.\n\n# So I created a new environment variable:\n\n# VCPKG_DIR: E:\\vcpkg\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cpp/CMake/find_git/CMakeLists.txt" : {
      "ObjectId" : "0d2326c280ccdc8a71a18ade977114b38f450487",
      "LastModified" : "2019-04-05T06:59:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmd /c \"E:/Program Files/Git/cmd/git.exe\" rev-list --branches HEAD | find /v \" \" /c\n\n# cmd /c \"\"E:/Program Files/Git/cmd/git.exe\" rev-list --branches HEAD | find /v \" \" /c\"\n",
        "Line" : 10,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# References:\n\n# https://github.com/nanomsg/nanomsg/blob/master/CMakeLists.txt#L67\n\n# https://github.com/KjellKod/g3log/blob/master/CMakeLists.txt#L82\n\n# https://ss64.com/nt/syntax-esc.html\n\n# https://stackoverflow.com/questions/34905194/cmake-how-to-call-execute-process-with-a-double-quote-in-the-argument-a-k-a-u\n\n# https://stackoverflow.com/questions/34763847/add-quotation-mark-in-cmake-string\n\n# https://stackoverflow.com/questions/9267278/using-the-dos-start-command-when-passed-arguments-have-quotes\n\n# https://stackoverflow.com/questions/355988/how-do-i-deal-with-quote-characters-when-using-cmd-exe\n\n# https://stackoverflow.com/questions/5272781/what-is-common-way-to-split-string-into-list-with-cmake\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cpp/CMake/find_libcurl/CMakeLists.txt" : {
      "ObjectId" : "3259672403b2e73c08a7890593c5bdfa302fd602",
      "LastModified" : "2019-04-05T06:59:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/find_libcurl/Findlibcurl.cmake" : {
      "ObjectId" : "c1713711e3907666b06d7cfc9c2bb0e64650aff4",
      "LastModified" : "2019-04-05T06:59:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# zeromq/czmq/Findlibcurl.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add CFLAGS from pkg-config file, e.g. draft api.\n",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# some libraries install the headers is a subdirectory of the include dir\n\n# returned by pkg-config, so use a wildcard match to improve chances of finding\n\n# headers and SOs.\n",
        "Line" : 9,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# https://stackoverflow.com/questions/37358427/cmake-how-to-link-a-library-which-has-a-lib-prefix-on-windows\n\n# https://github.com/Microsoft/vcpkg/issues/4312\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cpp/CMake/find_libfoo_test/CMakeLists.txt" : {
      "ObjectId" : "a07fc0da67c3509490023d8276b4a2d856722eb7",
      "LastModified" : "2019-04-09T11:10:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://stackoverflow.com/questions/16308847/how-to-clear-delete-a-cache-variable\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/CMake/find_libzmq/CMakeLists.txt" : {
      "ObjectId" : "d431cbf42dcd7884ced8fe564282e0d50003eb4e",
      "LastModified" : "2019-04-09T11:10:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# nanomsg/nng\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/CMake/find_libzmq/Findlibzmq.cmake" : {
      "ObjectId" : "e615af0e8fdd295710d837bf7f2f90c9a03de279",
      "LastModified" : "2019-04-09T11:10:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #\n\n#  Read the zproject/README.md for information about making permanent changes. #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add CFLAGS from pkg-config file, e.g. draft api.\n",
        "Line" : 12,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# some libraries install the headers is a subdirectory of the include dir\n\n# returned by pkg-config, so use a wildcard match to improve chances of finding\n\n# headers and SOs.\n",
        "Line" : 14,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# When built as a static library, libzmq will set an additional\n\n# compiler flag `-DZMQ_STATIC` through `set_target_properties`.\n\n# (libzmq/CMakeLists.txt)\n\n#\n\n# Since we did not use `find_package` + `target_link_libraries`\n\n# here, we must define `ZMQ_STATIC` manually. Otherwise, all\n\n# function declarations in `zmq.h` will have a `__declspec(dllimport)`\n\n# specifier. \n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# libzmq dll/lib built with MSVC is named using the Boost convention.\n\n# https://github.com/zeromq/czmq/issues/577\n\n# https://bitbucket.org/ignitionrobotics/ign-transport/pull-requests/19/detec-zmq-under-windows-using-a-findzmq/diff\n\n# https://github.com/zeromq/libzmq/blob/master/CMakeLists.txt\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Debug, BUILD_SHARED\n",
        "Line" : 84,
        "CharPositionInLine" : 49
      },
      "6" : {
        "Text" : "# Debug, BUILD_STATIC\n",
        "Line" : 85,
        "CharPositionInLine" : 50
      },
      "7" : {
        "Text" : "# Release|RelWithDebInfo|MinSizeRel, BUILD_SHARED\n",
        "Line" : 89,
        "CharPositionInLine" : 46
      },
      "8" : {
        "Text" : "# Release|RelWithDebInfo|MinSizeRel, BUILD_STATIC\n",
        "Line" : 90,
        "CharPositionInLine" : 48
      },
      "9" : {
        "Text" : "#message(\">> ${_zmq_debug_names}\")\n\n#message(\">> ${_zmq_release_names}\")\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#file(STRINGS \"${LIBZMQ_INCLUDE_DIRS}/zmq.h\" _version_lines\n\n#    REGEX \"^#define.ZMQ_VERSION_(MAJOR|MINOR|PATCH).([0-9]+$)\")\n\n#message(\">> ${_version_lines}\")\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "################################################################################\n\n#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #\n\n#  Read the zproject/README.md for information about making permanent changes. #\n\n################################################################################\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# References:\n\n# https://github.com/zeromq/libzmq/issues/3318\n\n# https://github.com/zeromq/czmq/issues/577\n\n# https://stackoverflow.com/questions/31565788/cmake-find-library-with-version-number\n\n# https://github.com/zeromq/libzmq/issues/2333\n\n# https://bitbucket.org/ignitionrobotics/ign-transport/pull-requests/19/detec-zmq-under-windows-using-a-findzmq/diff\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "cpp/CMake/find_libzmq_ng/CMakeLists.txt" : {
      "ObjectId" : "11c8292004c7a0a5a073c726478eab436676d7df",
      "LastModified" : "2019-04-09T11:10:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/find_libzmq_ng/Findlibzmq.cmake" : {
      "ObjectId" : "d4a1079d5bdf9adccf63454cc92bdc67c808d80e",
      "LastModified" : "2019-04-09T11:10:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #\n\n#  Read the zproject/README.md for information about making permanent changes. #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add CFLAGS from pkg-config file, e.g. draft api.\n",
        "Line" : 10,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# some libraries install the headers is a subdirectory of the include dir\n\n# returned by pkg-config, so use a wildcard match to improve chances of finding\n\n# headers and SOs.\n",
        "Line" : 12,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# libzmq dll/lib built with MSVC is named using the Boost convention.\n\n# https://github.com/zeromq/czmq/issues/577\n\n# https://bitbucket.org/ignitionrobotics/ign-transport/pull-requests/19/detec-zmq-under-windows-using-a-findzmq/diff\n\n# https://github.com/zeromq/libzmq/blob/master/CMakeLists.txt\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Ongoing-study/c/ZeroMQ/zguide_examples/version\n\n# Retrieve ZeroMQ version number from zmq.h\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Debug, BUILD_SHARED\n",
        "Line" : 53,
        "CharPositionInLine" : 54
      },
      "6" : {
        "Text" : "# Debug, BUILD_STATIC\n",
        "Line" : 54,
        "CharPositionInLine" : 55
      },
      "7" : {
        "Text" : "# Debug, BUILD_SHARED\n",
        "Line" : 55,
        "CharPositionInLine" : 39
      },
      "8" : {
        "Text" : "# Debug, BUILD_STATIC\n",
        "Line" : 56,
        "CharPositionInLine" : 40
      },
      "9" : {
        "Text" : "# Release|RelWithDebInfo|MinSizeRel, BUILD_SHARED\n",
        "Line" : 60,
        "CharPositionInLine" : 51
      },
      "10" : {
        "Text" : "# Release|RelWithDebInfo|MinSizeRel, BUILD_STATIC\n",
        "Line" : 61,
        "CharPositionInLine" : 53
      },
      "11" : {
        "Text" : "# Release|RelWithDebInfo|MinSizeRel, BUILD_SHARED\n",
        "Line" : 62,
        "CharPositionInLine" : 36
      },
      "12" : {
        "Text" : "# Release|RelWithDebInfo|MinSizeRel, BUILD_STATIC\n",
        "Line" : 63,
        "CharPositionInLine" : 38
      },
      "13" : {
        "Text" : "################################################################################\n\n#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #\n\n#  Read the zproject/README.md for information about making permanent changes. #\n\n################################################################################\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "cpp/CMake/find_libzmq_vcpkg/CMakeLists.txt" : {
      "ObjectId" : "d431cbf42dcd7884ced8fe564282e0d50003eb4e",
      "LastModified" : "2019-04-09T11:10:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# nanomsg/nng\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/CMake/find_libzmq_vcpkg/Findlibzmq.cmake" : {
      "ObjectId" : "4116fbb68230937c2ca4b4fe8b47135f1021d91d",
      "LastModified" : "2019-04-09T11:10:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if (CZMQ_BUILD_STATIC)\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# When built as a static library, libzmq will set an additional\n\n# compiler flag `-DZMQ_STATIC` through `set_target_properties`.\n\n# (libzmq/CMakeLists.txt)\n\n#\n\n# Since we did not use `find_package` + `target_link_libraries`\n\n# here, we must define `ZMQ_STATIC` manually. Otherwise, all\n\n# function declarations in `zmq.h` will have a `__declspec(dllimport)`\n\n# specifier. \n\n# https://github.com/zeromq/libzmq/issues/3318\n",
        "Line" : 12,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "#get_target_property(_libzmq_link_libraries libzmq INTERFACE_LINK_LIBRARIES)\n\n#list(APPEND LIBZMQ_LIBRARIES ${_libzmq_link_libraries})\n",
        "Line" : 33,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# References:\n\n# https://github.com/zeromq/libzmq/issues/3318\n\n# https://github.com/zeromq/czmq/issues/577\n\n# https://stackoverflow.com/questions/31565788/cmake-find-library-with-version-number\n\n# https://github.com/zeromq/libzmq/issues/2333\n\n# https://bitbucket.org/ignitionrobotics/ign-transport/pull-requests/19/detec-zmq-under-windows-using-a-findzmq/diff\n\n# https://github.com/Microsoft/vcpkg/issues/4312\n\n# https://stackoverflow.com/questions/24231570/cmake-importing-a-static-lib-target-and-all-the-libs-it-depends-on\n\n# https://stackoverflow.com/questions/14850736/cmake-imported-library-behaviour\n\n# https://stackoverflow.com/questions/48545720/cmake-shared-library-how-to-get-the-lib-name-instead-of-dll-name\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cpp/CMake/find_python/CMakeLists.txt" : {
      "ObjectId" : "245756ae7dea147b6aa52a4dc77f6d4cf2f46c73",
      "LastModified" : "2019-04-09T11:10:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://github.com/nanopb/nanopb/blob/master/CMakeLists.txt\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/CMake/function_vs_macro/CMakeLists.txt" : {
      "ObjectId" : "462e3a0548707482ad158f8af0f281c4b8d5636d",
      "LastModified" : "2019-04-09T11:10:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########################################################\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########################################################\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "########################################################\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# References:\n\n# https://stackoverflow.com/questions/24297999/function-vs-macro-in-cmake\n\n# https://stackoverflow.com/questions/12023879/let-cmake-not-detect-c-compiler\n\n# https://stackoverflow.com/questions/14375519/how-to-write-a-nice-function-that-passes-variables-by-reference\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cpp/CMake/get_os/CMakeLists.txt" : {
      "ObjectId" : "6649ff31570078c62d4329a6d2ca7874d9e3f07b",
      "LastModified" : "2019-04-09T11:10:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://github.com/Microsoft/cpprestsdk/blob/master/Release/CMakeLists.txt\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/CMake/hello_qt/CMakeLists.txt" : {
      "ObjectId" : "1cc3943924a7fa126e8bdd53c87c08e83f6bef54",
      "LastModified" : "2019-04-09T11:10:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/hello_world_v0/CMakeLists.txt" : {
      "ObjectId" : "c1e0ec1de9a4aa32a9994210f2680e21425efb93",
      "LastModified" : "2019-04-09T11:10:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/hello_world_v1/CMakeLists.txt" : {
      "ObjectId" : "b8a851716366cf8fd2bec90b2f1d53f43a84de83",
      "LastModified" : "2019-04-09T11:10:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/hello_world_v1/src/CMakeLists.txt" : {
      "ObjectId" : "7ae33b26185cc7ba89787034f1b6c2816718aa5a",
      "LastModified" : "2019-04-09T11:10:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/libfoo/CMakeLists.txt" : {
      "ObjectId" : "e297a5ca9a38a4c24e89d21903455c885857187f",
      "LastModified" : "2019-04-09T11:10:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/libfoo/src/CMakeLists.txt" : {
      "ObjectId" : "64ee3f56aa3f43fa9b9d3e64ab0befcba3cb75f5",
      "LastModified" : "2019-04-13T09:00:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://cgold.readthedocs.io/en/latest/tutorials/libraries/static-shared.html\n\n# https://stackoverflow.com/questions/21852817/cmake-how-to-create-alias-for-installing-different-targets\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/CMake/libfoo/tests/CMakeLists.txt" : {
      "ObjectId" : "b6abc1831f1f1be9d83a7b8a3c0d3e93743eb77d",
      "LastModified" : "2019-04-13T09:00:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/libfoo_v2/CMakeLists.txt" : {
      "ObjectId" : "6ff62b1a66b40d05fe7c496e92e9d387beb031b7",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/libfoo_v2/src/CMakeLists.txt" : {
      "ObjectId" : "87b728f6dc01e3b47475cadacf5c0b0c01168e4f",
      "LastModified" : "2019-04-14T03:54:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://cgold.readthedocs.io/en/latest/tutorials/libraries/static-shared.html\n\n# https://stackoverflow.com/questions/21852817/cmake-how-to-create-alias-for-installing-different-targets\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/CMake/libfoo_v2/tests/CMakeLists.txt" : {
      "ObjectId" : "7f49ac1670b6306118054e4a44008b40b3f8d4d3",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/librdkafka_win32_shared_lib_bug/CMakeLists.txt" : {
      "ObjectId" : "704c8464fb14aed3c7e40b5a0cdd07b883cb079e",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/librdkafka_win32_shared_lib_bug/src/CMakeLists.txt" : {
      "ObjectId" : "f2f08255712c32eb8a13eab18d4f754a5e82140f",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://github.com/edenhill/librdkafka/blob/master/src/CMakeLists.txt\n\n# https://github.com/edenhill/librdkafka/blob/master/src-cpp/CMakeLists.txt\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/CMake/librdkafka_win32_shared_lib_bug/tests/CMakeLists.txt" : {
      "ObjectId" : "8455754516f8645efa9e1488d1e25f05d3176f63",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/libsodium/CMakeLists.txt" : {
      "ObjectId" : "3a6de6db934b1252f2f238f024daa384b699f9de",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# HAVE_AVX_ASM\n",
        "Line" : 58,
        "CharPositionInLine" : 48
      },
      "1" : {
        "Text" : "# Unknown pragma\n",
        "Line" : 108,
        "CharPositionInLine" : 20
      },
      "2" : {
        "Text" : "# Macro redefinition\n",
        "Line" : 110,
        "CharPositionInLine" : 20
      },
      "3" : {
        "Text" : "#-Wdiv-by-zero\n",
        "Line" : 154,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "#-Wno-type-limits\n\n#-Wno-unknown-pragmas\n",
        "Line" : 165,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "#-Wsometimes-uninitialized\n",
        "Line" : 173,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "#-Wvariable-decl\n",
        "Line" : 176,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# include/sodium/private/common.h\n",
        "Line" : 618,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# References:\n\n# https://github.com/boost-cmake/bcm/wiki/Cmake-best-practices-and-guidelines\n\n# https://github.com/jedisct1/libsodium/pull/74/files\n\n# https://github.com/jedisct1/libsodium/pull/156/files\n\n# https://github.com/jedisct1/libsodium/pull/181/files\n\n# https://github.com/jedisct1/libsodium/issues/378\n\n# https://github.com/jedisct1/libsodium/issues/636\n\n# https://github.com/jedisct1/libsodium/issues/771\n\n# https://github.com/jedisct1/libsodium/blob/gyp/sodium.gyp\n\n# https://github.com/imefisto/cmake-libsodium\n\n# https://github.com/Cyberunner23/libsodium-CMake\n\n# https://stackoverflow.com/questions/29901352/appending-to-cmake-c-flags\n\n# https://stackoverflow.com/questions/986426/what-do-stdc-limit-macros-and-stdc-constant-macros-mean\n\n# https://gcc.gnu.org/onlinedocs/gcc/Option-Summary.html\n\n# https://stackoverflow.com/questions/15132185/mixing-c-and-assembly-sources-and-build-with-cmake\n\n# https://stackoverflow.com/questions/647892/how-to-check-header-files-and-library-functions-in-cmake-like-it-is-done-in-auto\n\n# https://stackoverflow.com/questions/31038963/how-do-you-rename-a-library-filename-in-cmake\n\n# https://stackoverflow.com/questions/50468620/what-does-enable-testing-do-in-cmake\n\n# https://github.com/edenhill/librdkafka/blob/master/src-cpp/CMakeLists.txt\n",
        "Line" : 726,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cpp/CMake/macro_arg/CMakeLists.txt" : {
      "ObjectId" : "90141702eae9bebf1bd2e3377397a72a3b36ae46",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Question: Can I rename `linkage_upper` to `linkage`?\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/CMake/option_demo/CMakeLists.txt" : {
      "ObjectId" : "e4bb6f52050e9577b36b099c3479f0e0847fb41a",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# rapidjson:CMakeLists.txt\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/CMake/parse_version_number/CMakeLists.txt" : {
      "ObjectId" : "cfaaf8a3b039d675f1a43e771fedc978f6f61f0e",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# LIBXML_VERSION_NUMBER=`expr $LIBXML_MAJOR_VERSION \\* 10000 + $LIBXML_MINOR_VERSION \\* 100 + $LIBXML_MICRO_VERSION`\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# References:\n\n# https://stackoverflow.com/questions/22487215/cmake-function-parameter-and-return\n\n# https://stackoverflow.com/questions/7485227/how-to-increment-variable\n\n# https://github.com/Microsoft/vcpkg/pull/5193\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cpp/CMake/parse_version_number_v2/CMakeLists.txt" : {
      "ObjectId" : "1872356ed21e0fe3d3f5ef199d743983950779f9",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# vcpkg/ports/libxml2\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/CMake/parse_version_number_v3/CMakeLists.txt" : {
      "ObjectId" : "636ea5dffd96cd98f024343d09539e17ce864b55",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/prefix_and_suffix/CMakeLists.txt" : {
      "ObjectId" : "428b61d93effb308fb2d5573f8c7d326e337819f",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# cmocka\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/CMake/raylib_pr789_ci_failure/CMakeLists.txt" : {
      "ObjectId" : "62f085a88e3b21e64e0b3e23f41128e0e2eb9f1d",
      "LastModified" : "2019-04-14T08:49:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://github.com/raysan5/raylib/pull/789\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/CMake/raylib_pr789_ci_failure/examples/CMakeLists.txt" : {
      "ObjectId" : "a4753c227e36ca4e9e3ef139caf91d6c2cfbdedd",
      "LastModified" : "2019-04-14T08:49:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/raylib_pr789_ci_failure/src/CMakeLists.txt" : {
      "ObjectId" : "221bd834daea72b9edad08894aa74dd05ffeb995",
      "LastModified" : "2019-04-14T08:49:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get the sources together\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Keep lib*.(a|dll) name, but avoid *.lib files overwriting each other on Windows\n",
        "Line" : 23,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 2
    },
    "cpp/CMake/vcpkg/Qt5/WebView/MiniBrowser/CMakeLists.txt" : {
      "ObjectId" : "68b53fd46a17abff7d08ea16a82027bd45c4aebc",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://cmake.org/cmake/help/latest/manual/cmake-qt.7.html#manual:cmake-qt(7)\n\n# https://doc.qt.io/qt-5/cmake-manual.html\n\n# https://stackoverflow.com/questions/29468413/qt-resources-files-with-cmake-and-autorcc\n\n# https://github.com/apriorit/MinimalQml\n\n# https://cmake.org/cmake/help/v3.0/manual/cmake-qt.7.html\n\n# https://www.apriorit.com/dev-blog/475-qt-qml-with-cmake\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/CMake/vcpkg/argh_example/CMakeLists.txt" : {
      "ObjectId" : "15355c28f878ef50c6c56c33d7fa708c4cc8e382",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/vcpkg/cjson_example/CMakeLists.txt" : {
      "ObjectId" : "98c9ed1d8e514e626c75d6f1276eaf2461d69905",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/vcpkg/cmocka_tests/CMakeLists.txt" : {
      "ObjectId" : "56de94f24f6c088fa9f8a27dedf886caec056cef",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/vcpkg/cmocka_tests/src/CMakeLists.txt" : {
      "ObjectId" : "ba69902edc4d7aa25184e45f621356ec04ed5a25",
      "LastModified" : "2019-04-13T10:10:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/vcpkg/curlpp_example/CMakeLists.txt" : {
      "ObjectId" : "492c60409a236d26a0a4c5eae0c6c1a2c20c329a",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/vcpkg/findsodium_test/CMakeLists.txt" : {
      "ObjectId" : "a966051036f3caa9bb9febde74675c3e8f351f87",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/vcpkg/findzlib_test/CMakeLists.txt" : {
      "ObjectId" : "35ce45fefbf25ebd9b5aaed7a6b0145da9c3fee7",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -- Found ZLIB: optimized;E:/vcpkg/installed/x64-windows-static/lib/zlib.lib;debug;E:/vcpkg/installed/x64-windows-static/debug/lib/zlibd.lib (found version \"1.2.11\")\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If I do not specify `ZLIB_ROOT` here, the output is:\n\n# -- Found ZLIB: optimized;E:/ProgramData/Anaconda3/Library/lib/z.lib;debug;E:/vcpkg/installed/x64-windows-static/debug/lib/zlibd.lib (found version \"1.2.11\")\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cpp/CMake/vcpkg/g3log_example/CMakeLists.txt" : {
      "ObjectId" : "814c4eb165e4fa38c05e08954e7236b9facb6746",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/vcpkg/librdkafka_pr_2274/CMakeLists.txt" : {
      "ObjectId" : "1170ee6f96de9291425ddf551f89ed5bb5be3916",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://github.com/edenhill/librdkafka/pull/2274\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/CMake/vcpkg/libsodium_test/CMakeLists.txt" : {
      "ObjectId" : "533590dc06cb881721376a8b442903aae7183b1b",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://stackoverflow.com/questions/50468620/what-does-enable-testing-do-in-cmake\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/CMake/vcpkg/libxml2_test/CMakeLists.txt" : {
      "ObjectId" : "61ba4b9320d9335cfb10ce51ac97d6bf0cb282db",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/vcpkg/metal_example/CMakeLists.txt" : {
      "ObjectId" : "648bc41d2ea4a8639d342426c536d630f129f0ec",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/vcpkg/oniguruma_example/CMakeLists.txt" : {
      "ObjectId" : "aa91cff871682f4d58d13ebad251e09b86e07dbf",
      "LastModified" : "2019-04-13T09:02:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/vcpkg/ports/cjson/portfile.cmake" : {
      "ObjectId" : "0cc8d3571f5050ecb52b545794d780714c1e724a",
      "LastModified" : "2019-04-13T10:10:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Export CMake config files\n",
        "Line" : 32,
        "CharPositionInLine" : 34
      },
      "1" : {
        "Text" : "# Handle copyright\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CMake integration test\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cpp/CMake/vcpkg/ports/cmocka/portfile.cmake" : {
      "ObjectId" : "3600fbdeb86476efdff3df45f73a522d2988841e",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Handle copyright\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install usage\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CMake integration test\n\n#vcpkg_test_cmake(PACKAGE_NAME ${PORT})\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cpp/CMake/vcpkg/ports/cmocka/vcpkg-cmake-wrapper.cmake" : {
      "ObjectId" : "24f7860e8e27573e2f07c8b07d5c0fa9312ec230",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/vcpkg/ports/g3log/portfile.cmake" : {
      "ObjectId" : "78a5ac23324b30351dc296326da9f283d1c9a8ec",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Options.cmake\r\n",
        "Line" : 22,
        "CharPositionInLine" : 41
      },
      "1" : {
        "Text" : "# Options.cmake\r\n",
        "Line" : 23,
        "CharPositionInLine" : 49
      },
      "2" : {
        "Text" : "# Handle copyright\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMake integration test\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cpp/CMake/vcpkg/ports/g3log/vcpkg-cmake-wrapper.cmake" : {
      "ObjectId" : "f8efc5d88c59d8663b6356835afd9fe76e201ecb",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/vcpkg/ports/raylib/portfile.cmake" : {
      "ObjectId" : "6af9d18ce8cbdc9fa4f774794d92beb7fee34f32",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# externl glfw3 causes build errors on Windows\n",
        "Line" : 36,
        "CharPositionInLine" : 32
      },
      "1" : {
        "Text" : "# Install usage\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Handle copyright\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMake integration test\n\n#vcpkg_test_cmake(PACKAGE_NAME ${PORT})\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cpp/CMake/vcpkg/raylib_examples/CMakeLists.txt" : {
      "ObjectId" : "336b9e70924a58251aecb8773cb2151fd871823b",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/vcpkg/raylib_examples/core/CMakeLists.txt" : {
      "ObjectId" : "0c880092ca19d5c5f17569b9222eb7a2fcfbf27d",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/vcpkg/roaring_bitmaps_tests/CMakeLists.txt" : {
      "ObjectId" : "6c77115e8e132e3ee1b002eb2d26347bea1fbfe6",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/vcpkg/roaring_bitmaps_tests/src/CMakeLists.txt" : {
      "ObjectId" : "a32a9d03806432a2f18bfed0fe3aa79ab6846971",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/vcpkg/simdjson/print_json/CMakeLists.txt" : {
      "ObjectId" : "9ca3b2c772af103033dec11a18d3e0c7a0756e21",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://stackoverflow.com/questions/45688522/how-to-enable-c17-in-cmake\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/CMake/vcpkg/stxxl_copy_file_example/CMakeLists.txt" : {
      "ObjectId" : "42ca40ef0b074eea9f75c01348d4ba1a370e0e1c",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/vcpkg/tiny_process_library_example/CMakeLists.txt" : {
      "ObjectId" : "ee0a670a562be8bda81813d9541544e171c51b06",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://github.com/ampl/mp/pull/125/files\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/CMake/vcpkg/xeus_example/CMakeLists.txt" : {
      "ObjectId" : "d28727ff2e8147fabd32f1b8fd8faed08a332355",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/vcpkg/xeus_example/echo_client/CMakeLists.txt" : {
      "ObjectId" : "05561780273deb71491a1b9eee3990591b23ec55",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/vcpkg/xeus_example/echo_kernel/CMakeLists.txt" : {
      "ObjectId" : "d2bd3e12017fe5a7fc75c18080e4ab4df50f9ef4",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/vcpkg_cmake_toolchain_demo/CMakeLists.txt" : {
      "ObjectId" : "21809b34b5462f97dd4eb9ee6901c16620c54a8f",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/CMake/vcpkg_cmake_toolchain_demo/vcpkg_cmake_toolchain_demo/CMakeLists.txt" : {
      "ObjectId" : "15e673a7b09139e56a73548825e21afdb65b6faa",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeList.txt : CMake project for vcpkg_cmake_toolchain_demo, include source and define\n\n# project specific logic here.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: Add tests and install targets if needed.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add source to this project's executable.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cpp/ConfigItem/ConfigItemDemo/CMakeLists.txt" : {
      "ObjectId" : "a94d0af280b7352c1a0c59ea0c66becc3da24ccc",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Google/benchmark/ConcurrentQueueBenchmark/CMakeLists.txt" : {
      "ObjectId" : "ddc035abcd419ee1538863663f662b0422c9c58f",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://github.com/Microsoft/vcpkg/issues/4188\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/Google/benchmark/ConcurrentVectorBenchmark/CMakeLists.txt" : {
      "ObjectId" : "07fa8dd14d6475911e3c127cc88131550409dcb8",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Google/benchmark/RingBufferBenchmark/CMakeLists.txt" : {
      "ObjectId" : "f90cd32b737a5a1650546203287de3a641ee1b20",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Google/benchmark/shift_array_elements/deployment.pri" : {
      "ObjectId" : "5f1749fc26dd725b43f321040877b80c1730d8f7",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# This file was generated by an application wizard of Qt Creator.\n\n# The code below handles deployment to Android and Maemo, aswell as copying\n\n# of the application data to shadow build directories on desktop.\n\n# It is recommended not to modify this file, since newer versions of Qt Creator\n\n# may offer an updated version of it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Assumed to be a Desktop Unix\n",
        "Line" : 125,
        "CharPositionInLine" : 13
      },
      "CommentCount" : 2
    },
    "cpp/Google/benchmark/shift_array_elements/shift_array_elements.pro" : {
      "ObjectId" : "2f7b30c52d4276733c3d018f8130c8d5adcfafcb",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "cpp/Google/glog/hello_glog/CMakeLists.txt" : {
      "ObjectId" : "eeddcf6e2146a4f06dc8c8fb5288bb7427baf541",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Google/gtest/isprime_unittest/CMakeLists.txt" : {
      "ObjectId" : "62432a07f710b8a08059765e06ab4e98de38fb6c",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# FindGTest.cmake\n\n# https://github.com/queezythegreat/arduino-cmake/issues/38\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/Qt/BezierCurveDemo/BezierCurveDemo.pro" : {
      "ObjectId" : "c0df5748bc9064cbee1c1ab1ca0c78cde6471612",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2017-07-15T17:35:24\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The following define makes your compiler emit warnings if you use\n\n# any feature of Qt which as been marked as deprecated (the exact warnings\n\n# depend on your compiler). Please consult the documentation of the\n\n# deprecated API in order to know how to port your code away from it.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You can also make your code fail to compile if you use deprecated APIs.\n\n# In order to do so, uncomment the following line.\n\n# You can also select to disable deprecated APIs only up to a certain version of Qt.\n\n#DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0x060000    # disables all the APIs deprecated before Qt 6.0.0\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cpp/Qt/ColorConvert_Qt5.2.1/ColorConvert.pro" : {
      "ObjectId" : "864fe1eb51007e91ea8cbceaaaf8c854796802c9",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-02-21T10:04:14\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/Qt/IPAddrValidator/IPAddrValidator.pro" : {
      "ObjectId" : "a5a74795925ce2c93fd11768a80fdc20370b884c",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-04-30T09:27:44\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/Qt/ImageHistogram/ImageHistogram.pro" : {
      "ObjectId" : "6f38db8ac2f5b8e8dc57600fb6e4b80bfe43edb0",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2016-08-30T08:34:06\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/Qt/MonitorDemo/MonitorDemo.pro" : {
      "ObjectId" : "d8548c25c8f95ecf39c525eb97ca0a442e4e09c2",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2019-01-31T10:32:10\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The following define makes your compiler emit warnings if you use\n\n# any feature of Qt which as been marked as deprecated (the exact warnings\n\n# depend on your compiler). Please consult the documentation of the\n\n# deprecated API in order to know how to port your code away from it.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# https://github.com/qt/qtbase/commit/d57a7c41712f8627a462d893329dc3f0dbb52d32\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You can also make your code fail to compile if you use deprecated APIs.\n\n# In order to do so, uncomment the following line.\n\n# You can also select to disable deprecated APIs only up to a certain version of Qt.\n\n#DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0x060000    # disables all the APIs deprecated before Qt 6.0.0\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cpp/Qt/QCustomPlot/FindQCustomPlot.cmake" : {
      "ObjectId" : "c64290fd34a658f7ba4681a1a94e683179a6292c",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Qt/QCustomPlot/QuadraticDemo/CMakeLists.txt" : {
      "ObjectId" : "1c305cd11c62832562f31cc1960e90b8e7a8af1a",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://github.com/pabloariasal/modern-cmake-sample/blob/master/libjsonutils/CMakeLists.txt\n\n# https://stackoverflow.com/questions/7724569/debug-vs-release-in-cmake\n\n# https://stackoverflow.com/questions/13067401/cmake-check-that-a-local-file-exists\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/Qt/SetLayoutDirection_test/SetLayoutDirection_test.pro" : {
      "ObjectId" : "785349a52d7981618475a2b3b01fab38b7b7a81a",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-07-09T13:24:12\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/Qt/Str2DoubleTest/Str2DoubleTest.pro" : {
      "ObjectId" : "9875c28b66a38976e13b6f995fcf86d5762fe299",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-07-15T16:34:41\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/Qt/StudentInfo_v1/StudentInfo_v1.pro" : {
      "ObjectId" : "38aef5550bc979ecd0e9db025798644101581277",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-05-11T19:45:42\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/Qt/TCPServer/TCPServer.pro" : {
      "ObjectId" : "247bf920a9be15440d8f2af3b642a6d5d6c5b47a",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-03-05T09:42:19\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/Qt/USBWatcher/USBWatcher.pro" : {
      "ObjectId" : "94357e50eaae2732be630a422c9274d1c3772aa4",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2016-08-05T22:11:29\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/Qt/Utf8Decode/Utf8Decode.pro" : {
      "ObjectId" : "c502219e90e9a96de4d1d0d48a620f2c2c8e2e4c",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-04-14T12:52:00\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/Win32/SDK/BasedPointerTest/CMakeLists.txt" : {
      "ObjectId" : "c5e0e9e8374673294a8635f428e5cd49ba399fb0",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Win32/SDK/CriticalSectionDemo/CMakeLists.txt" : {
      "ObjectId" : "a76449dc4ab5caf3252a0356f231c90d57e8d584",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Win32/SDK/QueueUserWorkItemDemo/CMakeLists.txt" : {
      "ObjectId" : "0eddc1d55dc29057a7ade8dc251f0e5759d58f7b",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Win32/SDK/TimerQueueDemo/CMakeLists.txt" : {
      "ObjectId" : "c63ce9581cf453760dea78b35b31392ae745afb7",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Win32/SDK/TimerQueueDemo/TimerQueueDemo/CMakeLists.txt" : {
      "ObjectId" : "bdd976d01d7050eec6cf3eff54bf86119f73a937",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Win32/SDK/terminate_working_thread_v2/CMakeLists.txt" : {
      "ObjectId" : "e6e02cb7223c03fa3b30fde10fc2dfffe9dd3c6b",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Win32/SDK/terminate_working_thread_v2/terminate_working_thread_v2/CMakeLists.txt" : {
      "ObjectId" : "c75442e7a47aadda6a7e36aba2932e6d585095bf",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Win32/SDK/terminate_working_thread_v3/CMakeLists.txt" : {
      "ObjectId" : "718bfbf086cf4130ebe7ffbd0821e4f07f25e2dd",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/Win32/SDK/terminate_working_thread_v3/terminate_working_thread_v3/CMakeLists.txt" : {
      "ObjectId" : "96b43151cbcaa2aca4fd14419a22988cf70f8c02",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/cpp-taskflow/taskflow_sample/CMakeLists.txt" : {
      "ObjectId" : "87875a2ac4edadb06a96166fa9fad503e427fa59",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/docopt/docopt_test/CMakeLists.txt" : {
      "ObjectId" : "6427fd0d1d8698b7ad00893cda3e7b65e9a24d28",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(VCPKG_CRT_LINKAGE dynamic)\n\n#set(VCPKG_LIBRARY_LINKAGE static)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpp/erase_last_if/erase_last_if.pro" : {
      "ObjectId" : "960fe2ad853f545c944daba76ebf73c70395aa91",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "cpp/nanomsg/1vn/CMakeLists.txt" : {
      "ObjectId" : "196e132b4c1ca936148d406ed1a3f1935afc01cf",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cpp/protobuf/person_example/CMakeLists.txt" : {
      "ObjectId" : "3b82fcff53c104681c8d39c59dca66cad637ca32",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# http://www.cmake.org/Wiki/CMake_FAQ#How_can_I_build_my_MSVC_application_with_a_static_runtime.3F\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Code generation\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# References:\n\n# https://github.com/protocolbuffers/protobuf/blob/master/examples/CMakeLists.txt\n\n# https://stackoverflow.com/questions/52533396/cmake-cant-find-protobuf-protobuf-generate-cpp\n\n# https://stackoverflow.com/questions/16736819/protobuf-generate-cpp-during-creation-of-cmake-files\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cpp/rapidjson/print_json/CMakeLists.txt" : {
      "ObjectId" : "6605e4b2bd1a9df932bb3234fac2aa723ae56ae0",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://stackoverflow.com/questions/45688522/how-to-enable-c17-in-cmake\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "os/ProducerConsumerProblem/ProducerConsumerProblemCpp11/CMakeLists.txt" : {
      "ObjectId" : "9783627efc8b5cd409c1543766bc98347ec0f4d4",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "os/ProducerConsumerProblem/ProducerConsumerProblemCpp11v2/CMakeLists.txt" : {
      "ObjectId" : "309e8baac3bc7e1410befe067b6527cd18fe670e",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# References:\n\n# https://github.com/Microsoft/vcpkg/issues/4188\n\n# https://stackoverflow.com/questions/1065672/how-to-link-against-boost-system-with-cmake\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "os/ProducerConsumerProblem/ProducerConsumerProblemCpp11v3/CMakeLists.txt" : {
      "ObjectId" : "a1cc8dd3d94e799c1cdd9ae7b66a7793e51d3bd6",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Currently, find_package does work with `PThreads` when using vcpkg.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# References:\n\n# https://stackoverflow.com/questions/1620918/cmake-and-libpthread\n\n# https://stackoverflow.com/questions/13067401/cmake-check-that-a-local-file-exists\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "os/ProducerConsumerProblem/ProducerConsumerProblemCpp11v4/CMakeLists.txt" : {
      "ObjectId" : "a1cc8dd3d94e799c1cdd9ae7b66a7793e51d3bd6",
      "LastModified" : "2019-04-13T10:15:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Currently, find_package does work with `PThreads` when using vcpkg.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# References:\n\n# https://stackoverflow.com/questions/1620918/cmake-and-libpthread\n\n# https://stackoverflow.com/questions/13067401/cmake-check-that-a-local-file-exists\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 148,
    "QMAKE" : 18
  },
  "ElapsedTime" : 1268
}