{
  "Repository" : "34461599",
  "Revision" : "HEAD",
  "ObjectId" : "0ad5451950661900c8e6c9db0c084ebecdf2351f",
  "CommitTime" : "2018-11-19T19:42:05Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "22951c59d2ba912f3429684f90e49a230b81ad6f",
      "LastModified" : "2018-11-08T23:28:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#git tag\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Build parameters\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#used in Maven builds\n",
        "Line" : 14,
        "CharPositionInLine" : 83
      },
      "3" : {
        "Text" : "# used in Maven builds\n",
        "Line" : 38,
        "CharPositionInLine" : 87
      },
      "4" : {
        "Text" : "#See https://cmake.org/Wiki/CMake_RPATH_handling#Common_questions\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Platform check modules\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#For the GNU compiler, link in static gcc libraries\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#Check C++ 2011 support\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Check for stack-protector-strong\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Warnings\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#MPI library/compiler etc\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#large file support\n",
        "Line" : 112,
        "CharPositionInLine" : 41
      },
      "12" : {
        "Text" : "#htslib is a mandatory requirement\n",
        "Line" : 113,
        "CharPositionInLine" : 28
      },
      "13" : {
        "Text" : "#mandatory\n",
        "Line" : 114,
        "CharPositionInLine" : 43
      },
      "14" : {
        "Text" : "#RapidJSON\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#htslib\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#TileDB\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#librt\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#pgsql driver and dbi libs\n\n#find_package(libdbi)\n\n#if(LIBDBI_FOUND)\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#include_directories(${LIBDBI_INCLUDE_DIR})\n\n#add_definitions(-DLIBDBI)\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#endif()\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#Protobuf library\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#JNI\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#libcsv\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#Collect stats\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#Collect some more stats\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "#Collect memory consumption stats while producing combined VCF records\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#Produce verbose output\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# CMake doesn't add \"-pie\" by default for executables (CMake issue #14983)\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#Clean all\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#add_executable(${target} src/${target}.cc)\n",
        "Line" : 284,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "#Must be set here - see https://cmake.org/cmake/help/v3.3/command/set_source_files_properties.html\n",
        "Line" : 368,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "#Protobuf files are generated by Maven\n",
        "Line" : 370,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "#Maven build - depends on dynamic library\n",
        "Line" : 394,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "#Deploy to Maven central\n\n#Cannot specify the jars in the DEPENDS clause. CMake manual specifies, quoting:\n\n#\"Do not list the output in more than one independent target that may build in parallel or\n\n#the two instances of the rule may conflict\"\n\n#Jars are already listed as dependencies in the add_jar command (-examples)\n\n#So, use the examples target as a dependency for this target\n",
        "Line" : 420,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 35
    },
    "cmake/Modules/CheckAndSetStackProtectorStrong.cmake" : {
      "ObjectId" : "a51e88c1db7e84b2d25ad8a191b5a3078c81308b",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Check -fstack-protector-strong\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/CheckAndSetStdCXX2011Flag.cmake" : {
      "ObjectId" : "bbaeae54ade6f305882bf3ccf48fb74ac35b0071",
      "LastModified" : "2017-03-15T14:44:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Check C++ 2011 support\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindCURL.cmake" : {
      "ObjectId" : "95f3048d1d8fc8073aa8062feada8de4893e5113",
      "LastModified" : "2018-07-13T20:00:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find curl\n\n# Find the native CURL headers and libraries.\n\n#\n\n#  CURL_INCLUDE_DIRS   - where to find curl/curl.h, etc.\n\n#  CURL_LIBRARIES      - List of libraries when using curl.\n\n#  CURL_FOUND          - True if curl found.\n\n#  CURL_VERSION_STRING - the version of curl found (since CMake 2.8.8)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2012 Rolf Eike Beer <eike@sf-mail.de>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for the library (sorted from most current/relevant entry to least).\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Windows MSVC prebuilts:\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Windows older \"Win32 - MSVC\" prebuilts (libcurl.lib, e.g. libcurl-7.15.5-win32-msvc.zip):\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set CURL_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/Modules/FindGPerftools.cmake" : {
      "ObjectId" : "1433857dfff215d97e4a15245c2bc16ea4e68717",
      "LastModified" : "2018-07-13T20:00:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determine compiler flags for gperftools\n\n# Once done this will define\n\n# GPERFTOOLS_FOUND - gperftools found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindIPP.cmake" : {
      "ObjectId" : "c58cf2d265e2d3f34f407c5bc67c96b8fbf5cebe",
      "LastModified" : "2018-07-13T20:00:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determine path to IPP libraries for Zlib\n\n# Once done this will define\n\n# LIBIPP_FOUND - IPP found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindOpenMPv4.cmake" : {
      "ObjectId" : "d6765920325322d11a95a1fc8e4930b8d4d323c8",
      "LastModified" : "2018-07-13T20:00:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determine if OpenMP specification v4 is supported by the C/C++ compiler\n\n# Once done this will define\n\n# OPENMPV4_FOUND - OpenMP v4 found\n\n# OpenMP_C_FLAGS\n\n# OpenMP_CXX_FLAGS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindProtobufWrapper.cmake" : {
      "ObjectId" : "1866fe04e0988dfc0e2743968030b6c47699e264",
      "LastModified" : "2018-07-13T20:00:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Following the standard CMake FindProtobuf module\n\n# Determine compiler flags for protobuf\n\n# Once done this will define\n\n# PROTOBUF_LIBRARY_FOUND - protobuf found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindRapidJSON.cmake" : {
      "ObjectId" : "94a536b2b5497f07975a76aa13ea9aa690f4a12b",
      "LastModified" : "2018-07-13T20:00:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determine compiler flags for RapidJSON\n\n# Once done this will define\n\n# RAPIDJSON_FOUND - RapidJSON found\n\n# RapidJSON_C_FLAGS\n\n# RapidJSON_CXX_FLAGS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#If specified by user\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindTileDB.cmake" : {
      "ObjectId" : "5cb147ba47d78ce4ca0bee8b3cb420c33eeb44b7",
      "LastModified" : "2018-07-13T20:00:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determine compiler flags for TileDB\n\n# Once done this will define\n\n# TILEDB_FOUND - TileDB found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Disable Master Catalog in TileDB\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Zlib\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#OpenSSL\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#now performed inside TileDB\n",
        "Line" : 19,
        "CharPositionInLine" : 31
      },
      "5" : {
        "Text" : "#libuuid\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Build if TileDB source directory specified\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#OpenMP\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/Modules/Findhtslib.cmake" : {
      "ObjectId" : "90abf241bc849d5bbffdbc8f10e7aed779473689",
      "LastModified" : "2018-07-13T20:00:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determine compiler flags for htslib\n\n# Once done this will define\n\n# HTSLIB_FOUND - htslib found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Build if htslib source directory specified\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#will be picked if compiling in debug mode\n",
        "Line" : 8,
        "CharPositionInLine" : 67
      },
      "3" : {
        "Text" : "#Cross compiling for MacOSX\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#BUILD_IN_SOURCE 1\n",
        "Line" : 47,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "cmake/Modules/Findlibcsv.cmake" : {
      "ObjectId" : "b65daacb3a81aaf6bd057ed82884a10d98f781d0",
      "LastModified" : "2018-07-13T20:00:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determine compiler flags for libcsv\n\n# Once done this will define\n\n# LIBCSV_FOUND - libcsv found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/Findlibdbi.cmake" : {
      "ObjectId" : "d88b34a7df553a9b063884a06bd6fa6d1e9587d4",
      "LastModified" : "2018-07-13T20:00:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determine compiler flags for libdbi\n\n# Once done this will define\n\n# LIBDBI_FOUND - libdbi found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/Findlibuuid.cmake" : {
      "ObjectId" : "c92a8cb0c33b7456c9198ad3a1b8dfd02665453e",
      "LastModified" : "2018-07-13T20:00:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determine compiler flags for libuuid\n\n# Once done this will define\n\n# LIBUUID_FOUND - libuuid found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/Findsafestringlib.cmake" : {
      "ObjectId" : "de2523422918ec9fc9dfe092dbf5f7df1b5577cc",
      "LastModified" : "2018-07-27T18:52:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determine compiler flags for libuuid\n\n# Once done this will define\n\n# SAFESTRINGLIB_FOUND - libuuid found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "example/CMakeLists.txt" : {
      "ObjectId" : "1fc2c7de994679893ecd5218515e4b67fbea836d",
      "LastModified" : "2018-07-27T18:52:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pom.xml" : {
      "ObjectId" : "51f7ea143c872ed205d3622c2a6ff6e5cbdc84f8",
      "LastModified" : "2018-07-27T18:52:43Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Build version passed from parent Makefile ",
        "Line" : 10,
        "CharPositionInLine" : 53
      },
      "1" : {
        "Text" : " Distribution management section to push jars to Maven central",
        "Line" : 37,
        "CharPositionInLine" : 72
      },
      "2" : {
        "Text" : "Required to convert protocol buffer to JSON string conversion\n         using for JsonFormat.printToString",
        "Line" : 100,
        "CharPositionInLine" : 47
      },
      "3" : {
        "Text" : "Protobuf generation - adapted from http://vlkan.com/blog/post/2015/11/27/maven-protobuf/",
        "Line" : 298,
        "CharPositionInLine" : 106
      },
      "4" : {
        "Text" : "Add src/main/scala to source path of Eclipse ",
        "Line" : 335,
        "CharPositionInLine" : 67
      },
      "CommentCount" : 5
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "7a6371ee2d961df73ac3f780924c38aa7d567208",
      "LastModified" : "2018-07-27T18:52:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/main/CMakeLists.txt" : {
      "ObjectId" : "e024ed1999c8162b8220db47773e0d54362ef743",
      "LastModified" : "2018-07-27T18:52:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Must be set here - see https://cmake.org/cmake/help/v3.3/command/set_source_files_properties.html\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#Compile sources with PIC\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Create the shared and static libraries\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Link in other libraries\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#if(BUILD_DISTRIBUTABLE_LIBRARY)\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#target_link_libraries(tiledbgenomicsdb ${OPENSSL_LIBRARIES})\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#endif()\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/resources/CMakeLists.txt" : {
      "ObjectId" : "5c93b74927fcda28f734c747ed34432295cb9a96",
      "LastModified" : "2018-07-27T18:52:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/CMakeLists.txt" : {
      "ObjectId" : "2322a85f776c2327f65a6be80fd4e21df4814cd7",
      "LastModified" : "2018-07-27T18:52:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/cpp/CMakeLists.txt" : {
      "ObjectId" : "febd4f0ab6f826fc669a9047b2c86fd7dc8c351d",
      "LastModified" : "2018-07-27T18:52:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/cpp/src/CMakeLists.txt" : {
      "ObjectId" : "4fd21ffdcf0fcfe655e655ae6b943e2ec17d0631",
      "LastModified" : "2018-07-27T18:52:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "b4458ca7d92fe9fb3f9a5f98ba3fdf62917e673f",
      "LastModified" : "2018-07-27T18:52:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 23,
    "MAVEN" : 1
  },
  "ElapsedTime" : 1501
}