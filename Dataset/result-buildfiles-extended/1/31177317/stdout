{
  "Repository" : "31177317",
  "Revision" : "HEAD",
  "ObjectId" : "9c750f46c5623b912ea32a4998f3d3e81e9035d2",
  "CommitTime" : "2019-04-11T11:05:13Z",
  "Files" : {
    "CMake/FindLibUSB.cmake" : {
      "ObjectId" : "8b259e3e9bc5c28ee405b4b2761851d4aeec2d18",
      "LastModified" : "2018-06-04T02:24:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find libusb for portable USB support\n\n# This module will find libusb as published by\n\n#  http://libusb.sf.net and\n\n#  http://libusb-win32.sf.net\n\n# \n\n# It will use PkgConfig if present and supported, else search\n\n# it on its own. If the LibUSB_ROOT_DIR environment variable\n\n# is defined, it will be used as base path.\n\n# The following standard variables get defined:\n\n#  LibUSB_FOUND:        true if LibUSB was found\n\n#  LibUSB_HEADER_FILE:  the location of the C header file\n\n#  LibUSB_INCLUDE_DIRS: the directory that contains the include file\n\n#  LibUSB_LIBRARIES:    the library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# LibUSB-Win32 binary distribution contains several libs.\n\n# Use the lib that got compiled with the same compiler.\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "CMake/Findlibtm.cmake" : {
      "ObjectId" : "d975794a351ef5e5944d6ecec332a72f1e853547",
      "LastModified" : "2018-11-15T14:48:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find libtm\n\n# Find the LIBTM headers and libraries.\n\n# Set root directory of libtm as ENVIRONMENT VARIABLE: LIBTM_DIR\n\n# Then use with find_package(libtm) in your project\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add windows/linux SUFFIX for libraries\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#try to search for the LIBTM_DIR enviroment VARIABLE\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Look for the library.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Look for the library debug flavor.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Look for the library.\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Look for the library debug flavor.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# handle the LIBTM and REQUIRED arguments and set LIBTM_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#set target architeture variable\n",
        "Line" : 74,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Force-link to libusb on Windows\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 11
    },
    "CMake/android_config.cmake" : {
      "ObjectId" : "d6bff644e0235fe36023d5b8105b15c097e29c2e",
      "LastModified" : "2019-03-05T21:19:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/apple_config.cmake" : {
      "ObjectId" : "cd3fd759537d1259be43d1fbdee6d4242b0f8125",
      "LastModified" : "2019-03-10T06:50:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/cuda_config.cmake" : {
      "ObjectId" : "d03a0f53dfba20f53aa23f5d0be4aa2a844e637e",
      "LastModified" : "2018-11-15T14:48:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/external_libusb.cmake" : {
      "ObjectId" : "ae66e7cf718dc571c35676fe0e425353774b3abf",
      "LastModified" : "2019-03-10T06:50:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(LIBUSB_LOCAL_INCLUDE_PATH third-party/libusb)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/global_config.cmake" : {
      "ObjectId" : "3c4deea429442b32a892543900f5330d53ddcf7e",
      "LastModified" : "2018-11-15T14:48:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# View the makefile commands during build\n\n#set(CMAKE_VERBOSE_MAKEFILE on)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include librealsense helper macros\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/include_os.cmake" : {
      "ObjectId" : "e8c2a529a197a234787c530975585510e2be8a15",
      "LastModified" : "2018-11-15T14:48:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/install_config.cmake" : {
      "ObjectId" : "0cb95da661a7ec09e032061fdca91f65cbbc915a",
      "LastModified" : "2018-11-15T14:48:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set CMAKE_INSTALL_* if not defined\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set library pkgconfig file for facilitating 3rd party integration\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/lrs_macros.cmake" : {
      "ObjectId" : "d4f7136360baa2d64b89bf28ffa001bc9ba3f5b0",
      "LastModified" : "2018-11-15T14:48:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/lrs_options.cmake" : {
      "ObjectId" : "ec978521c6caa1c9088616d6c20331071a06606e",
      "LastModified" : "2019-03-28T08:35:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/opengl_config.cmake" : {
      "ObjectId" : "3c75caf036a86e6a1a6be2b1dc65ed7cca677541",
      "LastModified" : "2019-03-10T06:50:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/openmp_config.cmake" : {
      "ObjectId" : "ddd3ceee71069279b31c7d2a2fa7c59880849426",
      "LastModified" : "2018-11-15T14:48:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/tm2_connectivity_check.cmake" : {
      "ObjectId" : "fe29eec4d761d1376480d3cf6034d8b6f4c090fa",
      "LastModified" : "2018-11-15T14:48:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/unix_config.cmake" : {
      "ObjectId" : "9edea27db194c62a0e2931ecd2621e4060efa740",
      "LastModified" : "2019-03-10T06:50:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/version_config.cmake" : {
      "ObjectId" : "ff6dc9271b0ec62b8ec1da99b231228c60cda355",
      "LastModified" : "2018-11-15T14:48:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##################################################################\n\n# Parse librealsense version and assign it to CMake variables    #\n\n# This function parses librealsense public API header file, rs.h #\n\n# and retrieves version numbers embedded in the source code.     #\n\n# Since the function relies on hard-coded variables, it is prone #\n\n# for failures should these constants be modified in future      #\n\n##################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/windows_config.cmake" : {
      "ObjectId" : "afde45c743aa1e3a11a4f2064b38db1d80f782d8",
      "LastModified" : "2018-11-15T14:48:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Makes VS15 find the DLL when trying to run examples/tests\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# build with multiple cores\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "## Check for Windows Version ##\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Windows 7\n",
        "Line" : 15,
        "CharPositionInLine" : 68
      },
      "4" : {
        "Text" : "# Some other windows version\n",
        "Line" : 19,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 5
    },
    "CMakeLists.txt" : {
      "ObjectId" : "78834fe16eee21aeaaad1f196371ef38a37a47fb",
      "LastModified" : "2019-03-28T08:35:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include librealsense general configuration\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include os specific macros\n\n# macro definition located at \"CMake/global_config.cmake\"\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set os specific configuration flags\n\n# macro definition located at \"CMake/<OS>_config.cmake\"\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set global configuration flags\n\n# macro definition located at \"CMake/global_config.cmake\"\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set library version\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Checking Internet connection, as TM2 needs to download the FW from amazon cloud\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# configure the project according to OS specific requirments\n\n# macro definition located at \"CMake/<OS>_config.cmake\"\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# global project configuration\n\n# macro definition located at \"CMake/global_config.cmake\"\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake_uninstall.cmake" : {
      "ObjectId" : "a66f8999fefc16d9d9b4a1ebf48e3689a1daa15a",
      "LastModified" : "2018-11-15T14:48:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/C/color/CMakeLists.txt" : {
      "ObjectId" : "c00a018dd409e64ac25e944dc504b3d3e028c046",
      "LastModified" : "2019-03-10T06:50:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/C/depth/CMakeLists.txt" : {
      "ObjectId" : "adb504a2aa519d41ecf40c9356fabc5610b669ed",
      "LastModified" : "2019-03-10T06:50:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/C/distance/CMakeLists.txt" : {
      "ObjectId" : "2e2214e3b0b15a665d82344a0235261a82ac5ccb",
      "LastModified" : "2019-03-10T06:50:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "f39a06271f410e078a2c6d8dee844fdb2170e0f7",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# View the makefile commands during build\n\n#set(CMAKE_VERBOSE_MAKEFILE on)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "examples/align-advanced/CMakeLists.txt" : {
      "ObjectId" : "4fe6c6057130a000510b464098efc3d84a04bc77",
      "LastModified" : "2019-03-28T08:35:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#align\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "examples/align/CMakeLists.txt" : {
      "ObjectId" : "79d7039fe71da89a3fc8ac212499855ff911288b",
      "LastModified" : "2019-03-28T08:35:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#align\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "examples/ar-basic/CMakeLists.txt" : {
      "ObjectId" : "d1ef5245c75aa16520218b9a2b1d6807242df5c5",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/callback/CMakeLists.txt" : {
      "ObjectId" : "d34e0cf1db62873f2103bd662370ea8ca9aca9b4",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/capture/CMakeLists.txt" : {
      "ObjectId" : "f1c139cec59be9718dbc221303a14c2f4fd3895d",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/cmake/CMakeLists.txt" : {
      "ObjectId" : "682b9a76d65d429fd25d792e4ba46e8f5b64f268",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find librealsense2 installed package\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Enable C++11\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add the application sources to the target\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Link librealsense2 to the target\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "examples/hello-realsense/CMakeLists.txt" : {
      "ObjectId" : "75e192c2c0dafe2caf2d751cdc3613f71671b2ce",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/measure/CMakeLists.txt" : {
      "ObjectId" : "13f7785d133db381c064ebdfe309ebd4eea964a2",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/motion/CMakeLists.txt" : {
      "ObjectId" : "56fb6450548cc7aaa4097d138aa94e798901ede4",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/multicam/CMakeLists.txt" : {
      "ObjectId" : "85709793db7a937649538a2076046e6988e39cb9",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# multicam\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "examples/pointcloud/CMakeLists.txt" : {
      "ObjectId" : "7a26d1cbb8ea6036b1ae97049134f3c243a56227",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#pointcloud\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "examples/pose-and-image/CMakeLists.txt" : {
      "ObjectId" : "993b078dda1ee46d9be52f51696d30f5ea7f54d8",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/pose-predict/CMakeLists.txt" : {
      "ObjectId" : "6a5339ba00d70a4b18a6b17d76bf5fe49f687f48",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/pose/CMakeLists.txt" : {
      "ObjectId" : "fc04e28bca736541852ededb738bfdd221370178",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/post-processing/CMakeLists.txt" : {
      "ObjectId" : "06ed4e319b3a4407ce6be669e8d5d5a42204d321",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/record-playback/CMakeLists.txt" : {
      "ObjectId" : "cfe911773ed137eee3fb4e08e696e9bc67e7cea3",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/save-to-disk/CMakeLists.txt" : {
      "ObjectId" : "d846367903a9498e22056c2cd79425ca0393ca19",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# save-to-disk\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "examples/sensor-control/CMakeLists.txt" : {
      "ObjectId" : "7da454392acd01355bfb71b9f99700597c6e91da",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#sensor-control\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "examples/software-device/CMakeLists.txt" : {
      "ObjectId" : "aedf074719267c59b04d433e0bc41bb98b364535",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/trajectory/CMakeLists.txt" : {
      "ObjectId" : "dc1eb2b224f5969bac756c519f4c5f0d39ea6463",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "include/CMakeLists.txt" : {
      "ObjectId" : "8fd7b3d8f098b71220c3889bd6b0698c8305bc78",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "fbfd0e2a681439d1a2b030bec60e84137d6fdc17",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/android/CMakeLists.txt" : {
      "ObjectId" : "9ad4618041f3746d922a25198a3bf9a00f0da371",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/core/CMakeLists.txt" : {
      "ObjectId" : "754b7a3bc486958368d33fb00df50ad64ccf6905",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cuda/CMakeLists.txt" : {
      "ObjectId" : "7f17cee1c11e36c9838b4e6915d24a70ef603309",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/ds5/CMakeLists.txt" : {
      "ObjectId" : "c0d58d1bb4e45ceeb7c1d05e4798eb705b2d54ff",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/ivcam/CMakeLists.txt" : {
      "ObjectId" : "cab7d98d6a8204ed486e6b33341ef84a0d730d81",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/l500/CMakeLists.txt" : {
      "ObjectId" : "4ccefa320f843c2558afd691f554194ba30f8659",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/libuvc/CMakeLists.txt" : {
      "ObjectId" : "34762985c170ed3be7cf632d8f025b21fab22c5a",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/linux/CMakeLists.txt" : {
      "ObjectId" : "0832cd08bef6a558825f20c87784792386c81824",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/media/CMakeLists.txt" : {
      "ObjectId" : "02fc0dd2470cc829420cddbfadbddeab00a15d4e",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/mock/CMakeLists.txt" : {
      "ObjectId" : "7111fefdb6ba8188d36ffe3503d61eddad3774ce",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/pipeline/CMakeLists.txt" : {
      "ObjectId" : "499e2356efc184cef383515e76bf8cae5e6cf280",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/proc/CMakeLists.txt" : {
      "ObjectId" : "3cd9d468c2a8b02c055005dfef198eab9684e9c4",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/proc/cuda/CMakeLists.txt" : {
      "ObjectId" : "ad81857edf88a61ca414938c1b5e896202459f14",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/proc/sse/CMakeLists.txt" : {
      "ObjectId" : "918c1c43b87a7586cbc98bb9b485a3cc81416701",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/res/CMakeLists.txt" : {
      "ObjectId" : "781d72d0d0326f8cb5c24c9fa1b42f0a4d0249e8",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tm2/CMakeLists.txt" : {
      "ObjectId" : "1b6728dd56419a116346ff86299e5fb30653bf8d",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/win/CMakeLists.txt" : {
      "ObjectId" : "308eca98c3a6ec6853cfb0f9ecfc599871dd0ee4",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/win7/CMakeLists.txt" : {
      "ObjectId" : "e2448199c43620b4ef0991399166f8bf0adf94cb",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third-party/CMakeLists.txt" : {
      "ObjectId" : "877d8787ad704f3bef695c7c75e98566bafe3af4",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add additional include directories to allow file to include rosbag headers\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third-party/easyloggingpp/CMakeLists.txt" : {
      "ObjectId" : "dd1e282d7fb3c22cbe65a502a851d1b24604c719",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third-party/glfw/CMake/GenerateMappings.cmake" : {
      "ObjectId" : "7a88e3d4457c21ae16a60ee6c9ab19307d7b212a",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Usage:\n\n# cmake -P GenerateMappings.cmake <path/to/mappings.h.in> <path/to/mappings.h>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third-party/glfw/CMake/amd64-mingw32msvc.cmake" : {
      "ObjectId" : "c264ff0dabdf30beb46d816f17d2e43528f5b0bc",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win64\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure the behaviour of the find commands\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "third-party/glfw/CMake/i586-mingw32msvc.cmake" : {
      "ObjectId" : "c871e5be50d8c500da947b8623ec789ad891f107",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure the behaviour of the find commands\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "third-party/glfw/CMake/i686-pc-mingw32.cmake" : {
      "ObjectId" : "b657d94481b6e1b77ae30ed788efe14f0ce6c27f",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target system name\n",
        "Line" : 2,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "#Configure the behaviour of the find commands\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "third-party/glfw/CMake/i686-w64-mingw32.cmake" : {
      "ObjectId" : "bbd9f8956e284739f972ec1f8b7bf80c435a7514",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target system name\n",
        "Line" : 2,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "# Configure the behaviour of the find commands\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "third-party/glfw/CMake/modules/FindEpollShim.cmake" : {
      "ObjectId" : "2facb4192cf052dac6579ce610cb854a75cc63b4",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find EpollShim\n\n# Once done, this will define\n\n#\n\n#   EPOLLSHIM_FOUND - System has EpollShim\n\n#   EPOLLSHIM_INCLUDE_DIRS - The EpollShim include directories\n\n#   EPOLLSHIM_LIBRARIES - The libraries needed to use EpollShim\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third-party/glfw/CMake/modules/FindOSMesa.cmake" : {
      "ObjectId" : "3194bd91aba752835fd7ecc4de3db403d8efc82e",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find OSMesa on a Unix system\n\n#\n\n# This will define:\n\n#\n\n#   OSMESA_LIBRARIES   - Link these to use OSMesa\n\n#   OSMESA_INCLUDE_DIR - Include directory for OSMesa\n\n#\n\n# Copyright (c) 2014 Brandon Schaefer <brandon.schaefer@canonical.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third-party/glfw/CMake/modules/FindVulkan.cmake" : {
      "ObjectId" : "5004356b117f125500b97fbe87124d9f18c30c66",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Vulkan\n\n#\n\n# VULKAN_INCLUDE_DIR\n\n# VULKAN_LIBRARY\n\n# VULKAN_FOUND\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third-party/glfw/CMake/modules/FindWaylandProtocols.cmake" : {
      "ObjectId" : "8eb83f27ef88575f80a56198bd2635580452a914",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third-party/glfw/CMake/modules/FindXKBCommon.cmake" : {
      "ObjectId" : "0f571eeacb5cd91d4ef72a89a066142e5a6a0d0a",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find XKBCommon\n\n# Once done, this will define\n\n#\n\n#   XKBCOMMON_FOUND - System has XKBCommon\n\n#   XKBCOMMON_INCLUDE_DIRS - The XKBCommon include directories\n\n#   XKBCOMMON_LIBRARIES - The libraries needed to use XKBCommon\n\n#   XKBCOMMON_DEFINITIONS - Compiler switches required for using XKBCommon\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third-party/glfw/CMake/x86_64-w64-mingw32.cmake" : {
      "ObjectId" : "e629e4573f0173addaaa41b4bea8cd4c403569d1",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target system name\n",
        "Line" : 2,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "# Configure the behaviour of the find commands\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "third-party/glfw/CMakeLists.txt" : {
      "ObjectId" : "4e6167e26d454ae94f739e44f463c6dc8eb24807",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#option(BUILD_SHARED_LIBS \"Build shared libraries\" ON)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# On Unix-like systems, shared libraries can use the soname system.\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Set compiler specific flags\n\n#--------------------------------------------------------------------\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Workaround for VS 2008 not shipping with the DirectX 9 SDK\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Workaround for VS 2008 not shipping with stdint.h\n",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Workaround for legacy MinGW not providing XInput and DirectInput\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Enable link-time exploit mitigation features enabled by default on MSVC\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Compatibility with data execution prevention (DEP)\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Compatibility with address space layout randomization (ASLR)\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Compatibility with 64-bit address space layout randomization (ASLR)\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Detect and select backend APIs\n\n#--------------------------------------------------------------------\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Add Vulkan static library if requested\n\n#--------------------------------------------------------------------\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Find and add Unix math and time libraries\n\n#--------------------------------------------------------------------\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use Win32 for window creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use X11 for window creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Set up library and include paths\n",
        "Line" : 224,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Check for XRandR (modern resolution switching and gamma control)\n",
        "Line" : 228,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Check for Xinerama (legacy multi-monitor support)\n",
        "Line" : 233,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Check for Xkb (X keyboard extension)\n",
        "Line" : 238,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Check for Xcursor (cursor creation from RGBA images)\n",
        "Line" : 243,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use Wayland for window creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use OSMesa for offscreen context creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use Cocoa for window creation and NSOpenGL for context creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Export GLFW library dependencies\n\n#--------------------------------------------------------------------\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Create generated files\n\n#--------------------------------------------------------------------\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Add subdirectories\n\n#--------------------------------------------------------------------\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Install files other than the library\n\n# The library is installed by src/CMakeLists.txt\n\n#--------------------------------------------------------------------\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Only generate this target if no higher-level project already has\n\n# if (NOT TARGET uninstall)\n",
        "Line" : 375,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# configure_file(cmake_uninstall.cmake.in\n",
        "Line" : 377,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# cmake_uninstall.cmake IMMEDIATE @ONLY)\n",
        "Line" : 378,
        "CharPositionInLine" : 23
      },
      "30" : {
        "Text" : "# add_custom_target(uninstall\n",
        "Line" : 380,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# \"${CMAKE_COMMAND}\" -P\n\n# \"${GLFW_BINARY_DIR}/cmake_uninstall.cmake\")\n",
        "Line" : 381,
        "CharPositionInLine" : 26
      },
      "32" : {
        "Text" : "# set_target_properties(uninstall PROPERTIES FOLDER \"GLFW3\")\n",
        "Line" : 383,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# endif()\n",
        "Line" : 384,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 34
    },
    "third-party/glfw/docs/CMakeLists.txt" : {
      "ObjectId" : "4b8cc3d52416ecf3649db7fd3a30d54039ed7fee",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third-party/glfw/examples/CMakeLists.txt" : {
      "ObjectId" : "b458609fd7b2a6dd57138096ac99165f9a1384fa",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tell MSVC to use main instead of WinMain for Windows subsystem executables\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "third-party/glfw/src/CMakeLists.txt" : {
      "ObjectId" : "6bf4ff0d79671cc9edc5450d94903a5f343697c1",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For some reason, CMake doesn't know about .m\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Make GCC and Clang warn about declarations that VS 2010 and 2012 won't accept\n\n# for all source files that VS will build\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# HACK: When building on MinGW, WINVER and UNICODE need to be defined before\n\n# the inclusion of stddef.h (by glfw3.h), which is itself included before\n\n# win32_platform.h.  We define them here until a saner solution can be found\n\n# NOTE: MinGW-w64 and Visual C++ do /not/ need this hack.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Enable a reasonable set of warnings (no, -Wextra is not reasonable)\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remove the lib prefix on the DLL (but not the import library)\n",
        "Line" : 124,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Add a suffix to the import library to avoid naming conflicts\n",
        "Line" : 127,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# Add a suffix to the import library to avoid naming conflicts\n",
        "Line" : 130,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# Add -fno-common to work around a bug in Apple's GCC\n",
        "Line" : 134,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Hide symbols not explicitly tagged for export from the shared library\n",
        "Line" : 140,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 9
    },
    "third-party/glfw/tests/CMakeLists.txt" : {
      "ObjectId" : "7078b005d0830b8c06939088d5b321452b55ee54",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tell MSVC to use main instead of WinMain for Windows subsystem executables\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "third-party/libtm/CMakeLists.txt" : {
      "ObjectId" : "042f5c3382fc9fcbe8403bba287f0bd7a47cb5d8",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build resources (FW, Central, Controller binaries)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "third-party/libtm/libtm/CMakeLists.txt" : {
      "ObjectId" : "de854061b4e66acd70c127127c2142ca95712f6d",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Major part of the device supported interface API version, updated upon an incompatible API change\n",
        "Line" : 11,
        "CharPositionInLine" : 33
      },
      "2" : {
        "Text" : "# Minor part of the device supported interface API version, updated upon a backwards-compatible change\n",
        "Line" : 12,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# Retrieve Git branch name\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Configure version file according to libtm version definitions and branch name above\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add subdirectory to the build\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "third-party/libtm/libtm/src/CMakeLists.txt" : {
      "ObjectId" : "e383b8db0fc2bb2c1a41e07e0abf9a1a4063e487",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Source Files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Add versioning to DLL\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Building Library\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#LINK_LIBRARIES\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "third-party/libtm/resources/CMakeLists.txt" : {
      "ObjectId" : "5d6ee17d5d52bbd597340e72a7856fce1d754eb4",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TMP definition\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Convert HEX to DEC\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Creates hex buffer from binary file - binary file must be 4 bytes aligned\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#message(STATUS \"Reading BIN header from ${input_bin_file} offset ${offset} limit ${limit}\")\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Copy ready buffer to output buffer\n",
        "Line" : 62,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Creates hex buffer from binary file - binary file must be 4 bytes aligned\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# message(STATUS \"Creating HEX buffer from ${input_bin_file} offset ${offset}\")\n",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Read hex data from file\n",
        "Line" : 70,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Move all buffer to upper case\n",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Convert every 4 bytes from AABBCCDD to 0xDDCCBBAA\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Add new line to every 16 columns\n",
        "Line" : 79,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Copy ready buffer to output buffer\n",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# message(STATUS \"Downloading FW ${FW_VERSION} completed - status ${status}\")\n",
        "Line" : 94,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Create empty output file\n",
        "Line" : 112,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Checking if current FW is identical to downloaded FW, and remove new one to avoid libtm recompilation    \n",
        "Line" : 129,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# message(STATUS \"Local file ${FW_OUTPUT_FILE} already exists, comparing with downloaded FW file\")\n",
        "Line" : 131,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# message(STATUS \"Rename ${FW_OUTPUT_FILE_TMP} to ${FW_OUTPUT_FILE}\")\n",
        "Line" : 144,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# message(STATUS \"--------------------------------------------------------------------------------------------------------------------------------------------------------------\")\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# message(STATUS \"Downloading Central App ${CENTRAL_APP_VERSION} completed - status ${status}\")\n",
        "Line" : 164,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# Central APP Header and data format:\n\n# Header:\n\n#        uint32 header_size;\n\n#        uint32 data_size;\n\n#         uint32 file_format_version; // defines the format of both header and data\n\n#         uint32 version_size;\n\n#         uint8 version[]\n\n# Data: \n\n#         uint8 data[];\n",
        "Line" : 186,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Read 1 byte of file_format_version and abort if not supported\n",
        "Line" : 196,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Read 4 bytes of header_size\n",
        "Line" : 202,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# Read 4 bytes of data_size\n",
        "Line" : 205,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# Read 4 bytes of version_size\n",
        "Line" : 208,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# Read 1 byte of major,minor,patch versions\n",
        "Line" : 214,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# Check if need to read read 4 bytes of build version\n",
        "Line" : 219,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# Check if internal central FW version is compatible with file name\n",
        "Line" : 224,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# message(STATUS \"Central Header:\")\n\n# message(STATUS \"- header_size         = ${central_app_header_size}\")\n\n# message(STATUS \"- data_size           = ${central_app_data_size}\")\n\n# message(STATUS \"- file_format_version = ${central_app_format_ver}\")\n\n# message(STATUS \"- version_size        = ${central_app_version_size}\")\n\n# message(STATUS \"- version             = ${central_app_version_major}.${central_app_version_minor}.${central_app_version_patch}.${central_app_version_build}\")\n",
        "Line" : 232,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# Create empty output file\n",
        "Line" : 239,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# Checking if current central APP is identical to downloaded central APP, and remove new one to avoid libtm recompilation\n",
        "Line" : 261,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# message(STATUS \"Local file ${CENTRAL_APP_OUTPUT_FILE} already exists, comparing with downloaded central APP file\")\n",
        "Line" : 263,
        "CharPositionInLine" : 12
      },
      "32" : {
        "Text" : "# message(FATAL_ERROR \"Error while comparing the files ${CENTRAL_APP_OUTPUT_FILE} and ${CENTRAL_APP_OUTPUT_FILE_TMP}\")\n",
        "Line" : 273,
        "CharPositionInLine" : 16
      },
      "33" : {
        "Text" : "# message(STATUS \"Rename ${CENTRAL_APP_OUTPUT_FILE_TMP} to ${CENTRAL_APP_OUTPUT_FILE}\")\n",
        "Line" : 276,
        "CharPositionInLine" : 12
      },
      "34" : {
        "Text" : "# message(STATUS \"--------------------------------------------------------------------------------------------------------------------------------------------------------------\")\n",
        "Line" : 291,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# message(STATUS \"Downloading Central BL ${CENTRAL_BL_VERSION} completed - status ${status}\")\n",
        "Line" : 297,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# Create empty output file\n",
        "Line" : 319,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# Checking if current central BL is identical to downloaded central BL, and remove new one to avoid libtm recompilation\n",
        "Line" : 340,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# message(STATUS \"Local file ${CENTRAL_BL_OUTPUT_FILE} already exists, comparing with downloaded central BL file\")\n",
        "Line" : 342,
        "CharPositionInLine" : 12
      },
      "39" : {
        "Text" : "# message(STATUS \"Rename ${CENTRAL_BL_OUTPUT_FILE_TMP} to ${CENTRAL_BL_OUTPUT_FILE}\")\n",
        "Line" : 355,
        "CharPositionInLine" : 12
      },
      "40" : {
        "Text" : "# Update versions.log & remote_versions.log file\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 41
    },
    "third-party/libtm/tools/CMakeLists.txt" : {
      "ObjectId" : "cf06285f584034ea30e92c76fe682a52fa544772",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_subdirectory(libtm_util)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "third-party/libtm/tools/libtm_util/CMakeLists.txt" : {
      "ObjectId" : "50289cc376b75483e9bb0a7fb836fbc2bf9fa1ea",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify include files search directories for the compiler\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add source Files\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Link all source files to a single binary named hello_perc\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Link hello_perc binary against pthread and libtm libraries\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "third-party/libtm/versions.cmake" : {
      "ObjectId" : "289c1b836a5219d9674b5a87070d3dc9e8a43ee3",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# All product versions are located here\n\n# If FW source = Remote - FW versions are defined below\n\n# If FW source = Local - FW versions are defined according to /resources/remote_versions.log\n\n# If FW source = Internal - FW versions are defined according to fw.h, CentralAppFw.h, CentralBlFw.h\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FW versions are already updated above\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Using local FW BIN files from resources folder, taking versions from remote_versions.log\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Use internal FW header files, taking versions from header files\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "third-party/libusb/CMakeLists.txt" : {
      "ObjectId" : "c67a75da8af1d0b152c7a0fbf9865b1cd61ee5b2",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ubuntu 12.04 LTS cmake version 2.8.7\n\n# ubuntu 14.04 LTS cmake version 2.8.12.2\n\n# ubuntu 16.04 LTS cmake version 3.5.1\t\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set_target_properties(usb PROPERTIES PREFIX \"\")\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "third-party/realsense-file/CMakeLists.txt" : {
      "ObjectId" : "becf0d03e0e42afbf0ed59d3778fe904f998db5c",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set_target_properties(${PROJECT_NAME} PROPERTIES VERSION \"${LIBVERSION}\" SOVERSION \"${LIBSOVERSION}\")\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third-party/realsense-file/config.cmake" : {
      "ObjectId" : "ae64d5dba6723bb5d155e100c3ab35d8f2175161",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third-party/realsense-file/rosbag/config.cmake" : {
      "ObjectId" : "52c20d3a202a04115f37cf44594586e08916abfd",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third-party/realsense-file/rosbag/console_bridge/config.cmake" : {
      "ObjectId" : "a543daa2946ecd6dfb7d1c7ac5fa7faae39490bf",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third-party/realsense-file/rosbag/cpp_common/config.cmake" : {
      "ObjectId" : "e220f8dfb49c39d40c632ed2f7221573e3b64aab",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third-party/realsense-file/rosbag/rosbag_storage/config.cmake" : {
      "ObjectId" : "e220f8dfb49c39d40c632ed2f7221573e3b64aab",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third-party/realsense-file/rosbag/roscpp_serialization/config.cmake" : {
      "ObjectId" : "91dbb381caffaaf9e97cdba261d4e92193dbb81b",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third-party/realsense-file/rosbag/roscpp_traits/config.cmake" : {
      "ObjectId" : "3c940619edd42dd3848ad24316011f19ed60d2ff",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third-party/realsense-file/rosbag/roslz4/config.cmake" : {
      "ObjectId" : "8ab00a5cbd964fef2e1d78c75d9b26cbefd75c84",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third-party/realsense-file/rosbag/rostime/config.cmake" : {
      "ObjectId" : "2b086bb6200b5ca1efaee445c0cf0270a17c71ab",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third-party/sqlite/CMakeLists.txt" : {
      "ObjectId" : "2d9bb615c8f551383e32c80d2ae07efd19d2dcbc",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "bb92e8bda8b3a2cbb0d2634c409915e7d52cbf0a",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# View the makefile commands during build\n\n#set(CMAKE_VERBOSE_MAKEFILE on)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This parameter is meant for disabling graphical examples when building for\n\n# save-to-disk targets.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tools/convert/CMakeLists.txt" : {
      "ObjectId" : "fe9d699bbbb3a456f77aa6bd7f94f0266b3b282b",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# convert\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tools/data-collect/CMakeLists.txt" : {
      "ObjectId" : "123fd04c935cea1f371de9d51d79b14361d48159",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# data-collect\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tools/depth-quality/CMakeLists.txt" : {
      "ObjectId" : "4daed19534668285f5eb703273a30f1aac0c5f71",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/enumerate-devices/CMakeLists.txt" : {
      "ObjectId" : "2640435c81cd2f2e18732542b2026403497bdea6",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# enumerate-devices\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tools/fw-logger/CMakeLists.txt" : {
      "ObjectId" : "1ddb9ffdcc9c89efc595d44629e4de33213c3959",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# fw-logger\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tools/realsense-viewer/CMakeLists.txt" : {
      "ObjectId" : "d2dbc8e1ef1e1a9828589395f048bd368a0a54d2",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# config-ui\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "tools/rosbag-inspector/CMakeLists.txt" : {
      "ObjectId" : "0161cdf2607f3d16ef47c3a541e9248bf433a7b1",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n# ubuntu 16.04 LTS cmake version 3.5.1\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/terminal/CMakeLists.txt" : {
      "ObjectId" : "6770920162db1d9e60417a24de96b4ece5139f2b",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: Apache 2.0. See LICENSE file in root directory.\n\n# Copyright(c) 2019 Intel Corporation. All Rights Reserved.\n\n#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# terminal\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "unit-tests/CMakeLists.txt" : {
      "ObjectId" : "6b163a9e0bb3ca2628caec8f252422cee06d8558",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# View the makefile commands during build\n\n#set(CMAKE_VERBOSE_MAKEFILE on)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Windows OS will host the files under %TEMP% location\n\n#Unix-like machines will host the tests files under /tmp/ directory\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Data shall be preserved between reboots. For Linux distributions/ ANDROID_NDK_TOOLCHAIN_INCLUDED/APPLE\n",
        "Line" : 55,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "#set(Deployment_Location /var/tmp/) The standard configuration currently fails on CI\n",
        "Line" : 56,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#Post-Processing data set for unit-tests\n\n#message(STATUS \"Post processing deployment directory=${Deployment_Location}\")\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# D415_DS(2)\n\n# D415_DS(3)\n\n# D415_DS(2)_HoleFill(0)\n\n# D415_DS(2)_HoleFill(1)\n\n# D435_DS(2)_HoleFill(2)\n\n# D435_DS(2)+Spat(A:0.85/D:32/I:3)\n\n# D435_DS(2)+Spat(A:0.5/D:15/I:2)\n\n# D435_DS(2)+Temp(A:0.25/D:15/P:0)\n\n# D435_DS(2)+Temp(A:0.45/D:25/P:1)\n\n# D435_DS(2)+Temp(A:0.5/D:30/P:4)\n\n# D435_DS(2)+Temp(A:0.5/D:30/P:6)\n\n# D435_DS(2)+Temp(A:0.5/D:30/P:8)\n\n# D435_DS(2)_Spat(A:0.7/D:25/I:2)_Temp(A:0.6/D:15/P:6)\n",
        "Line" : 69,
        "CharPositionInLine" : 41
      },
      "8" : {
        "Text" : "# D435_DS(2)_Spat(A:0.7/D:25/I:2)_Temp(A:0.6/D:15/P:6))_HoleFill(1)\n",
        "Line" : 82,
        "CharPositionInLine" : 42
      },
      "9" : {
        "Text" : "# For each post-processing test pattern the following files shall be present\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Check if metadata file exist, and download if needed\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# SHOW_PROGRESS\n",
        "Line" : 91,
        "CharPositionInLine" : 83
      },
      "12" : {
        "Text" : "# Convert file contents into a CMake list\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# use of unsubstituted variables is requred\n",
        "Line" : 108,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "#Reset the list of appendexes\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#message(STATUS \"Read ${data_length}  bytes from  ${filename}\")\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#Download and parse the output metafile to retrieve the number of snapshots in sequence\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Copy the assigned variables to local variable\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#Iterate over test pattern extension to download the test files.\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#Each test comprise of a sequence of frame indexed according to the following\n",
        "Line" : 157,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Calculate the target full path name for deployment\n",
        "Line" : 159,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "#message(STATUS \"Checked \" ${empty} \" for \" ${Test_File_Name} \" in \" ${destination})\n",
        "Line" : 165,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# SHOW_PROGRESS LOG log STATUS status\n",
        "Line" : 168,
        "CharPositionInLine" : 88
      },
      "CommentCount" : 23
    },
    "wrappers/CMakeLists.txt" : {
      "ObjectId" : "4f859be18ed1b0f2aea73976c34a464ef4f3a638",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# View the makefile commands during build\n\n#set(CMAKE_VERBOSE_MAKEFILE on)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "wrappers/android/config.cmake" : {
      "ObjectId" : "e018851f515276f25e80e6c2d873ab6de824561f",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/android/examples/capture/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "wrappers/android/examples/java_example/app/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "wrappers/android/examples/native_example/app/CMakeLists.txt" : {
      "ObjectId" : "9a2b56aa48b8459ea5673842e6b06f8c3b84ba88",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#################### librealsense dependencies begin ####################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "####################  librealsense dependencies end  ####################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#################### librealsense dependencies begin ####################\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "####################  librealsense dependencies end  ####################\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "wrappers/android/examples/native_example/app/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "wrappers/android/examples/playback/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "wrappers/android/examples/recording/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "wrappers/android/librealsense/CMakeLists.txt" : {
      "ObjectId" : "5a62f85a5f23c52fc155d28efcdd72a5b9b5f1c1",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For more information about using CMake with Android Studio, read the\n\n# documentation: https://d.android.com/studio/projects/add-native-code.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sets the minimum version of CMake required to build the native library.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#include_directories(${LRS_ROOT_DIR}/include)",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "wrappers/android/librealsense/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "wrappers/android/tools/camera/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "wrappers/csharp/CMakeLists.txt" : {
      "ObjectId" : "ea4385b8d7fdd6e83fb47f7a093ac5db27f8b229",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/csharp/Intel.RealSense/Base/CMakeLists.txt" : {
      "ObjectId" : "23883ab61610f5501dca3e84ade73e64e64bf1a5",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/csharp/Intel.RealSense/CMakeLists.txt" : {
      "ObjectId" : "c9a56254e95457133b7a57fc0b7c9a870d204003",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}\n\n#ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "wrappers/csharp/Intel.RealSense/Devices/CMakeLists.txt" : {
      "ObjectId" : "b3180848dfa3c673c0294f55a113b5f3435113a9",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/csharp/Intel.RealSense/Frames/CMakeLists.txt" : {
      "ObjectId" : "a67f287b881bc50333ecebfb4e22fdede0001315",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/csharp/Intel.RealSense/Helpers/CMakeLists.txt" : {
      "ObjectId" : "cc9103ad60f6a473802d47d7e511c04f74ede3b4",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/csharp/Intel.RealSense/Options/CMakeLists.txt" : {
      "ObjectId" : "1d6babc036dad66b0224d92520ad3184adcb1bf7",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/csharp/Intel.RealSense/Pipeline/CMakeLists.txt" : {
      "ObjectId" : "dd0572348272d60f04e790c3cdc1bbf4e6b2f5a0",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/csharp/Intel.RealSense/Processing/CMakeLists.txt" : {
      "ObjectId" : "9d72eeaac079465ebff25b326002414bc80a6622",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/csharp/Intel.RealSense/Sensors/CMakeLists.txt" : {
      "ObjectId" : "80a88b4bb9530b301c33585caa899c6fabb4a16d",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/csharp/Intel.RealSense/StreamProfiles/CMakeLists.txt" : {
      "ObjectId" : "ab4fcb173527ebb3a576da3278c1cb51970f48db",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/csharp/Intel.RealSense/Types/CMakeLists.txt" : {
      "ObjectId" : "09ffc6a07254654970e5014a6aff40fb9160f2e1",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/csharp/Intel.RealSense/Types/Enums/CMakeLists.txt" : {
      "ObjectId" : "d52e6a9ec53af437dc7ed1163f6fbd9a98830ec0",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/csharp/Intel.RealSense/Types/Math/CMakeLists.txt" : {
      "ObjectId" : "a7319244345256c67bbe6b21dfe86c3592cbd5b9",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/csharp/cs-tutorial-1-depth/CMakeLists.txt" : {
      "ObjectId" : "9ff12c03c20fcbac8ab3a019ac4503acda37c5d9",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_property(TARGET ${PROJECT_NAME} PROPERTY WIN32_EXECUTABLE TRUE)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "wrappers/csharp/cs-tutorial-2-capture/CMakeLists.txt" : {
      "ObjectId" : "cc40741c3cd01032103feaeb15b18215ed6e4061",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_property(TARGET ${PROJECT_NAME} PROPERTY WIN32_EXECUTABLE TRUE)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "wrappers/csharp/cs-tutorial-3-processing/CMakeLists.txt" : {
      "ObjectId" : "cd0b2f61ea878957e2daa11000a79b784fefaf65",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_property(TARGET ${PROJECT_NAME} PROPERTY WIN32_EXECUTABLE TRUE)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "wrappers/csharp/cs-tutorial-4-software-dev/CMakeLists.txt" : {
      "ObjectId" : "818dba09e234d9d581c59257de5d1fbca48f0a67",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_property(TARGET ${PROJECT_NAME} PROPERTY WIN32_EXECUTABLE TRUE)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "wrappers/matlab/CMakeLists.txt" : {
      "ObjectId" : "dbdd0a56b64b76860ea45fb174a9c7354c4c5730",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# View the makefile commands during build\n\n#set(CMAKE_VERBOSE_MAKEFILE on)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#TODO: additionally, the compiled mex file and all the .m files need to be copied into a folder called `+realsense` at the install site",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "wrappers/nodejs/CMakeLists.txt" : {
      "ObjectId" : "94e8ffa2c1de7d369fac735dac8aa4a6d921f814",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017 Intel Corporation. All rights reserved.\n\n# Use of this source code is governed by an Apache 2.0 license\n\n# that can be found in the LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compile realsense addon\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "wrappers/opencv/CMakeLists.txt" : {
      "ObjectId" : "c30b9ed982eb67b668860bb156f60f3864f40ac5",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# View the makefile commands during build\n\n#set(CMAKE_VERBOSE_MAKEFILE on)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "wrappers/opencv/dnn/CMakeLists.txt" : {
      "ObjectId" : "8f6e2962bad10c1c3bd25c114c4c94d56e45c866",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "wrappers/opencv/grabcuts/CMakeLists.txt" : {
      "ObjectId" : "e75f60a59e7d6421556507ae2e2821ecadccec03",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "wrappers/opencv/imshow/CMakeLists.txt" : {
      "ObjectId" : "ef8fa159314dd26d0a6ad16d861d807995a7e30a",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "wrappers/opencv/kinfu/CMakeLists.txt" : {
      "ObjectId" : "2b27c682908deae0a6fdc559518ff45db652c13f",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "wrappers/opencv/latency-tool/CMakeLists.txt" : {
      "ObjectId" : "15ce04ac37a7ce94c0e938b0b652f91e97b4364c",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "wrappers/openni2/CMakeLists.txt" : {
      "ObjectId" : "0eee84c244cded89fce42d74e47b395d0b335ff6",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DEPS\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# INCLUDE DIR\r\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# LINK DIR\r\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# OUTPUT DIR\r\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# SOURCE FILES\r\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# FLAGS\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# LINK\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "wrappers/pcl/CMakeLists.txt" : {
      "ObjectId" : "ee8095dedb13126dc5fe2d00c27ae429685497a4",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# View the makefile commands during build\n\n#set(CMAKE_VERBOSE_MAKEFILE on)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "wrappers/pcl/pcl-color/CMakeLists.txt" : {
      "ObjectId" : "cedd29140ce5dfb95d293e0a93bbc296e1e5b16a",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "wrappers/pcl/pcl/CMakeLists.txt" : {
      "ObjectId" : "8aa22fc41a99e8bc000e95a0906a52b93053ccf0",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "wrappers/python/CMakeLists.txt" : {
      "ObjectId" : "06798f77fe5ef304dea8a1bd5d4f834ef2eb5165",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# View the makefile commands during build\n\n#set(CMAKE_VERBOSE_MAKEFILE on)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Windows 7\n",
        "Line" : 47,
        "CharPositionInLine" : 64
      },
      "4" : {
        "Text" : "# Some other windows version\n",
        "Line" : 56,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 5
    },
    "wrappers/python/docs/CMake/FindSphinx.cmake" : {
      "ObjectId" : "e4f6d45c27a33c7c785a8942296a5b810ac27dc3",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wrappers/python/docs/CMakeLists.txt" : {
      "ObjectId" : "b1161745685d8905cd96cc5a8af942b93593b517",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  minimum required cmake version: 3.1.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the command line compile commands in the build output\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# View the makefile commands during build\n\n#set(CMAKE_VERBOSE_MAKEFILE on)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# configured documentation tools and intermediate build results\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Sphinx cache with pickled ReST documents\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# HTML output directory\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Sphinx Template directory\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "wrappers/python/third_party/pybind11/CMakeLists.txt" : {
      "ObjectId" : "4280ba742d3ef19a72ed7d8cd7db19adbdfbc866",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt -- Build system for the pybind11 modules\n\n#\n\n# Copyright (c) 2015 Wenzel Jakob <wenzel@inf.ethz.ch>\n\n#\n\n# All rights reserved. Use of this source code is governed by a\n\n# BSD-style license that can be found in the LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cmake warns if loaded from a min-3.0-required parent dir, so silence the warning:\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# CMake versions < 3.4.0 do not support try_compile/pthread checks without C as active language.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check if pybind11 is being used directly or via add_subdirectory\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Cache variables so pybind11_add_module can be used in parent projects\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# NB: when adding a header don't forget to also add it to setup.py\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# extract project version from source\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# CMake >= 3.0\n",
        "Line" : 94,
        "CharPositionInLine" : 42
      },
      "8" : {
        "Text" : "# Build an interface library target:\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# to match exported target\n",
        "Line" : 97,
        "CharPositionInLine" : 50
      },
      "10" : {
        "Text" : "# GNUInstallDirs \"DATADIR\" wrong here; CMake search path wants \"share\".\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Remove CMAKE_SIZEOF_VOID_P from ConfigVersion.cmake since the library does\n\n# not depend on architecture specific settings or libraries.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "wrappers/python/third_party/pybind11/tools/FindCatch.cmake" : {
      "ObjectId" : "9d490c5aade2151ebdd8cc84509361ba1c061f84",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the Catch test framework or download it (single header)\n\n#\n\n# This is a quick module for internal use. It assumes that Catch is\n\n# REQUIRED and that a minimum version is provided (not EXACT). If\n\n# a suitable version isn't found locally, the single header file\n\n# will be downloaded and placed in the build dir: PROJECT_BINARY_DIR.\n\n#\n\n# This code sets the following variables:\n\n#  CATCH_INCLUDE_DIR      - path to catch.hpp\n\n#  CATCH_VERSION          - version number\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Extract the version number from catch.hpp\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Download the single-header version of Catch\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for catch locally\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Download the header if it wasn't found or if it's outdated\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "wrappers/python/third_party/pybind11/tools/FindEigen3.cmake" : {
      "ObjectId" : "9c546a05d859b18c49554d7ee7221cc486b7760e",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "wrappers/python/third_party/pybind11/tools/FindPythonLibsNew.cmake" : {
      "ObjectId" : "ad3ed48fae50d461a08d925840d244a760f5da51",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find python libraries\n\n# This module finds the libraries corresponding to the Python interpeter\n\n# FindPythonInterp provides.\n\n# This code sets the following variables:\n\n#\n\n#  PYTHONLIBS_FOUND           - have the Python libs been found\n\n#  PYTHON_PREFIX              - path to the Python installation\n\n#  PYTHON_LIBRARIES           - path to the python library\n\n#  PYTHON_INCLUDE_DIRS        - path to where Python.h is found\n\n#  PYTHON_MODULE_EXTENSION    - lib extension, e.g. '.so' or '.pyd'\n\n#  PYTHON_MODULE_PREFIX       - lib name prefix: usually an empty string\n\n#  PYTHON_SITE_PACKAGES       - path to installation site-packages\n\n#  PYTHON_IS_DEBUG            - whether the Python interpreter is a debug build\n\n#\n\n# Thanks to talljimbo for the patch adding the 'LDVERSION' config\n\n# variable usage.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n# Copyright 2012 Continuum Analytics, Inc.\n\n#\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in the\n\n# documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n# nor the names of their contributors may be used to endorse or promote\n\n# products derived from this software without specific prior written\n\n# permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# # A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Checking for the extension makes sure that `LibsNew` was found and not just `Libs`.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use the Python interpreter to find the libs.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# According to http://stackoverflow.com/questions/646518/python-how-to-detect-debug-interpreter\n\n# testing whether sys has the gettotalrefcount function is a reliable, cross-platform\n\n# way to detect a CPython debug interpreter.\n\n#\n\n# The library suffix is from the config var LDVERSION sometimes, otherwise\n\n# VERSION. VERSION will typically be like \"2.7\" on unix, and \"27\" on windows.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Convert the process output into a list\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Make sure the Python has the same pointer-size as the chosen compiler\n\n# Skip if CMAKE_SIZEOF_VOID_P is not defined\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The built-in FindPython didn't always give the version numbers\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Make sure all directory separators are '/'\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# when run in a venv, PYTHON_PREFIX points to it. But the libraries remain in the\n\n# original python installation. They may be found relative to PYTHON_INCLUDE_DIR.\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# raise an error if the python libs are still not found.\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#message(STATUS \"Searching for Python libs in ${_PYTHON_LIBS_SEARCH}\")\n\n# Probably this needs to be more involved. It would be nice if the config\n\n# information the python interpreter itself gave us were more complete.\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# If all else fails, just set the name/version and let the linker figure out the path.\n",
        "Line" : 172,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# We use PYTHON_INCLUDE_DIR, PYTHON_LIBRARY and PYTHON_DEBUG_LIBRARY for the\n\n# cache entries because they are meant to specify the location of a single\n\n# library. We now set the variables listed by the documentation for this\n\n# module.\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "wrappers/python/third_party/pybind11/tools/pybind11Tools.cmake" : {
      "ObjectId" : "a7c471a07a38e158ab4fde3a304c53b27ca774c9",
      "LastModified" : "2019-04-04T19:27:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tools/pybind11Tools.cmake -- Build system for the pybind11 modules\n\n#\n\n# Copyright (c) 2015 Wenzel Jakob <wenzel@inf.ethz.ch>\n\n#\n\n# All rights reserved. Use of this source code is governed by a\n\n# BSD-style license that can be found in the LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add a CMake parameter for choosing a desired Python version\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Checks whether the given CXX/linker flags can compile and link a cxx file.  cxxflags and\n\n# linkerflags are lists of flags to use.  The result variable is a unique variable name for each set\n\n# of flags: the compilation result will be cached base on the result variable.  If the flags work,\n\n# sets them in cxxflags_out/linkerflags_out internal cache variables (in addition to ${result}).\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal: find the appropriate link time optimization flags for this compiler\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Clang Gold plugin does not support -Os; append -O3 to MinSizeRel builds to override it\n",
        "Line" : 66,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Intel equivalent to LTO is called IPO\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# cmake only interprets libraries as linker flags when they start with a - (otherwise it\n\n# converts /LTCG to \\LTCG as if it was a Windows path).  Luckily MSVC supports passing flags\n\n# with - instead of /, even if it is a bit non-standard:\n",
        "Line" : 88,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Enable LTO flags if found, except for Debug builds\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Build a Python extension module:\n\n# pybind11_add_module(<name> [MODULE | SHARED] [EXCLUDE_FROM_ALL]\n\n#                     [NO_EXTRAS] [THIN_LTO] source1 [source2 ...])\n\n#\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# from project CMakeLists.txt\n\n# from pybind11Config\n",
        "Line" : 134,
        "CharPositionInLine" : 37
      },
      "10" : {
        "Text" : "# The prefix and extension are provided by FindPythonLibsNew.cmake\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# -fvisibility=hidden is required to allow multiple modules compiled against\n\n# different pybind versions to work properly, and for some features (e.g.\n\n# py::module_local).  We force it on everything inside the `pybind11`\n\n# namespace; also turning it on for a pybind module compilation here avoids\n\n# potential warnings or issues from having mixed hidden/non-hidden types.\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Link against the Python shared library on Windows\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# It's quite common to have multiple copies of the same Python version\n\n# installed on one's system. E.g.: one copy from the OS and another copy\n\n# that's statically linked into an application like Blender or Maya.\n\n# If we link our plugin library against the OS Python here and import it\n\n# into Blender or Maya later on, this will cause segfaults when multiple\n\n# conflicting Python instances are active at the same time (even when they\n\n# are of the same version).\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Windows is not affected by this issue since it handles DLL imports\n\n# differently. The solution for Linux and Mac OS is simple: we just don't\n\n# link against the Python library. The resulting shared library will have\n\n# missing symbols, but that's perfectly fine -- they will be resolved at\n\n# import time.\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Suppress CMake >= 3.0 warning for shared libraries\n",
        "Line" : 170,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Make sure C++11/14 are enabled\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Strip unnecessary sections of the binary on Linux/Mac OS\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# /MP enables multithreaded builds (relevant when there are many files), /bigobj is\n\n# needed for bigger binding projects due to the limit to 64k addressable sections\n",
        "Line" : 198,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 19
    }
  },
  "FileTypes" : {
    "CMAKE" : 152,
    "QMAKE" : 7
  },
  "ElapsedTime" : 5069
}