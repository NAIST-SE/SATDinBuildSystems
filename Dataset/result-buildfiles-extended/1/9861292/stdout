{
  "Repository" : "9861292",
  "Revision" : "HEAD",
  "ObjectId" : "b422548021af3fc7ffadaaf41f36028955ab27cd",
  "CommitTime" : "2019-04-14T16:04:44Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "3ff7e85797c6464f51ead63e827455861bbf3ecb",
      "LastModified" : "2019-02-01T23:28:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# to generate a compile_commands.json usable by ycm and other tooling\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# konsole_wcwidth.h\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# homebrew/macrpots/fink etc.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Qt\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# msgpack\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Place targets in bin/ or lib/ for all build configurations\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Allow use of deprecated function names in MSVC (read/write)\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Bindings\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/FindMsgpack.cmake" : {
      "ObjectId" : "0e2013f9d376b6fdcdff76efb991e543f1501cd8",
      "LastModified" : "2016-01-31T21:45:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/MacOSXPaths.cmake" : {
      "ObjectId" : "f8eb7eccdef9b0c37b5f0120a7057f8b97d9e0a7",
      "LastModified" : "2016-02-02T16:28:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Mac OS X: add homebrew, macports and fink paths, including homebrew Qt and zlib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# only include dirs that exist or warnings are generated\n",
        "Line" : 13,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "cmake/WinDeployQt.cmake" : {
      "ObjectId" : "cad0c194b5f9635b24588185cf7e8e711d47b277",
      "LastModified" : "2016-06-01T13:19:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CMake wrapper to call windeployqt in Windows\n\n#\n\n# The files are placed in windeployqt folder in the toplevel\n\n# build directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/mingw32-w64-cross-travis.toolchain.cmake" : {
      "ObjectId" : "91f3a048dfb76b0911bca19bdfb85494cab94021",
      "LastModified" : "2016-02-02T16:28:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Mingw-w64 (32bit) cross compiler toolchain\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The location of your toolchain sys-root\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the name of the target operating system\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# which compilers to use for C and C++\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where is the target environment located\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "e0b8102ae8f3379e94d2131a531832ec0d506e91",
      "LastModified" : "2016-02-02T16:28:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "005d66d9c33645e8928e3566beed9c8076afe6d6",
      "LastModified" : "2019-02-01T23:28:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/gui/CMakeLists.txt" : {
      "ObjectId" : "c2030d7cfa940710eae9683d0ec386599baf3903",
      "LastModified" : "2019-02-01T23:28:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\tTODO: Bundle Qt, currently conflicts with brew Qt\n\n#\tadd_custom_command(TARGET nvim-qt COMMAND macdeployqt\n\n#\t\tARGS ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/nvim-qt.app\n\n#\t\tCOMMENT \"Bundling Qt libraries\")\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate help tags\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/gui/shellwidget/CMakeLists.txt" : {
      "ObjectId" : "5683ec8d7d779595052b26b396d4d60f3c3811b6",
      "LastModified" : "2019-02-01T23:28:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Qt\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/gui/shellwidget/test/CMakeLists.txt" : {
      "ObjectId" : "92ff991414914c7e624b99478975326ab6352cf0",
      "LastModified" : "2018-01-28T02:58:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "0730e37c70a97a9b3da17548120ff6318cf09bf3",
      "LastModified" : "2019-02-01T23:28:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Run GUI tests from source dir, they depend on src files\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "third-party/CMakeLists.txt" : {
      "ObjectId" : "4a792a6be74e6078a48031708f8d0aeb0b68bceb",
      "LastModified" : "2019-02-01T23:28:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a minimal CMake project to fetch and build third party\n\n# dependencies\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Get Msgpack\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Similar enough to FindMsgpack\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 12
  },
  "ElapsedTime" : 1039
}