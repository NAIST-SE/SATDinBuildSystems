{
  "Repository" : "71294",
  "Revision" : "HEAD",
  "ObjectId" : "6be02cb83f78d11afb94c3886729ce4198fa61e0",
  "CommitTime" : "2015-04-02T21:12:17Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "2e5db7757e2b6986091e14e80e2b06989cb782d8",
      "LastModified" : "2015-03-31T04:15:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See www/CMake.html for instructions on how to build libcxx with CMake.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#===============================================================================\n\n# Setup Project\n\n#===============================================================================\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set MACOSX_RPATH=YES by default\n",
        "Line" : 11,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# Add path for custom modules\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Require out of source build.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#===============================================================================\n\n# Setup CMake Options\n\n#===============================================================================\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define options.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TODO(ericwf): Remove these options by March/25/2015.\n\n# These CMake options have been removed in favor of a generic option\n\n# \"LIBCXX_CXX_ABI_INCLUDE_PATHS\". Issue an explicit error message explaining\n\n# the change for anybody that still uses them.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#===============================================================================\n\n# Configure System\n\n#===============================================================================\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Declare libc++ configuration variables.\n\n# They are intended for use as follows:\n\n# LIBCXX_CXX_FLAGS: General flags for both the compiler and linker.\n\n# LIBCXX_COMPILE_FLAGS: Compile only flags.\n\n# LIBCXX_LINK_FLAGS: Linker only flags.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Configure compiler.\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Configure ABI library\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Configure coverage options.\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#===============================================================================\n\n# Setup Compiler Flags\n\n#===============================================================================\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Get required flags.\n\n# On all systems the system c++ standard library headers need to be excluded.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# MSVC only has -X, which disables all default includes; including the crt.\n\n# Thus, we do nothing and hope we don't accidentally include any of the C++\n\n# headers.\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# If c++1y has been enabled then attempt to use it. Fail if it is no supported\n\n# by the compiler. Otherwise choose c++11 and ensure the compiler supports it.\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# LIBCXX_STD_VERSION should always be set at this point.\n",
        "Line" : 183,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Get warning flags\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Get feature flags.\n\n# Exceptions\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Catches C++ exceptions only and tells the compiler to assume that extern C\n\n# functions never throw a C++ exception.\n",
        "Line" : 217,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# RTTI\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Assert\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# MSVC doesn't like _DEBUG on release builds. See PR 4379.\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# On Release builds cmake automatically defines NDEBUG, so we\n\n# explicitly undefine it:\n",
        "Line" : 239,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Static library\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# This is the _ONLY_ place where add_definitions is called.\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# LIBCXX_ENABLE_GLOBAL_FILESYSTEM_NAMESPACE configuration\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# LIBCXX_ENABLE_STDIN configuration\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# LIBCXX_ENABLE_STDOUT configuration\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# LIBCXX_ENABLE_THREADS configuration\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Ensure LIBCXX_ENABLE_MONOTONIC_CLOCK is set to ON.\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Configure for sanitizers. If LIBCXX_BUILT_STANDALONE then we have to do\n\n# the flag translation ourselves. Othewise LLVM's CMakeList.txt will handle it.\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# NOTE: LLVM_USE_SANITIZER checks for a UNIX like system instead of MSVC.\n\n# But we don't have LLVM_ON_UNIX so checking for MSVC is the best we can do.\n",
        "Line" : 297,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "#===============================================================================\n\n# Setup Source Code\n\n#===============================================================================\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Add source code. This also contains all of the logic for deciding linker flags\n\n# soname, etc...\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#===============================================================================\n\n# Setup Tests\n\n#===============================================================================\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37
    },
    "Makefile" : {
      "ObjectId" : "ab7b5b603a04d83bc8f10face76774c8635ad2d6",
      "LastModified" : "2014-12-16T05:28:07Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##\n\n# libc++ Makefile\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The installheaders target is used by clang's runtime/libcxx makefile.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/CodeCoverage.cmake" : {
      "ObjectId" : "addd10abdfe10301e047fa0614c4619f70d3b6a3",
      "LastModified" : "2015-03-31T04:15:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/HandleLibCXXABI.cmake" : {
      "ObjectId" : "ac426979419ce403e8bde4b373fdfae25fa50983",
      "LastModified" : "2015-03-31T04:15:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#===============================================================================\n\n# Add an ABI library if appropriate\n\n#===============================================================================\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# _setup_abi: Set up the build to use an ABI library\n\n#\n\n# Parameters:\n\n#   abidefines: A list of defines needed to compile libc++ with the ABI library\n\n#   abilib    : The ABI library to link against.\n\n#   abifiles  : A list of files (which may be relative paths) to copy into the\n\n#               libc++ build tree for the build.  These files will also be\n\n#               installed alongside the libc++ headers.\n\n#   abidirs   : A list of relative paths to create under an include directory\n\n#               in the libc++ build directory.\n\n#\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Link against just-built \"cxxabi\" target.\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Assume c++abi is installed in the system, rely on -lc++abi link flag.\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/Modules/MacroEnsureOutOfSourceBuild.cmake" : {
      "ObjectId" : "a0669365bf99ca3c91fd25595a19d8d2f2f21365",
      "LastModified" : "2015-03-31T04:15:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MACRO_ENSURE_OUT_OF_SOURCE_BUILD(<errorMessage>)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/config-ix.cmake" : {
      "ObjectId" : "428d737c749d415ceaf986bad074d945ee835917",
      "LastModified" : "2015-03-31T04:15:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check compiler flags\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check libraries\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "include/CMakeLists.txt" : {
      "ObjectId" : "95206bfeeaff1809eee0b866afb34c64b0efbcaf",
      "LastModified" : "2015-03-31T04:15:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/CMakeLists.txt" : {
      "ObjectId" : "d3d5f381d81546052be8c0b96ba4774d8a452cc6",
      "LastModified" : "2015-03-31T04:15:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get sources\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add all the headers to the project for IDEs.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Force them all into the headers dir on MSVC, otherwise they end up at\n\n# project scope because they don't have extensions.\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#if LIBCXX_CXX_ABI_LIBRARY_PATH is defined we want to add it to the search path.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO(ericwf): Remove these GNU specific linker flags and let CMake do the\n\n# configuration. This will be more portable.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Generate library list.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Setup flags.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "bcab5c2ae6f49cb335a7664e6cf42d123b4b6286",
      "LastModified" : "2015-03-31T04:15:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make sure we can use the console pool for recent cmake and ninja > 1.5\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# The tests shouldn't link to any ABI library when it has been linked into\n\n# libc++ statically.\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 8,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 4554
}