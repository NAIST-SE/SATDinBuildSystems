{
  "Repository" : "52878260",
  "Revision" : "HEAD",
  "ObjectId" : "bb43ceb79235f546c1f6a6d08af343543a140a21",
  "CommitTime" : "2019-04-18T23:13:41Z",
  "Files" : {
    "3d-viewer/3d_cache/CMakeLists.txt" : {
      "ObjectId" : "cc06e9deb7d99069a92019eb53fb9cc079541b4a",
      "LastModified" : "2016-05-02T09:45:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3d-viewer/3d_cache/sg/CMakeLists.txt" : {
      "ObjectId" : "acbe5e5b0c3af0fcfc6e3f2b300ab15830ab9a27",
      "LastModified" : "2017-03-03T19:30:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# puts library into the main kicad.app bundle in build tree\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# extract the \"#define KICADSG_VERSION_*\" lines\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#ensure that NOT SG_VERSION* will evaluate to '0'\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Define a flag to expose the appropriate EXPORT macro at build time\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "3d-viewer/CMakeLists.txt" : {
      "ObjectId" : "3a0c78151de78cd99545108e33593f3e0b040a15",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_definitions(-DPRINT_STATISTICS_3D_VIEWER)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# directories\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeLists.txt" : {
      "ObjectId" : "e37863e00f5f34a6817e52ae5ee06c489f142da5",
      "LastModified" : "2019-04-18T23:13:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  This program source code file is part of KICAD, a free EDA CAD application.\n\n#\n\n#  Copyright (C) 2007-2018 Kicad Developers, see AUTHORS.txt for contributors.\n\n#\n\n#  This program is free software; you can redistribute it and/or\n\n#  modify it under the terms of the GNU General Public License\n\n#  as published by the Free Software Foundation; either version 2\n\n#  of the License, or (at your option) any later version.\n\n#\n\n#  This program is distributed in the hope that it will be useful,\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#  GNU General Public License for more details.\n\n#\n\n#  You should have received a copy of the GNU General Public License\n\n#  along with this program; if not, you may find one here:\n\n#  http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n#  or you may search the http://www.gnu.org website for the version 2 license,\n\n#  or you may write to the Free Software Foundation, Inc.,\n\n#  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# because of http://public.kitware.com/Bug/view.php?id=10395\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# See https://gitlab.kitware.com/cmake/cmake/issues/15943\n\n# Remove as soon as 3.1 is minimum required version\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMake 3.0\n",
        "Line" : 30,
        "CharPositionInLine" : 32
      },
      "4" : {
        "Text" : "# Default to CMAKE_BUILD_TYPE = Release unless overridden on command line\n\n# http://www.cmake.org/pipermail/cmake/2008-September/023808.html\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Path to local CMake modules.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# On Windows, binaries created by link option -g3 are very large (more than 1Gb for pcbnew,\n\n# and more than 3Gb for the full kicad suite)\n\n# This option create binaries using link option -g1 that create much smaller files, but\n\n# there are less info in debug (but the file names and line numbers are available)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Path to local vcpkg packages\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# KiCad build options should be added below.\n\n#\n\n# If you add a new build option, please add it's state to the\n\n# OnCopyVersionInfo() function in common/dialog_about/dialog_about.cpp\n\n# so that build option settings can be included in bug reports.\n\n#\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# when option KICAD_SCRIPTING OR KICAD_SCRIPTING_MODULES is enabled:\n\n# PYTHON_EXECUTABLE can be defined when invoking cmake\n\n# ( use -DPYTHON_EXECUTABLE=<python path>/python.exe or python2 )\n\n# when not defined by user, the default is python.exe under Windows and python2 for others\n\n# python binary file should be in exec path.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# KICAD_SCRIPTING_MODULES requires KICAD_SCRIPTING enable it here if KICAD_SCRIPTING_MODULES is ON\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# same with KICAD_SCRIPTING_ACTION_MENUS\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Global setting: exports are explicit\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Global setting: build everything position independent\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Global setting: Use C++11\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# CMP0063: CMake < 3.3 does not handle hidden visibility for static libraries,\n\n# and 3.3 is backwards compatible when the minimum version is smaller than 3.3.\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Add option to add user directories for linker, if any\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Set default data file path to CMAKE_INSTALL_PREFIX if it wasn't specified during the\n\n# CMake configuration.  The value of DEFAULT_INSTALL_PATH is expanded in config.h and\n\n# used in the source code to define the base path for kicad search paths and environment\n\n# variables.\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Generate build system specific header file.\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Workaround: CMake < 3.1 does not support CMAKE_CXX_STANDARD\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Warn about missing override specifiers, if supported\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Warn about shadowed variables (-Wshadow option), if supported\n\n# Unfortunately, the swig autogenerated files have a lot of shadowed variables\n\n# and -Wno-shadow does not exist.\n\n# Adding -Wshadow can be made only for .cpp files\n\n# and will be added later in CMakeLists.txt\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# define UNICODE and_UNICODE definition on Windows. KiCad uses unicode.\n\n# Both definitions are required\n",
        "Line" : 244,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "#================================================\n\n# Provide access to CCACHE\n\n#================================================\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#================================================\n\n# Provide access to DISTCC\n\n#================================================\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#================================================\n\n# Set flags for GCC, or treat llvm as GCC\n\n#================================================\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Set 32-bit flag for GCC to prevent excess precision\n",
        "Line" : 293,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Establish -Wall early, so specialized relaxations of this may come\n\n# subsequently on the command line, such as in pcbnew/github/CMakeLists.txt\n",
        "Line" : 298,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Link flags in Debug: -g1 and -ggdb1 or -g1 and -ggdb3 can be used.\n\n# Level 1 produces minimal information, enough for making basic backtraces.\n\n# This includes descriptions of functions and external variables, and line number tables,\n\n# but no information about local variables.\n\n# Level 3 includes full information, but binaries are much larger.\n",
        "Line" : 303,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Since version 2.8.5, Cmake uses a response file (.rsp) to\n\n# pass the list of include paths to gcc\n\n# unfortunately, under mingw32+msys, at least with gcc 4.8 and previous,\n\n# this file is not always expanded and in this case include paths defined in this file\n\n# are not taken in account ( this is the case of wxWidgets includes )\n\n# If it is the case, disable this response file for includes ( See Windows-GNU.cmake module )\n",
        "Line" : 319,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "#set to true to disable the include response file\n",
        "Line" : 325,
        "CharPositionInLine" : 20
      },
      "31" : {
        "Text" : "# fixme: it is needed only with MSYS+MINGW32? or always under MINGW\n",
        "Line" : 327,
        "CharPositionInLine" : 16
      },
      "32" : {
        "Text" : "# for some reasons, cmake does do use always a response file to send the list of objects\n\n# to the archiver, and because this list can be very long, and can create issue\n\n# when it is used in a command line, force use of a response file to store it\n",
        "Line" : 334,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# The MinGW compiler can use the microsoft system snprintf as standard and it has a broken\n\n# API with respect to the C99 standard, so make sure we force it to use its own compliant\n\n# snprintf\n",
        "Line" : 339,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# Thou shalt not link vaporware and tell us it's a valid DSO (apple ld doesn't support it)\n",
        "Line" : 345,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# needed by fixbundle\n",
        "Line" : 353,
        "CharPositionInLine" : 78
      },
      "36" : {
        "Text" : "# C4290: throw() is interpreted as declspec(nothrow)\n",
        "Line" : 362,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# C4800: non-bool is explicitly cast to bool, forcing value of 0 or 1\n",
        "Line" : 364,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# /Zi: create PDB\n",
        "Line" : 366,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# /J: char as unsigned char\n",
        "Line" : 368,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# /Oi: \n",
        "Line" : 370,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# /Ot: Optimize for time over space\n",
        "Line" : 372,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# /MP: multiprocessor compiliation\n",
        "Line" : 374,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# /GF: enable string pooling\n",
        "Line" : 376,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# /DEBUG: create PDB\n",
        "Line" : 379,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# /OPT:REF: omit unreferenced code\n",
        "Line" : 381,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# /OPT:ICF: fold common data\n",
        "Line" : 383,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "# KIFACE_SUFFIX is the file extension used for top level program modules which\n\n# implement the KIFACE interface.  A valid suffix starts with a period '.'.\n",
        "Line" : 439,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# This is the eventual situation near milestone C) of modular-kicad blueprint.\n\n# Until then we use .kiface extension so we don't collide with python DSO.\n",
        "Line" : 443,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# Temporary situation until we can dovetail the python DSO into the kiface DSO.\n",
        "Line" : 447,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# KIFACE_PREFIX is a basename prefix used for top level program modules which\n\n# implement the KIFACE.\n",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#message( STATUS \"KIFACE_SUFFIX:${KIFACE_SUFFIX}  KIFACE_PREFIX:${KIFACE_PREFIX}\" )\n",
        "Line" : 454,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#================================================\n\n# Locations for install targets.\n\n#================================================\n",
        "Line" : 457,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Everything without leading / is relative to CMAKE_INSTALL_PREFIX.\n",
        "Line" : 461,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# everything without leading / is relative to CMAKE_INSTALL_PREFIX.\n\n# CMAKE_INSTALL_PREFIX is root of .dmg image\n",
        "Line" : 495,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# some paths to single app bundle\n",
        "Line" : 500,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# everything provided with the application bundle goes into\n\n# kicad.app/Contents/SharedSupport => accessible via GetDataDir()\n\n# everything else to the .dmg image\n",
        "Line" : 518,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# RPATH setttings for building shared libraries\n",
        "Line" : 536,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# Override default paths for fixup_bundle\n",
        "Line" : 539,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "#================================================\n\n# Find libraries that are needed to build KiCad.\n\n#================================================\n",
        "Line" : 576,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "#\n\n# Find OpenGL library, required\n\n#\n",
        "Line" : 581,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# CMake 3.11+ setting; see 'cmake --help-policy CMP0072'\n",
        "Line" : 584,
        "CharPositionInLine" : 41
      },
      "62" : {
        "Text" : "#\n\n# Find GLEW library, required\n\n#\n",
        "Line" : 587,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "#\n\n# Find GLM library, required\n\n#\n",
        "Line" : 595,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "#\n\n# Find CURL library, required for github plugin\n\n#\n",
        "Line" : 606,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "#\n\n# Find Cairo library, required\n\n#\n",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "#\n\n# Find Boost library, required.\n\n#\n\n# Note: Prior to Boost 1.59, the Boost context library is not built when compiling on windows\n\n#       with GCC.  You must patch the Boost sources.\n",
        "Line" : 619,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Include MinGW resource compiler.\n",
        "Line" : 626,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Find GDI+ on windows if wxGraphicsContext is available, and only link gdiplus library\n\n# if wxGraphicsContext not used, because the cairo printing system uses this library\n",
        "Line" : 629,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# if WX_GRAPHICS_CONTEXT is not used we just need the gdiplus library for cairo printing\n",
        "Line" : 636,
        "CharPositionInLine" : 8
      },
      "70" : {
        "Text" : "# Find ngspice library, required for integrated circuit simulator\n",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Find OpenCascade Community Edition, required for STEP plugin and tools\n",
        "Line" : 646,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Assist with header file searching optimization:\n\n# INC_BEFORE and INC_AFTER are two lists which go at the front and back of the\n\n# header file search lists, respectively.\n\n# INC_BEFORE is for use with \"include_directories( BEFORE ...)\", which _reverses_\n\n# the order during insertion.  (So put first wanted last, which is\n\n# ${CMAKE_SOURCE_DIR/include.)  Use '.' for current source dir since\n\n# we don't want expansion here and now, which would happen if using ${CMAKE_CURRENT_SOURCE_DIR}.\n\n# Instead we use '.' which is applicable to any source directory below here as a result of\n\n# this lack of expansion.\n",
        "Line" : 668,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Find Python and other scripting resources\n",
        "Line" : 688,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# SWIG 3.0 or later require for C++11 support.\n",
        "Line" : 691,
        "CharPositionInLine" : 4
      },
      "75" : {
        "Text" : "# force a python version < 3.0\n",
        "Line" : 699,
        "CharPositionInLine" : 8
      },
      "76" : {
        "Text" : "# Get the correct Python site package install path from the Python interpreter found by\n\n# FindPythonInterp unless the user specifically defined a custom path.\n",
        "Line" : 712,
        "CharPositionInLine" : 4
      },
      "77" : {
        "Text" : "# relative path for python in bundle\n",
        "Line" : 730,
        "CharPositionInLine" : 8
      },
      "78" : {
        "Text" : "# install into bundle Frameworks folder\n",
        "Line" : 732,
        "CharPositionInLine" : 8
      },
      "79" : {
        "Text" : "# Infrequently needed headers go at end of search paths, append to INC_AFTER which\n\n# although is used for all components, should be a harmless hit for something like eeschema\n\n# so long as unused search paths are at the end like this.\n",
        "Line" : 753,
        "CharPositionInLine" : 4
      },
      "80" : {
        "Text" : "#\n\n# Find wxWidgets library, required\n\n#\n",
        "Line" : 759,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Turn on wxWidgets compatibility mode for some classes\n",
        "Line" : 763,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Check if '--toolkit=xxx' option has been passed\n",
        "Line" : 767,
        "CharPositionInLine" : 4
      },
      "83" : {
        "Text" : "# Use the same toolkit as wxPython otherwise there will be a symbol conflict\n",
        "Line" : 777,
        "CharPositionInLine" : 8
      },
      "84" : {
        "Text" : "# Require the same wxWidgets version as is used by wxPython\n",
        "Line" : 781,
        "CharPositionInLine" : 4
      },
      "85" : {
        "Text" : "# Require wxWidgets 3.0.0 as the minimum when wxPython is disabled\n",
        "Line" : 784,
        "CharPositionInLine" : 4
      },
      "86" : {
        "Text" : "# See line 49 of CMakeModules/FindwxWidgets.cmake\n",
        "Line" : 788,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Include wxWidgets macros.\n",
        "Line" : 793,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# Check for GTK3 libraries - These do not have XOR, so we need overlay (Page layout editor)\n",
        "Line" : 796,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# wxPython appears to be installed and valid so make sure the headers are available.\n",
        "Line" : 802,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "#message( STATUS \"Searching for wx/wxPython/wxPython.h in ${path}\" )\n",
        "Line" : 804,
        "CharPositionInLine" : 8
      },
      "91" : {
        "Text" : "# Remove app bundles in ${KICAD_BIN} before installing anything new.\n\n# Must be defined before all includes so that it is executed first.\n",
        "Line" : 822,
        "CharPositionInLine" : 4
      },
      "92" : {
        "Text" : "#================================================\n\n# Doxygen Output\n\n#================================================\n",
        "Line" : 839,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# Generate config.h.\n",
        "Line" : 865,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "###\n\n# Generate Map file\n\n###\n",
        "Line" : 869,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# Currently only works on linux/gcc\n",
        "Line" : 873,
        "CharPositionInLine" : 4
      },
      "96" : {
        "Text" : "#================================================\n\n# \"make uninstall\" rules\n\n#================================================\n",
        "Line" : 881,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "#================================================\n\n# Installation\n\n#================================================\n",
        "Line" : 893,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "###\n\n# Install scripts\n\n###\n",
        "Line" : 897,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "###\n\n# FreeDesktop .desktop and MIME resources\n\n###\n",
        "Line" : 908,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# Set paths\n",
        "Line" : 913,
        "CharPositionInLine" : 4
      },
      "101" : {
        "Text" : "# Install Mime directory\n",
        "Line" : 920,
        "CharPositionInLine" : 4
      },
      "102" : {
        "Text" : "# Install Icons\n",
        "Line" : 926,
        "CharPositionInLine" : 4
      },
      "103" : {
        "Text" : "# Install Applications directory (.desktop files)\n",
        "Line" : 932,
        "CharPositionInLine" : 4
      },
      "104" : {
        "Text" : "# Install AppStream directory (app store entry)\n",
        "Line" : 938,
        "CharPositionInLine" : 4
      },
      "105" : {
        "Text" : "#include( CTest )\n",
        "Line" : 945,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# Create a *.deb file:\n",
        "Line" : 950,
        "CharPositionInLine" : 4
      },
      "107" : {
        "Text" : "#set( CPACK_PACKAGE_CONTACT Firstname Lastname <email@company.com> )\n",
        "Line" : 957,
        "CharPositionInLine" : 4
      },
      "108" : {
        "Text" : "#================================================\n\n# Let CMake look in these directories for nested\n\n# 'CMakeLists.txt' files to process\n\n#================================================\n",
        "Line" : 964,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "# Binaries ( CMake targets )\n",
        "Line" : 969,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "# 3D plugins must be built before kicad\n\n# should follow pcbnew, eeschema\n",
        "Line" : 984,
        "CharPositionInLine" : 40
      },
      "111" : {
        "Text" : "# Resources\n",
        "Line" : 990,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 112
    },
    "CMakeModules/CMakeFindFrameworks.cmake" : {
      "ObjectId" : "7fdeb84befda5cfdf5512c4e709f6a91e7347930",
      "LastModified" : "2013-08-04T20:31:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - helper module to find OSX frameworks\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/CheckFindPackageResult.cmake" : {
      "ObjectId" : "3cb1a2107bffb8cf3807149eccf962fe5623c6a8",
      "LastModified" : "2013-08-04T20:31:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeModules/CreateGitVersionHeader.cmake" : {
      "ObjectId" : "f465534f050710a2377d9da88d5f6dac28abd5ac",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  This program source code file is part of KICAD, a free EDA CAD application.\n\n#\n\n#  Copyright (C) 2010 Wayne Stambaugh <stambaughw@gmail.com>\n\n#  Copyright (C) 2010-2018 KiCad Developers, see AUTHORS.txt for contributors.\n\n#\n\n#  This program is free software; you can redistribute it and/or\n\n#  modify it under the terms of the GNU General Public License\n\n#  as published by the Free Software Foundation; either version 2\n\n#  of the License, or (at your option) any later version.\n\n#\n\n#  This program is distributed in the hope that it will be useful,\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#  GNU General Public License for more details.\n\n#\n\n#  You should have received a copy of the GNU General Public License\n\n#  along with this program; if not, you may find one here:\n\n#  http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n#  or you may search the http://www.gnu.org website for the version 2 license,\n\n#  or you may write to the Free Software Foundation, Inc.,\n\n#  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include Git support to automagically create version header file.\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Use `git describe --dirty` to create the KiCad version string.\n",
        "Line" : 33,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Check to make sure 'git' command did not fail.  Otherwise fallback\n\n# to KiCadVersion.cmake as the revision level.\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "CMakeModules/FindCairo.cmake" : {
      "ObjectId" : "c5146f760ff922f3f08d80818cefe35459cdf166",
      "LastModified" : "2016-05-02T09:45:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the CAIRO library\n\n# Once done this will define\n\n#\n\n#  CAIRO_ROOT_DIR - Set this variable to the root installation of CAIRO\n\n#\n\n# Read-Only variables:\n\n#  CAIRO_FOUND - system has the CAIRO library\n\n#  CAIRO_INCLUDE_DIR - the CAIRO include directory\n\n#  CAIRO_LIBRARIES - The libraries needed to use CAIRO\n\n#  CAIRO_VERSION - This is set to $major.$minor.$revision (eg. 0.9.8)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012 Dmitry Baryshnikov <polimax at mail dot ru>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MINGW should go here too\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Implementation details:\n\n# We are using the libraries located in the VC subdir instead of the parent directory eventhough :\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# same player, for MingW\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Not sure what to pick for -say- intel, let's use the toplevel ones and hope someone report issues:\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# compat defines\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#message( STATUS \"Cairo_FIND_VERSION=${Cairo_FIND_VERSION}.\")\n\n#message( STATUS \"CAIRO_INCLUDE_DIR=${CAIRO_INCLUDE_DIR}.\")\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Fetch version from cairo-version.h if a version was requested by find_package()\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "CMakeModules/FindGLEW.cmake" : {
      "ObjectId" : "ac2eb9ee8acb5e49cf99b0cf15020504702026a6",
      "LastModified" : "2017-07-28T09:30:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindGLEW\n\n# --------\n\n#\n\n# Find the OpenGL Extension Wrangler Library (GLEW)\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the :prop_tgt:`IMPORTED` target ``GLEW::GLEW``,\n\n# if GLEW has been found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#   GLEW_INCLUDE_DIRS - include directories for GLEW\n\n#   GLEW_LIBRARIES - libraries to link against GLEW\n\n#   GLEW_FOUND - true if GLEW has been found and can be used\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/FindGLM.cmake" : {
      "ObjectId" : "028f2b425ff8dbe221aec8fb2da0997a7d5ac5f2",
      "LastModified" : "2016-05-02T09:45:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# attempt to extract the GLM Version information from setup.hpp\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# extract the \"#define GLM_VERSION*\" lines\n",
        "Line" : 16,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "#ensure that NOT GLM_VERSION* will evaluate to '0'\n",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "CMakeModules/FindGdiPlus.cmake" : {
      "ObjectId" : "cde55a36318db2023271f02ce890a61ffeca34e0",
      "LastModified" : "2016-05-02T09:45:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Microsoft GDI+ build files.\n\n# Once done this will define\n\n#\n\n#  GDI_PLUS_FOUND - system has GDI+\n\n#  GDI_PLUS_INCLUDE_DIR - the GDI+ include directory\n\n#  GDI_PLUS_LIBRARIES - Link these to use GDI+\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set GDI_PLUS_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/FindOpenCASCADE.cmake" : {
      "ObjectId" : "d698abd27f98a1759ed9fdd1e7b868ffd2339b68",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find OCC\n\n# Once done this will define\n\n#\n\n# OCC_FOUND          - system has OCC - OpenCASCADE\n\n# OCC_INCLUDE_DIR    - where the OCC include directory can be found\n\n# OCC_LIBRARY_DIR    - where the OCC library directory can be found\n\n# OCC_LIBRARIES      - Link this to use OCC\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################################\n\n#\n\n# Modifications Copyright (C) 2018 Seth Hillbrand\n\n#\n\n# Based on FindOpenCasCade.cmake by the FreeCAD CAx development team\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU Lesser General Public\n\n# License as published by the Free Software Foundation; either\n\n# version 2.1 of the License, or (at your option) any later version.\n\n#\n\n# This library is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n\n# Lesser General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Lesser General Public\n\n# License along with this library; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the needed libraries\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set OCC_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Use the specified library location if given\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Convert path names to absolute for cleaner display\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "CMakeModules/FindOpenSSL.cmake" : {
      "ObjectId" : "de91787c184fce3744380aa45c6b8d7467e9082b",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindOpenSSL\n\n# -----------\n\n#\n\n# Try to find the OpenSSL encryption library\n\n#\n\n# Once done this will define\n\n#\n\n# ::\n\n#\n\n#   OPENSSL_ROOT_DIR - Set this variable to the root installation of OpenSSL\n\n#\n\n#\n\n#\n\n# Read-Only variables:\n\n#\n\n# ::\n\n#\n\n#   OPENSSL_FOUND - system has the OpenSSL library\n\n#   OPENSSL_INCLUDE_DIR - the OpenSSL include directory\n\n#   OPENSSL_LIBRARIES - The libraries needed to use OpenSSL\n\n#   OPENSSL_VERSION - This is set to $major.$minor.$revision$path (eg. 0.9.8s)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n# Copyright 2009-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# http://www.slproweb.com/products/Win32OpenSSL.html\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# /MD and /MDd are the standard values - if someone wants to use\n\n# others, the libnames have to change here too\n\n# use also ssl and ssleay32 in debug as fallback for openssl < 0.9.8b\n\n# TODO: handle /MT and static lib\n\n# In Visual C++ naming convention each of these four kinds of Windows libraries has it's standard suffix:\n\n#   * MD for dynamic-release\n\n#   * MDd for dynamic-debug\n\n#   * MT for static-release\n\n#   * MTd for static-debug\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Implementation details:\n\n# We are using the libraries located in the VC subdir instead of the parent directory eventhough :\n\n# libeay32MD.lib is identical to ../libeay32.lib, and\n\n# ssleay32MD.lib is identical to ../ssleay32.lib\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# same player, for MinGW\n",
        "Line" : 159,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Do not search system path.  Otherwise the DLL will be found rather than the link library.\n",
        "Line" : 172,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Do not search system path.  Otherwise the DLL will be found rather than the link library.\n",
        "Line" : 184,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Not sure what to pick for -say- intel, let's use the toplevel ones and hope someone report issues:\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# compat defines\n",
        "Line" : 244,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# The version number is encoded as 0xMNNFFPPS: major minor fix patch status\n\n# The status gives if this is a developer or prerelease and is ignored here.\n\n# Major, minor, and fix directly translate into the version numbers shown in\n\n# the string. The patch field translates to the single character suffix that\n\n# indicates the bug fix state, which 00 -> nothing, 01 -> a, 02 -> b and so\n\n# on.\n",
        "Line" : 290,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# 96 is the ASCII code of 'a' minus 1\n",
        "Line" : 310,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Once anyone knows how OpenSSL would call the patch versions beyond 'z'\n\n# this should be updated to handle that, too. This has not happened yet\n\n# so it is simply ignored here for now.\n",
        "Line" : 313,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 13
    },
    "CMakeModules/FindPackageMessage.cmake" : {
      "ObjectId" : "b6a58e427d143f8c3c65ac89668eb826990b3f6f",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindPackageMessage\n\n# ------------------\n\n#\n\n#\n\n#\n\n# FIND_PACKAGE_MESSAGE(<name> \"message for user\" \"find result details\")\n\n#\n\n# This macro is intended to be used in FindXXX.cmake modules files.  It\n\n# will print a message once for each unique find result.  This is useful\n\n# for telling the user where a package was found.  The first argument\n\n# specifies the name (XXX) of the package.  The second argument\n\n# specifies the message to display.  The third argument lists details\n\n# about the find result so that if they change the message will be\n\n# displayed again.  The macro also obeys the QUIET argument to the\n\n# find_package command.\n\n#\n\n# Example:\n\n#\n\n# ::\n\n#\n\n#   if(X11_FOUND)\n\n#     FIND_PACKAGE_MESSAGE(X11 \"Found X11: ${X11_X11_LIB}\"\n\n#       \"[${X11_X11_LIB}][${X11_INCLUDE_DIR}]\")\n\n#   else()\n\n#    ...\n\n#   endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2008-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Avoid printing a message repeatedly for the same find result.\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The message has not yet been printed.\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Save the find details in the cache to avoid printing the same\n\n# message again.\n",
        "Line" : 51,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "CMakeModules/FindPixman.cmake" : {
      "ObjectId" : "128ca8237b72638dea51b1a5101280e67983ee53",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the PIXMAN library\n\n# Once done this will define\n\n#\n\n#  PIXMAN_ROOT_DIR - Set this variable to the root installation of PIXMAN\n\n#\n\n# Read-Only variables:\n\n#  PIXMAN_FOUND - system has the PIXMAN library\n\n#  PIXMAN_INCLUDE_DIR - the PIXMAN include directory\n\n#  PIXMAN_LIBRARIES - The libraries needed to use PIXMAN\n\n#  PIXMAN_VERSION - This is set to $major.$minor.$revision (eg. 0.9.8)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012 Dmitry Baryshnikov <polimax at mail dot ru>\n\n# Copyright 2017 Simon Richter <Simon.Richter at hogyros dot de>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MINGW should go here too\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Implementation details:\n\n# We are using the libraries located in the VC subdir instead of the parent directory eventhough :\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# same player, for MingW\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Not sure what to pick for -say- intel, let's use the toplevel ones and hope someone report issues:\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# compat defines\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#message( STATUS \"Pixman_FIND_VERSION=${Pixman_FIND_VERSION}.\")\n\n#message( STATUS \"PIXMAN_INCLUDE_DIR=${PIXMAN_INCLUDE_DIR}.\")\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Fetch version from pixman-version.h if a version was requested by find_package()\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "CMakeModules/FindPythonInterp.cmake" : {
      "ObjectId" : "9e3580ff8c5f48f8a16d3d5d6280dcd14cf9a477",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find python interpreter\n\n# This module finds if Python interpreter is installed and determines where the\n\n# executables are. This code sets the following variables:\n\n#\n\n#  PYTHONINTERP_FOUND         - Was the Python executable found\n\n#  PYTHON_EXECUTABLE          - path to the Python interpreter\n\n#\n\n#  PYTHON_VERSION_STRING      - Python version found e.g. 2.5.2\n\n#  PYTHON_VERSION_MAJOR       - Python major version found e.g. 2\n\n#  PYTHON_VERSION_MINOR       - Python minor version found e.g. 5\n\n#  PYTHON_VERSION_PATCH       - Python patch version found e.g. 2\n\n#\n\n# The Python_ADDITIONAL_VERSIONS variable can be used to specify a list of\n\n# version numbers that should be taken into account when searching for Python.\n\n# You need to set this variable before calling find_package(PythonInterp).\n\n#\n\n# You can point to a preferred python install to use by setting the following\n\n# to the point at the root directory of the python install:\n\n#\n\n#  PYTHON_ROOT_DIR            - The root directory of the python install\n\n#=============================================================================\n\n# Copyright 2005-2010 Kitware, Inc.\n\n# Copyright 2011 Bjoern Ricks <bjoern.ricks@gmail.com>\n\n# Copyright 2012 Rolf Eike Beer <eike@sf-mail.de>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Search for the preferred executable first\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search for any of the executable names solely in the directory we've\n\n# been pointed to. Failure to find the python executable here is a fatal\n\n# fail.\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# If there is no specific path given, look for python in the path\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Set up the versions we know about, in the order we will search. Always add\n\n# the user supplied additional versions to the front.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Search for newest python version if python executable isn't found\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If using the MINGW compiler, we mustn't find the standard python\n\n# distribution because of multiple C-Runtime errors. We must instead\n\n# use the Python-a-mingw-us distribution\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# determine python version string\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# it's called \"Python 2.7\", not \"2.7.0\"\n",
        "Line" : 139,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# sys.version predates sys.version_info, so use that\n",
        "Line" : 143,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# sys.version was first documented for Python 1.5, so assume\n\n# this is older.\n",
        "Line" : 158,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PYTHONINTERP_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "CMakeModules/FindPythonLibs.cmake" : {
      "ObjectId" : "158df7bbff258872db7ae98aa40ee0c0eb797878",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find python libraries\n\n# This module finds if Python is installed and determines where the\n\n# include files and libraries are. It also determines what the name of\n\n# the library is. This code sets the following variables:\n\n#\n\n#  PYTHONLIBS_FOUND           - have the Python libs been found\n\n#  PYTHON_LIBRARIES           - path to the python library\n\n#  PYTHON_INCLUDE_PATH        - path to where Python.h is found (deprecated)\n\n#  PYTHON_INCLUDE_DIRS        - path to where Python.h is found\n\n#  PYTHON_DEBUG_LIBRARIES     - path to the debug library (deprecated)\n\n#  PYTHONLIBS_VERSION_STRING  - version of the Python libs found (since CMake 2.8.8)\n\n#\n\n# The Python_ADDITIONAL_VERSIONS variable can be used to specify a list of\n\n# version numbers that should be taken into account when searching for Python.\n\n# You need to set this variable before calling find_package(PythonLibs).\n\n#\n\n# You can point to a preferred python install to use by setting the following\n\n# to the point at the root directory of the python install:\n\n#\n\n#  PYTHON_ROOT_DIR            - The root directory of the python install\n\n#\n\n# If you'd like to specify the installation of Python to use, you should modify\n\n# the following cache variables:\n\n#  PYTHON_LIBRARY             - path to the python library\n\n#  PYTHON_INCLUDE_DIR         - path to where Python.h is found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search for the python framework on Apple.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set up the versions we know about, in the order we will search. Always add\n\n# the user supplied additional versions to the front.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Avoid finding the .dll in the PATH.  We want the .lib.\n",
        "Line" : 135,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Look for the static library in the Python config directory\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Avoid finding the .dll in the PATH.  We want the .lib.\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# This is where the static library is usually located\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# For backward compatibility, honour value of PYTHON_INCLUDE_PATH, if\n\n# PYTHON_INCLUDE_DIR is not set.\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# For backward compatibility, set PYTHON_INCLUDE_PATH.\n",
        "Line" : 192,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# We use PYTHON_INCLUDE_DIR, PYTHON_LIBRARY and PYTHON_DEBUG_LIBRARY for the\n\n# cache entries because they are meant to specify the location of a single\n\n# library. We now set the variables listed by the documentation for this\n\n# module.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# These variables have been historically named in this module different from\n\n# what SELECT_LIBRARY_CONFIGURATIONS() expects.\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# SELECT_LIBRARY_CONFIGURATIONS() sets ${PREFIX}_FOUND if it has a library.\n\n# Unset this, this prefix doesn't match the module prefix, they are different\n\n# for historical reasons.\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# PYTHON_ADD_MODULE(<name> src1 src2 ... srcN) is used to build modules for python.\n\n# PYTHON_WRITE_MODULES_HEADER(<filename>) writes a header file you can include\n\n# in your sources to initialize the static python modules\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Mark these options as advanced\n",
        "Line" : 247,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#    target_link_libraries(${_NAME} ${PYTHON_LIBRARIES})\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# with configure_file() cmake complains that you may not use a file created using file(WRITE) as input file for configure_file()\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "CMakeModules/FindSWIG.cmake" : {
      "ObjectId" : "df47a0cb35e3d1db1bf8086a77600ad6bd7e1c2f",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindSWIG\n\n# --------\n\n#\n\n# Find SWIG\n\n#\n\n# This module finds an installed SWIG.  It sets the following variables:\n\n#\n\n# ::\n\n#\n\n#   SWIG_FOUND - set to true if SWIG is found\n\n#   SWIG_DIR - the directory where swig is installed\n\n#   SWIG_EXECUTABLE - the path to the swig executable\n\n#   SWIG_VERSION   - the version number of the swig executable\n\n#\n\n#\n\n#\n\n# The minimum required version of SWIG can be specified using the\n\n# standard syntax, e.g.  find_package(SWIG 1.1)\n\n#\n\n# All information is collected from the SWIG_EXECUTABLE so the version\n\n# to be found can be changed from the command line by means of setting\n\n# SWIG_EXECUTABLE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2004-2009 Kitware, Inc.\n\n# Copyright 2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n# Copyright 2014 Sylvain Joubert <joubert.sy@gmail.com>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/Findngspice.cmake" : {
      "ObjectId" : "880ae1169e13136503dbb8f847c11d7ad87afc2f",
      "LastModified" : "2019-02-14T22:44:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake script for finding libngspice\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 2016 CERN\n\n# Author: Maciej Suminski <maciej.suminski@cern.ch>\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, you may find one here:\n\n# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n# or you may search the http://www.gnu.org website for the version 2 license,\n\n# or you may write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NGSPICE_LIBRARY points to libngspice.dll.a on Windows,\n\n# but the goal is to find out the DLL name.\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "CMakeModules/FindwxPython.cmake" : {
      "ObjectId" : "257f83c60c9bf27f52dd6b7d86e8a726daa76e95",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake script for finding wxPython/Phoenix library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 2018 CERN\n\n# Author: Maciej Suminski <maciej.suminski@cern.ch>\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, you may find one here:\n\n# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n# or you may search the http://www.gnu.org website for the version 2 license,\n\n# or you may write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Exported variables:\n\n#   WXPYTHON_VERSION: wxPython/Phoenix version,\n\n#                     normally 3.x.x for wxPython, 4.x.x for Phoenix\n\n#   WXPYTHON_FLAVOR: 'Phoenix' or 'wxPython'\n\n#   WXPYTHON_TOOLKIT: base library toolkit (e.g. gtk2, gtk3, msw, osx_cocoa)\n\n#   WXPYTHON_WXVERSION: wxWidgets version used by wxPython/Phoenix\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create a CMake list containing wxPython version\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add user specified Python site package path\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# extra path for macOS, so that 'wx' module is accessible\n",
        "Line" : 38,
        "CharPositionInLine" : 16
      },
      "6" : {
        "Text" : "# Check to see if any version of wxPython is installed on the system.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Turn the version string to a list for easier processing\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# wxPython style, e.g. '3.0.2.0;gtk3;(classic) or Pheonix style: e.g. 4.0.1;gtk3;(phoenix)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Determine wxWidgets version used by wxPython/Phoenix\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# 4.0.1;gtk3;(phoenix) does not contain wxWidgets version, request it explicitly\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# 3.0.2.0;gtk3;(classic) has the wxWidgets version in the first part\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Fix an incosistency between the toolkit names reported by wx.version() and wx-config for cocoa\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "CMakeModules/FindwxWidgets.cmake" : {
      "ObjectId" : "6a8dc90e7122cddcfc0ebed261eded7d04f2f6ee",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindwxWidgets\n\n# -------------\n\n#\n\n# Find a wxWidgets (a.k.a., wxWindows) installation.\n\n#\n\n# This module finds if wxWidgets is installed and selects a default\n\n# configuration to use.  wxWidgets is a modular library.  To specify the\n\n# modules that you will use, you need to name them as components to the\n\n# package:\n\n#\n\n# find_package(wxWidgets COMPONENTS core base ...)\n\n#\n\n# There are two search branches: a windows style and a unix style.  For\n\n# windows, the following variables are searched for and set to defaults\n\n# in case of multiple choices.  Change them if the defaults are not\n\n# desired (i.e., these are the only variables you should change to\n\n# select a configuration):\n\n#\n\n# ::\n\n#\n\n#   wxWidgets_ROOT_DIR      - Base wxWidgets directory\n\n#                             (e.g., C:/wxWidgets-2.6.3).\n\n#   wxWidgets_LIB_DIR       - Path to wxWidgets libraries\n\n#                             (e.g., C:/wxWidgets-2.6.3/lib/vc_lib).\n\n#   wxWidgets_CONFIGURATION - Configuration to use\n\n#                             (e.g., msw, mswd, mswu, mswunivud, etc.)\n\n#   wxWidgets_EXCLUDE_COMMON_LIBRARIES\n\n#                           - Set to TRUE to exclude linking of\n\n#                             commonly required libs (e.g., png tiff\n\n#                             jpeg zlib regex expat).\n\n#\n\n#\n\n#\n\n# For unix style it uses the wx-config utility.  You can select between\n\n# debug/release, unicode/ansi, universal/non-universal, and\n\n# static/shared in the QtDialog or ccmake interfaces by turning ON/OFF\n\n# the following variables:\n\n#\n\n# ::\n\n#\n\n#   wxWidgets_USE_DEBUG\n\n#   wxWidgets_USE_UNICODE\n\n#   wxWidgets_USE_UNIVERSAL\n\n#   wxWidgets_USE_STATIC\n\n#\n\n#\n\n#\n\n# There is also a wxWidgets_CONFIG_OPTIONS variable for all other\n\n# options that need to be passed to the wx-config utility.  For example,\n\n# to use the base toolkit found in the /usr/local path, set the variable\n\n# (before calling the FIND_PACKAGE command) as such:\n\n#\n\n# ::\n\n#\n\n#   set(wxWidgets_CONFIG_OPTIONS --toolkit=base --prefix=/usr)\n\n#\n\n#\n\n#\n\n# The following are set after the configuration is done for both windows\n\n# and unix style:\n\n#\n\n# ::\n\n#\n\n#   wxWidgets_FOUND            - Set to TRUE if wxWidgets was found.\n\n#   wxWidgets_INCLUDE_DIRS     - Include directories for WIN32\n\n#                                i.e., where to find \"wx/wx.h\" and\n\n#                                \"wx/setup.h\"; possibly empty for unices.\n\n#   wxWidgets_LIBRARIES        - Path to the wxWidgets libraries.\n\n#   wxWidgets_LIBRARY_DIRS     - compile time link dirs, useful for\n\n#                                rpath on UNIX. Typically an empty string\n\n#                                in WIN32 environment.\n\n#   wxWidgets_DEFINITIONS      - Contains defines required to compile/link\n\n#                                against WX, e.g. WXUSINGDLL\n\n#   wxWidgets_DEFINITIONS_DEBUG- Contains defines required to compile/link\n\n#                                against WX debug builds, e.g. __WXDEBUG__\n\n#   wxWidgets_CXX_FLAGS        - Include dirs and compiler flags for\n\n#                                unices, empty on WIN32. Essentially\n\n#                                \"`wx-config --cxxflags`\".\n\n#   wxWidgets_USE_FILE         - Convenience include file.\n\n#\n\n#\n\n#\n\n# Sample usage:\n\n#\n\n# ::\n\n#\n\n#    # Note that for MinGW users the order of libs is important!\n\n#    find_package(wxWidgets COMPONENTS net gl core base)\n\n#    if(wxWidgets_FOUND)\n\n#      include(${wxWidgets_USE_FILE})\n\n#      # and for each of your dependent executable/library targets:\n\n#      target_link_libraries(<YourTarget> ${wxWidgets_LIBRARIES})\n\n#    endif()\n\n#\n\n#\n\n#\n\n# If wxWidgets is required (i.e., not an optional part):\n\n#\n\n# ::\n\n#\n\n#    find_package(wxWidgets REQUIRED net gl core base)\n\n#    include(${wxWidgets_USE_FILE})\n\n#    # and for each of your dependent executable/library targets:\n\n#    target_link_libraries(<YourTarget> ${wxWidgets_LIBRARIES})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2004-2009 Kitware, Inc.\n\n# Copyright 2007-2009 Miguel A. Figueroa-Villanueva <miguelf at ieee dot org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# FIXME: check this and provide a correct sample usage...\n\n#        Remember to connect back to the upper text.\n\n# Sample usage with monolithic wx build:\n\n#\n\n#   find_package(wxWidgets COMPONENTS mono)\n\n#   ...\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# NOTES\n\n#\n\n# This module has been tested on the WIN32 platform with wxWidgets\n\n# 2.6.2, 2.6.3, and 2.5.3. However, it has been designed to\n\n# easily extend support to all possible builds, e.g., static/shared,\n\n# debug/release, unicode, universal, multilib/monolithic, etc..\n\n#\n\n# If you want to use the module and your build type is not supported\n\n# out-of-the-box, please contact me to exchange information on how\n\n# your system is setup and I'll try to add support for it.\n\n#\n\n# AUTHOR\n\n#\n\n# Miguel A. Figueroa-Villanueva (miguelf at ieee dot org).\n\n# Jan Woetzel (jw at mip.informatik.uni-kiel.de).\n\n# Jan Mrázek (email at honzamrazek.cz)\n\n#\n\n# Based on previous works of:\n\n# Jan Woetzel (FindwxWindows.cmake),\n\n# Jorgen Bodde and Jerry Fath (FindwxWin.cmake).\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO/ideas\n\n#\n\n# (1) Option/Setting to use all available wx libs\n\n# In contrast to expert developer who lists the\n\n# minimal set of required libs in wxWidgets_USE_LIBS\n\n# there is the newbie user:\n\n#   - who just wants to link against WX with more 'magic'\n\n#   - doesn't know the internal structure of WX or how it was built,\n\n#     in particular if it is monolithic or not\n\n#   - want to link against all available WX libs\n\n# Basically, the intent here is to mimic what wx-config would do by\n\n# default (i.e., `wx-config --libs`).\n\n#\n\n# Possible solution:\n\n#   Add a reserved keyword \"std\" that initializes to what wx-config\n\n# would default to. If the user has not set the wxWidgets_USE_LIBS,\n\n# default to \"std\" instead of \"base core\" as it is now. To implement\n\n# \"std\" will basically boil down to a FOR_EACH lib-FOUND, but maybe\n\n# checking whether a minimal set was found.\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# FIXME: This and all the DBG_MSG calls should be removed after the\n\n# module stabilizes.\n\n#\n\n# Helper macro to control the debugging output globally. There are\n\n# two versions for controlling how verbose your output should be.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#  message(STATUS\n\n#    \"${CMAKE_CURRENT_LIST_FILE}(${CMAKE_CURRENT_LIST_LINE}): ${_MSG}\")\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#  message(STATUS\n\n#    \"${CMAKE_CURRENT_LIST_FILE}(${CMAKE_CURRENT_LIST_LINE}): ${_MSG}\")\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Clear return values in case the module is loaded more than once.\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# DEPRECATED: This is a patch to support the DEPRECATED use of\n\n# wxWidgets_USE_LIBS.\n\n#\n\n# If wxWidgets_USE_LIBS is set:\n\n# - if using <components>, then override wxWidgets_USE_LIBS\n\n# - else set wxWidgets_FIND_COMPONENTS to wxWidgets_USE_LIBS\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add the convenience use file if available.\n\n#\n\n# Get dir of this file which may reside in:\n\n# - CMAKE_MAKE_ROOT/Modules on CMake installation\n\n# - CMAKE_MODULE_PATH if user prefers his own specialized version\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Prefer an existing customized version, but the user might override\n\n# the FindwxWidgets module and not the UsewxWidgets one.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#=====================================================================\n\n# Determine whether unix or win32 paths should be used\n\n#=====================================================================\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#=====================================================================\n\n# WIN32_FIND_STYLE\n\n#=====================================================================\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Useful common wx libs needed by almost all components.\n",
        "Line" : 233,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# DEPRECATED: Use find_package(wxWidgets COMPONENTS mono) instead.\n",
        "Line" : 236,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# this is default\n",
        "Line" : 241,
        "CharPositionInLine" : 47
      },
      "17" : {
        "Text" : "# Add the common (usually required libs) unless\n\n# wxWidgets_EXCLUDE_COMMON_LIBRARIES has been set.\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#-------------------------------------------------------------------\n\n# WIN32: Helper MACROS\n\n#-------------------------------------------------------------------\n\n#\n\n# Get filename components for a configuration. For example,\n\n#   if _CONFIGURATION = mswunivud, then _UNV=univ, _UCD=u _DBG=d\n\n#   if _CONFIGURATION = mswu,      then _UNV=\"\",   _UCD=u _DBG=\"\"\n\n#\n",
        "Line" : 252,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#\n\n# Find libraries associated to a configuration.\n\n#\n",
        "Line" : 269,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# FIXME: What if both regex libs are available. regex should be\n\n# found outside the loop and only wx${LIB}${_UCD}${_DBG}.\n\n# Find wxWidgets common libraries.\n",
        "Line" : 277,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# for regex\n",
        "Line" : 283,
        "CharPositionInLine" : 31
      },
      "22" : {
        "Text" : "# Find wxWidgets multilib base libraries.\n",
        "Line" : 291,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Find wxWidgets monolithic library.\n",
        "Line" : 321,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Find wxWidgets multilib libraries.\n",
        "Line" : 336,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "#\n\n# Clear all library paths, so that FIND_LIBRARY refinds them.\n\n#\n\n# Clear a lib, reset its found flag, and mark as advanced.\n",
        "Line" : 355,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Clear all debug or release library paths (arguments are \"d\" or \"\").\n",
        "Line" : 364,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Clear wxWidgets common libraries.\n",
        "Line" : 366,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Clear wxWidgets multilib base libraries.\n",
        "Line" : 371,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Clear wxWidgets monolithic library.\n",
        "Line" : 377,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Clear wxWidgets multilib libraries.\n",
        "Line" : 380,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Clear all wxWidgets debug libraries.\n",
        "Line" : 386,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Clear all wxWidgets release libraries.\n",
        "Line" : 390,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "#\n\n# Set the wxWidgets_LIBRARIES variable.\n\n# Also, Sets output variable wxWidgets_FOUND to FALSE if it fails.\n\n#\n",
        "Line" : 395,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "#-------------------------------------------------------------------\n\n# WIN32: Start actual work.\n\n#-------------------------------------------------------------------\n",
        "Line" : 441,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Look for an installation tree.\n",
        "Line" : 445,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# WX 2.6.x\n",
        "Line" : 451,
        "CharPositionInLine" : 123
      },
      "37" : {
        "Text" : "# If wxWidgets_ROOT_DIR changed, clear lib dir.\n",
        "Line" : 493,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Select one default tree inside the already determined wx tree.\n\n# Prefer static/shared order usually consistent with build\n\n# settings.\n",
        "Line" : 502,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# prefer shared\n",
        "Line" : 524,
        "CharPositionInLine" : 54
      },
      "40" : {
        "Text" : "# prefer static\n",
        "Line" : 541,
        "CharPositionInLine" : 54
      },
      "41" : {
        "Text" : "# If wxWidgets_LIB_DIR changed, clear all libraries.\n",
        "Line" : 548,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# If building shared libs, define WXUSINGDLL to use dllimport.\n",
        "Line" : 556,
        "CharPositionInLine" : 6
      },
      "43" : {
        "Text" : "# Search for available configuration types.\n",
        "Line" : 562,
        "CharPositionInLine" : 6
      },
      "44" : {
        "Text" : "# If the selected configuration wasn't found force the default\n\n# one. Otherwise, use it but still force a refresh for\n\n# updating the doc string with the current list of available\n\n# configurations.\n",
        "Line" : 576,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# If release config selected, and both release/debug exist.\n",
        "Line" : 588,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# If the option exists (already in cache), force it false.\n",
        "Line" : 594,
        "CharPositionInLine" : 10
      },
      "47" : {
        "Text" : "# Get configuration parameters from the name.\n",
        "Line" : 602,
        "CharPositionInLine" : 8
      },
      "48" : {
        "Text" : "# Set wxWidgets lib setup include directory.\n",
        "Line" : 605,
        "CharPositionInLine" : 8
      },
      "49" : {
        "Text" : "# Set wxWidgets main include directory.\n",
        "Line" : 614,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "# Find wxWidgets libraries.\n",
        "Line" : 622,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "# Settings for requested libs (i.e., include dir, libraries, etc.).\n",
        "Line" : 628,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# Add necessary definitions for unicode builds\n",
        "Line" : 631,
        "CharPositionInLine" : 8
      },
      "53" : {
        "Text" : "# Add necessary definitions for debug builds\n",
        "Line" : 636,
        "CharPositionInLine" : 8
      },
      "54" : {
        "Text" : "#=====================================================================\n\n# UNIX_FIND_STYLE\n\n#=====================================================================\n",
        "Line" : 643,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#-----------------------------------------------------------------\n\n# UNIX: Helper MACROS\n\n#-----------------------------------------------------------------\n\n#\n\n# Set the default values based on \"wx-config --selected-config\".\n\n#\n",
        "Line" : 648,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "#\n\n# Query a boolean configuration option to determine if the system\n\n# has both builds available. If so, provide the selection option\n\n# to the user.\n\n#\n",
        "Line" : 678,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# If option exists (already in cache), force to available one.\n",
        "Line" : 703,
        "CharPositionInLine" : 8
      },
      "58" : {
        "Text" : "#\n\n# Set wxWidgets_SELECT_OPTIONS to wx-config options for selecting\n\n# among multiple builds.\n\n#\n",
        "Line" : 714,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "#-----------------------------------------------------------------\n\n# UNIX: Start actual work.\n\n#-----------------------------------------------------------------\n\n# Support cross-compiling, only search in the target platform.\n",
        "Line" : 732,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# get defaults based on \"wx-config --selected-config\"\n",
        "Line" : 745,
        "CharPositionInLine" : 6
      },
      "61" : {
        "Text" : "# for each option: if both builds are available, provide option\n",
        "Line" : 748,
        "CharPositionInLine" : 6
      },
      "62" : {
        "Text" : "# process selection to set wxWidgets_SELECT_OPTIONS\n",
        "Line" : 754,
        "CharPositionInLine" : 6
      },
      "63" : {
        "Text" : "# run the wx-config program to get cxxflags\n",
        "Line" : 758,
        "CharPositionInLine" : 6
      },
      "64" : {
        "Text" : "# parse definitions from cxxflags;\n\n#   drop -D* from CXXFLAGS and the -D prefix\n",
        "Line" : 772,
        "CharPositionInLine" : 8
      },
      "65" : {
        "Text" : "# parse include dirs from cxxflags; drop -I prefix\n",
        "Line" : 783,
        "CharPositionInLine" : 8
      },
      "66" : {
        "Text" : "# Flags are a string, not a list, fix it here\n",
        "Line" : 791,
        "CharPositionInLine" : 8
      },
      "67" : {
        "Text" : "# run the wx-config program to get the libs\n\n# - NOTE: wx-config doesn't verify that the libs requested exist\n\n#         it just produces the names. Maybe a TRY_COMPILE would\n\n#         be useful here...\n",
        "Line" : 804,
        "CharPositionInLine" : 6
      },
      "68" : {
        "Text" : "# extract linkdirs (-L) for rpath (i.e., LINK_DIRECTORIES)\n",
        "Line" : 827,
        "CharPositionInLine" : 8
      },
      "69" : {
        "Text" : "# When using wx-config in MSYS, the include paths are UNIX style paths which may or may\n\n# not work correctly depending on you MSYS/MinGW configuration.  CMake expects native\n\n# paths internally.\n",
        "Line" : 842,
        "CharPositionInLine" : 4
      },
      "70" : {
        "Text" : "#=====================================================================\n\n# Neither UNIX_FIND_STYLE, nor WIN32_FIND_STYLE\n\n#=====================================================================\n",
        "Line" : 870,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Check that all libraries are present, as wx-config does not check it\n",
        "Line" : 884,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Check if a specfic version was requested by find_package().\n",
        "Line" : 905,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Debug output:\n",
        "Line" : 927,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "#=====================================================================\n\n#=====================================================================\n",
        "Line" : 939,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "#=====================================================================\n\n# Macros for use in wxWidgets apps.\n\n# - This module will not fail to find wxWidgets based on the code\n\n#   below. Hence, it's required to check for validity of:\n\n#\n\n# wxWidgets_wxrc_EXECUTABLE\n\n#=====================================================================\n",
        "Line" : 949,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Resource file compiler.\n",
        "Line" : 957,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "#\n\n# WX_SPLIT_ARGUMENTS_ON(<keyword> <left> <right> <arg1> <arg2> ...)\n\n#\n\n# Sets <left> and <right> to contain arguments to the left and right,\n\n# respectively, of <keyword>.\n\n#\n\n# Example usage:\n\n#  function(WXWIDGETS_ADD_RESOURCES outfiles)\n\n#    WX_SPLIT_ARGUMENTS_ON(OPTIONS wxrc_files wxrc_options ${ARGN})\n\n#    ...\n\n#  endfunction()\n\n#\n\n#  WXWIDGETS_ADD_RESOURCES(sources ${xrc_files} OPTIONS -e -o file.C)\n\n#\n\n# NOTE: This is a generic piece of code that should be renamed to\n\n# SPLIT_ARGUMENTS_ON and put in a file serving the same purpose as\n\n# FindPackageStandardArgs.cmake. At the time of this writing\n\n# FindQt4.cmake has a QT4_EXTRACT_OPTIONS, which I basically copied\n\n# here a bit more generalized. So, there are already two find modules\n\n# using this approach.\n\n#\n",
        "Line" : 963,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# FIXME: Document that the input variables will be cleared.\n\n#list(APPEND ${_leftvar}  \"\")\n\n#list(APPEND ${_rightvar} \"\")\n",
        "Line" : 985,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "#\n\n# WX_GET_DEPENDENCIES_FROM_XML(\n\n#   <depends>\n\n#   <match_pattern>\n\n#   <clean_pattern>\n\n#   <xml_contents>\n\n#   <depends_path>\n\n#   )\n\n#\n\n# FIXME: Add documentation here...\n\n#\n",
        "Line" : 1008,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# make the file have an absolute path\n",
        "Line" : 1035,
        "CharPositionInLine" : 4
      },
      "81" : {
        "Text" : "# append file to dependency list\n",
        "Line" : 1040,
        "CharPositionInLine" : 4
      },
      "82" : {
        "Text" : "#\n\n# WXWIDGETS_ADD_RESOURCES(<sources> <xrc_files>\n\n#                         OPTIONS <options> [NO_CPP_CODE])\n\n#\n\n# Adds a custom command for resource file compilation of the\n\n# <xrc_files> and appends the output files to <sources>.\n\n#\n\n# Example usages:\n\n#   WXWIDGETS_ADD_RESOURCES(sources xrc/main_frame.xrc)\n\n#   WXWIDGETS_ADD_RESOURCES(sources ${xrc_files} OPTIONS -e -o altname.cxx)\n\n#\n",
        "Line" : 1047,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Parse files for dependencies.\n",
        "Line" : 1061,
        "CharPositionInLine" : 2
      },
      "84" : {
        "Text" : "# All files have absolute paths or paths relative to the location\n\n# of the rc file.\n",
        "Line" : 1070,
        "CharPositionInLine" : 4
      },
      "85" : {
        "Text" : "# get bitmap/bitmap2 files\n",
        "Line" : 1074,
        "CharPositionInLine" : 4
      },
      "86" : {
        "Text" : "# get url files\n",
        "Line" : 1083,
        "CharPositionInLine" : 4
      },
      "87" : {
        "Text" : "# get wxIcon files\n",
        "Line" : 1092,
        "CharPositionInLine" : 4
      },
      "88" : {
        "Text" : "#\n\n# Parse options.\n\n#\n\n# If NO_CPP_CODE option specified, then produce .xrs file rather\n\n# than a .cpp file (i.e., don't add the default --cpp-code option).\n",
        "Line" : 1102,
        "CharPositionInLine" : 2
      },
      "89" : {
        "Text" : "# wxrc's default output filename for cpp code.\n",
        "Line" : 1110,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "# wxrc's default output filename for xrs file.\n",
        "Line" : 1114,
        "CharPositionInLine" : 4
      },
      "91" : {
        "Text" : "# Get output name for use in add_custom_command.\n\n# - short option scanning\n",
        "Line" : 1118,
        "CharPositionInLine" : 2
      },
      "92" : {
        "Text" : "#list(REMOVE_AT rc_options ${index} ${filename_index})\n",
        "Line" : 1124,
        "CharPositionInLine" : 4
      },
      "93" : {
        "Text" : "# - long option scanning\n",
        "Line" : 1126,
        "CharPositionInLine" : 2
      },
      "94" : {
        "Text" : "#string(REGEX REPLACE \"--output=[^;]*;?\" \"\" rc_options \"${rc_options}\")\n\n#string(REGEX REPLACE \";$\" \"\" rc_options \"${rc_options}\")\n",
        "Line" : 1131,
        "CharPositionInLine" : 2
      },
      "95" : {
        "Text" : "# Add generated header to output file list.\n",
        "Line" : 1143,
        "CharPositionInLine" : 2
      },
      "96" : {
        "Text" : "# Add generated file to output file list.\n",
        "Line" : 1155,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 97
    },
    "CMakeModules/Functions.cmake" : {
      "ObjectId" : "e3d7f8c9ecf1506922a3c9322168ee20193dc308",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  This program source code file is part of KICAD, a free EDA CAD application.\n\n#\n\n#  Copyright (C) 2010 SoftPLC Corporation, Dick Hollenbeck <dick@softplc.com>\n\n#  Copyright (C) 2010 Kicad Developers, see AUTHORS.txt for contributors.\n\n#\n\n#  This program is free software; you can redistribute it and/or\n\n#  modify it under the terms of the GNU General Public License\n\n#  as published by the Free Software Foundation; either version 2\n\n#  of the License, or (at your option) any later version.\n\n#\n\n#  This program is distributed in the hope that it will be useful,\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#  GNU General Public License for more details.\n\n#\n\n#  You should have received a copy of the GNU General Public License\n\n#  along with this program; if not, you may find one here:\n\n#  http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n#  or you may search the http://www.gnu.org website for the version 2 license,\n\n#  or you may write to the Free Software Foundation, Inc.,\n\n#  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Function make_lexer\n\n# is a standard way to invoke TokenList2DsnLexer.cmake.\n\n# Extra arguments are treated as source files which depend on the generated\n\n# outHeaderFile\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# extra_args, if any, are treated as source files (typically headers) which\n\n# are known to depend on the generated outHeader.\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Is a macro instead of function so there's a higher probability that the\n\n# scope of CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA is global\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# remove the file when user passes no arguments, which he should do exactly once at top\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "CMakeModules/Html2C.cmake" : {
      "ObjectId" : "99919b31cedd17b6458ee8912f7ecd0814660a8f",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake script file to process a text file by wrapping every line in double quotes.\n\n# Input file must not abuse quotes, staying with single quotes is probably best.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/KiCadQABuildUtils.cmake" : {
      "ObjectId" : "91f245d023852d539b359fd506bbf0d0ad78cc9f",
      "LastModified" : "2019-04-18T09:59:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This program source code file is part of KiCad, a free EDA CAD application.\n\n#\n\n# Copyright (C) 2019 KiCad Developers, see AUTHORS.txt for contributors.\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, you may find one here:\n\n# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n# or you may search the http://www.gnu.org website for the version 2 license,\n\n# or you may write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Utility CMake functions and targets for marshalling the builds of QA\n\n# tests and tools\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CI tools can use this to force tests to output machine-readable formats\n\n# when possible\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Only CI tools need this\n",
        "Line" : 33,
        "CharPositionInLine" : 42
      },
      "4" : {
        "Text" : "# This is a \"meta\" target that is used to collect all tests\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This is a \"meta\" target used to collect all utility tools\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This \"meta\" target builds all QA tools, utils, etc\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add a target as a \"QA test\" executable:\n\n#   * Added as a CTest test with the given name\n\n#   * Excluded from ALL when KICAD_BUILD_QA_TESTS not set\n\n#   * Is a dependency of qa_all_tests\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Provide Boost-test-y XML params if asked\n\n# Due to Boost issue in 1.62, have to use the --logger parameter, rather than\n\n# separate --log_format, --log_sink, etc parameter\n\n# https://svn.boost.org/trac10/ticket/12507\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Add the test to the CTest registry\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Make the overall test meta-target depend on this test\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# If tests are not enabled by default, remove from the ALL target\n\n# They can still be built manually, or all together with the qa_all_test target\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add a target as a \"QA tool\" executable:\n\n#   * Excluded from ALL when KICAD_BUILD_QA_TESTS not set\n\n#   * Is a dependency of qa_all_tools\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If tests are not enabled by default, remove from the ALL target\n\n# They can still be built manually, or all together with the qa_all_tools\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Make the overall test meta-target depend on this test\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "CMakeModules/KiCadVersion.cmake" : {
      "ObjectId" : "ff80330235bcd97e1e59a5b9b4f1b241bfbf0f94",
      "LastModified" : "2019-03-08T18:04:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\r\n\n#  This program source code file is part of KICAD, a free EDA CAD application.\r\n\n#\r\n\n#  Copyright (C) 2016 Wayne Stambaugh <stambaughw@gmail.com>\n\n#  Copyright (C) 2016 - 2018 KiCad Developers, see AUTHORS.txt for contributors.\n\n#\r\n\n#  This program is free software; you can redistribute it and/or\r\n\n#  modify it under the terms of the GNU General Public License\r\n\n#  as published by the Free Software Foundation; either version 2\r\n\n#  of the License, or (at your option) any later version.\r\n\n#\r\n\n#  This program is distributed in the hope that it will be useful,\r\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n\n#  GNU General Public License for more details.\r\n\n#\r\n\n#  You should have received a copy of the GNU General Public License\r\n\n#  along with this program; if not, you may find one here:\r\n\n#  http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\r\n\n#  or you may search the http://www.gnu.org website for the version 2 license,\r\n\n#  or you may write to the Free Software Foundation, Inc.,\r\n\n#  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: unless you are the person responsible for creating releases,\r\n\n#       do *not* change these variables.  This way the KiCad project\r\n\n#       can maintain control over what is an official KiCad build and\r\n\n#       what is not.  Setting these variable that conflict with KiCad\r\n\n#       releases is a shooting offense.\r\n\n#\r\n\n# This file gets included in the WriteVersionHeader.cmake file to set\r\n\n# the default KiCad version when the source is provided in an archive\n\n# file or git is not available on the build system.   When KiCad is\n\n# cloned using git, the git version is used.  This version string should\n\n# be set after each version tag is added to the git repo.  This will\n\n# give developers a reasonable idea where which branch was used to build\n\n# KiCad.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/MinGWResourceCompiler.cmake" : {
      "ObjectId" : "0e13ee5539829a18db50138f592e42e05c8dabc0",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# resource compilation for mingw (http://www.cmake.org/Bug/view.php?id=4068)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    message(STATUS \"${CMAKE_CURRENT_LIST_FILE}(${CMAKE_CURRENT_LIST_LINE}): ${_MSG}\")\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Resource compiler name.\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Input file.\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Output file.\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Include directories.\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# windres arguments.\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Compile resource file.\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Set a NAME_RESOURCES variable\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "CMakeModules/PNG2cpp.cmake" : {
      "ObjectId" : "655c66e3f0215789485d9a957917c44d70adf04e",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  This program source code file is part of KICAD, a free EDA CAD application.\n\n#\n\n# Copyright (C) 2011 SoftPLC Corporation, Dick Hollenbeck <dick@softplc.com>\n\n# Copyright (C) 2011 Kicad Developers, see change_log.txt for contributors#.\n\n#\n\n#  This program is free software; you can redistribute it and/or\n\n#  modify it under the terms of the GNU General Public License\n\n#  as published by the Free Software Foundation; either version 2\n\n#  of the License, or (at your option) any later version.\n\n#\n\n#  This program is distributed in the hope that it will be useful,\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#  GNU General Public License for more details.\n\n#\n\n#  You should have received a copy of the GNU General Public License\n\n#  along with this program; if not, you may find one here:\n\n#  http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n#  or you may search the http://www.gnu.org website for the version 2 license,\n\n#  or you may write to the Free Software Foundation, Inc.,\n\n#  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n\n#\n\n#############################################################################\n\n#\n\n# This script converts a *.png file into a *.cpp file.\n\n# The *.cpp file will contain a BITMAP_DEF structure, which is simply a byte\n\n# array and a length of bytes which were found in the *.png file.\n\n#\n\n#\n\n# Invocation Parameters are:  inputFile, outCppFile\n\n#\n\n#     inputFile  - Required, full path and file name of the input PNG file\n\n#\n\n#     outCppFile - Required, full path and file name of where to save the\n\n#                  generated cpp file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# split into pairs of ASCII, where each pair gives a single byte's value\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/PerformFeatureChecks.cmake" : {
      "ObjectId" : "531ab27308cf15f997a4ede57d70f388fea2eea4",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check for platform specific features and generate configuration header..\n\n#\n\n# This cmake file was written to create a platform specific configuration\n\n# header to handle differences between build platforms.  Please add new\n\n# feature checks to this file.  Always check the wxWidgets headers first\n\n# before adding new feature checks.  The wxWidgets build system does a\n\n# very good job of handling platform and compiler differences.\n\n#\n\n# Should you feel the need to do this:\n\n#\n\n# #ifdef SYSTEM_A\n\n# #  include <some_header_for_system_a.h>\n\n# #elif SYSTEM_B\n\n# #  include <some_other_header_for_system_b.h>\n\n# #elif SYSTEM_C\n\n# #  include <yet_another_header_for_system_c.h>\n\n# #endif\n\n#\n\n# in your source, don't.  It is not portable nor is it maintainable.\n\n# Use cmake to detect system specific dependencies and update the\n\n# configuration header instead.\n\n#\n\n# See this link for information on writing cmake system checks:\n\n#\n\n#     http://www.vtk.org/Wiki/CMake_HowToDoPlatformChecks\n\n#\n\n# More importantly see \"Recommendations for Writing Autoconf Macros\" in:\n\n#\n\n#     http://www.lrde.epita.fr/~adl/dl/autotools.pdf\n\n#\n\n# for an explanation of why you should do this.  Even though this is an\n\n# autotools tutorial.  This section clearly explains why checking for\n\n# features is superior to checking for systems.  The previous section of\n\n# this tutorial shows how to create a system independent check for _mkdir().\n\n# Consider it a benchmark when writing your own feature tests.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#include( CheckFunctionExists )\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# FIXME: Visual C++ does not support the \"not\" keyword natively.  It is\n\n#        defined as a macro in <iso646.h>.  There should be a cmake macro\n\n#        to check if compiler supports the not keyword natively.  If not,\n\n#        then check for <iso646.h> and include it.  Although it doesn't\n\n#        appear to cause any problems with other compilers, that doesn't\n\n#        mean won't fail somewhere down the line.\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# The STDINT header file test is required because MinGW under Windows\n\n# doesn't define HAVE_STDINT_H even though it does have it.\n\n#\n\n# We need to add it to the global compiler definitions as config.h is not\n\n# included in pyport.h which is where the problem ocurrs without this\n\n# fix.\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# no place is this used, and \"HAVE_STRINGS_H\", if present in config.h then\n\n# conflicts with /usr/include/python2.6/Python.h.  Please rename the macro if\n\n# re-introduce this.\n\n# check_include_file(\"strings.h\" HAVE_STRINGS_H)\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Some platforms define malloc and free in malloc.h instead of stdlib.h.\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Check for functions in math.h.\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Check for functions in C++ cmath.\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# CMakes check_cxx_symbol_exists() doesn't work for templates so we must create a\n\n# small program to verify isinf() exists in cmath.\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#check_symbol_exists( clock_gettime \"time.h\" HAVE_CLOCK_GETTIME ) non-standard library, does not work\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# HAVE_GETTIMEOFDAY is already in use within 2.9 wxWidgets, so use HAVE_GETTIMEOFDAY_FUNC\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Check for Posix getc_unlocked() for improved performance over getc().  Fall back to\n\n# getc() on platforms where getc_unlocked() doesn't exist.\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "CMakeModules/SelectLibraryConfigurations.cmake" : {
      "ObjectId" : "5bca064f5ac58121162df2474af1b3d2e0d44bea",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# select_library_configurations( basename )\n\n#\n\n# This macro takes a library base name as an argument, and will choose good\n\n# values for basename_LIBRARY, basename_LIBRARIES, basename_LIBRARY_DEBUG, and\n\n# basename_LIBRARY_RELEASE depending on what has been found and set.  If only\n\n# basename_LIBRARY_RELEASE is defined, basename_LIBRARY, basename_LIBRARY_DEBUG,\n\n# and basename_LIBRARY_RELEASE will be set to the release value.  If only\n\n# basename_LIBRARY_DEBUG is defined, then basename_LIBRARY,\n\n# basename_LIBRARY_DEBUG and basename_LIBRARY_RELEASE will take the debug value.\n\n#\n\n# If the generator supports configuration types, then basename_LIBRARY and\n\n# basename_LIBRARIES will be set with debug and optimized flags specifying the\n\n# library to be used for the given configuration.  If no build type has been set\n\n# or the generator in use does not support configuration types, then\n\n# basename_LIBRARY and basename_LIBRARIES will take only the release values.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Will Dicharry <wdicharry@stellarscience.com>\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This macro was adapted from the FindQt4 CMake module and is maintained by Will\n\n# Dicharry <wdicharry@stellarscience.com>.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Utility macro to check if one variable exists while another doesn't, and set\n\n# one that doesn't exist to the one that exists.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if only the release version was found, set the debug to be the release\n\n# version.\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# if only the debug version was found, set the release value to be the\n\n# debug value.\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Set a default case, which will come into effect if\n\n# -no build type is set and the generator only supports one build type\n\n#  at a time (i.e. CMAKE_CONFIGURATION_TYPES is false)\n\n# -${basename}_LIBRARY_DEBUG and ${basename}_LIBRARY_RELEASE are the same\n\n# -${basename}_LIBRARY_DEBUG and ${basename}_LIBRARY_RELEASE are both empty\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# if the generator supports configuration types or CMAKE_BUILD_TYPE\n\n# is set, then set optimized and debug options.\n",
        "Line" : 62,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 8
    },
    "CMakeModules/TokenList2DsnLexer.cmake" : {
      "ObjectId" : "589ac0c499a9b54ef5625bd19856b707f1577968",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  This program source code file is part of KICAD, a free EDA CAD application.\n\n#\n\n#  Copyright (C) 2010 Wayne Stambaugh <stambaughw@verizon.net>\n\n#  Copyright (C) 2010 Kicad Developers, see AUTHORS.txt for contributors.\n\n#\n\n#  This program is free software; you can redistribute it and/or\n\n#  modify it under the terms of the GNU General Public License\n\n#  as published by the Free Software Foundation; either version 2\n\n#  of the License, or (at your option) any later version.\n\n#\n\n#  This program is distributed in the hope that it will be useful,\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#  GNU General Public License for more details.\n\n#\n\n#  You should have received a copy of the GNU General Public License\n\n#  along with this program; if not, you may find one here:\n\n#  http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n#  or you may search the http://www.gnu.org website for the version 2 license,\n\n#  or you may write to the Free Software Foundation, Inc.,\n\n#  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n\n#\n\n#\n\n# This script converts a plain text file with a line feed separated list\n\n# of token names into the appropriate source and header files required by\n\n# the DSN lexer.  See files \"<base_source_path>/common/dsnlexer.cpp\" and\n\n# \"<base_source_path>/include/dsnlexer.h\" for more information about how\n\n# the DSN lexer works.  The token list file format requires a single token\n\n# per line.  Tokens can only contain lower case letters, numbers, and\n\n# underscores.  The first letter of each token must be a lower case letter.\n\n# Tokens must be unique.  If any of the above criteria are not met, the\n\n# source and header files will not be generated and a build error will\n\n# occur.\n\n#\n\n# Valid tokens:    a a1 foo_1 foo_bar2\n\n# Invalid tokens:  1 A _foo bar_ foO\n\n#\n\n# Invocation Parameters are:  enum, inputFile, outCppFile, outHeaderFile\n\n#\n\n#     enum       - Required, namespace in which the enum T will be placed.\n\n#                  Keep it short because from outside the class you want a short enum name\n\n#                  like enum::T.   Enums are contained in their own namespace to avoid\n\n#                  collisions on enum value names, a problem with C++ unless the enum\n\n#                  itself is in a separate namespace.\n\n#\n\n#     inputFile  - Required, name of the token list file, or \"*.keywords\" file.\n\n#                  Choose the basefilename carefully, it decides the class name\n\n#                  used in the generated *_lexer.h file.\n\n#\n\n#     outCppFile - Optional, full path and file name of where to save the generated\n\n#                  cpp keywords file.  If not defined, the output path is the same\n\n#                  path as the token list file path, with a file name of *_keywords.cpp\n\n#\n\n#  outHeaderFile - Optional, full path and file name of where to save the generated\n\n#                  *.h lexfer file.  If not defined, the output path is the same\n\n#                  path as the token list file path, with a file name of *_lexer.h\n\n#\n\n# Use the max_lexer() CMake function from functions.cmake for invocation convenience.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message( STATUS \"TokenList2DsnLexer.cmake\" )    # indicate we are running\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the keywords filename without extension is important, it sets the classname into RESULT\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#message( \"enum:'${enum}' result:'${result}' outputPath:'${outputPath}' inputFile:'${inputFile}'\" )\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Create tag for generating header file.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# strip any comment from # to end of line\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Ignore empty lines.\n",
        "Line" : 172,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# if token is \"off\" simple if( token) does not work\n",
        "Line" : 173,
        "CharPositionInLine" : 42
      },
      "8" : {
        "Text" : "# Make sure token is valid.\n",
        "Line" : 174,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "#message( \"token=${token}\" )\n",
        "Line" : 176,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "#message( \"validToken=${validToken}\" )\n",
        "Line" : 179,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Check for duplicates.\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "CMakeModules/UsewxWidgets.cmake" : {
      "ObjectId" : "9ecfff0ccaedc776a02b8734d2b2fd38de3d3746",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Convenience include for using wxWidgets library.\n\n# Determines if wxWidgets was FOUND and sets the appropriate libs, incdirs,\n\n# flags, etc. INCLUDE_DIRECTORIES and LINK_DIRECTORIES are called.\n\n#\n\n# USAGE\n\n#  # Note that for MinGW users the order of libs is important!\n\n#  FIND_PACKAGE(wxWidgets REQUIRED net gl core base)\n\n#  INCLUDE(${wxWidgets_USE_FILE})\n\n#  # and for each of your dependant executable/library targets:\n\n#  TARGET_LINK_LIBRARIES(<YourTarget> ${wxWidgets_LIBRARIES})\n\n#\n\n# DEPRECATED\n\n#  LINK_LIBRARIES is not called in favor of adding dependencies per target.\n\n#\n\n# AUTHOR\n\n#  Jan Woetzel <jw -at- mip.informatik.uni-kiel.de>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2004-2009 Kitware, Inc.\n\n# Copyright 2006      Jan Woetzel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# debug message and logging.\n\n# comment these out for distribution\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  SET(LOGFILE \"${PROJECT_BINARY_DIR}/CMakeOutput.log\")\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#  FILE(APPEND ${LOGFILE} \"${CMAKE_CURRENT_LIST_FILE}(${CMAKE_CURRENT_LIST_LINE}):   ${_MSG}\\n\")\n\n#  MESSAGE(STATUS \"${CMAKE_CURRENT_LIST_FILE}(${CMAKE_CURRENT_LIST_LINE}): ${_MSG}\")\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# DEPRECATED JW\n\n# just for backward compatibility: add deps to all targets\n\n# library projects better use advanced FIND_PACKAGE(wxWidgets) directly.\n\n#IF(wxWidgets_LIBRARIES)\n\n#  LINK_LIBRARIES(${wxWidgets_LIBRARIES})\n\n#  # BUG: str too long:  MSG(\"wxWidgets_LIBRARIES=${wxWidgets_LIBRARIES}\")\n\n#  IF(LOGFILE)\n\n#    FILE(APPEND ${LOGFILE} \"${CMAKE_CURRENT_LIST_FILE}(${CMAKE_CURRENT_LIST_LINE}):   ${wxWidgets_LIBRARIES}\\n\")\n\n#  ENDIF(LOGFILE)\n\n#ENDIF(wxWidgets_LIBRARIES)\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "CMakeModules/WriteVersionHeader.cmake" : {
      "ObjectId" : "d58c39b4058a9642e1d317a5a81e86acaeb9fc14",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  This program source code file is part of KICAD, a free EDA CAD application.\n\n#\n\n#  Copyright (C) 2015 Wayne Stambaugh <stambaughw@gmail.com>\n\n#  Copyright (C) 2015-2018 KiCad Developers, see AUTHORS.txt for contributors.\n\n#\n\n#  This program is free software; you can redistribute it and/or\n\n#  modify it under the terms of the GNU General Public License\n\n#  as published by the Free Software Foundation; either version 2\n\n#  of the License, or (at your option) any later version.\n\n#\n\n#  This program is distributed in the hope that it will be useful,\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#  GNU General Public License for more details.\n\n#\n\n#  You should have received a copy of the GNU General Public License\n\n#  along with this program; if not, you may find one here:\n\n#  http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n#  or you may search the http://www.gnu.org website for the version 2 license,\n\n#  or you may write to the Free Software Foundation, Inc.,\n\n#  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Automagically create version header file if the version string was\n\n# not defined during the build configuration.  If CreateGitVersionHeader\n\n# cannot determine the current repo version, a version.h file is still\n\n# created with KICAD_VERSION set in KiCadVersion.cmake.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Always use git if it's available to determine the version string.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# $KICAD_VERSION will always be set to something.  Even if it is the default\n\n# value set in KiCadVersion.cmake\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Optional user version information defined at configuration.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Only write the header if it has changed, to avoid rebuilds\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# There should always be a valid version.h file.  Otherwise, the build will fail.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "CMakeModules/config.h.cmake" : {
      "ObjectId" : "a32b8d15f6c1e26e37a857390c30d1a124ccc8d3",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "// Do not modify this file, it was automatically generated by CMake.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "// Handle platform differences in math.h",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "// Handle platform differences in C++ cmath.",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "// Use Posix getc_unlocked() instead of getc() when it's available.",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "// Warning!!!  Using wxGraphicContext for rendering is experimental.",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/// The legacy file format revision of the *.brd file created by this build",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/// The install prefix defined during CMake configuration or fall back to CMAKE_INSTALL_PREFIX.",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/// The wxPython version found during configuration.",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/// When defined, build the GITHUB_PLUGIN for pcbnew.",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/// A file extension with a leading '.' is a suffix, and this one is used on\n/// top level program modules which implement the KIFACE.",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/// Allows scripts install directory to be referenced by the program code.",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "ca1c78ee5768f5be4fbcd67de2bb071a328dda5a",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n# KiCad CDash/CTest Support\n\n# Run cmake, then ctest -D Experimental to push to cdash.\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Documentation/docset/CMakeLists.txt" : {
      "ObjectId" : "006a1700bf7fd1cf59abdc0d4c048e63a9fa2e88",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  This program source code file is part of KICAD, a free EDA CAD application.\n\n#\n\n#  Copyright (C) 2018 KiCad Developers, see AUTHORS.txt for contributors.\n\n#\n\n#  This program is free software; you can redistribute it and/or\n\n#  modify it under the terms of the GNU General Public License\n\n#  as published by the Free Software Foundation; either version 2\n\n#  of the License, or (at your option) any later version.\n\n#\n\n#  This program is distributed in the hope that it will be useful,\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#  GNU General Public License for more details.\n\n#\n\n#  You should have received a copy of the GNU General Public License\n\n#  along with this program; if not, you may find one here:\n\n#  http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n#  or you may search the http://www.gnu.org website for the version 2 license,\n\n#  or you may write to the Free Software Foundation, Inc.,\n\n#  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build file for docset generation.\n\n#\n\n# Docsets are generated from the Doxygen docs by this process:\n\n# * Modify the existing doxygen file for a docset-friendly output\n\n# * Run doxygen to generate normal docygen output\n\n# * Run a makefile made by doxygen to start the docset\n\n# * Run doxytag2zealdb to generate the docset index\n\n# * Make a couple of changes to the Plist file and add icons\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Now we have KICAD_VERSION, but it's got () around it\n",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# The DocSet's bundle ID, which is used for most of the ID's\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# The source for the doxygen config\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# A new doxyfile with the original, plus some extra config\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Various pieces of the docset\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#icon files\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# copy and modify the \"normal\" Doxyfile\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Generate the skeleton of the docset\n\n# And modify the plist: DocSetPlatformFamily is used for the prefix in Zeal,\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "bitmap2component/CMakeLists.txt" : {
      "ObjectId" : "1b143d1dda167a5efe914dfc750fb43174a13d20",
      "LastModified" : "2019-03-17T03:37:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# .cpp files are compiled with extra ${WSHADOW_FLAGS}\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BITMAP2COMPONENT_RESOURCES variable is set by the macro.\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# setup bundle\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# put individual bundle outside of main bundle as a first step\n\n# will be pulled into the main bundle when creating main bundle\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# linker map with cross reference\n",
        "Line" : 87,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 5
    },
    "bitmaps_png/CMakeLists.txt" : {
      "ObjectId" : "b29183597744264828c925d499c4a47384285b90",
      "LastModified" : "2019-04-11T23:28:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  This program source code file is part of KICAD, a free EDA CAD application.\n\n#\n\n# Copyright (C) 2011 SoftPLC Corporation, Dick Hollenbeck <dick@softplc.com>\n\n# Copyright (C) 2011-2018 Kicad Developers, see AUTHORS.txt for contributors.\n\n#\n\n#  This program is free software; you can redistribute it and/or\n\n#  modify it under the terms of the GNU General Public License\n\n#  as published by the Free Software Foundation; either version 2\n\n#  of the License, or (at your option) any later version.\n\n#\n\n#  This program is distributed in the hope that it will be useful,\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#  GNU General Public License for more details.\n\n#\n\n#  You should have received a copy of the GNU General Public License\n\n#  along with this program; if not, you may find one here:\n\n#  http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n#  or you may search the http://www.gnu.org website for the version 2 license,\n\n#  or you may write to the Free Software Foundation, Inc.,\n\n#  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# In this directory, a number of different processes are managed:\n\n#\n\n# 1) PNG files are created from SVG files\n\n# 2) CPP files are created from PNG files.\n\n# 3) Object files are created from CPP files.\n\n# 4) A static library is created from the object files\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Step 3) is universal and is done for any builder, whereas steps 1) and 2) are\n\n# optional and depend on MAINTAIN_PNGS being defined in CMake.  The reason we\n\n# can skip 1) and 2) is that the *.CPP files are part of the source tree so\n\n# do not need to rebuilt by a typical builder.  However, because the *.CPP files\n\n# are part of the source tree, and subject to version control, they should be built\n\n# only when needed, otherwise this results in a diff for the version control system.\n\n# Therefore steps 1) and 2) are driven by CMake (if MAINTAIN_PNGS) which gives\n\n# us conditional *.CPP building based on an edit to the respective *.SVG file.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If MAINTAIN_PNGS is not defined, then you are a normal builder and no special\n\n# tools are required.  If MAINTAIN_PNG is defined, then you are a PNG maintainer\n\n# and will need the following tools findable in your PATH:\n\n#\n\n# 1) inkscape - command line mode is used, must be on your PATH\n\n# 2) pngcrush - this program must be on your PATH\n\n#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# lower case is used for local variables, uppercase for global variables\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Used Only to maintain PNG files (and therefore to recreate .cpp files)\n\n# The png2cpp creates files with native End of Line format.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Plan for three sizes of bitmaps:\n\n# SMALL - for menus         - 16 x 16\n\n# MID   - for toolbars      - 26 x 26\n\n# BIG   - for program icons - 48 x 48\n\n# which are given on three basename lists: BMAPS_SMALL, BMAPS_MID,a nd BMAPS_BIG\n\n# respectively.  The basename is without file extension and without path.\n\n# A corresponding ${basename}.svg file must exist in 'sources' dir below here.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# small icons (16x16) needed in listboxes and dialog buttons\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# image basenames that go into the toolbar sized destinations, i.e. 26x26\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# 48 x 48 for now\n",
        "Line" : 590,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# @todo keep these in sync with .bzrignore\n",
        "Line" : 615,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# true to generate log files, false to build icon files only\n\n# generate logs is useful only if you have problems\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#message( \"svg2png( inputFile: ${inputFile} outFile: ${outFile} pngWidth: ${pngWidth} pngHeight: ${pngHeight})\")\n",
        "Line" : 624,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Function png2png\n\n# converts a basic PNG to one\n",
        "Line" : 644,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# pngcrush all icons without background to remove any extraneous text records.\n",
        "Line" : 659,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Function png2cpp\n\n# converts a single *.png to *.cpp\n",
        "Line" : 668,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Function bitmap_dir\n\n# converts all the basenames in bmapList found in hardcoded 'sources' dir\n\n# and and puts them into cpp_${pngHeight} and png_${pngHeight} directories.\n",
        "Line" : 683,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#file( REMOVE_RECURSE ${TMP_DIR} )\n",
        "Line" : 693,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#svg2png( inputFile outFile pngWidth pngHeight )\n",
        "Line" : 696,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#svg2png( inputFile outFile pngWidth pngHeight )\n",
        "Line" : 703,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "#png2png( inputFile outFile )\n",
        "Line" : 706,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "#png2cpp( inputFile outFile )\n",
        "Line" : 709,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Inkscape is required to convert SVG files to PNG files.\n",
        "Line" : 718,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# pngcrush is required to reduce the size of the converted PNG files.\n",
        "Line" : 736,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# these 3 cmake commands for each desired bitmap size set, repeat as needed:\n",
        "Line" : 753,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "#message( \"CPP_LIST: ${CPP_LIST}\" )\n",
        "Line" : 762,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# a target with no output, just so changes get built\n\n#add_custom_target( make_cpp_files ALL DEPENDS ${CPP_LIST} )\n",
        "Line" : 764,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "#message( \"library add cpp_16/${bmn}.cpp\" )\n",
        "Line" : 770,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "#message( \"library add cpp_26/${bmn}.cpp\" )\n",
        "Line" : 775,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "#message( \"library add cpp_48/${bmn}.cpp\" )\n",
        "Line" : 780,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "#message( \"library add cpp_other/${bmn}.cpp\" )\n",
        "Line" : 785,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "#add_library( bitmaps SHARED ${CPP_LIST} )\n",
        "Line" : 789,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "common/CMakeLists.txt" : {
      "ObjectId" : "6430dbaf844061c9667888b11eb9af23afba506b",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# .cpp files are compiled with extra ${WSHADOW_FLAGS}\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# windows and linux use openssl under curl\n",
        "Line" : 27,
        "CharPositionInLine" : 20
      },
      "2" : {
        "Text" : "# Common part\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# OpenGL GAL\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Cairo GAL\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Only for win32 cross compilation using MXE\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# A shared library subsetted from common which restricts what can go into\n\n# a single_top link image.  By not linking to common, we control what does\n\n# statically go into single_top link images.  My current thinking is that only\n\n# wxWidgets should be a shared link from single top, everything else should be\n\n# statically bound into it. Otherwise you will have DSO loading problems. After it\n\n# sets the LIB PATHS however, we want the *.kiface modules to use shared linking.\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# A shared library used by multiple *.kiface files and one or two program\n\n# launchers.  Object files can migrate into here over time, but only if they are\n\n# surely needed and certainly used from more than one place without recompilation.\n\n# Functions and data all need to use the #include <import_export.h> and be declared\n\n# as APIEXPORT\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# KiCad build version string defaults to \"no-vcs-found\" which forces the build version header\n\n# command to look for git to create the version string header when the .git path is found in\n\n# the source path.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Generate version header file.\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#if( NOT USE_KIWAY_DLLS )\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# We DO NOT want pgm_base.cpp linked into the KIFACE, only into the KIWAY.\n\n# Check the map files to verify eda_pgm.o not being linked in.\n",
        "Line" : 369,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# empty on Apple\n",
        "Line" : 436,
        "CharPositionInLine" : 32
      },
      "13" : {
        "Text" : "# add -DPCBNEW to compilation of these PCBNEW sources\n",
        "Line" : 504,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# auto-generate netlist_lexer.h and netlist_keywords.cpp\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Pass header file with dependency on *_lexer.h as extra_arg\n",
        "Line" : 527,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# auto-generate pcb_plot_params_lexer.h and pcb_plot_params_keywords.cpp\n",
        "Line" : 541,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Pass header file with dependencies on *_lexer.h as extra_arg\n",
        "Line" : 548,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# auto-generate pcbnew_sexpr.h and pcbnew_sexpr.cpp\n",
        "Line" : 561,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Pass header file with dependency on *_lexer.h as extra_arg\n",
        "Line" : 568,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# auto-generate s-expression library table code.\n",
        "Line" : 581,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# auto-generate page layout reader s-expression page_layout_reader_lexer.h\n\n# and title_block_reader_keywords.cpp.\n",
        "Line" : 599,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# This one gets made only when testing.\n\n# to build it, first enable #define STAND_ALONE at top of dsnlexer.cpp\n",
        "Line" : 617,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# _kiway.so\n",
        "Line" : 625,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# future\n",
        "Line" : 626,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "#if( KICAD_SCRIPTING OR KICAD_SCRIPTING_MODULES )\n",
        "Line" : 627,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# call SWIG in C++ mode: https://cmake.org/cmake/help/v3.2/module/UseSWIG.html\n",
        "Line" : 637,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# collect CFLAGS , and pass them to swig later\n",
        "Line" : 640,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# See section 16.3 \"The SWIG runtime code\"\n\n# http://www.swig.org/Doc3.0/SWIGDocumentation.html#Modules_nn2\n",
        "Line" : 670,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 29
    },
    "common/libeval/CMakeLists.txt" : {
      "ObjectId" : "359c978c62a1968e310f2ab8476c58c1b89adb0b",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  This program source code file is part of KICAD, a free EDA CAD application.\n\n#\n\n#  Copyright (C) 2018 Kicad Developers, see AUTHORS.txt for contributors.\n\n#\n\n#  This program is free software; you can redistribute it and/or\n\n#  modify it under the terms of the GNU General Public License\n\n#  as published by the Free Software Foundation; either version 2\n\n#  of the License, or (at your option) any later version.\n\n#\n\n#  This program is distributed in the hope that it will be useful,\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#  GNU General Public License for more details.\n\n#\n\n#  You should have received a copy of the GNU General Public License\n\n#  along with this program; if not, you may find one here:\n\n#  http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n#  or you may search the http://www.gnu.org website for the version 2 license,\n\n#  or you may write to the Free Software Foundation, Inc.,\n\n#  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cvpcb/CMakeLists.txt" : {
      "ObjectId" : "1c92bfe42266650f19de0e2462b63b4ef6f8533c",
      "LastModified" : "2019-03-29T13:01:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# .cpp files are compiled with extra ${WSHADOW_FLAGS}\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CVPCB_RESOURCES variable is set by the macro.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# setup bundle\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# no CVPCB exe any more, only the *.kiface\n",
        "Line" : 78,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "#singletop  # replaces common, giving us restrictive control and link warnings.\n\n# There's way too much crap coming in from common yet.\n",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# put individual bundle outside of main bundle as a first step\n\n# will be pulled into the main bundle when creating main bundle\n",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# no CVPCB exe\n",
        "Line" : 128,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# the main cvpcb program, in DSO form.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Must follow github_plugin\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# -lrt must follow Boost\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# The KIFACE is in cvpcb.cpp, export it:\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# these 2 binaries are a matched set, keep them together:\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# puts binaries into the *.app bundle while linking\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 13
    },
    "demos/CMakeLists.txt" : {
      "ObjectId" : "b14742f7b428c166c660481fc1a874122beb1aaa",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "demos/complex_hierarchy/complex_hierarchy.pro" : {
      "ObjectId" : "bee5836cee874fb014aed2cee09a1fa940d4d139",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "demos/custom_pads_test/custom_pads_test.pro" : {
      "ObjectId" : "314571168cd6e63e0cfaee21b1ac8272ca51a882",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "demos/ecc83/ecc83-pp.pro" : {
      "ObjectId" : "2d330f6a503dc3d09a9f2ee637e377919155fd57",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "demos/ecc83/ecc83-pp_v2.pro" : {
      "ObjectId" : "30362d09743cee0cc8660bf915c833844c53d562",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "demos/electric/electric.pro" : {
      "ObjectId" : "5239b67767bc4319ef3900ea56ebf1694fe9a94b",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "demos/flat_hierarchy/flat_hierarchy.pro" : {
      "ObjectId" : "2efff06fd7e70ea783da5131e07f63b4071574a6",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "demos/interf_u/interf_u.pro" : {
      "ObjectId" : "6216ff0a36a08cc95bff3178844cfa2d571a5208",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "demos/kit-dev-coldfire-xilinx_5213/kit-dev-coldfire-xilinx_5213.pro" : {
      "ObjectId" : "bec292f96fc833922ab738dc1aa213ed310f4c79",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "demos/microwave/microwave.pro" : {
      "ObjectId" : "850c5e244c3e283fd830f1e91058d7800ed67ea2",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "demos/pic_programmer/pic_programmer.pro" : {
      "ObjectId" : "abd4dced5f8f450c02111ab00a507738c2354afa",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "demos/simulation/laser_driver/laser_driver.pro" : {
      "ObjectId" : "a405c758bf17cbb70297f95b21aac32a3a38c7e6",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "demos/simulation/pspice/pspice.pro" : {
      "ObjectId" : "c1740dcde1314a27d29cdf1d295cc2e72abf7e93",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "demos/simulation/rectifier/rectifier.pro" : {
      "ObjectId" : "a1f75cb66364759eeae7a4ee34ce4db9706729bd",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "demos/simulation/sallen_key/sallen_key.pro" : {
      "ObjectId" : "a7d9d1b0e4711b5091c9910e90b791420da23bdd",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "demos/sonde xilinx/sonde xilinx.pro" : {
      "ObjectId" : "bdb40cc38cce02b98beaff743857842a7739a85f",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "demos/test_pads_inside_pads/test_pads_inside_pads.pro" : {
      "ObjectId" : "08f8ad3bc7d1e4caacf832acc28994486d94fb2a",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "demos/test_xil_95108/carte_test.pro" : {
      "ObjectId" : "958678d7c7a7d7617a70b510038cacbb891a324e",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "demos/video/video.pro" : {
      "ObjectId" : "f772c9058c5a285e3212ace401be2e57a5d02832",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "dxflib_qcad/CMakeLists.txt" : {
      "ObjectId" : "b4fe1a9f09082f0a8be3c30b894449aa14950eb3",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eeschema/CMakeLists.txt" : {
      "ObjectId" : "7a2c2e89aaf418a94bad09cc6c3739d42c8dfdd4",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# .cpp files are compiled with extra ${WSHADOW_FLAGS}\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find out the exact libngspice file name\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# EESCHEMA_RESOURCES variable is set by the macro.\n",
        "Line" : 286,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Create a C++ compilable string initializer containing html text into a *.h file:\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# setup bundle\n",
        "Line" : 310,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#singletop  # replaces common, giving us restrictive control and link warnings.\n\n# There's way too much crap coming in from common yet.\n",
        "Line" : 333,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# the DSO (KIFACE) housing the main eeschema code:\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Decorate OUTPUT_NAME with PREFIX and SUFFIX, creating something like\n\n# _eeschema.so, _eeschema.dll, or _eeschema.kiface\n",
        "Line" : 364,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# The KIFACE is in eeschema.cpp, export it:\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# if building eeschema, then also build eeschema_kiface if out of date.\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# generate link map with cross reference\n",
        "Line" : 380,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# these 2 binaries are a matched set, keep them together:\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# puts binaries into the *.app bundle while linking\n",
        "Line" : 395,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# put individual bundle outside of main bundle as a first step\n\n# will be pulled into the main bundle when creating main bundle\n",
        "Line" : 399,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# bundle libngspice, codemodels and scripts\n",
        "Line" : 420,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# actual filename subject to change at milestone C)\n\n# modular-kicad blueprint.\n",
        "Line" : 436,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# auto-generate cmp_library_lexer.h and cmp_library_keywords.cpp for the component\n\n# library format.\n",
        "Line" : 443,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Pass header file with dependency on *_lexer.h as extra_arg\n",
        "Line" : 467,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Pass header file with dependency on *_lexer.h as extra_arg\n",
        "Line" : 486,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 19
    },
    "eeschema/plugins/CMakeLists.txt" : {
      "ObjectId" : "f6b235d9b387b4ea924a02f0e74241c30e9aaab5",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install the *.xsl file(s), user will need to install 'xsltproc' and setup\n\n# EESCHEMA's netlist plugins\n\n# See chapter 14 of eeschema.pdf\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "gerbview/CMakeLists.txt" : {
      "ObjectId" : "4ade4f453fe551f1baf26d6131a9783d13a9ec19",
      "LastModified" : "2019-03-29T13:01:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# .cpp files are compiled with extra ${WSHADOW_FLAGS}\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GERBVIEW_RESOURCES variable is set by the macro.\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# setup bundle\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#singletop  # replaces common, giving us restrictive control and link warnings.\n\n# There's way too much crap coming in from common yet.\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# the main gerbview program, in DSO form.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The KIFACE is in gerbview.cpp, export it:\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# if building gerbview, then also build gerbview_kiface if out of date.\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# these 2 binaries are a matched set, keep them together\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# puts binaries into the *.app bundle while linking\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# put individual bundle outside of main bundle as a first step\n\n# will be pulled into the main bundle when creating main bundle\n",
        "Line" : 173,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "helpers/tools_to_build_newstroke-font/font.pro" : {
      "ObjectId" : "38c6a454b913a3da0326aa43af79c9ac159d7d41",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "include/tool/examples/Makefile" : {
      "ObjectId" : "8f0875776038af84a6a66b52463b0c5f7ae4f604",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "kicad/CMakeLists.txt" : {
      "ObjectId" : "1c693aded4e29633287325b5f3177c5c1a5b19ea",
      "LastModified" : "2019-02-05T03:29:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# .cpp files are compiled with extra ${WSHADOW_FLAGS}\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# KICAD_RESOURCES variable is set by the macro.\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# for build directory: create kiface symlinks so kicad (exe) can be run in-situ\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# \"install( CODE ... )\" will launch its own CMake, so no variables from\n\n# this CMake instance are accessible... use helper to transfer\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# make main bundle relocatable\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# move all individual app bundles into main bundle\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "libs/CMakeLists.txt" : {
      "ObjectId" : "c837b04057bf1dc961a3280b40dfc96fd52f93da",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  This program source code file is part of KICAD, a free EDA CAD application.\n\n#\n\n#  Copyright (C) 2019 Kicad Developers, see AUTHORS.txt for contributors.\n\n#\n\n#  This program is free software; you can redistribute it and/or\n\n#  modify it under the terms of the GNU General Public License\n\n#  as published by the Free Software Foundation; either version 2\n\n#  of the License, or (at your option) any later version.\n\n#\n\n#  This program is distributed in the hope that it will be useful,\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#  GNU General Public License for more details.\n\n#\n\n#  You should have received a copy of the GNU General Public License\n\n#  along with this program; if not, you may find one here:\n\n#  http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n#  or you may search the http://www.gnu.org website for the version 2 license,\n\n#  or you may write to the Free Software Foundation, Inc.,\n\n#  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build file for generic re-useable libraries\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "libs/sexpr/CMakeLists.txt" : {
      "ObjectId" : "8fa2f68d5060c841a85adb8ec4fefd4828caa86c",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  This program source code file is part of KICAD, a free EDA CAD application.\n\n#\n\n#  Copyright (C) 2019 Kicad Developers, see AUTHORS.txt for contributors.\n\n#\n\n#  This program is free software; you can redistribute it and/or\n\n#  modify it under the terms of the GNU General Public License\n\n#  as published by the Free Software Foundation; either version 2\n\n#  of the License, or (at your option) any later version.\n\n#\n\n#  This program is distributed in the hope that it will be useful,\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#  GNU General Public License for more details.\n\n#\n\n#  You should have received a copy of the GNU General Public License\n\n#  along with this program; if not, you may find one here:\n\n#  http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n#  or you may search the http://www.gnu.org website for the version 2 license,\n\n#  or you may write to the Free Software Foundation, Inc.,\n\n#  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build file for the S-Expression library\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the s-exp parser has a dep on the wxFile methods\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO get deps from here out of common\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "new/CMakeLists.txt" : {
      "ObjectId" : "11a686b9a2295e3a6fc02054075460c4c0ad9fe7",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  This program source code file is part of KICAD, a free EDA CAD application.\n\n#\n\n# Copyright (C) 2011 SoftPLC Corporation, Dick Hollenbeck <dick@softplc.com>\n\n# Copyright (C) 2011 Kicad Developers, see change_log.txt for contributors#.\n\n#\n\n#  This program is free software; you can redistribute it and/or\n\n#  modify it under the terms of the GNU General Public License\n\n#  as published by the Free Software Foundation; either version 2\n\n#  of the License, or (at your option) any later version.\n\n#\n\n#  This program is distributed in the hope that it will be useful,\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#  GNU General Public License for more details.\n\n#\n\n#  You should have received a copy of the GNU General Public License\n\n#  along with this program; if not, you may find one here:\n\n#  http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n#  or you may search the http://www.gnu.org website for the version 2 license,\n\n#  or you may write to the Free Software Foundation, Inc.,\n\n#  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for now, this is a stand alone project\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# message( \"PROJECT_SOURCE_DIR=${PROJECT_SOURCE_DIR}\" )\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Path to local CMake modules.\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# On Apple only wxwidgets 2.9 or higher doesn't need to find aui part of base\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# make config.h\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Include wxWidgets macros.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Set default flags for Release build.\n",
        "Line" : 62,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Set default flags for Debug build.\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "#================================================\n\n# Doxygen Output\n\n#================================================\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#=====<on standby for possible C++ unit testing>================================\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#=====</on standby for possible C++ unit testing>===============================\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# talk to import_export.h\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# we build the GAL library, therefore we know where it is, no need to find_library() it.\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# skip the install step, build in source, use from source\n",
        "Line" : 181,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Find pkg-config in order find cairo.\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Find cairo.\n\n#pkg_search_module( CAIRO REQUIRED cairo>=1.8.1 )\n\n#include_directories( ${CAIRO_INCLUDE_DIRS} )\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Find the OpenGL libraries (gl and glu)\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Find GLEW\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#=====<USE_SWIG>============================================================\n\n# if you want a Python scripting layer on top for unit testing or driving.\n\n# reference: http://www.swig.org/Doc1.3/Introduction.html#Introduction_build_system\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# first install \"python-dev\" linux package for this:\n",
        "Line" : 236,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#set_source_files_properties( sweet.i PROPERTIES SWIG_FLAGS \"-includeall\" )\n",
        "Line" : 243,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# @todo need a separate interface for each DSNLEXER\n",
        "Line" : 248,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 23
    },
    "new/toolchain-mingw32.cmake" : {
      "ObjectId" : "3e902ac2d111bda6b061cfe9aa0fe1ebe7ca9df1",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a CMake toolchain file so we can using Mingw to build Windows32 binaries.\n\n# http://vtk.org/Wiki/CMake_Cross_Compiling\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# usage\n\n# cmake -DCMAKE_TOOLCHAIN_FILE=./toolchain-mingw32.cmake ../\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----<configuration>-----------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# configure only the lines within this <configure> block, typically\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# specify the cross compiler\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# One compiler generates either 32 bit or 64 bit code, -m32 says generate 32 bit:\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Tell the 64 bit toolchain to generate a PE32 object file when running windres:\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# where is the target environment\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-----</configuration>-----------------------------------------------\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# search for programs in the build host directories\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# for libraries and headers in the target directories\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "new/toolchain-mingw64.cmake" : {
      "ObjectId" : "bf4a366df3fbe0c0ce7a8b9db2bb3a8b7c550547",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a CMake toolchain file so we can run Mingw64 to build a Windows64 binaries.\n\n# http://vtk.org/Wiki/CMake_Cross_Compiling\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# usage\n\n# cmake -DCMAKE_TOOLCHAIN_FILE=./toolchain-mingw64.cmake ../\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----<configuration>-----------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# configure only the lines within this <configure> block, typically\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# specify the cross compiler\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# where is the target environment\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----</configuration>-----------------------------------------------\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# search for programs in the build host directories\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# for libraries and headers in the target directories\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "pagelayout_editor/CMakeLists.txt" : {
      "ObjectId" : "67d321c4e73ce6d765860116b99e082c191e7916",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# .cpp files are compiled with extra ${WSHADOW_FLAGS}\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# PL_EDITOR_RESOURCES variable is set by the macro.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# setup bundle\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# a very small program launcher for pl_editor_kiface\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#singletop  # replaces common, giving us restrictive control and link warnings.\n\n# There's way too much crap coming in from common yet.\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# the main pl_editor program, in DSO form.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The KIFACE is in pcbnew.cpp, export it:\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# if building pl_editor, then also build pl_editor_kiface if out of date.\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# these 2 binaries are a matched set, keep them together:\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# puts binaries into the *.app bundle while linking\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# put individual bundle outside of main bundle as a first step\n\n# will be pulled into the main bundle when creating main bundle\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "pcb_calculator/CMakeLists.txt" : {
      "ObjectId" : "23188e167d2db5585377763939df96e6aeca3d36",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PCB_CALCULATOR_RESOURCES variable is set by the macro.\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# setup bundle\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#singletop  # replaces common, giving us restrictive control and link warnings.\n\n# There's way too much crap coming in from common yet.\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# the main pcb_calculator program, in DSO form.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The KIFACE is in pcb_calculator.cpp, export it:\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# if building pcb_calculator, then also build pcb_calculator_kiface if out of date.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# these 2 binaries are a matched set, keep them together\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# puts binaries into the *.app bundle while linking\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# put individual bundle outside of main bundle as a first step\n\n# will be pulled into the main bundle when creating main bundle\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# auto-generate pcb_calculator_datafile.h and pcb_calculator_datafile_keywords.cpp\n\n# for the storage data file format.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Pass header file with dependency on *_lexer.h as extra_arg\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#\n\n# Conversion of .html doc source files to .h files included in cpp sources\n\n#\n\n# Function html_doc2h : converts a single *.html text file to a *.h header\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "pcbnew/CMakeLists.txt" : {
      "ObjectId" : "262e6dcce85531e84f3fac99eafca03a91316a0e",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Setting this ON slows down linking and is a advanced (=hidden) developer option for\n\n# linux, not a user option.\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# psnrouter depends on make_lexer outputs in common (bug # 1285878 )\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Infrequently needed headers go at end of search paths, append to INC_AFTER\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message( STATUS \"pcbnew INC_AFTER:${INC_AFTER}\" )\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#    pcb_draw_panel_gal.cpp\n\n#    pcb_view.cpp\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# extra sources from common\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# auto-generate specctra_lexer.h and specctra_keywords.cpp\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Pass header file with dependency on *_lexer.h as extra_arg\n",
        "Line" : 386,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# .cpp files are compiled with extra ${WSHADOW_FLAGS}, but not .cxx files\n",
        "Line" : 399,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# There is a lot of 'local variable shadowed' warnings,\n\n# but we have no control over the generated code\n",
        "Line" : 405,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Swig generated files do not use the override specifier, therefore\n\n# disable suggest-override warnings\n",
        "Line" : 421,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# collect CFLAGS , and pass them to swig later\n",
        "Line" : 445,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Generate pcbnew.py and pcbnew_wrap.cxx using swig\n",
        "Line" : 454,
        "CharPositionInLine" : 24
      },
      "13" : {
        "Text" : "# We deliberately do not use the CMake support for swig here,\n\n# i.e. swig_add_footprint()) because we want full control.\n",
        "Line" : 456,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Make docstrings.i available if it doesn't exist\n",
        "Line" : 506,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "###\n\n# Doxygen python documentation\n\n###\n",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# create XML files from doxygen parsing\n",
        "Line" : 537,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# create .i files from XML doxygen parsing, docstrings.i will include all of them\n",
        "Line" : 546,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# force removal so it will be recreated later with the new docstrings\n",
        "Line" : 551,
        "CharPositionInLine" : 57
      },
      "19" : {
        "Text" : "# The sources to give to the Python Doxygen target\n",
        "Line" : 558,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# The Doxyfile expects a space-separated list in the env var\n",
        "Line" : 564,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Create doxygen-python html\n",
        "Line" : 567,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# PCBNEW_RESOURCES variable is set by the macro.\n",
        "Line" : 585,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# setup bundle\n",
        "Line" : 593,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# github_plugin depends on make_lexer outputs in common\n",
        "Line" : 611,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# a very small program launcher for pcbnew_kiface\n",
        "Line" : 616,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#singletop  # replaces common, giving us restrictive control and link warnings.\n\n# There's way too much crap coming in from common yet.\n",
        "Line" : 625,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# the main pcbnew program, in DSO form.\n",
        "Line" : 637,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# CMake <3.9 can't link anything to object libraries,\n\n# but we only need include directories, as we will link the kiface MODULE\n",
        "Line" : 645,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Decorate OUTPUT_NAME with PREFIX and SUFFIX, creating something like\n\n# _pcbnew.so, _pcbnew.dll, or _pcbnew.kiface\n",
        "Line" : 654,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# must follow GITHUB\n\n# -lrt must follow Boost\n",
        "Line" : 688,
        "CharPositionInLine" : 28
      },
      "31" : {
        "Text" : "# The KIFACE is in pcbnew.cpp, export it:\n",
        "Line" : 696,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# if building pcbnew, then also build pcbnew_kiface if out of date.\n",
        "Line" : 709,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# add dependency to specctra_lexer_source_files, to force\n\n# generation of autogenerated file\n",
        "Line" : 712,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# these 2 binaries are a matched set, keep them together:\n",
        "Line" : 716,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# puts binaries into the *.app bundle while linking\n",
        "Line" : 722,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# put individual bundle outside of main bundle as a first step\n\n# will be pulled into the main bundle when creating main bundle\n",
        "Line" : 726,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# put into bundle at build time, it is relocated at install\n",
        "Line" : 759,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# python plugins\n",
        "Line" : 768,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# python shell\n",
        "Line" : 774,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# 1) KICAD_SCRIPTING enables python inside _pcbnew.kiface.\n\n# 2) KICAD_SCRIPTING_MODULES enables python from the OS command line for pcbnew.\n\n# When python is running within _pcbnew.kiface (case 1 above) it uses said\n\n# kiface for the native part of the pcbnew python module.  This is a kind of\n\n# circular dependency that works well.  When running python from\n\n# the command line (case 2 above) then python needs a native portion of the pcbnew\n\n# python module also, and this is _pcbnew.{so,pyd}.  It turns out that the\n\n# kiface file is built adequately to serve the needs of 2) for now if it is\n\n# merely renamed. This is phase 1 of a 2 step plan.\n\n# In phase 2 we will use the _pcbnew.kiface file without renaming, by doctoring\n\n# what the python portion of the pcbnew python module wants to load when run\n\n# from the command line, case 2 above.\n",
        "Line" : 786,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# Here is built the _pcbnew.{so,pyd} which is the native part of the pcbnew Python library\n\n# when Python is used from the command line.\n",
        "Line" : 799,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# put everything into bundle at build time, it is relocated at install\n",
        "Line" : 806,
        "CharPositionInLine" : 9
      },
      "43" : {
        "Text" : "# only linux remains among supported platforms\n",
        "Line" : 814,
        "CharPositionInLine" : 12
      },
      "44" : {
        "Text" : "# For phase 1, copy _pcbnew.kiface to the python module.\n",
        "Line" : 836,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# find wx-X.Y-osx_cocoa path below PYTHON_SITE_PACKAGE_PATH\n",
        "Line" : 853,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# copy contents\n",
        "Line" : 858,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 47
    },
    "pcbnew/connectivity/CMakeLists.txt" : {
      "ObjectId" : "69e238741c5a574080f4894157f830d599e6a97e",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pcbnew/github/CMakeLists.txt" : {
      "ObjectId" : "bb1842851355188d7433c51f587a4345789a740f",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  This program source code file is part of KICAD, a free EDA CAD application.\n\n#\n\n#  Copyright (C) 2013 SoftPLC Corporation, Dick Hollenbeck <dick@softplc.com>\n\n#  Copyright (C) 2013-2015 Kicad Developers, see AUTHORS.txt for contributors.\n\n#\n\n#  This program is free software; you can redistribute it and/or\n\n#  modify it under the terms of the GNU General Public License\n\n#  as published by the Free Software Foundation; either version 2\n\n#  of the License, or (at your option) any later version.\n\n#\n\n#  This program is distributed in the hope that it will be useful,\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#  GNU General Public License for more details.\n\n#\n\n#  You should have received a copy of the GNU General Public License\n\n#  along with this program; if not, you may find one here:\n\n#  http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n#  or you may search the http://www.gnu.org website for the version 2 license,\n\n#  or you may write to the Free Software Foundation, Inc.,\n\n#  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These are additions to any inherited from pcbnew dir:\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "pcbnew/pcad2kicadpcb_plugin/CMakeLists.txt" : {
      "ObjectId" : "bb8a5b4b0113c3450cb3cd22060dc9408514e86d",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sources for the pcbnew PLUGIN called PCAD_PLUGIN\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This CMakeLists.txt is included from pcbnew, so we are inheriting its include_directories(),\n\n# simply add the current source dir to inherited include_directories() for sources in here only.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "pcbnew/router/CMakeLists.txt" : {
      "ObjectId" : "e7ca4422cbeabb1954196692f2e96db620b11a81",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/3d/CMakeLists.txt" : {
      "ObjectId" : "f46f48cf209d8174fca64d61c3ef911a099ba0e6",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/3d/idf/CMakeLists.txt" : {
      "ObjectId" : "d9f11c091933062f22e61c88be0fe5685f01fa80",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Developers may wish to set DEBUG_IDF to a value from 1..3 to\n\n# enable informational messages in Debug build. Setting a value\n\n# of 4 or greater will instruct the parser to write a VRML2\n\n# equivalent copy of the input file by invoking the\n\n# SceneGraph->WriteVRML() function and depending on the setup\n\n# the object may attempt to write to a protected directory.\n\n#\n\n# In addition to setting the verbosity via DEBUG_IDF, an\n\n# appropriate WXTRACE value must be set prior to program\n\n# execution to enable the logging:\n\n#\n\n# export WXTRACE=\"PLUGIN_IDF\"\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# puts library into the main kicad.app bundle in build tree\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "plugins/3d/oce/CMakeLists.txt" : {
      "ObjectId" : "fe35c81ac9230714c2df22d358bbad6a7a66e711",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Developers may wish to set DEBUG_OCE to a value from 1..3 to\n\n# enable informational messages in Debug build. Setting a value\n\n# of 4 or greater will instruct the parser to write a VRML2\n\n# equivalent copy of the input file by invoking the\n\n# SceneGraph->WriteVRML() function and depending on the setup\n\n# the object may attempt to write to a protected directory.\n\n#\n\n# In addition to setting the verbosity via DEBUG_OCE, an\n\n# appropriate WXTRACE value must be set prior to program\n\n# execution to enable the logging:\n\n#\n\n# export WXTRACE=\"PLUGIN_OCE\"\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# puts library into the main kicad.app bundle in build tree\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "plugins/3d/vrml/CMakeLists.txt" : {
      "ObjectId" : "52f57846dcd9dae16061f4666e36a83f5406285e",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Developers may wish to set one of these parameters on debug\n\n# builds to get informational messages from the various parser\n\n# modules. Valid values are 1..4. Setting a value of 4 is\n\n# generally not recommended since it causes the parsers to\n\n# write a VRML2 equivalent copy of the input file by invoking the\n\n# SceneGraph->WriteVRML() function and depending on the setup\n\n# the object may attempt to write to a protected directory.\n\n#\n\n# add_definitions( -DDEBUG_VRML1=1 -DDEBUG_VRML2=1 -DDEBUG_X3D=1 )\n\n#\n\n# In addition to setting the verbosity of each parser module,\n\n# an appropriate WXTRACE value must be set prior to program\n\n# execution to enable the logging:\n\n#\n\n# export WXTRACE=\"PLUGIN_VRML\"\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# puts library into the main kicad.app bundle in build tree\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "plugins/CMakeLists.txt" : {
      "ObjectId" : "49e049e96148eb4784fdfa48f6e1ebf76348b703",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# .cpp files are compiled with extra ${WSHADOW_FLAGS}\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "polygon/CMakeLists.txt" : {
      "ObjectId" : "881f426812929672e3bf962f3a0413eb02d3e209",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# .cpp files are compiled with extra ${WSHADOW_FLAGS}\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "potrace/CMakeLists.txt" : {
      "ObjectId" : "476bb0702c457995201c8dadda53cdfce9c0e8a3",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qa/CMakeLists.txt" : {
      "ObjectId" : "bb379e7ff5dbd18dcb89551f521ee52499fd69a1",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This program source code file is part of KiCad, a free EDA CAD application.\n\n#\n\n# Copyright (C) 2014-2019 KiCad Developers, see AUTHORS.txt for contributors.\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, you may find one here:\n\n# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n# or you may search the http://www.gnu.org website for the version 2 license,\n\n# or you may write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To do this, you will need xmlrunner\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Test that runs the QA tests through scripting\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Shared QA helper libraries\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Unit tests\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Utility/debugging/profiling programs\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# add_subdirectory( pcb_test_window )\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "qa/common/CMakeLists.txt" : {
      "ObjectId" : "dc9ac1d1c484e802c490f8618cb798e267741fb7",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This program source code file is part of KiCad, a free EDA CAD application.\n\n#\n\n# Copyright (C) 2018 KiCad Developers, see CHANGELOG.TXT for contributors.\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, you may find one here:\n\n# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n# or you may search the http://www.gnu.org website for the version 2 license,\n\n# or you may write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is needed for the global mock objects\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# The main test entry points\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# stuff from common due to...units?\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# stuff from common which is needed...why?\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Use code with GERBVIEW defines in place (primarily IU difference)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Use code with PCBNEW defines in place\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Use code with EESCHEMA defines in place\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "qa/common_tools/CMakeLists.txt" : {
      "ObjectId" : "0d5425a2d1d745036cdbf8c5fa3be626a4aa7294",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This program source code file is part of KiCad, a free EDA CAD application.\n\n#\n\n# Copyright (C) 2018 KiCad Developers, see CHANGELOG.TXT for contributors.\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, you may find one here:\n\n# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n# or you may search the http://www.gnu.org website for the version 2 license,\n\n# or you may write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# # stuff from common due to...units?\n\n# ../../common/eda_text.cpp\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# stuff from common which is needed...why?\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# The main entry point\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# we need to pretend to be something to appease the units code\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "qa/eeschema/CMakeLists.txt" : {
      "ObjectId" : "0e0a013aa3b407b0c61cab3589b90b7a9701d37a",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This program source code file is part of KiCad, a free EDA CAD application.\n\n#\n\n# Copyright (C) 2017 CERN\n\n# @author Alejandro García Montoro <alejandro.garciamontoro@gmail.com>\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, you may find one here:\n\n# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n# or you may search the http://www.gnu.org website for the version 2 license,\n\n# or you may write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A single top to load the pcnew kiface\n\n# ../../common/single_top.cpp\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# stuff from common due to...units?\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# stuff from common which is needed...why?\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# The main test entry points\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Eeschema tests, so pretend to be eeschema (for units, etc)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Pass in the default data location\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "qa/gal/gal_pixel_alignment/CMakeLists.txt" : {
      "ObjectId" : "562ccb17358e83888b3cf01b49ce0a576917489f",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This program source code file is part of KiCad, a free EDA CAD application.\n\n#\n\n# Copyright (C) 2017 CERN\n\n# @author Alejandro García Montoro <alejandro.garciamontoro@gmail.com>\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, you may find one here:\n\n# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n# or you may search the http://www.gnu.org website for the version 2 license,\n\n# or you may write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#../../pcbnew/tools/outline_editor.cpp\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "qa/libs/CMakeLists.txt" : {
      "ObjectId" : "a0d3a88943894781f6e9f1528274dfd6a37ea115",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This program source code file is part of KiCad, a free EDA CAD application.\n\n#\n\n# Copyright (C) 2019 KiCad Developers, see AUTHORS.txt for contributors.\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, you may find one here:\n\n# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n# or you may search the http://www.gnu.org website for the version 2 license,\n\n# or you may write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# QA tests and tools for common libraries\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "qa/libs/sexpr/CMakeLists.txt" : {
      "ObjectId" : "bee0b8a0a46865c00ea9a915e25114b0a76235ab",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This program source code file is part of KiCad, a free EDA CAD application.\n\n#\n\n# Copyright (C) 2019 KiCad Developers, see AUTHORS.TXT for contributors.\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, you may find one here:\n\n# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n# or you may search the http://www.gnu.org website for the version 2 license,\n\n# or you may write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Unit tests for s-expr handling routines\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "qa/pcb_test_window/CMakeLists.txt" : {
      "ObjectId" : "e34ad26311004ccaa9f97d0ffbafefbbcb35d399",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This program source code file is part of KiCad, a free EDA CAD application.\n\n#\n\n# Copyright (C) 2017 CERN\n\n# @author Alejandro García Montoro <alejandro.garciamontoro@gmail.com>\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, you may find one here:\n\n# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n# or you may search the http://www.gnu.org website for the version 2 license,\n\n# or you may write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#../../pcbnew/tools/outline_editor.cpp\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "qa/pcbnew/CMakeLists.txt" : {
      "ObjectId" : "1d18073fea99a76708dcbedf2d8d9cfe45f1c1a2",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This program source code file is part of KiCad, a free EDA CAD application.\n\n#\n\n# Copyright (C) 2018 KiCad Developers, see CHANGELOG.TXT for contributors.\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, you may find one here:\n\n# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n# or you may search the http://www.gnu.org website for the version 2 license,\n\n# or you may write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A single top to load the pcnew kiface\n\n# ../../common/single_top.cpp\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# stuff from common due to...units?\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# stuff from common which is needed...why?\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# The main test entry points\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# testing utility routines\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# test compilation units (start test_)\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Older CMakes cannot link OBJECT libraries\n\n# https://cmake.org/pipermail/cmake/2013-November/056263.html\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# must follow GITHUB\n\n# -lrt must follow Boost\n",
        "Line" : 75,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 9
    },
    "qa/pcbnew_tools/CMakeLists.txt" : {
      "ObjectId" : "905ecc4cde4c73d833c92760a3a43c2c9a538724",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This program source code file is part of KiCad, a free EDA CAD application.\n\n#\n\n# Copyright (C) 2019 KiCad Developers, see CHANGELOG.TXT for contributors.\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, you may find one here:\n\n# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n# or you may search the http://www.gnu.org website for the version 2 license,\n\n# or you may write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The main entry point\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Older CMakes cannot link OBJECT libraries\n\n# https://cmake.org/pipermail/cmake/2013-November/056263.html\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# must follow GITHUB\n\n# -lrt must follow Boost\n",
        "Line" : 63,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 4
    },
    "qa/pcbnew_utils/CMakeLists.txt" : {
      "ObjectId" : "f8aab26569b2e6bd691f26e208ecdc95a5a5aa62",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This program source code file is part of KiCad, a free EDA CAD application.\n\n#\n\n# Copyright (C) 2019 KiCad Developers, see CHANGELOG.TXT for contributors.\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, you may find one here:\n\n# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n# or you may search the http://www.gnu.org website for the version 2 license,\n\n# or you may write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Pcbnew-related auxiliary functions that are useful for QA purposes\n\n# (both unit tests ans utility programs)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is a massive hack in the CMake as I have no idea how to get this to\n\n# link against pcbnew/pcbcommon/etc and still allow a dependency to also link\n\n# THis should really be an add_library() and all the variables instead set using\n\n# target_*() functions.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Paths for pcbnew lib usage (should really be in pcbnew/common\n\n# target_include_directories and made PUBLIC)\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#     3d-viewer\n\n#     connectivity\n\n#     pcbcommon\n\n#     pnsrouter\n\n#     pcad2kicadpcb\n\n#     common\n\n#     pcbcommon\n\n#     legacy_wx\n\n#     gal\n\n#     qa_utils\n\n#     lib_dxf\n\n#     idf3\n\n#     unit_test_utils\n\n#     ${wxWidgets_LIBRARIES}\n\n#     ${GITHUB_PLUGIN_LIBRARIES}\n\n#     ${GDI_PLUS_LIBRARIES}\n\n#     ${PYTHON_LIBRARIES}\n\n#     ${Boost_LIBRARIES}      # must follow GITHUB\n\n#     ${PCBNEW_EXTRA_LIBS}    # -lrt must follow Boost\n\n#)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# # we need to pretend to be something to appease the units code\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "qa/qa_utils/CMakeLists.txt" : {
      "ObjectId" : "29d2b23adddcb3a3c5a2f78b726a2bc23a3bd808",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This program source code file is part of KiCad, a free EDA CAD application.\n\n#\n\n# Copyright (C) 2018 KiCad Developers, see CHANGELOG.TXT for contributors.\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, you may find one here:\n\n# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n# or you may search the http://www.gnu.org website for the version 2 license,\n\n# or you may write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A generic library of useful functions for various testing purposes\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "qa/unit_test_utils/CMakeLists.txt" : {
      "ObjectId" : "806aa59d414cf39fa6ab58a62a6aec4b615d3236",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This program source code file is part of KiCad, a free EDA CAD application.\n\n#\n\n# Copyright (C) 2018 KiCad Developers, see CHANGELOG.TXT for contributors.\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, you may find one here:\n\n# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n# or you may search the http://www.gnu.org website for the version 2 license,\n\n# or you may write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The unit_test_utils library is a simple helper library to collate\n\n# utilities that are generically useful for unit test executables.\n\n#\n\n# Code that is useful for QA purposes outside of the unit-testing context\n\n# belongs in qa_utils.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "qa/utils/kicad2step/CMakeLists.txt" : {
      "ObjectId" : "fa58e300b1907a05a0bb9e70e01f475368d1a6ae",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This program source code file is part of KiCad, a free EDA CAD application.\n\n#\n\n# Copyright (C) 2019 KiCad Developers, see AUTHORS.txt for contributors.\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, you may find one here:\n\n# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n# or you may search the http://www.gnu.org website for the version 2 license,\n\n# or you may write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# kicad2step s-expr handling routines\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Can't build this test without the underlying library\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "template/CMakeLists.txt" : {
      "ObjectId" : "49f3b2678a426b8ffd0a20f201a5b373df2c5dcc",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "template/kicad.pro" : {
      "ObjectId" : "5cd098305bdd1105b83b105ee7bcb267d050dc88",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "69ddae9e541531c650918c56958650d502de7420",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "utils/CMakeLists.txt" : {
      "ObjectId" : "78ad79863d1c3da1d8ea6de68729502969d870f2",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# .cpp files are compiled with extra ${WSHADOW_FLAGS}\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "utils/idftools/CMakeLists.txt" : {
      "ObjectId" : "706a494eca04277a0dddb383147789d86e606dcc",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# puts binaries into the *.app bundle while linking\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "utils/kicad-ogltest/CMakeLists.txt" : {
      "ObjectId" : "0d8eaa9bb6db1b5dc5dd780aa2bb5cea1e340a74",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# puts binary into the main kicad.app bundle while linking\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# bundle dependencies, rewrite binary to use bundled libraries\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "utils/kicad2step/CMakeLists.txt" : {
      "ObjectId" : "4589cc0ceebe79e3aa829755fc126af4ad41aa12",
      "LastModified" : "2019-04-18T23:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Break the library out for re-use by both kicad2step and any qa that needs it\n\n# In future, this could move for re-use by other programs needing s-expr support (?)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for core\n",
        "Line" : 25,
        "CharPositionInLine" : 32
      },
      "2" : {
        "Text" : "# puts binaries into the *.app bundle while linking\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 84,
    "CMAKESOURCE" : 1,
    "QMAKE" : 20,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 11429
}