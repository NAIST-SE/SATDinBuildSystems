{
  "Repository" : "29087718",
  "Revision" : "HEAD",
  "ObjectId" : "33742eea220ff87855e96c2b6e902c6d0d506d65",
  "CommitTime" : "2019-04-16T08:04:58Z",
  "Files" : {
    "core/pom.xml" : {
      "ObjectId" : "97f1bfc3e02c4ca5cc88e007e7984d2a508e1005",
      "LastModified" : "2019-01-30T11:00:22Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " ================= FRESCO DEPENDENCIES ============================ ",
        "Line" : 17,
        "CharPositionInLine" : 78
      },
      "1" : {
        "Text" : " Used for plaintext LP solving ",
        "Line" : 21,
        "CharPositionInLine" : 43
      },
      "2" : {
        "Text" : " ================ FRESCO BUILD ========================== ",
        "Line" : 31,
        "CharPositionInLine" : 68
      },
      "3" : {
        "Text" : " This does that 'mvn test' does not involve IntegrationTests. See\n         http://www.javacodegeeks.com/2015/01/separating-integration-tests-from-unit-tests-using-maven-failsafe-junit-category.html ",
        "Line" : 50,
        "CharPositionInLine" : 136
      },
      "4" : {
        "Text" : " Make 'mvn integration-test' do all tests, including, well, IntegrationTests. See\n           http://www.javacodegeeks.com/2015/01/separating-integration-tests-from-unit-tests-using-maven-failsafe-junit-category.html ",
        "Line" : 62,
        "CharPositionInLine" : 138
      },
      "CommentCount" : 5
    },
    "demos/aes/Makefile" : {
      "ObjectId" : "71d0b0f5b0cb9cd39a706b91ac128410cbaa9d4e",
      "LastModified" : "2019-01-25T12:16:20Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "demos/aes/pom.xml" : {
      "ObjectId" : "80ca2506006bd6431a3d9ba8343cf58829bb5d14",
      "LastModified" : "2019-01-30T11:00:22Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "demos/aggregation/Makefile" : {
      "ObjectId" : "9b24b33d2b753d03edab5afecc197d470519a791",
      "LastModified" : "2019-01-25T12:16:20Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "demos/aggregation/pom.xml" : {
      "ObjectId" : "3fce96f34d36991ac55990a6958905d27cc56062",
      "LastModified" : "2019-01-30T11:00:22Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "demos/common/pom.xml" : {
      "ObjectId" : "2c97d766b49257bbb3dfcd447264376e0a59e871",
      "LastModified" : "2019-01-30T11:00:22Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Library for parsing command line arguments. ",
        "Line" : 12,
        "CharPositionInLine" : 57
      },
      "1" : {
        "Text" : " Tests depends on Spdz tests. ",
        "Line" : 19,
        "CharPositionInLine" : 42
      },
      "CommentCount" : 2
    },
    "demos/distance/Makefile" : {
      "ObjectId" : "a8c888eac1794fac2e035c9ecbae697297f46cba",
      "LastModified" : "2019-01-25T12:16:20Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "demos/distance/pom.xml" : {
      "ObjectId" : "01dd080aa13589b920aeff1e8c569b8620f24414",
      "LastModified" : "2019-01-30T11:00:22Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "demos/pom.xml" : {
      "ObjectId" : "de96982488bbefc5e921946f302da2ad839415da",
      "LastModified" : "2019-01-30T11:00:22Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Logging should work also for running demos ",
        "Line" : 25,
        "CharPositionInLine" : 56
      },
      "1" : {
        "Text" : " Test dependencies ",
        "Line" : 32,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 2
    },
    "demos/psi/Makefile" : {
      "ObjectId" : "df063341c5bb6813cee277fef89a3ce57970ef04",
      "LastModified" : "2019-01-25T12:16:20Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "demos/psi/pom.xml" : {
      "ObjectId" : "89ce11a7450045139017d6b29186fb316b847635",
      "LastModified" : "2019-01-30T11:00:22Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "demos/sum/Makefile" : {
      "ObjectId" : "b7cc9b9badc2fba99a84719a066b64fa3e95d31a",
      "LastModified" : "2019-01-25T12:16:20Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "demos/sum/pom.xml" : {
      "ObjectId" : "3565c2489b20678ca1eca459ee24c7c6050a39b1",
      "LastModified" : "2019-01-30T11:00:22Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "doc/Makefile" : {
      "ObjectId" : "562e3036fd3b441ff006278900526029496329fa",
      "LastModified" : "2015-11-26T12:59:01Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "pom.xml" : {
      "ObjectId" : "fd59aa2d0e1f6a365aaf01e1715c6b567000c2ad",
      "LastModified" : "2019-04-01T11:38:22Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Test ",
        "Line" : 45,
        "CharPositionInLine" : 15
      },
      "1" : {
        "Text" : " logging ",
        "Line" : 47,
        "CharPositionInLine" : 19
      },
      "2" : {
        "Text" : " logging in tests are done via logback ",
        "Line" : 53,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " COMPILER ",
        "Line" : 75,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : " CODE COVERAGE ",
        "Line" : 87,
        "CharPositionInLine" : 26
      },
      "5" : {
        "Text" : " JAVADOC ",
        "Line" : 138,
        "CharPositionInLine" : 22
      },
      "6" : {
        "Text" : " SOURCE ",
        "Line" : 159,
        "CharPositionInLine" : 21
      },
      "7" : {
        "Text" : " GPG ",
        "Line" : 173,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 8
    },
    "suite/pom.xml" : {
      "ObjectId" : "fb958d15e0c61e6bef9b30c17cbb79fb401efb65",
      "LastModified" : "2019-01-30T11:00:22Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "suite/spdz/pom.xml" : {
      "ObjectId" : "e95c91609c4e7bedd452d592cafb21f94bf6e0c5",
      "LastModified" : "2019-01-30T11:00:22Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " TODO Proper handling would imply these utilities to be present in a seperate module ",
        "Line" : 31,
        "CharPositionInLine" : 97
      },
      "1" : {
        "Text" : " Used for plaintext LP solving ",
        "Line" : 39,
        "CharPositionInLine" : 43
      },
      "2" : {
        "Text" : " This does that 'mvn test' does not involve IntegrationTests. See\n         http://www.javacodegeeks.com/2015/01/separating-integration-tests-from-unit-tests-using-maven-failsafe-junit-category.html ",
        "Line" : 65,
        "CharPositionInLine" : 136
      },
      "3" : {
        "Text" : " Make 'mvn integration-test' do all tests, including, well, IntegrationTests. See\n           http://www.javacodegeeks.com/2015/01/separating-integration-tests-from-unit-tests-using-maven-failsafe-junit-category.html ",
        "Line" : 77,
        "CharPositionInLine" : 138
      },
      "CommentCount" : 4
    },
    "suite/spdz2k/pom.xml" : {
      "ObjectId" : "017258fd11e4ab8b59b80997b7560e3bf6cd512d",
      "LastModified" : "2019-01-30T11:00:22Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " TODO Proper handling would imply these utilities to be present in a seperate module ",
        "Line" : 25,
        "CharPositionInLine" : 97
      },
      "CommentCount" : 1
    },
    "suite/tinytables/pom.xml" : {
      "ObjectId" : "44f87ceff71cb226c2f824d9977226c87ceb1a2a",
      "LastModified" : "2019-01-30T11:00:22Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " TODO Proper handling would imply these utilities to be present in a seperate module ",
        "Line" : 29,
        "CharPositionInLine" : 97
      },
      "1" : {
        "Text" : " This does that 'mvn test' does not involve IntegrationTests. See\n         http://www.javacodegeeks.com/2015/01/separating-integration-tests-from-unit-tests-using-maven-failsafe-junit-category.html ",
        "Line" : 60,
        "CharPositionInLine" : 136
      },
      "2" : {
        "Text" : " Make 'mvn integration-test' do all tests, including, well, IntegrationTests. See\n           http://www.javacodegeeks.com/2015/01/separating-integration-tests-from-unit-tests-using-maven-failsafe-junit-category.html ",
        "Line" : 72,
        "CharPositionInLine" : 138
      },
      "CommentCount" : 3
    },
    "tools/mascot/pom.xml" : {
      "ObjectId" : "06c316ee4691dca00a3be545630c57b4c27b3c47",
      "LastModified" : "2019-01-30T11:00:22Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "tools/ot/pom.xml" : {
      "ObjectId" : "40f47d4ea1a735fb1d7fdab048b70d42f1826600",
      "LastModified" : "2019-01-30T11:00:22Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "tools/pom.xml" : {
      "ObjectId" : "7d5302e9efc6b91cf49bf8d477c3c7b70a772c4b",
      "LastModified" : "2019-01-30T11:00:22Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 6,
    "MAVEN" : 16
  },
  "ElapsedTime" : 3032
}