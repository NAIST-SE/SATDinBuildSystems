{
  "Repository" : "4909049",
  "Revision" : "HEAD",
  "ObjectId" : "c481a075b21826d9636400c9b07c118bdec3c29d",
  "CommitTime" : "2019-01-25T04:23:24Z",
  "Files" : {
    "core/CMake/FindCUDA.cmake" : {
      "ObjectId" : "6539057ba9131498aedeb5903bdf1fa1d8b70927",
      "LastModified" : "2010-10-11T17:37:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Tools for building CUDA C files: libraries and build dependencies.\n\n# This script locates the NVIDIA CUDA C tools. It should work on linux, windows,\n\n# and mac and should be reasonably up to date with CUDA C releases.\n\n#\n\n# This script makes use of the standard find_package arguments of <VERSION>,\n\n# REQUIRED and QUIET.  CUDA_FOUND will report if an acceptable version of CUDA\n\n# was found.\n\n#\n\n# The script will prompt the user to specify CUDA_TOOLKIT_ROOT_DIR if the prefix\n\n# cannot be determined by the location of nvcc in the system path and REQUIRED\n\n# is specified to find_package(). To use a different installed version of the\n\n# toolkit set the environment variable CUDA_BIN_PATH before running cmake\n\n# (e.g. CUDA_BIN_PATH=/usr/local/cuda1.0 instead of the default /usr/local/cuda)\n\n# or set CUDA_TOOLKIT_ROOT_DIR after configuring.  If you change the value of\n\n# CUDA_TOOLKIT_ROOT_DIR, various components that depend on the path will be\n\n# relocated.\n\n#\n\n# It might be necessary to set CUDA_TOOLKIT_ROOT_DIR manually on certain\n\n# platforms, or to use a cuda runtime not installed in the default location. In\n\n# newer versions of the toolkit the cuda library is included with the graphics\n\n# driver- be sure that the driver version matches what is needed by the cuda\n\n# runtime version.\n\n#\n\n# The following variables affect the behavior of the macros in the script (in\n\n# alphebetical order).  Note that any of these flags can be changed multiple\n\n# times in the same directory before calling CUDA_ADD_EXECUTABLE,\n\n# CUDA_ADD_LIBRARY, CUDA_COMPILE, CUDA_COMPILE_PTX or CUDA_WRAP_SRCS.\n\n#\n\n#  CUDA_64_BIT_DEVICE_CODE (Default matches host bit size)\n\n#  -- Set to ON to compile for 64 bit device code, OFF for 32 bit device code.\n\n#     Note that making this different from the host code when generating object\n\n#     or C files from CUDA code just won't work, because size_t gets defined by\n\n#     nvcc in the generated source.  If you compile to PTX and then load the\n\n#     file yourself, you can mix bit sizes between device and host.\n\n#\n\n#  CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE (Default ON)\n\n#  -- Set to ON if you want the custom build rule to be attached to the source\n\n#     file in Visual Studio.  Turn OFF if you add the same cuda file to multiple\n\n#     targets.\n\n#\n\n#     This allows the user to build the target from the CUDA file; however, bad\n\n#     things can happen if the CUDA source file is added to multiple targets.\n\n#     When performing parallel builds it is possible for the custom build\n\n#     command to be run more than once and in parallel causing cryptic build\n\n#     errors.  VS runs the rules for every source file in the target, and a\n\n#     source can have only one rule no matter how many projects it is added to.\n\n#     When the rule is run from multiple targets race conditions can occur on\n\n#     the generated file.  Eventually everything will get built, but if the user\n\n#     is unaware of this behavior, there may be confusion.  It would be nice if\n\n#     this script could detect the reuse of source files across multiple targets\n\n#     and turn the option off for the user, but no good solution could be found.\n\n#\n\n#  CUDA_BUILD_CUBIN (Default OFF)\n\n#  -- Set to ON to enable and extra compilation pass with the -cubin option in\n\n#     Device mode. The output is parsed and register, shared memory usage is\n\n#     printed during build.\n\n#\n\n#  CUDA_BUILD_EMULATION (Default OFF for device mode)\n\n#  -- Set to ON for Emulation mode. -D_DEVICEEMU is defined for CUDA C files\n\n#     when CUDA_BUILD_EMULATION is TRUE.\n\n#\n\n#  CUDA_GENERATED_OUTPUT_DIR (Default CMAKE_CURRENT_BINARY_DIR)\n\n#  -- Set to the path you wish to have the generated files placed.  If it is\n\n#     blank output files will be placed in CMAKE_CURRENT_BINARY_DIR.\n\n#     Intermediate files will always be placed in\n\n#     CMAKE_CURRENT_BINARY_DIR/CMakeFiles.\n\n#\n\n#  CUDA_HOST_COMPILATION_CPP (Default ON)\n\n#  -- Set to OFF for C compilation of host code.\n\n#\n\n#  CUDA_NVCC_FLAGS\n\n#  CUDA_NVCC_FLAGS_<CONFIG>\n\n#  -- Additional NVCC command line arguments.  NOTE: multiple arguments must be\n\n#     semi-colon delimited (e.g. --compiler-options;-Wall)\n\n#\n\n#  CUDA_PROPAGATE_HOST_FLAGS (Default ON)\n\n#  -- Set to ON to propagate CMAKE_{C,CXX}_FLAGS and their configuration\n\n#     dependent counterparts (e.g. CMAKE_C_FLAGS_DEBUG) automatically to the\n\n#     host compiler through nvcc's -Xcompiler flag.  This helps make the\n\n#     generated host code match the rest of the system better.  Sometimes\n\n#     certain flags give nvcc problems, and this will help you turn the flag\n\n#     propagation off.  This does not affect the flags supplied directly to nvcc\n\n#     via CUDA_NVCC_FLAGS or through the OPTION flags specified through\n\n#     CUDA_ADD_LIBRARY, CUDA_ADD_EXECUTABLE, or CUDA_WRAP_SRCS.  Flags used for\n\n#     shared library compilation are not affected by this flag.\n\n#\n\n#  CUDA_VERBOSE_BUILD (Default OFF)\n\n#  -- Set to ON to see all the commands used when building the CUDA file.  When\n\n#     using a Makefile generator the value defaults to VERBOSE (run make\n\n#     VERBOSE=1 to see output), although setting CUDA_VERBOSE_BUILD to ON will\n\n#     always print the output.\n\n#\n\n# The script creates the following macros (in alphebetical order):\n\n#\n\n#  CUDA_ADD_CUFFT_TO_TARGET( cuda_target )\n\n#  -- Adds the cufft library to the target (can be any target).  Handles whether\n\n#     you are in emulation mode or not.\n\n#\n\n#  CUDA_ADD_CUBLAS_TO_TARGET( cuda_target )\n\n#  -- Adds the cublas library to the target (can be any target).  Handles\n\n#     whether you are in emulation mode or not.\n\n#\n\n#  CUDA_ADD_EXECUTABLE( cuda_target file0 file1 ...\n\n#                       [WIN32] [MACOSX_BUNDLE] [EXCLUDE_FROM_ALL] [OPTIONS ...] )\n\n#  -- Creates an executable \"cuda_target\" which is made up of the files\n\n#     specified.  All of the non CUDA C files are compiled using the standard\n\n#     build rules specified by CMAKE and the cuda files are compiled to object\n\n#     files using nvcc and the host compiler.  In addition CUDA_INCLUDE_DIRS is\n\n#     added automatically to include_directories().  Some standard CMake target\n\n#     calls can be used on the target after calling this macro\n\n#     (e.g. set_target_properties and target_link_libraries), but setting\n\n#     properties that adjust compilation flags will not affect code compiled by\n\n#     nvcc.  Such flags should be modified before calling CUDA_ADD_EXECUTABLE,\n\n#     CUDA_ADD_LIBRARY or CUDA_WRAP_SRCS.\n\n#\n\n#  CUDA_ADD_LIBRARY( cuda_target file0 file1 ...\n\n#                    [STATIC | SHARED | MODULE] [EXCLUDE_FROM_ALL] [OPTIONS ...] )\n\n#  -- Same as CUDA_ADD_EXECUTABLE except that a library is created.\n\n#\n\n#  CUDA_BUILD_CLEAN_TARGET()\n\n#  -- Creates a convience target that deletes all the dependency files\n\n#     generated.  You should make clean after running this target to ensure the\n\n#     dependency files get regenerated.\n\n#\n\n#  CUDA_COMPILE( generated_files file0 file1 ... [STATIC | SHARED | MODULE]\n\n#                [OPTIONS ...] )\n\n#  -- Returns a list of generated files from the input source files to be used\n\n#     with ADD_LIBRARY or ADD_EXECUTABLE.\n\n#\n\n#  CUDA_COMPILE_PTX( generated_files file0 file1 ... [OPTIONS ...] )\n\n#  -- Returns a list of PTX files generated from the input source files.\n\n#\n\n#  CUDA_INCLUDE_DIRECTORIES( path0 path1 ... )\n\n#  -- Sets the directories that should be passed to nvcc\n\n#     (e.g. nvcc -Ipath0 -Ipath1 ... ). These paths usually contain other .cu\n\n#     files.\n\n#\n\n#  CUDA_WRAP_SRCS ( cuda_target format generated_files file0 file1 ...\n\n#                   [STATIC | SHARED | MODULE] [OPTIONS ...] )\n\n#  -- This is where all the magic happens.  CUDA_ADD_EXECUTABLE,\n\n#     CUDA_ADD_LIBRARY, CUDA_COMPILE, and CUDA_COMPILE_PTX all call this\n\n#     function under the hood.\n\n#\n\n#     Given the list of files (file0 file1 ... fileN) this macro generates\n\n#     custom commands that generate either PTX or linkable objects (use \"PTX\" or\n\n#     \"OBJ\" for the format argument to switch).  Files that don't end with .cu\n\n#     or have the HEADER_FILE_ONLY property are ignored.\n\n#\n\n#     The arguments passed in after OPTIONS are extra command line options to\n\n#     give to nvcc.  You can also specify per configuration options by\n\n#     specifying the name of the configuration followed by the options.  General\n\n#     options must preceed configuration specific options.  Not all\n\n#     configurations need to be specified, only the ones provided will be used.\n\n#\n\n#        OPTIONS -DFLAG=2 \"-DFLAG_OTHER=space in flag\"\n\n#        DEBUG -g\n\n#        RELEASE --use_fast_math\n\n#        RELWITHDEBINFO --use_fast_math;-g\n\n#        MINSIZEREL --use_fast_math\n\n#\n\n#     For certain configurations (namely VS generating object files with\n\n#     CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE set to ON), no generated file will\n\n#     be produced for the given cuda file.  This is because when you add the\n\n#     cuda file to Visual Studio it knows that this file produces an object file\n\n#     and will link in the resulting object file automatically.\n\n#\n\n#     This script will also generate a separate cmake script that is used at\n\n#     build time to invoke nvcc.  This is for serveral reasons.\n\n#\n\n#       1. nvcc can return negative numbers as return values which confuses\n\n#       Visual Studio into thinking that the command succeeded.  The script now\n\n#       checks the error codes and produces errors when there was a problem.\n\n#\n\n#       2. nvcc has been known to not delete incomplete results when it\n\n#       encounters problems.  This confuses build systems into thinking the\n\n#       target was generated when in fact an unusable file exists.  The script\n\n#       now deletes the output files if there was an error.\n\n#\n\n#       3. By putting all the options that affect the build into a file and then\n\n#       make the build rule dependent on the file, the output files will be\n\n#       regenerated when the options change.\n\n#\n\n#     This script also looks at optional arguments STATIC, SHARED, or MODULE to\n\n#     determine when to target the object compilation for a shared library.\n\n#     BUILD_SHARED_LIBS is ignored in CUDA_WRAP_SRCS, but it is respected in\n\n#     CUDA_ADD_LIBRARY.  On some systems special flags are added for building\n\n#     objects intended for shared libraries.  A preprocessor macro,\n\n#     <target_name>_EXPORTS is defined when a shared library compilation is\n\n#     detected.\n\n#\n\n#     Flags passed into add_definitions with -D or /D are passed along to nvcc.\n\n#\n\n# The script defines the following variables:\n\n#\n\n#  CUDA_VERSION_MAJOR    -- The major version of cuda as reported by nvcc.\n\n#  CUDA_VERSION_MINOR    -- The minor version.\n\n#  CUDA_VERSION\n\n#  CUDA_VERSION_STRING   -- CUDA_VERSION_MAJOR.CUDA_VERSION_MINOR\n\n#\n\n#  CUDA_TOOLKIT_ROOT_DIR -- Path to the CUDA Toolkit (defined if not set).\n\n#  CUDA_SDK_ROOT_DIR     -- Path to the CUDA SDK.  Use this to find files in the\n\n#                           SDK.  This script will not directly support finding\n\n#                           specific libraries or headers, as that isn't\n\n#                           supported by NVIDIA.  If you want to change\n\n#                           libraries when the path changes see the\n\n#                           FindCUDA.cmake script for an example of how to clear\n\n#                           these variables.  There are also examples of how to\n\n#                           use the CUDA_SDK_ROOT_DIR to locate headers or\n\n#                           libraries, if you so choose (at your own risk).\n\n#  CUDA_INCLUDE_DIRS     -- Include directory for cuda headers.  Added automatically\n\n#                           for CUDA_ADD_EXECUTABLE and CUDA_ADD_LIBRARY.\n\n#  CUDA_LIBRARIES        -- Cuda RT library.\n\n#  CUDA_CUFFT_LIBRARIES  -- Device or emulation library for the Cuda FFT\n\n#                           implementation (alternative to:\n\n#                           CUDA_ADD_CUFFT_TO_TARGET macro)\n\n#  CUDA_CUBLAS_LIBRARIES -- Device or emulation library for the Cuda BLAS\n\n#                           implementation (alterative to:\n\n#                           CUDA_ADD_CUBLAS_TO_TARGET macro).\n\n#\n\n#\n\n#  James Bigler, NVIDIA Corp (nvidia.com - jbigler)\n\n#  Abe Stephens, SCI Institute -- http://www.sci.utah.edu/~abe/FindCuda.html\n\n#\n\n#  Copyright (c) 2008 - 2009 NVIDIA Corporation.  All rights reserved.\n\n#\n\n#  Copyright (c) 2007-2009\n\n#  Scientific Computing and Imaging Institute, University of Utah\n\n#\n\n#  This code is licensed under the MIT License.  See the FindCUDA.cmake script\n\n#  for the text of the license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MIT License\n\n#\n\n# License for the specific language governing rights and limitations under\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and associated documentation files (the \"Software\"),\n\n# to deal in the Software without restriction, including without limitation\n\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n# and/or sell copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n#\n\n###############################################################################\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FindCUDA.cmake\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We need to have at least this version to support the VERSION_LESS argument to 'if' (2.6.2) and unset (2.6.3)\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This macro helps us find the location of helper files we will need the full path to\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CMAKE_CURRENT_LIST_FILE contains the full path to the file currently being\n\n# processed.  Using this variable, we can pull out the current path, and\n\n# provide a way to get access to the other files we need local to here.\n",
        "Line" : 265,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set this variable as internal, so the user isn't bugged with it.\n",
        "Line" : 280,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#####################################################################\n\n## CUDA_INCLUDE_NVCC_DEPENDENCIES\n\n##\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# So we want to try and include the dependency file if it exists.  If\n\n# it doesn't exist then we need to create an empty one, so we can\n\n# include it.\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If it does exist, then we need to check to see if all the files it\n\n# depends on exist.  If they don't then we should clear the dependency\n\n# file and regenerate it later.  This covers the case where a header\n\n# file has disappeared or moved.\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Include the dependency file.  Create it first if it doesn't exist .  The\n\n# INCLUDE puts a dependency that will force CMake to rerun and bring in the\n\n# new info when it changes.  DO NOT REMOVE THIS (as I did and spent a few\n\n# hours figuring out why it didn't work.\n",
        "Line" : 302,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Always include this file to force CMake to run again next\n\n# invocation and rebuild the dependencies.\n\n#message(\"including dependency_file = ${dependency_file}\")\n",
        "Line" : 309,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Now we need to verify the existence of all the included files\n\n# here.  If they aren't there we need to just blank this variable and\n\n# make the file regenerate again.\n",
        "Line" : 314,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#   if(DEFINED CUDA_NVCC_DEPEND)\n\n#     message(\"CUDA_NVCC_DEPEND set\")\n\n#   else()\n\n#     message(\"CUDA_NVCC_DEPEND NOT set\")\n\n#   endif()\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#message(\"CUDA_NVCC_DEPEND true\")\n",
        "Line" : 323,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#message(\"searching for ${f}\")\n",
        "Line" : 325,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "#message(\"file ${f} not found\")\n",
        "Line" : 327,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "#message(\"CUDA_NVCC_DEPEND false\")\n\n# No dependencies, so regenerate the file.\n",
        "Line" : 332,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#message(\"CUDA_NVCC_DEPEND_REGENERATE = ${CUDA_NVCC_DEPEND_REGENERATE}\")\n\n# No incoming dependencies, so we need to generate them.  Make the\n\n# output depend on the dependency file itself, which should cause the\n\n# rule to re-run.\n",
        "Line" : 337,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Setup variables' defaults\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Allow the user to specify if the device code is supposed to be 32 or 64 bit.\n",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Attach the build rule to the source file in VS.  This option\n",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Prints out extra information about the cuda file during compilation\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Set whether we are using emulation or device mode.\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Where to put the generated output.\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Parse HOST_COMPILATION mode.\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Extra user settable flags\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Propagate the host flags to the host compiler via -Xcompiler\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Specifies whether the commands used when compiling the .cu file will be printed out.\n",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Makefile and similar generators don't define CMAKE_CONFIGURATION_TYPES, so we\n\n# need to add another entry for the CMAKE_BUILD_TYPE.  We also need to add the\n\n# standerd set of 4 build types (Debug, MinSizeRel, Release, and RelWithDebInfo)\n\n# for completeness.  We need run this loop in order to accomodate the addition\n\n# of extra configuration types.  Duplicate entries will be removed by\n\n# REMOVE_DUPLICATES.\n",
        "Line" : 394,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Locate CUDA, Set Build Type, etc.\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 408,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Check to see if the CUDA_TOOLKIT_ROOT_DIR and CUDA_SDK_ROOT_DIR have changed,\n\n# if they have then clear the cache variables, so that will be detected again.\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# No specific variables to catch.  Use this kind of code before calling\n\n# find_package(CUDA) to clean up any variables that may depend on this path.\n",
        "Line" : 429,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "#   unset(MY_SPECIAL_CUDA_SDK_INCLUDE_DIR CACHE)\n\n#   unset(MY_SPECIAL_CUDA_SDK_LIBRARY CACHE)\n",
        "Line" : 432,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Search for the cuda distribution.\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Search in the CUDA_BIN_PATH first.\n",
        "Line" : 439,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Now search default paths\n",
        "Line" : 446,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# We need to force this back into the cache.\n",
        "Line" : 456,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# CUDA_NVCC_EXECUTABLE\n",
        "Line" : 468,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Search default search paths, after we search our own set of paths.\n",
        "Line" : 476,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Compute the version.\n",
        "Line" : 481,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Always set this convenience variable\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Here we need to determine if the version we found is acceptable.  We will\n\n# assume that is unless CUDA_FIND_VERSION_EXACT or CUDA_FIND_VERSION is\n\n# specified.  The presence of either of these options checks the version\n\n# string and signals if the version is acceptable or not.\n",
        "Line" : 492,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#\n",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\n",
        "Line" : 505,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# CUDA_TOOLKIT_INCLUDE\n",
        "Line" : 515,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Header included in toolkit\n",
        "Line" : 517,
        "CharPositionInLine" : 21
      },
      "48" : {
        "Text" : "# Search default search paths, after we search our own set of paths.\n",
        "Line" : 522,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Set the user list of include dir to nothing to initialize it.\n",
        "Line" : 526,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Search default search paths, after we search our own set of paths.\n",
        "Line" : 542,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# CUDA_LIBRARIES\n",
        "Line" : 546,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# We need to add the path to cudart to the linker using rpath, since the\n\n# library name for the cuda libraries is prepended with @rpath.\n",
        "Line" : 550,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# 1.1 toolkit on linux doesn't appear to have a separate library on\n\n# some platforms.\n",
        "Line" : 558,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Add cuda library to the link line only if it is found.\n",
        "Line" : 562,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#######################\n\n# Look for some of the toolkit helper libraries\n",
        "Line" : 572,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Search for cufft and cublas libraries.\n",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "########################\n\n# Look for the SDK stuff\n",
        "Line" : 593,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Keep the CUDA_SDK_ROOT_DIR first in order to be able to override the\n\n# environment variables.\n",
        "Line" : 601,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Example of how to find an include file from the CUDA_SDK_ROOT_DIR\n",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# find_path(CUDA_CUT_INCLUDE_DIR\n\n#   cutil.h\n\n#   PATHS ${CUDA_SDK_SEARCH_PATH}\n\n#   PATH_SUFFIXES \"common/inc\"\n\n#   DOC \"Location of cutil.h\"\n\n#   NO_DEFAULT_PATH\n\n#   )\n\n# # Now search system paths\n\n# find_path(CUDA_CUT_INCLUDE_DIR cutil.h DOC \"Location of cutil.h\")\n",
        "Line" : 615,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# mark_as_advanced(CUDA_CUT_INCLUDE_DIR)\n",
        "Line" : 625,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Example of how to find a library in the CUDA_SDK_ROOT_DIR\n",
        "Line" : 628,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# # cutil library is called cutil64 for 64 bit builds on windows.  We don't want\n\n# # to get these confused, so we are setting the name based on the word size of\n\n# # the build.\n",
        "Line" : 630,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# if(CMAKE_SIZEOF_VOID_P EQUAL 8)\n\n#   set(cuda_cutil_name cutil64)\n\n# else(CMAKE_SIZEOF_VOID_P EQUAL 8)\n\n#   set(cuda_cutil_name cutil32)\n\n# endif(CMAKE_SIZEOF_VOID_P EQUAL 8)\n",
        "Line" : 634,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# find_library(CUDA_CUT_LIBRARY\n\n#   NAMES cutil ${cuda_cutil_name}\n\n#   PATHS ${CUDA_SDK_SEARCH_PATH}\n\n#   # The new version of the sdk shows up in common/lib, but the old one is in lib\n\n#   PATH_SUFFIXES \"common/lib\" \"lib\"\n\n#   DOC \"Location of cutil library\"\n\n#   NO_DEFAULT_PATH\n\n#   )\n\n# # Now search system paths\n\n# find_library(CUDA_CUT_LIBRARY NAMES cutil ${cuda_cutil_name} DOC \"Location of cutil library\")\n\n# mark_as_advanced(CUDA_CUT_LIBRARY)\n\n# set(CUDA_CUT_LIBRARIES ${CUDA_CUT_LIBRARY})\n",
        "Line" : 640,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "#############################\n\n# Check for required components\n",
        "Line" : 655,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Macros\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 675,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "###############################################################################\n\n# Add include directories to pass to the nvcc command.\n",
        "Line" : 681,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "##############################################################################\n",
        "Line" : 690,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "##############################################################################\n\n# Separate the OPTIONS out from the sources\n\n#\n",
        "Line" : 695,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Assume this is a file\n",
        "Line" : 719,
        "CharPositionInLine" : 8
      },
      "72" : {
        "Text" : "##############################################################################\n\n# Parse the OPTIONS from ARGN and set the variables prefixed by _option_prefix\n\n#\n",
        "Line" : 726,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Determine if we are dealing with a perconfiguration flag\n",
        "Line" : 732,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "# Set arg to nothing to keep it from being processed further\n",
        "Line" : 737,
        "CharPositionInLine" : 8
      },
      "75" : {
        "Text" : "##############################################################################\n\n# Helper to add the include directory for CUDA only once\n",
        "Line" : 748,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# If SHARED, MODULE, or STATIC aren't already in the list of arguments, then\n\n# add SHARED or STATIC based on the value of BUILD_SHARED_LIBS.\n",
        "Line" : 767,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "##############################################################################\n\n# This helper macro populates the following variables and setups up custom\n\n# commands and targets to invoke the nvcc compiler to generate C or PTX source\n\n# dependant upon the format parameter.  The compiler is invoked once with -M\n\n# to generate a dependency file and a second time with -cuda or -ptx to generate\n\n# a .cpp or .ptx file.\n\n# INPUT:\n\n#   cuda_target         - Target name\n\n#   format              - PTX or OBJ\n\n#   FILE1 .. FILEN      - The remaining arguments are the sources to be wrapped.\n\n#   OPTIONS             - Extra options to NVCC\n\n# OUTPUT:\n\n#   generated_files     - List of generated files\n\n##############################################################################\n\n##############################################################################\n",
        "Line" : 786,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Set up all the command line flags here, so that they can be overriden on a per target basis.\n",
        "Line" : 812,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# Emulation if the card isn't present.\n",
        "Line" : 816,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "# Emulation.\n",
        "Line" : 818,
        "CharPositionInLine" : 4
      },
      "81" : {
        "Text" : "# Device mode.  No flags necessary.\n",
        "Line" : 821,
        "CharPositionInLine" : 4
      },
      "82" : {
        "Text" : "# This needs to be passed in at this stage, because VS needs to fill out the\n\n# value of VCInstallDir from within VS.\n",
        "Line" : 843,
        "CharPositionInLine" : 2
      },
      "83" : {
        "Text" : "# Add nvcc flag for 64b Windows\n",
        "Line" : 847,
        "CharPositionInLine" : 6
      },
      "84" : {
        "Text" : "# Figure out which configure we will use and pass that in as an argument to\n\n# the script.  We need to defer the decision until compilation time, because\n\n# for VS projects we won't know if we are making a debug or release build\n\n# until build time.\n",
        "Line" : 852,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# Initialize our list of includes with the user ones followed by the CUDA system ones.\n",
        "Line" : 862,
        "CharPositionInLine" : 2
      },
      "86" : {
        "Text" : "# Get the include directories for this directory and use them for our nvcc command.\n",
        "Line" : 864,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "# Reset these variables\n",
        "Line" : 872,
        "CharPositionInLine" : 2
      },
      "88" : {
        "Text" : "# Figure out if we are building a shared library.  BUILD_SHARED_LIBS is\n\n# respected in CUDA_ADD_LIBRARY.\n",
        "Line" : 882,
        "CharPositionInLine" : 2
      },
      "89" : {
        "Text" : "# SHARED, MODULE\n",
        "Line" : 885,
        "CharPositionInLine" : 2
      },
      "90" : {
        "Text" : "# STATIC\n",
        "Line" : 891,
        "CharPositionInLine" : 2
      },
      "91" : {
        "Text" : "# CUDA_HOST_FLAGS\n",
        "Line" : 897,
        "CharPositionInLine" : 2
      },
      "92" : {
        "Text" : "# If we are setting up code for a shared library, then we need to add extra flags for\n\n# compiling objects for shared libraries.\n",
        "Line" : 899,
        "CharPositionInLine" : 4
      },
      "93" : {
        "Text" : "# Only add the CMAKE_{C,CXX}_FLAGS if we are propagating host flags.  We\n\n# always need to set the SHARED_FLAGS, though.\n",
        "Line" : 905,
        "CharPositionInLine" : 2
      },
      "94" : {
        "Text" : "# Loop over all the configuration types to generate appropriate flags for run_nvcc.cmake\n",
        "Line" : 914,
        "CharPositionInLine" : 2
      },
      "95" : {
        "Text" : "# CMAKE_FLAGS are strings and not lists.  By not putting quotes around CMAKE_FLAGS\n\n# we convert the strings to lists (like we want).\n",
        "Line" : 917,
        "CharPositionInLine" : 4
      },
      "96" : {
        "Text" : "# nvcc chokes on -g3, so replace it with -g\n",
        "Line" : 921,
        "CharPositionInLine" : 6
      },
      "97" : {
        "Text" : "# Note that if we ever want CUDA_NVCC_FLAGS_<CONFIG> to be string (instead of a list\n\n# like it is currently), we can remove the quotes around the\n\n# ${CUDA_NVCC_FLAGS_${config_upper}} variable like the CMAKE_HOST_FLAGS_<CONFIG> variable.\n",
        "Line" : 931,
        "CharPositionInLine" : 4
      },
      "98" : {
        "Text" : "# Don't use any of the host compilation flags for PTX targets.\n",
        "Line" : 938,
        "CharPositionInLine" : 4
      },
      "99" : {
        "Text" : "# Get the list of definitions from the directory property\n",
        "Line" : 943,
        "CharPositionInLine" : 2
      },
      "100" : {
        "Text" : "# Determine output directory\n",
        "Line" : 955,
        "CharPositionInLine" : 2
      },
      "101" : {
        "Text" : "# Reset the output variable\n",
        "Line" : 962,
        "CharPositionInLine" : 2
      },
      "102" : {
        "Text" : "# Iterate over the macro arguments and create custom\n\n# commands for all the .cu files.\n",
        "Line" : 965,
        "CharPositionInLine" : 2
      },
      "103" : {
        "Text" : "# Ignore any file marked as a HEADER_FILE_ONLY\n",
        "Line" : 968,
        "CharPositionInLine" : 4
      },
      "104" : {
        "Text" : "# Add a custom target to generate a c or ptx file. ######################\n",
        "Line" : 972,
        "CharPositionInLine" : 6
      },
      "105" : {
        "Text" : "# Set all of our file names.  Make sure that whatever filenames that have\n\n# generated_file_path in them get passed in through as a command line\n\n# argument, so that the ${CMAKE_CFG_INTDIR} gets expanded at run time\n\n# instead of configure time.\n",
        "Line" : 986,
        "CharPositionInLine" : 6
      },
      "106" : {
        "Text" : "# Setup properties for obj files:\n",
        "Line" : 996,
        "CharPositionInLine" : 6
      },
      "107" : {
        "Text" : "# This is an object file not to be compiled, but only be linked.\n",
        "Line" : 1000,
        "CharPositionInLine" : 31
      },
      "108" : {
        "Text" : "# Don't add CMAKE_CURRENT_SOURCE_DIR if the path is already an absolute path.\n",
        "Line" : 1004,
        "CharPositionInLine" : 6
      },
      "109" : {
        "Text" : "# Bring in the dependencies.  Creates a variable CUDA_NVCC_DEPEND #######\n",
        "Line" : 1012,
        "CharPositionInLine" : 6
      },
      "110" : {
        "Text" : "# Convience string for output ###########################################\n",
        "Line" : 1015,
        "CharPositionInLine" : 6
      },
      "111" : {
        "Text" : "# Build the NVCC made dependency file ###################################\n",
        "Line" : 1022,
        "CharPositionInLine" : 6
      },
      "112" : {
        "Text" : "# Configure the build script\n",
        "Line" : 1030,
        "CharPositionInLine" : 6
      },
      "113" : {
        "Text" : "# So if a user specifies the same cuda file as input more than once, you\n\n# can have bad things happen with dependencies.  Here we check an option\n\n# to see if this is the behavior they want.\n",
        "Line" : 1033,
        "CharPositionInLine" : 6
      },
      "114" : {
        "Text" : "# Create up the comment string\n",
        "Line" : 1050,
        "CharPositionInLine" : 6
      },
      "115" : {
        "Text" : "# Build the generated file and dependency file ##########################\n",
        "Line" : 1058,
        "CharPositionInLine" : 6
      },
      "116" : {
        "Text" : "# These output files depend on the source_file and the contents of cmake_dependency_file\n",
        "Line" : 1061,
        "CharPositionInLine" : 8
      },
      "117" : {
        "Text" : "# Make sure the output directory exists before trying to write to it.\n",
        "Line" : 1065,
        "CharPositionInLine" : 8
      },
      "118" : {
        "Text" : "# Make sure the build system knows the file is generated.\n",
        "Line" : 1077,
        "CharPositionInLine" : 6
      },
      "119" : {
        "Text" : "# Don't add the object file to the list of generated files if we are using\n\n# visual studio and we are attaching the build rule to the cuda file.  VS\n\n# will add our object file to the linker automatically for us.\n",
        "Line" : 1080,
        "CharPositionInLine" : 6
      },
      "120" : {
        "Text" : "# Visual Studio 8 crashes when you close the solution when you don't add the object file.\n",
        "Line" : 1086,
        "CharPositionInLine" : 8
      },
      "121" : {
        "Text" : "#message(\"Not adding ${generated_file}\")\n",
        "Line" : 1088,
        "CharPositionInLine" : 10
      },
      "122" : {
        "Text" : "# Add the other files that we want cmake to clean on a cleanup ##########\n",
        "Line" : 1097,
        "CharPositionInLine" : 6
      },
      "123" : {
        "Text" : "# Set the return parameter\n",
        "Line" : 1105,
        "CharPositionInLine" : 2
      },
      "124" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# ADD LIBRARY\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1110,
        "CharPositionInLine" : 0
      },
      "125" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 1119,
        "CharPositionInLine" : 2
      },
      "126" : {
        "Text" : "# Create custom commands and targets for each file.\n",
        "Line" : 1122,
        "CharPositionInLine" : 2
      },
      "127" : {
        "Text" : "# Add the library.\n",
        "Line" : 1127,
        "CharPositionInLine" : 2
      },
      "128" : {
        "Text" : "# We need to set the linker language based on what the expected generated file\n\n# would be. CUDA_C_OR_CXX is computed based on CUDA_HOST_COMPILATION_CPP.\n",
        "Line" : 1137,
        "CharPositionInLine" : 2
      },
      "129" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# ADD EXECUTABLE\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1147,
        "CharPositionInLine" : 0
      },
      "130" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 1156,
        "CharPositionInLine" : 2
      },
      "131" : {
        "Text" : "# Create custom commands and targets for each file.\n",
        "Line" : 1158,
        "CharPositionInLine" : 2
      },
      "132" : {
        "Text" : "# Add the library.\n",
        "Line" : 1161,
        "CharPositionInLine" : 2
      },
      "133" : {
        "Text" : "# We need to set the linker language based on what the expected generated file\n\n# would be. CUDA_C_OR_CXX is computed based on CUDA_HOST_COMPILATION_CPP.\n",
        "Line" : 1171,
        "CharPositionInLine" : 2
      },
      "134" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA COMPILE\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1181,
        "CharPositionInLine" : 0
      },
      "135" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 1188,
        "CharPositionInLine" : 2
      },
      "136" : {
        "Text" : "# Create custom commands and targets for each file.\n",
        "Line" : 1190,
        "CharPositionInLine" : 2
      },
      "137" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA COMPILE PTX\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1199,
        "CharPositionInLine" : 0
      },
      "138" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 1206,
        "CharPositionInLine" : 2
      },
      "139" : {
        "Text" : "# Create custom commands and targets for each file.\n",
        "Line" : 1208,
        "CharPositionInLine" : 2
      },
      "140" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA ADD CUFFT TO TARGET\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1216,
        "CharPositionInLine" : 0
      },
      "141" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA ADD CUBLAS TO TARGET\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1229,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA BUILD CLEAN TARGET\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1242,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "# Call this after you add all your CUDA targets, and you will get a convience\n\n# target.  You should also make clean after running this target to get the\n\n# build system to generate all the code again.\n",
        "Line" : 1248,
        "CharPositionInLine" : 2
      },
      "144" : {
        "Text" : "# Clear out the variable, so the next time we configure it will be empty.\n\n# This is useful so that the files won't persist in the list after targets\n\n# have been removed.\n",
        "Line" : 1259,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 145
    },
    "core/CMake/FindCUDA/make2cmake.cmake" : {
      "ObjectId" : "7fce167c23ac70663c370d34a8809c4e2d0015ce",
      "LastModified" : "2010-10-11T17:37:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  James Bigler, NVIDIA Corp (nvidia.com - jbigler)\n\n#  Abe Stephens, SCI Institute -- http://www.sci.utah.edu/~abe/FindCuda.html\n\n#\n\n#  Copyright (c) 2008 - 2009 NVIDIA Corporation.  All rights reserved.\n\n#\n\n#  Copyright (c) 2007-2009\n\n#  Scientific Computing and Imaging Institute, University of Utah\n\n#\n\n#  This code is licensed under the MIT License.  See the FindCUDA.cmake script\n\n#  for the text of the license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MIT License\n\n#\n\n# License for the specific language governing rights and limitations under\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and associated documentation files (the \"Software\"),\n\n# to deal in the Software without restriction, including without limitation\n\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n# and/or sell copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################################################\n\n# This converts a file written in makefile syntax into one that can be included\n\n# by CMake.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# message(\"FOUND DEPENDS\")\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Remember, four backslashes is escaped to one backslash in the string.\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# This works for the nvcc -M generated dependency files.\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# If softlinks start to matter, we should change this to REALPATH.  For now we need\n\n# to flatten paths, because nvcc can generate stuff like /bin/../include instead of\n\n# just /include.\n",
        "Line" : 58,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# message(\"FOUND NO DEPENDS\")\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Remove the duplicate entries and sort them.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "core/CMake/FindCUDA/parse_cubin.cmake" : {
      "ObjectId" : "2518c685250cf3c1b78779eae3c1946d3678d220",
      "LastModified" : "2010-10-11T17:37:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  James Bigler, NVIDIA Corp (nvidia.com - jbigler)\n\n#  Abe Stephens, SCI Institute -- http://www.sci.utah.edu/~abe/FindCuda.html\n\n#\n\n#  Copyright (c) 2008 - 2009 NVIDIA Corporation.  All rights reserved.\n\n#\n\n#  Copyright (c) 2007-2009\n\n#  Scientific Computing and Imaging Institute, University of Utah\n\n#\n\n#  This code is licensed under the MIT License.  See the FindCUDA.cmake script\n\n#  for the text of the license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MIT License\n\n#\n\n# License for the specific language governing rights and limitations under\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and associated documentation files (the \"Software\"),\n\n# to deal in the Software without restriction, including without limitation\n\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n# and/or sell copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################################################\n\n# Parses a .cubin file produced by nvcc and reports statistics about the file.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Remember, four backslashes is escaped to one backslash in the string.\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Only look at \"code { }\" blocks.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Break into individual lines.\n",
        "Line" : 53,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Extract kernel names.\n",
        "Line" : 58,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Check to see if the kernel name starts with \"_\"\n",
        "Line" : 62,
        "CharPositionInLine" : 10
      },
      "8" : {
        "Text" : "# if (${entry} MATCHES \"^_\")\n",
        "Line" : 64,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "# Skip the rest of this block.\n\n# message(\"Skipping ${entry}\")\n\n# set(skip TRUE)\n",
        "Line" : 65,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# else (${entry} MATCHES \"^_\")\n",
        "Line" : 68,
        "CharPositionInLine" : 10
      },
      "11" : {
        "Text" : "# endif (${entry} MATCHES \"^_\")\n",
        "Line" : 70,
        "CharPositionInLine" : 10
      },
      "12" : {
        "Text" : "# Skip the rest of the block if necessary\n",
        "Line" : 74,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Registers\n",
        "Line" : 77,
        "CharPositionInLine" : 10
      },
      "14" : {
        "Text" : "# Local memory\n",
        "Line" : 83,
        "CharPositionInLine" : 10
      },
      "15" : {
        "Text" : "# Shared memory\n",
        "Line" : 89,
        "CharPositionInLine" : 10
      },
      "16" : {
        "Text" : "# message(\"FOUND NO DEPENDS\")\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 17
    },
    "core/CMake/FindCUDA/run_nvcc.cmake" : {
      "ObjectId" : "7349da322453e9bb0e205c91f7c59ea55562a078",
      "LastModified" : "2010-10-11T17:37:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  James Bigler, NVIDIA Corp (nvidia.com - jbigler)\n\n#\n\n#  Copyright (c) 2008 - 2009 NVIDIA Corporation.  All rights reserved.\n\n#\n\n#  This code is licensed under the MIT License.  See the FindCUDA.cmake script\n\n#  for the text of the license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MIT License\n\n#\n\n# License for the specific language governing rights and limitations under\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and associated documentation files (the \"Software\"),\n\n# to deal in the Software without restriction, including without limitation\n\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n# and/or sell copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##########################################################################\n\n# This file runs the nvcc commands to produce the desired output file along with\n\n# the dependency file needed by CMake to compute dependencies.  In addition the\n\n# file checks the output of each command and if the command fails it deletes the\n\n# output files.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Input variables\n\n#\n\n# verbose:BOOL=<>          OFF: Be as quiet as possible (default)\n\n#                          ON : Describe each step\n\n#\n\n# build_configuration:STRING=<> Typically one of Debug, MinSizeRel, Release, or\n\n#                               RelWithDebInfo, but it should match one of the\n\n#                               entries in CUDA_HOST_FLAGS. This is the build\n\n#                               configuration used when compiling the code.  If\n\n#                               blank or unspecified Debug is assumed as this is\n\n#                               what CMake does.\n\n#\n\n# generated_file:STRING=<> File to generate.  This argument must be passed in.\n\n#\n\n# generated_cubin_file:STRING=<> File to generate.  This argument must be passed\n\n#                                                   in if build_cubin is true.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set these up as variables to make reading the generated file easier\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We won't actually use these variables for now, but we need to set this, in\n\n# order to force this file to be run again if it changes.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is the list of host compilation flags.  It C or CXX should already have\n\n# been chosen by FindCUDA.cmake.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Take the compiler flags and package them up to be sent to the compiler via -Xcompiler\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If we weren't given a build_configuration, use Debug.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#message(\"CUDA_NVCC_HOST_COMPILER_FLAGS = ${CUDA_NVCC_HOST_COMPILER_FLAGS}\")\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Extra quotes are added around each flag to help nvcc parse out flags with spaces.\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#message(\"nvcc_host_compiler_flags = \\\"${nvcc_host_compiler_flags}\\\"\")\n\n# Add the build specific configuration flags\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# cuda_execute_process - Executes a command with optional command echo and status message.\n\n#\n\n#   status  - Status message to print if verbose is true\n\n#   command - COMMAND argument from the usual execute_process argument structure\n\n#   ARGN    - Remaining arguments are the command with arguments\n\n#\n\n#   CUDA_result - return value from running the command\n\n#\n\n# Make this a macro instead of a function, so that things like RESULT_VARIABLE\n\n# and other return variables are present after executing the process.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Now we need to build up our command string.  We are accounting for quotes\n\n# and spaces, anything else is left up to the user to fix if they want to\n\n# copy and paste a runnable command line.\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# If there are quotes, excape them, so they come through.\n",
        "Line" : 131,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# Args with spaces need quotes around them to get them to be parsed as a single argument.\n",
        "Line" : 133,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Echo the command\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Run the command\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Delete the target file\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# For CUDA 2.3 and below, -G -M doesn't work, so remove the -G flag\n\n# for dependency generation and hope for the best.\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# CMake policy 0007 NEW states that empty list elements are not\n\n# ignored.  I'm just setting it to avoid the warning that's printed.\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Note that this will remove all occurances of -G.\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# nvcc doesn't define __CUDACC__ for some reason when generating dependency files.  This\n\n# can cause incorrect dependencies when #including files based on this macro which is\n\n# defined in the generating passes of nvcc invokation.  We will go ahead and manually\n\n# define this for now until a future version fixes this bug.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Generate the dependency file\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Generate the cmake readable dependency file to a temp file.  Don't put the\n\n# quotes just around the filenames for the input_file and output_file variables.\n\n# CMake will pass the quotes through and not be able to find the file.\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Copy the file if it is different\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Delete the temporary file\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Generate the code\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Since nvcc can sometimes leave half done files make sure that we delete the output file.\n",
        "Line" : 243,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Cubin resource report commands.\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Run with -cubin to produce resource usage report.\n",
        "Line" : 257,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Execute the parser script.\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 32
    },
    "core/CMake/FindConfigDCMTK.cmake" : {
      "ObjectId" : "201e4c26922b281b02b4551ed1e149ecb4e22e25",
      "LastModified" : "2012-03-20T22:14:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - find DCMTK libraries and applications\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n\n## THIS FILE WAS MODIFIED TO MATCH THE REQUIREMENTS OF CMTK\n\n##\n\n## - only DCMTK libraries are tested and configured that are actually used by CMTK\n\n##\n\n##\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  DCMTK_INCLUDE_DIRS   - Directories to include to use DCMTK\n\n#  DCMTK_LIBRARIES     - Files to link against to use DCMTK\n\n#  DCMTK_FOUND         - If false, don't try to use DCMTK\n\n#  DCMTK_DIR           - (optional) Source directory for DCMTK\n\n#  DCMTK_DCMDICTPATH   - Path to dicom.dic data dictionary\n\n#\n\n# DCMTK_DIR can be used to make it simpler to find the various include\n\n# directories and compiled libraries if you've just compiled it in the\n\n# source tree. Just set it to the root of the tree where you extracted\n\n# the source (default to /usr/include/dcmtk/)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=============================================================================\n\n# Copyright 2004-2009 Kitware, Inc.\n\n# Copyright 2009-2010 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n# Copyright 2010 Thomas Sondergaard <ts@medical-insight.com>\n\n# Copyright 2011-2012 SRI International\n\n#\n\n# CMake - Cross Platform Makefile Generator\n\n# Copyright 2000-2009 Kitware, Inc., Insight Software Consortium\n\n# All rights reserved.\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# \n\n# ------------------------------------------------------------------------------\n\n# \n\n# The above copyright and license notice applies to distributions of\n\n# CMake in source and binary form.  Some source files contain additional\n\n# notices of original copyright by their contributors; see each source\n\n# for details.  Third-party software packages supplied with CMake under\n\n# compatible licenses provide their own copyright notices documented in\n\n# corresponding subdirectories.\n\n# \n\n# ------------------------------------------------------------------------------\n\n# \n\n# CMake was initially developed by Kitware with the following sponsorship:\n\n# \n\n#  * National Library of Medicine at the National Institutes of Health\n\n#    as part of the Insight Segmentation and Registration Toolkit (ITK).\n\n# \n\n#  * US National Labs (Los Alamos, Livermore, Sandia) ASC Parallel\n\n#    Visualization Initiative.\n\n# \n\n#  * National Alliance for Medical Image Computing (NAMIC) is funded by the\n\n#    National Institutes of Health through the NIH Roadmap for Medical Research,\n\n#    Grant U54 EB005149.\n\n# \n\n#  * Kitware, Inc.\n\n# \n\n#=============================================================================\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Written for VXL by Amitha Perera.\n\n# Upgraded for GDCM by Mathieu Malaterre.\n\n# Modified for EasyViz by Thomas Sondergaard.\n\n# \n\n# Wed Jul 27 2011 Ankur Sinha <ankursinha AT fedoraproject DOT org> \n\n# - Add all dcmtk libs\n\n# - Add usr/lib to paths\n\n#\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##    dcmdsig\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##    dcmnet\n\n##    dcmpstat\n\n##    dcmqrdb\n\n##    dcmsr\n\n##    dcmtls\n\n##    dcmwlm\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##    libi2d\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##set(DCMTK_dcmnet_TEST_HEADER assoc.h)\n\n##set(DCMTK_dcmpstat_TEST_HEADER dcmpstat.h)\n\n##set(DCMTK_dcmqrdb_TEST_HEADER dcmqrdba.h)\n\n##set(DCMTK_dcmsign_TEST_HEADER sicert.h)\n\n##set(DCMTK_dcmsr_TEST_HEADER dsrtree.h)\n\n##set(DCMTK_dcmtls_TEST_HEADER tlslayer.h)\n\n##set(DCMTK_dcmwlm_TEST_HEADER wldsfs.h)\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##    dcmnet\n\n##    dcmpstat\n\n##    dcmqrdb\n\n##    dcmsign\n\n##    dcmsr\n\n##    dcmtls\n\n##    dcmwlm\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Compatibility: This variable is deprecated\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##foreach(executable dcmdump dcmdjpeg dcmdrle)\n\n##  string(TOUPPER ${executable} EXECUTABLE)\n\n##  find_program(DCMTK_${EXECUTABLE}_EXECUTABLE ${executable} ${DCMTK_DIR}/bin)\n\n##  mark_as_advanced(DCMTK_${EXECUTABLE}_EXECUTABLE)\n\n##endforeach()\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The following using pieces contributed by Yaroslav Halchenko based on CMake's own CHECK_CXX_SOURCE_COMPILES\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#MESSAGE( \"D: Checking for ${_lib}\" )\n",
        "Line" : 236,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#MESSAGE( \"D: Output was ${OUTPUT}\" )\n",
        "Line" : 245,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Detect missing DCMTK library dependencies by testing the \"usual suspects\"\n\n##    CheckLibraryDependency(DCMTK_LIBRARIES wrap hosts_access)\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "##    CheckLibraryDependency(DCMTK_LIBRARIES xml2 xmlGetProp)\n",
        "Line" : 266,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 17
    },
    "core/CMake/FindFFTW.cmake" : {
      "ObjectId" : "b9bc0fa7974823284a5492913ba29162133c2c6a",
      "LastModified" : "2012-05-01T22:21:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2012 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n\n## This file borrows heavily from the analogous InsightToolkit file\n\n##\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## FFTW can be compiled and subsequently linked against\n\n## various data types.\n\n## There is a single set of include files, and then muttiple libraries,\n\n## One for each type.  I.e. libfftw.a-->double, libfftwf.a-->float\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## The following logic belongs in the individual package\n\n## mark_as_advanced(USE_FFTWD)\n\n## option(USE_FFTWD \"Use double precision FFTW if found\" ON)\n\n## mark_as_advanced(USE_FFTWF)\n\n## option(USE_FFTWF \"Use single precision FFTW if found\" ON)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Double Precision Lib\n",
        "Line" : 71,
        "CharPositionInLine" : 53
      },
      "5" : {
        "Text" : "#Double Precision Lib only if compiled with threads support\n",
        "Line" : 72,
        "CharPositionInLine" : 69
      },
      "6" : {
        "Text" : "#Double Precision Lib only if compiled with OpenMP support\n",
        "Line" : 73,
        "CharPositionInLine" : 61
      },
      "7" : {
        "Text" : "#Single Precision Lib\n",
        "Line" : 84,
        "CharPositionInLine" : 54
      },
      "8" : {
        "Text" : "#Single Precision Lib only if compiled with threads support\n",
        "Line" : 85,
        "CharPositionInLine" : 70
      },
      "9" : {
        "Text" : "#Single Precision Lib only if compiled with OpenMP support\n",
        "Line" : 86,
        "CharPositionInLine" : 62
      },
      "CommentCount" : 10
    },
    "core/CMake/FindLZMA.cmake" : {
      "ObjectId" : "bbddcf0a6e551a19309103fe5ef41b21c05fcc0c",
      "LastModified" : "2010-10-11T17:37:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find lzma\n\n# Find the native LZMA includes and library\n\n#\n\n#  LZMA_INCLUDE_DIRS - where to find lzma.h, etc.\n\n#  LZMA_LIBRARIES    - List of libraries when using lzma.\n\n#  LZMA_FOUND        - True if lzma found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n#\n\n#=============================================================================\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# \n\n#=============================================================================\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Per-recommendation\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LZMA_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "core/CMake/FindMXML.cmake" : {
      "ObjectId" : "ec254eab07a3dc4a223c6443be056e9afe23131d",
      "LastModified" : "2012-07-06T22:21:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find mxml\n\n# Find the native MXML includes and library\n\n#\n\n#  MXML_INCLUDE_DIRS  - where to find mxml.h, etc.\n\n#  MXML_LIBRARIES     - List of libraries when using mxml.\n\n#  MXMLDOC_EXECUTABLE - Path to \"mxmldoc\" executable\n\n#  MXML_VERSION       - Version string extracted from output of \"mxmldoc\"\n\n#  MXML_FOUND         - True if mxml found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n#\n\n#=============================================================================\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# \n\n#=============================================================================\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Extract version from header if not defined otherwise\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Per-recommendation\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set MXML_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "core/CMake/FindSQLite3.cmake" : {
      "ObjectId" : "666004f9623cd5367af389019ad6fbb1b8c60914",
      "LastModified" : "2011-10-21T17:16:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find SQLITE3\n\n# Once done this will define\n\n#\n\n#  SQLITE3_FOUND - system has SQLITE3\n\n#  SQLITE3_INCLUDE_DIR - the SQLITE3 include directory\n\n#  SQLITE3_LIBRARIES - Link these to use SQLITE3\n\n#  SQLITE3_DEFINITIONS - Compiler switches required for using SQLITE3\n\n#  SQLITE_EXECUTABLE - Comamnd line tool sqlite3\n\n#\n\n#  Modified from http://openlibraries.org/browser/trunk/FindSQLITE3.cmake\n\n#\n\n#=============================================================================\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# \n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 45,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set SQLITE3_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Extract version from header if not defined otherwise\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "core/CMake/TestQnanhibit.cmake" : {
      "ObjectId" : "3495cf10a181c2579145ddc2464037e8ed1a58a5",
      "LastModified" : "2010-10-11T17:37:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Checks whether the 22nd bit of a 32-bit quiet-NaN is 1 (1) or 0 (0).  This \n\n# distinction is needed in handling of IEEE floating point special values.  \n\n# This quantity is independent of endian-ness.\n\n#\n\n# VARIABLE - variable to store the result to\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/CMakeLists.txt" : {
      "ObjectId" : "da4bee7ca4af5f0f81f2b1e5d9a900407353aaac",
      "LastModified" : "2019-01-25T04:23:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2010 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2014 SRI International\n\n##\n\n##  Copyright 2015, 2016 Google, Inc.\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n\n## This file used to borrow heavily from the analogous InsightToolkit file.\n\n## It may have evolved away since then, however.\n\n##\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Remove when CMake >= 2.8.4 is required\n",
        "Line" : 39,
        "CharPositionInLine" : 33
      },
      "3" : {
        "Text" : "## libraries with full paths vs. search paths\n",
        "Line" : 42,
        "CharPositionInLine" : 32
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Test for some required system information.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# On Mac, if we have MacPorts installed, we need to look for libraries in \n\n# /opt/local.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Output directories.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# variable used for generating CMTKConfig.cmake for the build tree\n",
        "Line" : 82,
        "CharPositionInLine" : 27
      },
      "8" : {
        "Text" : "# set CMTK_DIR so it can be used by subprojects\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Setup install target directories\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# 64 bit libraries are not installed in the same directories on solaris\n\n# Ref: http://docs.sun.com/app/docs/doc/816-5138/6mba6ua5m?a=view\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# sun64 is not set - solaris has been ported to a new architecture?\n",
        "Line" : 117,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check for system headers.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Test NaN high bit\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check for at least one of the typical STL hash map implementations\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# set a single flag is we have ANY hash map implementation in STL\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# build configuration options.\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add an option to use or not to use SMP multi-core parallelism\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add an option to enable or disable POSIX threads if pthread.h header exists\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# for the gnu compiler a -D_PTHREADS is needed on sun\n\n# for the native compiler a -mt flag is needed on the sun\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# mingw thread support\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check for, and configure, OpenMP\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check for, and configure, Grand Central Dispatch\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check for, and configure, CUDA\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# check using cmake's own FindCUDA above v2.8 or use our own for earlier versions\n",
        "Line" : 293,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check whether compiler supports variable-size automatic arrays, i.e.,\n\n# things like \"const int size = 10; const char string[size];\" rather than\n\n# \"const char string[10];\"\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure Dart testing support.  This should be done before any\n\n# MESSAGE(FATAL_ERROR ...) commands are invoked.\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure Doxygen support\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add an option to use double-precision floats for coordinates.\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add an option to use or not use zlib library\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add an option to use or not use mxml library\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add an option to use or not use bzip2 library\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add an option to use or not use lzma decompression library\n",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add an option to build with DICOM support\n",
        "Line" : 454,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# system DCMTK should support jpeg\n",
        "Line" : 482,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add an option to use or not use sqlite3 library\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# if we're using SQLite and building with test support, then we need the \"sqlite3\" tool.\n",
        "Line" : 530,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add an option to use or not use TEEM (for NrrdIO support)\n",
        "Line" : 537,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set up CPack support, to be able to distribute binary packages.\n\n#\n",
        "Line" : 549,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure bundled utilities.\n",
        "Line" : 555,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add an option to enable or disable QT support and GUI applications\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add options to enable or disable different compoments\n",
        "Line" : 576,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add an option to use FFTW library\n",
        "Line" : 588,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add an option to enable building of test code\n",
        "Line" : 616,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Create the list of include directories needed for header files.\n",
        "Line" : 624,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Dispatch the build into the proper subdirectories.\n",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure this tree\n",
        "Line" : 650,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Help other projects use CMTK.\n",
        "Line" : 655,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Copy the UseCMTK.cmake file to the binary tree for backward compatability.\n",
        "Line" : 658,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Create the CMTKConfig.cmake file containing the CMTK configuration.\n",
        "Line" : 662,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add compiler flags CMTK needs to work on this platform.  This must be\n\n# done AFTER the call to CMAKE_EXPORT_BUILD_SETTINGS.\n",
        "Line" : 665,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Settings for rpath when building shared libraries\n",
        "Line" : 675,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Disable rpath altogether if we don't use shared libraries\n",
        "Line" : 678,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 680,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 683,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# the RPATH to be used when installing\n",
        "Line" : 687,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 690,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# Save library dependencies.\n",
        "Line" : 697,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# After everything else is done, do we want to build man pages?\n",
        "Line" : 701,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure third-party contributions.\n",
        "Line" : 706,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 60
    },
    "core/CTestConfig.cmake" : {
      "ObjectId" : "7f9a53648da3fe4f4801ae22be7313e828467e90",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2010 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2011 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/Utilities/CMakeLists.txt" : {
      "ObjectId" : "8b1de2f09051e485044f486fa81cdf235e1e811c",
      "LastModified" : "2014-01-16T20:49:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2011, 2014 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# turn off Windows security warnings for bundled code\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# If building test code, we need numdiff to tolerantly compare numerical results against baselines\n\n#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Tets whether numdiff is already available\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# If not available, build our own\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "core/Utilities/NrrdIO/CMakeLists.txt" : {
      "ObjectId" : "752c31a4055fe27bf873745e7afc392d558fd400",
      "LastModified" : "2014-01-16T20:49:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# NrrdIO: stand-alone code for basic nrrd functionality\n\n# Copyright (C) 2011, 2010, 2009  University of Chicago\n\n# Copyright (C) 2008, 2007, 2006, 2005  Gordon Kindlmann\n\n# Copyright (C) 2004, 2003, 2002, 2001, 2000, 1999, 1998  University of Utah\n\n#\n\n# This software is provided 'as-is', without any express or implied\n\n# warranty.  In no event will the authors be held liable for any\n\n# damages arising from the use of this software.\n\n# \n\n# Permission is granted to anyone to use this software for any\n\n# purpose, including commercial applications, and to alter it and\n\n# redistribute it freely, subject to the following restrictions:\n\n# \n\n# 1. The origin of this software must not be misrepresented; you must\n\n#    not claim that you wrote the original software. If you use this\n\n#    software in a product, an acknowledgment in the product\n\n#    documentation would be appreciated but is not required.\n\n#\n\n#   2. Altered source versions must be plainly marked as such, and must\n\n#    not be misrepresented as being the original software.\n\n# \n\n# 3. This notice may not be removed or altered from any source distribution.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Modified 23-Oct-2012 by Torsten Rohlfing for CMTK, \n\n# (C) 2012 SRI International\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# This CMake file configures the NrrdIO library build.  NrrdIO\n\n# is used by Insight/Code/IO/itkNrrdIO for reading/writing \n\n# \"Nearly Raw Raster Data\" within the open-source Teem software \n\n# package. See http://teem.sourceforge.net for more information.\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Turn on TEEM_BUILD so that the proper dll export def's are \n\n# used on windows builds.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Configure files with settings for use by the build.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Need to be able to find NrrdConfig.h\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#The QNANHIBIT variable is configured by the root level CMakeLists.txt\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#DirectIO is the fast way to do multi-gigabyte I/O and currently only available\n\n#for SGI platforms.  Use of DirectIO is enabled manually for now.\n\n#OPTION(USE_DIRECTIO \"Use DirectIO for Nrrd file IO.  Only valid on SGI systems.\" 0)\n\n#MARK_AS_ADVANCED(USE_DIRECTIO)\n\n#IF(USE_DIRECTIO)\n\n#  ADD_DEFINITIONS(-DTEEM_DIO=1)\n\n#ELSE(USE_DIRECTIO)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#ENDIF(USE_DIRECTIO)\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Possibly turn on usage of zlib compression (requires linking with libz)\n\n# (i.e., programs compiled with ITKNrrdIO must also be compiled with zlib)\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##\n\n## CMTK-speficic add-ons\n\n##\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "core/Utilities/dcmtk/CMakeLists.txt" : {
      "ObjectId" : "c4bc6f3d8ed245f59163f6d92995a9cf7816a051",
      "LastModified" : "2014-01-17T02:23:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2004-2012 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision: 4596 $\n\n##      \n\n##  $LastChangedDate: 2012-11-12 15:30:14 -0800 (Mon, 12 Nov 2012) $\n\n##\n\n##  $LastChangedBy: torsten_at_home $\n\n##      \n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Include(CheckLibraryExists)\n\n#CHECK_LIBRARY_EXISTS(iostream HAVE_LIBIOSTREAM)\n\n#CHECK_LIBRARY_EXISTS(nsl HAVE_LIBNSL)\n\n#CHECK_LIBRARY_EXISTS(socket HAVE_LIBSOCKET)\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Copy variables from CMake's internal names to their names in configurable header \n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Created configured configuration header\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "core/Utilities/mxml/CMake/CheckCInline.cmake" : {
      "ObjectId" : "5517f8865d9320b20f49e6edae3a19a129c0406e",
      "LastModified" : "2010-10-11T20:50:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This handy test is from Jack Kelly on the cmake email list. \n\n#   http://www.cmake.org/Wiki/CMakeTestInline\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Inspired from /usr/share/autoconf/autoconf/c.m4\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/Utilities/mxml/CMakeLists.txt" : {
      "ObjectId" : "e0a2d3b0ffe48fe087a56aac9854641f5e25347c",
      "LastModified" : "2014-01-16T20:49:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2009-2012 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision: 199 $\n\n##      \n\n##  $LastChangedDate: 2009-07-13 16:38:02 -0700 (Mon, 13 Jul 2009) $\n\n##\n\n##  $LastChangedBy: torstenrohlfing $\n\n##      \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/Utilities/mxml/config.h.cmake" : {
      "ObjectId" : "7b30b9cd4743f288829436d53d4be3130014aa2b",
      "LastModified" : "2014-01-16T20:49:48Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n * \"$Id: config.h.in 387 2009-04-18 17:05:52Z mike $\"\n *\n * Configuration file for Mini-XML, a small XML-like file parsing library.\n *\n * Copyright 2003-2009 by Michael Sweet.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Library General Public\n * License as published by the Free Software Foundation; either\n * version 2, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/*\n * Include necessary headers...\n */",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/*\n * add \"cmtk_\" prefix to exported symbols - we are building this library bundled with CMTK\n */",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/*\n * Version number...\n */",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/*\n * Inline function support...\n */",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/*\n * Long long support...\n */",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/*\n * Do we have the snprintf() and vsnprintf() functions?\n */",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/*\n * Do we have the strXXX() functions?\n */",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/*\n * Do we have threading support?\n */",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/*\n * Define prototypes for string functions as needed...\n */",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* disable warnings about \"deprecated\" C runtime functions  */",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/*\n * End of \"$Id: config.h.in 387 2009-04-18 17:05:52Z mike $\".\n */",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "core/Utilities/numdiff-5.2.1/CMake/CheckStructMember.cmake" : {
      "ObjectId" : "069ce51d8ddecfb69fe0e9c852a4f82e20cc1021",
      "LastModified" : "2014-01-16T20:49:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if the given struct or class has the specified member variable\n\n# CHECK_STRUCT_MEMBER (STRUCT MEMBER HEADER VARIABLE)\n\n#\n\n# STRUCT - the name of the struct or class you are interested in\n\n# MEMBER - the member which existence you want to check\n\n# HEADER - the header(s) where the prototype should be declared\n\n# VARIABLE - variable to store the result\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n# CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n# CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n# CMAKE_REQUIRED_INCLUDES = list of include directories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/Utilities/numdiff-5.2.1/CMake/CheckTypeExists.cmake" : {
      "ObjectId" : "fbb77b7b55030e1d62028bbcd2369fa92770eb94",
      "LastModified" : "2014-01-16T20:49:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if the system has the specified type\n\n# CHECK_TYPE_EXISTS (TYPE HEADER VARIABLE)\n\n#\n\n# TYPE - the name of the type or struct or class you are interested in\n\n# HEADER - the header(s) where the prototype should be declared\n\n# VARIABLE - variable to store the result\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n# CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n# CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n# CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# Copyright (c) 2009, Michihiro NAKAJIMA\n\n# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/Utilities/numdiff-5.2.1/CMake/FindLibintlGettext.cmake" : {
      "ObjectId" : "4ad0b9eec11642161d7370a89a3e67d7173d66a2",
      "LastModified" : "2014-01-16T20:49:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2012 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n\n##\n\n## THIS IS BASED ON THE KDE \"FindGettext.cmake\" FILE\n\n##\n\n##\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Try to find Gettext functionality\n\n# Once done this will define\n\n#\n\n#  GETTEXT_FOUND - system has Gettext\n\n#  GETTEXT_INCLUDE_DIR - Gettext include directory\n\n#  GETTEXT_LIBRARIES - Libraries needed to use Gettext\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: This will enable translations only if Gettext functionality is\n\n# present in libc. Must have more robust system for release, where Gettext\n\n# functionality can also reside in standalone Gettext library, or the one\n\n# embedded within kdelibs (cf. gettext.m4 from Gettext source).\n\n#\n\n# Copyright (c) 2006, Chusslove Illich, <caslav.ilic@gmx.net>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# in cache already\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "core/Utilities/numdiff-5.2.1/CMakeLists.txt" : {
      "ObjectId" : "464ec1a9850f46c0e549e834e1c7a1f3f0efe3c0",
      "LastModified" : "2014-01-16T20:49:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2011, 2012 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ########## Project setup ##########\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## explicit escaping of compiler definition strings\n",
        "Line" : 34,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# ######### General setup ##########\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ########## numdiff-5.2.1 executable ##########\n\n# Sources:\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check for system headers.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# see https://www.gnu.org/s/hello/manual/autoconf/Particular-Headers.html\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#AC_C_CONST -- obsolete according to https://www.gnu.org/software/hello/manual/autoconf/C-Compiler.html#index-AC_005fC_005fCONST-885\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#AC_C_INLINE\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Check for variable arrays support in C compiler\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Check for types and substitute replacement types if they don't exist\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# --------------------------------------\n\n# Checks for libraries\n\n# --------------------------------------\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# --------------------------------------\n\n# Checks for library functions\n\n# --------------------------------------\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# setmode DOS ?\n\n##AC_FUNC_SETMODE_DOS\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Check for clock_gettime and its library.  Solaris puts it in -lrt or\n\n## -lposix4, but we don't want to link that library unless we have to.\n\n#diff_saved_libs=$LIBS\n\n#AC_SEARCH_LIBS(clock_gettime, [rt posix4])\n\n#case $ac_cv_search_clock_gettime in\n\n#no | 'none required')\n\n#  LIB_CLOCK_GETTIME=;;\n\n#*)\n\n#  LIB_CLOCK_GETTIME=$ac_cv_search_clock_gettime;;\n\n#esac\n\n#AC_SUBST([LIB_CLOCK_GETTIME])\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "##\n\n## Find libintl/gettext and configure NLS if available\n\n##\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##\n\n## Configure GMP support\n\n##\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# actual target:\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# add install target:\n\n#INSTALL(TARGETS numdiff DESTINATION bin)\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "core/Utilities/numdiff-5.2.1/config.h.cmake" : {
      "ObjectId" : "6e28e9faccfa68698080a93623a601b0cec439d1",
      "LastModified" : "2014-01-16T20:49:48Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n//  Copyright 2011, 2012 SRI International\n//\n//  This file is part of the Computational Morphometry Toolkit.\n//\n//  http://www.nitrc.org/projects/cmtk/\n//\n//  The Computational Morphometry Toolkit is free software: you can\n//  redistribute it and/or modify it under the terms of the GNU General Public\n//  License as published by the Free Software Foundation, either version 3 of\n//  the License, or (at your option) any later version.\n//\n//  The Computational Morphometry Toolkit is distributed in the hope that it\n//  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n//  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License along\n//  with the Computational Morphometry Toolkit.  If not, see\n//  <http://www.gnu.org/licenses/>.\n//\n//  $Revision$\n//\n//  $LastChangedDate$\n//\n//  $LastChangedBy$\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* config.h.in.  Generated from configure.ac by autoheader.  */",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/*\n    Numdiff - compare putatively similar files, \n    ignoring small numeric differences\n    Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010  Ivano Primi  <ivprimi@libero.it>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP\n   systems. This function is required for `alloca.c' support on those systems.\n   */",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Define to 1 if using `alloca.c'. */",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Define to 1 if you have `alloca', as a function or macro. */",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Define to 1 if you have <alloca.h> and it should be used (not on Ultrix).\n   */",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Define to 1 if you have the `bcopy' function. */",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Define to 1 if you have the `btowc' function. */",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Define to 1 if you have the `bzero' function. */",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Define to 1 if you have the `clock_gettime' function. */",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Define to 1 if C supports variable-length arrays. */",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Define to 1 if you have the declaration of `clearerr_unlocked', and to 0 if\n   you don't. */",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Define to 1 if you have the declaration of `feof_unlocked', and to 0 if you\n   don't. */",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Define to 1 if you have the declaration of `ferror_unlocked', and to 0 if\n   you don't. */",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Define to 1 if you have the declaration of `fflush_unlocked', and to 0 if\n   you don't. */",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Define to 1 if you have the declaration of `fgets_unlocked', and to 0 if\n   you don't. */",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Define to 1 if you have the declaration of `fputc_unlocked', and to 0 if\n   you don't. */",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Define to 1 if you have the declaration of `fputs_unlocked', and to 0 if\n   you don't. */",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Define to 1 if you have the declaration of `fread_unlocked', and to 0 if\n   you don't. */",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Define to 1 if you have the declaration of `fwrite_unlocked', and to 0 if\n   you don't. */",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Define to 1 if you have the declaration of `getchar_unlocked', and to 0 if\n   you don't. */",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Define to 1 if you have the declaration of `getc_unlocked', and to 0 if you\n   don't. */",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Define to 1 if you have the declaration of `putchar_unlocked', and to 0 if\n   you don't. */",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Define to 1 if you have the declaration of `putc_unlocked', and to 0 if you\n   don't. */",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Define to 1 if you have the declaration of `strerror', and to 0 if you\n   don't. */",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you\n   don't. */",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "/* Define to 1 if you have the <dirent.h> header file, and it defines `DIR'.\n   */",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "/* Define to 1 if you have the <fcntl.h> header file. */",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "/* Define to 1 if you have the `fork' function. */",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "/* Define to 1 if you have the `gettimeofday' function. */",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "/* Define to 1 if you have the <inttypes.h> header file. */",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "/* Define to 1 if you have the <libintl.h> header file. */",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "/* Define to 1 if you have the `isascii' function. */",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "/* Define to 1 if you have the `gmp' library (-lgmp). */",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "/* Define to 1 if you have the `localeconv' function. */",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "/* Define to 1 if you have the <locale.h> header file. */",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "/* Define to 1 if you have the <memory.h> header file. */",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "/* Define to 1 if you have the <ndir.h> header file, and it defines `DIR'. */",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "/* Define to 1 if you have the `setlocale' function. */",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "/* Define to 1 if you have the DOS-style `setmode' function. */",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "/* Define to 1 if stdbool.h conforms to C99. */",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "/* Define to 1 if you have the <stddef.h> header file. */",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "/* Define to 1 if you have the <stdint.h> header file. */",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "/* Define to 1 if you have the <stdlib.h> header file. */",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "/* Define to 1 if you have the `strchr' function. */",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "/* Define to 1 if you have the `strerror_r' function. */",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "/* Define to 1 if you have the `strftime' function. */",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "/* Define to 1 if you have the <strings.h> header file. */",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "/* Define to 1 if you have the <string.h> header file. */",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "/* Define to 1 if `st_blksize' is member of `struct stat'. */",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "/* Define to 1 if `st_rdev' is member of `struct stat'. */",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "/* Define to 1 if your `struct stat' has `st_blksize'. Deprecated, use\n   `HAVE_STRUCT_STAT_ST_BLKSIZE' instead. */",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "/* Define to 1 if your `struct stat' has `st_rdev'. Deprecated, use\n   `HAVE_STRUCT_STAT_ST_RDEV' instead. */",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "/* Define to 1 if you have the <sys/dir.h> header file, and it defines `DIR'.\n   */",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "/* Define to 1 if you have the <sys/file.h> header file. */",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "/* Define to 1 if you have the <sys/ndir.h> header file, and it defines `DIR'.\n   */",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "/* Define to 1 if you have the <sys/stat.h> header file. */",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "/* Define to 1 if you have the <sys/types.h> header file. */",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "/* Define to 1 if you have <sys/wait.h> that is POSIX.1 compatible. */",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "/* Define to 1 if you have the <time.h> header file. */",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "/* Define to 1 if you have the <unistd.h> header file. */",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "/* Define to 1 if you have the `vfork' function. */",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "/* Define to 1 if you have the <vfork.h> header file. */",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "/* Define to 1 if you have the `waitpid' function. */",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "/* Define to 1 if you have the <wchar.h> header file. */",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "/* Define to 1 if you have the <wctype.h> header file. */",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "/* Define to 1 if `fork' works. */",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "/* Define to 1 if `vfork' works. */",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "/* Define to 1 if the system has the type `_Bool'. */",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "/* Define to 1 if your C compiler doesn't accept -c and -o together. */",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "/* Define to the address where bug reports for this package should be sent. */",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "/* Define to the full name of this package. */",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "/* Define to the full name and version of this package. */",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "/* Define to the one symbol short name of this package. */",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "/* Define to the version of this package. */",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "/* Define to 1 if the `S_IS*' macros in <sys/stat.h> do not work properly. */",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "/* Define to 1 if you have the ANSI C header files. */",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "/* Define to 1 if strerror_r returns char *. */",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "/* Define to be the nanoseconds member of struct stat's st_mtim, if it exists.\n   */",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "/* Enable extensions on AIX 3, Interix.  */",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "/* Enable GNU extensions on systems that have them.  */",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "/* Enable threading extensions on Solaris.  */",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "/* Enable extensions on HP NonStop.  */",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "/* Enable general extensions on Solaris.  */",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "/* Define to 1 if you want getc etc. to use unlocked I/O if available.\n   Unlocked I/O can improve performance in unithreaded apps, but it is not\n   safe for multithreaded apps. */",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "/* Number of bits in a file offset, on hosts where this is settable. */",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "/* Define for large files, on AIX-style hosts. */",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "/* Define to 1 if on MINIX. */",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "/* Define to 2 if the system does not provide POSIX.1 features except with\n   this defined. */",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "/* Define to 1 if you need to in order for `stat' and other things to work. */",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "/* Define to empty if `const' does not conform to ANSI C. */",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "/* Define to `__inline__' or `__inline' if that's what the C compiler\n   calls it, or to nothing if 'inline' is not supported under any name.  */",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "/* Define to `int' if <sys/types.h> does not define. */",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "/* Define to `int' if <sys/types.h> does not define. */",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "/* Define to `unsigned int' if <sys/types.h> does not define. */",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "/* Define to `int' if <sys/types.h> does not define. */",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "/* Define as `fork' if `vfork' does not work. */",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "/* Version + Release number */",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "/* Number of decimal digits used in displaying the values */\n/* for absolute and relative error.                       */",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "/* Size of the input buffer (used to read from file) */",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "/* Size of the mask of fields. FIELDMASK_SIZE * 8 gives the    */\n/* largest index of field which can be passed to the -F option */\n/* on the command line.                                        */",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "/* Line separator (output) */",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "/* End-of-File indicator */",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "/* Hyphenation character */",
        "Line" : 394,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "/* Special arrangements for Visual C++ */",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "/* From missing stdint.h */",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 107
    },
    "core/Utilities/sqlite3/CMakeLists.txt" : {
      "ObjectId" : "e2759ee5e787caf4be6d746544c8a184946003cf",
      "LastModified" : "2014-01-16T20:49:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2010 Torsten Rohlfing\n\n##\n\n##  Copyright 2010-2011 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision: 199 $\n\n##      \n\n##  $LastChangedDate: 2009-07-13 16:38:02 -0700 (Mon, 13 Jul 2009) $\n\n##\n\n##  $LastChangedBy: torstenrohlfing $\n\n##      \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/Utilities/sqlite3/Makefile.am" : {
      "ObjectId" : "524059cb3170fcf6772c7b6f2c3b2f242ca34d10",
      "LastModified" : "2014-01-16T20:49:48Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "core/Utilities/zlib/CMakeLists.txt" : {
      "ObjectId" : "ec9c55330e66130c9e2e0424c5ec5fa983f08d25",
      "LastModified" : "2014-01-16T20:49:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 36,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n\n#\n\n# This has no effect with MSVC, on that platform the version info for\n\n# the DLL comes from the resource file win32/zlib1.rc\n",
        "Line" : 128,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "core/Utilities/zlib/Makefile" : {
      "ObjectId" : "6bba86c73fca2abda416baa1a7cf883b3494fb29",
      "LastModified" : "2014-01-16T20:49:48Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "core/apps/CMakeLists.txt" : {
      "ObjectId" : "11f79d1ee0285069d369babee81cca788de1d79c",
      "LastModified" : "2014-05-01T18:57:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2012 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2013 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/cmtkConfigureCPack.cmake" : {
      "ObjectId" : "997510c4d1853499892414ac5bd1c92335b12e3a",
      "LastModified" : "2015-09-05T19:58:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2010 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2014 SRI International\n\n##\n\n##  Copyright 2015 Google, Inc.\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Optionally override system name and CPU type\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##SET(CPACK_RPM_CHANGELOG_FILE \"${CMAKE_CURRENT_SOURCE_DIR}/CHANGELOG\" ) ## Our Changelog is in wrong format\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# mandatory package\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# mandatory package with optional bundled replacement\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# optional package with optional bundled replacement\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# optional package with optional bundled replacement\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# optional package\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# optional package\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# optional package\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "core/cmtkGenerateCMTKConfig.cmake" : {
      "ObjectId" : "de106c07aef7efe7b595886c2869291c948b3786",
      "LastModified" : "2014-01-16T20:49:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2012 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n\n## This file borrows heavily from the analogous InsightToolkit file\n\n##\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generate the CMTKConfig.cmake file in the build tree.  Also configure\n\n# one for installation.  The file tells external projects how to use\n\n# CMTK.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Settings common to the build and installation tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The \"use\" file.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The build settings file.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Settings specific to the build tree.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Config file prefix is the root of the build tree itself.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# The library dependencies file.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Library directory.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Binary directory.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Determine the include directories needed.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set data directory\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set DICOM dictionary paths for build AND install tree\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure CMTKConfig.cmake and cmtkconfig.h for the build tree.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Settings specific to the install tree.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Config prefix is under install tree.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# The library dependencies file.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Include directories.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# List of CMTK libraries\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Link directories.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Link directories.\n\n# The install tree will use the directory where CMTKConfig.cmake is found, which\n\n# happens to be \"INSTALLATION/lib\". That is, it is already the\n\n# same directory where the libraries are installed. Therefore this variable\n\n# must be empty here. See CMTKConfig.cmake.in for details on how this variable\n\n# is used.\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Binary directory.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure CMTKConfig.cmake for the install tree.\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Construct the proper number of GET_FILENAME_COMPONENT(... PATH)\n\n# calls to compute the installation prefix.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "core/cmtkIncludeDirectories.cmake" : {
      "ObjectId" : "5deab56b35e4534be968ac8686afaa02603fa090",
      "LastModified" : "2014-01-16T20:49:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2010 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Include directories for other projects installed on the system.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Include directories from the build tree.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# These directories are always needed.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "core/cmtkconfig.h.cmake" : {
      "ObjectId" : "b8426d24c81f98d6654f447d9d4571f6964eb94c",
      "LastModified" : "2015-09-05T19:58:18Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n//\n//  Copyright 1997-2009 Torsten Rohlfing\n//\n//  Copyright 2004-2013 SRI International\n//\n//  Copyright 2015 Google, Inc.\n//\n//  This file is part of the Computational Morphometry Toolkit.\n//\n//  http://www.nitrc.org/projects/cmtk/\n//\n//  The Computational Morphometry Toolkit is free software: you can\n//  redistribute it and/or modify it under the terms of the GNU General Public\n//  License as published by the Free Software Foundation, either version 3 of\n//  the License, or (at your option) any later version.\n//\n//  The Computational Morphometry Toolkit is distributed in the hope that it\n//  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n//  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License along\n//  with the Computational Morphometry Toolkit.  If not, see\n//  <http://www.gnu.org/licenses/>.\n//\n//  $Revision$\n//\n//  $LastChangedDate$\n//\n//  $LastChangedBy$\n//\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* cmtkconfig.h.cmake  */",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "// Unless in \"DEBUG\" build, turn off AlgLib assertions",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "//\n// Configuration options\n//",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Use stat64 on systems where it is available and stat is not 64bit aware. */",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "// Flag for Grand Central Dispatch",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* The size of a `char', as computed by sizeof. */",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* The size of a `double', as computed by sizeof. */",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* The size of a `float', as computed by sizeof. */",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* The size of a `int', as computed by sizeof. */",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* The size of a `long', as computed by sizeof. */",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* The size of a `short', as computed by sizeof. */",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* The size of a `void *', as computed by sizeof. */",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/// Macro to prevent warnings from unused function arguments.",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "// disable warnings about insecure functions (we want to be portable)",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "// disable warnings about unknown (i.e., gcc) pragmas",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "// disable warnings about unimplemented \"throw()\" declaration",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "// enable POSIX compliance",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "// Fake PATH_MAX if we don't have it",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "core/config/OSX-10.4-i386.cmake" : {
      "ObjectId" : "177cc3a2eca0870786e4ace2a50b7b970adefacd",
      "LastModified" : "2014-01-20T22:30:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2010 Greg Jefferis\n\n##\n\n##  Copyright 2010-2012, 2014 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General settings\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 32 bit for OS X >=10.4\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use GCC 4.0 for 10.4 SDK\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Activate SSE support for floating point\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Disable Grand Central Dispatch as it is broken with C++ in 10.4 SDK\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# No Qt support\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Disable FFTW, even if installed on our build system, since it requires MacPorts\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "core/config/OSX-10.5-x86_64.cmake" : {
      "ObjectId" : "d8dc114b0d078d51a76b599d89a6c4f3fb524b36",
      "LastModified" : "2014-01-20T22:30:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2010 Greg Jefferis\n\n##\n\n##  Copyright 2010-2012, 2014 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General settings\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 64 bit for OS X >=10.5\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Activate SSE support for floating point\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CMTK config settings\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Disable OpenMP - broken on Mac\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Disable FFTW, even if installed on our build system, since it requires MacPorts\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "core/config/OSX-10.6-x86_64-CUDA.cmake" : {
      "ObjectId" : "a6497ee5073eb1a5bd31779bdcb9aaf0a50c3eec",
      "LastModified" : "2014-01-20T22:30:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2010 Greg Jefferis\n\n##\n\n##  Copyright 2010-2012, 2014 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision: 5179 $\n\n##\n\n##  $LastChangedDate: 2014-01-20 12:59:03 -0800 (Mon, 20 Jan 2014) $\n\n##\n\n##  $LastChangedBy: torstenrohlfing $\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General settings\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 64 bit for OS X >=10.6\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Activate SSE support for floating point\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CMTK config settings\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Disable OpenMP - broken on Mac\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Disable FFTW, even if installed on our build system, since it requires MacPorts\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "core/config/OSX-10.6-x86_64.cmake" : {
      "ObjectId" : "0dd0e68e00827fdfb0b7dca46e6a7c9016b1c477",
      "LastModified" : "2014-01-20T22:30:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2010 Greg Jefferis\n\n##\n\n##  Copyright 2010-2012, 2014 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General settings\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 64 bit for OS X >=10.6\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Activate SSE support for floating point\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CMTK config settings\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Disable OpenMP - broken on Mac\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Disable FFTW, even if installed on our build system, since it requires MacPorts\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "core/config/OSX-10.9-x86_64.cmake" : {
      "ObjectId" : "d0e563fc55edaa174ad2272a0edec7adf9665378",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2010 Greg Jefferis\n\n##\n\n##  Copyright 2010-2012, 2014 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General settings\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 64 bit for OS X >=10.6\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Activate SSE support for floating point\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CMTK config settings\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Disable OpenMP - broken on Mac\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Disable FFTW, even if installed on our build system, since it requires MacPorts\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Enable Greg's \"munger\" script\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "core/config/gcc-p4-sse.cmake" : {
      "ObjectId" : "44235d808692085897d1ba6670aaa78cef766164",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2010 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/config/gcc-x86_64-sse.cmake" : {
      "ObjectId" : "f1b60ba0613c3b7821652f4d6b7523bcaeded7d0",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2010 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/config/gcc4.7-macports-OSX-10.6.cmake" : {
      "ObjectId" : "301ee8682cf4fa46f0537698987451b301a83d03",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2010 Greg Jefferis\n\n##\n\n##  Copyright 2010-2012, 2014 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General settings\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MacOS stuff\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Select MacPorts compiler\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Activate SSE support for floating point\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CMTK config settings\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable FFTW, since we require MacPorts for this build anyway\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "core/config/gcc4.8-macports-OSX-10.6.cmake" : {
      "ObjectId" : "dbb10c2ab9cb5597fa3e917d98feecdf96155371",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2010 Greg Jefferis\n\n##\n\n##  Copyright 2010-2014 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General settings\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MacOS stuff\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Select MacPorts compiler\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Activate SSE support for floating point\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CMTK config settings\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable FFTW, since we require MacPorts for this build anyway\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "core/config/package.cmake" : {
      "ObjectId" : "1e5daa7a9ce906b96eb6e7b98f13896dca22ee70",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2010-2012 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable building N-CANDA pipelines and Greg's \"munger\" script\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/contrib/CMakeLists.txt" : {
      "ObjectId" : "510bfcbea601c768742f5e7e21a8e3727c593f32",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2012, 2013 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure third-party contributions.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/contrib/munger/CMakeLists.txt" : {
      "ObjectId" : "a601ddd1310bfb715020b105c96bf4e2cb6a2d53",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2012 SRI International\n\n##\n\n##  Copyright 2014 Ashley Manton / Greg Jefferis\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Configure for the build tree\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "## Configure for the install tree\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "core/gui/CMakeLists.txt" : {
      "ObjectId" : "1cfc4023e9f07f21e7803a1b7ac2d9f9b1716987",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2011, 2013 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/gui/fview/CMakeLists.txt" : {
      "ObjectId" : "10eb5954c542d0e1fe37c5fcdac791cf8eb0ee0e",
      "LastModified" : "2018-12-11T03:01:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2011 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/gui/triplanar/CMakeLists.txt" : {
      "ObjectId" : "eea207039e066b602cc1b91a1e2b237555f11c93",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2011 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/libs/Base/CMakeLists.txt" : {
      "ObjectId" : "036d31e4effc5317bb0dc7b116b720e15dfe9980",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2010 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2014 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sources of non-templated classes.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/libs/CMakeLists.txt" : {
      "ObjectId" : "3cca3cc48db2b4d665ed62cb04ea9864d5ae5c14",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2011 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/libs/GPU/CMakeLists.txt" : {
      "ObjectId" : "e518251f5d864d3b020ab8298a57bc5f004576ca",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2011 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2011 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sources of non-specific classes.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/libs/IO/CMakeLists.txt" : {
      "ObjectId" : "113c39ed3769abdb2ca7e4fc384bd618c896c3b5",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2004-2012, 2014 SRI International\n\n##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sources of non-templated classes.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/libs/Numerics/CMakeLists.txt" : {
      "ObjectId" : "25008e26f7cf262372a908fe0b94b765b17debc4",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2011 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sources of non-templated classes.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/libs/Pipeline/CMakeLists.txt" : {
      "ObjectId" : "b2b8e515516869a1e17f5a745197bcd416b5cc77",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2012 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sources of non-templated classes.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/libs/Qt/CMakeLists.txt" : {
      "ObjectId" : "91f78c188f5bb94b669448edeb62117beacc6313",
      "LastModified" : "2018-12-11T03:01:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2011 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sources of non-templated classes.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-------------------------------\n\n# Generate Moc Files\n\n#-------------------------------\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "core/libs/Recon/CMakeLists.txt" : {
      "ObjectId" : "b1953d98a6c65beb18fe5aceee5d3514c1885958",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2010 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sources of non-templated classes.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/libs/Registration/CMakeLists.txt" : {
      "ObjectId" : "43d89a3ebc307ba8a5497e7621629626042e60db",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2011 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sources of non-templated classes.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/libs/Segmentation/CMakeLists.txt" : {
      "ObjectId" : "60fa66b2912657a2ff86f103c4ca19e31ce17e3a",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2013 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sources of non-templated classes.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/libs/System/CMakeLists.txt" : {
      "ObjectId" : "ae1ca9dbdcc88ce2c4d400309f03968bdfac9188",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2010 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2013 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sources of non-templated classes.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/libs/Unstable/CMakeLists.txt" : {
      "ObjectId" : "5b7206a9dca47b7dae726a5137f6d2bca766d35d",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2012 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sources of non-templated classes.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/scripts/CMakeLists.txt" : {
      "ObjectId" : "e49167f3d2a2e8c11ccc874dcfa50e06ebba153b",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2009-2012, 2014 SRI International\n\n##\n\n##  Copyright 2012 Torsten Rohlfing\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Configure scripts for the build tree\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Configure SCRIPTS for the install tree\n\n# Link directories.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "core/testing/CMakeLists.txt" : {
      "ObjectId" : "188a6ad23b29a501faf3e808313a43f7346c922d",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2011 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/testing/apps/CMakeLists.txt" : {
      "ObjectId" : "21814f997edc002120000ba36c903bcff923f137",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2004-2014 SRI International\n\n##\n\n##  Copyright 1997-2011 Torsten Rohlfing\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# On Windows, remove \"\\r\" (CR) from line ends, which would make Cygwin's sh choke\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ==========================================\n\n# Tests for \"avg_adm\" tool\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ==========================================\n\n# Tests for \"dbtool\"\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ==========================================\n\n# Tests for \"describe\" tool\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ==========================================\n\n# Tests for \"destripe\" tool\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ==========================================\n\n# Tests for \"detect_adni_phantom\" tool\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ==========================================\n\n# Tests for \"detect_spheres_matched_filter\" tool\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ==========================================\n\n# Tests for \"epiunwarp\" tool\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ==========================================\n\n# Tests for \"fib2image\" tool\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ==========================================\n\n# Tests for \"fibxform\" tool\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ==========================================\n\n# Tests for \"geomatch\" tool\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ==========================================\n\n# Tests for \"groupwise_init\" tool\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ==========================================\n\n# Tests for \"groupwise_affine\" tool\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ==========================================\n\n# Tests for \"groupwise_warp\" tool\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ==========================================\n\n# Tests for xml, wiki, man, and help markups\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ==========================================\n\n# Tests for \"concat_affine\" tool\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ==========================================\n\n# Tests for \"average_images\" tool\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ==========================================\n\n# Tests for \"convert_warp\" tool\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ==========================================\n\n# Tests for \"convertx\" tool\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# ==========================================\n\n# Tests for \"dcm2image\" tool\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# ==========================================\n\n# Tests for \"dof2mat\" tool\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# ==========================================\n\n# Tests for \"filter\" tool\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# ==========================================\n\n# Tests for \"film\" tool\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ==========================================\n\n# Tests for \"fit_affine_xform_landmarks\" tool\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ==========================================\n\n# Tests for \"fit_affine_xform\" tool\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ==========================================\n\n# Tests for \"fit_affine_dfield\" tool\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ==========================================\n\n# Tests for \"fit_spline_dfield\" tool\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ==========================================\n\n# Tests for \"fit_spline_xform\" tool\n",
        "Line" : 408,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ==========================================\n\n# Tests for \"glm\" tool\n",
        "Line" : 412,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# ==========================================\n\n# Tests for \"gmm\" tool\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# ==========================================\n\n# Tests for \"gregxform\" tool\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# ==========================================\n\n# Tests for \"hausdorff\" tool\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# ==========================================\n\n# Tests for \"histogram\" tool\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# ==========================================\n\n# Tests for \"imagemath\" tool\n",
        "Line" : 445,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# ==========================================\n\n# Tests for \"interleaved_bad_slices\" tool\n",
        "Line" : 480,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# ==========================================\n\n# Tests for \"jidb\" tool\n",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# ==========================================\n\n# Tests for \"levelset\" tool\n",
        "Line" : 496,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# ==========================================\n\n# Tests for \"lmsba\" tool\n",
        "Line" : 504,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# ==========================================\n\n# Tests for \"lsba\" tool\n",
        "Line" : 508,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# ==========================================\n\n# Tests for \"lvote\" tool\n",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# ==========================================\n\n# Tests for \"make_initial_affine\" tool\n",
        "Line" : 516,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# ==========================================\n\n# Tests for \"mat2dof\" tool\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# ==========================================\n\n# Multi-channel registration requires hash map to build\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# ==========================================\n\n# Tests for \"mcaffine\" tool\n",
        "Line" : 554,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# ==========================================\n\n# Tests for \"mcwarp\" tool\n",
        "Line" : 559,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# ==========================================\n\n# Tests for \"mk_adni_phantom\" tool\n",
        "Line" : 566,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# ==========================================\n\n# Tests for \"mk_analyze_hdr\" tool\n",
        "Line" : 570,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# ==========================================\n\n# Tests for \"mk_nifti_hdr\" tool\n",
        "Line" : 578,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# ==========================================\n\n# Tests for \"mk_phantom_3d\" tool\n",
        "Line" : 588,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# ==========================================\n\n# Tests for \"reorient\" tool\n",
        "Line" : 605,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# ==========================================\n\n# Tests for \"split\" tool\n",
        "Line" : 623,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# ==========================================\n\n# Tests for \"overlap\" tool\n",
        "Line" : 631,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# ==========================================\n\n# Tests for \"probe\" tool\n",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# ==========================================\n\n# Tests for \"pxsearch\" tool\n",
        "Line" : 652,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# ==========================================\n\n# Tests for \"registration\" tool\n",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# ==========================================\n\n# Tests for \"registrationx\" tool\n",
        "Line" : 680,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# ==========================================\n\n# Tests for \"mrbias\" tool\n",
        "Line" : 719,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# ==========================================\n\n# Tests for \"reformatx\" tool\n",
        "Line" : 735,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "##\t\t   reformatxLinearFwdBwd\n",
        "Line" : 740,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# ==========================================\n\n# Tests for \"sba\" tool\n",
        "Line" : 762,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# ==========================================\n\n# Tests for \"sbai\" tool\n",
        "Line" : 766,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# ==========================================\n\n# Tests for \"sequence\" tool\n",
        "Line" : 770,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# ==========================================\n\n# Tests for \"similarity\" tool\n",
        "Line" : 774,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# ==========================================\n\n# Tests for \"streamxform\" tool\n",
        "Line" : 783,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# ==========================================\n\n# Tests for \"sympl\" tool\n",
        "Line" : 793,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# ==========================================\n\n# Tests for \"symplx\" tool\n",
        "Line" : 797,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# ==========================================\n\n# Tests for \"statistics\" tool\n",
        "Line" : 811,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# ==========================================\n\n# Tests for \"stream_pixels\" tool\n",
        "Line" : 825,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# ==========================================\n\n# Tests for \"ttest\" tool\n",
        "Line" : 833,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# ==========================================\n\n# Tests for \"unsplit\" tool\n",
        "Line" : 839,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# ==========================================\n\n# Tests for \"unwarp_image_phantom\" tool\n",
        "Line" : 847,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# ==========================================\n\n# Tests for \"volume_injection\" tool\n",
        "Line" : 864,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# ==========================================\n\n# Tests for \"volume_reconstruction\" tool\n",
        "Line" : 874,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# ==========================================\n\n# Tests for \"warp\" tool\n",
        "Line" : 883,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# ==========================================\n\n# Tests for \"warpx\" tool\n",
        "Line" : 900,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# ==========================================\n\n# Tests for \"xform2dfield\" tool\n",
        "Line" : 917,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# ==========================================\n\n# Tests for \"xform2scalar\" tool\n",
        "Line" : 934,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# ==========================================\n\n# Tests for \"vol2csv\" tool\n",
        "Line" : 943,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# ==========================================\n\n# Tests for \"vtkxform\" tool\n",
        "Line" : 947,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# ==========================================\n\n# Set up all tests\n",
        "Line" : 958,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# ==========================================\n\n# Set up test properties, now that the tests \n\n# have been defined.\n",
        "Line" : 977,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 82
    },
    "core/testing/gui/CMakeLists.txt" : {
      "ObjectId" : "e0cf93beab7d9fb44644e4ccefbbd92a19e6f314",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2009, 2014 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ==========================================\n\n# Tests for \"triplanar\" gui application\n\n# (batch mode)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ==========================================\n\n# Set up all tests\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "core/testing/libs/Base/CMakeLists.txt" : {
      "ObjectId" : "3d86ebb94c1344aa4c5591c89675b3f3151863c2",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2012 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ==========================================\n\n# Setup binary test drivers\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ==========================================\n\n# Tests for \"cmtk::DataGrid\" class\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ==========================================\n\n# Tests for \"cmtk::Region\" class\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ==========================================\n\n# Tests for \"cmtk::ParametricPlane\" class\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ==========================================\n\n# Tests for \"cmtk::ScalarImage\" class\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ==========================================\n\n# Tests for \"cmtk::SplineWarpXform\" class\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ==========================================\n\n# Tests for \"cmtk::SymmetricMatrix\" class\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ==========================================\n\n# Tests for \"cmtk::TypedArray\" class\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ==========================================\n\n# Tests for \"cmtk::UniformVolume\" class\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ==========================================\n\n# Tests for \"cmtk::MathUtil\" functions\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "core/testing/libs/CMakeLists.txt" : {
      "ObjectId" : "680160f2f5c128a5aa5e2c8798e7c500631206a4",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2010, 2013 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ==========================================\n\n# Delegate testing to separate subdirs for each library\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/testing/libs/GPU/CMakeLists.txt" : {
      "ObjectId" : "97ec8abd4b20dd722b9bb36a53a1616fbfc7d7fa",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2010 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ==========================================\n\n# Setup binary test drivers\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ==========================================\n\n# Tests for \"cmtk::DeviceHistogram\" class\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# ==========================================\n\n# Tests for \"cmtk::DeviceMemory\" class\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ==========================================\n\n# Tests for \"cmtk::UniformVolume\" class\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "core/testing/libs/IO/CMakeLists.txt" : {
      "ObjectId" : "0000a2f9626fb862f9c6372b4a37737130da3eef",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2010 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2012 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ==========================================\n\n# Setup binary test drivers\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ==========================================\n\n# Tests for \"cmtk::SQLite\" class\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "core/testing/libs/Registration/CMakeLists.txt" : {
      "ObjectId" : "d46b3333ffab7e46cf84ce3dc02ed5cae0b25f66",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2004-2012 SRI International\n\n##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ==========================================\n\n# Setup binary test drivers\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ==========================================\n\n# Tests for \"cmtk::TypedArraySimilarity\" class\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ==========================================\n\n# Tests for \"cmtk::XformImageDB\" class\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "core/testing/libs/System/CMakeLists.txt" : {
      "ObjectId" : "95480c5a58b07a4aa416eb5b6596e8d1a36870c3",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2012 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ==========================================\n\n# Setup binary test drivers\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ==========================================\n\n# Tests for \"StackBacktrace\" class\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ==========================================\n\n# Tests for \"StrUtility\" functions\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "doc/UserGuideCMTK/Makefile" : {
      "ObjectId" : "aac09637b1ba2a8a999989160aa3136350a00de1",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!gmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test0/clang-x86_64-Release.cmake" : {
      "ObjectId" : "2b7289c9e003d954f881cc7c61d0cf5ebd33495a",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2013 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision: 4129 $\n\n##\n\n##  $LastChangedDate: 2012-04-05 14:37:50 -0700 (Thu, 05 Apr 2012) $\n\n##\n\n##  $LastChangedBy: torstenrohlfing $\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test0/gcc-i686-Release.cmake" : {
      "ObjectId" : "2db5a8121670b8e37cae1b4a2949516c9a8b55ae",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2012 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test0/gcc-x86_64-Debug.cmake" : {
      "ObjectId" : "e2c87267623dc188e4e9b85c0948995abb74b570",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2010 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2013 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test0/gcc-x86_64-Minimal.cmake" : {
      "ObjectId" : "d134c51f4229ff660102909b9c6da22179bb1bd7",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2013 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test0/gcc-x86_64-NoSMP.cmake" : {
      "ObjectId" : "db6b19c64fff0274c5ed14d3c0412657424bf005",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2013 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test0/gcc-x86_64-Release-Bundled-SharedLibs.cmake" : {
      "ObjectId" : "cbfaa2c0ddcdcf731f58111fc14953a5e34eab6e",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2013 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test0/gcc-x86_64-Release-Bundled.cmake" : {
      "ObjectId" : "b4f50eb764fb8e81a3ba65942ebd0a6be8ef59f0",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2013 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test0/gcc-x86_64-Release-SharedLibs.cmake" : {
      "ObjectId" : "a03b6c79961cc3ee326116945551e3051e1af7be",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2013 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test0/gcc-x86_64-Release.cmake" : {
      "ObjectId" : "c28e3f78298b29d637a6645c24bcff86a1ffa951",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2013 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test0/solstudio12.3-x86_64-Release.cmake" : {
      "ObjectId" : "7c0cf7342261854b52467853cd326effe5204bc7",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2009 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2012 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision: 92 $\n\n##\n\n##  $LastChangedDate: 2009-06-23 09:56:05 -0700 (Tue, 23 Jun 2009) $\n\n##\n\n##  $LastChangedBy: torstenrohlfing $\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test3/config/clang-Debug.cmake" : {
      "ObjectId" : "7e7700a2992ff2daa80dc34f49215b7dd667687c",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2011 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2011, 2014 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test3/config/clang-Release-Bundled-Shared.cmake" : {
      "ObjectId" : "9c9530f19da6a37180d55aa5af349d2a13aee398",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2011 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2012, 2014 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test3/config/clang-Release-Bundled.cmake" : {
      "ObjectId" : "4abd48a5aa528fc95ce6cd58f3541a3421aee86f",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2011 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2012, 2014 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test3/config/clang-Release.cmake" : {
      "ObjectId" : "afa66b98c60f2f6ec3642acbe8a07683971b6e22",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2011 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2012, 2014 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test3/config/gcc-Debug.cmake" : {
      "ObjectId" : "07b604eab0f2aa9af10c53682e4a9d85459665c9",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2011 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2013 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test3/config/gcc-Release-Bundled.cmake" : {
      "ObjectId" : "4555fd07bdb8aaf90ac9d69a334aa4a0c74ab680",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2011 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2013 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test3/config/gcc-Release.cmake" : {
      "ObjectId" : "c5dbf3d30a724ae16ecb985efa0bf0ebe1663ba3",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2011 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2013 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test3/config/gcc-mp-Debug.cmake" : {
      "ObjectId" : "0c8328550a8e4b17fd0b53cbaf167c471f53a381",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2011 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2014 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision: 2841 $\n\n##\n\n##  $LastChangedDate: 2011-01-27 16:04:59 -0800 (Thu, 27 Jan 2011) $\n\n##\n\n##  $LastChangedBy: torstenrohlfing $\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test3/config/gcc-mp-Release.cmake" : {
      "ObjectId" : "fb1585011d959ae67e22a2a4e19eba57fbb3447e",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2011 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2014 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision: 2841 $\n\n##\n\n##  $LastChangedDate: 2011-01-27 16:04:59 -0800 (Thu, 27 Jan 2011) $\n\n##\n\n##  $LastChangedBy: torstenrohlfing $\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test3/config/llvm-Debug.cmake" : {
      "ObjectId" : "d81a2175b770abb36b1e0bc315e0b26363bf78c9",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2011 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2012, 2014 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test3/config/llvm-Release-Bundled-Shared.cmake" : {
      "ObjectId" : "f82d79c2ec5329783d75d91e890f3f8a90c5136e",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2011 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2012, 2014SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test3/config/llvm-Release-Bundled.cmake" : {
      "ObjectId" : "1bd09e746218982d6fa2d261140ac234bbce5cb0",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2011 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2012, 2014 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test3/config/llvm-Release.cmake" : {
      "ObjectId" : "3c51556538bc408c19233d656283764851ae942d",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2011 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2012, 2014 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test3/sdk/OSX-10.4.cmake" : {
      "ObjectId" : "531b9538a8b31dbc2b1a8a58a50cc9f70c792e63",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2011 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2011 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision: 2788 $\n\n##\n\n##  $LastChangedDate: 2011-01-20 14:02:10 -0800 (Thu, 20 Jan 2011) $\n\n##\n\n##  $LastChangedBy: torstenrohlfing $\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test3/sdk/OSX-10.5.cmake" : {
      "ObjectId" : "d42c2e239455f1d9306cc22674f87a5ee1fbcb15",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2011 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2011 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision: 2788 $\n\n##\n\n##  $LastChangedDate: 2011-01-20 14:02:10 -0800 (Thu, 20 Jan 2011) $\n\n##\n\n##  $LastChangedBy: torstenrohlfing $\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test3/sdk/OSX-10.6.cmake" : {
      "ObjectId" : "d15461a8007f16b1c9235c8476660e3c018f28b8",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2011 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2011 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision: 2788 $\n\n##\n\n##  $LastChangedDate: 2011-01-20 14:02:10 -0800 (Thu, 20 Jan 2011) $\n\n##\n\n##  $LastChangedBy: torstenrohlfing $\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "testclient/neuro-test3/tail.cmake" : {
      "ObjectId" : "f7d34eefa43193777da9a92d042e27592c4ef7fe",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 1997-2010 Torsten Rohlfing\n\n##\n\n##  Copyright 2004-2012 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision: 2788 $\n\n##\n\n##  $LastChangedDate: 2011-01-20 14:02:10 -0800 (Thu, 20 Jan 2011) $\n\n##\n\n##  $LastChangedBy: torstenrohlfing $\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "validation/CMakeLists.txt" : {
      "ObjectId" : "3337ebbec5def3016c0d1f18f92aafe57805c163",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2009-2011 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Remove when CMake >= 2.8.4 is required\n",
        "Line" : 30,
        "CharPositionInLine" : 33
      },
      "2" : {
        "Text" : "## libraries with full paths vs. search paths\n",
        "Line" : 33,
        "CharPositionInLine" : 32
      },
      "CommentCount" : 3
    },
    "validation/CURT/CMakeLists.txt" : {
      "ObjectId" : "7c1caed062afc04f7b463c1e06000e095d6e1760",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2009, 2010 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "validation/FindCMTK.cmake" : {
      "ObjectId" : "d312bf0f3de8728881f2f7c3e73f427c068cada5",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Based on CMake's \"FindITK.cmake\" script\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find a CMTK installation or build tree.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When CMTK is found, the CMTKConfig.cmake file is sourced to setup the\n\n# location and configuration of CMTK.  Please read this file, or\n\n# CMTKConfig.cmake.in from the CMTK source tree for the full list of\n\n# definitions.  Of particular interest is CMTK_USE_FILE, a CMake source file\n\n# that can be included to set the include directories, library directories,\n\n# and preprocessor macros.  In addition to the variables read from\n\n# CMTKConfig.cmake, this find module also defines\n\n#  CMTK_DIR  - The directory containing CMTKConfig.cmake.  \n\n#             This is either the root of the build tree, \n\n#             or the lib/InsightToolkit directory.  \n\n#             This is the only cache entry.\n\n#   \n\n#  CMTK_FOUND - Whether CMTK was found.  If this is true, \n\n#              CMTK_DIR is okay.\n\n#\n\n#  USE_CMTK_FILE - The full path to the UseCMTK.cmake file.  \n\n#                 This is provided for backward \n\n#                 compatability.  Use CMTK_USE_FILE\n\n#                 instead.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2010 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n#\n\n# CMake - Cross Platform Makefile Generator\n\n# Copyright 2000-2009 Kitware, Inc., Insight Software Consortium\n\n# All rights reserved.\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# \n\n# ------------------------------------------------------------------------------\n\n# \n\n# The above copyright and license notice applies to distributions of\n\n# CMake in source and binary form.  Some source files contain additional\n\n# notices of original copyright by their contributors; see each source\n\n# for details.  Third-party software packages supplied with CMake under\n\n# compatible licenses provide their own copyright notices documented in\n\n# corresponding subdirectories.\n\n# \n\n# ------------------------------------------------------------------------------\n\n# \n\n# CMake was initially developed by Kitware with the following sponsorship:\n\n# \n\n#  * National Library of Medicine at the National Institutes of Health\n\n#    as part of the Insight Segmentation and Registration Toolkit (ITK).\n\n# \n\n#  * US National Labs (Los Alamos, Livermore, Sandia) ASC Parallel\n\n#    Visualization Initiative.\n\n# \n\n#  * National Alliance for Medical Image Computing (NAMIC) is funded by the\n\n#    National Institutes of Health through the NIH Roadmap for Medical Research,\n\n#    Grant U54 EB005149.\n\n# \n\n#  * Kitware, Inc.\n\n#=============================================================================\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use the Config mode of the find_package() command to find CMTKConfig.\n\n# If this succeeds (possibly because CMTK_DIR is already set), the\n\n# command will have already loaded CMTKConfig.cmake and set CMTK_FOUND.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set USE_CMTK_FILE for backward-compatability.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "validation/RIRE/CMakeLists.txt" : {
      "ObjectId" : "bed15bf312d0eca13b8a681adaa13dd8cf270bf3",
      "LastModified" : "2016-02-01T14:36:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  Copyright 2009-2011 SRI International\n\n##\n\n##  This file is part of the Computational Morphometry Toolkit.\n\n##\n\n##  http://www.nitrc.org/projects/cmtk/\n\n##\n\n##  The Computational Morphometry Toolkit is free software: you can\n\n##  redistribute it and/or modify it under the terms of the GNU General Public\n\n##  License as published by the Free Software Foundation, either version 3 of\n\n##  the License, or (at your option) any later version.\n\n##\n\n##  The Computational Morphometry Toolkit is distributed in the hope that it\n\n##  will be useful, but WITHOUT ANY WARRANTY; without even the implied\n\n##  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##  GNU General Public License for more details.\n\n##\n\n##  You should have received a copy of the GNU General Public License along\n\n##  with the Computational Morphometry Toolkit.  If not, see\n\n##  <http://www.gnu.org/licenses/>.\n\n##\n\n##  $Revision$\n\n##\n\n##  $LastChangedDate$\n\n##\n\n##  $LastChangedBy$\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 95,
    "CMAKESOURCE" : 3,
    "MAKEFILE" : 2,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 4974
}