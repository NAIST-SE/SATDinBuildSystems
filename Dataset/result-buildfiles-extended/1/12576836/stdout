{
  "Repository" : "12576836",
  "Revision" : "HEAD",
  "ObjectId" : "d4309e9c1a9ff79790008958e5a2956aec67cd5f",
  "CommitTime" : "2017-02-19T20:04:42Z",
  "Files" : {
    "Emerald/CMakeLists.txt" : {
      "ObjectId" : "fe2271c6dda3bb78565f80b229a88295b2fef9ea",
      "LastModified" : "2016-03-05T19:53:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"HELLO\". CMakeLists files in this project can \n\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and \n\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# DO NOT MODIFY BELOW THIS LINE\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Posix does not support events, as found in Windows. Emerald provides an emulation layer\n\n# for the functionality, based on conditional variables.\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Exclude platform-specific bits for other platforms\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Force 32-bit builds. 64-bit compatibility is TODO.\n",
        "Line" : 323,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Copy the BASS library to the directory where the result binaries are stored.\n",
        "Line" : 354,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Copy a test MP3 file to the same directory. We need that file for the unit test project.\n",
        "Line" : 358,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Copy a test MP3 file to the same directory. We need that file for the unit test project.\n",
        "Line" : 363,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "Emerald/apps/CMakeLists.txt" : {
      "ObjectId" : "823bee55a1902663ec536a79c77b04463e9cd4df",
      "LastModified" : "2016-10-29T20:57:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"HELLO\". CMakeLists files in this project can \n\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and \n\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Windows-only projects.\n\n#\n\n# These either use curve editor or object browser (both of which are\n\n# not supported under Linux)\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Following are obsolete examples which no longer build or whose asset became\n\n# incompatible with the recent Emerald versions. As such, they are no longer\n\n# maintained.\n\n#\n\n# These examples are left as reference only.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ADD_SUBDIRECTORY(Test-ParticlesAgainstKdTree)\n\n# ADD_SUBDIRECTORY(Test-Particles)\n\n# ADD_SUBDIRECTORY(Test-Uber)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Emerald/apps/ColladaConverter/CMakeLists.txt" : {
      "ObjectId" : "2b36de3f8a57eba880d0aaed91c56cd2a1b0d648",
      "LastModified" : "2015-06-17T21:42:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"HELLO\". CMakeLists files in this project can \n\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and \n\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add precompiled header to SourcesVar\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Emerald/apps/Demo-Deadline2015/CMakeLists.txt" : {
      "ObjectId" : "1d8064c637c57212de22ee8a28b8225bdfddd407",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add precompiled header to SourcesVar\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Force a 32-bit build\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Emerald/apps/ES31AppTemplate/CMakeLists.txt" : {
      "ObjectId" : "98af405925178f37c4911374f92e7ea0dd301807",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"HELLO\". CMakeLists files in this project can \n\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and \n\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add precompiled header to SourcesVar\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Force a 32-bit build\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Emerald/apps/LW-AnimationDataExtractor/CMakeLists.txt" : {
      "ObjectId" : "6c43291fdc54ca59a8b380cca5146cbb774ef02a",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"HELLO\". CMakeLists files in this project can \n\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and \n\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Emerald/apps/SceneViewer/CMakeLists.txt" : {
      "ObjectId" : "e545f56b33b7a69dff9e451febe26f925d506eec",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"HELLO\". CMakeLists files in this project can \n\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and \n\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add precompiled header to SourcesVar\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Emerald/apps/Test-ComputeShaderSSBO/CMakeLists.txt" : {
      "ObjectId" : "c02f704b3e2cf89ceb69e3328feafdacc657421e",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"HELLO\". CMakeLists files in this project can \n\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and \n\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add precompiled header to SourcesVar\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Force a 32-bit build\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Emerald/apps/Test-DOF/CMakeLists.txt" : {
      "ObjectId" : "10734c8f78e159b3663f17228e0fab9bbed70aeb",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"HELLO\". CMakeLists files in this project can \n\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and \n\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add precompiled header to SourcesVar\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Copy the assets. Under VS, we need to copy the data to two different directories, so that\n\n# the debugging works out of the box..\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Force a 32-bit build\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "Emerald/apps/Test-DemoApp/CMakeLists.txt" : {
      "ObjectId" : "c9818e4bf4efb459784aa95a9e731c42a11904ba",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"HELLO\". CMakeLists files in this project can \n\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and \n\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add precompiled header to SourcesVar\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Force a 32-bit build\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Copy the assets. Under VS, we need to copy the data to two different directories, so that\n\n# the debugging works out of the box..\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Other blabbery ..\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Emerald/apps/Test-HDR/CMakeLists.txt" : {
      "ObjectId" : "720f981b7a39145330a5ba1940e173f039c6ab87",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"HELLO\". CMakeLists files in this project can \n\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and \n\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add precompiled header to SourcesVar\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Emerald/apps/Test-Julia4D/CMakeLists.txt" : {
      "ObjectId" : "94130ae592410b68d35b7db429ad92aefbe4fd69",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"HELLO\". CMakeLists files in this project can \n\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and \n\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add precompiled header to SourcesVar\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Force a 32-bit build\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Emerald/apps/Test-MarchingCubes/CMakeLists.txt" : {
      "ObjectId" : "fc481cba2999ad88d28767a67fd6244c3f54a2a3",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"HELLO\". CMakeLists files in this project can \n\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and \n\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add precompiled header to SourcesVar\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Force a 32-bit build\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Emerald/apps/Test-ObjectBrowser/CMakeLists.txt" : {
      "ObjectId" : "c0bb253b7d3e3a815a37d43976cd8a822554af99",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"HELLO\". CMakeLists files in this project can \n\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and \n\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add precompiled header to SourcesVar\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Emerald/apps/Test-Particles/CMakeLists.txt" : {
      "ObjectId" : "0786a869bc9fedf54b14f11252c0c2711de56d4d",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"HELLO\". CMakeLists files in this project can \n\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and \n\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add precompiled header to SourcesVar\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Emerald/apps/Test-ParticlesAgainstKdTree/CMakeLists.txt" : {
      "ObjectId" : "480152d47f072f7fa14b25de331a4e5b4175a5c8",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"HELLO\". CMakeLists files in this project can \n\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and \n\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add precompiled header to SourcesVar\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Emerald/apps/Test-Spinner/CMakeLists.txt" : {
      "ObjectId" : "452089f15280ee9b7d39946806d4aa55e413bb5f",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"HELLO\". CMakeLists files in this project can \n\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and \n\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add precompiled header to SourcesVar\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Force a 32-bit build\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Emerald/apps/Test-Template/CMakeLists.txt" : {
      "ObjectId" : "0d0a87b472d3b43bc90eaecf8a95c8addf2298c3",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"HELLO\". CMakeLists files in this project can \n\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and \n\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add precompiled header to SourcesVar\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Force a 32-bit build\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Emerald/apps/Test-Uber/CMakeLists.txt" : {
      "ObjectId" : "a5f7e7089dc644c12eb16e6f1f0d0b47961e2d9b",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"HELLO\". CMakeLists files in this project can \n\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and \n\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add precompiled header to SourcesVar\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Force a 32-bit build\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Emerald/deps/CMakeLists.txt" : {
      "ObjectId" : "7d5497301c3554f40668b45d0734edb18cdd798e",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"HELLO\". CMakeLists files in this project can \n\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and \n\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Emerald/deps/jpeg-6b/CMakeLists.txt" : {
      "ObjectId" : "c0830221f9132c6050a6f1869336fbf4aa92f587",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"HELLO\". CMakeLists files in this project can \n\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and \n\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Emerald/deps/libpng-1.2.36/CMakeLists.txt" : {
      "ObjectId" : "51794c7921915881b5aaa444f51b14e8672cfa93",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"HELLO\". CMakeLists files in this project can \n\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and \n\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Emerald/deps/libpng-1.2.36/Makefile.am" : {
      "ObjectId" : "f4639b70717f70f519020671678e78e4c3d9e39d",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am:\n\n#   Source file for Makefile.in (and hence Makefile)\n\n#\n\n# Makefile.am need only be changed on a major version number\n\n# change (e.g. libpng12 --> libpng13).  In that case seach\n\n# this file for every instance of the old base name (libpng12)\n\n# and change to the new one (libpng13), then change the\n\n# -version-number settings below so that the new values have\n\n# the correct major part (first field).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libpng does not follow GNU file name conventions\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# test programs - run on make check, make distcheck\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# man pages\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# generate the -config scripts if required\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# rules to build libpng, only build the old library on request\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# MAJOR UPGRADE: the version-number settings below must be changed.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -rpath is needed as automake doesn't know the directory\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Versioned symbols and restricted exports\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Only restricted exports when possible\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Avoid depending upon Character Ranges.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#distribute headers in /usr/include/libpng/*\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# pkg-config stuff, note that libpng.pc is always required in order\n\n# to get the correct library\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#extra source distribution files.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# install the .../include headers as links to the new ones\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# do evil things to libpng to cause libpng12 to be used\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16,
      "Errorlog" : "line 107:65 token recognition error at: '\\1'\nline 108:64 token recognition error at: '\\1'\n"
    },
    "Emerald/deps/libpng-1.2.36/scripts/CMakeLists.txt" : {
      "ObjectId" : "41b26e29463670563a21c93aa58fc33f7f9d5b6a",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007 Glenn Randers-Pehrson\n\n# For conditions of distribution and use, see copyright notice in png.h\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# needed packages\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# not needed on windows\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# COMMAND LINE OPTIONS\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#TODO:\n\n# PNG_CONSOLE_IO_SUPPORTED\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# maybe needs improving, but currently I don't know when we can enable what :)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# this env var is normally only set on win64\n",
        "Line" : 58,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# SET LIBNAME\n\n# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# to distinguish between debug and release lib\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# OUR SOURCES\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# SOME NEEDED DEFINITIONS\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# NOW BUILD OUR TARGET\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# does not work without changing name\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# does not work with msvc due to png_lib_ver issue\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#  add_test(pngtest ${PNG_SOURCE_DIR}/pngtest.png)\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# CREATE PKGCONFIG FILES\n\n# we use the same files like ./configure, so we have to set its vars\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# SET UP LINKS\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#    VERSION 0.${PNGLIB_RELEASE}.1.2.36\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# that's uncool on win32 - it overwrites our static import lib...\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# INSTALL\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# what's with libpng.txt and all the extra files?\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# UNINSTALL\n\n# do we need this?\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# DIST\n\n# do we need this?\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# to create msvc import lib for mingw compiled shared lib\n\n# pexports libpng.dll > libpng.def\n\n# lib /def:libpng.def /machine:x86\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "Emerald/deps/tinyxml2/CMakeLists.txt" : {
      "ObjectId" : "a9dc2fa6e7ed4a76561b6da69b2cb56edacb05da",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#enable_testing()\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CMAKE_BUILD_TOOL\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################\n\n# set lib version here\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################\n\n# Add common source \n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################\n\n# Add definitions\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "################################\n\n# Add targets\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Emerald/deps/zlib-1.2.8/CMakeLists.txt" : {
      "ObjectId" : "ec4e23ae5ffcaeaacd6b08340ec9252a1b910bbc",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"HELLO\". CMakeLists files in this project can \n\n# refer to the root source directory of the project as ${HELLO_SOURCE_DIR} and \n\n# to the root binary directory of the project as ${HELLO_BINARY_DIR}. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Emerald/gtest-1.6.0/CMakeLists.txt" : {
      "ObjectId" : "0fe26540b345fcab7b3260a8d7f6e784a1128e14",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 52,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dbuild_gtest_samples=ON flag when running cmake.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# The C++ Standard specifies tuple_element<int, class>.\n\n# Yet MSVC 10's <utility> declares tuple_element<size_t, class>.\n\n# That declaration conflicts with our own standard-conforming\n\n# tuple implementation.  Therefore using our own tuple with\n\n# MSVC 10 doesn't compile.\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 19
    },
    "Emerald/gtest-1.6.0/Makefile.am" : {
      "ObjectId" : "cb350b75bc5a58bba70faa8a070144a4a09d4330",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "Emerald/gtest-1.6.0/make/Makefile" : {
      "ObjectId" : "5b27b6a2cbb13e380ee75d186f553bfb5fa144b5",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building Google Test and using it in user\n\n# tests.  Please tweak it to suit your environment and project.  You\n\n# may want to move it to your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GTEST_HEADERS, which you can use in your own targets\n\n# but shouldn't modify.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flags passed to the preprocessor.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Builds gtest.a and gtest_main.a.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For simplicity and to avoid depending on Google Test's\n\n# implementation details, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Test\n\n# compiles fast and for ordinary users its source rarely changes.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Builds a sample test.  A test should link with either gtest.a or\n\n# gtest_main.a, depending on whether it defines its own main()\n\n# function.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "Emerald/gtest-1.6.0/scripts/test/Makefile" : {
      "ObjectId" : "cdff584637b7a6e9df1fa43ce8f588c43815e561",
      "LastModified" : "2015-11-11T18:31:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A Makefile for fusing Google Test and building a sample test against it.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make check  - makes everything and runs the built sample test.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Points to the root of fused Google Test, relative to where this file is.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paths to the fused gtest files.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find the sample test.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find gtest_main.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# We have no idea here whether pthreads is available in the system, so\n\n# disable its use.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "CMAKE" : 26,
    "MAKEFILE" : 2,
    "AUTOMAKE" : 2
  },
  "ElapsedTime" : 1901
}