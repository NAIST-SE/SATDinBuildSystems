{
  "Repository" : "25813263",
  "Revision" : "HEAD",
  "ObjectId" : "134b59a425da71f6dfa86332322cc63d47a88cd7",
  "CommitTime" : "2019-04-16T14:34:35Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "cd7315060da93cb29a31f1e9bcf08624c79c9e7b",
      "LastModified" : "2018-11-26T17:59:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n## For best results, first compile the project using the Ninja build-system.\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default value. A more accurate list is populated through `pkg-config` below if `seastar.pc` is available.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These paths are always available, since they're included in the repository. Additional DPDK headers are placed while\n\n# Seastar is built, and are captured in `SEASTAR_INCLUDE_DIRS` through parsing the Seastar pkg-config file (below).\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##\n\n## Populate the names of all source and header files in the indicated paths in a designated variable.\n\n##\n\n## When RECURSIVE is specified, directories are traversed recursively.\n\n##\n\n## Use: scan_scylla_source_directories(VAR my_result_var [RECURSIVE] PATHS [path1 path2 ...])\n\n##\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Although Seastar is an external project, it is common enough to explore the sources while doing\n\n## Scylla development that we'll treat the Seastar sources as part of this project for easier navigation.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Note that since CLion does not undestand GCC6 concepts, we always disable them (even if users configure otherwise).\n\n# CLion seems to have trouble with `-U` (macro undefinition), so we do it this way instead.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If the Seastar pkg-config information is available, append to the default flags.\n\n#\n\n# For ease of browsing the source code, we always pretend that DPDK is enabled.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The order matters here: prefer the \"static\" DPDK directories to any dynamic paths from pkg-config. Some files are only\n\n# available dynamically, though.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    }
  },
  "FileTypes" : {
    "CMAKE" : 1
  },
  "ElapsedTime" : 2969
}