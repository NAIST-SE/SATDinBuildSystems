{
  "Repository" : "11966289",
  "Revision" : "HEAD",
  "ObjectId" : "1f6c371faa563db30a2e26909bb8ea49ceefcda4",
  "CommitTime" : "2018-11-13T19:21:55Z",
  "Files" : {
    "engine/hexen2/Makefile" : {
      "ObjectId" : "d3f754cfd636ec6b4e706af5096aebdac342ea40",
      "LastModified" : "2018-10-03T08:22:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile for hexen2 client/server binaries using GCC.\n\n# $Id$\n\n#\n\n# Remember to \"make clean\" between different types of builds or targets.\n\n# Unix platforms require SDL !!!\n\n#\n\n# To cross-compile for Win32 on Unix: either pass the W32BUILD=1\n\n# argument to make, or export it.  Also see build_cross_win32.sh.\n\n# Requires: a mingw or mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for Win64 on Unix: either pass the W64BUILD=1\n\n# argument to make, or export it. Also see build_cross_win64.sh.\n\n# Requires: a mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for MacOSX on Unix: either pass the OSXBUILD=1\n\n# argument to make, or export it.  You would also need to pass a\n\n# suitable MACH_TYPE=xxx (ppc, x86, x86_64, or ppc64) argument to\n\n# make. Also see build_cross_osx.sh.\n\n#\n\n# To (cross-)compile for DOS: either pass the DOSBUILD=1 argument\n\n# to make, or export it. Also see build_cross_dos.sh. Requires: a\n\n# djgpp compiler toolchain.\n\n#\n\n# To see valid targets:\t\t\tmake help\n\n#\n\n# To use a compiler other than gcc:\tmake CC=compiler_name [other stuff]\n\n#\n\n# To use a different nasm-compatible assembler, such as yasm:\n\n#\t\t\t\t\tmake NASM=yasm [other stuff]\n\n#\n\n# To specify X installation at somewhere other than /usr/X11R6\n\n# such as /usr/X11R7 :\t\t\tmake X11BASE=/your/x11/path [other stuff]\n\n#\n\n# To build for the demo version:\tmake DEMO=1 [other stuff]\n\n#\n\n# To build a debug version:\t\tmake DEBUG=1 [other stuff]\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# PATH SETTINGS:\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GENERAL OPTIONS (customize as required)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# X directory\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the sdl-config command\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# use fast x86 assembly on ia32 machines? (auto-disabled for\n\n# any other cpu.)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# use optimized m68k assembly for amiga\n\n# requires vasm from http://sun.hasenbraten.de/vasm/\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# link to the opengl libraries at compile time? (defaults\n\n# to no, so the binaries will dynamically load the necessary\n\n# libraries and functions at runtime.)\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# enable evil 3dfx glide hacks for native hardware gamma for\n\n# the old Voodoo Graphics and Voodoo2 cards?  (Linux/FreeBSD)\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# enable sound support?\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ALSA audio support? (req: alsa-lib and alsa-kernel modules\n\n# >= 1.0.1.  v0.9.8 and v1.0.0 might work, but not supported.\n\n# If not Linux, ALSA will be automatically be disabled.)\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# OSS audio support? (for Unix. enabled on Linux and FreeBSD.\n\n# automatically disabled on other platforms: see snd_sys.h)\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# SUN audio support? (enabled on OpenBSD, NetBSD and SUN.\n\n# automatically disabled on others: see snd_sys.h)\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# SDL audio support? (enabled on all unix-like platforms.)\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# include target's MIDI driver if available?\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# CDAudio support?\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# use SDL cdaudio? (otherwise platform specific cdrom code will\n\n# be used.  The only problem with SDL_cdrom is that it lacks\n\n# proper volume controls.  See cd_unix.h for the availability of\n\n# platform specific cdaudio drivers.\n\n# NOTE: SDL dropped cdaudio support in version 1.3.0 and later!)\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# link to the directx libraries at compile time? (otherwise, load\n\n# the necessary DLLs and functions dynamically at runtime, which\n\n# ensures our exe to function on ancient windows versions without\n\n# a directx installation.)\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# enable startup splash screens? (windows)\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# use SciTech MGL for Win32 software video driver? (auto-disabled\n\n# for Win64. if disabled, the DIB-only software video driver will\n\n# be used)\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# use WinSock2 instead of WinSock-1.1? (disabled for w32 for compat.\n\n# with old Win95 machines.) (enabled for Win64 in the win64 section.)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# use Serial driver for DOS networking?\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# use WatTCP (WATT-32) for DOS UDP networking?\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# use Beame & Whiteside TCP for DOS networking?\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# use MPATH for DOS UDP networking under Win9x?\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable/disable codecs for streaming music support:\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# either mikmod or xmp\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# either timidity (preferred) or wildmidi (both possible\n\n# but not needed nor meaningful)\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# which library to use for mp3 decoding: mad or mpg123\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# which library to use for ogg decoding: vorbis or tremor\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# whether the codecs allocate on the zone instead of\n\n# system memory (set to yes for DOS builds, for example)\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# include the common dirty stuff\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Names of the binaries\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#############################################################\n\n# Compiler flags\n\n#############################################################\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Overrides for the default CPUFLAGS\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# optimization flags\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# NOTE: -fomit-frame-pointer is broken with ancient gcc versions!!\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# linkage may be sensitive to order: add SYSLIBS after all others.\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# compiler includes\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# nasm includes: the trailing directory separator matters\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# windows resource compiler includes\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# end of compiler flags\n\n#############################################################\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#############################################################\n\n# Other build flags\n\n#############################################################\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# disable x86 assembly if it is not an x86.\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# disable m68k assembly if it is not a m68k.\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# This activates some extra code in hexen2/hexenworld C source\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#############################################################\n\n# OpenGL settings\n\n#############################################################\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#############################################################\n\n# streaming music initial setup\n\n#############################################################\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# sanity checking for decoder library options\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#############################################################\n\n# Mac OS X flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# @rpath can be used when targeting 10.5+\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# x86 requires 10.4.\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# require 10.2 for ppc builds (midi_osx.c requirement.)\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# require 10.5 for ppc64 (actually SDL doesn't support ppc64.)\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# require 10.6 for amd64 builds (not 10.5: SDL's requirement.)\n\n# bundle1.o is needed for dyld_stub_binding_helper\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# enable the extra codecs\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# no need for timidity, we have a midi driver\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# note: midi_mac.c requires -Wl,-framework,QuickTime which we are not using anymore.\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Unix builds rely on SDL:\n\n# SDLQUAKE must be defined for all SDL using platforms/targets\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# not relying on sdl-config command and assuming\n\n# /Library/Frameworks/SDL.framework is available\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# default to our local SDL[2].framework for build\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# End of Mac OS X settings\n\n#############################################################\n",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "#############################################################\n\n# Unix flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# common unix:\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# alsa is only for linux\n",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# snd_alsa uses dlopen() & co.\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Unix builds rely on SDL:\n\n# SDLQUAKE must be defined for all SDL using platforms/targets\n",
        "Line" : 457,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# opus and opusfile put their *.h under <includedir>/opus,\n\n# but they include the headers without the opus directory\n\n# prefix and rely on pkg-config. ewww...\n",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# End of Unix settings\n\n#############################################################\n",
        "Line" : 472,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "#############################################################\n\n# OS/2 flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 476,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# OS/2, using EMX:\n",
        "Line" : 480,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# -fomit-frame-pointer/-ffast-math seems to cause trouble\n\n# with EMX at least with the old compilers I tried.\n",
        "Line" : 487,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# using SDL for now:\n",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# SDLQUAKE must be defined for all SDL using platforms/targets\n",
        "Line" : 516,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# End of OS/2 settings\n\n#############################################################\n",
        "Line" : 549,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "#############################################################\n\n# DOS flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 553,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Use x86 assembly for DOS\n",
        "Line" : 559,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# no need for Opus on DOS\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# no need for Flac on DOS\n",
        "Line" : 569,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# use Tremor as Vorbis decoder for DOS?\n",
        "Line" : 571,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# make DOS decoders allocate on the zone\n",
        "Line" : 573,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# DOS GL experiments:\n",
        "Line" : 593,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# enable dynamic loading of gl functions\n",
        "Line" : 597,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# enable 3dfx gamma hacks\n",
        "Line" : 599,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# compile which gl driver in: mesa, sage, or fxmesa. (only one.)\n",
        "Line" : 602,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# choose which dosgl api(s) to support. (at least one.)\n",
        "Line" : 616,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "#SYSLIBS += -lm\n",
        "Line" : 623,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# PCI sound card support through libau\n",
        "Line" : 625,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# PCI sound card support as a DXE module\n",
        "Line" : 627,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# End of DOS settings\n\n#############################################################\n",
        "Line" : 672,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "#############################################################\n\n# Win32 flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 676,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# enable the extra codecs\n",
        "Line" : 687,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# timidity not needed, we have a midi driver. if you want it,\n\n# comment out the following\n",
        "Line" : 693,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# End of Win32 settings\n\n#############################################################\n",
        "Line" : 749,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "#############################################################\n\n# Win64 flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 753,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# enable the extra codecs\n",
        "Line" : 764,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# timidity not needed, we have a midi driver. if you want it,\n\n# comment out the following\n",
        "Line" : 770,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# cant use MGL for Win64\n",
        "Line" : 775,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# use winsock2 for win64\n",
        "Line" : 777,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# End of Win64 settings\n\n#############################################################\n",
        "Line" : 831,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "#############################################################\n\n# MorphOS flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 835,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# MorphOS builds can use SDL or native code\n",
        "Line" : 840,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# no native cdaudio code yet\n",
        "Line" : 845,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# don't build the CAMD MIDI driver yet\n",
        "Line" : 848,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# dynamic loading of ogl functions doesn't work\n",
        "Line" : 857,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# SDLQUAKE must be defined for all SDL using platforms/targets\n",
        "Line" : 900,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# End of MorphOS settings\n\n#############################################################\n",
        "Line" : 907,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "#############################################################\n\n# AROS flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 911,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "# AROS builds can use SDL or native code\n",
        "Line" : 916,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "# no native cdaudio code yet\n",
        "Line" : 921,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "# native ogl code need this:\n",
        "Line" : 923,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "# don't build the CAMD MIDI driver yet\n",
        "Line" : 926,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "#USE_X86_ASM=no\n",
        "Line" : 930,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "# use the old AROSMesa api (default), or the new glA api\n",
        "Line" : 934,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "# both WildMidi and the local timidity work nice on AROS\n",
        "Line" : 946,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "# SDLQUAKE must be defined for all SDL using platforms/targets\n",
        "Line" : 982,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "# End of AROS settings\n\n#############################################################\n",
        "Line" : 989,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "#############################################################\n\n# AmigaOS flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 993,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "# crt: libnix or clib2:\n",
        "Line" : 998,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "# Don't use SDL on AmigaOS\n",
        "Line" : 1001,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "# no native cdaudio code yet\n",
        "Line" : 1006,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "# -fomit-frame-pointer / -ffast-math causes trouble with gcc2.95\n",
        "Line" : 1012,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "# for M68K assembly:\n",
        "Line" : 1024,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "# for extra missing headers\n",
        "Line" : 1031,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "# AmiTCP SDK\n",
        "Line" : 1033,
        "CharPositionInLine" : 0
      },
      "125" : {
        "Text" : "# Build for which Amiga GL implementation:\n\n# Either amesa (StormMesa), or minigl (Hyperion's MiniGL 1.2)\n",
        "Line" : 1036,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "#GL_DEFS+= -DUSE_MGLAPI=1\n",
        "Line" : 1041,
        "CharPositionInLine" : 0
      },
      "127" : {
        "Text" : "# dynamic loading of ogl functions doesn't work\n",
        "Line" : 1050,
        "CharPositionInLine" : 0
      },
      "128" : {
        "Text" : "#use integer-only Tremor as Vorbis decoder for m68k-amigaos\n",
        "Line" : 1057,
        "CharPositionInLine" : 0
      },
      "129" : {
        "Text" : "# SDLQUAKE must be defined for all SDL using platforms/targets\n",
        "Line" : 1084,
        "CharPositionInLine" : 0
      },
      "130" : {
        "Text" : "# End of AmigaOS settings\n\n#############################################################\n",
        "Line" : 1091,
        "CharPositionInLine" : 0
      },
      "131" : {
        "Text" : "#############################################################\n\n# Streaming music settings\n\n#############################################################\n",
        "Line" : 1095,
        "CharPositionInLine" : 0
      },
      "132" : {
        "Text" : "# we use pkg-config on unix\n",
        "Line" : 1125,
        "CharPositionInLine" : 0
      },
      "133" : {
        "Text" : "# End of streaming music settings\n\n#############################################################\n",
        "Line" : 1169,
        "CharPositionInLine" : 0
      },
      "134" : {
        "Text" : "#############################################################\n\n# Finalize things after the system specific overrides:\n\n#############################################################\n",
        "Line" : 1172,
        "CharPositionInLine" : 0
      },
      "135" : {
        "Text" : "# linux 3dfx gamma evil hack\n",
        "Line" : 1181,
        "CharPositionInLine" : 0
      },
      "136" : {
        "Text" : "#\n\n#############################################################\n",
        "Line" : 1189,
        "CharPositionInLine" : 0
      },
      "137" : {
        "Text" : "# Rules for turning source files into .o files\n",
        "Line" : 1193,
        "CharPositionInLine" : 0
      },
      "138" : {
        "Text" : "#%.o: %.s\n\n#\t$(AS) $(ASFLAGS) -o $@ $<\n",
        "Line" : 1215,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "# Objects\n",
        "Line" : 1223,
        "CharPositionInLine" : 0
      },
      "140" : {
        "Text" : "# Intel asm objects\n",
        "Line" : 1225,
        "CharPositionInLine" : 0
      },
      "141" : {
        "Text" : "# M68K asm objects\n",
        "Line" : 1260,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "# Sound objects\n",
        "Line" : 1281,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "# end of Sound objects\n",
        "Line" : 1329,
        "CharPositionInLine" : 0
      },
      "144" : {
        "Text" : "# MIDI objects\n",
        "Line" : 1332,
        "CharPositionInLine" : 0
      },
      "145" : {
        "Text" : "# not using midi_mac.c\n",
        "Line" : 1356,
        "CharPositionInLine" : 0
      },
      "146" : {
        "Text" : "# end of MIDI objects\n",
        "Line" : 1368,
        "CharPositionInLine" : 0
      },
      "147" : {
        "Text" : "# CDAudio objects\n",
        "Line" : 1371,
        "CharPositionInLine" : 0
      },
      "148" : {
        "Text" : "# end of CDAudio objects\n",
        "Line" : 1403,
        "CharPositionInLine" : 0
      },
      "149" : {
        "Text" : "# Other platform specific object settings\n",
        "Line" : 1406,
        "CharPositionInLine" : 0
      },
      "150" : {
        "Text" : "# get inet_addr() and inet_ntoa() either from Watt-32\n\n# or from our local implementation\n",
        "Line" : 1455,
        "CharPositionInLine" : 0
      },
      "151" : {
        "Text" : "#\tdosasm.o\n",
        "Line" : 1464,
        "CharPositionInLine" : 0
      },
      "152" : {
        "Text" : "# unix clients use SDL:\n",
        "Line" : 1475,
        "CharPositionInLine" : 0
      },
      "153" : {
        "Text" : "# OSX clients use SDL:\n",
        "Line" : 1487,
        "CharPositionInLine" : 0
      },
      "154" : {
        "Text" : "## c2p1x1_8_c5_030.o c2p1x1_8_c5_040.o\n",
        "Line" : 1534,
        "CharPositionInLine" : 0
      },
      "155" : {
        "Text" : "# Final list of objects\n",
        "Line" : 1541,
        "CharPositionInLine" : 0
      },
      "156" : {
        "Text" : "# Targets\n",
        "Line" : 1646,
        "CharPositionInLine" : 0
      },
      "157" : {
        "Text" : "#default: glh2\n\n#all: default\n",
        "Line" : 1649,
        "CharPositionInLine" : 0
      },
      "158" : {
        "Text" : "# workaround stupid AmiTCP SDK mess for old aos3\n",
        "Line" : 1675,
        "CharPositionInLine" : 0
      },
      "159" : {
        "Text" : "# deps for *.c including another *.c\n",
        "Line" : 1683,
        "CharPositionInLine" : 0
      },
      "160" : {
        "Text" : "# extra rule for snd_timidity.c because of timidity.h and libtimidity.a\n",
        "Line" : 1687,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 161
    },
    "engine/hexen2/server/Makefile" : {
      "ObjectId" : "ab8d05b714216ac7ef20c8f09c63d115bcef3e6e",
      "LastModified" : "2018-10-03T08:22:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile for Hexen II dedicated server (h2ded) using GCC.\n\n# $Id$\n\n#\n\n# Remember to \"make clean\" between different types of builds or targets.\n\n#\n\n# To cross-compile for Win32 on Unix: either pass the W32BUILD=1\n\n# argument to make, or export it.  Also see build_cross_win32.sh.\n\n# Requires: a mingw or mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for Win64 on Unix: either pass the W64BUILD=1\n\n# argument to make, or export it. Also see build_cross_win64.sh.\n\n# Requires: a mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for MacOSX on Unix: either pass the OSXBUILD=1\n\n# argument to make, or export it.  You would also need to pass a\n\n# suitable MACH_TYPE=xxx (ppc, x86, x86_64, or ppc64) argument to\n\n# make. Also see build_cross_osx.sh.\n\n#\n\n# To (cross-)compile for DOS: either pass the DOSBUILD=1 argument\n\n# to make, or export it. Also see build_cross_dos.sh. Requires: a\n\n# djgpp compiler toolchain.\n\n#\n\n# To use a compiler other than gcc:\tmake CC=compiler_name [other stuff]\n\n#\n\n# To build for the demo version:\tmake DEMO=1 [other stuff]\n\n#\n\n# To build a debug version:\t\tmake DEBUG=1 [other stuff]\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# PATH SETTINGS:\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GENERAL OPTIONS (customize as required)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# use WinSock2 instead of WinSock-1.1? (disabled for w32 for compat.\n\n# with old Win95 machines.) (enabled for Win64 in the win64 section.)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# DOS Serial driver is useless in h2ded\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# use WatTCP (WATT-32) for DOS UDP networking?\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# use Beame & Whiteside TCP for DOS networking?\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# use MPATH for DOS UDP networking under Win9x?\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# include the common dirty stuff\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Names of the binaries\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#############################################################\n\n# Compiler flags\n\n#############################################################\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Overrides for the default CPUFLAGS\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# optimization flags\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# NOTE: -fomit-frame-pointer is broken with ancient gcc versions!!\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# linkage may be sensitive to order: add SYSLIBS after all others.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# compiler includes\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# end of compiler flags\n\n#############################################################\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#############################################################\n\n# Other build flags\n\n#############################################################\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This activates some extra code in hexen2/hexenworld C source\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#############################################################\n\n# DOS flags/settings\n\n#############################################################\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#SYSLIBS += -lm\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# End of DOS settings\n\n#############################################################\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#############################################################\n\n# OS/2 flags/settings\n\n#############################################################\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# -fomit-frame-pointer/-ffast-math seems to cause trouble\n\n# with EMX at least with the old compilers I tried.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# End of OS/2 settings\n\n#############################################################\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#############################################################\n\n# Win32 flags/settings\n\n#############################################################\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# End of Win32 settings\n\n#############################################################\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#############################################################\n\n# Win64 flags/settings\n\n#############################################################\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# use winsock2 for win64\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# End of Win64 settings\n\n#############################################################\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#############################################################\n\n# Mac OS X flags/settings\n\n#############################################################\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# require 10.5 for 64 bit builds\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# End of Mac OS X settings\n\n#############################################################\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#############################################################\n\n# Unix flags/settings\n\n#############################################################\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# common unix:\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# End of Unix settings\n\n#############################################################\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#############################################################\n\n# MorphOS flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# End of MorphOS settings\n\n#############################################################\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#############################################################\n\n# AROS flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# End of AROS settings\n\n#############################################################\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#############################################################\n\n# AmigaOS flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# crt: libnix or clib2:\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# -fomit-frame-pointer / -ffast-math causes trouble with gcc2.95\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# for extra missing headers\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# AmiTCP SDK\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# End of AmigaOS settings\n\n#############################################################\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Rules for turning source files into .o files\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Objects\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Platform specific object settings\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# get inet_addr() and inet_ntoa() either from Watt-32\n\n# or from our local implementation\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Final list of objects\n",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Targets\n",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# workaround stupid AmiTCP SDK mess for old aos3\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# deps for *.c including another *.c\n",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 54
    },
    "engine/hexenworld/client/Makefile" : {
      "ObjectId" : "0474b20a8947ca3e267de30bdcc7b9b7e331d47d",
      "LastModified" : "2018-10-03T08:22:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile for hexenworld clients using GCC.\n\n# $Id$\n\n#\n\n# Remember to \"make clean\" between different types of builds or targets.\n\n# Unix platforms require SDL !!!\n\n#\n\n# To cross-compile for Win32 on Unix: either pass the W32BUILD=1\n\n# argument to make, or export it.  Also see build_cross_win32.sh.\n\n# Requires: a mingw or mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for Win64 on Unix: either pass the W64BUILD=1\n\n# argument to make, or export it. Also see build_cross_win64.sh.\n\n# Requires: a mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for MacOSX on Unix: either pass the OSXBUILD=1\n\n# argument to make, or export it.  You would also need to pass a\n\n# suitable MACH_TYPE=xxx (ppc, x86, x86_64, or ppc64) argument to\n\n# make. Also see build_cross_osx.sh.\n\n#\n\n# To (cross-)compile for DOS: either pass the DOSBUILD=1 argument\n\n# to make, or export it. Also see build_cross_dos.sh. Requires: a\n\n# djgpp compiler toolchain.\n\n#\n\n# To see valid targets:\t\t\tmake help\n\n#\n\n# To use a compiler other than gcc:\tmake CC=compiler_name [other stuff]\n\n#\n\n# To use a different nasm-compatible assembler, such as yasm:\n\n#\t\t\t\t\tmake NASM=yasm [other stuff]\n\n#\n\n# To specify X installation at somewhere other than /usr/X11R6\n\n# such as /usr/X11R7 :\t\t\tmake X11BASE=/your/x11/path [other stuff]\n\n#\n\n# To build for the demo version:\tmake DEMO=1 [other stuff]\n\n#\n\n# To build a debug version:\t\tmake DEBUG=1 [other stuff]\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# PATH SETTINGS:\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GENERAL OPTIONS (customize as required)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# X directory\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the sdl-config command\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# use fast x86 assembly on ia32 machines? (auto-disabled for\n\n# any other cpu.)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# use optimized m68k assembly for amiga\n\n# requires vasm from http://sun.hasenbraten.de/vasm/\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# link to the opengl libraries at compile time? (defaults\n\n# to no, so the binaries will dynamically load the necessary\n\n# libraries and functions at runtime.)\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# enable evil 3dfx glide hacks for native hardware gamma for\n\n# the old Voodoo Graphics and Voodoo2 cards?  (Linux/FreeBSD)\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# enable sound support?\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ALSA audio support? (req: alsa-lib and alsa-kernel modules\n\n# >= 1.0.1.  v0.9.8 and v1.0.0 might work, but not supported.\n\n# If not Linux, ALSA will be automatically be disabled.)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# OSS audio support? (for Unix. enabled on Linux and FreeBSD.\n\n# automatically disabled on other platforms: see snd_sys.h)\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# SUN audio support? (enabled on OpenBSD, NetBSD and SUN.\n\n# automatically disabled on others: see snd_sys.h)\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# SDL audio support? (enabled on all unix-like platforms.)\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# include target's MIDI driver if available?\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# CDAudio support?\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# use SDL cdaudio? (otherwise platform specific cdrom code will\n\n# be used.  The only problem with SDL_cdrom is that it lacks\n\n# proper volume controls.  See cd_unix.h for the availability of\n\n# platform specific cdaudio drivers.\n\n# NOTE: SDL dropped cdaudio support in version 1.3.0 and later!)\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# link to the directx libraries at compile time? (otherwise, load\n\n# the necessary DLLs and functions dynamically at runtime, which\n\n# ensures our exe to function on ancient windows versions without\n\n# a directx installation.)\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# enable startup splash screens? (windows)\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# use SciTech MGL for Win32 software video driver? (auto-disabled\n\n# for Win64. if disabled, the DIB-only software video driver will\n\n# be used)\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# use WinSock2 instead of WinSock-1.1? (disabled for w32 for compat.\n\n# with old Win95 machines.) (enabled for Win64 in the win64 section.)\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Enable/disable codecs for streaming music support:\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# either mikmod or xmp\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# either timidity (preferred) or wildmidi (both possible\n\n# but not needed nor meaningful)\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# which library to use for mp3 decoding: mad or mpg123\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# which library to use for ogg decoding: vorbis or tremor\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# whether the codecs allocate on the zone instead of\n\n# system memory (set to yes for DOS builds, for example)\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# include the common dirty stuff\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Names of the binaries\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#############################################################\n\n# Compiler flags\n\n#############################################################\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Overrides for the default CPUFLAGS\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# optimization flags\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# NOTE: -fomit-frame-pointer is broken with ancient gcc versions!!\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# linkage may be sensitive to order: add SYSLIBS after all others.\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# compiler includes\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# nasm includes: the trailing directory separator matters\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# windows resource compiler includes\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# end of compiler flags\n\n#############################################################\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#############################################################\n\n# Other build flags\n\n#############################################################\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# disable x86 assembly if it is not an x86.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# disable m68k assembly if it is not a m68k.\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# This activates some extra code in hexen2/hexenworld C source\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#############################################################\n\n# OpenGL settings\n\n#############################################################\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#############################################################\n\n# streaming music initial setup\n\n#############################################################\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# sanity checking for decoder library options\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#############################################################\n\n# Mac OS X flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# @rpath can be used when targeting 10.5+\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# x86 requires 10.4.\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# require 10.2 for ppc builds (midi_osx.c requirement.)\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# require 10.5 for ppc64 (actually SDL doesn't support ppc64.)\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# require 10.6 for amd64 builds (not 10.5: SDL's requirement.)\n\n# bundle1.o is needed for dyld_stub_binding_helper\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# enable the extra codecs\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# no need for timidity, we have a midi driver\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# note: midi_mac.c requires -Wl,-framework,QuickTime which we are not using anymore.\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Unix builds rely on SDL:\n\n# SDLQUAKE must be defined for all SDL using platforms/targets\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# not relying on sdl-config command and assuming\n\n# /Library/Frameworks/SDL.framework is available\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# default to our local SDL[2].framework for build\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# End of Mac OS X settings\n\n#############################################################\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "#############################################################\n\n# Unix flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# common unix:\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# alsa is only for linux\n",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# snd_alsa uses dlopen() & co.\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Unix builds rely on SDL:\n\n# SDLQUAKE must be defined for all SDL using platforms/targets\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# opus and opusfile put their *.h under <includedir>/opus,\n\n# but they include the headers without the opus directory\n\n# prefix and rely on pkg-config. ewww...\n",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# End of Unix settings\n\n#############################################################\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "#############################################################\n\n# OS/2 flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# OS/2, using EMX:\n",
        "Line" : 441,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# -fomit-frame-pointer/-ffast-math seems to cause trouble\n\n# with EMX at least with the old compilers I tried.\n",
        "Line" : 448,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# using SDL for now:\n",
        "Line" : 452,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# SDLQUAKE must be defined for all SDL using platforms/targets\n",
        "Line" : 477,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# End of OS/2 settings\n\n#############################################################\n",
        "Line" : 510,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "#############################################################\n\n# DOS flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Use x86 assembly for DOS\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# no need for Opus on DOS\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# no need for Flac on DOS\n",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# use Tremor as Vorbis decoder for DOS?\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# make DOS decoders allocate on the zone\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# WATT-32 is needed for DOS\n",
        "Line" : 539,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# DOS GL experiments:\n",
        "Line" : 544,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# enable dynamic loading of gl functions\n",
        "Line" : 548,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# enable 3dfx gamma hacks\n",
        "Line" : 550,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# compile which gl driver in: mesa, sage, or fxmesa. (only one.)\n",
        "Line" : 553,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# choose which dosgl api(s) to support. (at least one.)\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "#SYSLIBS += -lm\n",
        "Line" : 574,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# PCI sound card support through libau\n",
        "Line" : 576,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# PCI sound card support as a DXE module\n",
        "Line" : 578,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# End of DOS settings\n\n#############################################################\n",
        "Line" : 623,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "#############################################################\n\n# Win32 flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 627,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# enable the extra codecs\n",
        "Line" : 638,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# timidity not needed, we have a midi driver. if you want it,\n\n# comment out the following\n",
        "Line" : 644,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# End of Win32 settings\n\n#############################################################\n",
        "Line" : 700,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "#############################################################\n\n# Win64 flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 704,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# enable the extra codecs\n",
        "Line" : 715,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# timidity not needed, we have a midi driver. if you want it,\n\n# comment out the following\n",
        "Line" : 721,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# cant use MGL for Win64\n",
        "Line" : 726,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# use winsock2 for win64\n",
        "Line" : 728,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# End of Win64 settings\n\n#############################################################\n",
        "Line" : 782,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "#############################################################\n\n# MorphOS flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 786,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# MorphOS builds can use SDL or native code\n",
        "Line" : 791,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# no native cdaudio code yet\n",
        "Line" : 796,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# don't build the CAMD MIDI driver yet\n",
        "Line" : 799,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# dynamic loading of ogl functions doesn't work\n",
        "Line" : 808,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# SDLQUAKE must be defined for all SDL using platforms/targets\n",
        "Line" : 851,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# End of MorphOS settings\n\n#############################################################\n",
        "Line" : 858,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "#############################################################\n\n# AROS flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 862,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# AROS builds can use SDL or native code\n",
        "Line" : 867,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# no native cdaudio code yet\n",
        "Line" : 872,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "# native ogl code need this:\n",
        "Line" : 874,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "# don't build the CAMD MIDI driver yet\n",
        "Line" : 877,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "#USE_X86_ASM=no\n",
        "Line" : 881,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "# use the old AROSMesa api (default), or the new glA api\n",
        "Line" : 885,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "# both WildMidi and the local timidity work nice on AROS\n",
        "Line" : 897,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "# SDLQUAKE must be defined for all SDL using platforms/targets\n",
        "Line" : 933,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "# End of AROS settings\n\n#############################################################\n",
        "Line" : 940,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "#############################################################\n\n# AmigaOS flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 944,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "# crt: libnix or clib2:\n",
        "Line" : 949,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "# Don't use SDL on AmigaOS\n",
        "Line" : 952,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "# no native cdaudio code yet\n",
        "Line" : 957,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "# -fomit-frame-pointer / -ffast-math causes trouble with gcc2.95\n",
        "Line" : 963,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "# for M68K assembly:\n",
        "Line" : 975,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "# for extra missing headers\n",
        "Line" : 982,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "# AmiTCP SDK\n",
        "Line" : 984,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "# Build for which Amiga GL implementation:\n\n# Either amesa (StormMesa), or minigl (Hyperion's MiniGL 1.2)\n",
        "Line" : 987,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "#GL_DEFS+= -DUSE_MGLAPI=1\n",
        "Line" : 992,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "# dynamic loading of ogl functions doesn't work\n",
        "Line" : 1001,
        "CharPositionInLine" : 0
      },
      "125" : {
        "Text" : "#use integer-only Tremor as Vorbis decoder for m68k-amigaos\n",
        "Line" : 1008,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "# SDLQUAKE must be defined for all SDL using platforms/targets\n",
        "Line" : 1035,
        "CharPositionInLine" : 0
      },
      "127" : {
        "Text" : "# End of AmigaOS settings\n\n#############################################################\n",
        "Line" : 1042,
        "CharPositionInLine" : 0
      },
      "128" : {
        "Text" : "#############################################################\n\n# Streaming music settings\n\n#############################################################\n",
        "Line" : 1046,
        "CharPositionInLine" : 0
      },
      "129" : {
        "Text" : "# we use pkg-config on unix\n",
        "Line" : 1076,
        "CharPositionInLine" : 0
      },
      "130" : {
        "Text" : "# End of streaming music settings\n\n#############################################################\n",
        "Line" : 1120,
        "CharPositionInLine" : 0
      },
      "131" : {
        "Text" : "#############################################################\n\n# Finalize things after the system specific overrides:\n\n#############################################################\n",
        "Line" : 1123,
        "CharPositionInLine" : 0
      },
      "132" : {
        "Text" : "# linux 3dfx gamma evil hack\n",
        "Line" : 1132,
        "CharPositionInLine" : 0
      },
      "133" : {
        "Text" : "#\n\n#############################################################\n",
        "Line" : 1140,
        "CharPositionInLine" : 0
      },
      "134" : {
        "Text" : "# Rules for turning source files into .o files\n",
        "Line" : 1144,
        "CharPositionInLine" : 0
      },
      "135" : {
        "Text" : "#%.o: %.s\n\n#\t$(AS) $(ASFLAGS) -o $@ $<\n",
        "Line" : 1172,
        "CharPositionInLine" : 0
      },
      "136" : {
        "Text" : "# Objects\n",
        "Line" : 1180,
        "CharPositionInLine" : 0
      },
      "137" : {
        "Text" : "# Intel asm objects\n",
        "Line" : 1182,
        "CharPositionInLine" : 0
      },
      "138" : {
        "Text" : "# M68K asm objects\n",
        "Line" : 1216,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "# Sound objects\n",
        "Line" : 1235,
        "CharPositionInLine" : 0
      },
      "140" : {
        "Text" : "# end of Sound objects\n",
        "Line" : 1283,
        "CharPositionInLine" : 0
      },
      "141" : {
        "Text" : "# MIDI objects\n",
        "Line" : 1286,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "# not using midi_mac.c\n",
        "Line" : 1310,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "# end of MIDI objects\n",
        "Line" : 1322,
        "CharPositionInLine" : 0
      },
      "144" : {
        "Text" : "# CDAudio objects\n",
        "Line" : 1325,
        "CharPositionInLine" : 0
      },
      "145" : {
        "Text" : "# end of CDAudio objects\n",
        "Line" : 1357,
        "CharPositionInLine" : 0
      },
      "146" : {
        "Text" : "# Other platform specific object settings\n",
        "Line" : 1360,
        "CharPositionInLine" : 0
      },
      "147" : {
        "Text" : "#\tdosasm.o\n",
        "Line" : 1398,
        "CharPositionInLine" : 0
      },
      "148" : {
        "Text" : "# unix clients use SDL:\n",
        "Line" : 1408,
        "CharPositionInLine" : 0
      },
      "149" : {
        "Text" : "# OSX clients use SDL:\n",
        "Line" : 1419,
        "CharPositionInLine" : 0
      },
      "150" : {
        "Text" : "## c2p1x1_8_c5_030.o c2p1x1_8_c5_040.o\n",
        "Line" : 1463,
        "CharPositionInLine" : 0
      },
      "151" : {
        "Text" : "# Final list of objects\n",
        "Line" : 1469,
        "CharPositionInLine" : 0
      },
      "152" : {
        "Text" : "# Targets\n",
        "Line" : 1567,
        "CharPositionInLine" : 0
      },
      "153" : {
        "Text" : "#default: glhw\n\n#all: default\n",
        "Line" : 1570,
        "CharPositionInLine" : 0
      },
      "154" : {
        "Text" : "# workaround stupid AmiTCP SDK mess for old aos3\n",
        "Line" : 1596,
        "CharPositionInLine" : 0
      },
      "155" : {
        "Text" : "# extra rule for snd_timidity.c because of timidity.h and libtimidity.a\n",
        "Line" : 1600,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 156
    },
    "engine/hexenworld/server/Makefile" : {
      "ObjectId" : "1100b24325269fda8a2e4fadba5dba5ba9f5f53e",
      "LastModified" : "2018-10-03T08:22:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile for hexenworld server using GCC.\n\n# $Id$\n\n#\n\n# Remember to \"make clean\" between different types of builds or targets.\n\n#\n\n# To cross-compile for Win32 on Unix: either pass the W32BUILD=1\n\n# argument to make, or export it.  Also see build_cross_win32.sh.\n\n# Requires: a mingw or mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for Win64 on Unix: either pass the W64BUILD=1\n\n# argument to make, or export it. Also see build_cross_win64.sh.\n\n# Requires: a mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for MacOSX on Unix: either pass the OSXBUILD=1\n\n# argument to make, or export it.  You would also need to pass a\n\n# suitable MACH_TYPE=xxx (ppc, x86, x86_64, or ppc64) argument to\n\n# make. Also see build_cross_osx.sh.\n\n#\n\n# To (cross-)compile for DOS: either pass the DOSBUILD=1 argument\n\n# to make, or export it. Also see build_cross_dos.sh. Requires: a\n\n# djgpp compiler toolchain.\n\n#\n\n# To use a compiler other than gcc:\tmake CC=compiler_name [other stuff]\n\n#\n\n# To build for the demo version:\tmake DEMO=1 [other stuff]\n\n#\n\n# To build a debug version:\t\tmake DEBUG=1 [other stuff]\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# PATH SETTINGS:\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GENERAL OPTIONS (customize as required)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# use WinSock2 instead of WinSock-1.1? (disabled for w32 for compat.\n\n# with old Win95 machines.) (enabled for Win64 in the win64 section.)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# include the common dirty stuff\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Names of the binaries\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#############################################################\n\n# Compiler flags\n\n#############################################################\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Overrides for the default CPUFLAGS\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# optimization flags\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# NOTE: -fomit-frame-pointer is broken with ancient gcc versions!!\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# linkage may be sensitive to order: add SYSLIBS after all others.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# compiler includes\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# end of compiler flags\n\n#############################################################\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#############################################################\n\n# Other build flags\n\n#############################################################\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This activates some extra code in hexen2/hexenworld C source\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#############################################################\n\n# DOS flags/settings\n\n#############################################################\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# WATT-32 is needed for DOS\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#SYSLIBS += -lm\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# End of DOS settings\n\n#############################################################\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#############################################################\n\n# OS/2 flags/settings\n\n#############################################################\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# -fomit-frame-pointer/-ffast-math seems to cause trouble\n\n# with EMX at least with the old compilers I tried.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# End of OS/2 settings\n\n#############################################################\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#############################################################\n\n# Win32 flags/settings\n\n#############################################################\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# End of Win32 settings\n\n#############################################################\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#############################################################\n\n# Win64 flags/settings\n\n#############################################################\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# use winsock2 for win64\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# End of Win64 settings\n\n#############################################################\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#############################################################\n\n# Mac OS X flags/settings\n\n#############################################################\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# require 10.5 for 64 bit builds\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# End of Mac OS X settings\n\n#############################################################\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#############################################################\n\n# Unix flags/settings\n\n#############################################################\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# common unix:\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# End of Unix settings\n\n#############################################################\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#############################################################\n\n# MorphOS flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# End of MorphOS settings\n\n#############################################################\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#############################################################\n\n# AROS flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# End of AROS settings\n\n#############################################################\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#############################################################\n\n# AmigaOS flags/settings and overrides:\n\n#############################################################\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# crt: libnix or clib2:\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# -fomit-frame-pointer / -ffast-math causes trouble with gcc2.95\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# for extra missing headers\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# AmiTCP SDK\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# End of AmigaOS settings\n\n#############################################################\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Rules for turning source files into .o files\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Objects\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Platform specific object settings\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Final list of objects\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Targets\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# workaround stupid AmiTCP SDK mess for old aos3\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 49
    },
    "h2patch/Makefile" : {
      "ObjectId" : "f6ef693a2a27c45f45e49d83c2db467009f8db94",
      "LastModified" : "2018-04-17T12:10:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile for the H2PATCH tool - Unix platforms.\n\n# $Id$\n\n#\n\n# To build a debug version:\t\tmake DEBUG=yes\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# refuse the stupid 'cc' default of make\n\n# which not necessarily exist everywhere\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# when XD3_USE_LARGEFILE64 is not defined, xdelta3 defaults\n\n# to 64 bit xoff_t.\n\n# define XD3_USE_LARGEFILE64 as 0 or 1.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# make xdelta3 to use stdio:\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Targets\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Rules for turning source files into .o files\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "hw_utils/hwmaster/Makefile" : {
      "ObjectId" : "1de551981601b7d5bcc7a4acd317833967ac4bec",
      "LastModified" : "2018-10-03T08:22:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile for hexenworld master server using GCC.\n\n# $Id$\n\n#\n\n# To cross-compile for Win32 on Unix: either pass the W32BUILD=1\n\n# argument to make, or export it.  Also see build_cross_win32.sh.\n\n# Requires: a mingw or mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for Win64 on Unix: either pass the W64BUILD=1\n\n# argument to make, or export it. Also see build_cross_win64.sh.\n\n# Requires: a mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for MacOSX on Unix: either pass the OSXBUILD=1\n\n# argument to make, or export it.  You would also need to pass a\n\n# suitable MACH_TYPE=xxx (ppc, x86, x86_64, or ppc64) argument to\n\n# make. Also see build_cross_osx.sh.\n\n#\n\n# To build a debug version:\t\tmake DEBUG=1 [other stuff]\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# PATH SETTINGS:\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use WinSock2 instead of WinSock-1.1? (disabled for w32 for compat.\n\n# with old Win95 machines.) (enabled for Win64 below.)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# include the common dirty stuff\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# use winsock2 for win64\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Names of the binaries\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Compiler flags\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Overrides for the default CPUFLAGS\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# compiler includes\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Other build flags\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# require 10.5 for 64 bit builds\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# crt: libnix or clib2:\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# for extra missing headers\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# AmiTCP SDK\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Rules for turning source files into .o files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Objects\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Platform specific object settings\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Targets\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# workaround stupid AmiTCP SDK mess for old aos3\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "hw_utils/hwmquery/Makefile" : {
      "ObjectId" : "2021608a50667719e1cb28f9694448401fc2d1a3",
      "LastModified" : "2018-10-03T08:22:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile for hwmquery using GCC.\n\n# $Id$\n\n#\n\n# To cross-compile for Win32 on Unix: either pass the W32BUILD=1\n\n# argument to make, or export it.  Also see build_cross_win32.sh.\n\n# Requires: a mingw or mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for Win64 on Unix: either pass the W64BUILD=1\n\n# argument to make, or export it. Also see build_cross_win64.sh.\n\n# Requires: a mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for MacOSX on Unix: either pass the OSXBUILD=1\n\n# argument to make, or export it.  You would also need to pass a\n\n# suitable MACH_TYPE=xxx (ppc, x86, x86_64, or ppc64) argument to\n\n# make. Also see build_cross_osx.sh.\n\n#\n\n# To build a debug version:\t\tmake DEBUG=1 [other stuff]\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# PATH SETTINGS:\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use WinSock2 instead of WinSock-1.1? (disabled for w32 for compat.\n\n# with old Win95 machines.) (enabled for Win64 below.)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# include the common dirty stuff\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# use winsock2 for win64\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Names of the binaries\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Compiler flags\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Overrides for the default CPUFLAGS\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# compiler includes\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Other build flags\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# require 10.5 for 64 bit builds\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# crt: libnix or clib2:\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# for extra missing headers\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# AmiTCP SDK\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Rules for turning source files into .o files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Objects\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Targets\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# workaround stupid AmiTCP SDK mess for old aos3\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "hw_utils/hwrcon/Makefile" : {
      "ObjectId" : "04d47196fb7c5f3e2b011ca5d060db336eacfacf",
      "LastModified" : "2018-10-03T08:22:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile for hwrcon and hwterm using GCC.\n\n# $Id$\n\n#\n\n# To cross-compile for Win32 on Unix: either pass the W32BUILD=1\n\n# argument to make, or export it.  Also see build_cross_win32.sh.\n\n# Requires: a mingw or mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for Win64 on Unix: either pass the W64BUILD=1\n\n# argument to make, or export it. Also see build_cross_win64.sh.\n\n# Requires: a mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for MacOSX on Unix: either pass the OSXBUILD=1\n\n# argument to make, or export it.  You would also need to pass a\n\n# suitable MACH_TYPE=xxx (ppc, x86, x86_64, or ppc64) argument to\n\n# make. Also see build_cross_osx.sh.\n\n#\n\n# To build a debug version:\t\tmake DEBUG=1 [other stuff]\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# PATH SETTINGS:\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use WinSock2 instead of WinSock-1.1? (disabled for w32 for compat.\n\n# with old Win95 machines.) (enabled for Win64 below.)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# include the common dirty stuff\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# use winsock2 for win64\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Names of the binaries\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Compiler flags\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Overrides for the default CPUFLAGS\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# compiler includes\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Other build flags\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# require 10.5 for 64 bit builds\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# crt: libnix or clib2:\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# for extra missing headers\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# AmiTCP SDK\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Rules for turning source files into .o files\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Objects\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Targets\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# workaround stupid AmiTCP SDK mess for old aos3\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "libs/timidity/Makefile" : {
      "ObjectId" : "615ccce167abfd7bc8424fa220b80f709b980af5",
      "LastModified" : "2018-04-17T12:10:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile for building a static timidity library using GCC.\n\n# $Id$\n\n#\n\n# To cross-compile for Win32 on Unix: either pass the W32BUILD=1\n\n# argument to make, or export it.  Also see build_win32.sh script.\n\n# Requires: a mingw or mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for Win64 on Unix: either pass the W64BUILD=1\n\n# argument to make, or export it. Also see build_win64.sh script.\n\n# Requires: a mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for MacOSX on Unix: either pass the OSXBUILD=1\n\n# argument to make, or export it.  You would also need to pass a\n\n# suitable MACH_TYPE=xxx (ppc, x86, x86_64, or ppc64) argument to\n\n# make. Also see build_cross_osx.sh.\n\n#\n\n# To (cross-)compile for DOS: either pass the DOSBUILD=1 argument\n\n# to make, or export it. Also see build_dos.sh script. Requires: a\n\n# djgpp compiler toolchain.\n\n#\n\n# To build a debug version:\tmake DEBUG=yes\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include the common dirty stuff\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# compiler flags, customize as needed\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Overrides for the default CPUFLAGS\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# NOTE: -fomit-frame-pointer is broken with ancient gcc versions!!\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#CFLAGS += -DTIMIDITY_DEBUG\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# require 10.5 for 64 bit builds\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#INCLUDES += -I$(OSLIBS)/windows/misc/include\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#INCLUDES += -I$(OSLIBS)/windows/misc/include\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# nothing extra is needed\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# crt: libnix or clib2\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# for extra missing headers\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# nothing extra is needed\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# -fomit-frame-pointer/-ffast-math seems to cause trouble\n\n# with EMX at least with the old compilers I tried.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Targets\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Rules for turning source files into .o files\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# object dependencies:\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# rule for target:\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "utils/bspinfo/Makefile" : {
      "ObjectId" : "9e7d095bbae83eff1f0cee85c9ac7f34e0c435c2",
      "LastModified" : "2018-04-17T12:10:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile for hexen2 mapping tools using GCC.\n\n# $Id$\n\n#\n\n# To cross-compile for Win32 on Unix: either pass the W32BUILD=1\n\n# argument to make, or export it.  Also see build_cross_win32.sh.\n\n# Requires: a mingw or mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for Win64 on Unix: either pass the W64BUILD=1\n\n# argument to make, or export it. Also see build_cross_win64.sh.\n\n# Requires: a mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for MacOSX on Unix: either pass the OSXBUILD=1\n\n# argument to make, or export it.  You would also need to pass a\n\n# suitable MACH_TYPE=xxx (ppc, x86, x86_64, or ppc64) argument to\n\n# make. Also see build_cross_osx.sh.\n\n#\n\n# To build a debug version:\t\tmake DEBUG=1 [other stuff]\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Path settings:\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include the common dirty stuff\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Names of the binaries\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compiler flags\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Overrides for the default CPUFLAGS\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other build flags\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# nothing extra is needed\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# crt: libnix or clib2:\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# for extra missing headers\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# require 10.5 for 64 bit builds\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# nothing extra is needed\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Targets\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Rules for turning source files into .o files\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Objects\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "utils/dcc/Makefile" : {
      "ObjectId" : "5d4a74aba4e5fa19b7e5431952f82dd4d21d182e",
      "LastModified" : "2018-04-17T12:10:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile for hexen2 dhcc tool using GCC.\n\n# $Id$\n\n#\n\n# To cross-compile for Win32 on Unix: either pass the W32BUILD=1\n\n# argument to make, or export it.  Also see build_cross_win32.sh.\n\n# Requires: a mingw or mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for Win64 on Unix: either pass the W64BUILD=1\n\n# argument to make, or export it. Also see build_cross_win64.sh.\n\n# Requires: a mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for MacOSX on Unix: either pass the OSXBUILD=1\n\n# argument to make, or export it.  You would also need to pass a\n\n# suitable MACH_TYPE=xxx (ppc, x86, x86_64, or ppc64) argument to\n\n# make. Also see build_cross_osx.sh.\n\n#\n\n# To build a debug version:\t\tmake DEBUG=1 [other stuff]\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Path settings:\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include the common dirty stuff\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Names of the binaries\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compiler flags\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Overrides for the default CPUFLAGS\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other build flags\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# nothing extra is needed\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# crt: libnix or clib2:\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# -lm is needed for atof()\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# for extra missing headers\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# require 10.5 for 64 bit builds\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# nothing extra is needed\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Targets\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Rules for turning source files into .o files\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Objects\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "utils/genmodel/Makefile" : {
      "ObjectId" : "d4dc16044c5e5795a4eae3675d9e6ac442e90946",
      "LastModified" : "2018-04-17T12:10:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile for hexen2 genmodel tool using GCC.\n\n# $Id$\n\n#\n\n# To cross-compile for Win32 on Unix: either pass the W32BUILD=1\n\n# argument to make, or export it.  Also see build_cross_win32.sh.\n\n# Requires: a mingw or mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for Win64 on Unix: either pass the W64BUILD=1\n\n# argument to make, or export it. Also see build_cross_win64.sh.\n\n# Requires: a mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for MacOSX on Unix: either pass the OSXBUILD=1\n\n# argument to make, or export it.  You would also need to pass a\n\n# suitable MACH_TYPE=xxx (ppc, x86, x86_64, or ppc64) argument to\n\n# make. Also see build_cross_osx.sh.\n\n#\n\n# To builda debug version:\t\tmake DEBUG=1 [other stuff]\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Path settings:\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include the common dirty stuff\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Names of the binaries\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compiler flags\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Overrides for the default CPUFLAGS\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other build flags\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#LDFLAGS += -lm\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# nothing extra is needed\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# crt: libnix or clib2:\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# for extra missing headers\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# require 10.5 for 64 bit builds\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Targets\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Rules for turning source files into .o files\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Objects\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "utils/hcc/Makefile" : {
      "ObjectId" : "96116b5328326d03742a414c536df29e2fd0f95d",
      "LastModified" : "2018-04-17T12:10:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile for hexen2 hcc tool using GCC.\n\n# $Id$\n\n#\n\n# To cross-compile for Win32 on Unix: either pass the W32BUILD=1\n\n# argument to make, or export it.  Also see build_cross_win32.sh.\n\n# Requires: a mingw or mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for Win64 on Unix: either pass the W64BUILD=1\n\n# argument to make, or export it. Also see build_cross_win64.sh.\n\n# Requires: a mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for MacOSX on Unix: either pass the OSXBUILD=1\n\n# argument to make, or export it.  You would also need to pass a\n\n# suitable MACH_TYPE=xxx (ppc, x86, x86_64, or ppc64) argument to\n\n# make. Also see build_cross_osx.sh.\n\n#\n\n# To build a debug version:\t\tmake DEBUG=1 [other stuff]\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Path settings:\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include the common dirty stuff\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Names of the binaries\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compiler flags\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Overrides for the default CPUFLAGS\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other build flags\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# nothing extra is needed\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# crt: libnix or clib2:\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# -lm is needed for atof()\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# for extra missing headers\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# require 10.5 for 64 bit builds\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# nothing extra is needed\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Targets\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Rules for turning source files into .o files\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Objects\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "utils/jsh2color/Makefile" : {
      "ObjectId" : "b2f82e6f03d45db9dfb43e27c62620c10ae35dc6",
      "LastModified" : "2018-04-17T12:10:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile for hexen2 jsh2colour tool using GCC.\n\n# $Id$\n\n#\n\n# To cross-compile for Win32 on Unix: either pass the W32BUILD=1\n\n# argument to make, or export it.  Also see build_cross_win32.sh.\n\n# Requires: a mingw or mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for Win64 on Unix: either pass the W64BUILD=1\n\n# argument to make, or export it. Also see build_cross_win64.sh.\n\n# Requires: a mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for MacOSX on Unix: either pass the OSXBUILD=1\n\n# argument to make, or export it.  You would also need to pass a\n\n# suitable MACH_TYPE=xxx (ppc, x86, x86_64, or ppc64) argument to\n\n# make. Also see build_cross_osx.sh.\n\n#\n\n# To build a debug version:\t\tmake DEBUG=1 [other stuff]\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Path settings:\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include the common dirty stuff\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Names of the binaries\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compiler flags\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Overrides for the default CPUFLAGS\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other build flags\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#LDFLAGS += -lm\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# FIXME: default 2 MB stack is not enough:\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# FIXME: default 2 MB stack is not enough:\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# nothing extra is needed\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# crt: libnix or clib2:\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# for extra missing headers\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# require 10.5 for 64 bit builds\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# threads: use sprocsp code for IRIX, pthreads for others.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Targets\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Rules for turning source files into .o files\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Objects\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "utils/light/Makefile" : {
      "ObjectId" : "2605e754a9a9c1be3011d202ebbc8c0320baa7c0",
      "LastModified" : "2018-04-17T12:10:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile for hexen2 mapping tools using GCC.\n\n# $Id$\n\n#\n\n# To cross-compile for Win32 on Unix: either pass the W32BUILD=1\n\n# argument to make, or export it.  Also see build_cross_win32.sh.\n\n# Requires: a mingw or mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for Win64 on Unix: either pass the W64BUILD=1\n\n# argument to make, or export it. Also see build_cross_win64.sh.\n\n# Requires: a mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for MacOSX on Unix: either pass the OSXBUILD=1\n\n# argument to make, or export it.  You would also need to pass a\n\n# suitable MACH_TYPE=xxx (ppc, x86, x86_64, or ppc64) argument to\n\n# make. Also see build_cross_osx.sh.\n\n#\n\n# To build a debug version:\t\tmake DEBUG=1 [other stuff]\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Path settings:\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include the common dirty stuff\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Names of the binaries\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compiler flags\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Overrides for the default CPUFLAGS\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other build flags\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#LDFLAGS += -lm\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# nothing extra is needed\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# crt: libnix or clib2:\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# for extra missing headers\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# require 10.5 for 64 bit builds\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# threads: use sprocsp code for IRIX, pthreads for others.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Targets\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Rules for turning source files into .o files\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Objects\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "utils/pak/Makefile" : {
      "ObjectId" : "24c4914751111aee9c6a4bd1c5689b06af7c1cd5",
      "LastModified" : "2018-04-17T12:10:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile for hexen2 pak tools using GCC.\n\n# $Id$\n\n#\n\n# To cross-compile for Win32 on Unix: either pass the W32BUILD=1\n\n# argument to make, or export it.  Also see build_cross_win32.sh.\n\n# Requires: a mingw or mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for Win64 on Unix: either pass the W64BUILD=1\n\n# argument to make, or export it. Also see build_cross_win64.sh.\n\n# Requires: a mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for MacOSX on Unix: either pass the OSXBUILD=1\n\n# argument to make, or export it.  You would also need to pass a\n\n# suitable MACH_TYPE=xxx (ppc, x86, x86_64, or ppc64) argument to\n\n# make. Also see build_cross_osx.sh.\n\n#\n\n# To build a debug version:\t\tmake DEBUG=1 [other stuff]\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Path settings:\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include the common dirty stuff\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Names of the binaries\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compiler flags\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Overrides for the default CPUFLAGS\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other build flags\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# nothing extra is needed\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# crt: libnix or clib2:\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# for extra missing headers\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# require 10.5 for 64 bit builds\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# nothing extra is needed\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Targets\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Rules for turning source files into .o files\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Objects\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "utils/qbsp/Makefile" : {
      "ObjectId" : "1c68c23895a3abcb6b994d411e01b45b83cb68a4",
      "LastModified" : "2018-04-17T12:10:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile for hexen2 mapping tools using GCC.\n\n# $Id$\n\n#\n\n# To cross-compile for Win32 on Unix: either pass the W32BUILD=1\n\n# argument to make, or export it.  Also see build_cross_win32.sh.\n\n# Requires: a mingw or mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for Win64 on Unix: either pass the W64BUILD=1\n\n# argument to make, or export it. Also see build_cross_win64.sh.\n\n# Requires: a mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for MacOSX on Unix: either pass the OSXBUILD=1\n\n# argument to make, or export it.  You would also need to pass a\n\n# suitable MACH_TYPE=xxx (ppc, x86, x86_64, or ppc64) argument to\n\n# make. Also see build_cross_osx.sh.\n\n#\n\n# To build a debug version:\t\tmake DEBUG=1 [other stuff]\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Path settings:\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include the common dirty stuff\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Names of the binaries\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compiler flags\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Overrides for the default CPUFLAGS\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other build flags\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#LDFLAGS += -lm\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# nothing extra is needed\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# crt: libnix or clib2:\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# for extra missing headers\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# require 10.5 for 64 bit builds\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Targets\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Rules for turning source files into .o files\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Objects\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "utils/qfiles/Makefile" : {
      "ObjectId" : "c8f5e1df716b046be8097ecd69e3736ab9b92a51",
      "LastModified" : "2018-04-17T12:10:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile for hexen2 qfiles tool using GCC.\n\n# $Id$\n\n#\n\n# To cross-compile for Win32 on Unix: either pass the W32BUILD=1\n\n# argument to make, or export it.  Also see build_cross_win32.sh.\n\n# Requires: a mingw or mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for Win64 on Unix: either pass the W64BUILD=1\n\n# argument to make, or export it. Also see build_cross_win64.sh.\n\n# Requires: a mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for MacOSX on Unix: either pass the OSXBUILD=1\n\n# argument to make, or export it.  You would also need to pass a\n\n# suitable MACH_TYPE=xxx (ppc, x86, x86_64, or ppc64) argument to\n\n# make. Also see build_cross_osx.sh.\n\n#\n\n# To build a debug version:\t\tmake DEBUG=1 [other stuff]\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Path settings:\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include the common dirty stuff\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Names of the binaries\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compiler flags\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Overrides for the default CPUFLAGS\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other build flags\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# nothing extra is needed\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# crt: libnix or clib2:\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# for extra missing headers\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# require 10.5 for 64 bit builds\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# nothing extra is needed\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Targets\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Rules for turning source files into .o files\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Objects\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "utils/texutils/bsp2wal/Makefile" : {
      "ObjectId" : "b1fff8819797b07a2930901cfa81b1b611d02fb2",
      "LastModified" : "2018-04-17T12:10:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile for hexen2 bsp2wal tool using GCC.\n\n# $Id$\n\n#\n\n# To cross-compile for Win32 on Unix: either pass the W32BUILD=1\n\n# argument to make, or export it.  Also see build_cross_win32.sh.\n\n# Requires: a mingw or mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for Win64 on Unix: either pass the W64BUILD=1\n\n# argument to make, or export it. Also see build_cross_win64.sh.\n\n# Requires: a mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for MacOSX on Unix: either pass the OSXBUILD=1\n\n# argument to make, or export it.  You would also need to pass a\n\n# suitable MACH_TYPE=xxx (ppc, x86, x86_64, or ppc64) argument to\n\n# make. Also see build_cross_osx.sh.\n\n#\n\n# To build a debug version:\t\tmake DEBUG=1 [other stuff]\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Path settings:\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include the common dirty stuff\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Names of the binaries\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compiler flags\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Overrides for the default CPUFLAGS\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other build flags\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# nothing extra is needed\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# crt: libnix or clib2:\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# for extra missing headers\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# require 10.5 for 64 bit builds\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# nothing extra is needed\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Targets\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Rules for turning source files into .o files\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Objects\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "utils/texutils/lmp2pcx/Makefile" : {
      "ObjectId" : "cba98357c59d679c85f8d13e2bee8d081d679e90",
      "LastModified" : "2018-04-17T12:10:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile for hexen2 lmp2pcx tool using GCC.\n\n# $Id$\n\n#\n\n# To cross-compile for Win32 on Unix: either pass the W32BUILD=1\n\n# argument to make, or export it.  Also see build_cross_win32.sh.\n\n# Requires: a mingw or mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for Win64 on Unix: either pass the W64BUILD=1\n\n# argument to make, or export it. Also see build_cross_win64.sh.\n\n# Requires: a mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for MacOSX on Unix: either pass the OSXBUILD=1\n\n# argument to make, or export it.  You would also need to pass a\n\n# suitable MACH_TYPE=xxx (ppc, x86, x86_64, or ppc64) argument to\n\n# make. Also see build_cross_osx.sh.\n\n#\n\n# To build a debug version:\t\tmake DEBUG=1 [other stuff]\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Path settings:\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include the common dirty stuff\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Names of the binaries\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compiler flags\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Overrides for the default CPUFLAGS\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other build flags\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# nothing extra is needed\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# crt: libnix or clib2:\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# for extra missing headers\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# require 10.5 for 64 bit builds\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# nothing extra is needed\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Targets\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Rules for turning source files into .o files\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Objects\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "utils/vis/Makefile" : {
      "ObjectId" : "152f1e27c29370810291fa8d8e38d3730fb42854",
      "LastModified" : "2018-04-17T12:10:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Makefile for hexen2 mapping tools using GCC.\n\n# $Id$\n\n#\n\n# To cross-compile for Win32 on Unix: either pass the W32BUILD=1\n\n# argument to make, or export it.  Also see build_cross_win32.sh.\n\n# Requires: a mingw or mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for Win64 on Unix: either pass the W64BUILD=1\n\n# argument to make, or export it. Also see build_cross_win64.sh.\n\n# Requires: a mingw-w64 compiler toolchain.\n\n#\n\n# To cross-compile for MacOSX on Unix: either pass the OSXBUILD=1\n\n# argument to make, or export it.  You would also need to pass a\n\n# suitable MACH_TYPE=xxx (ppc, x86, x86_64, or ppc64) argument to\n\n# make. Also see build_cross_osx.sh.\n\n#\n\n# To build a debug version:\t\tmake DEBUG=1 [other stuff]\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Path settings:\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include the common dirty stuff\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Names of the binaries\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compiler flags\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Overrides for the default CPUFLAGS\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other build flags\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#LDFLAGS += -lm\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# nothing extra is needed\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# crt: libnix or clib2:\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# for extra missing headers\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# require 10.5 for 64 bit builds\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# threads: use sprocsp code for IRIX, pthreads for others.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Targets\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Rules for turning source files into .o files\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Objects\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 21
  },
  "ElapsedTime" : 4663
}